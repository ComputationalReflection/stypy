
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''
2: python _generate_pyx.py
3: 
4: Generate Ufunc definition source files for scipy.special.  Produces
5: files '_ufuncs.c' and '_ufuncs_cxx.c' by first producing Cython.
6: 
7: This will generate both calls to PyUFunc_FromFuncAndData and the
8: required ufunc inner loops.
9: 
10: The syntax in the ufunc signature list is
11: 
12:     <line>:           <ufunc_name> '--' <kernels> '--' <headers>
13:     <kernels>:        <function> [',' <function>]*
14:     <function>:       <name> ':' <input> '*' <output>
15:                         '->' <retval> '*' <ignored_retval>
16:     <input>:          <typecode>*
17:     <output>:         <typecode>*
18:     <retval>:         <typecode>?
19:     <ignored_retval>: <typecode>?
20:     <headers>:        <header_name> [',' <header_name>]*
21: 
22: The input parameter types are denoted by single character type
23: codes, according to
24: 
25:    'f': 'float'
26:    'd': 'double'
27:    'g': 'long double'
28:    'F': 'float complex'
29:    'D': 'double complex'
30:    'G': 'long double complex'
31:    'i': 'int'
32:    'l': 'long'
33:    'v': 'void'
34: 
35: If multiple kernel functions are given for a single ufunc, the one
36: which is used is determined by the standard ufunc mechanism. Kernel
37: functions that are listed first are also matched first against the
38: ufunc input types, so functions listed earlier take precedence.
39: 
40: In addition, versions with casted variables, such as d->f,D->F and
41: i->d are automatically generated.
42: 
43: There should be either a single header that contains all of the kernel
44: functions listed, or there should be one header for each kernel
45: function. Cython pxd files are allowed in addition to .h files.
46: 
47: Cython functions may use fused types, but the names in the list
48: should be the specialized ones, such as 'somefunc[float]'.
49: 
50: Function coming from C++ should have ``++`` appended to the name of
51: the header.
52: 
53: Floating-point exceptions inside these Ufuncs are converted to
54: special function errors --- which are separately controlled by the
55: user, and off by default, as they are usually not especially useful
56: for the user.
57: 
58: 
59: The C++ module
60: --------------
61: In addition to ``_ufuncs`` module, a second module ``_ufuncs_cxx`` is
62: generated. This module only exports function pointers that are to be
63: used when constructing some of the ufuncs in ``_ufuncs``. The function
64: pointers are exported via Cython's standard mechanism.
65: 
66: This mainly avoids build issues --- Python distutils has no way to
67: figure out what to do if you want to link both C++ and Fortran code in
68: the same shared library.
69: 
70: '''
71: 
72: from __future__ import division, print_function, absolute_import
73: 
74: #---------------------------------------------------------------------------------
75: # Special function listing
76: #---------------------------------------------------------------------------------
77: 
78: #
79: #
80: 
81: # Ufuncs without C++
82: FUNCS = '''
83: _sf_error_test_function -- _sf_error_test_function: i->i   -- sf_error.pxd
84: sph_harm -- sph_harmonic: iidd->D, sph_harmonic_unsafe: dddd->D -- sph_harm.pxd, _legacy.pxd
85: _lambertw -- lambertw_scalar: Dld->D                       -- lambertw.pxd
86: wrightomega -- wrightomega : D->D                          -- _wright.h++
87: _ellip_harm -- ellip_harmonic: ddiiddd->d, ellip_harmonic_unsafe: ddddddd->d --_ellip_harm.pxd, _legacy.pxd
88: logit -- logitf: f->f, logit: d->d, logitl: g->g           -- _logit.h
89: expit -- expitf: f->f, expit: d->d, expitl: g->g           -- _logit.h
90: bdtrc -- bdtrc: iid->d, bdtrc_unsafe: ddd->d               -- cephes.h, _legacy.pxd
91: bdtr -- bdtr: iid->d, bdtr_unsafe: ddd->d                  -- cephes.h, _legacy.pxd
92: bdtri -- bdtri: iid->d, bdtri_unsafe: ddd->d               -- cephes.h, _legacy.pxd
93: binom -- binom: dd->d                                      -- orthogonal_eval.pxd
94: btdtr -- btdtr: ddd->d                                     -- cephes.h
95: btdtri -- incbi: ddd->d                                    -- cephes.h
96: fdtrc -- fdtrc: ddd->d                                     -- cephes.h
97: fdtr -- fdtr: ddd->d                                       -- cephes.h
98: fdtri -- fdtri: ddd->d                                     -- cephes.h
99: gdtrc -- gdtrc: ddd->d                                     -- cephes.h
100: gdtr -- gdtr: ddd->d                                       -- cephes.h
101: hyp0f1 -- _hyp0f1_real: dd->d, _hyp0f1_cmplx: dD->D        -- _hyp0f1.pxd
102: hyp2f1 -- hyp2f1: dddd->d, chyp2f1_wrap: dddD->D           -- cephes.h, specfun_wrappers.h
103: hyp1f1 -- hyp1f1_wrap: ddd->d, chyp1f1_wrap: ddD->D        -- specfun_wrappers.h
104: hyperu -- hypU_wrap: ddd->d                                -- specfun_wrappers.h
105: hyp2f0 -- hyp2f0: dddi*d->d, hyp2f0_unsafe: dddd*d->d      -- cephes.h, _legacy.pxd
106: hyp1f2 -- onef2: dddd*d->d                                 -- cephes.h
107: hyp3f0 -- threef0: dddd*d->d                               -- cephes.h
108: betainc -- incbet: ddd->d                                  -- cephes.h
109: betaincinv -- incbi: ddd->d                                -- cephes.h
110: nbdtrc -- nbdtrc: iid->d, nbdtrc_unsafe: ddd->d            -- cephes.h, _legacy.pxd
111: nbdtr -- nbdtr: iid->d, nbdtr_unsafe: ddd->d               -- cephes.h, _legacy.pxd
112: nbdtri -- nbdtri: iid->d, nbdtri_unsafe: ddd->d            -- cephes.h, _legacy.pxd
113: beta -- beta: dd->d                                        -- cephes.h
114: betaln -- lbeta: dd->d                                     -- cephes.h
115: cbrt -- cbrt: d->d                                         -- cephes.h
116: chdtrc -- chdtrc: dd->d                                    -- cephes.h
117: chdtr -- chdtr: dd->d                                      -- cephes.h
118: chdtri -- chdtri: dd->d                                    -- cephes.h
119: ellipeinc -- ellie: dd->d                                  -- cephes.h
120: ellipkinc -- ellik: dd->d                                  -- cephes.h
121: ellipe -- ellpe: d->d                                      -- cephes.h
122: ellipkm1 -- ellpk: d->d                                    -- cephes.h
123: eval_jacobi --      eval_jacobi[double]: dddd->d,     eval_jacobi[double complex]: dddD->D,     eval_jacobi_l: lddd->d -- orthogonal_eval.pxd
124: eval_sh_jacobi --   eval_sh_jacobi[double]: dddd->d,  eval_sh_jacobi[double complex]: dddD->D,  eval_sh_jacobi_l: lddd->d -- orthogonal_eval.pxd
125: eval_gegenbauer --  eval_gegenbauer[double]: ddd->d,  eval_gegenbauer[double complex]: ddD->D,  eval_gegenbauer_l: ldd->d -- orthogonal_eval.pxd
126: eval_chebyt --      eval_chebyt[double]: dd->d,       eval_chebyt[double complex]: dD->D,       eval_chebyt_l: ld->d -- orthogonal_eval.pxd
127: eval_chebyu --      eval_chebyu[double]: dd->d,       eval_chebyu[double complex]: dD->D,       eval_chebyu_l: ld->d -- orthogonal_eval.pxd
128: eval_chebyc --      eval_chebyc[double]: dd->d,       eval_chebyc[double complex]: dD->D,       eval_chebyc_l: ld->d -- orthogonal_eval.pxd
129: eval_chebys --      eval_chebys[double]: dd->d,       eval_chebys[double complex]: dD->D,       eval_chebys_l: ld->d -- orthogonal_eval.pxd
130: eval_sh_chebyt --   eval_sh_chebyt[double]: dd->d,    eval_sh_chebyt[double complex]: dD->D,    eval_sh_chebyt_l:ld->d -- orthogonal_eval.pxd
131: eval_sh_chebyu --   eval_sh_chebyu[double]: dd->d,    eval_sh_chebyu[double complex]: dD->D,    eval_sh_chebyu_l:ld->d -- orthogonal_eval.pxd
132: eval_legendre --    eval_legendre[double]: dd->d,     eval_legendre[double complex]: dD->D,     eval_legendre_l: ld->d -- orthogonal_eval.pxd
133: eval_sh_legendre -- eval_sh_legendre[double]: dd->d,  eval_sh_legendre[double complex]: dD->D,  eval_sh_legendre_l:ld->d -- orthogonal_eval.pxd
134: eval_genlaguerre -- eval_genlaguerre[double]: ddd->d, eval_genlaguerre[double complex]: ddD->D, eval_genlaguerre_l:ldd->d -- orthogonal_eval.pxd
135: eval_laguerre --    eval_laguerre[double]: dd->d,     eval_laguerre[double complex]: dD->D,     eval_laguerre_l:ld->d -- orthogonal_eval.pxd
136: eval_hermite  -- eval_hermite: ld->d                       -- orthogonal_eval.pxd
137: eval_hermitenorm -- eval_hermitenorm: ld->d                -- orthogonal_eval.pxd
138: exp10 -- exp10: d->d                                       -- cephes.h
139: exp2 -- exp2: d->d                                         -- cephes.h
140: gamma -- Gamma: d->d, cgamma: D->D                         -- cephes.h, _loggamma.pxd
141: gammaln -- lgam: d->d                                      -- cephes.h
142: gammasgn -- gammasgn: d->d                                 -- c_misc/misc.h
143: i0 -- i0: d->d                                             -- cephes.h
144: i0e -- i0e: d->d                                           -- cephes.h
145: i1 -- i1: d->d                                             -- cephes.h
146: i1e -- i1e: d->d                                           -- cephes.h
147: gammaincc -- igamc: dd->d                                  -- cephes.h
148: gammainc -- igam: dd->d                                    -- cephes.h
149: gammaincinv -- gammaincinv: dd->d                          -- cephes.h
150: gammainccinv -- igami: dd->d                               -- cephes.h
151: iv -- iv: dd->d, cbesi_wrap: dD->D                         -- cephes.h, amos_wrappers.h
152: ive -- cbesi_wrap_e_real: dd->d, cbesi_wrap_e: dD->D       -- amos_wrappers.h
153: ellipj -- ellpj: dd*dddd->*i                               -- cephes.h
154: expn -- expn: id->d, expn_unsafe: dd->d                    -- cephes.h, _legacy.pxd
155: exp1 -- exp1_wrap: d->d, cexp1_wrap: D->D                  -- specfun_wrappers.h
156: expi -- expi_wrap: d->d, cexpi_wrap: D->D                  -- specfun_wrappers.h
157: kn -- cbesk_wrap_real_int: id->d, kn_unsafe: dd->d         -- cephes.h, _legacy.pxd
158: pdtrc -- pdtrc: id->d, pdtrc_unsafe: dd->d                 -- cephes.h, _legacy.pxd
159: pdtr -- pdtr: id->d, pdtr_unsafe: dd->d                    -- cephes.h, _legacy.pxd
160: pdtri -- pdtri: id->d, pdtri_unsafe: dd->d                 -- cephes.h, _legacy.pxd
161: yn -- yn: id->d, yn_unsafe: dd->d                          -- cephes.h, _legacy.pxd
162: smirnov -- smirnov: id->d, smirnov_unsafe: dd->d           -- cephes.h, _legacy.pxd
163: smirnovi -- smirnovi: id->d, smirnovi_unsafe: dd->d        -- cephes.h, _legacy.pxd
164: agm -- agm: dd->d                                          -- _agm.pxd
165: airy -- airy_wrap: d*dddd->*i, cairy_wrap: D*DDDD->*i      -- amos_wrappers.h
166: itairy -- itairy_wrap: d*dddd->*i                          -- specfun_wrappers.h
167: airye -- cairy_wrap_e_real: d*dddd->*i, cairy_wrap_e: D*DDDD->*i -- amos_wrappers.h
168: fresnel -- fresnl: d*dd->*i, cfresnl_wrap: D*DD->*i        -- cephes.h, specfun_wrappers.h
169: shichi -- shichi: d*dd->*i, cshichi: D*DD->*i              -- cephes.h, _sici.pxd
170: sici -- sici: d*dd->*i, csici: D*DD->*i                    -- cephes.h, _sici.pxd
171: itj0y0 -- it1j0y0_wrap: d*dd->*i                           -- specfun_wrappers.h
172: it2j0y0 -- it2j0y0_wrap: d*dd->*i                          -- specfun_wrappers.h
173: iti0k0 -- it1i0k0_wrap: d*dd->*i                           -- specfun_wrappers.h
174: it2i0k0 -- it2i0k0_wrap: d*dd->*i                          -- specfun_wrappers.h
175: j0 -- j0: d->d                                             -- cephes.h
176: y0 -- y0: d->d                                             -- cephes.h
177: j1 -- j1: d->d                                             -- cephes.h
178: y1 -- y1: d->d                                             -- cephes.h
179: jv -- cbesj_wrap_real: dd->d, cbesj_wrap: dD->D            -- amos_wrappers.h
180: jve -- cbesj_wrap_e_real: dd->d, cbesj_wrap_e: dD->D       -- amos_wrappers.h
181: yv -- cbesy_wrap_real: dd->d, cbesy_wrap: dD->D            -- amos_wrappers.h
182: yve -- cbesy_wrap_e_real: dd->d, cbesy_wrap_e: dD->D       -- amos_wrappers.h
183: k0 -- k0: d->d                                             -- cephes.h
184: k0e -- k0e: d->d                                           -- cephes.h
185: k1 -- k1: d->d                                             -- cephes.h
186: k1e -- k1e: d->d                                           -- cephes.h
187: kv -- cbesk_wrap_real: dd->d, cbesk_wrap: dD->D            -- amos_wrappers.h
188: kve -- cbesk_wrap_e_real: dd->d, cbesk_wrap_e: dD->D       -- amos_wrappers.h
189: hankel1 -- cbesh_wrap1: dD->D                              -- amos_wrappers.h
190: hankel1e -- cbesh_wrap1_e: dD->D                           -- amos_wrappers.h
191: hankel2 -- cbesh_wrap2: dD->D                              -- amos_wrappers.h
192: hankel2e -- cbesh_wrap2_e: dD->D                           -- amos_wrappers.h
193: ndtr -- ndtr: d->d, faddeeva_ndtr: D->D                    -- cephes.h, _faddeeva.h++
194: log_ndtr -- log_ndtr: d->d, faddeeva_log_ndtr: D->D        -- cephes.h, _faddeeva.h++
195: ndtri -- ndtri: d->d                                       -- cephes.h
196: psi -- digamma: d->d, cdigamma: D->D                       -- _digamma.pxd, _digamma.pxd
197: rgamma -- rgamma: d->d, crgamma: D->D                      -- cephes.h, _loggamma.pxd
198: round -- round: d->d                                       -- cephes.h
199: sindg -- sindg: d->d                                       -- cephes.h
200: cosdg -- cosdg: d->d                                       -- cephes.h
201: radian -- radian: ddd->d                                   -- cephes.h
202: tandg -- tandg: d->d                                       -- cephes.h
203: cotdg -- cotdg: d->d                                       -- cephes.h
204: log1p -- log1p: d->d, clog1p: D->D                         -- cephes.h, _cunity.pxd
205: expm1 -- expm1: d->d, cexpm1: D->D                         -- cephes.h, _cunity.pxd
206: cosm1 -- cosm1: d->d                                       -- cephes.h
207: spence -- spence: d->d, cspence: D-> D                     -- cephes.h, _spence.pxd
208: zetac -- zetac: d->d                                       -- cephes.h
209: struve -- struve_h: dd->d                                  -- misc.h
210: modstruve -- struve_l: dd->d                               -- misc.h
211: _struve_power_series -- struve_power_series:  ddi*d->d     -- misc.h
212: _struve_asymp_large_z -- struve_asymp_large_z: ddi*d->d    -- misc.h
213: _struve_bessel_series -- struve_bessel_series: ddi*d->d    -- misc.h
214: itstruve0 -- itstruve0_wrap: d->d                          -- specfun_wrappers.h
215: it2struve0 -- it2struve0_wrap: d->d                        -- specfun_wrappers.h
216: itmodstruve0 -- itmodstruve0_wrap: d->d                    -- specfun_wrappers.h
217: kelvin -- kelvin_wrap: d*DDDD->*i                          -- specfun_wrappers.h
218: ber -- ber_wrap: d->d                                      -- specfun_wrappers.h
219: bei -- bei_wrap: d->d                                      -- specfun_wrappers.h
220: ker -- ker_wrap: d->d                                      -- specfun_wrappers.h
221: kei -- kei_wrap: d->d                                      -- specfun_wrappers.h
222: berp -- berp_wrap: d->d                                    -- specfun_wrappers.h
223: beip -- beip_wrap: d->d                                    -- specfun_wrappers.h
224: kerp -- kerp_wrap: d->d                                    -- specfun_wrappers.h
225: keip -- keip_wrap: d->d                                    -- specfun_wrappers.h
226: _zeta -- zeta: dd->d                                       -- cephes.h
227: kolmogorov -- kolmogorov: d->d                             -- cephes.h
228: kolmogi -- kolmogi: d->d                                   -- cephes.h
229: besselpoly -- besselpoly: ddd->d                           -- c_misc/misc.h
230: btdtria -- cdfbet3_wrap: ddd->d                            -- cdf_wrappers.h
231: btdtrib -- cdfbet4_wrap: ddd->d                            -- cdf_wrappers.h
232: bdtrik -- cdfbin2_wrap: ddd->d                             -- cdf_wrappers.h
233: bdtrin -- cdfbin3_wrap: ddd->d                             -- cdf_wrappers.h
234: chdtriv -- cdfchi3_wrap: dd->d                             -- cdf_wrappers.h
235: chndtr -- cdfchn1_wrap: ddd->d                             -- cdf_wrappers.h
236: chndtrix -- cdfchn2_wrap: ddd->d                           -- cdf_wrappers.h
237: chndtridf -- cdfchn3_wrap: ddd->d                          -- cdf_wrappers.h
238: chndtrinc -- cdfchn4_wrap: ddd->d                          -- cdf_wrappers.h
239: fdtridfd -- cdff4_wrap: ddd->d                             -- cdf_wrappers.h
240: ncfdtr -- cdffnc1_wrap: dddd->d                            -- cdf_wrappers.h
241: ncfdtri -- cdffnc2_wrap: dddd->d                           -- cdf_wrappers.h
242: ncfdtridfn -- cdffnc3_wrap: dddd->d                        -- cdf_wrappers.h
243: ncfdtridfd -- cdffnc4_wrap: dddd->d                        -- cdf_wrappers.h
244: ncfdtrinc -- cdffnc5_wrap: dddd->d                         -- cdf_wrappers.h
245: gdtrix -- cdfgam2_wrap: ddd->d                             -- cdf_wrappers.h
246: gdtrib -- cdfgam3_wrap: ddd->d                             -- cdf_wrappers.h
247: gdtria -- cdfgam4_wrap: ddd->d                             -- cdf_wrappers.h
248: nbdtrik -- cdfnbn2_wrap: ddd->d                            -- cdf_wrappers.h
249: nbdtrin -- cdfnbn3_wrap: ddd->d                            -- cdf_wrappers.h
250: nrdtrimn -- cdfnor3_wrap: ddd->d                           -- cdf_wrappers.h
251: nrdtrisd -- cdfnor4_wrap: ddd->d                           -- cdf_wrappers.h
252: pdtrik -- cdfpoi2_wrap: dd->d                              -- cdf_wrappers.h
253: stdtr -- cdft1_wrap: dd->d                                 -- cdf_wrappers.h
254: stdtrit -- cdft2_wrap: dd->d                               -- cdf_wrappers.h
255: stdtridf -- cdft3_wrap: dd->d                              -- cdf_wrappers.h
256: nctdtr -- cdftnc1_wrap: ddd->d                             -- cdf_wrappers.h
257: nctdtrit -- cdftnc2_wrap: ddd->d                           -- cdf_wrappers.h
258: nctdtridf -- cdftnc3_wrap: ddd->d                          -- cdf_wrappers.h
259: nctdtrinc -- cdftnc4_wrap: ddd->d                          -- cdf_wrappers.h
260: tklmbda -- tukeylambdacdf: dd->d                           -- cdf_wrappers.h
261: mathieu_a -- cem_cva_wrap: dd->d                           -- specfun_wrappers.h
262: mathieu_b -- sem_cva_wrap: dd->d                           -- specfun_wrappers.h
263: mathieu_cem -- cem_wrap: ddd*dd->*i                        -- specfun_wrappers.h
264: mathieu_sem -- sem_wrap: ddd*dd->*i                        -- specfun_wrappers.h
265: mathieu_modcem1 -- mcm1_wrap: ddd*dd->*i                   -- specfun_wrappers.h
266: mathieu_modcem2 -- mcm2_wrap: ddd*dd->*i                   -- specfun_wrappers.h
267: mathieu_modsem1 -- msm1_wrap: ddd*dd->*i                   -- specfun_wrappers.h
268: mathieu_modsem2 -- msm2_wrap: ddd*dd->*i                   -- specfun_wrappers.h
269: lpmv -- pmv_wrap: ddd->d                                   -- specfun_wrappers.h
270: pbwa -- pbwa_wrap: dd*dd->*i                               -- specfun_wrappers.h
271: pbdv -- pbdv_wrap: dd*dd->*i                               -- specfun_wrappers.h
272: pbvv -- pbvv_wrap: dd*dd->*i                               -- specfun_wrappers.h
273: pro_cv -- prolate_segv_wrap: ddd->d                        -- specfun_wrappers.h
274: obl_cv -- oblate_segv_wrap: ddd->d                         -- specfun_wrappers.h
275: pro_ang1_cv -- prolate_aswfa_wrap: ddddd*dd->*i            -- specfun_wrappers.h
276: pro_rad1_cv -- prolate_radial1_wrap: ddddd*dd->*i          -- specfun_wrappers.h
277: pro_rad2_cv -- prolate_radial2_wrap: ddddd*dd->*i          -- specfun_wrappers.h
278: obl_ang1_cv -- oblate_aswfa_wrap: ddddd*dd->*i             -- specfun_wrappers.h
279: obl_rad1_cv -- oblate_radial1_wrap: ddddd*dd->*i           -- specfun_wrappers.h
280: obl_rad2_cv -- oblate_radial2_wrap: ddddd*dd->*i           -- specfun_wrappers.h
281: pro_ang1 -- prolate_aswfa_nocv_wrap: dddd*d->d             -- specfun_wrappers.h
282: pro_rad1 -- prolate_radial1_nocv_wrap: dddd*d->d           -- specfun_wrappers.h
283: pro_rad2 -- prolate_radial2_nocv_wrap: dddd*d->d           -- specfun_wrappers.h
284: obl_ang1 -- oblate_aswfa_nocv_wrap: dddd*d->d              -- specfun_wrappers.h
285: obl_rad1 -- oblate_radial1_nocv_wrap: dddd*d->d            -- specfun_wrappers.h
286: obl_rad2 -- oblate_radial2_nocv_wrap: dddd*d->d            -- specfun_wrappers.h
287: modfresnelp -- modified_fresnel_plus_wrap: d*DD->*i        -- specfun_wrappers.h
288: modfresnelm -- modified_fresnel_minus_wrap: d*DD->*i       -- specfun_wrappers.h
289: wofz -- faddeeva_w: D->D                                   -- _faddeeva.h++
290: erfc -- erfc: d->d, faddeeva_erfc: D->D                    -- cephes.h, _faddeeva.h++
291: erf -- erf: d->d, faddeeva_erf: D->D                       -- cephes.h, _faddeeva.h++
292: dawsn -- faddeeva_dawsn: d->d, faddeeva_dawsn_complex: D->D -- _faddeeva.h++
293: erfcx -- faddeeva_erfcx: d->d, faddeeva_erfcx_complex: D->D -- _faddeeva.h++
294: erfi -- faddeeva_erfi: d->d, faddeeva_erfi_complex: D->D   -- _faddeeva.h++
295: xlogy -- xlogy[double]: dd->d, xlogy[double_complex]: DD->D -- _xlogy.pxd
296: xlog1py -- xlog1py[double]: dd->d, xlog1py[double_complex]: DD->D   -- _xlogy.pxd
297: poch -- poch: dd->d                                        -- c_misc/misc.h
298: boxcox -- boxcox: dd->d                                    -- _boxcox.pxd
299: boxcox1p -- boxcox1p: dd->d                                -- _boxcox.pxd
300: inv_boxcox -- inv_boxcox: dd->d                            -- _boxcox.pxd
301: inv_boxcox1p -- inv_boxcox1p: dd->d                        -- _boxcox.pxd
302: entr -- entr: d->d                                         -- _convex_analysis.pxd
303: kl_div -- kl_div: dd->d                                    -- _convex_analysis.pxd
304: rel_entr -- rel_entr: dd->d                                -- _convex_analysis.pxd
305: huber -- huber: dd->d                                      -- _convex_analysis.pxd
306: pseudo_huber -- pseudo_huber: dd->d                        -- _convex_analysis.pxd
307: exprel -- exprel: d->d                                     -- _exprel.pxd
308: _spherical_yn -- spherical_yn_real: ld->d, spherical_yn_complex: lD->D -- _spherical_bessel.pxd
309: _spherical_jn -- spherical_jn_real: ld->d, spherical_jn_complex: lD->D -- _spherical_bessel.pxd
310: _spherical_in -- spherical_in_real: ld->d, spherical_in_complex: lD->D -- _spherical_bessel.pxd
311: _spherical_kn -- spherical_kn_real: ld->d, spherical_kn_complex: lD->D -- _spherical_bessel.pxd
312: _spherical_yn_d -- spherical_yn_d_real: ld->d, spherical_yn_d_complex: lD->D -- _spherical_bessel.pxd
313: _spherical_jn_d -- spherical_jn_d_real: ld->d, spherical_jn_d_complex: lD->D -- _spherical_bessel.pxd
314: _spherical_in_d -- spherical_in_d_real: ld->d, spherical_in_d_complex: lD->D -- _spherical_bessel.pxd
315: _spherical_kn_d -- spherical_kn_d_real: ld->d, spherical_kn_d_complex: lD->D -- _spherical_bessel.pxd
316: loggamma -- loggamma: D->D                                 -- _loggamma.pxd
317: _sinpi -- dsinpi: d->d, csinpi: D->D                       -- _trig.pxd
318: _cospi -- dcospi: d->d, ccospi: D->D                       -- _trig.pxd
319: _lgam1p -- lgam1p: d->d                                    -- cephes.h
320: _lanczos_sum_expg_scaled -- lanczos_sum_expg_scaled: d->d  -- cephes.h
321: _log1pmx -- log1pmx: d->d                                  -- cephes.h
322: _igam_fac -- igam_fac: dd->d                               -- cephes.h
323: '''
324: 
325: #---------------------------------------------------------------------------------
326: # Extra code
327: #---------------------------------------------------------------------------------
328: 
329: UFUNCS_EXTRA_CODE_COMMON = '''\
330: # This file is automatically generated by generate_ufuncs.py.
331: # Do not edit manually!
332: from __future__ import absolute_import
333: 
334: include "_ufuncs_extra_code_common.pxi"
335: '''
336: 
337: UFUNCS_EXTRA_CODE = '''\
338: include "_ufuncs_extra_code.pxi"
339: '''
340: 
341: UFUNCS_EXTRA_CODE_BOTTOM = '''\
342: #
343: # Aliases
344: #
345: jn = jv
346: '''
347: 
348: CYTHON_SPECIAL_PXD = '''\
349: # This file is automatically generated by generate_ufuncs.py.
350: # Do not edit manually!
351: '''
352: 
353: CYTHON_SPECIAL_PYX = '''\
354: # This file is automatically generated by generate_ufuncs.py.
355: # Do not edit manually!
356: \"\"\"
357: .. highlight:: cython
358: 
359: ================================
360: Cython API for Special Functions
361: ================================
362: 
363: Scalar, typed versions of many of the functions in ``scipy.special``
364: can be accessed directly from Cython; the complete list is given
365: below. Functions are overloaded using Cython fused types so their
366: names match their ufunc counterpart. The module follows the following
367: conventions:
368: 
369: - If a function's ufunc counterpart returns multiple values, then the
370:   function returns its outputs via pointers in the final arguments
371: - If a function's ufunc counterpart returns a single value, then the
372:   function's output is returned directly.
373: 
374: The module is usable from Cython via::
375: 
376:     cimport scipy.special.cython_special
377: 
378: Error Handling
379: ==============
380: 
381: Functions can indicate an error by returning ``nan``; however they
382: cannot emit warnings like their counterparts in ``scipy.special``.
383: 
384: Available Functions
385: ===================
386: 
387: FUNCLIST
388: \"\"\"
389: 
390: from __future__ import absolute_import
391: include "_cython_special.pxi"
392: '''
393: 
394: 
395: #---------------------------------------------------------------------------------
396: # Code generation
397: #---------------------------------------------------------------------------------
398: 
399: import os
400: import optparse
401: import re
402: import textwrap
403: import itertools
404: import numpy
405: 
406: 
407: BASE_DIR = os.path.abspath(os.path.dirname(__file__))
408: 
409: add_newdocs = __import__('add_newdocs')
410: 
411: CY_TYPES = {
412:     'f': 'float',
413:     'd': 'double',
414:     'g': 'long double',
415:     'F': 'float complex',
416:     'D': 'double complex',
417:     'G': 'long double complex',
418:     'i': 'int',
419:     'l': 'long',
420:     'v': 'void',
421: }
422: 
423: C_TYPES = {
424:     'f': 'npy_float',
425:     'd': 'npy_double',
426:     'g': 'npy_longdouble',
427:     'F': 'npy_cfloat',
428:     'D': 'npy_cdouble',
429:     'G': 'npy_clongdouble',
430:     'i': 'npy_int',
431:     'l': 'npy_long',
432:     'v': 'void',
433: }
434: 
435: TYPE_NAMES = {
436:     'f': 'NPY_FLOAT',
437:     'd': 'NPY_DOUBLE',
438:     'g': 'NPY_LONGDOUBLE',
439:     'F': 'NPY_CFLOAT',
440:     'D': 'NPY_CDOUBLE',
441:     'G': 'NPY_CLONGDOUBLE',
442:     'i': 'NPY_INT',
443:     'l': 'NPY_LONG',
444: }
445: 
446: CYTHON_SPECIAL_BENCHFUNCS = {
447:     'airy': ['d*dddd', 'D*DDDD'],
448:     'beta': ['dd'],
449:     'erf': ['d', 'D'],
450:     'exprel': ['d'],
451:     'gamma': ['d', 'D'],
452:     'jv': ['dd', 'dD'],
453:     'loggamma': ['D'],
454:     'logit': ['d'],
455:     'psi': ['d', 'D'],
456: }
457: 
458: 
459: def underscore(arg):
460:     return arg.replace(" ", "_")
461: 
462: 
463: def cast_order(c):
464:     return ['ilfdgFDG'.index(x) for x in c]
465: 
466: # These downcasts will cause the function to return NaNs, unless the
467: # values happen to coincide exactly.
468: DANGEROUS_DOWNCAST = set([
469:     ('F', 'i'), ('F', 'l'), ('F', 'f'), ('F', 'd'), ('F', 'g'),
470:     ('D', 'i'), ('D', 'l'), ('D', 'f'), ('D', 'd'), ('D', 'g'),
471:     ('G', 'i'), ('G', 'l'), ('G', 'f'), ('G', 'd'), ('G', 'g'),
472:     ('f', 'i'), ('f', 'l'),
473:     ('d', 'i'), ('d', 'l'),
474:     ('g', 'i'), ('g', 'l'),
475:     ('l', 'i'),
476: ])
477: 
478: NAN_VALUE = {
479:     'f': 'NPY_NAN',
480:     'd': 'NPY_NAN',
481:     'g': 'NPY_NAN',
482:     'F': 'NPY_NAN',
483:     'D': 'NPY_NAN',
484:     'G': 'NPY_NAN',
485:     'i': '0xbad0bad0',
486:     'l': '0xbad0bad0',
487: }
488: 
489: 
490: def generate_loop(func_inputs, func_outputs, func_retval,
491:                   ufunc_inputs, ufunc_outputs):
492:     '''
493:     Generate a UFunc loop function that calls a function given as its
494:     data parameter with the specified input and output arguments and
495:     return value.
496: 
497:     This function can be passed to PyUFunc_FromFuncAndData.
498: 
499:     Parameters
500:     ----------
501:     func_inputs, func_outputs, func_retval : str
502:         Signature of the function to call, given as type codes of the
503:         input, output and return value arguments. These 1-character
504:         codes are given according to the CY_TYPES and TYPE_NAMES
505:         lists above.
506: 
507:         The corresponding C function signature to be called is:
508: 
509:             retval func(intype1 iv1, intype2 iv2, ..., outtype1 *ov1, ...);
510: 
511:         If len(ufunc_outputs) == len(func_outputs)+1, the return value
512:         is treated as the first output argument. Otherwise, the return
513:         value is ignored.
514: 
515:     ufunc_inputs, ufunc_outputs : str
516:         Ufunc input and output signature.
517: 
518:         This does not have to exactly match the function signature,
519:         as long as the type casts work out on the C level.
520: 
521:     Returns
522:     -------
523:     loop_name
524:         Name of the generated loop function.
525:     loop_body
526:         Generated C code for the loop.
527: 
528:     '''
529:     if len(func_inputs) != len(ufunc_inputs):
530:         raise ValueError("Function and ufunc have different number of inputs")
531: 
532:     if len(func_outputs) != len(ufunc_outputs) and not (
533:             func_retval != "v" and len(func_outputs)+1 == len(ufunc_outputs)):
534:         raise ValueError("Function retval and ufunc outputs don't match")
535: 
536:     name = "loop_%s_%s_%s_As_%s_%s" % (
537:         func_retval, func_inputs, func_outputs, ufunc_inputs, ufunc_outputs
538:         )
539:     body = "cdef void %s(char **args, np.npy_intp *dims, np.npy_intp *steps, void *data) nogil:\n" % name
540:     body += "    cdef np.npy_intp i, n = dims[0]\n"
541:     body += "    cdef void *func = (<void**>data)[0]\n"
542:     body += "    cdef char *func_name = <char*>(<void**>data)[1]\n"
543: 
544:     for j in range(len(ufunc_inputs)):
545:         body += "    cdef char *ip%d = args[%d]\n" % (j, j)
546:     for j in range(len(ufunc_outputs)):
547:         body += "    cdef char *op%d = args[%d]\n" % (j, j + len(ufunc_inputs))
548: 
549:     ftypes = []
550:     fvars = []
551:     outtypecodes = []
552:     for j in range(len(func_inputs)):
553:         ftypes.append(CY_TYPES[func_inputs[j]])
554:         fvars.append("<%s>(<%s*>ip%d)[0]" % (
555:             CY_TYPES[func_inputs[j]],
556:             CY_TYPES[ufunc_inputs[j]], j))
557: 
558:     if len(func_outputs)+1 == len(ufunc_outputs):
559:         func_joff = 1
560:         outtypecodes.append(func_retval)
561:         body += "    cdef %s ov0\n" % (CY_TYPES[func_retval],)
562:     else:
563:         func_joff = 0
564: 
565:     for j, outtype in enumerate(func_outputs):
566:         body += "    cdef %s ov%d\n" % (CY_TYPES[outtype], j+func_joff)
567:         ftypes.append("%s *" % CY_TYPES[outtype])
568:         fvars.append("&ov%d" % (j+func_joff))
569:         outtypecodes.append(outtype)
570: 
571:     body += "    for i in range(n):\n"
572:     if len(func_outputs)+1 == len(ufunc_outputs):
573:         rv = "ov0 = "
574:     else:
575:         rv = ""
576: 
577:     funcall = "        %s(<%s(*)(%s) nogil>func)(%s)\n" % (
578:         rv, CY_TYPES[func_retval], ", ".join(ftypes), ", ".join(fvars))
579: 
580:     # Cast-check inputs and call function
581:     input_checks = []
582:     for j in range(len(func_inputs)):
583:         if (ufunc_inputs[j], func_inputs[j]) in DANGEROUS_DOWNCAST:
584:             chk = "<%s>(<%s*>ip%d)[0] == (<%s*>ip%d)[0]" % (
585:                 CY_TYPES[func_inputs[j]], CY_TYPES[ufunc_inputs[j]], j,
586:                 CY_TYPES[ufunc_inputs[j]], j)
587:             input_checks.append(chk)
588: 
589:     if input_checks:
590:         body += "        if %s:\n" % (" and ".join(input_checks))
591:         body += "    " + funcall
592:         body += "        else:\n"
593:         body += "            sf_error.error(func_name, sf_error.DOMAIN, \"invalid input argument\")\n"
594:         for j, outtype in enumerate(outtypecodes):
595:             body += "            ov%d = <%s>%s\n" % (
596:                 j, CY_TYPES[outtype], NAN_VALUE[outtype])
597:     else:
598:         body += funcall
599: 
600:     # Assign and cast-check output values
601:     for j, (outtype, fouttype) in enumerate(zip(ufunc_outputs, outtypecodes)):
602:         if (fouttype, outtype) in DANGEROUS_DOWNCAST:
603:             body += "        if ov%d == <%s>ov%d:\n" % (j, CY_TYPES[outtype], j)
604:             body += "            (<%s *>op%d)[0] = <%s>ov%d\n" % (
605:                 CY_TYPES[outtype], j, CY_TYPES[outtype], j)
606:             body += "        else:\n"
607:             body += "            sf_error.error(func_name, sf_error.DOMAIN, \"invalid output\")\n"
608:             body += "            (<%s *>op%d)[0] = <%s>%s\n" % (
609:                 CY_TYPES[outtype], j, CY_TYPES[outtype], NAN_VALUE[outtype])
610:         else:
611:             body += "        (<%s *>op%d)[0] = <%s>ov%d\n" % (
612:                 CY_TYPES[outtype], j, CY_TYPES[outtype], j)
613:     for j in range(len(ufunc_inputs)):
614:         body += "        ip%d += steps[%d]\n" % (j, j)
615:     for j in range(len(ufunc_outputs)):
616:         body += "        op%d += steps[%d]\n" % (j, j + len(ufunc_inputs))
617: 
618:     body += "    sf_error.check_fpe(func_name)\n"
619: 
620:     return name, body
621: 
622: 
623: def generate_fused_type(codes):
624:     '''
625:     Generate name of and cython code for a fused type.
626: 
627:     Parameters
628:     ----------
629:     typecodes : str
630:         Valid inputs to CY_TYPES (i.e. f, d, g, ...).
631: 
632:     '''
633:     cytypes = map(lambda x: CY_TYPES[x], codes)
634:     name = codes + "_number_t"
635:     declaration = ["ctypedef fused " + name + ":"]
636:     for cytype in cytypes:
637:         declaration.append("    " + cytype)
638:     declaration = "\n".join(declaration)
639:     return name, declaration
640: 
641: 
642: def generate_bench(name, codes):
643:     tab = " "*4
644:     top, middle, end = [], [], []
645: 
646:     tmp = codes.split("*")
647:     if len(tmp) > 1:
648:         incodes = tmp[0]
649:         outcodes = tmp[1]
650:     else:
651:         incodes = tmp[0]
652:         outcodes = ""
653: 
654:     inargs, inargs_and_types = [], []
655:     for n, code in enumerate(incodes):
656:         arg = "x{}".format(n)
657:         inargs.append(arg)
658:         inargs_and_types.append("{} {}".format(CY_TYPES[code], arg))
659:     line = "def {{}}(int N, {}):".format(", ".join(inargs_and_types))
660:     top.append(line)
661:     top.append(tab + "cdef int n")
662: 
663:     outargs = []
664:     for n, code in enumerate(outcodes):
665:         arg = "y{}".format(n)
666:         outargs.append("&{}".format(arg))
667:         line = "cdef {} {}".format(CY_TYPES[code], arg)
668:         middle.append(tab + line)
669: 
670:     end.append(tab + "for n in range(N):")
671:     end.append(2*tab + "{}({})")
672:     pyfunc = "_bench_{}_{}_{}".format(name, incodes, "py")
673:     cyfunc = "_bench_{}_{}_{}".format(name, incodes, "cy")
674:     pytemplate = "\n".join(top + end)
675:     cytemplate = "\n".join(top + middle + end)
676:     pybench = pytemplate.format(pyfunc, "_ufuncs." + name, ", ".join(inargs))
677:     cybench = cytemplate.format(cyfunc, name, ", ".join(inargs + outargs))
678:     return pybench, cybench
679: 
680: 
681: def generate_doc(name, specs):
682:     tab = " "*4
683:     doc = ["- :py:func:`~scipy.special.{}`::\n".format(name)]
684:     for spec in specs:
685:         incodes, outcodes = spec.split("->")
686:         incodes = incodes.split("*")
687:         intypes = list(map(lambda x: CY_TYPES[x], incodes[0]))
688:         if len(incodes) > 1:
689:             types = map(lambda x: "{} *".format(CY_TYPES[x]), incodes[1])
690:             intypes.extend(types)
691:         outtype = CY_TYPES[outcodes]
692:         line = "{} {}({})".format(outtype, name, ", ".join(intypes))
693:         doc.append(2*tab + line)
694:     doc[-1] = "{}\n".format(doc[-1])
695:     doc = "\n".join(doc)
696:     return doc
697: 
698: 
699: def npy_cdouble_from_double_complex(var):
700:     '''Cast a cython double complex to a numpy cdouble.'''
701:     res = "_complexstuff.npy_cdouble_from_double_complex({})".format(var)
702:     return res
703: 
704: 
705: def double_complex_from_npy_cdouble(var):
706:     '''Cast a numpy cdouble to a cython double complex.'''
707:     res = "_complexstuff.double_complex_from_npy_cdouble({})".format(var)
708:     return res
709: 
710: 
711: def iter_variants(inputs, outputs):
712:     '''
713:     Generate variants of UFunc signatures, by changing variable types,
714:     within the limitation that the corresponding C types casts still
715:     work out.
716: 
717:     This does not generate all possibilities, just the ones required
718:     for the ufunc to work properly with the most common data types.
719: 
720:     Parameters
721:     ----------
722:     inputs, outputs : str
723:         UFunc input and output signature strings
724: 
725:     Yields
726:     ------
727:     new_input, new_output : str
728:         Modified input and output strings.
729:         Also the original input/output pair is yielded.
730: 
731:     '''
732:     maps = [
733:         # always use long instead of int (more common type on 64-bit)
734:         ('i', 'l'),
735:     ]
736: 
737:     # float32-preserving signatures
738:     if not ('i' in inputs or 'l' in inputs):
739:         # Don't add float32 versions of ufuncs with integer arguments, as this
740:         # can lead to incorrect dtype selection if the integer arguments are
741:         # arrays, but float arguments are scalars.
742:         # For instance sph_harm(0,[0],0,0).dtype == complex64
743:         # This may be a Numpy bug, but we need to work around it.
744:         # cf. gh-4895, https://github.com/numpy/numpy/issues/5895
745:         maps = maps + [(a + 'dD', b + 'fF') for a, b in maps]
746: 
747:     # do the replacements
748:     for src, dst in maps:
749:         new_inputs = inputs
750:         new_outputs = outputs
751:         for a, b in zip(src, dst):
752:             new_inputs = new_inputs.replace(a, b)
753:             new_outputs = new_outputs.replace(a, b)
754:         yield new_inputs, new_outputs
755: 
756: 
757: class Func(object):
758:     '''
759:     Base class for Ufunc and FusedFunc.
760: 
761:     '''
762:     def __init__(self, name, signatures, headers):
763:         self.name = name
764:         self.signatures = self._parse_signatures(signatures, headers)
765:         self.function_name_overrides = {}
766: 
767:     def _parse_signatures(self, sigs_str, headers_str):
768:         sigs = [x.strip() for x in sigs_str.split(",") if x.strip()]
769:         headers = [x.strip() for x in headers_str.split(",") if x.strip()]
770:         if len(headers) == 1:
771:             headers = headers * len(sigs)
772:         if len(headers) != len(sigs):
773:             raise ValueError("%s: Number of headers and signatures doesn't match: %r -- %r" % (
774:                 self.name, sigs_str, headers_str))
775:         return [self._parse_signature(x) + (h,) for x, h in zip(sigs, headers)]
776: 
777:     def _parse_signature(self, sig):
778:         m = re.match(r"\s*(.*):\s*([fdgFDGil]*)\s*\*\s*([fdgFDGil]*)\s*->\s*([*fdgFDGil]*)\s*$", sig)
779:         if m:
780:             func, inarg, outarg, ret = [x.strip() for x in m.groups()]
781:             if ret.count('*') > 1:
782:                 raise ValueError("%s: Invalid signature: %r" % (self.name, sig))
783:             return (func, inarg, outarg, ret)
784:         m = re.match(r"\s*(.*):\s*([fdgFDGil]*)\s*->\s*([fdgFDGil]?)\s*$", sig)
785:         if m:
786:             func, inarg, ret = [x.strip() for x in m.groups()]
787:             return (func, inarg, "", ret)
788:         raise ValueError("%s: Invalid signature: %r" % (self.name, sig))
789: 
790:     def get_prototypes(self, nptypes_for_h=False):
791:         prototypes = []
792:         for func_name, inarg, outarg, ret, header in self.signatures:
793:             ret = ret.replace('*', '')
794:             c_args = ([C_TYPES[x] for x in inarg]
795:                       + [C_TYPES[x] + ' *' for x in outarg])
796:             cy_args = ([CY_TYPES[x] for x in inarg]
797:                        + [CY_TYPES[x] + ' *' for x in outarg])
798:             c_proto = "%s (*)(%s)" % (C_TYPES[ret], ", ".join(c_args))
799:             if header.endswith("h") and nptypes_for_h:
800:                 cy_proto = c_proto + "nogil"
801:             else:
802:                 cy_proto = "%s (*)(%s) nogil" % (CY_TYPES[ret], ", ".join(cy_args))
803:             prototypes.append((func_name, c_proto, cy_proto, header))
804:         return prototypes
805: 
806:     def cython_func_name(self, c_name, specialized=False, prefix="_func_",
807:                          override=True):
808:         # act on function name overrides
809:         if override and c_name in self.function_name_overrides:
810:             c_name = self.function_name_overrides[c_name]
811:             prefix = ""
812: 
813:         # support fused types
814:         m = re.match(r'^(.*?)(\[.*\])$', c_name)
815:         if m:
816:             c_base_name, fused_part = m.groups()
817:         else:
818:             c_base_name, fused_part = c_name, ""
819:         if specialized:
820:             return "%s%s%s" % (prefix, c_base_name, fused_part.replace(' ', '_'))
821:         else:
822:             return "%s%s" % (prefix, c_base_name,)
823: 
824:     @classmethod
825:     def parse_all(cls, ufunc_str):
826:         ufuncs = []
827: 
828:         lines = ufunc_str.splitlines()
829:         lines.sort()
830: 
831:         for line in lines:
832:             line = line.strip()
833:             if not line:
834:                 continue
835:             m = re.match(r"^([a-z0-9_]+)\s*--\s*(.*?)\s*--(.*)$", line)
836:             if not m:
837:                 raise ValueError("Unparseable line %r" % line)
838:             ufuncs.append(cls(m.group(1), m.group(2), m.group(3)))
839:         return ufuncs
840: 
841: 
842: class Ufunc(Func):
843:     '''
844:     Ufunc signature, restricted format suitable for special functions.
845: 
846:     Parameters
847:     ----------
848:     name
849:         Name of the ufunc to create
850:     signature
851:         String of form 'func: fff*ff->f, func2: ddd->*i' describing
852:         the C-level functions and types of their input arguments
853:         and return values.
854: 
855:         The syntax is 'function_name: inputparams*outputparams->output_retval*ignored_retval'
856: 
857:     Attributes
858:     ----------
859:     name : str
860:         Python name for the Ufunc
861:     signatures : list of (func_name, inarg_spec, outarg_spec, ret_spec, header_name)
862:         List of parsed signatures
863:     doc : str
864:         Docstring, obtained from add_newdocs
865:     function_name_overrides : dict of str->str
866:         Overrides for the function names in signatures
867: 
868:     '''
869:     def __init__(self, name, signatures, headers):
870:         super(Ufunc, self).__init__(name, signatures, headers)
871:         self.doc = add_newdocs.get("scipy.special." + name)
872:         if self.doc is None:
873:             raise ValueError("No docstring for ufunc %r" % name)
874:         self.doc = textwrap.dedent(self.doc).strip()
875: 
876:     def _get_signatures_and_loops(self, all_loops):
877:         inarg_num = None
878:         outarg_num = None
879: 
880:         seen = set()
881:         variants = []
882: 
883:         def add_variant(func_name, inarg, outarg, ret, inp, outp):
884:             if inp in seen:
885:                 return
886:             seen.add(inp)
887: 
888:             sig = (func_name, inp, outp)
889:             if "v" in outp:
890:                 raise ValueError("%s: void signature %r" % (self.name, sig))
891:             if len(inp) != inarg_num or len(outp) != outarg_num:
892:                 raise ValueError("%s: signature %r does not have %d/%d input/output args" % (
893:                     self.name, sig,
894:                     inarg_num, outarg_num))
895: 
896:             loop_name, loop = generate_loop(inarg, outarg, ret, inp, outp)
897:             all_loops[loop_name] = loop
898:             variants.append((func_name, loop_name, inp, outp))
899: 
900:         # First add base variants
901:         for func_name, inarg, outarg, ret, header in self.signatures:
902:             outp = re.sub(r'\*.*', '', ret) + outarg
903:             ret = ret.replace('*', '')
904:             if inarg_num is None:
905:                 inarg_num = len(inarg)
906:                 outarg_num = len(outp)
907: 
908:             inp, outp = list(iter_variants(inarg, outp))[0]
909:             add_variant(func_name, inarg, outarg, ret, inp, outp)
910: 
911:         # Then the supplementary ones
912:         for func_name, inarg, outarg, ret, header in self.signatures:
913:             outp = re.sub(r'\*.*', '', ret) + outarg
914:             ret = ret.replace('*', '')
915:             for inp, outp in iter_variants(inarg, outp):
916:                 add_variant(func_name, inarg, outarg, ret, inp, outp)
917: 
918:         # Then sort variants to input argument cast order
919:         # -- the sort is stable, so functions earlier in the signature list
920:         #    are still preferred
921:         variants.sort(key=lambda v: cast_order(v[2]))
922: 
923:         return variants, inarg_num, outarg_num
924: 
925:     def generate(self, all_loops):
926:         toplevel = ""
927: 
928:         variants, inarg_num, outarg_num = self._get_signatures_and_loops(all_loops)
929: 
930:         loops = []
931:         funcs = []
932:         types = []
933: 
934:         for func_name, loop_name, inputs, outputs in variants:
935:             for x in inputs:
936:                 types.append(TYPE_NAMES[x])
937:             for x in outputs:
938:                 types.append(TYPE_NAMES[x])
939:             loops.append(loop_name)
940:             funcs.append(func_name)
941: 
942:         toplevel += "cdef np.PyUFuncGenericFunction ufunc_%s_loops[%d]\n" % (self.name, len(loops))
943:         toplevel += "cdef void *ufunc_%s_ptr[%d]\n" % (self.name, 2*len(funcs))
944:         toplevel += "cdef void *ufunc_%s_data[%d]\n" % (self.name, len(funcs))
945:         toplevel += "cdef char ufunc_%s_types[%d]\n" % (self.name, len(types))
946:         toplevel += 'cdef char *ufunc_%s_doc = (\n    "%s")\n' % (
947:             self.name,
948:             self.doc.replace("\\", "\\\\").replace('"', '\\"').replace('\n', '\\n\"\n    "')
949:             )
950: 
951:         for j, function in enumerate(loops):
952:             toplevel += "ufunc_%s_loops[%d] = <np.PyUFuncGenericFunction>%s\n" % (self.name, j, function)
953:         for j, type in enumerate(types):
954:             toplevel += "ufunc_%s_types[%d] = <char>%s\n" % (self.name, j, type)
955:         for j, func in enumerate(funcs):
956:             toplevel += "ufunc_%s_ptr[2*%d] = <void*>%s\n" % (self.name, j,
957:                                                               self.cython_func_name(func, specialized=True))
958:             toplevel += "ufunc_%s_ptr[2*%d+1] = <void*>(<char*>\"%s\")\n" % (self.name, j,
959:                                                                              self.name)
960:         for j, func in enumerate(funcs):
961:             toplevel += "ufunc_%s_data[%d] = &ufunc_%s_ptr[2*%d]\n" % (
962:                 self.name, j, self.name, j)
963: 
964:         toplevel += ('@ = np.PyUFunc_FromFuncAndData(ufunc_@_loops, '
965:                      'ufunc_@_data, ufunc_@_types, %d, %d, %d, 0, '
966:                      '"@", ufunc_@_doc, 0)\n' % (len(types)/(inarg_num+outarg_num),
967:                                                  inarg_num, outarg_num)
968:                      ).replace('@', self.name)
969: 
970:         return toplevel
971: 
972: 
973: class FusedFunc(Func):
974:     '''
975:     Generate code for a fused-type special function that can be
976:     cimported in cython.
977: 
978:     '''
979:     def __init__(self, name, signatures, headers):
980:         super(FusedFunc, self).__init__(name, signatures, headers)
981:         self.doc = "See the documentation for scipy.special." + self.name
982:         # "codes" are the keys for CY_TYPES
983:         self.incodes, self.outcodes = self._get_codes()
984:         self.fused_types = set()
985:         self.intypes, infused_types = self._get_types(self.incodes)
986:         self.fused_types.update(infused_types)
987:         self.outtypes, outfused_types = self._get_types(self.outcodes)
988:         self.fused_types.update(outfused_types)
989:         self.invars, self.outvars = self._get_vars()
990: 
991:     def _get_codes(self):
992:         inarg_num, outarg_num = None, None
993:         all_inp, all_outp = [], []
994:         for _, inarg, outarg, ret, _ in self.signatures:
995:             outp = re.sub(r'\*.*', '', ret) + outarg
996:             if inarg_num is None:
997:                 inarg_num = len(inarg)
998:                 outarg_num = len(outp)
999:             inp, outp = list(iter_variants(inarg, outp))[0]
1000:             all_inp.append(inp)
1001:             all_outp.append(outp)
1002: 
1003:         incodes = []
1004:         for n in range(inarg_num):
1005:             codes = unique(map(lambda x: x[n], all_inp))
1006:             codes.sort()
1007:             incodes.append(''.join(codes))
1008:         outcodes = []
1009:         for n in range(outarg_num):
1010:             codes = unique(map(lambda x: x[n], all_outp))
1011:             codes.sort()
1012:             outcodes.append(''.join(codes))
1013: 
1014:         return tuple(incodes), tuple(outcodes)
1015: 
1016:     def _get_types(self, codes):
1017:         all_types = []
1018:         fused_types = set()
1019:         for code in codes:
1020:             if len(code) == 1:
1021:                 # It's not a fused type
1022:                 all_types.append((CY_TYPES[code], code))
1023:             else:
1024:                 # It's a fused type
1025:                 fused_type, dec = generate_fused_type(code)
1026:                 fused_types.add(dec)
1027:                 all_types.append((fused_type, code))
1028:         return all_types, fused_types
1029: 
1030:     def _get_vars(self):
1031:         invars = []
1032:         for n in range(len(self.intypes)):
1033:             invars.append("x{}".format(n))
1034:         outvars = []
1035:         for n in range(len(self.outtypes)):
1036:             outvars.append("y{}".format(n))
1037:         return invars, outvars
1038: 
1039:     def _get_conditional(self, types, codes, adverb):
1040:         '''Generate an if/elif/else clause that selects a specialization of
1041:         fused types.
1042: 
1043:         '''
1044:         clauses = []
1045:         seen = set()
1046:         for (typ, typcode), code in zip(types, codes):
1047:             if len(typcode) == 1:
1048:                 continue
1049:             if typ not in seen:
1050:                 clauses.append("{} is {}".format(typ, underscore(CY_TYPES[code])))
1051:                 seen.add(typ)
1052:         if clauses and adverb != "else":
1053:             line = "{} {}:".format(adverb, " and ".join(clauses))
1054:         elif clauses and adverb == "else":
1055:             line = "else:"
1056:         else:
1057:             line = None
1058:         return line
1059: 
1060:     def _get_incallvars(self, intypes, c):
1061:         '''Generate pure input variables to a specialization,
1062:         i.e. variables that aren't used to return a value.
1063: 
1064:         '''
1065:         incallvars = []
1066:         for n, intype in enumerate(intypes):
1067:             var = self.invars[n]
1068:             if c and intype == "double complex":
1069:                 var = npy_cdouble_from_double_complex(var)
1070:             incallvars.append(var)
1071:         return incallvars
1072: 
1073:     def _get_outcallvars(self, outtypes, c):
1074:         '''Generate output variables to a specialization,
1075:         i.e. pointers that are used to return values.
1076: 
1077:         '''
1078:         outcallvars, tmpvars, casts = [], [], []
1079:         # If there are more out variables than out types, we want the
1080:         # tail of the out variables
1081:         start = len(self.outvars) - len(outtypes)
1082:         outvars = self.outvars[start:]
1083:         for n, (var, outtype) in enumerate(zip(outvars, outtypes)):
1084:             if c and outtype == "double complex":
1085:                 tmp = "tmp{}".format(n)
1086:                 tmpvars.append(tmp)
1087:                 outcallvars.append("&{}".format(tmp))
1088:                 tmpcast = double_complex_from_npy_cdouble(tmp)
1089:                 casts.append("{}[0] = {}".format(var, tmpcast))
1090:             else:
1091:                 outcallvars.append("{}".format(var))
1092:         return outcallvars, tmpvars, casts
1093: 
1094:     def _get_nan_decs(self):
1095:         '''Set all variables to nan for specializations of fused types for
1096:         which don't have signatures.
1097: 
1098:         '''
1099:         # Set non fused-type variables to nan
1100:         tab = " "*4
1101:         fused_types, lines = [], [tab + "else:"]
1102:         seen = set()
1103:         for outvar, outtype, code in zip(self.outvars, self.outtypes, self.outcodes):
1104:             if len(code) == 1:
1105:                 line = "{}[0] = {}".format(outvar, NAN_VALUE[code])
1106:                 lines.append(2*tab + line)
1107:             else:
1108:                 fused_type = outtype
1109:                 name, _ = fused_type
1110:                 if name not in seen:
1111:                     fused_types.append(fused_type)
1112:                     seen.add(name)
1113:         if not fused_types:
1114:             return lines
1115: 
1116:         # Set fused-type variables to nan
1117:         all_codes = []
1118:         for fused_type in fused_types:
1119:             _, codes = fused_type
1120:             all_codes.append(codes)
1121:         all_codes = tuple(all_codes)
1122: 
1123:         codelens = list(map(lambda x: len(x), all_codes))
1124:         last = numpy.product(codelens) - 1
1125:         for m, codes in enumerate(itertools.product(*all_codes)):
1126:             fused_codes, decs = [], []
1127:             for n, fused_type in enumerate(fused_types):
1128:                 code = codes[n]
1129:                 fused_codes.append(underscore(CY_TYPES[code]))
1130:                 for nn, outvar in enumerate(self.outvars):
1131:                     if self.outtypes[nn] == fused_type:
1132:                         line = "{}[0] = {}".format(outvar, NAN_VALUE[code])
1133:                         decs.append(line)
1134:             if m == 0:
1135:                 adverb = "if"
1136:             elif m == last:
1137:                 adverb = "else"
1138:             else:
1139:                 adverb = "elif"
1140:             cond = self._get_conditional(fused_types, codes, adverb)
1141:             lines.append(2*tab + cond)
1142:             lines.extend(map(lambda x: 3*tab + x, decs))
1143:         return lines
1144: 
1145:     def _get_tmp_decs(self, all_tmpvars):
1146:         '''Generate the declarations of any necessary temporary
1147:         variables.
1148: 
1149:         '''
1150:         tab = " "*4
1151:         tmpvars = list(all_tmpvars)
1152:         tmpvars.sort()
1153:         tmpdecs = []
1154:         for tmpvar in tmpvars:
1155:             line = "cdef npy_cdouble {}".format(tmpvar)
1156:             tmpdecs.append(tab + line)
1157:         return tmpdecs
1158: 
1159:     def _get_python_wrap(self):
1160:         '''Generate a python wrapper for functions which pass their
1161:         arguments as pointers.
1162: 
1163:         '''
1164:         tab = " "*4
1165:         body, callvars = [], []
1166:         for (intype, _), invar in zip(self.intypes, self.invars):
1167:             callvars.append("{} {}".format(intype, invar))
1168:         line = "def _{}_pywrap({}):".format(self.name, ", ".join(callvars))
1169:         body.append(line)
1170:         for (outtype, _), outvar in zip(self.outtypes, self.outvars):
1171:             line = "cdef {} {}".format(outtype, outvar)
1172:             body.append(tab + line)
1173:         addr_outvars = map(lambda x: "&{}".format(x), self.outvars)
1174:         line = "{}({}, {})".format(self.name, ", ".join(self.invars),
1175:                                    ", ".join(addr_outvars))
1176:         body.append(tab + line)
1177:         line = "return {}".format(", ".join(self.outvars))
1178:         body.append(tab + line)
1179:         body = "\n".join(body)
1180:         return body
1181: 
1182:     def _get_common(self, signum, sig):
1183:         '''Generate code common to all the _generate_* methods.'''
1184:         tab = " "*4
1185:         func_name, incodes, outcodes, retcode, header = sig
1186:         # Convert ints to longs; cf. iter_variants()
1187:         incodes = incodes.replace('i', 'l')
1188:         outcodes = outcodes.replace('i', 'l')
1189:         retcode = retcode.replace('i', 'l')
1190: 
1191:         if header.endswith("h"):
1192:             c = True
1193:         else:
1194:             c = False
1195:         if header.endswith("++"):
1196:             cpp = True
1197:         else:
1198:             cpp = False
1199: 
1200:         intypes = list(map(lambda x: CY_TYPES[x], incodes))
1201:         outtypes = list(map(lambda x: CY_TYPES[x], outcodes))
1202:         retcode = re.sub(r'\*.*', '', retcode)
1203:         if not retcode:
1204:             retcode = 'v'
1205:         rettype = CY_TYPES[retcode]
1206: 
1207:         if cpp:
1208:             # Functions from _ufuncs_cxx are exported as a void*
1209:             # pointers; cast them to the correct types
1210:             func_name = "scipy.special._ufuncs_cxx._export_{}".format(func_name)
1211:             func_name = "(<{}(*)({}) nogil>{})"\
1212:                     .format(rettype, ", ".join(intypes + outtypes), func_name)
1213:         else:
1214:             func_name = self.cython_func_name(func_name, specialized=True)
1215: 
1216:         if signum == 0:
1217:             adverb = "if"
1218:         else:
1219:             adverb = "elif"
1220:         cond = self._get_conditional(self.intypes, incodes, adverb)
1221:         if cond:
1222:             lines = [tab + cond]
1223:             sp = 2*tab
1224:         else:
1225:             lines = []
1226:             sp = tab
1227: 
1228:         return func_name, incodes, outcodes, retcode, \
1229:             intypes, outtypes, rettype, c, lines, sp
1230: 
1231:     def _generate_from_return_and_no_outargs(self):
1232:         tab = " "*4
1233:         specs, body = [], []
1234:         for signum, sig in enumerate(self.signatures):
1235:             func_name, incodes, outcodes, retcode, intypes, outtypes, \
1236:                 rettype, c, lines, sp = self._get_common(signum, sig)
1237:             body.extend(lines)
1238: 
1239:             # Generate the call to the specialized function
1240:             callvars = self._get_incallvars(intypes, c)
1241:             call = "{}({})".format(func_name, ", ".join(callvars))
1242:             if c and rettype == "double complex":
1243:                 call = double_complex_from_npy_cdouble(call)
1244:             line = sp + "return {}".format(call)
1245:             body.append(line)
1246:             sig = "{}->{}".format(incodes, retcode)
1247:             specs.append(sig)
1248: 
1249:         if len(specs) > 1:
1250:             # Return nan for signatures without a specialization
1251:             body.append(tab + "else:")
1252:             outtype, outcodes = self.outtypes[0]
1253:             last = len(outcodes) - 1
1254:             if len(outcodes) == 1:
1255:                 line = "return {}".format(NAN_VALUE[outcodes])
1256:                 body.append(2*tab + line)
1257:             else:
1258:                 for n, code in enumerate(outcodes):
1259:                     if n == 0:
1260:                         adverb = "if"
1261:                     elif n == last:
1262:                         adverb = "else"
1263:                     else:
1264:                         adverb = "elif"
1265:                     cond = self._get_conditional(self.outtypes, code, adverb)
1266:                     body.append(2*tab + cond)
1267:                     line = "return {}".format(NAN_VALUE[code])
1268:                     body.append(3*tab + line)
1269: 
1270:         # Generate the head of the function
1271:         callvars, head = [], []
1272:         for n, (intype, _) in enumerate(self.intypes):
1273:             callvars.append("{} {}".format(intype, self.invars[n]))
1274:         (outtype, _) = self.outtypes[0]
1275:         dec = "cpdef {} {}({}) nogil".format(outtype, self.name, ", ".join(callvars))
1276:         head.append(dec + ":")
1277:         head.append(tab + ''''{}''''.format(self.doc))
1278: 
1279:         src = "\n".join(head + body)
1280:         return dec, src, specs
1281: 
1282:     def _generate_from_outargs_and_no_return(self):
1283:         tab = " "*4
1284:         all_tmpvars = set()
1285:         specs, body = [], []
1286:         for signum, sig in enumerate(self.signatures):
1287:             func_name, incodes, outcodes, retcode, intypes, outtypes, \
1288:                 rettype, c, lines, sp = self._get_common(signum, sig)
1289:             body.extend(lines)
1290: 
1291:             # Generate the call to the specialized function
1292:             callvars = self._get_incallvars(intypes, c)
1293:             outcallvars, tmpvars, casts = self._get_outcallvars(outtypes, c)
1294:             callvars.extend(outcallvars)
1295:             all_tmpvars.update(tmpvars)
1296: 
1297:             call = "{}({})".format(func_name, ", ".join(callvars))
1298:             body.append(sp + call)
1299:             body.extend(map(lambda x: sp + x, casts))
1300:             if len(outcodes) == 1:
1301:                 sig = "{}->{}".format(incodes, outcodes)
1302:                 specs.append(sig)
1303:             else:
1304:                 sig = "{}*{}->v".format(incodes, outcodes)
1305:                 specs.append(sig)
1306: 
1307:         if len(specs) > 1:
1308:             lines = self._get_nan_decs()
1309:             body.extend(lines)
1310: 
1311:         if len(self.outvars) == 1:
1312:             line = "return {}[0]".format(self.outvars[0])
1313:             body.append(tab + line)
1314: 
1315:         # Generate the head of the function
1316:         callvars, head = [], []
1317:         for invar, (intype, _) in zip(self.invars, self.intypes):
1318:             callvars.append("{} {}".format(intype, invar))
1319:         if len(self.outvars) > 1:
1320:             for outvar, (outtype, _) in zip(self.outvars, self.outtypes):
1321:                 callvars.append("{} *{}".format(outtype, outvar))
1322:         if len(self.outvars) == 1:
1323:             outtype, _ = self.outtypes[0]
1324:             dec = "cpdef {} {}({}) nogil".format(outtype, self.name, ", ".join(callvars))
1325:         else:
1326:             dec = "cdef void {}({}) nogil".format(self.name, ", ".join(callvars))
1327:         head.append(dec + ":")
1328:         head.append(tab + ''''{}''''.format(self.doc))
1329:         if len(self.outvars) == 1:
1330:             outvar = self.outvars[0]
1331:             outtype, _ = self.outtypes[0]
1332:             line = "cdef {} {}".format(outtype, outvar)
1333:             head.append(tab + line)
1334:         head.extend(self._get_tmp_decs(all_tmpvars))
1335: 
1336:         src = "\n".join(head + body)
1337:         return dec, src, specs
1338: 
1339:     def _generate_from_outargs_and_return(self):
1340:         tab = " "*4
1341:         all_tmpvars = set()
1342:         specs, body = [], []
1343:         for signum, sig in enumerate(self.signatures):
1344:             func_name, incodes, outcodes, retcode, intypes, outtypes, \
1345:                 rettype, c, lines, sp = self._get_common(signum, sig)
1346:             body.extend(lines)
1347: 
1348:             # Generate the call to the specialized function
1349:             callvars = self._get_incallvars(intypes, c)
1350:             outcallvars, tmpvars, casts = self._get_outcallvars(outtypes, c)
1351:             callvars.extend(outcallvars)
1352:             all_tmpvars.update(tmpvars)
1353:             call = "{}({})".format(func_name, ", ".join(callvars))
1354:             if c and rettype == "double complex":
1355:                 call = double_complex_from_npy_cdouble(call)
1356:             call = "{}[0] = {}".format(self.outvars[0], call)
1357:             body.append(sp + call)
1358:             body.extend(map(lambda x: sp + x, casts))
1359:             sig = "{}*{}->v".format(incodes, outcodes + retcode)
1360:             specs.append(sig)
1361: 
1362:         if len(specs) > 1:
1363:             lines = self._get_nan_decs()
1364:             body.extend(lines)
1365: 
1366:         # Generate the head of the function
1367:         callvars, head = [], []
1368:         for invar, (intype, _) in zip(self.invars, self.intypes):
1369:             callvars.append("{} {}".format(intype, invar))
1370:         for outvar, (outtype, _) in zip(self.outvars, self.outtypes):
1371:             callvars.append("{} *{}".format(outtype, outvar))
1372:         dec = "cdef void {}({}) nogil".format(self.name, ", ".join(callvars))
1373:         head.append(dec + ":")
1374:         head.append(tab + ''''{}''''.format(self.doc))
1375:         head.extend(self._get_tmp_decs(all_tmpvars))
1376: 
1377:         src = "\n".join(head + body)
1378:         return dec, src, specs
1379: 
1380:     def generate(self):
1381:         _, _, outcodes, retcode, _ = self.signatures[0]
1382:         retcode = re.sub(r'\*.*', '', retcode)
1383:         if not retcode:
1384:             retcode = 'v'
1385: 
1386:         if len(outcodes) == 0 and retcode != 'v':
1387:             dec, src, specs = self._generate_from_return_and_no_outargs()
1388:         elif len(outcodes) > 0 and retcode == 'v':
1389:             dec, src, specs = self._generate_from_outargs_and_no_return()
1390:         elif len(outcodes) > 0 and retcode != 'v':
1391:             dec, src, specs = self._generate_from_outargs_and_return()
1392:         else:
1393:             raise ValueError("Invalid signature")
1394: 
1395:         if len(self.outvars) > 1:
1396:             wrap = self._get_python_wrap()
1397:         else:
1398:             wrap = None
1399: 
1400:         return dec, src, specs, self.fused_types, wrap
1401: 
1402: 
1403: def get_declaration(ufunc, c_name, c_proto, cy_proto, header, proto_h_filename):
1404:     '''
1405:     Construct a Cython declaration of a function coming either from a
1406:     pxd or a header file. Do sufficient tricks to enable compile-time
1407:     type checking against the signature expected by the ufunc.
1408:     '''
1409: 
1410:     defs = []
1411:     defs_h = []
1412: 
1413:     var_name = c_name.replace('[', '_').replace(']', '_').replace(' ', '_')
1414: 
1415:     if header.endswith('.pxd'):
1416:         defs.append("from .%s cimport %s as %s" % (
1417:             header[:-4], ufunc.cython_func_name(c_name, prefix=""),
1418:             ufunc.cython_func_name(c_name)))
1419: 
1420:         # check function signature at compile time
1421:         proto_name = '_proto_%s_t' % var_name
1422:         defs.append("ctypedef %s" % (cy_proto.replace('(*)', proto_name)))
1423:         defs.append("cdef %s *%s_var = &%s" % (
1424:             proto_name, proto_name, ufunc.cython_func_name(c_name, specialized=True)))
1425:     else:
1426:         # redeclare the function, so that the assumed
1427:         # signature is checked at compile time
1428:         new_name = "%s \"%s\"" % (ufunc.cython_func_name(c_name), c_name)
1429:         defs.append("cdef extern from \"%s\":" % proto_h_filename)
1430:         defs.append("    cdef %s" % (cy_proto.replace('(*)', new_name)))
1431:         defs_h.append("#include \"%s\"" % header)
1432:         defs_h.append("%s;" % (c_proto.replace('(*)', c_name)))
1433: 
1434:     return defs, defs_h, var_name
1435: 
1436: 
1437: def generate_ufuncs(fn_prefix, cxx_fn_prefix, ufuncs):
1438:     filename = fn_prefix + ".pyx"
1439:     proto_h_filename = fn_prefix + '_defs.h'
1440: 
1441:     cxx_proto_h_filename = cxx_fn_prefix + '_defs.h'
1442:     cxx_pyx_filename = cxx_fn_prefix + ".pyx"
1443:     cxx_pxd_filename = cxx_fn_prefix + ".pxd"
1444: 
1445:     toplevel = ""
1446: 
1447:     # for _ufuncs*
1448:     defs = []
1449:     defs_h = []
1450:     all_loops = {}
1451: 
1452:     # for _ufuncs_cxx*
1453:     cxx_defs = []
1454:     cxx_pxd_defs = [
1455:         "from . cimport sf_error",
1456:         "cdef void _set_action(sf_error.sf_error_t, sf_error.sf_action_t) nogil"
1457:     ]
1458:     cxx_defs_h = []
1459: 
1460:     ufuncs.sort(key=lambda u: u.name)
1461: 
1462:     for ufunc in ufuncs:
1463:         # generate function declaration and type checking snippets
1464:         cfuncs = ufunc.get_prototypes()
1465:         for c_name, c_proto, cy_proto, header in cfuncs:
1466:             if header.endswith('++'):
1467:                 header = header[:-2]
1468: 
1469:                 # for the CXX module
1470:                 item_defs, item_defs_h, var_name = get_declaration(ufunc, c_name, c_proto, cy_proto,
1471:                                                                    header, cxx_proto_h_filename)
1472:                 cxx_defs.extend(item_defs)
1473:                 cxx_defs_h.extend(item_defs_h)
1474: 
1475:                 cxx_defs.append("cdef void *_export_%s = <void*>%s" % (
1476:                     var_name, ufunc.cython_func_name(c_name, specialized=True, override=False)))
1477:                 cxx_pxd_defs.append("cdef void *_export_%s" % (var_name,))
1478: 
1479:                 # let cython grab the function pointer from the c++ shared library
1480:                 ufunc.function_name_overrides[c_name] = "scipy.special._ufuncs_cxx._export_" + var_name
1481:             else:
1482:                 # usual case
1483:                 item_defs, item_defs_h, _ = get_declaration(ufunc, c_name, c_proto, cy_proto, header,
1484:                                                             proto_h_filename)
1485:                 defs.extend(item_defs)
1486:                 defs_h.extend(item_defs_h)
1487: 
1488:         # ufunc creation code snippet
1489:         t = ufunc.generate(all_loops)
1490:         toplevel += t + "\n"
1491: 
1492:     # Produce output
1493:     toplevel = "\n".join(sorted(all_loops.values()) + defs + [toplevel])
1494: 
1495:     with open(filename, 'w') as f:
1496:         f.write(UFUNCS_EXTRA_CODE_COMMON)
1497:         f.write(UFUNCS_EXTRA_CODE)
1498:         f.write("\n")
1499:         f.write(toplevel)
1500:         f.write(UFUNCS_EXTRA_CODE_BOTTOM)
1501: 
1502:     defs_h = unique(defs_h)
1503:     with open(proto_h_filename, 'w') as f:
1504:         f.write("#ifndef UFUNCS_PROTO_H\n#define UFUNCS_PROTO_H 1\n")
1505:         f.write("\n".join(defs_h))
1506:         f.write("\n#endif\n")
1507: 
1508:     cxx_defs_h = unique(cxx_defs_h)
1509:     with open(cxx_proto_h_filename, 'w') as f:
1510:         f.write("#ifndef UFUNCS_PROTO_H\n#define UFUNCS_PROTO_H 1\n")
1511:         f.write("\n".join(cxx_defs_h))
1512:         f.write("\n#endif\n")
1513: 
1514:     with open(cxx_pyx_filename, 'w') as f:
1515:         f.write(UFUNCS_EXTRA_CODE_COMMON)
1516:         f.write("\n")
1517:         f.write("\n".join(cxx_defs))
1518:         f.write("\n# distutils: language = c++\n")
1519: 
1520:     with open(cxx_pxd_filename, 'w') as f:
1521:         f.write("\n".join(cxx_pxd_defs))
1522: 
1523: 
1524: def generate_fused_funcs(modname, ufunc_fn_prefix, fused_funcs):
1525:     pxdfile = modname + ".pxd"
1526:     pyxfile = modname + ".pyx"
1527:     proto_h_filename = ufunc_fn_prefix + '_defs.h'
1528: 
1529:     sources = []
1530:     declarations = []
1531:     # Code for benchmarks
1532:     bench_aux = []
1533:     fused_types = set()
1534:     # Parameters for the tests
1535:     doc = []
1536:     defs = []
1537: 
1538:     for func in fused_funcs:
1539:         if func.name.startswith("_"):
1540:             # Don't try to deal with functions that have extra layers
1541:             # of wrappers.
1542:             continue
1543: 
1544:         # Get the function declaration for the .pxd and the source
1545:         # code for the .pyx
1546:         dec, src, specs, func_fused_types, wrap = func.generate()
1547:         declarations.append(dec)
1548:         sources.append(src)
1549:         if wrap:
1550:             sources.append(wrap)
1551:         fused_types.update(func_fused_types)
1552: 
1553:         # Declare the specializations
1554:         cfuncs = func.get_prototypes(nptypes_for_h=True)
1555:         for c_name, c_proto, cy_proto, header in cfuncs:
1556:             if header.endswith('++'):
1557:                 # We grab the c++ functions from the c++ module
1558:                 continue
1559:             item_defs, _, _ = get_declaration(func, c_name, c_proto,
1560:                                               cy_proto, header,
1561:                                               proto_h_filename)
1562:             defs.extend(item_defs)
1563: 
1564:         # Add a line to the documentation
1565:         doc.append(generate_doc(func.name, specs))
1566: 
1567:         # Generate code for benchmarks
1568:         if func.name in CYTHON_SPECIAL_BENCHFUNCS:
1569:             for codes in CYTHON_SPECIAL_BENCHFUNCS[func.name]:
1570:                 pybench, cybench = generate_bench(func.name, codes)
1571:                 bench_aux.extend([pybench, cybench])
1572: 
1573:     fused_types = list(fused_types)
1574:     fused_types.sort()
1575: 
1576:     with open(pxdfile, 'w') as f:
1577:         f.write(CYTHON_SPECIAL_PXD)
1578:         f.write("\n")
1579:         f.write("\n\n".join(fused_types))
1580:         f.write("\n\n")
1581:         f.write("\n".join(declarations))
1582:     with open(pyxfile, 'w') as f:
1583:         header = CYTHON_SPECIAL_PYX
1584:         header = header.replace("FUNCLIST", "\n".join(doc))
1585:         f.write(header)
1586:         f.write("\n")
1587:         f.write("\n".join(defs))
1588:         f.write("\n\n")
1589:         f.write("\n\n".join(sources))
1590:         f.write("\n\n")
1591:         f.write("\n\n".join(bench_aux))
1592: 
1593: 
1594: def unique(lst):
1595:     '''
1596:     Return a list without repeated entries (first occurrence is kept),
1597:     preserving order.
1598:     '''
1599:     seen = set()
1600:     new_lst = []
1601:     for item in lst:
1602:         if item in seen:
1603:             continue
1604:         seen.add(item)
1605:         new_lst.append(item)
1606:     return new_lst
1607: 
1608: def all_newer(src_files, dst_files):
1609:     from distutils.dep_util import newer
1610:     return all(os.path.exists(dst) and newer(dst, src)
1611:                for dst in dst_files for src in src_files)
1612: 
1613: def main():
1614:     p = optparse.OptionParser(usage=__doc__.strip())
1615:     options, args = p.parse_args()
1616:     if len(args) != 0:
1617:         p.error('invalid number of arguments')
1618: 
1619:     src_files = (os.path.abspath(__file__),)
1620:     dst_files = ('_ufuncs.pyx',
1621:                  '_ufuncs_defs.h',
1622:                  '_ufuncs_cxx.pyx',
1623:                  '_ufuncs_cxx.pxd',
1624:                  '_ufuncs_cxx_defs.h',
1625:                  'cython_special.pyx',
1626:                  'cython_special.pxd')
1627: 
1628:     os.chdir(BASE_DIR)
1629: 
1630:     if all_newer(src_files, dst_files):
1631:         print("scipy/special/_generate_pyx.py: all files up-to-date")
1632:         return
1633: 
1634:     ufuncs = Ufunc.parse_all(FUNCS)
1635:     generate_ufuncs("_ufuncs", "_ufuncs_cxx", ufuncs)
1636:     fused_funcs = FusedFunc.parse_all(FUNCS)
1637:     generate_fused_funcs("cython_special", "_ufuncs", fused_funcs)
1638: 
1639: 
1640: if __name__ == "__main__":
1641:     main()
1642: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_504043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, (-1)), 'str', "\npython _generate_pyx.py\n\nGenerate Ufunc definition source files for scipy.special.  Produces\nfiles '_ufuncs.c' and '_ufuncs_cxx.c' by first producing Cython.\n\nThis will generate both calls to PyUFunc_FromFuncAndData and the\nrequired ufunc inner loops.\n\nThe syntax in the ufunc signature list is\n\n    <line>:           <ufunc_name> '--' <kernels> '--' <headers>\n    <kernels>:        <function> [',' <function>]*\n    <function>:       <name> ':' <input> '*' <output>\n                        '->' <retval> '*' <ignored_retval>\n    <input>:          <typecode>*\n    <output>:         <typecode>*\n    <retval>:         <typecode>?\n    <ignored_retval>: <typecode>?\n    <headers>:        <header_name> [',' <header_name>]*\n\nThe input parameter types are denoted by single character type\ncodes, according to\n\n   'f': 'float'\n   'd': 'double'\n   'g': 'long double'\n   'F': 'float complex'\n   'D': 'double complex'\n   'G': 'long double complex'\n   'i': 'int'\n   'l': 'long'\n   'v': 'void'\n\nIf multiple kernel functions are given for a single ufunc, the one\nwhich is used is determined by the standard ufunc mechanism. Kernel\nfunctions that are listed first are also matched first against the\nufunc input types, so functions listed earlier take precedence.\n\nIn addition, versions with casted variables, such as d->f,D->F and\ni->d are automatically generated.\n\nThere should be either a single header that contains all of the kernel\nfunctions listed, or there should be one header for each kernel\nfunction. Cython pxd files are allowed in addition to .h files.\n\nCython functions may use fused types, but the names in the list\nshould be the specialized ones, such as 'somefunc[float]'.\n\nFunction coming from C++ should have ``++`` appended to the name of\nthe header.\n\nFloating-point exceptions inside these Ufuncs are converted to\nspecial function errors --- which are separately controlled by the\nuser, and off by default, as they are usually not especially useful\nfor the user.\n\n\nThe C++ module\n--------------\nIn addition to ``_ufuncs`` module, a second module ``_ufuncs_cxx`` is\ngenerated. This module only exports function pointers that are to be\nused when constructing some of the ufuncs in ``_ufuncs``. The function\npointers are exported via Cython's standard mechanism.\n\nThis mainly avoids build issues --- Python distutils has no way to\nfigure out what to do if you want to link both C++ and Fortran code in\nthe same shared library.\n\n")

# Assigning a Str to a Name (line 82):

# Assigning a Str to a Name (line 82):
str_504044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, (-1)), 'str', '\n_sf_error_test_function -- _sf_error_test_function: i->i   -- sf_error.pxd\nsph_harm -- sph_harmonic: iidd->D, sph_harmonic_unsafe: dddd->D -- sph_harm.pxd, _legacy.pxd\n_lambertw -- lambertw_scalar: Dld->D                       -- lambertw.pxd\nwrightomega -- wrightomega : D->D                          -- _wright.h++\n_ellip_harm -- ellip_harmonic: ddiiddd->d, ellip_harmonic_unsafe: ddddddd->d --_ellip_harm.pxd, _legacy.pxd\nlogit -- logitf: f->f, logit: d->d, logitl: g->g           -- _logit.h\nexpit -- expitf: f->f, expit: d->d, expitl: g->g           -- _logit.h\nbdtrc -- bdtrc: iid->d, bdtrc_unsafe: ddd->d               -- cephes.h, _legacy.pxd\nbdtr -- bdtr: iid->d, bdtr_unsafe: ddd->d                  -- cephes.h, _legacy.pxd\nbdtri -- bdtri: iid->d, bdtri_unsafe: ddd->d               -- cephes.h, _legacy.pxd\nbinom -- binom: dd->d                                      -- orthogonal_eval.pxd\nbtdtr -- btdtr: ddd->d                                     -- cephes.h\nbtdtri -- incbi: ddd->d                                    -- cephes.h\nfdtrc -- fdtrc: ddd->d                                     -- cephes.h\nfdtr -- fdtr: ddd->d                                       -- cephes.h\nfdtri -- fdtri: ddd->d                                     -- cephes.h\ngdtrc -- gdtrc: ddd->d                                     -- cephes.h\ngdtr -- gdtr: ddd->d                                       -- cephes.h\nhyp0f1 -- _hyp0f1_real: dd->d, _hyp0f1_cmplx: dD->D        -- _hyp0f1.pxd\nhyp2f1 -- hyp2f1: dddd->d, chyp2f1_wrap: dddD->D           -- cephes.h, specfun_wrappers.h\nhyp1f1 -- hyp1f1_wrap: ddd->d, chyp1f1_wrap: ddD->D        -- specfun_wrappers.h\nhyperu -- hypU_wrap: ddd->d                                -- specfun_wrappers.h\nhyp2f0 -- hyp2f0: dddi*d->d, hyp2f0_unsafe: dddd*d->d      -- cephes.h, _legacy.pxd\nhyp1f2 -- onef2: dddd*d->d                                 -- cephes.h\nhyp3f0 -- threef0: dddd*d->d                               -- cephes.h\nbetainc -- incbet: ddd->d                                  -- cephes.h\nbetaincinv -- incbi: ddd->d                                -- cephes.h\nnbdtrc -- nbdtrc: iid->d, nbdtrc_unsafe: ddd->d            -- cephes.h, _legacy.pxd\nnbdtr -- nbdtr: iid->d, nbdtr_unsafe: ddd->d               -- cephes.h, _legacy.pxd\nnbdtri -- nbdtri: iid->d, nbdtri_unsafe: ddd->d            -- cephes.h, _legacy.pxd\nbeta -- beta: dd->d                                        -- cephes.h\nbetaln -- lbeta: dd->d                                     -- cephes.h\ncbrt -- cbrt: d->d                                         -- cephes.h\nchdtrc -- chdtrc: dd->d                                    -- cephes.h\nchdtr -- chdtr: dd->d                                      -- cephes.h\nchdtri -- chdtri: dd->d                                    -- cephes.h\nellipeinc -- ellie: dd->d                                  -- cephes.h\nellipkinc -- ellik: dd->d                                  -- cephes.h\nellipe -- ellpe: d->d                                      -- cephes.h\nellipkm1 -- ellpk: d->d                                    -- cephes.h\neval_jacobi --      eval_jacobi[double]: dddd->d,     eval_jacobi[double complex]: dddD->D,     eval_jacobi_l: lddd->d -- orthogonal_eval.pxd\neval_sh_jacobi --   eval_sh_jacobi[double]: dddd->d,  eval_sh_jacobi[double complex]: dddD->D,  eval_sh_jacobi_l: lddd->d -- orthogonal_eval.pxd\neval_gegenbauer --  eval_gegenbauer[double]: ddd->d,  eval_gegenbauer[double complex]: ddD->D,  eval_gegenbauer_l: ldd->d -- orthogonal_eval.pxd\neval_chebyt --      eval_chebyt[double]: dd->d,       eval_chebyt[double complex]: dD->D,       eval_chebyt_l: ld->d -- orthogonal_eval.pxd\neval_chebyu --      eval_chebyu[double]: dd->d,       eval_chebyu[double complex]: dD->D,       eval_chebyu_l: ld->d -- orthogonal_eval.pxd\neval_chebyc --      eval_chebyc[double]: dd->d,       eval_chebyc[double complex]: dD->D,       eval_chebyc_l: ld->d -- orthogonal_eval.pxd\neval_chebys --      eval_chebys[double]: dd->d,       eval_chebys[double complex]: dD->D,       eval_chebys_l: ld->d -- orthogonal_eval.pxd\neval_sh_chebyt --   eval_sh_chebyt[double]: dd->d,    eval_sh_chebyt[double complex]: dD->D,    eval_sh_chebyt_l:ld->d -- orthogonal_eval.pxd\neval_sh_chebyu --   eval_sh_chebyu[double]: dd->d,    eval_sh_chebyu[double complex]: dD->D,    eval_sh_chebyu_l:ld->d -- orthogonal_eval.pxd\neval_legendre --    eval_legendre[double]: dd->d,     eval_legendre[double complex]: dD->D,     eval_legendre_l: ld->d -- orthogonal_eval.pxd\neval_sh_legendre -- eval_sh_legendre[double]: dd->d,  eval_sh_legendre[double complex]: dD->D,  eval_sh_legendre_l:ld->d -- orthogonal_eval.pxd\neval_genlaguerre -- eval_genlaguerre[double]: ddd->d, eval_genlaguerre[double complex]: ddD->D, eval_genlaguerre_l:ldd->d -- orthogonal_eval.pxd\neval_laguerre --    eval_laguerre[double]: dd->d,     eval_laguerre[double complex]: dD->D,     eval_laguerre_l:ld->d -- orthogonal_eval.pxd\neval_hermite  -- eval_hermite: ld->d                       -- orthogonal_eval.pxd\neval_hermitenorm -- eval_hermitenorm: ld->d                -- orthogonal_eval.pxd\nexp10 -- exp10: d->d                                       -- cephes.h\nexp2 -- exp2: d->d                                         -- cephes.h\ngamma -- Gamma: d->d, cgamma: D->D                         -- cephes.h, _loggamma.pxd\ngammaln -- lgam: d->d                                      -- cephes.h\ngammasgn -- gammasgn: d->d                                 -- c_misc/misc.h\ni0 -- i0: d->d                                             -- cephes.h\ni0e -- i0e: d->d                                           -- cephes.h\ni1 -- i1: d->d                                             -- cephes.h\ni1e -- i1e: d->d                                           -- cephes.h\ngammaincc -- igamc: dd->d                                  -- cephes.h\ngammainc -- igam: dd->d                                    -- cephes.h\ngammaincinv -- gammaincinv: dd->d                          -- cephes.h\ngammainccinv -- igami: dd->d                               -- cephes.h\niv -- iv: dd->d, cbesi_wrap: dD->D                         -- cephes.h, amos_wrappers.h\nive -- cbesi_wrap_e_real: dd->d, cbesi_wrap_e: dD->D       -- amos_wrappers.h\nellipj -- ellpj: dd*dddd->*i                               -- cephes.h\nexpn -- expn: id->d, expn_unsafe: dd->d                    -- cephes.h, _legacy.pxd\nexp1 -- exp1_wrap: d->d, cexp1_wrap: D->D                  -- specfun_wrappers.h\nexpi -- expi_wrap: d->d, cexpi_wrap: D->D                  -- specfun_wrappers.h\nkn -- cbesk_wrap_real_int: id->d, kn_unsafe: dd->d         -- cephes.h, _legacy.pxd\npdtrc -- pdtrc: id->d, pdtrc_unsafe: dd->d                 -- cephes.h, _legacy.pxd\npdtr -- pdtr: id->d, pdtr_unsafe: dd->d                    -- cephes.h, _legacy.pxd\npdtri -- pdtri: id->d, pdtri_unsafe: dd->d                 -- cephes.h, _legacy.pxd\nyn -- yn: id->d, yn_unsafe: dd->d                          -- cephes.h, _legacy.pxd\nsmirnov -- smirnov: id->d, smirnov_unsafe: dd->d           -- cephes.h, _legacy.pxd\nsmirnovi -- smirnovi: id->d, smirnovi_unsafe: dd->d        -- cephes.h, _legacy.pxd\nagm -- agm: dd->d                                          -- _agm.pxd\nairy -- airy_wrap: d*dddd->*i, cairy_wrap: D*DDDD->*i      -- amos_wrappers.h\nitairy -- itairy_wrap: d*dddd->*i                          -- specfun_wrappers.h\nairye -- cairy_wrap_e_real: d*dddd->*i, cairy_wrap_e: D*DDDD->*i -- amos_wrappers.h\nfresnel -- fresnl: d*dd->*i, cfresnl_wrap: D*DD->*i        -- cephes.h, specfun_wrappers.h\nshichi -- shichi: d*dd->*i, cshichi: D*DD->*i              -- cephes.h, _sici.pxd\nsici -- sici: d*dd->*i, csici: D*DD->*i                    -- cephes.h, _sici.pxd\nitj0y0 -- it1j0y0_wrap: d*dd->*i                           -- specfun_wrappers.h\nit2j0y0 -- it2j0y0_wrap: d*dd->*i                          -- specfun_wrappers.h\niti0k0 -- it1i0k0_wrap: d*dd->*i                           -- specfun_wrappers.h\nit2i0k0 -- it2i0k0_wrap: d*dd->*i                          -- specfun_wrappers.h\nj0 -- j0: d->d                                             -- cephes.h\ny0 -- y0: d->d                                             -- cephes.h\nj1 -- j1: d->d                                             -- cephes.h\ny1 -- y1: d->d                                             -- cephes.h\njv -- cbesj_wrap_real: dd->d, cbesj_wrap: dD->D            -- amos_wrappers.h\njve -- cbesj_wrap_e_real: dd->d, cbesj_wrap_e: dD->D       -- amos_wrappers.h\nyv -- cbesy_wrap_real: dd->d, cbesy_wrap: dD->D            -- amos_wrappers.h\nyve -- cbesy_wrap_e_real: dd->d, cbesy_wrap_e: dD->D       -- amos_wrappers.h\nk0 -- k0: d->d                                             -- cephes.h\nk0e -- k0e: d->d                                           -- cephes.h\nk1 -- k1: d->d                                             -- cephes.h\nk1e -- k1e: d->d                                           -- cephes.h\nkv -- cbesk_wrap_real: dd->d, cbesk_wrap: dD->D            -- amos_wrappers.h\nkve -- cbesk_wrap_e_real: dd->d, cbesk_wrap_e: dD->D       -- amos_wrappers.h\nhankel1 -- cbesh_wrap1: dD->D                              -- amos_wrappers.h\nhankel1e -- cbesh_wrap1_e: dD->D                           -- amos_wrappers.h\nhankel2 -- cbesh_wrap2: dD->D                              -- amos_wrappers.h\nhankel2e -- cbesh_wrap2_e: dD->D                           -- amos_wrappers.h\nndtr -- ndtr: d->d, faddeeva_ndtr: D->D                    -- cephes.h, _faddeeva.h++\nlog_ndtr -- log_ndtr: d->d, faddeeva_log_ndtr: D->D        -- cephes.h, _faddeeva.h++\nndtri -- ndtri: d->d                                       -- cephes.h\npsi -- digamma: d->d, cdigamma: D->D                       -- _digamma.pxd, _digamma.pxd\nrgamma -- rgamma: d->d, crgamma: D->D                      -- cephes.h, _loggamma.pxd\nround -- round: d->d                                       -- cephes.h\nsindg -- sindg: d->d                                       -- cephes.h\ncosdg -- cosdg: d->d                                       -- cephes.h\nradian -- radian: ddd->d                                   -- cephes.h\ntandg -- tandg: d->d                                       -- cephes.h\ncotdg -- cotdg: d->d                                       -- cephes.h\nlog1p -- log1p: d->d, clog1p: D->D                         -- cephes.h, _cunity.pxd\nexpm1 -- expm1: d->d, cexpm1: D->D                         -- cephes.h, _cunity.pxd\ncosm1 -- cosm1: d->d                                       -- cephes.h\nspence -- spence: d->d, cspence: D-> D                     -- cephes.h, _spence.pxd\nzetac -- zetac: d->d                                       -- cephes.h\nstruve -- struve_h: dd->d                                  -- misc.h\nmodstruve -- struve_l: dd->d                               -- misc.h\n_struve_power_series -- struve_power_series:  ddi*d->d     -- misc.h\n_struve_asymp_large_z -- struve_asymp_large_z: ddi*d->d    -- misc.h\n_struve_bessel_series -- struve_bessel_series: ddi*d->d    -- misc.h\nitstruve0 -- itstruve0_wrap: d->d                          -- specfun_wrappers.h\nit2struve0 -- it2struve0_wrap: d->d                        -- specfun_wrappers.h\nitmodstruve0 -- itmodstruve0_wrap: d->d                    -- specfun_wrappers.h\nkelvin -- kelvin_wrap: d*DDDD->*i                          -- specfun_wrappers.h\nber -- ber_wrap: d->d                                      -- specfun_wrappers.h\nbei -- bei_wrap: d->d                                      -- specfun_wrappers.h\nker -- ker_wrap: d->d                                      -- specfun_wrappers.h\nkei -- kei_wrap: d->d                                      -- specfun_wrappers.h\nberp -- berp_wrap: d->d                                    -- specfun_wrappers.h\nbeip -- beip_wrap: d->d                                    -- specfun_wrappers.h\nkerp -- kerp_wrap: d->d                                    -- specfun_wrappers.h\nkeip -- keip_wrap: d->d                                    -- specfun_wrappers.h\n_zeta -- zeta: dd->d                                       -- cephes.h\nkolmogorov -- kolmogorov: d->d                             -- cephes.h\nkolmogi -- kolmogi: d->d                                   -- cephes.h\nbesselpoly -- besselpoly: ddd->d                           -- c_misc/misc.h\nbtdtria -- cdfbet3_wrap: ddd->d                            -- cdf_wrappers.h\nbtdtrib -- cdfbet4_wrap: ddd->d                            -- cdf_wrappers.h\nbdtrik -- cdfbin2_wrap: ddd->d                             -- cdf_wrappers.h\nbdtrin -- cdfbin3_wrap: ddd->d                             -- cdf_wrappers.h\nchdtriv -- cdfchi3_wrap: dd->d                             -- cdf_wrappers.h\nchndtr -- cdfchn1_wrap: ddd->d                             -- cdf_wrappers.h\nchndtrix -- cdfchn2_wrap: ddd->d                           -- cdf_wrappers.h\nchndtridf -- cdfchn3_wrap: ddd->d                          -- cdf_wrappers.h\nchndtrinc -- cdfchn4_wrap: ddd->d                          -- cdf_wrappers.h\nfdtridfd -- cdff4_wrap: ddd->d                             -- cdf_wrappers.h\nncfdtr -- cdffnc1_wrap: dddd->d                            -- cdf_wrappers.h\nncfdtri -- cdffnc2_wrap: dddd->d                           -- cdf_wrappers.h\nncfdtridfn -- cdffnc3_wrap: dddd->d                        -- cdf_wrappers.h\nncfdtridfd -- cdffnc4_wrap: dddd->d                        -- cdf_wrappers.h\nncfdtrinc -- cdffnc5_wrap: dddd->d                         -- cdf_wrappers.h\ngdtrix -- cdfgam2_wrap: ddd->d                             -- cdf_wrappers.h\ngdtrib -- cdfgam3_wrap: ddd->d                             -- cdf_wrappers.h\ngdtria -- cdfgam4_wrap: ddd->d                             -- cdf_wrappers.h\nnbdtrik -- cdfnbn2_wrap: ddd->d                            -- cdf_wrappers.h\nnbdtrin -- cdfnbn3_wrap: ddd->d                            -- cdf_wrappers.h\nnrdtrimn -- cdfnor3_wrap: ddd->d                           -- cdf_wrappers.h\nnrdtrisd -- cdfnor4_wrap: ddd->d                           -- cdf_wrappers.h\npdtrik -- cdfpoi2_wrap: dd->d                              -- cdf_wrappers.h\nstdtr -- cdft1_wrap: dd->d                                 -- cdf_wrappers.h\nstdtrit -- cdft2_wrap: dd->d                               -- cdf_wrappers.h\nstdtridf -- cdft3_wrap: dd->d                              -- cdf_wrappers.h\nnctdtr -- cdftnc1_wrap: ddd->d                             -- cdf_wrappers.h\nnctdtrit -- cdftnc2_wrap: ddd->d                           -- cdf_wrappers.h\nnctdtridf -- cdftnc3_wrap: ddd->d                          -- cdf_wrappers.h\nnctdtrinc -- cdftnc4_wrap: ddd->d                          -- cdf_wrappers.h\ntklmbda -- tukeylambdacdf: dd->d                           -- cdf_wrappers.h\nmathieu_a -- cem_cva_wrap: dd->d                           -- specfun_wrappers.h\nmathieu_b -- sem_cva_wrap: dd->d                           -- specfun_wrappers.h\nmathieu_cem -- cem_wrap: ddd*dd->*i                        -- specfun_wrappers.h\nmathieu_sem -- sem_wrap: ddd*dd->*i                        -- specfun_wrappers.h\nmathieu_modcem1 -- mcm1_wrap: ddd*dd->*i                   -- specfun_wrappers.h\nmathieu_modcem2 -- mcm2_wrap: ddd*dd->*i                   -- specfun_wrappers.h\nmathieu_modsem1 -- msm1_wrap: ddd*dd->*i                   -- specfun_wrappers.h\nmathieu_modsem2 -- msm2_wrap: ddd*dd->*i                   -- specfun_wrappers.h\nlpmv -- pmv_wrap: ddd->d                                   -- specfun_wrappers.h\npbwa -- pbwa_wrap: dd*dd->*i                               -- specfun_wrappers.h\npbdv -- pbdv_wrap: dd*dd->*i                               -- specfun_wrappers.h\npbvv -- pbvv_wrap: dd*dd->*i                               -- specfun_wrappers.h\npro_cv -- prolate_segv_wrap: ddd->d                        -- specfun_wrappers.h\nobl_cv -- oblate_segv_wrap: ddd->d                         -- specfun_wrappers.h\npro_ang1_cv -- prolate_aswfa_wrap: ddddd*dd->*i            -- specfun_wrappers.h\npro_rad1_cv -- prolate_radial1_wrap: ddddd*dd->*i          -- specfun_wrappers.h\npro_rad2_cv -- prolate_radial2_wrap: ddddd*dd->*i          -- specfun_wrappers.h\nobl_ang1_cv -- oblate_aswfa_wrap: ddddd*dd->*i             -- specfun_wrappers.h\nobl_rad1_cv -- oblate_radial1_wrap: ddddd*dd->*i           -- specfun_wrappers.h\nobl_rad2_cv -- oblate_radial2_wrap: ddddd*dd->*i           -- specfun_wrappers.h\npro_ang1 -- prolate_aswfa_nocv_wrap: dddd*d->d             -- specfun_wrappers.h\npro_rad1 -- prolate_radial1_nocv_wrap: dddd*d->d           -- specfun_wrappers.h\npro_rad2 -- prolate_radial2_nocv_wrap: dddd*d->d           -- specfun_wrappers.h\nobl_ang1 -- oblate_aswfa_nocv_wrap: dddd*d->d              -- specfun_wrappers.h\nobl_rad1 -- oblate_radial1_nocv_wrap: dddd*d->d            -- specfun_wrappers.h\nobl_rad2 -- oblate_radial2_nocv_wrap: dddd*d->d            -- specfun_wrappers.h\nmodfresnelp -- modified_fresnel_plus_wrap: d*DD->*i        -- specfun_wrappers.h\nmodfresnelm -- modified_fresnel_minus_wrap: d*DD->*i       -- specfun_wrappers.h\nwofz -- faddeeva_w: D->D                                   -- _faddeeva.h++\nerfc -- erfc: d->d, faddeeva_erfc: D->D                    -- cephes.h, _faddeeva.h++\nerf -- erf: d->d, faddeeva_erf: D->D                       -- cephes.h, _faddeeva.h++\ndawsn -- faddeeva_dawsn: d->d, faddeeva_dawsn_complex: D->D -- _faddeeva.h++\nerfcx -- faddeeva_erfcx: d->d, faddeeva_erfcx_complex: D->D -- _faddeeva.h++\nerfi -- faddeeva_erfi: d->d, faddeeva_erfi_complex: D->D   -- _faddeeva.h++\nxlogy -- xlogy[double]: dd->d, xlogy[double_complex]: DD->D -- _xlogy.pxd\nxlog1py -- xlog1py[double]: dd->d, xlog1py[double_complex]: DD->D   -- _xlogy.pxd\npoch -- poch: dd->d                                        -- c_misc/misc.h\nboxcox -- boxcox: dd->d                                    -- _boxcox.pxd\nboxcox1p -- boxcox1p: dd->d                                -- _boxcox.pxd\ninv_boxcox -- inv_boxcox: dd->d                            -- _boxcox.pxd\ninv_boxcox1p -- inv_boxcox1p: dd->d                        -- _boxcox.pxd\nentr -- entr: d->d                                         -- _convex_analysis.pxd\nkl_div -- kl_div: dd->d                                    -- _convex_analysis.pxd\nrel_entr -- rel_entr: dd->d                                -- _convex_analysis.pxd\nhuber -- huber: dd->d                                      -- _convex_analysis.pxd\npseudo_huber -- pseudo_huber: dd->d                        -- _convex_analysis.pxd\nexprel -- exprel: d->d                                     -- _exprel.pxd\n_spherical_yn -- spherical_yn_real: ld->d, spherical_yn_complex: lD->D -- _spherical_bessel.pxd\n_spherical_jn -- spherical_jn_real: ld->d, spherical_jn_complex: lD->D -- _spherical_bessel.pxd\n_spherical_in -- spherical_in_real: ld->d, spherical_in_complex: lD->D -- _spherical_bessel.pxd\n_spherical_kn -- spherical_kn_real: ld->d, spherical_kn_complex: lD->D -- _spherical_bessel.pxd\n_spherical_yn_d -- spherical_yn_d_real: ld->d, spherical_yn_d_complex: lD->D -- _spherical_bessel.pxd\n_spherical_jn_d -- spherical_jn_d_real: ld->d, spherical_jn_d_complex: lD->D -- _spherical_bessel.pxd\n_spherical_in_d -- spherical_in_d_real: ld->d, spherical_in_d_complex: lD->D -- _spherical_bessel.pxd\n_spherical_kn_d -- spherical_kn_d_real: ld->d, spherical_kn_d_complex: lD->D -- _spherical_bessel.pxd\nloggamma -- loggamma: D->D                                 -- _loggamma.pxd\n_sinpi -- dsinpi: d->d, csinpi: D->D                       -- _trig.pxd\n_cospi -- dcospi: d->d, ccospi: D->D                       -- _trig.pxd\n_lgam1p -- lgam1p: d->d                                    -- cephes.h\n_lanczos_sum_expg_scaled -- lanczos_sum_expg_scaled: d->d  -- cephes.h\n_log1pmx -- log1pmx: d->d                                  -- cephes.h\n_igam_fac -- igam_fac: dd->d                               -- cephes.h\n')
# Assigning a type to the variable 'FUNCS' (line 82)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 0), 'FUNCS', str_504044)

# Assigning a Str to a Name (line 329):

# Assigning a Str to a Name (line 329):
str_504045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, (-1)), 'str', '# This file is automatically generated by generate_ufuncs.py.\n# Do not edit manually!\nfrom __future__ import absolute_import\n\ninclude "_ufuncs_extra_code_common.pxi"\n')
# Assigning a type to the variable 'UFUNCS_EXTRA_CODE_COMMON' (line 329)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 0), 'UFUNCS_EXTRA_CODE_COMMON', str_504045)

# Assigning a Str to a Name (line 337):

# Assigning a Str to a Name (line 337):
str_504046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, (-1)), 'str', 'include "_ufuncs_extra_code.pxi"\n')
# Assigning a type to the variable 'UFUNCS_EXTRA_CODE' (line 337)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 0), 'UFUNCS_EXTRA_CODE', str_504046)

# Assigning a Str to a Name (line 341):

# Assigning a Str to a Name (line 341):
str_504047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, (-1)), 'str', '#\n# Aliases\n#\njn = jv\n')
# Assigning a type to the variable 'UFUNCS_EXTRA_CODE_BOTTOM' (line 341)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 341, 0), 'UFUNCS_EXTRA_CODE_BOTTOM', str_504047)

# Assigning a Str to a Name (line 348):

# Assigning a Str to a Name (line 348):
str_504048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, (-1)), 'str', '# This file is automatically generated by generate_ufuncs.py.\n# Do not edit manually!\n')
# Assigning a type to the variable 'CYTHON_SPECIAL_PXD' (line 348)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 0), 'CYTHON_SPECIAL_PXD', str_504048)

# Assigning a Str to a Name (line 353):

# Assigning a Str to a Name (line 353):
str_504049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, (-1)), 'str', '# This file is automatically generated by generate_ufuncs.py.\n# Do not edit manually!\n"""\n.. highlight:: cython\n\n================================\nCython API for Special Functions\n================================\n\nScalar, typed versions of many of the functions in ``scipy.special``\ncan be accessed directly from Cython; the complete list is given\nbelow. Functions are overloaded using Cython fused types so their\nnames match their ufunc counterpart. The module follows the following\nconventions:\n\n- If a function\'s ufunc counterpart returns multiple values, then the\n  function returns its outputs via pointers in the final arguments\n- If a function\'s ufunc counterpart returns a single value, then the\n  function\'s output is returned directly.\n\nThe module is usable from Cython via::\n\n    cimport scipy.special.cython_special\n\nError Handling\n==============\n\nFunctions can indicate an error by returning ``nan``; however they\ncannot emit warnings like their counterparts in ``scipy.special``.\n\nAvailable Functions\n===================\n\nFUNCLIST\n"""\n\nfrom __future__ import absolute_import\ninclude "_cython_special.pxi"\n')
# Assigning a type to the variable 'CYTHON_SPECIAL_PYX' (line 353)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 0), 'CYTHON_SPECIAL_PYX', str_504049)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 399, 0))

# 'import os' statement (line 399)
import os

import_module(stypy.reporting.localization.Localization(__file__, 399, 0), 'os', os, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 400, 0))

# 'import optparse' statement (line 400)
import optparse

import_module(stypy.reporting.localization.Localization(__file__, 400, 0), 'optparse', optparse, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 401, 0))

# 'import re' statement (line 401)
import re

import_module(stypy.reporting.localization.Localization(__file__, 401, 0), 're', re, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 402, 0))

# 'import textwrap' statement (line 402)
import textwrap

import_module(stypy.reporting.localization.Localization(__file__, 402, 0), 'textwrap', textwrap, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 403, 0))

# 'import itertools' statement (line 403)
import itertools

import_module(stypy.reporting.localization.Localization(__file__, 403, 0), 'itertools', itertools, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 404, 0))

# 'import numpy' statement (line 404)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/')
import_504050 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 404, 0), 'numpy')

if (type(import_504050) is not StypyTypeError):

    if (import_504050 != 'pyd_module'):
        __import__(import_504050)
        sys_modules_504051 = sys.modules[import_504050]
        import_module(stypy.reporting.localization.Localization(__file__, 404, 0), 'numpy', sys_modules_504051.module_type_store, module_type_store)
    else:
        import numpy

        import_module(stypy.reporting.localization.Localization(__file__, 404, 0), 'numpy', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 404)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 0), 'numpy', import_504050)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/')


# Assigning a Call to a Name (line 407):

# Assigning a Call to a Name (line 407):

# Call to abspath(...): (line 407)
# Processing the call arguments (line 407)

# Call to dirname(...): (line 407)
# Processing the call arguments (line 407)
# Getting the type of '__file__' (line 407)
file___504058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 43), '__file__', False)
# Processing the call keyword arguments (line 407)
kwargs_504059 = {}
# Getting the type of 'os' (line 407)
os_504055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 27), 'os', False)
# Obtaining the member 'path' of a type (line 407)
path_504056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 27), os_504055, 'path')
# Obtaining the member 'dirname' of a type (line 407)
dirname_504057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 27), path_504056, 'dirname')
# Calling dirname(args, kwargs) (line 407)
dirname_call_result_504060 = invoke(stypy.reporting.localization.Localization(__file__, 407, 27), dirname_504057, *[file___504058], **kwargs_504059)

# Processing the call keyword arguments (line 407)
kwargs_504061 = {}
# Getting the type of 'os' (line 407)
os_504052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 11), 'os', False)
# Obtaining the member 'path' of a type (line 407)
path_504053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 11), os_504052, 'path')
# Obtaining the member 'abspath' of a type (line 407)
abspath_504054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 11), path_504053, 'abspath')
# Calling abspath(args, kwargs) (line 407)
abspath_call_result_504062 = invoke(stypy.reporting.localization.Localization(__file__, 407, 11), abspath_504054, *[dirname_call_result_504060], **kwargs_504061)

# Assigning a type to the variable 'BASE_DIR' (line 407)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 407, 0), 'BASE_DIR', abspath_call_result_504062)

# Assigning a Call to a Name (line 409):

# Assigning a Call to a Name (line 409):

# Call to __import__(...): (line 409)
# Processing the call arguments (line 409)
str_504064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 25), 'str', 'add_newdocs')
# Processing the call keyword arguments (line 409)
kwargs_504065 = {}
# Getting the type of '__import__' (line 409)
import___504063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 14), '__import__', False)
# Calling __import__(args, kwargs) (line 409)
import___call_result_504066 = invoke(stypy.reporting.localization.Localization(__file__, 409, 14), import___504063, *[str_504064], **kwargs_504065)

# Assigning a type to the variable 'add_newdocs' (line 409)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 0), 'add_newdocs', import___call_result_504066)

# Assigning a Dict to a Name (line 411):

# Assigning a Dict to a Name (line 411):

# Obtaining an instance of the builtin type 'dict' (line 411)
dict_504067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 11), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 411)
# Adding element type (key, value) (line 411)
str_504068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 4), 'str', 'f')
str_504069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 9), 'str', 'float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 11), dict_504067, (str_504068, str_504069))
# Adding element type (key, value) (line 411)
str_504070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 4), 'str', 'd')
str_504071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 9), 'str', 'double')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 11), dict_504067, (str_504070, str_504071))
# Adding element type (key, value) (line 411)
str_504072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 4), 'str', 'g')
str_504073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 9), 'str', 'long double')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 11), dict_504067, (str_504072, str_504073))
# Adding element type (key, value) (line 411)
str_504074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 4), 'str', 'F')
str_504075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 9), 'str', 'float complex')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 11), dict_504067, (str_504074, str_504075))
# Adding element type (key, value) (line 411)
str_504076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 4), 'str', 'D')
str_504077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 9), 'str', 'double complex')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 11), dict_504067, (str_504076, str_504077))
# Adding element type (key, value) (line 411)
str_504078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 4), 'str', 'G')
str_504079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 9), 'str', 'long double complex')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 11), dict_504067, (str_504078, str_504079))
# Adding element type (key, value) (line 411)
str_504080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 4), 'str', 'i')
str_504081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 9), 'str', 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 11), dict_504067, (str_504080, str_504081))
# Adding element type (key, value) (line 411)
str_504082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 4), 'str', 'l')
str_504083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 9), 'str', 'long')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 11), dict_504067, (str_504082, str_504083))
# Adding element type (key, value) (line 411)
str_504084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 4), 'str', 'v')
str_504085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 9), 'str', 'void')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 411, 11), dict_504067, (str_504084, str_504085))

# Assigning a type to the variable 'CY_TYPES' (line 411)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 0), 'CY_TYPES', dict_504067)

# Assigning a Dict to a Name (line 423):

# Assigning a Dict to a Name (line 423):

# Obtaining an instance of the builtin type 'dict' (line 423)
dict_504086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 10), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 423)
# Adding element type (key, value) (line 423)
str_504087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 4), 'str', 'f')
str_504088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 9), 'str', 'npy_float')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 10), dict_504086, (str_504087, str_504088))
# Adding element type (key, value) (line 423)
str_504089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 4), 'str', 'd')
str_504090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 9), 'str', 'npy_double')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 10), dict_504086, (str_504089, str_504090))
# Adding element type (key, value) (line 423)
str_504091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 426, 4), 'str', 'g')
str_504092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 426, 9), 'str', 'npy_longdouble')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 10), dict_504086, (str_504091, str_504092))
# Adding element type (key, value) (line 423)
str_504093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 4), 'str', 'F')
str_504094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 9), 'str', 'npy_cfloat')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 10), dict_504086, (str_504093, str_504094))
# Adding element type (key, value) (line 423)
str_504095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 4), 'str', 'D')
str_504096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 9), 'str', 'npy_cdouble')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 10), dict_504086, (str_504095, str_504096))
# Adding element type (key, value) (line 423)
str_504097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 4), 'str', 'G')
str_504098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 9), 'str', 'npy_clongdouble')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 10), dict_504086, (str_504097, str_504098))
# Adding element type (key, value) (line 423)
str_504099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 4), 'str', 'i')
str_504100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 9), 'str', 'npy_int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 10), dict_504086, (str_504099, str_504100))
# Adding element type (key, value) (line 423)
str_504101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 4), 'str', 'l')
str_504102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 9), 'str', 'npy_long')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 10), dict_504086, (str_504101, str_504102))
# Adding element type (key, value) (line 423)
str_504103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 432, 4), 'str', 'v')
str_504104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 432, 9), 'str', 'void')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 423, 10), dict_504086, (str_504103, str_504104))

# Assigning a type to the variable 'C_TYPES' (line 423)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 423, 0), 'C_TYPES', dict_504086)

# Assigning a Dict to a Name (line 435):

# Assigning a Dict to a Name (line 435):

# Obtaining an instance of the builtin type 'dict' (line 435)
dict_504105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 13), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 435)
# Adding element type (key, value) (line 435)
str_504106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 4), 'str', 'f')
str_504107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 9), 'str', 'NPY_FLOAT')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 13), dict_504105, (str_504106, str_504107))
# Adding element type (key, value) (line 435)
str_504108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 4), 'str', 'd')
str_504109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 9), 'str', 'NPY_DOUBLE')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 13), dict_504105, (str_504108, str_504109))
# Adding element type (key, value) (line 435)
str_504110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 4), 'str', 'g')
str_504111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 9), 'str', 'NPY_LONGDOUBLE')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 13), dict_504105, (str_504110, str_504111))
# Adding element type (key, value) (line 435)
str_504112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 4), 'str', 'F')
str_504113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 9), 'str', 'NPY_CFLOAT')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 13), dict_504105, (str_504112, str_504113))
# Adding element type (key, value) (line 435)
str_504114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 4), 'str', 'D')
str_504115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 9), 'str', 'NPY_CDOUBLE')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 13), dict_504105, (str_504114, str_504115))
# Adding element type (key, value) (line 435)
str_504116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 4), 'str', 'G')
str_504117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 9), 'str', 'NPY_CLONGDOUBLE')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 13), dict_504105, (str_504116, str_504117))
# Adding element type (key, value) (line 435)
str_504118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 4), 'str', 'i')
str_504119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 9), 'str', 'NPY_INT')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 13), dict_504105, (str_504118, str_504119))
# Adding element type (key, value) (line 435)
str_504120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 4), 'str', 'l')
str_504121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 9), 'str', 'NPY_LONG')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 13), dict_504105, (str_504120, str_504121))

# Assigning a type to the variable 'TYPE_NAMES' (line 435)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 0), 'TYPE_NAMES', dict_504105)

# Assigning a Dict to a Name (line 446):

# Assigning a Dict to a Name (line 446):

# Obtaining an instance of the builtin type 'dict' (line 446)
dict_504122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 28), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 446)
# Adding element type (key, value) (line 446)
str_504123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 4), 'str', 'airy')

# Obtaining an instance of the builtin type 'list' (line 447)
list_504124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 12), 'list')
# Adding type elements to the builtin type 'list' instance (line 447)
# Adding element type (line 447)
str_504125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 13), 'str', 'd*dddd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 447, 12), list_504124, str_504125)
# Adding element type (line 447)
str_504126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 23), 'str', 'D*DDDD')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 447, 12), list_504124, str_504126)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 28), dict_504122, (str_504123, list_504124))
# Adding element type (key, value) (line 446)
str_504127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 4), 'str', 'beta')

# Obtaining an instance of the builtin type 'list' (line 448)
list_504128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 12), 'list')
# Adding type elements to the builtin type 'list' instance (line 448)
# Adding element type (line 448)
str_504129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 13), 'str', 'dd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 12), list_504128, str_504129)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 28), dict_504122, (str_504127, list_504128))
# Adding element type (key, value) (line 446)
str_504130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 4), 'str', 'erf')

# Obtaining an instance of the builtin type 'list' (line 449)
list_504131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 11), 'list')
# Adding type elements to the builtin type 'list' instance (line 449)
# Adding element type (line 449)
str_504132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 12), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 449, 11), list_504131, str_504132)
# Adding element type (line 449)
str_504133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 17), 'str', 'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 449, 11), list_504131, str_504133)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 28), dict_504122, (str_504130, list_504131))
# Adding element type (key, value) (line 446)
str_504134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 4), 'str', 'exprel')

# Obtaining an instance of the builtin type 'list' (line 450)
list_504135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 14), 'list')
# Adding type elements to the builtin type 'list' instance (line 450)
# Adding element type (line 450)
str_504136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 15), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 450, 14), list_504135, str_504136)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 28), dict_504122, (str_504134, list_504135))
# Adding element type (key, value) (line 446)
str_504137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 4), 'str', 'gamma')

# Obtaining an instance of the builtin type 'list' (line 451)
list_504138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 13), 'list')
# Adding type elements to the builtin type 'list' instance (line 451)
# Adding element type (line 451)
str_504139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 14), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 451, 13), list_504138, str_504139)
# Adding element type (line 451)
str_504140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 19), 'str', 'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 451, 13), list_504138, str_504140)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 28), dict_504122, (str_504137, list_504138))
# Adding element type (key, value) (line 446)
str_504141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 4), 'str', 'jv')

# Obtaining an instance of the builtin type 'list' (line 452)
list_504142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 10), 'list')
# Adding type elements to the builtin type 'list' instance (line 452)
# Adding element type (line 452)
str_504143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 11), 'str', 'dd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 452, 10), list_504142, str_504143)
# Adding element type (line 452)
str_504144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 17), 'str', 'dD')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 452, 10), list_504142, str_504144)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 28), dict_504122, (str_504141, list_504142))
# Adding element type (key, value) (line 446)
str_504145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 4), 'str', 'loggamma')

# Obtaining an instance of the builtin type 'list' (line 453)
list_504146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 16), 'list')
# Adding type elements to the builtin type 'list' instance (line 453)
# Adding element type (line 453)
str_504147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 17), 'str', 'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 453, 16), list_504146, str_504147)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 28), dict_504122, (str_504145, list_504146))
# Adding element type (key, value) (line 446)
str_504148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 4), 'str', 'logit')

# Obtaining an instance of the builtin type 'list' (line 454)
list_504149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 13), 'list')
# Adding type elements to the builtin type 'list' instance (line 454)
# Adding element type (line 454)
str_504150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 14), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 454, 13), list_504149, str_504150)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 28), dict_504122, (str_504148, list_504149))
# Adding element type (key, value) (line 446)
str_504151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 4), 'str', 'psi')

# Obtaining an instance of the builtin type 'list' (line 455)
list_504152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 11), 'list')
# Adding type elements to the builtin type 'list' instance (line 455)
# Adding element type (line 455)
str_504153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 12), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 455, 11), list_504152, str_504153)
# Adding element type (line 455)
str_504154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 17), 'str', 'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 455, 11), list_504152, str_504154)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 446, 28), dict_504122, (str_504151, list_504152))

# Assigning a type to the variable 'CYTHON_SPECIAL_BENCHFUNCS' (line 446)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 446, 0), 'CYTHON_SPECIAL_BENCHFUNCS', dict_504122)

@norecursion
def underscore(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'underscore'
    module_type_store = module_type_store.open_function_context('underscore', 459, 0, False)
    
    # Passed parameters checking function
    underscore.stypy_localization = localization
    underscore.stypy_type_of_self = None
    underscore.stypy_type_store = module_type_store
    underscore.stypy_function_name = 'underscore'
    underscore.stypy_param_names_list = ['arg']
    underscore.stypy_varargs_param_name = None
    underscore.stypy_kwargs_param_name = None
    underscore.stypy_call_defaults = defaults
    underscore.stypy_call_varargs = varargs
    underscore.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'underscore', ['arg'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'underscore', localization, ['arg'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'underscore(...)' code ##################

    
    # Call to replace(...): (line 460)
    # Processing the call arguments (line 460)
    str_504157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 23), 'str', ' ')
    str_504158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 28), 'str', '_')
    # Processing the call keyword arguments (line 460)
    kwargs_504159 = {}
    # Getting the type of 'arg' (line 460)
    arg_504155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 11), 'arg', False)
    # Obtaining the member 'replace' of a type (line 460)
    replace_504156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 460, 11), arg_504155, 'replace')
    # Calling replace(args, kwargs) (line 460)
    replace_call_result_504160 = invoke(stypy.reporting.localization.Localization(__file__, 460, 11), replace_504156, *[str_504157, str_504158], **kwargs_504159)
    
    # Assigning a type to the variable 'stypy_return_type' (line 460)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 460, 4), 'stypy_return_type', replace_call_result_504160)
    
    # ################# End of 'underscore(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'underscore' in the type store
    # Getting the type of 'stypy_return_type' (line 459)
    stypy_return_type_504161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_504161)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'underscore'
    return stypy_return_type_504161

# Assigning a type to the variable 'underscore' (line 459)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 0), 'underscore', underscore)

@norecursion
def cast_order(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'cast_order'
    module_type_store = module_type_store.open_function_context('cast_order', 463, 0, False)
    
    # Passed parameters checking function
    cast_order.stypy_localization = localization
    cast_order.stypy_type_of_self = None
    cast_order.stypy_type_store = module_type_store
    cast_order.stypy_function_name = 'cast_order'
    cast_order.stypy_param_names_list = ['c']
    cast_order.stypy_varargs_param_name = None
    cast_order.stypy_kwargs_param_name = None
    cast_order.stypy_call_defaults = defaults
    cast_order.stypy_call_varargs = varargs
    cast_order.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'cast_order', ['c'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'cast_order', localization, ['c'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'cast_order(...)' code ##################

    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'c' (line 464)
    c_504167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 41), 'c')
    comprehension_504168 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 12), c_504167)
    # Assigning a type to the variable 'x' (line 464)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 12), 'x', comprehension_504168)
    
    # Call to index(...): (line 464)
    # Processing the call arguments (line 464)
    # Getting the type of 'x' (line 464)
    x_504164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 29), 'x', False)
    # Processing the call keyword arguments (line 464)
    kwargs_504165 = {}
    str_504162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 12), 'str', 'ilfdgFDG')
    # Obtaining the member 'index' of a type (line 464)
    index_504163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 464, 12), str_504162, 'index')
    # Calling index(args, kwargs) (line 464)
    index_call_result_504166 = invoke(stypy.reporting.localization.Localization(__file__, 464, 12), index_504163, *[x_504164], **kwargs_504165)
    
    list_504169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 12), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 12), list_504169, index_call_result_504166)
    # Assigning a type to the variable 'stypy_return_type' (line 464)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 4), 'stypy_return_type', list_504169)
    
    # ################# End of 'cast_order(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'cast_order' in the type store
    # Getting the type of 'stypy_return_type' (line 463)
    stypy_return_type_504170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_504170)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'cast_order'
    return stypy_return_type_504170

# Assigning a type to the variable 'cast_order' (line 463)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 463, 0), 'cast_order', cast_order)

# Assigning a Call to a Name (line 468):

# Assigning a Call to a Name (line 468):

# Call to set(...): (line 468)
# Processing the call arguments (line 468)

# Obtaining an instance of the builtin type 'list' (line 468)
list_504172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 468)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 469)
tuple_504173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 5), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 469)
# Adding element type (line 469)
str_504174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 5), 'str', 'F')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 5), tuple_504173, str_504174)
# Adding element type (line 469)
str_504175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 10), 'str', 'i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 5), tuple_504173, str_504175)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504173)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 469)
tuple_504176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 469)
# Adding element type (line 469)
str_504177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 17), 'str', 'F')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 17), tuple_504176, str_504177)
# Adding element type (line 469)
str_504178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 22), 'str', 'l')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 17), tuple_504176, str_504178)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504176)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 469)
tuple_504179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 29), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 469)
# Adding element type (line 469)
str_504180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 29), 'str', 'F')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 29), tuple_504179, str_504180)
# Adding element type (line 469)
str_504181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 34), 'str', 'f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 29), tuple_504179, str_504181)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504179)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 469)
tuple_504182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 469)
# Adding element type (line 469)
str_504183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 41), 'str', 'F')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 41), tuple_504182, str_504183)
# Adding element type (line 469)
str_504184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 46), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 41), tuple_504182, str_504184)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504182)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 469)
tuple_504185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 53), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 469)
# Adding element type (line 469)
str_504186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 53), 'str', 'F')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 53), tuple_504185, str_504186)
# Adding element type (line 469)
str_504187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 58), 'str', 'g')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 53), tuple_504185, str_504187)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504185)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 470)
tuple_504188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 5), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 470)
# Adding element type (line 470)
str_504189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 5), 'str', 'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 5), tuple_504188, str_504189)
# Adding element type (line 470)
str_504190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 10), 'str', 'i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 5), tuple_504188, str_504190)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504188)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 470)
tuple_504191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 470)
# Adding element type (line 470)
str_504192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 17), 'str', 'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 17), tuple_504191, str_504192)
# Adding element type (line 470)
str_504193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 22), 'str', 'l')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 17), tuple_504191, str_504193)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504191)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 470)
tuple_504194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 29), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 470)
# Adding element type (line 470)
str_504195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 29), 'str', 'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 29), tuple_504194, str_504195)
# Adding element type (line 470)
str_504196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 34), 'str', 'f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 29), tuple_504194, str_504196)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504194)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 470)
tuple_504197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 470)
# Adding element type (line 470)
str_504198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 41), 'str', 'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 41), tuple_504197, str_504198)
# Adding element type (line 470)
str_504199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 46), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 41), tuple_504197, str_504199)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504197)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 470)
tuple_504200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 53), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 470)
# Adding element type (line 470)
str_504201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 53), 'str', 'D')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 53), tuple_504200, str_504201)
# Adding element type (line 470)
str_504202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 58), 'str', 'g')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 470, 53), tuple_504200, str_504202)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504200)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 471)
tuple_504203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 5), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 471)
# Adding element type (line 471)
str_504204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 5), 'str', 'G')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 5), tuple_504203, str_504204)
# Adding element type (line 471)
str_504205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 10), 'str', 'i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 5), tuple_504203, str_504205)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504203)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 471)
tuple_504206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 471)
# Adding element type (line 471)
str_504207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 17), 'str', 'G')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 17), tuple_504206, str_504207)
# Adding element type (line 471)
str_504208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 22), 'str', 'l')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 17), tuple_504206, str_504208)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504206)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 471)
tuple_504209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 29), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 471)
# Adding element type (line 471)
str_504210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 29), 'str', 'G')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 29), tuple_504209, str_504210)
# Adding element type (line 471)
str_504211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 34), 'str', 'f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 29), tuple_504209, str_504211)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504209)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 471)
tuple_504212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 41), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 471)
# Adding element type (line 471)
str_504213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 41), 'str', 'G')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 41), tuple_504212, str_504213)
# Adding element type (line 471)
str_504214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 46), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 41), tuple_504212, str_504214)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504212)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 471)
tuple_504215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 53), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 471)
# Adding element type (line 471)
str_504216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 53), 'str', 'G')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 53), tuple_504215, str_504216)
# Adding element type (line 471)
str_504217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 58), 'str', 'g')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 53), tuple_504215, str_504217)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504215)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 472)
tuple_504218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 5), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 472)
# Adding element type (line 472)
str_504219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 5), 'str', 'f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 5), tuple_504218, str_504219)
# Adding element type (line 472)
str_504220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 10), 'str', 'i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 5), tuple_504218, str_504220)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504218)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 472)
tuple_504221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 472)
# Adding element type (line 472)
str_504222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 17), 'str', 'f')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 17), tuple_504221, str_504222)
# Adding element type (line 472)
str_504223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 22), 'str', 'l')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 17), tuple_504221, str_504223)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504221)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 473)
tuple_504224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 5), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 473)
# Adding element type (line 473)
str_504225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 5), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 5), tuple_504224, str_504225)
# Adding element type (line 473)
str_504226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 10), 'str', 'i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 5), tuple_504224, str_504226)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504224)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 473)
tuple_504227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 473)
# Adding element type (line 473)
str_504228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 17), 'str', 'd')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 17), tuple_504227, str_504228)
# Adding element type (line 473)
str_504229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 22), 'str', 'l')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 17), tuple_504227, str_504229)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504227)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 474)
tuple_504230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 5), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 474)
# Adding element type (line 474)
str_504231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 5), 'str', 'g')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 5), tuple_504230, str_504231)
# Adding element type (line 474)
str_504232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 10), 'str', 'i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 5), tuple_504230, str_504232)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504230)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 474)
tuple_504233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 474)
# Adding element type (line 474)
str_504234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 17), 'str', 'g')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 17), tuple_504233, str_504234)
# Adding element type (line 474)
str_504235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 22), 'str', 'l')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 17), tuple_504233, str_504235)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504233)
# Adding element type (line 468)

# Obtaining an instance of the builtin type 'tuple' (line 475)
tuple_504236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 5), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 475)
# Adding element type (line 475)
str_504237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 5), 'str', 'l')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 475, 5), tuple_504236, str_504237)
# Adding element type (line 475)
str_504238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 10), 'str', 'i')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 475, 5), tuple_504236, str_504238)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 25), list_504172, tuple_504236)

# Processing the call keyword arguments (line 468)
kwargs_504239 = {}
# Getting the type of 'set' (line 468)
set_504171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 21), 'set', False)
# Calling set(args, kwargs) (line 468)
set_call_result_504240 = invoke(stypy.reporting.localization.Localization(__file__, 468, 21), set_504171, *[list_504172], **kwargs_504239)

# Assigning a type to the variable 'DANGEROUS_DOWNCAST' (line 468)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 0), 'DANGEROUS_DOWNCAST', set_call_result_504240)

# Assigning a Dict to a Name (line 478):

# Assigning a Dict to a Name (line 478):

# Obtaining an instance of the builtin type 'dict' (line 478)
dict_504241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 12), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 478)
# Adding element type (key, value) (line 478)
str_504242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 4), 'str', 'f')
str_504243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 9), 'str', 'NPY_NAN')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 12), dict_504241, (str_504242, str_504243))
# Adding element type (key, value) (line 478)
str_504244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 4), 'str', 'd')
str_504245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 9), 'str', 'NPY_NAN')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 12), dict_504241, (str_504244, str_504245))
# Adding element type (key, value) (line 478)
str_504246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 4), 'str', 'g')
str_504247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 9), 'str', 'NPY_NAN')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 12), dict_504241, (str_504246, str_504247))
# Adding element type (key, value) (line 478)
str_504248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 4), 'str', 'F')
str_504249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 9), 'str', 'NPY_NAN')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 12), dict_504241, (str_504248, str_504249))
# Adding element type (key, value) (line 478)
str_504250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 483, 4), 'str', 'D')
str_504251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 483, 9), 'str', 'NPY_NAN')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 12), dict_504241, (str_504250, str_504251))
# Adding element type (key, value) (line 478)
str_504252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 484, 4), 'str', 'G')
str_504253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 484, 9), 'str', 'NPY_NAN')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 12), dict_504241, (str_504252, str_504253))
# Adding element type (key, value) (line 478)
str_504254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 4), 'str', 'i')
str_504255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 9), 'str', '0xbad0bad0')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 12), dict_504241, (str_504254, str_504255))
# Adding element type (key, value) (line 478)
str_504256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 4), 'str', 'l')
str_504257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 9), 'str', '0xbad0bad0')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 12), dict_504241, (str_504256, str_504257))

# Assigning a type to the variable 'NAN_VALUE' (line 478)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 0), 'NAN_VALUE', dict_504241)

@norecursion
def generate_loop(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'generate_loop'
    module_type_store = module_type_store.open_function_context('generate_loop', 490, 0, False)
    
    # Passed parameters checking function
    generate_loop.stypy_localization = localization
    generate_loop.stypy_type_of_self = None
    generate_loop.stypy_type_store = module_type_store
    generate_loop.stypy_function_name = 'generate_loop'
    generate_loop.stypy_param_names_list = ['func_inputs', 'func_outputs', 'func_retval', 'ufunc_inputs', 'ufunc_outputs']
    generate_loop.stypy_varargs_param_name = None
    generate_loop.stypy_kwargs_param_name = None
    generate_loop.stypy_call_defaults = defaults
    generate_loop.stypy_call_varargs = varargs
    generate_loop.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_loop', ['func_inputs', 'func_outputs', 'func_retval', 'ufunc_inputs', 'ufunc_outputs'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_loop', localization, ['func_inputs', 'func_outputs', 'func_retval', 'ufunc_inputs', 'ufunc_outputs'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_loop(...)' code ##################

    str_504258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, (-1)), 'str', '\n    Generate a UFunc loop function that calls a function given as its\n    data parameter with the specified input and output arguments and\n    return value.\n\n    This function can be passed to PyUFunc_FromFuncAndData.\n\n    Parameters\n    ----------\n    func_inputs, func_outputs, func_retval : str\n        Signature of the function to call, given as type codes of the\n        input, output and return value arguments. These 1-character\n        codes are given according to the CY_TYPES and TYPE_NAMES\n        lists above.\n\n        The corresponding C function signature to be called is:\n\n            retval func(intype1 iv1, intype2 iv2, ..., outtype1 *ov1, ...);\n\n        If len(ufunc_outputs) == len(func_outputs)+1, the return value\n        is treated as the first output argument. Otherwise, the return\n        value is ignored.\n\n    ufunc_inputs, ufunc_outputs : str\n        Ufunc input and output signature.\n\n        This does not have to exactly match the function signature,\n        as long as the type casts work out on the C level.\n\n    Returns\n    -------\n    loop_name\n        Name of the generated loop function.\n    loop_body\n        Generated C code for the loop.\n\n    ')
    
    
    
    # Call to len(...): (line 529)
    # Processing the call arguments (line 529)
    # Getting the type of 'func_inputs' (line 529)
    func_inputs_504260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 11), 'func_inputs', False)
    # Processing the call keyword arguments (line 529)
    kwargs_504261 = {}
    # Getting the type of 'len' (line 529)
    len_504259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 7), 'len', False)
    # Calling len(args, kwargs) (line 529)
    len_call_result_504262 = invoke(stypy.reporting.localization.Localization(__file__, 529, 7), len_504259, *[func_inputs_504260], **kwargs_504261)
    
    
    # Call to len(...): (line 529)
    # Processing the call arguments (line 529)
    # Getting the type of 'ufunc_inputs' (line 529)
    ufunc_inputs_504264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 31), 'ufunc_inputs', False)
    # Processing the call keyword arguments (line 529)
    kwargs_504265 = {}
    # Getting the type of 'len' (line 529)
    len_504263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 27), 'len', False)
    # Calling len(args, kwargs) (line 529)
    len_call_result_504266 = invoke(stypy.reporting.localization.Localization(__file__, 529, 27), len_504263, *[ufunc_inputs_504264], **kwargs_504265)
    
    # Applying the binary operator '!=' (line 529)
    result_ne_504267 = python_operator(stypy.reporting.localization.Localization(__file__, 529, 7), '!=', len_call_result_504262, len_call_result_504266)
    
    # Testing the type of an if condition (line 529)
    if_condition_504268 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 529, 4), result_ne_504267)
    # Assigning a type to the variable 'if_condition_504268' (line 529)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 4), 'if_condition_504268', if_condition_504268)
    # SSA begins for if statement (line 529)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 530)
    # Processing the call arguments (line 530)
    str_504270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 25), 'str', 'Function and ufunc have different number of inputs')
    # Processing the call keyword arguments (line 530)
    kwargs_504271 = {}
    # Getting the type of 'ValueError' (line 530)
    ValueError_504269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 530)
    ValueError_call_result_504272 = invoke(stypy.reporting.localization.Localization(__file__, 530, 14), ValueError_504269, *[str_504270], **kwargs_504271)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 530, 8), ValueError_call_result_504272, 'raise parameter', BaseException)
    # SSA join for if statement (line 529)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    
    # Call to len(...): (line 532)
    # Processing the call arguments (line 532)
    # Getting the type of 'func_outputs' (line 532)
    func_outputs_504274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 11), 'func_outputs', False)
    # Processing the call keyword arguments (line 532)
    kwargs_504275 = {}
    # Getting the type of 'len' (line 532)
    len_504273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 7), 'len', False)
    # Calling len(args, kwargs) (line 532)
    len_call_result_504276 = invoke(stypy.reporting.localization.Localization(__file__, 532, 7), len_504273, *[func_outputs_504274], **kwargs_504275)
    
    
    # Call to len(...): (line 532)
    # Processing the call arguments (line 532)
    # Getting the type of 'ufunc_outputs' (line 532)
    ufunc_outputs_504278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 32), 'ufunc_outputs', False)
    # Processing the call keyword arguments (line 532)
    kwargs_504279 = {}
    # Getting the type of 'len' (line 532)
    len_504277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 28), 'len', False)
    # Calling len(args, kwargs) (line 532)
    len_call_result_504280 = invoke(stypy.reporting.localization.Localization(__file__, 532, 28), len_504277, *[ufunc_outputs_504278], **kwargs_504279)
    
    # Applying the binary operator '!=' (line 532)
    result_ne_504281 = python_operator(stypy.reporting.localization.Localization(__file__, 532, 7), '!=', len_call_result_504276, len_call_result_504280)
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'func_retval' (line 533)
    func_retval_504282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 12), 'func_retval')
    str_504283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 27), 'str', 'v')
    # Applying the binary operator '!=' (line 533)
    result_ne_504284 = python_operator(stypy.reporting.localization.Localization(__file__, 533, 12), '!=', func_retval_504282, str_504283)
    
    
    
    # Call to len(...): (line 533)
    # Processing the call arguments (line 533)
    # Getting the type of 'func_outputs' (line 533)
    func_outputs_504286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 39), 'func_outputs', False)
    # Processing the call keyword arguments (line 533)
    kwargs_504287 = {}
    # Getting the type of 'len' (line 533)
    len_504285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 35), 'len', False)
    # Calling len(args, kwargs) (line 533)
    len_call_result_504288 = invoke(stypy.reporting.localization.Localization(__file__, 533, 35), len_504285, *[func_outputs_504286], **kwargs_504287)
    
    int_504289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 53), 'int')
    # Applying the binary operator '+' (line 533)
    result_add_504290 = python_operator(stypy.reporting.localization.Localization(__file__, 533, 35), '+', len_call_result_504288, int_504289)
    
    
    # Call to len(...): (line 533)
    # Processing the call arguments (line 533)
    # Getting the type of 'ufunc_outputs' (line 533)
    ufunc_outputs_504292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 62), 'ufunc_outputs', False)
    # Processing the call keyword arguments (line 533)
    kwargs_504293 = {}
    # Getting the type of 'len' (line 533)
    len_504291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 58), 'len', False)
    # Calling len(args, kwargs) (line 533)
    len_call_result_504294 = invoke(stypy.reporting.localization.Localization(__file__, 533, 58), len_504291, *[ufunc_outputs_504292], **kwargs_504293)
    
    # Applying the binary operator '==' (line 533)
    result_eq_504295 = python_operator(stypy.reporting.localization.Localization(__file__, 533, 35), '==', result_add_504290, len_call_result_504294)
    
    # Applying the binary operator 'and' (line 533)
    result_and_keyword_504296 = python_operator(stypy.reporting.localization.Localization(__file__, 533, 12), 'and', result_ne_504284, result_eq_504295)
    
    # Applying the 'not' unary operator (line 532)
    result_not__504297 = python_operator(stypy.reporting.localization.Localization(__file__, 532, 51), 'not', result_and_keyword_504296)
    
    # Applying the binary operator 'and' (line 532)
    result_and_keyword_504298 = python_operator(stypy.reporting.localization.Localization(__file__, 532, 7), 'and', result_ne_504281, result_not__504297)
    
    # Testing the type of an if condition (line 532)
    if_condition_504299 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 532, 4), result_and_keyword_504298)
    # Assigning a type to the variable 'if_condition_504299' (line 532)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 4), 'if_condition_504299', if_condition_504299)
    # SSA begins for if statement (line 532)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 534)
    # Processing the call arguments (line 534)
    str_504301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 25), 'str', "Function retval and ufunc outputs don't match")
    # Processing the call keyword arguments (line 534)
    kwargs_504302 = {}
    # Getting the type of 'ValueError' (line 534)
    ValueError_504300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 534)
    ValueError_call_result_504303 = invoke(stypy.reporting.localization.Localization(__file__, 534, 14), ValueError_504300, *[str_504301], **kwargs_504302)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 534, 8), ValueError_call_result_504303, 'raise parameter', BaseException)
    # SSA join for if statement (line 532)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 536):
    
    # Assigning a BinOp to a Name (line 536):
    str_504304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 11), 'str', 'loop_%s_%s_%s_As_%s_%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 537)
    tuple_504305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, 8), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 537)
    # Adding element type (line 537)
    # Getting the type of 'func_retval' (line 537)
    func_retval_504306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 8), 'func_retval')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 537, 8), tuple_504305, func_retval_504306)
    # Adding element type (line 537)
    # Getting the type of 'func_inputs' (line 537)
    func_inputs_504307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 21), 'func_inputs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 537, 8), tuple_504305, func_inputs_504307)
    # Adding element type (line 537)
    # Getting the type of 'func_outputs' (line 537)
    func_outputs_504308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 34), 'func_outputs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 537, 8), tuple_504305, func_outputs_504308)
    # Adding element type (line 537)
    # Getting the type of 'ufunc_inputs' (line 537)
    ufunc_inputs_504309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 48), 'ufunc_inputs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 537, 8), tuple_504305, ufunc_inputs_504309)
    # Adding element type (line 537)
    # Getting the type of 'ufunc_outputs' (line 537)
    ufunc_outputs_504310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 62), 'ufunc_outputs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 537, 8), tuple_504305, ufunc_outputs_504310)
    
    # Applying the binary operator '%' (line 536)
    result_mod_504311 = python_operator(stypy.reporting.localization.Localization(__file__, 536, 11), '%', str_504304, tuple_504305)
    
    # Assigning a type to the variable 'name' (line 536)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 4), 'name', result_mod_504311)
    
    # Assigning a BinOp to a Name (line 539):
    
    # Assigning a BinOp to a Name (line 539):
    str_504312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 11), 'str', 'cdef void %s(char **args, np.npy_intp *dims, np.npy_intp *steps, void *data) nogil:\n')
    # Getting the type of 'name' (line 539)
    name_504313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 101), 'name')
    # Applying the binary operator '%' (line 539)
    result_mod_504314 = python_operator(stypy.reporting.localization.Localization(__file__, 539, 11), '%', str_504312, name_504313)
    
    # Assigning a type to the variable 'body' (line 539)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 4), 'body', result_mod_504314)
    
    # Getting the type of 'body' (line 540)
    body_504315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 4), 'body')
    str_504316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 12), 'str', '    cdef np.npy_intp i, n = dims[0]\n')
    # Applying the binary operator '+=' (line 540)
    result_iadd_504317 = python_operator(stypy.reporting.localization.Localization(__file__, 540, 4), '+=', body_504315, str_504316)
    # Assigning a type to the variable 'body' (line 540)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 4), 'body', result_iadd_504317)
    
    
    # Getting the type of 'body' (line 541)
    body_504318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 4), 'body')
    str_504319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 12), 'str', '    cdef void *func = (<void**>data)[0]\n')
    # Applying the binary operator '+=' (line 541)
    result_iadd_504320 = python_operator(stypy.reporting.localization.Localization(__file__, 541, 4), '+=', body_504318, str_504319)
    # Assigning a type to the variable 'body' (line 541)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 541, 4), 'body', result_iadd_504320)
    
    
    # Getting the type of 'body' (line 542)
    body_504321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 4), 'body')
    str_504322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 12), 'str', '    cdef char *func_name = <char*>(<void**>data)[1]\n')
    # Applying the binary operator '+=' (line 542)
    result_iadd_504323 = python_operator(stypy.reporting.localization.Localization(__file__, 542, 4), '+=', body_504321, str_504322)
    # Assigning a type to the variable 'body' (line 542)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 4), 'body', result_iadd_504323)
    
    
    
    # Call to range(...): (line 544)
    # Processing the call arguments (line 544)
    
    # Call to len(...): (line 544)
    # Processing the call arguments (line 544)
    # Getting the type of 'ufunc_inputs' (line 544)
    ufunc_inputs_504326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 23), 'ufunc_inputs', False)
    # Processing the call keyword arguments (line 544)
    kwargs_504327 = {}
    # Getting the type of 'len' (line 544)
    len_504325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 19), 'len', False)
    # Calling len(args, kwargs) (line 544)
    len_call_result_504328 = invoke(stypy.reporting.localization.Localization(__file__, 544, 19), len_504325, *[ufunc_inputs_504326], **kwargs_504327)
    
    # Processing the call keyword arguments (line 544)
    kwargs_504329 = {}
    # Getting the type of 'range' (line 544)
    range_504324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 13), 'range', False)
    # Calling range(args, kwargs) (line 544)
    range_call_result_504330 = invoke(stypy.reporting.localization.Localization(__file__, 544, 13), range_504324, *[len_call_result_504328], **kwargs_504329)
    
    # Testing the type of a for loop iterable (line 544)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 544, 4), range_call_result_504330)
    # Getting the type of the for loop variable (line 544)
    for_loop_var_504331 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 544, 4), range_call_result_504330)
    # Assigning a type to the variable 'j' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 4), 'j', for_loop_var_504331)
    # SSA begins for a for statement (line 544)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'body' (line 545)
    body_504332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 8), 'body')
    str_504333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 16), 'str', '    cdef char *ip%d = args[%d]\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 545)
    tuple_504334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 54), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 545)
    # Adding element type (line 545)
    # Getting the type of 'j' (line 545)
    j_504335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 54), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 545, 54), tuple_504334, j_504335)
    # Adding element type (line 545)
    # Getting the type of 'j' (line 545)
    j_504336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 57), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 545, 54), tuple_504334, j_504336)
    
    # Applying the binary operator '%' (line 545)
    result_mod_504337 = python_operator(stypy.reporting.localization.Localization(__file__, 545, 16), '%', str_504333, tuple_504334)
    
    # Applying the binary operator '+=' (line 545)
    result_iadd_504338 = python_operator(stypy.reporting.localization.Localization(__file__, 545, 8), '+=', body_504332, result_mod_504337)
    # Assigning a type to the variable 'body' (line 545)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 8), 'body', result_iadd_504338)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to range(...): (line 546)
    # Processing the call arguments (line 546)
    
    # Call to len(...): (line 546)
    # Processing the call arguments (line 546)
    # Getting the type of 'ufunc_outputs' (line 546)
    ufunc_outputs_504341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 23), 'ufunc_outputs', False)
    # Processing the call keyword arguments (line 546)
    kwargs_504342 = {}
    # Getting the type of 'len' (line 546)
    len_504340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 19), 'len', False)
    # Calling len(args, kwargs) (line 546)
    len_call_result_504343 = invoke(stypy.reporting.localization.Localization(__file__, 546, 19), len_504340, *[ufunc_outputs_504341], **kwargs_504342)
    
    # Processing the call keyword arguments (line 546)
    kwargs_504344 = {}
    # Getting the type of 'range' (line 546)
    range_504339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 13), 'range', False)
    # Calling range(args, kwargs) (line 546)
    range_call_result_504345 = invoke(stypy.reporting.localization.Localization(__file__, 546, 13), range_504339, *[len_call_result_504343], **kwargs_504344)
    
    # Testing the type of a for loop iterable (line 546)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 546, 4), range_call_result_504345)
    # Getting the type of the for loop variable (line 546)
    for_loop_var_504346 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 546, 4), range_call_result_504345)
    # Assigning a type to the variable 'j' (line 546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 4), 'j', for_loop_var_504346)
    # SSA begins for a for statement (line 546)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'body' (line 547)
    body_504347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'body')
    str_504348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 16), 'str', '    cdef char *op%d = args[%d]\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 547)
    tuple_504349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 54), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 547)
    # Adding element type (line 547)
    # Getting the type of 'j' (line 547)
    j_504350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 54), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 54), tuple_504349, j_504350)
    # Adding element type (line 547)
    # Getting the type of 'j' (line 547)
    j_504351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 57), 'j')
    
    # Call to len(...): (line 547)
    # Processing the call arguments (line 547)
    # Getting the type of 'ufunc_inputs' (line 547)
    ufunc_inputs_504353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 65), 'ufunc_inputs', False)
    # Processing the call keyword arguments (line 547)
    kwargs_504354 = {}
    # Getting the type of 'len' (line 547)
    len_504352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 61), 'len', False)
    # Calling len(args, kwargs) (line 547)
    len_call_result_504355 = invoke(stypy.reporting.localization.Localization(__file__, 547, 61), len_504352, *[ufunc_inputs_504353], **kwargs_504354)
    
    # Applying the binary operator '+' (line 547)
    result_add_504356 = python_operator(stypy.reporting.localization.Localization(__file__, 547, 57), '+', j_504351, len_call_result_504355)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 54), tuple_504349, result_add_504356)
    
    # Applying the binary operator '%' (line 547)
    result_mod_504357 = python_operator(stypy.reporting.localization.Localization(__file__, 547, 16), '%', str_504348, tuple_504349)
    
    # Applying the binary operator '+=' (line 547)
    result_iadd_504358 = python_operator(stypy.reporting.localization.Localization(__file__, 547, 8), '+=', body_504347, result_mod_504357)
    # Assigning a type to the variable 'body' (line 547)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'body', result_iadd_504358)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a List to a Name (line 549):
    
    # Assigning a List to a Name (line 549):
    
    # Obtaining an instance of the builtin type 'list' (line 549)
    list_504359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 549)
    
    # Assigning a type to the variable 'ftypes' (line 549)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 4), 'ftypes', list_504359)
    
    # Assigning a List to a Name (line 550):
    
    # Assigning a List to a Name (line 550):
    
    # Obtaining an instance of the builtin type 'list' (line 550)
    list_504360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 550)
    
    # Assigning a type to the variable 'fvars' (line 550)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 550, 4), 'fvars', list_504360)
    
    # Assigning a List to a Name (line 551):
    
    # Assigning a List to a Name (line 551):
    
    # Obtaining an instance of the builtin type 'list' (line 551)
    list_504361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 551)
    
    # Assigning a type to the variable 'outtypecodes' (line 551)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 4), 'outtypecodes', list_504361)
    
    
    # Call to range(...): (line 552)
    # Processing the call arguments (line 552)
    
    # Call to len(...): (line 552)
    # Processing the call arguments (line 552)
    # Getting the type of 'func_inputs' (line 552)
    func_inputs_504364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 23), 'func_inputs', False)
    # Processing the call keyword arguments (line 552)
    kwargs_504365 = {}
    # Getting the type of 'len' (line 552)
    len_504363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 19), 'len', False)
    # Calling len(args, kwargs) (line 552)
    len_call_result_504366 = invoke(stypy.reporting.localization.Localization(__file__, 552, 19), len_504363, *[func_inputs_504364], **kwargs_504365)
    
    # Processing the call keyword arguments (line 552)
    kwargs_504367 = {}
    # Getting the type of 'range' (line 552)
    range_504362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 13), 'range', False)
    # Calling range(args, kwargs) (line 552)
    range_call_result_504368 = invoke(stypy.reporting.localization.Localization(__file__, 552, 13), range_504362, *[len_call_result_504366], **kwargs_504367)
    
    # Testing the type of a for loop iterable (line 552)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 552, 4), range_call_result_504368)
    # Getting the type of the for loop variable (line 552)
    for_loop_var_504369 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 552, 4), range_call_result_504368)
    # Assigning a type to the variable 'j' (line 552)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 4), 'j', for_loop_var_504369)
    # SSA begins for a for statement (line 552)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 553)
    # Processing the call arguments (line 553)
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 553)
    j_504372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 43), 'j', False)
    # Getting the type of 'func_inputs' (line 553)
    func_inputs_504373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 31), 'func_inputs', False)
    # Obtaining the member '__getitem__' of a type (line 553)
    getitem___504374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 31), func_inputs_504373, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 553)
    subscript_call_result_504375 = invoke(stypy.reporting.localization.Localization(__file__, 553, 31), getitem___504374, j_504372)
    
    # Getting the type of 'CY_TYPES' (line 553)
    CY_TYPES_504376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 22), 'CY_TYPES', False)
    # Obtaining the member '__getitem__' of a type (line 553)
    getitem___504377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 22), CY_TYPES_504376, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 553)
    subscript_call_result_504378 = invoke(stypy.reporting.localization.Localization(__file__, 553, 22), getitem___504377, subscript_call_result_504375)
    
    # Processing the call keyword arguments (line 553)
    kwargs_504379 = {}
    # Getting the type of 'ftypes' (line 553)
    ftypes_504370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 8), 'ftypes', False)
    # Obtaining the member 'append' of a type (line 553)
    append_504371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 8), ftypes_504370, 'append')
    # Calling append(args, kwargs) (line 553)
    append_call_result_504380 = invoke(stypy.reporting.localization.Localization(__file__, 553, 8), append_504371, *[subscript_call_result_504378], **kwargs_504379)
    
    
    # Call to append(...): (line 554)
    # Processing the call arguments (line 554)
    str_504383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 21), 'str', '<%s>(<%s*>ip%d)[0]')
    
    # Obtaining an instance of the builtin type 'tuple' (line 555)
    tuple_504384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 555)
    # Adding element type (line 555)
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 555)
    j_504385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 33), 'j', False)
    # Getting the type of 'func_inputs' (line 555)
    func_inputs_504386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 21), 'func_inputs', False)
    # Obtaining the member '__getitem__' of a type (line 555)
    getitem___504387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 21), func_inputs_504386, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 555)
    subscript_call_result_504388 = invoke(stypy.reporting.localization.Localization(__file__, 555, 21), getitem___504387, j_504385)
    
    # Getting the type of 'CY_TYPES' (line 555)
    CY_TYPES_504389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 12), 'CY_TYPES', False)
    # Obtaining the member '__getitem__' of a type (line 555)
    getitem___504390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 12), CY_TYPES_504389, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 555)
    subscript_call_result_504391 = invoke(stypy.reporting.localization.Localization(__file__, 555, 12), getitem___504390, subscript_call_result_504388)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 555, 12), tuple_504384, subscript_call_result_504391)
    # Adding element type (line 555)
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 556)
    j_504392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 34), 'j', False)
    # Getting the type of 'ufunc_inputs' (line 556)
    ufunc_inputs_504393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 21), 'ufunc_inputs', False)
    # Obtaining the member '__getitem__' of a type (line 556)
    getitem___504394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 21), ufunc_inputs_504393, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 556)
    subscript_call_result_504395 = invoke(stypy.reporting.localization.Localization(__file__, 556, 21), getitem___504394, j_504392)
    
    # Getting the type of 'CY_TYPES' (line 556)
    CY_TYPES_504396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 12), 'CY_TYPES', False)
    # Obtaining the member '__getitem__' of a type (line 556)
    getitem___504397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 12), CY_TYPES_504396, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 556)
    subscript_call_result_504398 = invoke(stypy.reporting.localization.Localization(__file__, 556, 12), getitem___504397, subscript_call_result_504395)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 555, 12), tuple_504384, subscript_call_result_504398)
    # Adding element type (line 555)
    # Getting the type of 'j' (line 556)
    j_504399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 39), 'j', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 555, 12), tuple_504384, j_504399)
    
    # Applying the binary operator '%' (line 554)
    result_mod_504400 = python_operator(stypy.reporting.localization.Localization(__file__, 554, 21), '%', str_504383, tuple_504384)
    
    # Processing the call keyword arguments (line 554)
    kwargs_504401 = {}
    # Getting the type of 'fvars' (line 554)
    fvars_504381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 8), 'fvars', False)
    # Obtaining the member 'append' of a type (line 554)
    append_504382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 8), fvars_504381, 'append')
    # Calling append(args, kwargs) (line 554)
    append_call_result_504402 = invoke(stypy.reporting.localization.Localization(__file__, 554, 8), append_504382, *[result_mod_504400], **kwargs_504401)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to len(...): (line 558)
    # Processing the call arguments (line 558)
    # Getting the type of 'func_outputs' (line 558)
    func_outputs_504404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 11), 'func_outputs', False)
    # Processing the call keyword arguments (line 558)
    kwargs_504405 = {}
    # Getting the type of 'len' (line 558)
    len_504403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 7), 'len', False)
    # Calling len(args, kwargs) (line 558)
    len_call_result_504406 = invoke(stypy.reporting.localization.Localization(__file__, 558, 7), len_504403, *[func_outputs_504404], **kwargs_504405)
    
    int_504407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 25), 'int')
    # Applying the binary operator '+' (line 558)
    result_add_504408 = python_operator(stypy.reporting.localization.Localization(__file__, 558, 7), '+', len_call_result_504406, int_504407)
    
    
    # Call to len(...): (line 558)
    # Processing the call arguments (line 558)
    # Getting the type of 'ufunc_outputs' (line 558)
    ufunc_outputs_504410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 34), 'ufunc_outputs', False)
    # Processing the call keyword arguments (line 558)
    kwargs_504411 = {}
    # Getting the type of 'len' (line 558)
    len_504409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 30), 'len', False)
    # Calling len(args, kwargs) (line 558)
    len_call_result_504412 = invoke(stypy.reporting.localization.Localization(__file__, 558, 30), len_504409, *[ufunc_outputs_504410], **kwargs_504411)
    
    # Applying the binary operator '==' (line 558)
    result_eq_504413 = python_operator(stypy.reporting.localization.Localization(__file__, 558, 7), '==', result_add_504408, len_call_result_504412)
    
    # Testing the type of an if condition (line 558)
    if_condition_504414 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 558, 4), result_eq_504413)
    # Assigning a type to the variable 'if_condition_504414' (line 558)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 558, 4), 'if_condition_504414', if_condition_504414)
    # SSA begins for if statement (line 558)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 559):
    
    # Assigning a Num to a Name (line 559):
    int_504415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 20), 'int')
    # Assigning a type to the variable 'func_joff' (line 559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'func_joff', int_504415)
    
    # Call to append(...): (line 560)
    # Processing the call arguments (line 560)
    # Getting the type of 'func_retval' (line 560)
    func_retval_504418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 28), 'func_retval', False)
    # Processing the call keyword arguments (line 560)
    kwargs_504419 = {}
    # Getting the type of 'outtypecodes' (line 560)
    outtypecodes_504416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'outtypecodes', False)
    # Obtaining the member 'append' of a type (line 560)
    append_504417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 8), outtypecodes_504416, 'append')
    # Calling append(args, kwargs) (line 560)
    append_call_result_504420 = invoke(stypy.reporting.localization.Localization(__file__, 560, 8), append_504417, *[func_retval_504418], **kwargs_504419)
    
    
    # Getting the type of 'body' (line 561)
    body_504421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 8), 'body')
    str_504422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 16), 'str', '    cdef %s ov0\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 561)
    tuple_504423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 39), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 561)
    # Adding element type (line 561)
    
    # Obtaining the type of the subscript
    # Getting the type of 'func_retval' (line 561)
    func_retval_504424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 48), 'func_retval')
    # Getting the type of 'CY_TYPES' (line 561)
    CY_TYPES_504425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 39), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 561)
    getitem___504426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 561, 39), CY_TYPES_504425, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 561)
    subscript_call_result_504427 = invoke(stypy.reporting.localization.Localization(__file__, 561, 39), getitem___504426, func_retval_504424)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 39), tuple_504423, subscript_call_result_504427)
    
    # Applying the binary operator '%' (line 561)
    result_mod_504428 = python_operator(stypy.reporting.localization.Localization(__file__, 561, 16), '%', str_504422, tuple_504423)
    
    # Applying the binary operator '+=' (line 561)
    result_iadd_504429 = python_operator(stypy.reporting.localization.Localization(__file__, 561, 8), '+=', body_504421, result_mod_504428)
    # Assigning a type to the variable 'body' (line 561)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 8), 'body', result_iadd_504429)
    
    # SSA branch for the else part of an if statement (line 558)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Num to a Name (line 563):
    
    # Assigning a Num to a Name (line 563):
    int_504430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 20), 'int')
    # Assigning a type to the variable 'func_joff' (line 563)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 8), 'func_joff', int_504430)
    # SSA join for if statement (line 558)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to enumerate(...): (line 565)
    # Processing the call arguments (line 565)
    # Getting the type of 'func_outputs' (line 565)
    func_outputs_504432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 32), 'func_outputs', False)
    # Processing the call keyword arguments (line 565)
    kwargs_504433 = {}
    # Getting the type of 'enumerate' (line 565)
    enumerate_504431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 22), 'enumerate', False)
    # Calling enumerate(args, kwargs) (line 565)
    enumerate_call_result_504434 = invoke(stypy.reporting.localization.Localization(__file__, 565, 22), enumerate_504431, *[func_outputs_504432], **kwargs_504433)
    
    # Testing the type of a for loop iterable (line 565)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 565, 4), enumerate_call_result_504434)
    # Getting the type of the for loop variable (line 565)
    for_loop_var_504435 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 565, 4), enumerate_call_result_504434)
    # Assigning a type to the variable 'j' (line 565)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 4), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 4), for_loop_var_504435))
    # Assigning a type to the variable 'outtype' (line 565)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 4), 'outtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 4), for_loop_var_504435))
    # SSA begins for a for statement (line 565)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'body' (line 566)
    body_504436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'body')
    str_504437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 16), 'str', '    cdef %s ov%d\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 566)
    tuple_504438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 40), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 566)
    # Adding element type (line 566)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 566)
    outtype_504439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 49), 'outtype')
    # Getting the type of 'CY_TYPES' (line 566)
    CY_TYPES_504440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 40), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 566)
    getitem___504441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 40), CY_TYPES_504440, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 566)
    subscript_call_result_504442 = invoke(stypy.reporting.localization.Localization(__file__, 566, 40), getitem___504441, outtype_504439)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 40), tuple_504438, subscript_call_result_504442)
    # Adding element type (line 566)
    # Getting the type of 'j' (line 566)
    j_504443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 59), 'j')
    # Getting the type of 'func_joff' (line 566)
    func_joff_504444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 61), 'func_joff')
    # Applying the binary operator '+' (line 566)
    result_add_504445 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 59), '+', j_504443, func_joff_504444)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 40), tuple_504438, result_add_504445)
    
    # Applying the binary operator '%' (line 566)
    result_mod_504446 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 16), '%', str_504437, tuple_504438)
    
    # Applying the binary operator '+=' (line 566)
    result_iadd_504447 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 8), '+=', body_504436, result_mod_504446)
    # Assigning a type to the variable 'body' (line 566)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'body', result_iadd_504447)
    
    
    # Call to append(...): (line 567)
    # Processing the call arguments (line 567)
    str_504450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 22), 'str', '%s *')
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 567)
    outtype_504451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 40), 'outtype', False)
    # Getting the type of 'CY_TYPES' (line 567)
    CY_TYPES_504452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 31), 'CY_TYPES', False)
    # Obtaining the member '__getitem__' of a type (line 567)
    getitem___504453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 31), CY_TYPES_504452, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 567)
    subscript_call_result_504454 = invoke(stypy.reporting.localization.Localization(__file__, 567, 31), getitem___504453, outtype_504451)
    
    # Applying the binary operator '%' (line 567)
    result_mod_504455 = python_operator(stypy.reporting.localization.Localization(__file__, 567, 22), '%', str_504450, subscript_call_result_504454)
    
    # Processing the call keyword arguments (line 567)
    kwargs_504456 = {}
    # Getting the type of 'ftypes' (line 567)
    ftypes_504448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'ftypes', False)
    # Obtaining the member 'append' of a type (line 567)
    append_504449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 8), ftypes_504448, 'append')
    # Calling append(args, kwargs) (line 567)
    append_call_result_504457 = invoke(stypy.reporting.localization.Localization(__file__, 567, 8), append_504449, *[result_mod_504455], **kwargs_504456)
    
    
    # Call to append(...): (line 568)
    # Processing the call arguments (line 568)
    str_504460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 21), 'str', '&ov%d')
    # Getting the type of 'j' (line 568)
    j_504461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 32), 'j', False)
    # Getting the type of 'func_joff' (line 568)
    func_joff_504462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 34), 'func_joff', False)
    # Applying the binary operator '+' (line 568)
    result_add_504463 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 32), '+', j_504461, func_joff_504462)
    
    # Applying the binary operator '%' (line 568)
    result_mod_504464 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 21), '%', str_504460, result_add_504463)
    
    # Processing the call keyword arguments (line 568)
    kwargs_504465 = {}
    # Getting the type of 'fvars' (line 568)
    fvars_504458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 8), 'fvars', False)
    # Obtaining the member 'append' of a type (line 568)
    append_504459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 8), fvars_504458, 'append')
    # Calling append(args, kwargs) (line 568)
    append_call_result_504466 = invoke(stypy.reporting.localization.Localization(__file__, 568, 8), append_504459, *[result_mod_504464], **kwargs_504465)
    
    
    # Call to append(...): (line 569)
    # Processing the call arguments (line 569)
    # Getting the type of 'outtype' (line 569)
    outtype_504469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 28), 'outtype', False)
    # Processing the call keyword arguments (line 569)
    kwargs_504470 = {}
    # Getting the type of 'outtypecodes' (line 569)
    outtypecodes_504467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 8), 'outtypecodes', False)
    # Obtaining the member 'append' of a type (line 569)
    append_504468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 8), outtypecodes_504467, 'append')
    # Calling append(args, kwargs) (line 569)
    append_call_result_504471 = invoke(stypy.reporting.localization.Localization(__file__, 569, 8), append_504468, *[outtype_504469], **kwargs_504470)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'body' (line 571)
    body_504472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 4), 'body')
    str_504473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 12), 'str', '    for i in range(n):\n')
    # Applying the binary operator '+=' (line 571)
    result_iadd_504474 = python_operator(stypy.reporting.localization.Localization(__file__, 571, 4), '+=', body_504472, str_504473)
    # Assigning a type to the variable 'body' (line 571)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 4), 'body', result_iadd_504474)
    
    
    
    
    # Call to len(...): (line 572)
    # Processing the call arguments (line 572)
    # Getting the type of 'func_outputs' (line 572)
    func_outputs_504476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 11), 'func_outputs', False)
    # Processing the call keyword arguments (line 572)
    kwargs_504477 = {}
    # Getting the type of 'len' (line 572)
    len_504475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 7), 'len', False)
    # Calling len(args, kwargs) (line 572)
    len_call_result_504478 = invoke(stypy.reporting.localization.Localization(__file__, 572, 7), len_504475, *[func_outputs_504476], **kwargs_504477)
    
    int_504479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 25), 'int')
    # Applying the binary operator '+' (line 572)
    result_add_504480 = python_operator(stypy.reporting.localization.Localization(__file__, 572, 7), '+', len_call_result_504478, int_504479)
    
    
    # Call to len(...): (line 572)
    # Processing the call arguments (line 572)
    # Getting the type of 'ufunc_outputs' (line 572)
    ufunc_outputs_504482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 34), 'ufunc_outputs', False)
    # Processing the call keyword arguments (line 572)
    kwargs_504483 = {}
    # Getting the type of 'len' (line 572)
    len_504481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 30), 'len', False)
    # Calling len(args, kwargs) (line 572)
    len_call_result_504484 = invoke(stypy.reporting.localization.Localization(__file__, 572, 30), len_504481, *[ufunc_outputs_504482], **kwargs_504483)
    
    # Applying the binary operator '==' (line 572)
    result_eq_504485 = python_operator(stypy.reporting.localization.Localization(__file__, 572, 7), '==', result_add_504480, len_call_result_504484)
    
    # Testing the type of an if condition (line 572)
    if_condition_504486 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 572, 4), result_eq_504485)
    # Assigning a type to the variable 'if_condition_504486' (line 572)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 4), 'if_condition_504486', if_condition_504486)
    # SSA begins for if statement (line 572)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 573):
    
    # Assigning a Str to a Name (line 573):
    str_504487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 13), 'str', 'ov0 = ')
    # Assigning a type to the variable 'rv' (line 573)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 573, 8), 'rv', str_504487)
    # SSA branch for the else part of an if statement (line 572)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Str to a Name (line 575):
    
    # Assigning a Str to a Name (line 575):
    str_504488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 13), 'str', '')
    # Assigning a type to the variable 'rv' (line 575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 8), 'rv', str_504488)
    # SSA join for if statement (line 572)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 577):
    
    # Assigning a BinOp to a Name (line 577):
    str_504489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 14), 'str', '        %s(<%s(*)(%s) nogil>func)(%s)\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 578)
    tuple_504490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 8), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 578)
    # Adding element type (line 578)
    # Getting the type of 'rv' (line 578)
    rv_504491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'rv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 8), tuple_504490, rv_504491)
    # Adding element type (line 578)
    
    # Obtaining the type of the subscript
    # Getting the type of 'func_retval' (line 578)
    func_retval_504492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 21), 'func_retval')
    # Getting the type of 'CY_TYPES' (line 578)
    CY_TYPES_504493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 12), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 578)
    getitem___504494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 12), CY_TYPES_504493, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 578)
    subscript_call_result_504495 = invoke(stypy.reporting.localization.Localization(__file__, 578, 12), getitem___504494, func_retval_504492)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 8), tuple_504490, subscript_call_result_504495)
    # Adding element type (line 578)
    
    # Call to join(...): (line 578)
    # Processing the call arguments (line 578)
    # Getting the type of 'ftypes' (line 578)
    ftypes_504498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 45), 'ftypes', False)
    # Processing the call keyword arguments (line 578)
    kwargs_504499 = {}
    str_504496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 35), 'str', ', ')
    # Obtaining the member 'join' of a type (line 578)
    join_504497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 35), str_504496, 'join')
    # Calling join(args, kwargs) (line 578)
    join_call_result_504500 = invoke(stypy.reporting.localization.Localization(__file__, 578, 35), join_504497, *[ftypes_504498], **kwargs_504499)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 8), tuple_504490, join_call_result_504500)
    # Adding element type (line 578)
    
    # Call to join(...): (line 578)
    # Processing the call arguments (line 578)
    # Getting the type of 'fvars' (line 578)
    fvars_504503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 64), 'fvars', False)
    # Processing the call keyword arguments (line 578)
    kwargs_504504 = {}
    str_504501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 54), 'str', ', ')
    # Obtaining the member 'join' of a type (line 578)
    join_504502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 54), str_504501, 'join')
    # Calling join(args, kwargs) (line 578)
    join_call_result_504505 = invoke(stypy.reporting.localization.Localization(__file__, 578, 54), join_504502, *[fvars_504503], **kwargs_504504)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 8), tuple_504490, join_call_result_504505)
    
    # Applying the binary operator '%' (line 577)
    result_mod_504506 = python_operator(stypy.reporting.localization.Localization(__file__, 577, 14), '%', str_504489, tuple_504490)
    
    # Assigning a type to the variable 'funcall' (line 577)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 577, 4), 'funcall', result_mod_504506)
    
    # Assigning a List to a Name (line 581):
    
    # Assigning a List to a Name (line 581):
    
    # Obtaining an instance of the builtin type 'list' (line 581)
    list_504507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 581)
    
    # Assigning a type to the variable 'input_checks' (line 581)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 4), 'input_checks', list_504507)
    
    
    # Call to range(...): (line 582)
    # Processing the call arguments (line 582)
    
    # Call to len(...): (line 582)
    # Processing the call arguments (line 582)
    # Getting the type of 'func_inputs' (line 582)
    func_inputs_504510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 23), 'func_inputs', False)
    # Processing the call keyword arguments (line 582)
    kwargs_504511 = {}
    # Getting the type of 'len' (line 582)
    len_504509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 19), 'len', False)
    # Calling len(args, kwargs) (line 582)
    len_call_result_504512 = invoke(stypy.reporting.localization.Localization(__file__, 582, 19), len_504509, *[func_inputs_504510], **kwargs_504511)
    
    # Processing the call keyword arguments (line 582)
    kwargs_504513 = {}
    # Getting the type of 'range' (line 582)
    range_504508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 13), 'range', False)
    # Calling range(args, kwargs) (line 582)
    range_call_result_504514 = invoke(stypy.reporting.localization.Localization(__file__, 582, 13), range_504508, *[len_call_result_504512], **kwargs_504513)
    
    # Testing the type of a for loop iterable (line 582)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 582, 4), range_call_result_504514)
    # Getting the type of the for loop variable (line 582)
    for_loop_var_504515 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 582, 4), range_call_result_504514)
    # Assigning a type to the variable 'j' (line 582)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 4), 'j', for_loop_var_504515)
    # SSA begins for a for statement (line 582)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 583)
    tuple_504516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 583)
    # Adding element type (line 583)
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 583)
    j_504517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 25), 'j')
    # Getting the type of 'ufunc_inputs' (line 583)
    ufunc_inputs_504518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 12), 'ufunc_inputs')
    # Obtaining the member '__getitem__' of a type (line 583)
    getitem___504519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 12), ufunc_inputs_504518, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 583)
    subscript_call_result_504520 = invoke(stypy.reporting.localization.Localization(__file__, 583, 12), getitem___504519, j_504517)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 12), tuple_504516, subscript_call_result_504520)
    # Adding element type (line 583)
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 583)
    j_504521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 41), 'j')
    # Getting the type of 'func_inputs' (line 583)
    func_inputs_504522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 29), 'func_inputs')
    # Obtaining the member '__getitem__' of a type (line 583)
    getitem___504523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 29), func_inputs_504522, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 583)
    subscript_call_result_504524 = invoke(stypy.reporting.localization.Localization(__file__, 583, 29), getitem___504523, j_504521)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 12), tuple_504516, subscript_call_result_504524)
    
    # Getting the type of 'DANGEROUS_DOWNCAST' (line 583)
    DANGEROUS_DOWNCAST_504525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 48), 'DANGEROUS_DOWNCAST')
    # Applying the binary operator 'in' (line 583)
    result_contains_504526 = python_operator(stypy.reporting.localization.Localization(__file__, 583, 11), 'in', tuple_504516, DANGEROUS_DOWNCAST_504525)
    
    # Testing the type of an if condition (line 583)
    if_condition_504527 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 583, 8), result_contains_504526)
    # Assigning a type to the variable 'if_condition_504527' (line 583)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 8), 'if_condition_504527', if_condition_504527)
    # SSA begins for if statement (line 583)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 584):
    
    # Assigning a BinOp to a Name (line 584):
    str_504528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 18), 'str', '<%s>(<%s*>ip%d)[0] == (<%s*>ip%d)[0]')
    
    # Obtaining an instance of the builtin type 'tuple' (line 585)
    tuple_504529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 585)
    # Adding element type (line 585)
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 585)
    j_504530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 37), 'j')
    # Getting the type of 'func_inputs' (line 585)
    func_inputs_504531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 25), 'func_inputs')
    # Obtaining the member '__getitem__' of a type (line 585)
    getitem___504532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 25), func_inputs_504531, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 585)
    subscript_call_result_504533 = invoke(stypy.reporting.localization.Localization(__file__, 585, 25), getitem___504532, j_504530)
    
    # Getting the type of 'CY_TYPES' (line 585)
    CY_TYPES_504534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 16), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 585)
    getitem___504535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 16), CY_TYPES_504534, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 585)
    subscript_call_result_504536 = invoke(stypy.reporting.localization.Localization(__file__, 585, 16), getitem___504535, subscript_call_result_504533)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 16), tuple_504529, subscript_call_result_504536)
    # Adding element type (line 585)
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 585)
    j_504537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 64), 'j')
    # Getting the type of 'ufunc_inputs' (line 585)
    ufunc_inputs_504538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 51), 'ufunc_inputs')
    # Obtaining the member '__getitem__' of a type (line 585)
    getitem___504539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 51), ufunc_inputs_504538, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 585)
    subscript_call_result_504540 = invoke(stypy.reporting.localization.Localization(__file__, 585, 51), getitem___504539, j_504537)
    
    # Getting the type of 'CY_TYPES' (line 585)
    CY_TYPES_504541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 42), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 585)
    getitem___504542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 42), CY_TYPES_504541, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 585)
    subscript_call_result_504543 = invoke(stypy.reporting.localization.Localization(__file__, 585, 42), getitem___504542, subscript_call_result_504540)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 16), tuple_504529, subscript_call_result_504543)
    # Adding element type (line 585)
    # Getting the type of 'j' (line 585)
    j_504544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 69), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 16), tuple_504529, j_504544)
    # Adding element type (line 585)
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 586)
    j_504545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 38), 'j')
    # Getting the type of 'ufunc_inputs' (line 586)
    ufunc_inputs_504546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 25), 'ufunc_inputs')
    # Obtaining the member '__getitem__' of a type (line 586)
    getitem___504547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 25), ufunc_inputs_504546, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 586)
    subscript_call_result_504548 = invoke(stypy.reporting.localization.Localization(__file__, 586, 25), getitem___504547, j_504545)
    
    # Getting the type of 'CY_TYPES' (line 586)
    CY_TYPES_504549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 16), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 586)
    getitem___504550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 16), CY_TYPES_504549, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 586)
    subscript_call_result_504551 = invoke(stypy.reporting.localization.Localization(__file__, 586, 16), getitem___504550, subscript_call_result_504548)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 16), tuple_504529, subscript_call_result_504551)
    # Adding element type (line 585)
    # Getting the type of 'j' (line 586)
    j_504552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 43), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 16), tuple_504529, j_504552)
    
    # Applying the binary operator '%' (line 584)
    result_mod_504553 = python_operator(stypy.reporting.localization.Localization(__file__, 584, 18), '%', str_504528, tuple_504529)
    
    # Assigning a type to the variable 'chk' (line 584)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 12), 'chk', result_mod_504553)
    
    # Call to append(...): (line 587)
    # Processing the call arguments (line 587)
    # Getting the type of 'chk' (line 587)
    chk_504556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 32), 'chk', False)
    # Processing the call keyword arguments (line 587)
    kwargs_504557 = {}
    # Getting the type of 'input_checks' (line 587)
    input_checks_504554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 12), 'input_checks', False)
    # Obtaining the member 'append' of a type (line 587)
    append_504555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 12), input_checks_504554, 'append')
    # Calling append(args, kwargs) (line 587)
    append_call_result_504558 = invoke(stypy.reporting.localization.Localization(__file__, 587, 12), append_504555, *[chk_504556], **kwargs_504557)
    
    # SSA join for if statement (line 583)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'input_checks' (line 589)
    input_checks_504559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 7), 'input_checks')
    # Testing the type of an if condition (line 589)
    if_condition_504560 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 589, 4), input_checks_504559)
    # Assigning a type to the variable 'if_condition_504560' (line 589)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 4), 'if_condition_504560', if_condition_504560)
    # SSA begins for if statement (line 589)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'body' (line 590)
    body_504561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 8), 'body')
    str_504562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 16), 'str', '        if %s:\n')
    
    # Call to join(...): (line 590)
    # Processing the call arguments (line 590)
    # Getting the type of 'input_checks' (line 590)
    input_checks_504565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 51), 'input_checks', False)
    # Processing the call keyword arguments (line 590)
    kwargs_504566 = {}
    str_504563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 38), 'str', ' and ')
    # Obtaining the member 'join' of a type (line 590)
    join_504564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 38), str_504563, 'join')
    # Calling join(args, kwargs) (line 590)
    join_call_result_504567 = invoke(stypy.reporting.localization.Localization(__file__, 590, 38), join_504564, *[input_checks_504565], **kwargs_504566)
    
    # Applying the binary operator '%' (line 590)
    result_mod_504568 = python_operator(stypy.reporting.localization.Localization(__file__, 590, 16), '%', str_504562, join_call_result_504567)
    
    # Applying the binary operator '+=' (line 590)
    result_iadd_504569 = python_operator(stypy.reporting.localization.Localization(__file__, 590, 8), '+=', body_504561, result_mod_504568)
    # Assigning a type to the variable 'body' (line 590)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 8), 'body', result_iadd_504569)
    
    
    # Getting the type of 'body' (line 591)
    body_504570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'body')
    str_504571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 16), 'str', '    ')
    # Getting the type of 'funcall' (line 591)
    funcall_504572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 25), 'funcall')
    # Applying the binary operator '+' (line 591)
    result_add_504573 = python_operator(stypy.reporting.localization.Localization(__file__, 591, 16), '+', str_504571, funcall_504572)
    
    # Applying the binary operator '+=' (line 591)
    result_iadd_504574 = python_operator(stypy.reporting.localization.Localization(__file__, 591, 8), '+=', body_504570, result_add_504573)
    # Assigning a type to the variable 'body' (line 591)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'body', result_iadd_504574)
    
    
    # Getting the type of 'body' (line 592)
    body_504575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 8), 'body')
    str_504576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 16), 'str', '        else:\n')
    # Applying the binary operator '+=' (line 592)
    result_iadd_504577 = python_operator(stypy.reporting.localization.Localization(__file__, 592, 8), '+=', body_504575, str_504576)
    # Assigning a type to the variable 'body' (line 592)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 8), 'body', result_iadd_504577)
    
    
    # Getting the type of 'body' (line 593)
    body_504578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'body')
    str_504579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 16), 'str', '            sf_error.error(func_name, sf_error.DOMAIN, "invalid input argument")\n')
    # Applying the binary operator '+=' (line 593)
    result_iadd_504580 = python_operator(stypy.reporting.localization.Localization(__file__, 593, 8), '+=', body_504578, str_504579)
    # Assigning a type to the variable 'body' (line 593)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'body', result_iadd_504580)
    
    
    
    # Call to enumerate(...): (line 594)
    # Processing the call arguments (line 594)
    # Getting the type of 'outtypecodes' (line 594)
    outtypecodes_504582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 36), 'outtypecodes', False)
    # Processing the call keyword arguments (line 594)
    kwargs_504583 = {}
    # Getting the type of 'enumerate' (line 594)
    enumerate_504581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 26), 'enumerate', False)
    # Calling enumerate(args, kwargs) (line 594)
    enumerate_call_result_504584 = invoke(stypy.reporting.localization.Localization(__file__, 594, 26), enumerate_504581, *[outtypecodes_504582], **kwargs_504583)
    
    # Testing the type of a for loop iterable (line 594)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 594, 8), enumerate_call_result_504584)
    # Getting the type of the for loop variable (line 594)
    for_loop_var_504585 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 594, 8), enumerate_call_result_504584)
    # Assigning a type to the variable 'j' (line 594)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 8), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 8), for_loop_var_504585))
    # Assigning a type to the variable 'outtype' (line 594)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 8), 'outtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 8), for_loop_var_504585))
    # SSA begins for a for statement (line 594)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'body' (line 595)
    body_504586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 12), 'body')
    str_504587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 20), 'str', '            ov%d = <%s>%s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 596)
    tuple_504588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 596)
    # Adding element type (line 596)
    # Getting the type of 'j' (line 596)
    j_504589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 16), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 16), tuple_504588, j_504589)
    # Adding element type (line 596)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 596)
    outtype_504590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 28), 'outtype')
    # Getting the type of 'CY_TYPES' (line 596)
    CY_TYPES_504591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 19), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 596)
    getitem___504592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 19), CY_TYPES_504591, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 596)
    subscript_call_result_504593 = invoke(stypy.reporting.localization.Localization(__file__, 596, 19), getitem___504592, outtype_504590)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 16), tuple_504588, subscript_call_result_504593)
    # Adding element type (line 596)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 596)
    outtype_504594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 48), 'outtype')
    # Getting the type of 'NAN_VALUE' (line 596)
    NAN_VALUE_504595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 38), 'NAN_VALUE')
    # Obtaining the member '__getitem__' of a type (line 596)
    getitem___504596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 38), NAN_VALUE_504595, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 596)
    subscript_call_result_504597 = invoke(stypy.reporting.localization.Localization(__file__, 596, 38), getitem___504596, outtype_504594)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 596, 16), tuple_504588, subscript_call_result_504597)
    
    # Applying the binary operator '%' (line 595)
    result_mod_504598 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 20), '%', str_504587, tuple_504588)
    
    # Applying the binary operator '+=' (line 595)
    result_iadd_504599 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 12), '+=', body_504586, result_mod_504598)
    # Assigning a type to the variable 'body' (line 595)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 12), 'body', result_iadd_504599)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 589)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'body' (line 598)
    body_504600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'body')
    # Getting the type of 'funcall' (line 598)
    funcall_504601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 16), 'funcall')
    # Applying the binary operator '+=' (line 598)
    result_iadd_504602 = python_operator(stypy.reporting.localization.Localization(__file__, 598, 8), '+=', body_504600, funcall_504601)
    # Assigning a type to the variable 'body' (line 598)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'body', result_iadd_504602)
    
    # SSA join for if statement (line 589)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to enumerate(...): (line 601)
    # Processing the call arguments (line 601)
    
    # Call to zip(...): (line 601)
    # Processing the call arguments (line 601)
    # Getting the type of 'ufunc_outputs' (line 601)
    ufunc_outputs_504605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 48), 'ufunc_outputs', False)
    # Getting the type of 'outtypecodes' (line 601)
    outtypecodes_504606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 63), 'outtypecodes', False)
    # Processing the call keyword arguments (line 601)
    kwargs_504607 = {}
    # Getting the type of 'zip' (line 601)
    zip_504604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 44), 'zip', False)
    # Calling zip(args, kwargs) (line 601)
    zip_call_result_504608 = invoke(stypy.reporting.localization.Localization(__file__, 601, 44), zip_504604, *[ufunc_outputs_504605, outtypecodes_504606], **kwargs_504607)
    
    # Processing the call keyword arguments (line 601)
    kwargs_504609 = {}
    # Getting the type of 'enumerate' (line 601)
    enumerate_504603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 34), 'enumerate', False)
    # Calling enumerate(args, kwargs) (line 601)
    enumerate_call_result_504610 = invoke(stypy.reporting.localization.Localization(__file__, 601, 34), enumerate_504603, *[zip_call_result_504608], **kwargs_504609)
    
    # Testing the type of a for loop iterable (line 601)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 601, 4), enumerate_call_result_504610)
    # Getting the type of the for loop variable (line 601)
    for_loop_var_504611 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 601, 4), enumerate_call_result_504610)
    # Assigning a type to the variable 'j' (line 601)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 4), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 601, 4), for_loop_var_504611))
    # Assigning a type to the variable 'outtype' (line 601)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 4), 'outtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 601, 4), for_loop_var_504611))
    # Assigning a type to the variable 'fouttype' (line 601)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 4), 'fouttype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 601, 4), for_loop_var_504611))
    # SSA begins for a for statement (line 601)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 602)
    tuple_504612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 602)
    # Adding element type (line 602)
    # Getting the type of 'fouttype' (line 602)
    fouttype_504613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 12), 'fouttype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 12), tuple_504612, fouttype_504613)
    # Adding element type (line 602)
    # Getting the type of 'outtype' (line 602)
    outtype_504614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 22), 'outtype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 602, 12), tuple_504612, outtype_504614)
    
    # Getting the type of 'DANGEROUS_DOWNCAST' (line 602)
    DANGEROUS_DOWNCAST_504615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 34), 'DANGEROUS_DOWNCAST')
    # Applying the binary operator 'in' (line 602)
    result_contains_504616 = python_operator(stypy.reporting.localization.Localization(__file__, 602, 11), 'in', tuple_504612, DANGEROUS_DOWNCAST_504615)
    
    # Testing the type of an if condition (line 602)
    if_condition_504617 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 602, 8), result_contains_504616)
    # Assigning a type to the variable 'if_condition_504617' (line 602)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'if_condition_504617', if_condition_504617)
    # SSA begins for if statement (line 602)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'body' (line 603)
    body_504618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 12), 'body')
    str_504619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 20), 'str', '        if ov%d == <%s>ov%d:\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 603)
    tuple_504620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 56), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 603)
    # Adding element type (line 603)
    # Getting the type of 'j' (line 603)
    j_504621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 56), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 56), tuple_504620, j_504621)
    # Adding element type (line 603)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 603)
    outtype_504622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 68), 'outtype')
    # Getting the type of 'CY_TYPES' (line 603)
    CY_TYPES_504623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 59), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 603)
    getitem___504624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 59), CY_TYPES_504623, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 603)
    subscript_call_result_504625 = invoke(stypy.reporting.localization.Localization(__file__, 603, 59), getitem___504624, outtype_504622)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 56), tuple_504620, subscript_call_result_504625)
    # Adding element type (line 603)
    # Getting the type of 'j' (line 603)
    j_504626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 78), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 56), tuple_504620, j_504626)
    
    # Applying the binary operator '%' (line 603)
    result_mod_504627 = python_operator(stypy.reporting.localization.Localization(__file__, 603, 20), '%', str_504619, tuple_504620)
    
    # Applying the binary operator '+=' (line 603)
    result_iadd_504628 = python_operator(stypy.reporting.localization.Localization(__file__, 603, 12), '+=', body_504618, result_mod_504627)
    # Assigning a type to the variable 'body' (line 603)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 12), 'body', result_iadd_504628)
    
    
    # Getting the type of 'body' (line 604)
    body_504629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 12), 'body')
    str_504630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 20), 'str', '            (<%s *>op%d)[0] = <%s>ov%d\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 605)
    tuple_504631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 605)
    # Adding element type (line 605)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 605)
    outtype_504632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 25), 'outtype')
    # Getting the type of 'CY_TYPES' (line 605)
    CY_TYPES_504633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 16), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 605)
    getitem___504634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 16), CY_TYPES_504633, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 605)
    subscript_call_result_504635 = invoke(stypy.reporting.localization.Localization(__file__, 605, 16), getitem___504634, outtype_504632)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 16), tuple_504631, subscript_call_result_504635)
    # Adding element type (line 605)
    # Getting the type of 'j' (line 605)
    j_504636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 35), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 16), tuple_504631, j_504636)
    # Adding element type (line 605)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 605)
    outtype_504637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 47), 'outtype')
    # Getting the type of 'CY_TYPES' (line 605)
    CY_TYPES_504638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 38), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 605)
    getitem___504639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 38), CY_TYPES_504638, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 605)
    subscript_call_result_504640 = invoke(stypy.reporting.localization.Localization(__file__, 605, 38), getitem___504639, outtype_504637)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 16), tuple_504631, subscript_call_result_504640)
    # Adding element type (line 605)
    # Getting the type of 'j' (line 605)
    j_504641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 57), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 16), tuple_504631, j_504641)
    
    # Applying the binary operator '%' (line 604)
    result_mod_504642 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 20), '%', str_504630, tuple_504631)
    
    # Applying the binary operator '+=' (line 604)
    result_iadd_504643 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 12), '+=', body_504629, result_mod_504642)
    # Assigning a type to the variable 'body' (line 604)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 12), 'body', result_iadd_504643)
    
    
    # Getting the type of 'body' (line 606)
    body_504644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 12), 'body')
    str_504645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 20), 'str', '        else:\n')
    # Applying the binary operator '+=' (line 606)
    result_iadd_504646 = python_operator(stypy.reporting.localization.Localization(__file__, 606, 12), '+=', body_504644, str_504645)
    # Assigning a type to the variable 'body' (line 606)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 606, 12), 'body', result_iadd_504646)
    
    
    # Getting the type of 'body' (line 607)
    body_504647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 12), 'body')
    str_504648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 20), 'str', '            sf_error.error(func_name, sf_error.DOMAIN, "invalid output")\n')
    # Applying the binary operator '+=' (line 607)
    result_iadd_504649 = python_operator(stypy.reporting.localization.Localization(__file__, 607, 12), '+=', body_504647, str_504648)
    # Assigning a type to the variable 'body' (line 607)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 607, 12), 'body', result_iadd_504649)
    
    
    # Getting the type of 'body' (line 608)
    body_504650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 12), 'body')
    str_504651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 20), 'str', '            (<%s *>op%d)[0] = <%s>%s\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 609)
    tuple_504652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 609)
    # Adding element type (line 609)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 609)
    outtype_504653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 25), 'outtype')
    # Getting the type of 'CY_TYPES' (line 609)
    CY_TYPES_504654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 16), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 609)
    getitem___504655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 16), CY_TYPES_504654, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 609)
    subscript_call_result_504656 = invoke(stypy.reporting.localization.Localization(__file__, 609, 16), getitem___504655, outtype_504653)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 16), tuple_504652, subscript_call_result_504656)
    # Adding element type (line 609)
    # Getting the type of 'j' (line 609)
    j_504657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 35), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 16), tuple_504652, j_504657)
    # Adding element type (line 609)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 609)
    outtype_504658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 47), 'outtype')
    # Getting the type of 'CY_TYPES' (line 609)
    CY_TYPES_504659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 38), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 609)
    getitem___504660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 38), CY_TYPES_504659, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 609)
    subscript_call_result_504661 = invoke(stypy.reporting.localization.Localization(__file__, 609, 38), getitem___504660, outtype_504658)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 16), tuple_504652, subscript_call_result_504661)
    # Adding element type (line 609)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 609)
    outtype_504662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 67), 'outtype')
    # Getting the type of 'NAN_VALUE' (line 609)
    NAN_VALUE_504663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 57), 'NAN_VALUE')
    # Obtaining the member '__getitem__' of a type (line 609)
    getitem___504664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 57), NAN_VALUE_504663, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 609)
    subscript_call_result_504665 = invoke(stypy.reporting.localization.Localization(__file__, 609, 57), getitem___504664, outtype_504662)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 16), tuple_504652, subscript_call_result_504665)
    
    # Applying the binary operator '%' (line 608)
    result_mod_504666 = python_operator(stypy.reporting.localization.Localization(__file__, 608, 20), '%', str_504651, tuple_504652)
    
    # Applying the binary operator '+=' (line 608)
    result_iadd_504667 = python_operator(stypy.reporting.localization.Localization(__file__, 608, 12), '+=', body_504650, result_mod_504666)
    # Assigning a type to the variable 'body' (line 608)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 608, 12), 'body', result_iadd_504667)
    
    # SSA branch for the else part of an if statement (line 602)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'body' (line 611)
    body_504668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 12), 'body')
    str_504669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 20), 'str', '        (<%s *>op%d)[0] = <%s>ov%d\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 612)
    tuple_504670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 612)
    # Adding element type (line 612)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 612)
    outtype_504671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 25), 'outtype')
    # Getting the type of 'CY_TYPES' (line 612)
    CY_TYPES_504672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 16), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 612)
    getitem___504673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 16), CY_TYPES_504672, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 612)
    subscript_call_result_504674 = invoke(stypy.reporting.localization.Localization(__file__, 612, 16), getitem___504673, outtype_504671)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 16), tuple_504670, subscript_call_result_504674)
    # Adding element type (line 612)
    # Getting the type of 'j' (line 612)
    j_504675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 35), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 16), tuple_504670, j_504675)
    # Adding element type (line 612)
    
    # Obtaining the type of the subscript
    # Getting the type of 'outtype' (line 612)
    outtype_504676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 47), 'outtype')
    # Getting the type of 'CY_TYPES' (line 612)
    CY_TYPES_504677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 38), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 612)
    getitem___504678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 38), CY_TYPES_504677, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 612)
    subscript_call_result_504679 = invoke(stypy.reporting.localization.Localization(__file__, 612, 38), getitem___504678, outtype_504676)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 16), tuple_504670, subscript_call_result_504679)
    # Adding element type (line 612)
    # Getting the type of 'j' (line 612)
    j_504680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 57), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 16), tuple_504670, j_504680)
    
    # Applying the binary operator '%' (line 611)
    result_mod_504681 = python_operator(stypy.reporting.localization.Localization(__file__, 611, 20), '%', str_504669, tuple_504670)
    
    # Applying the binary operator '+=' (line 611)
    result_iadd_504682 = python_operator(stypy.reporting.localization.Localization(__file__, 611, 12), '+=', body_504668, result_mod_504681)
    # Assigning a type to the variable 'body' (line 611)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 12), 'body', result_iadd_504682)
    
    # SSA join for if statement (line 602)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to range(...): (line 613)
    # Processing the call arguments (line 613)
    
    # Call to len(...): (line 613)
    # Processing the call arguments (line 613)
    # Getting the type of 'ufunc_inputs' (line 613)
    ufunc_inputs_504685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 23), 'ufunc_inputs', False)
    # Processing the call keyword arguments (line 613)
    kwargs_504686 = {}
    # Getting the type of 'len' (line 613)
    len_504684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 19), 'len', False)
    # Calling len(args, kwargs) (line 613)
    len_call_result_504687 = invoke(stypy.reporting.localization.Localization(__file__, 613, 19), len_504684, *[ufunc_inputs_504685], **kwargs_504686)
    
    # Processing the call keyword arguments (line 613)
    kwargs_504688 = {}
    # Getting the type of 'range' (line 613)
    range_504683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 13), 'range', False)
    # Calling range(args, kwargs) (line 613)
    range_call_result_504689 = invoke(stypy.reporting.localization.Localization(__file__, 613, 13), range_504683, *[len_call_result_504687], **kwargs_504688)
    
    # Testing the type of a for loop iterable (line 613)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 613, 4), range_call_result_504689)
    # Getting the type of the for loop variable (line 613)
    for_loop_var_504690 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 613, 4), range_call_result_504689)
    # Assigning a type to the variable 'j' (line 613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 4), 'j', for_loop_var_504690)
    # SSA begins for a for statement (line 613)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'body' (line 614)
    body_504691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'body')
    str_504692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 16), 'str', '        ip%d += steps[%d]\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 614)
    tuple_504693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 49), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 614)
    # Adding element type (line 614)
    # Getting the type of 'j' (line 614)
    j_504694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 49), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 49), tuple_504693, j_504694)
    # Adding element type (line 614)
    # Getting the type of 'j' (line 614)
    j_504695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 52), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 49), tuple_504693, j_504695)
    
    # Applying the binary operator '%' (line 614)
    result_mod_504696 = python_operator(stypy.reporting.localization.Localization(__file__, 614, 16), '%', str_504692, tuple_504693)
    
    # Applying the binary operator '+=' (line 614)
    result_iadd_504697 = python_operator(stypy.reporting.localization.Localization(__file__, 614, 8), '+=', body_504691, result_mod_504696)
    # Assigning a type to the variable 'body' (line 614)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'body', result_iadd_504697)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to range(...): (line 615)
    # Processing the call arguments (line 615)
    
    # Call to len(...): (line 615)
    # Processing the call arguments (line 615)
    # Getting the type of 'ufunc_outputs' (line 615)
    ufunc_outputs_504700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 23), 'ufunc_outputs', False)
    # Processing the call keyword arguments (line 615)
    kwargs_504701 = {}
    # Getting the type of 'len' (line 615)
    len_504699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 19), 'len', False)
    # Calling len(args, kwargs) (line 615)
    len_call_result_504702 = invoke(stypy.reporting.localization.Localization(__file__, 615, 19), len_504699, *[ufunc_outputs_504700], **kwargs_504701)
    
    # Processing the call keyword arguments (line 615)
    kwargs_504703 = {}
    # Getting the type of 'range' (line 615)
    range_504698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 13), 'range', False)
    # Calling range(args, kwargs) (line 615)
    range_call_result_504704 = invoke(stypy.reporting.localization.Localization(__file__, 615, 13), range_504698, *[len_call_result_504702], **kwargs_504703)
    
    # Testing the type of a for loop iterable (line 615)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 615, 4), range_call_result_504704)
    # Getting the type of the for loop variable (line 615)
    for_loop_var_504705 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 615, 4), range_call_result_504704)
    # Assigning a type to the variable 'j' (line 615)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 4), 'j', for_loop_var_504705)
    # SSA begins for a for statement (line 615)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'body' (line 616)
    body_504706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 8), 'body')
    str_504707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 16), 'str', '        op%d += steps[%d]\n')
    
    # Obtaining an instance of the builtin type 'tuple' (line 616)
    tuple_504708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 49), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 616)
    # Adding element type (line 616)
    # Getting the type of 'j' (line 616)
    j_504709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 49), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 49), tuple_504708, j_504709)
    # Adding element type (line 616)
    # Getting the type of 'j' (line 616)
    j_504710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 52), 'j')
    
    # Call to len(...): (line 616)
    # Processing the call arguments (line 616)
    # Getting the type of 'ufunc_inputs' (line 616)
    ufunc_inputs_504712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 60), 'ufunc_inputs', False)
    # Processing the call keyword arguments (line 616)
    kwargs_504713 = {}
    # Getting the type of 'len' (line 616)
    len_504711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 56), 'len', False)
    # Calling len(args, kwargs) (line 616)
    len_call_result_504714 = invoke(stypy.reporting.localization.Localization(__file__, 616, 56), len_504711, *[ufunc_inputs_504712], **kwargs_504713)
    
    # Applying the binary operator '+' (line 616)
    result_add_504715 = python_operator(stypy.reporting.localization.Localization(__file__, 616, 52), '+', j_504710, len_call_result_504714)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 49), tuple_504708, result_add_504715)
    
    # Applying the binary operator '%' (line 616)
    result_mod_504716 = python_operator(stypy.reporting.localization.Localization(__file__, 616, 16), '%', str_504707, tuple_504708)
    
    # Applying the binary operator '+=' (line 616)
    result_iadd_504717 = python_operator(stypy.reporting.localization.Localization(__file__, 616, 8), '+=', body_504706, result_mod_504716)
    # Assigning a type to the variable 'body' (line 616)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 8), 'body', result_iadd_504717)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'body' (line 618)
    body_504718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 4), 'body')
    str_504719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 12), 'str', '    sf_error.check_fpe(func_name)\n')
    # Applying the binary operator '+=' (line 618)
    result_iadd_504720 = python_operator(stypy.reporting.localization.Localization(__file__, 618, 4), '+=', body_504718, str_504719)
    # Assigning a type to the variable 'body' (line 618)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 4), 'body', result_iadd_504720)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 620)
    tuple_504721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 620)
    # Adding element type (line 620)
    # Getting the type of 'name' (line 620)
    name_504722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 11), 'name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 11), tuple_504721, name_504722)
    # Adding element type (line 620)
    # Getting the type of 'body' (line 620)
    body_504723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 17), 'body')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 11), tuple_504721, body_504723)
    
    # Assigning a type to the variable 'stypy_return_type' (line 620)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 620, 4), 'stypy_return_type', tuple_504721)
    
    # ################# End of 'generate_loop(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_loop' in the type store
    # Getting the type of 'stypy_return_type' (line 490)
    stypy_return_type_504724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_504724)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_loop'
    return stypy_return_type_504724

# Assigning a type to the variable 'generate_loop' (line 490)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 0), 'generate_loop', generate_loop)

@norecursion
def generate_fused_type(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'generate_fused_type'
    module_type_store = module_type_store.open_function_context('generate_fused_type', 623, 0, False)
    
    # Passed parameters checking function
    generate_fused_type.stypy_localization = localization
    generate_fused_type.stypy_type_of_self = None
    generate_fused_type.stypy_type_store = module_type_store
    generate_fused_type.stypy_function_name = 'generate_fused_type'
    generate_fused_type.stypy_param_names_list = ['codes']
    generate_fused_type.stypy_varargs_param_name = None
    generate_fused_type.stypy_kwargs_param_name = None
    generate_fused_type.stypy_call_defaults = defaults
    generate_fused_type.stypy_call_varargs = varargs
    generate_fused_type.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_fused_type', ['codes'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_fused_type', localization, ['codes'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_fused_type(...)' code ##################

    str_504725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, (-1)), 'str', '\n    Generate name of and cython code for a fused type.\n\n    Parameters\n    ----------\n    typecodes : str\n        Valid inputs to CY_TYPES (i.e. f, d, g, ...).\n\n    ')
    
    # Assigning a Call to a Name (line 633):
    
    # Assigning a Call to a Name (line 633):
    
    # Call to map(...): (line 633)
    # Processing the call arguments (line 633)

    @norecursion
    def _stypy_temp_lambda_295(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_295'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_295', 633, 18, True)
        # Passed parameters checking function
        _stypy_temp_lambda_295.stypy_localization = localization
        _stypy_temp_lambda_295.stypy_type_of_self = None
        _stypy_temp_lambda_295.stypy_type_store = module_type_store
        _stypy_temp_lambda_295.stypy_function_name = '_stypy_temp_lambda_295'
        _stypy_temp_lambda_295.stypy_param_names_list = ['x']
        _stypy_temp_lambda_295.stypy_varargs_param_name = None
        _stypy_temp_lambda_295.stypy_kwargs_param_name = None
        _stypy_temp_lambda_295.stypy_call_defaults = defaults
        _stypy_temp_lambda_295.stypy_call_varargs = varargs
        _stypy_temp_lambda_295.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_295', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_295', ['x'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Obtaining the type of the subscript
        # Getting the type of 'x' (line 633)
        x_504727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 37), 'x', False)
        # Getting the type of 'CY_TYPES' (line 633)
        CY_TYPES_504728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 28), 'CY_TYPES', False)
        # Obtaining the member '__getitem__' of a type (line 633)
        getitem___504729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 28), CY_TYPES_504728, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 633)
        subscript_call_result_504730 = invoke(stypy.reporting.localization.Localization(__file__, 633, 28), getitem___504729, x_504727)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 633)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 633, 18), 'stypy_return_type', subscript_call_result_504730)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_295' in the type store
        # Getting the type of 'stypy_return_type' (line 633)
        stypy_return_type_504731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 18), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_504731)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_295'
        return stypy_return_type_504731

    # Assigning a type to the variable '_stypy_temp_lambda_295' (line 633)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 633, 18), '_stypy_temp_lambda_295', _stypy_temp_lambda_295)
    # Getting the type of '_stypy_temp_lambda_295' (line 633)
    _stypy_temp_lambda_295_504732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 18), '_stypy_temp_lambda_295')
    # Getting the type of 'codes' (line 633)
    codes_504733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 41), 'codes', False)
    # Processing the call keyword arguments (line 633)
    kwargs_504734 = {}
    # Getting the type of 'map' (line 633)
    map_504726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 14), 'map', False)
    # Calling map(args, kwargs) (line 633)
    map_call_result_504735 = invoke(stypy.reporting.localization.Localization(__file__, 633, 14), map_504726, *[_stypy_temp_lambda_295_504732, codes_504733], **kwargs_504734)
    
    # Assigning a type to the variable 'cytypes' (line 633)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 633, 4), 'cytypes', map_call_result_504735)
    
    # Assigning a BinOp to a Name (line 634):
    
    # Assigning a BinOp to a Name (line 634):
    # Getting the type of 'codes' (line 634)
    codes_504736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 11), 'codes')
    str_504737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 634, 19), 'str', '_number_t')
    # Applying the binary operator '+' (line 634)
    result_add_504738 = python_operator(stypy.reporting.localization.Localization(__file__, 634, 11), '+', codes_504736, str_504737)
    
    # Assigning a type to the variable 'name' (line 634)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 4), 'name', result_add_504738)
    
    # Assigning a List to a Name (line 635):
    
    # Assigning a List to a Name (line 635):
    
    # Obtaining an instance of the builtin type 'list' (line 635)
    list_504739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 635)
    # Adding element type (line 635)
    str_504740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 19), 'str', 'ctypedef fused ')
    # Getting the type of 'name' (line 635)
    name_504741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 39), 'name')
    # Applying the binary operator '+' (line 635)
    result_add_504742 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 19), '+', str_504740, name_504741)
    
    str_504743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 46), 'str', ':')
    # Applying the binary operator '+' (line 635)
    result_add_504744 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 44), '+', result_add_504742, str_504743)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 635, 18), list_504739, result_add_504744)
    
    # Assigning a type to the variable 'declaration' (line 635)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 4), 'declaration', list_504739)
    
    # Getting the type of 'cytypes' (line 636)
    cytypes_504745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 18), 'cytypes')
    # Testing the type of a for loop iterable (line 636)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 636, 4), cytypes_504745)
    # Getting the type of the for loop variable (line 636)
    for_loop_var_504746 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 636, 4), cytypes_504745)
    # Assigning a type to the variable 'cytype' (line 636)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 4), 'cytype', for_loop_var_504746)
    # SSA begins for a for statement (line 636)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 637)
    # Processing the call arguments (line 637)
    str_504749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 27), 'str', '    ')
    # Getting the type of 'cytype' (line 637)
    cytype_504750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 36), 'cytype', False)
    # Applying the binary operator '+' (line 637)
    result_add_504751 = python_operator(stypy.reporting.localization.Localization(__file__, 637, 27), '+', str_504749, cytype_504750)
    
    # Processing the call keyword arguments (line 637)
    kwargs_504752 = {}
    # Getting the type of 'declaration' (line 637)
    declaration_504747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'declaration', False)
    # Obtaining the member 'append' of a type (line 637)
    append_504748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 637, 8), declaration_504747, 'append')
    # Calling append(args, kwargs) (line 637)
    append_call_result_504753 = invoke(stypy.reporting.localization.Localization(__file__, 637, 8), append_504748, *[result_add_504751], **kwargs_504752)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 638):
    
    # Assigning a Call to a Name (line 638):
    
    # Call to join(...): (line 638)
    # Processing the call arguments (line 638)
    # Getting the type of 'declaration' (line 638)
    declaration_504756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 28), 'declaration', False)
    # Processing the call keyword arguments (line 638)
    kwargs_504757 = {}
    str_504754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 18), 'str', '\n')
    # Obtaining the member 'join' of a type (line 638)
    join_504755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 18), str_504754, 'join')
    # Calling join(args, kwargs) (line 638)
    join_call_result_504758 = invoke(stypy.reporting.localization.Localization(__file__, 638, 18), join_504755, *[declaration_504756], **kwargs_504757)
    
    # Assigning a type to the variable 'declaration' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'declaration', join_call_result_504758)
    
    # Obtaining an instance of the builtin type 'tuple' (line 639)
    tuple_504759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 639)
    # Adding element type (line 639)
    # Getting the type of 'name' (line 639)
    name_504760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 11), 'name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 11), tuple_504759, name_504760)
    # Adding element type (line 639)
    # Getting the type of 'declaration' (line 639)
    declaration_504761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 17), 'declaration')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 639, 11), tuple_504759, declaration_504761)
    
    # Assigning a type to the variable 'stypy_return_type' (line 639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'stypy_return_type', tuple_504759)
    
    # ################# End of 'generate_fused_type(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_fused_type' in the type store
    # Getting the type of 'stypy_return_type' (line 623)
    stypy_return_type_504762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_504762)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_fused_type'
    return stypy_return_type_504762

# Assigning a type to the variable 'generate_fused_type' (line 623)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 0), 'generate_fused_type', generate_fused_type)

@norecursion
def generate_bench(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'generate_bench'
    module_type_store = module_type_store.open_function_context('generate_bench', 642, 0, False)
    
    # Passed parameters checking function
    generate_bench.stypy_localization = localization
    generate_bench.stypy_type_of_self = None
    generate_bench.stypy_type_store = module_type_store
    generate_bench.stypy_function_name = 'generate_bench'
    generate_bench.stypy_param_names_list = ['name', 'codes']
    generate_bench.stypy_varargs_param_name = None
    generate_bench.stypy_kwargs_param_name = None
    generate_bench.stypy_call_defaults = defaults
    generate_bench.stypy_call_varargs = varargs
    generate_bench.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_bench', ['name', 'codes'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_bench', localization, ['name', 'codes'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_bench(...)' code ##################

    
    # Assigning a BinOp to a Name (line 643):
    
    # Assigning a BinOp to a Name (line 643):
    str_504763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 10), 'str', ' ')
    int_504764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 14), 'int')
    # Applying the binary operator '*' (line 643)
    result_mul_504765 = python_operator(stypy.reporting.localization.Localization(__file__, 643, 10), '*', str_504763, int_504764)
    
    # Assigning a type to the variable 'tab' (line 643)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 4), 'tab', result_mul_504765)
    
    # Assigning a Tuple to a Tuple (line 644):
    
    # Assigning a List to a Name (line 644):
    
    # Obtaining an instance of the builtin type 'list' (line 644)
    list_504766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 23), 'list')
    # Adding type elements to the builtin type 'list' instance (line 644)
    
    # Assigning a type to the variable 'tuple_assignment_503896' (line 644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 4), 'tuple_assignment_503896', list_504766)
    
    # Assigning a List to a Name (line 644):
    
    # Obtaining an instance of the builtin type 'list' (line 644)
    list_504767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 644)
    
    # Assigning a type to the variable 'tuple_assignment_503897' (line 644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 4), 'tuple_assignment_503897', list_504767)
    
    # Assigning a List to a Name (line 644):
    
    # Obtaining an instance of the builtin type 'list' (line 644)
    list_504768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 31), 'list')
    # Adding type elements to the builtin type 'list' instance (line 644)
    
    # Assigning a type to the variable 'tuple_assignment_503898' (line 644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 4), 'tuple_assignment_503898', list_504768)
    
    # Assigning a Name to a Name (line 644):
    # Getting the type of 'tuple_assignment_503896' (line 644)
    tuple_assignment_503896_504769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 4), 'tuple_assignment_503896')
    # Assigning a type to the variable 'top' (line 644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 4), 'top', tuple_assignment_503896_504769)
    
    # Assigning a Name to a Name (line 644):
    # Getting the type of 'tuple_assignment_503897' (line 644)
    tuple_assignment_503897_504770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 4), 'tuple_assignment_503897')
    # Assigning a type to the variable 'middle' (line 644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 9), 'middle', tuple_assignment_503897_504770)
    
    # Assigning a Name to a Name (line 644):
    # Getting the type of 'tuple_assignment_503898' (line 644)
    tuple_assignment_503898_504771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 4), 'tuple_assignment_503898')
    # Assigning a type to the variable 'end' (line 644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 17), 'end', tuple_assignment_503898_504771)
    
    # Assigning a Call to a Name (line 646):
    
    # Assigning a Call to a Name (line 646):
    
    # Call to split(...): (line 646)
    # Processing the call arguments (line 646)
    str_504774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 646, 22), 'str', '*')
    # Processing the call keyword arguments (line 646)
    kwargs_504775 = {}
    # Getting the type of 'codes' (line 646)
    codes_504772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 10), 'codes', False)
    # Obtaining the member 'split' of a type (line 646)
    split_504773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 646, 10), codes_504772, 'split')
    # Calling split(args, kwargs) (line 646)
    split_call_result_504776 = invoke(stypy.reporting.localization.Localization(__file__, 646, 10), split_504773, *[str_504774], **kwargs_504775)
    
    # Assigning a type to the variable 'tmp' (line 646)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 4), 'tmp', split_call_result_504776)
    
    
    
    # Call to len(...): (line 647)
    # Processing the call arguments (line 647)
    # Getting the type of 'tmp' (line 647)
    tmp_504778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 11), 'tmp', False)
    # Processing the call keyword arguments (line 647)
    kwargs_504779 = {}
    # Getting the type of 'len' (line 647)
    len_504777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 7), 'len', False)
    # Calling len(args, kwargs) (line 647)
    len_call_result_504780 = invoke(stypy.reporting.localization.Localization(__file__, 647, 7), len_504777, *[tmp_504778], **kwargs_504779)
    
    int_504781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 18), 'int')
    # Applying the binary operator '>' (line 647)
    result_gt_504782 = python_operator(stypy.reporting.localization.Localization(__file__, 647, 7), '>', len_call_result_504780, int_504781)
    
    # Testing the type of an if condition (line 647)
    if_condition_504783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 647, 4), result_gt_504782)
    # Assigning a type to the variable 'if_condition_504783' (line 647)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 4), 'if_condition_504783', if_condition_504783)
    # SSA begins for if statement (line 647)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 648):
    
    # Assigning a Subscript to a Name (line 648):
    
    # Obtaining the type of the subscript
    int_504784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 22), 'int')
    # Getting the type of 'tmp' (line 648)
    tmp_504785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 18), 'tmp')
    # Obtaining the member '__getitem__' of a type (line 648)
    getitem___504786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 648, 18), tmp_504785, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 648)
    subscript_call_result_504787 = invoke(stypy.reporting.localization.Localization(__file__, 648, 18), getitem___504786, int_504784)
    
    # Assigning a type to the variable 'incodes' (line 648)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 8), 'incodes', subscript_call_result_504787)
    
    # Assigning a Subscript to a Name (line 649):
    
    # Assigning a Subscript to a Name (line 649):
    
    # Obtaining the type of the subscript
    int_504788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 23), 'int')
    # Getting the type of 'tmp' (line 649)
    tmp_504789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 19), 'tmp')
    # Obtaining the member '__getitem__' of a type (line 649)
    getitem___504790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 19), tmp_504789, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 649)
    subscript_call_result_504791 = invoke(stypy.reporting.localization.Localization(__file__, 649, 19), getitem___504790, int_504788)
    
    # Assigning a type to the variable 'outcodes' (line 649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'outcodes', subscript_call_result_504791)
    # SSA branch for the else part of an if statement (line 647)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Subscript to a Name (line 651):
    
    # Assigning a Subscript to a Name (line 651):
    
    # Obtaining the type of the subscript
    int_504792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 22), 'int')
    # Getting the type of 'tmp' (line 651)
    tmp_504793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 18), 'tmp')
    # Obtaining the member '__getitem__' of a type (line 651)
    getitem___504794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 651, 18), tmp_504793, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 651)
    subscript_call_result_504795 = invoke(stypy.reporting.localization.Localization(__file__, 651, 18), getitem___504794, int_504792)
    
    # Assigning a type to the variable 'incodes' (line 651)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 651, 8), 'incodes', subscript_call_result_504795)
    
    # Assigning a Str to a Name (line 652):
    
    # Assigning a Str to a Name (line 652):
    str_504796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 19), 'str', '')
    # Assigning a type to the variable 'outcodes' (line 652)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 8), 'outcodes', str_504796)
    # SSA join for if statement (line 647)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Tuple to a Tuple (line 654):
    
    # Assigning a List to a Name (line 654):
    
    # Obtaining an instance of the builtin type 'list' (line 654)
    list_504797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 31), 'list')
    # Adding type elements to the builtin type 'list' instance (line 654)
    
    # Assigning a type to the variable 'tuple_assignment_503899' (line 654)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 4), 'tuple_assignment_503899', list_504797)
    
    # Assigning a List to a Name (line 654):
    
    # Obtaining an instance of the builtin type 'list' (line 654)
    list_504798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 35), 'list')
    # Adding type elements to the builtin type 'list' instance (line 654)
    
    # Assigning a type to the variable 'tuple_assignment_503900' (line 654)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 4), 'tuple_assignment_503900', list_504798)
    
    # Assigning a Name to a Name (line 654):
    # Getting the type of 'tuple_assignment_503899' (line 654)
    tuple_assignment_503899_504799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 4), 'tuple_assignment_503899')
    # Assigning a type to the variable 'inargs' (line 654)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 4), 'inargs', tuple_assignment_503899_504799)
    
    # Assigning a Name to a Name (line 654):
    # Getting the type of 'tuple_assignment_503900' (line 654)
    tuple_assignment_503900_504800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 4), 'tuple_assignment_503900')
    # Assigning a type to the variable 'inargs_and_types' (line 654)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 12), 'inargs_and_types', tuple_assignment_503900_504800)
    
    
    # Call to enumerate(...): (line 655)
    # Processing the call arguments (line 655)
    # Getting the type of 'incodes' (line 655)
    incodes_504802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 29), 'incodes', False)
    # Processing the call keyword arguments (line 655)
    kwargs_504803 = {}
    # Getting the type of 'enumerate' (line 655)
    enumerate_504801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 19), 'enumerate', False)
    # Calling enumerate(args, kwargs) (line 655)
    enumerate_call_result_504804 = invoke(stypy.reporting.localization.Localization(__file__, 655, 19), enumerate_504801, *[incodes_504802], **kwargs_504803)
    
    # Testing the type of a for loop iterable (line 655)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 655, 4), enumerate_call_result_504804)
    # Getting the type of the for loop variable (line 655)
    for_loop_var_504805 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 655, 4), enumerate_call_result_504804)
    # Assigning a type to the variable 'n' (line 655)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 655, 4), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 655, 4), for_loop_var_504805))
    # Assigning a type to the variable 'code' (line 655)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 655, 4), 'code', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 655, 4), for_loop_var_504805))
    # SSA begins for a for statement (line 655)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 656):
    
    # Assigning a Call to a Name (line 656):
    
    # Call to format(...): (line 656)
    # Processing the call arguments (line 656)
    # Getting the type of 'n' (line 656)
    n_504808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 27), 'n', False)
    # Processing the call keyword arguments (line 656)
    kwargs_504809 = {}
    str_504806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 14), 'str', 'x{}')
    # Obtaining the member 'format' of a type (line 656)
    format_504807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 656, 14), str_504806, 'format')
    # Calling format(args, kwargs) (line 656)
    format_call_result_504810 = invoke(stypy.reporting.localization.Localization(__file__, 656, 14), format_504807, *[n_504808], **kwargs_504809)
    
    # Assigning a type to the variable 'arg' (line 656)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 656, 8), 'arg', format_call_result_504810)
    
    # Call to append(...): (line 657)
    # Processing the call arguments (line 657)
    # Getting the type of 'arg' (line 657)
    arg_504813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 22), 'arg', False)
    # Processing the call keyword arguments (line 657)
    kwargs_504814 = {}
    # Getting the type of 'inargs' (line 657)
    inargs_504811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 8), 'inargs', False)
    # Obtaining the member 'append' of a type (line 657)
    append_504812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 8), inargs_504811, 'append')
    # Calling append(args, kwargs) (line 657)
    append_call_result_504815 = invoke(stypy.reporting.localization.Localization(__file__, 657, 8), append_504812, *[arg_504813], **kwargs_504814)
    
    
    # Call to append(...): (line 658)
    # Processing the call arguments (line 658)
    
    # Call to format(...): (line 658)
    # Processing the call arguments (line 658)
    
    # Obtaining the type of the subscript
    # Getting the type of 'code' (line 658)
    code_504820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 56), 'code', False)
    # Getting the type of 'CY_TYPES' (line 658)
    CY_TYPES_504821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 47), 'CY_TYPES', False)
    # Obtaining the member '__getitem__' of a type (line 658)
    getitem___504822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 47), CY_TYPES_504821, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 658)
    subscript_call_result_504823 = invoke(stypy.reporting.localization.Localization(__file__, 658, 47), getitem___504822, code_504820)
    
    # Getting the type of 'arg' (line 658)
    arg_504824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 63), 'arg', False)
    # Processing the call keyword arguments (line 658)
    kwargs_504825 = {}
    str_504818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 32), 'str', '{} {}')
    # Obtaining the member 'format' of a type (line 658)
    format_504819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 32), str_504818, 'format')
    # Calling format(args, kwargs) (line 658)
    format_call_result_504826 = invoke(stypy.reporting.localization.Localization(__file__, 658, 32), format_504819, *[subscript_call_result_504823, arg_504824], **kwargs_504825)
    
    # Processing the call keyword arguments (line 658)
    kwargs_504827 = {}
    # Getting the type of 'inargs_and_types' (line 658)
    inargs_and_types_504816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 8), 'inargs_and_types', False)
    # Obtaining the member 'append' of a type (line 658)
    append_504817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 8), inargs_and_types_504816, 'append')
    # Calling append(args, kwargs) (line 658)
    append_call_result_504828 = invoke(stypy.reporting.localization.Localization(__file__, 658, 8), append_504817, *[format_call_result_504826], **kwargs_504827)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 659):
    
    # Assigning a Call to a Name (line 659):
    
    # Call to format(...): (line 659)
    # Processing the call arguments (line 659)
    
    # Call to join(...): (line 659)
    # Processing the call arguments (line 659)
    # Getting the type of 'inargs_and_types' (line 659)
    inargs_and_types_504833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 51), 'inargs_and_types', False)
    # Processing the call keyword arguments (line 659)
    kwargs_504834 = {}
    str_504831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 41), 'str', ', ')
    # Obtaining the member 'join' of a type (line 659)
    join_504832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 659, 41), str_504831, 'join')
    # Calling join(args, kwargs) (line 659)
    join_call_result_504835 = invoke(stypy.reporting.localization.Localization(__file__, 659, 41), join_504832, *[inargs_and_types_504833], **kwargs_504834)
    
    # Processing the call keyword arguments (line 659)
    kwargs_504836 = {}
    str_504829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 11), 'str', 'def {{}}(int N, {}):')
    # Obtaining the member 'format' of a type (line 659)
    format_504830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 659, 11), str_504829, 'format')
    # Calling format(args, kwargs) (line 659)
    format_call_result_504837 = invoke(stypy.reporting.localization.Localization(__file__, 659, 11), format_504830, *[join_call_result_504835], **kwargs_504836)
    
    # Assigning a type to the variable 'line' (line 659)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 659, 4), 'line', format_call_result_504837)
    
    # Call to append(...): (line 660)
    # Processing the call arguments (line 660)
    # Getting the type of 'line' (line 660)
    line_504840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 15), 'line', False)
    # Processing the call keyword arguments (line 660)
    kwargs_504841 = {}
    # Getting the type of 'top' (line 660)
    top_504838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 4), 'top', False)
    # Obtaining the member 'append' of a type (line 660)
    append_504839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 4), top_504838, 'append')
    # Calling append(args, kwargs) (line 660)
    append_call_result_504842 = invoke(stypy.reporting.localization.Localization(__file__, 660, 4), append_504839, *[line_504840], **kwargs_504841)
    
    
    # Call to append(...): (line 661)
    # Processing the call arguments (line 661)
    # Getting the type of 'tab' (line 661)
    tab_504845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 15), 'tab', False)
    str_504846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 21), 'str', 'cdef int n')
    # Applying the binary operator '+' (line 661)
    result_add_504847 = python_operator(stypy.reporting.localization.Localization(__file__, 661, 15), '+', tab_504845, str_504846)
    
    # Processing the call keyword arguments (line 661)
    kwargs_504848 = {}
    # Getting the type of 'top' (line 661)
    top_504843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 4), 'top', False)
    # Obtaining the member 'append' of a type (line 661)
    append_504844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 661, 4), top_504843, 'append')
    # Calling append(args, kwargs) (line 661)
    append_call_result_504849 = invoke(stypy.reporting.localization.Localization(__file__, 661, 4), append_504844, *[result_add_504847], **kwargs_504848)
    
    
    # Assigning a List to a Name (line 663):
    
    # Assigning a List to a Name (line 663):
    
    # Obtaining an instance of the builtin type 'list' (line 663)
    list_504850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 663)
    
    # Assigning a type to the variable 'outargs' (line 663)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 663, 4), 'outargs', list_504850)
    
    
    # Call to enumerate(...): (line 664)
    # Processing the call arguments (line 664)
    # Getting the type of 'outcodes' (line 664)
    outcodes_504852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 29), 'outcodes', False)
    # Processing the call keyword arguments (line 664)
    kwargs_504853 = {}
    # Getting the type of 'enumerate' (line 664)
    enumerate_504851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 19), 'enumerate', False)
    # Calling enumerate(args, kwargs) (line 664)
    enumerate_call_result_504854 = invoke(stypy.reporting.localization.Localization(__file__, 664, 19), enumerate_504851, *[outcodes_504852], **kwargs_504853)
    
    # Testing the type of a for loop iterable (line 664)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 664, 4), enumerate_call_result_504854)
    # Getting the type of the for loop variable (line 664)
    for_loop_var_504855 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 664, 4), enumerate_call_result_504854)
    # Assigning a type to the variable 'n' (line 664)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 664, 4), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 664, 4), for_loop_var_504855))
    # Assigning a type to the variable 'code' (line 664)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 664, 4), 'code', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 664, 4), for_loop_var_504855))
    # SSA begins for a for statement (line 664)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 665):
    
    # Assigning a Call to a Name (line 665):
    
    # Call to format(...): (line 665)
    # Processing the call arguments (line 665)
    # Getting the type of 'n' (line 665)
    n_504858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 27), 'n', False)
    # Processing the call keyword arguments (line 665)
    kwargs_504859 = {}
    str_504856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 14), 'str', 'y{}')
    # Obtaining the member 'format' of a type (line 665)
    format_504857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 14), str_504856, 'format')
    # Calling format(args, kwargs) (line 665)
    format_call_result_504860 = invoke(stypy.reporting.localization.Localization(__file__, 665, 14), format_504857, *[n_504858], **kwargs_504859)
    
    # Assigning a type to the variable 'arg' (line 665)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 665, 8), 'arg', format_call_result_504860)
    
    # Call to append(...): (line 666)
    # Processing the call arguments (line 666)
    
    # Call to format(...): (line 666)
    # Processing the call arguments (line 666)
    # Getting the type of 'arg' (line 666)
    arg_504865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 36), 'arg', False)
    # Processing the call keyword arguments (line 666)
    kwargs_504866 = {}
    str_504863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 23), 'str', '&{}')
    # Obtaining the member 'format' of a type (line 666)
    format_504864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 23), str_504863, 'format')
    # Calling format(args, kwargs) (line 666)
    format_call_result_504867 = invoke(stypy.reporting.localization.Localization(__file__, 666, 23), format_504864, *[arg_504865], **kwargs_504866)
    
    # Processing the call keyword arguments (line 666)
    kwargs_504868 = {}
    # Getting the type of 'outargs' (line 666)
    outargs_504861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'outargs', False)
    # Obtaining the member 'append' of a type (line 666)
    append_504862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 8), outargs_504861, 'append')
    # Calling append(args, kwargs) (line 666)
    append_call_result_504869 = invoke(stypy.reporting.localization.Localization(__file__, 666, 8), append_504862, *[format_call_result_504867], **kwargs_504868)
    
    
    # Assigning a Call to a Name (line 667):
    
    # Assigning a Call to a Name (line 667):
    
    # Call to format(...): (line 667)
    # Processing the call arguments (line 667)
    
    # Obtaining the type of the subscript
    # Getting the type of 'code' (line 667)
    code_504872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 44), 'code', False)
    # Getting the type of 'CY_TYPES' (line 667)
    CY_TYPES_504873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 35), 'CY_TYPES', False)
    # Obtaining the member '__getitem__' of a type (line 667)
    getitem___504874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 35), CY_TYPES_504873, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 667)
    subscript_call_result_504875 = invoke(stypy.reporting.localization.Localization(__file__, 667, 35), getitem___504874, code_504872)
    
    # Getting the type of 'arg' (line 667)
    arg_504876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 51), 'arg', False)
    # Processing the call keyword arguments (line 667)
    kwargs_504877 = {}
    str_504870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 15), 'str', 'cdef {} {}')
    # Obtaining the member 'format' of a type (line 667)
    format_504871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 15), str_504870, 'format')
    # Calling format(args, kwargs) (line 667)
    format_call_result_504878 = invoke(stypy.reporting.localization.Localization(__file__, 667, 15), format_504871, *[subscript_call_result_504875, arg_504876], **kwargs_504877)
    
    # Assigning a type to the variable 'line' (line 667)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 667, 8), 'line', format_call_result_504878)
    
    # Call to append(...): (line 668)
    # Processing the call arguments (line 668)
    # Getting the type of 'tab' (line 668)
    tab_504881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 22), 'tab', False)
    # Getting the type of 'line' (line 668)
    line_504882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 28), 'line', False)
    # Applying the binary operator '+' (line 668)
    result_add_504883 = python_operator(stypy.reporting.localization.Localization(__file__, 668, 22), '+', tab_504881, line_504882)
    
    # Processing the call keyword arguments (line 668)
    kwargs_504884 = {}
    # Getting the type of 'middle' (line 668)
    middle_504879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 8), 'middle', False)
    # Obtaining the member 'append' of a type (line 668)
    append_504880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 668, 8), middle_504879, 'append')
    # Calling append(args, kwargs) (line 668)
    append_call_result_504885 = invoke(stypy.reporting.localization.Localization(__file__, 668, 8), append_504880, *[result_add_504883], **kwargs_504884)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 670)
    # Processing the call arguments (line 670)
    # Getting the type of 'tab' (line 670)
    tab_504888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 15), 'tab', False)
    str_504889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 21), 'str', 'for n in range(N):')
    # Applying the binary operator '+' (line 670)
    result_add_504890 = python_operator(stypy.reporting.localization.Localization(__file__, 670, 15), '+', tab_504888, str_504889)
    
    # Processing the call keyword arguments (line 670)
    kwargs_504891 = {}
    # Getting the type of 'end' (line 670)
    end_504886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 4), 'end', False)
    # Obtaining the member 'append' of a type (line 670)
    append_504887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 4), end_504886, 'append')
    # Calling append(args, kwargs) (line 670)
    append_call_result_504892 = invoke(stypy.reporting.localization.Localization(__file__, 670, 4), append_504887, *[result_add_504890], **kwargs_504891)
    
    
    # Call to append(...): (line 671)
    # Processing the call arguments (line 671)
    int_504895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 15), 'int')
    # Getting the type of 'tab' (line 671)
    tab_504896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 17), 'tab', False)
    # Applying the binary operator '*' (line 671)
    result_mul_504897 = python_operator(stypy.reporting.localization.Localization(__file__, 671, 15), '*', int_504895, tab_504896)
    
    str_504898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 23), 'str', '{}({})')
    # Applying the binary operator '+' (line 671)
    result_add_504899 = python_operator(stypy.reporting.localization.Localization(__file__, 671, 15), '+', result_mul_504897, str_504898)
    
    # Processing the call keyword arguments (line 671)
    kwargs_504900 = {}
    # Getting the type of 'end' (line 671)
    end_504893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 4), 'end', False)
    # Obtaining the member 'append' of a type (line 671)
    append_504894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 671, 4), end_504893, 'append')
    # Calling append(args, kwargs) (line 671)
    append_call_result_504901 = invoke(stypy.reporting.localization.Localization(__file__, 671, 4), append_504894, *[result_add_504899], **kwargs_504900)
    
    
    # Assigning a Call to a Name (line 672):
    
    # Assigning a Call to a Name (line 672):
    
    # Call to format(...): (line 672)
    # Processing the call arguments (line 672)
    # Getting the type of 'name' (line 672)
    name_504904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 38), 'name', False)
    # Getting the type of 'incodes' (line 672)
    incodes_504905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 44), 'incodes', False)
    str_504906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 53), 'str', 'py')
    # Processing the call keyword arguments (line 672)
    kwargs_504907 = {}
    str_504902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 13), 'str', '_bench_{}_{}_{}')
    # Obtaining the member 'format' of a type (line 672)
    format_504903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 672, 13), str_504902, 'format')
    # Calling format(args, kwargs) (line 672)
    format_call_result_504908 = invoke(stypy.reporting.localization.Localization(__file__, 672, 13), format_504903, *[name_504904, incodes_504905, str_504906], **kwargs_504907)
    
    # Assigning a type to the variable 'pyfunc' (line 672)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 672, 4), 'pyfunc', format_call_result_504908)
    
    # Assigning a Call to a Name (line 673):
    
    # Assigning a Call to a Name (line 673):
    
    # Call to format(...): (line 673)
    # Processing the call arguments (line 673)
    # Getting the type of 'name' (line 673)
    name_504911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 38), 'name', False)
    # Getting the type of 'incodes' (line 673)
    incodes_504912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 44), 'incodes', False)
    str_504913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 53), 'str', 'cy')
    # Processing the call keyword arguments (line 673)
    kwargs_504914 = {}
    str_504909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 13), 'str', '_bench_{}_{}_{}')
    # Obtaining the member 'format' of a type (line 673)
    format_504910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 13), str_504909, 'format')
    # Calling format(args, kwargs) (line 673)
    format_call_result_504915 = invoke(stypy.reporting.localization.Localization(__file__, 673, 13), format_504910, *[name_504911, incodes_504912, str_504913], **kwargs_504914)
    
    # Assigning a type to the variable 'cyfunc' (line 673)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 4), 'cyfunc', format_call_result_504915)
    
    # Assigning a Call to a Name (line 674):
    
    # Assigning a Call to a Name (line 674):
    
    # Call to join(...): (line 674)
    # Processing the call arguments (line 674)
    # Getting the type of 'top' (line 674)
    top_504918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 27), 'top', False)
    # Getting the type of 'end' (line 674)
    end_504919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 33), 'end', False)
    # Applying the binary operator '+' (line 674)
    result_add_504920 = python_operator(stypy.reporting.localization.Localization(__file__, 674, 27), '+', top_504918, end_504919)
    
    # Processing the call keyword arguments (line 674)
    kwargs_504921 = {}
    str_504916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 17), 'str', '\n')
    # Obtaining the member 'join' of a type (line 674)
    join_504917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 17), str_504916, 'join')
    # Calling join(args, kwargs) (line 674)
    join_call_result_504922 = invoke(stypy.reporting.localization.Localization(__file__, 674, 17), join_504917, *[result_add_504920], **kwargs_504921)
    
    # Assigning a type to the variable 'pytemplate' (line 674)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 4), 'pytemplate', join_call_result_504922)
    
    # Assigning a Call to a Name (line 675):
    
    # Assigning a Call to a Name (line 675):
    
    # Call to join(...): (line 675)
    # Processing the call arguments (line 675)
    # Getting the type of 'top' (line 675)
    top_504925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 27), 'top', False)
    # Getting the type of 'middle' (line 675)
    middle_504926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 33), 'middle', False)
    # Applying the binary operator '+' (line 675)
    result_add_504927 = python_operator(stypy.reporting.localization.Localization(__file__, 675, 27), '+', top_504925, middle_504926)
    
    # Getting the type of 'end' (line 675)
    end_504928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 42), 'end', False)
    # Applying the binary operator '+' (line 675)
    result_add_504929 = python_operator(stypy.reporting.localization.Localization(__file__, 675, 40), '+', result_add_504927, end_504928)
    
    # Processing the call keyword arguments (line 675)
    kwargs_504930 = {}
    str_504923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 17), 'str', '\n')
    # Obtaining the member 'join' of a type (line 675)
    join_504924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 17), str_504923, 'join')
    # Calling join(args, kwargs) (line 675)
    join_call_result_504931 = invoke(stypy.reporting.localization.Localization(__file__, 675, 17), join_504924, *[result_add_504929], **kwargs_504930)
    
    # Assigning a type to the variable 'cytemplate' (line 675)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 4), 'cytemplate', join_call_result_504931)
    
    # Assigning a Call to a Name (line 676):
    
    # Assigning a Call to a Name (line 676):
    
    # Call to format(...): (line 676)
    # Processing the call arguments (line 676)
    # Getting the type of 'pyfunc' (line 676)
    pyfunc_504934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 32), 'pyfunc', False)
    str_504935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 40), 'str', '_ufuncs.')
    # Getting the type of 'name' (line 676)
    name_504936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 53), 'name', False)
    # Applying the binary operator '+' (line 676)
    result_add_504937 = python_operator(stypy.reporting.localization.Localization(__file__, 676, 40), '+', str_504935, name_504936)
    
    
    # Call to join(...): (line 676)
    # Processing the call arguments (line 676)
    # Getting the type of 'inargs' (line 676)
    inargs_504940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 69), 'inargs', False)
    # Processing the call keyword arguments (line 676)
    kwargs_504941 = {}
    str_504938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 676, 59), 'str', ', ')
    # Obtaining the member 'join' of a type (line 676)
    join_504939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 676, 59), str_504938, 'join')
    # Calling join(args, kwargs) (line 676)
    join_call_result_504942 = invoke(stypy.reporting.localization.Localization(__file__, 676, 59), join_504939, *[inargs_504940], **kwargs_504941)
    
    # Processing the call keyword arguments (line 676)
    kwargs_504943 = {}
    # Getting the type of 'pytemplate' (line 676)
    pytemplate_504932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 14), 'pytemplate', False)
    # Obtaining the member 'format' of a type (line 676)
    format_504933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 676, 14), pytemplate_504932, 'format')
    # Calling format(args, kwargs) (line 676)
    format_call_result_504944 = invoke(stypy.reporting.localization.Localization(__file__, 676, 14), format_504933, *[pyfunc_504934, result_add_504937, join_call_result_504942], **kwargs_504943)
    
    # Assigning a type to the variable 'pybench' (line 676)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 676, 4), 'pybench', format_call_result_504944)
    
    # Assigning a Call to a Name (line 677):
    
    # Assigning a Call to a Name (line 677):
    
    # Call to format(...): (line 677)
    # Processing the call arguments (line 677)
    # Getting the type of 'cyfunc' (line 677)
    cyfunc_504947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 32), 'cyfunc', False)
    # Getting the type of 'name' (line 677)
    name_504948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 40), 'name', False)
    
    # Call to join(...): (line 677)
    # Processing the call arguments (line 677)
    # Getting the type of 'inargs' (line 677)
    inargs_504951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 56), 'inargs', False)
    # Getting the type of 'outargs' (line 677)
    outargs_504952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 65), 'outargs', False)
    # Applying the binary operator '+' (line 677)
    result_add_504953 = python_operator(stypy.reporting.localization.Localization(__file__, 677, 56), '+', inargs_504951, outargs_504952)
    
    # Processing the call keyword arguments (line 677)
    kwargs_504954 = {}
    str_504949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 46), 'str', ', ')
    # Obtaining the member 'join' of a type (line 677)
    join_504950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 677, 46), str_504949, 'join')
    # Calling join(args, kwargs) (line 677)
    join_call_result_504955 = invoke(stypy.reporting.localization.Localization(__file__, 677, 46), join_504950, *[result_add_504953], **kwargs_504954)
    
    # Processing the call keyword arguments (line 677)
    kwargs_504956 = {}
    # Getting the type of 'cytemplate' (line 677)
    cytemplate_504945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 14), 'cytemplate', False)
    # Obtaining the member 'format' of a type (line 677)
    format_504946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 677, 14), cytemplate_504945, 'format')
    # Calling format(args, kwargs) (line 677)
    format_call_result_504957 = invoke(stypy.reporting.localization.Localization(__file__, 677, 14), format_504946, *[cyfunc_504947, name_504948, join_call_result_504955], **kwargs_504956)
    
    # Assigning a type to the variable 'cybench' (line 677)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 4), 'cybench', format_call_result_504957)
    
    # Obtaining an instance of the builtin type 'tuple' (line 678)
    tuple_504958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 678, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 678)
    # Adding element type (line 678)
    # Getting the type of 'pybench' (line 678)
    pybench_504959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 11), 'pybench')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 678, 11), tuple_504958, pybench_504959)
    # Adding element type (line 678)
    # Getting the type of 'cybench' (line 678)
    cybench_504960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 20), 'cybench')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 678, 11), tuple_504958, cybench_504960)
    
    # Assigning a type to the variable 'stypy_return_type' (line 678)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 4), 'stypy_return_type', tuple_504958)
    
    # ################# End of 'generate_bench(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_bench' in the type store
    # Getting the type of 'stypy_return_type' (line 642)
    stypy_return_type_504961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_504961)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_bench'
    return stypy_return_type_504961

# Assigning a type to the variable 'generate_bench' (line 642)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 642, 0), 'generate_bench', generate_bench)

@norecursion
def generate_doc(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'generate_doc'
    module_type_store = module_type_store.open_function_context('generate_doc', 681, 0, False)
    
    # Passed parameters checking function
    generate_doc.stypy_localization = localization
    generate_doc.stypy_type_of_self = None
    generate_doc.stypy_type_store = module_type_store
    generate_doc.stypy_function_name = 'generate_doc'
    generate_doc.stypy_param_names_list = ['name', 'specs']
    generate_doc.stypy_varargs_param_name = None
    generate_doc.stypy_kwargs_param_name = None
    generate_doc.stypy_call_defaults = defaults
    generate_doc.stypy_call_varargs = varargs
    generate_doc.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_doc', ['name', 'specs'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_doc', localization, ['name', 'specs'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_doc(...)' code ##################

    
    # Assigning a BinOp to a Name (line 682):
    
    # Assigning a BinOp to a Name (line 682):
    str_504962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 10), 'str', ' ')
    int_504963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 14), 'int')
    # Applying the binary operator '*' (line 682)
    result_mul_504964 = python_operator(stypy.reporting.localization.Localization(__file__, 682, 10), '*', str_504962, int_504963)
    
    # Assigning a type to the variable 'tab' (line 682)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 682, 4), 'tab', result_mul_504964)
    
    # Assigning a List to a Name (line 683):
    
    # Assigning a List to a Name (line 683):
    
    # Obtaining an instance of the builtin type 'list' (line 683)
    list_504965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 683)
    # Adding element type (line 683)
    
    # Call to format(...): (line 683)
    # Processing the call arguments (line 683)
    # Getting the type of 'name' (line 683)
    name_504968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 55), 'name', False)
    # Processing the call keyword arguments (line 683)
    kwargs_504969 = {}
    str_504966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 11), 'str', '- :py:func:`~scipy.special.{}`::\n')
    # Obtaining the member 'format' of a type (line 683)
    format_504967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 11), str_504966, 'format')
    # Calling format(args, kwargs) (line 683)
    format_call_result_504970 = invoke(stypy.reporting.localization.Localization(__file__, 683, 11), format_504967, *[name_504968], **kwargs_504969)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 683, 10), list_504965, format_call_result_504970)
    
    # Assigning a type to the variable 'doc' (line 683)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 4), 'doc', list_504965)
    
    # Getting the type of 'specs' (line 684)
    specs_504971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 16), 'specs')
    # Testing the type of a for loop iterable (line 684)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 684, 4), specs_504971)
    # Getting the type of the for loop variable (line 684)
    for_loop_var_504972 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 684, 4), specs_504971)
    # Assigning a type to the variable 'spec' (line 684)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 684, 4), 'spec', for_loop_var_504972)
    # SSA begins for a for statement (line 684)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Tuple (line 685):
    
    # Assigning a Subscript to a Name (line 685):
    
    # Obtaining the type of the subscript
    int_504973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 8), 'int')
    
    # Call to split(...): (line 685)
    # Processing the call arguments (line 685)
    str_504976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 39), 'str', '->')
    # Processing the call keyword arguments (line 685)
    kwargs_504977 = {}
    # Getting the type of 'spec' (line 685)
    spec_504974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 28), 'spec', False)
    # Obtaining the member 'split' of a type (line 685)
    split_504975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 28), spec_504974, 'split')
    # Calling split(args, kwargs) (line 685)
    split_call_result_504978 = invoke(stypy.reporting.localization.Localization(__file__, 685, 28), split_504975, *[str_504976], **kwargs_504977)
    
    # Obtaining the member '__getitem__' of a type (line 685)
    getitem___504979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 8), split_call_result_504978, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 685)
    subscript_call_result_504980 = invoke(stypy.reporting.localization.Localization(__file__, 685, 8), getitem___504979, int_504973)
    
    # Assigning a type to the variable 'tuple_var_assignment_503901' (line 685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 8), 'tuple_var_assignment_503901', subscript_call_result_504980)
    
    # Assigning a Subscript to a Name (line 685):
    
    # Obtaining the type of the subscript
    int_504981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 8), 'int')
    
    # Call to split(...): (line 685)
    # Processing the call arguments (line 685)
    str_504984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 39), 'str', '->')
    # Processing the call keyword arguments (line 685)
    kwargs_504985 = {}
    # Getting the type of 'spec' (line 685)
    spec_504982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 28), 'spec', False)
    # Obtaining the member 'split' of a type (line 685)
    split_504983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 28), spec_504982, 'split')
    # Calling split(args, kwargs) (line 685)
    split_call_result_504986 = invoke(stypy.reporting.localization.Localization(__file__, 685, 28), split_504983, *[str_504984], **kwargs_504985)
    
    # Obtaining the member '__getitem__' of a type (line 685)
    getitem___504987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 8), split_call_result_504986, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 685)
    subscript_call_result_504988 = invoke(stypy.reporting.localization.Localization(__file__, 685, 8), getitem___504987, int_504981)
    
    # Assigning a type to the variable 'tuple_var_assignment_503902' (line 685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 8), 'tuple_var_assignment_503902', subscript_call_result_504988)
    
    # Assigning a Name to a Name (line 685):
    # Getting the type of 'tuple_var_assignment_503901' (line 685)
    tuple_var_assignment_503901_504989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 8), 'tuple_var_assignment_503901')
    # Assigning a type to the variable 'incodes' (line 685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 8), 'incodes', tuple_var_assignment_503901_504989)
    
    # Assigning a Name to a Name (line 685):
    # Getting the type of 'tuple_var_assignment_503902' (line 685)
    tuple_var_assignment_503902_504990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 8), 'tuple_var_assignment_503902')
    # Assigning a type to the variable 'outcodes' (line 685)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 17), 'outcodes', tuple_var_assignment_503902_504990)
    
    # Assigning a Call to a Name (line 686):
    
    # Assigning a Call to a Name (line 686):
    
    # Call to split(...): (line 686)
    # Processing the call arguments (line 686)
    str_504993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 32), 'str', '*')
    # Processing the call keyword arguments (line 686)
    kwargs_504994 = {}
    # Getting the type of 'incodes' (line 686)
    incodes_504991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 18), 'incodes', False)
    # Obtaining the member 'split' of a type (line 686)
    split_504992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 18), incodes_504991, 'split')
    # Calling split(args, kwargs) (line 686)
    split_call_result_504995 = invoke(stypy.reporting.localization.Localization(__file__, 686, 18), split_504992, *[str_504993], **kwargs_504994)
    
    # Assigning a type to the variable 'incodes' (line 686)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 686, 8), 'incodes', split_call_result_504995)
    
    # Assigning a Call to a Name (line 687):
    
    # Assigning a Call to a Name (line 687):
    
    # Call to list(...): (line 687)
    # Processing the call arguments (line 687)
    
    # Call to map(...): (line 687)
    # Processing the call arguments (line 687)

    @norecursion
    def _stypy_temp_lambda_296(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_296'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_296', 687, 27, True)
        # Passed parameters checking function
        _stypy_temp_lambda_296.stypy_localization = localization
        _stypy_temp_lambda_296.stypy_type_of_self = None
        _stypy_temp_lambda_296.stypy_type_store = module_type_store
        _stypy_temp_lambda_296.stypy_function_name = '_stypy_temp_lambda_296'
        _stypy_temp_lambda_296.stypy_param_names_list = ['x']
        _stypy_temp_lambda_296.stypy_varargs_param_name = None
        _stypy_temp_lambda_296.stypy_kwargs_param_name = None
        _stypy_temp_lambda_296.stypy_call_defaults = defaults
        _stypy_temp_lambda_296.stypy_call_varargs = varargs
        _stypy_temp_lambda_296.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_296', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_296', ['x'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Obtaining the type of the subscript
        # Getting the type of 'x' (line 687)
        x_504998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 46), 'x', False)
        # Getting the type of 'CY_TYPES' (line 687)
        CY_TYPES_504999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 37), 'CY_TYPES', False)
        # Obtaining the member '__getitem__' of a type (line 687)
        getitem___505000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 687, 37), CY_TYPES_504999, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 687)
        subscript_call_result_505001 = invoke(stypy.reporting.localization.Localization(__file__, 687, 37), getitem___505000, x_504998)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 27), 'stypy_return_type', subscript_call_result_505001)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_296' in the type store
        # Getting the type of 'stypy_return_type' (line 687)
        stypy_return_type_505002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 27), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_505002)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_296'
        return stypy_return_type_505002

    # Assigning a type to the variable '_stypy_temp_lambda_296' (line 687)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 27), '_stypy_temp_lambda_296', _stypy_temp_lambda_296)
    # Getting the type of '_stypy_temp_lambda_296' (line 687)
    _stypy_temp_lambda_296_505003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 27), '_stypy_temp_lambda_296')
    
    # Obtaining the type of the subscript
    int_505004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 58), 'int')
    # Getting the type of 'incodes' (line 687)
    incodes_505005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 50), 'incodes', False)
    # Obtaining the member '__getitem__' of a type (line 687)
    getitem___505006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 687, 50), incodes_505005, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 687)
    subscript_call_result_505007 = invoke(stypy.reporting.localization.Localization(__file__, 687, 50), getitem___505006, int_505004)
    
    # Processing the call keyword arguments (line 687)
    kwargs_505008 = {}
    # Getting the type of 'map' (line 687)
    map_504997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 23), 'map', False)
    # Calling map(args, kwargs) (line 687)
    map_call_result_505009 = invoke(stypy.reporting.localization.Localization(__file__, 687, 23), map_504997, *[_stypy_temp_lambda_296_505003, subscript_call_result_505007], **kwargs_505008)
    
    # Processing the call keyword arguments (line 687)
    kwargs_505010 = {}
    # Getting the type of 'list' (line 687)
    list_504996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 18), 'list', False)
    # Calling list(args, kwargs) (line 687)
    list_call_result_505011 = invoke(stypy.reporting.localization.Localization(__file__, 687, 18), list_504996, *[map_call_result_505009], **kwargs_505010)
    
    # Assigning a type to the variable 'intypes' (line 687)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 8), 'intypes', list_call_result_505011)
    
    
    
    # Call to len(...): (line 688)
    # Processing the call arguments (line 688)
    # Getting the type of 'incodes' (line 688)
    incodes_505013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 15), 'incodes', False)
    # Processing the call keyword arguments (line 688)
    kwargs_505014 = {}
    # Getting the type of 'len' (line 688)
    len_505012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 11), 'len', False)
    # Calling len(args, kwargs) (line 688)
    len_call_result_505015 = invoke(stypy.reporting.localization.Localization(__file__, 688, 11), len_505012, *[incodes_505013], **kwargs_505014)
    
    int_505016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 26), 'int')
    # Applying the binary operator '>' (line 688)
    result_gt_505017 = python_operator(stypy.reporting.localization.Localization(__file__, 688, 11), '>', len_call_result_505015, int_505016)
    
    # Testing the type of an if condition (line 688)
    if_condition_505018 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 688, 8), result_gt_505017)
    # Assigning a type to the variable 'if_condition_505018' (line 688)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 8), 'if_condition_505018', if_condition_505018)
    # SSA begins for if statement (line 688)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 689):
    
    # Assigning a Call to a Name (line 689):
    
    # Call to map(...): (line 689)
    # Processing the call arguments (line 689)

    @norecursion
    def _stypy_temp_lambda_297(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_297'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_297', 689, 24, True)
        # Passed parameters checking function
        _stypy_temp_lambda_297.stypy_localization = localization
        _stypy_temp_lambda_297.stypy_type_of_self = None
        _stypy_temp_lambda_297.stypy_type_store = module_type_store
        _stypy_temp_lambda_297.stypy_function_name = '_stypy_temp_lambda_297'
        _stypy_temp_lambda_297.stypy_param_names_list = ['x']
        _stypy_temp_lambda_297.stypy_varargs_param_name = None
        _stypy_temp_lambda_297.stypy_kwargs_param_name = None
        _stypy_temp_lambda_297.stypy_call_defaults = defaults
        _stypy_temp_lambda_297.stypy_call_varargs = varargs
        _stypy_temp_lambda_297.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_297', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_297', ['x'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to format(...): (line 689)
        # Processing the call arguments (line 689)
        
        # Obtaining the type of the subscript
        # Getting the type of 'x' (line 689)
        x_505022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 57), 'x', False)
        # Getting the type of 'CY_TYPES' (line 689)
        CY_TYPES_505023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 48), 'CY_TYPES', False)
        # Obtaining the member '__getitem__' of a type (line 689)
        getitem___505024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 48), CY_TYPES_505023, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 689)
        subscript_call_result_505025 = invoke(stypy.reporting.localization.Localization(__file__, 689, 48), getitem___505024, x_505022)
        
        # Processing the call keyword arguments (line 689)
        kwargs_505026 = {}
        str_505020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 689, 34), 'str', '{} *')
        # Obtaining the member 'format' of a type (line 689)
        format_505021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 34), str_505020, 'format')
        # Calling format(args, kwargs) (line 689)
        format_call_result_505027 = invoke(stypy.reporting.localization.Localization(__file__, 689, 34), format_505021, *[subscript_call_result_505025], **kwargs_505026)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 24), 'stypy_return_type', format_call_result_505027)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_297' in the type store
        # Getting the type of 'stypy_return_type' (line 689)
        stypy_return_type_505028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 24), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_505028)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_297'
        return stypy_return_type_505028

    # Assigning a type to the variable '_stypy_temp_lambda_297' (line 689)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 24), '_stypy_temp_lambda_297', _stypy_temp_lambda_297)
    # Getting the type of '_stypy_temp_lambda_297' (line 689)
    _stypy_temp_lambda_297_505029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 24), '_stypy_temp_lambda_297')
    
    # Obtaining the type of the subscript
    int_505030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 689, 70), 'int')
    # Getting the type of 'incodes' (line 689)
    incodes_505031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 62), 'incodes', False)
    # Obtaining the member '__getitem__' of a type (line 689)
    getitem___505032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 62), incodes_505031, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 689)
    subscript_call_result_505033 = invoke(stypy.reporting.localization.Localization(__file__, 689, 62), getitem___505032, int_505030)
    
    # Processing the call keyword arguments (line 689)
    kwargs_505034 = {}
    # Getting the type of 'map' (line 689)
    map_505019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 20), 'map', False)
    # Calling map(args, kwargs) (line 689)
    map_call_result_505035 = invoke(stypy.reporting.localization.Localization(__file__, 689, 20), map_505019, *[_stypy_temp_lambda_297_505029, subscript_call_result_505033], **kwargs_505034)
    
    # Assigning a type to the variable 'types' (line 689)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 12), 'types', map_call_result_505035)
    
    # Call to extend(...): (line 690)
    # Processing the call arguments (line 690)
    # Getting the type of 'types' (line 690)
    types_505038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 27), 'types', False)
    # Processing the call keyword arguments (line 690)
    kwargs_505039 = {}
    # Getting the type of 'intypes' (line 690)
    intypes_505036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 12), 'intypes', False)
    # Obtaining the member 'extend' of a type (line 690)
    extend_505037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 12), intypes_505036, 'extend')
    # Calling extend(args, kwargs) (line 690)
    extend_call_result_505040 = invoke(stypy.reporting.localization.Localization(__file__, 690, 12), extend_505037, *[types_505038], **kwargs_505039)
    
    # SSA join for if statement (line 688)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 691):
    
    # Assigning a Subscript to a Name (line 691):
    
    # Obtaining the type of the subscript
    # Getting the type of 'outcodes' (line 691)
    outcodes_505041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 27), 'outcodes')
    # Getting the type of 'CY_TYPES' (line 691)
    CY_TYPES_505042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 18), 'CY_TYPES')
    # Obtaining the member '__getitem__' of a type (line 691)
    getitem___505043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 18), CY_TYPES_505042, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 691)
    subscript_call_result_505044 = invoke(stypy.reporting.localization.Localization(__file__, 691, 18), getitem___505043, outcodes_505041)
    
    # Assigning a type to the variable 'outtype' (line 691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 8), 'outtype', subscript_call_result_505044)
    
    # Assigning a Call to a Name (line 692):
    
    # Assigning a Call to a Name (line 692):
    
    # Call to format(...): (line 692)
    # Processing the call arguments (line 692)
    # Getting the type of 'outtype' (line 692)
    outtype_505047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 34), 'outtype', False)
    # Getting the type of 'name' (line 692)
    name_505048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 43), 'name', False)
    
    # Call to join(...): (line 692)
    # Processing the call arguments (line 692)
    # Getting the type of 'intypes' (line 692)
    intypes_505051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 59), 'intypes', False)
    # Processing the call keyword arguments (line 692)
    kwargs_505052 = {}
    str_505049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 49), 'str', ', ')
    # Obtaining the member 'join' of a type (line 692)
    join_505050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 49), str_505049, 'join')
    # Calling join(args, kwargs) (line 692)
    join_call_result_505053 = invoke(stypy.reporting.localization.Localization(__file__, 692, 49), join_505050, *[intypes_505051], **kwargs_505052)
    
    # Processing the call keyword arguments (line 692)
    kwargs_505054 = {}
    str_505045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 15), 'str', '{} {}({})')
    # Obtaining the member 'format' of a type (line 692)
    format_505046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 15), str_505045, 'format')
    # Calling format(args, kwargs) (line 692)
    format_call_result_505055 = invoke(stypy.reporting.localization.Localization(__file__, 692, 15), format_505046, *[outtype_505047, name_505048, join_call_result_505053], **kwargs_505054)
    
    # Assigning a type to the variable 'line' (line 692)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 8), 'line', format_call_result_505055)
    
    # Call to append(...): (line 693)
    # Processing the call arguments (line 693)
    int_505058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 19), 'int')
    # Getting the type of 'tab' (line 693)
    tab_505059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 21), 'tab', False)
    # Applying the binary operator '*' (line 693)
    result_mul_505060 = python_operator(stypy.reporting.localization.Localization(__file__, 693, 19), '*', int_505058, tab_505059)
    
    # Getting the type of 'line' (line 693)
    line_505061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 27), 'line', False)
    # Applying the binary operator '+' (line 693)
    result_add_505062 = python_operator(stypy.reporting.localization.Localization(__file__, 693, 19), '+', result_mul_505060, line_505061)
    
    # Processing the call keyword arguments (line 693)
    kwargs_505063 = {}
    # Getting the type of 'doc' (line 693)
    doc_505056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 8), 'doc', False)
    # Obtaining the member 'append' of a type (line 693)
    append_505057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 8), doc_505056, 'append')
    # Calling append(args, kwargs) (line 693)
    append_call_result_505064 = invoke(stypy.reporting.localization.Localization(__file__, 693, 8), append_505057, *[result_add_505062], **kwargs_505063)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Subscript (line 694):
    
    # Assigning a Call to a Subscript (line 694):
    
    # Call to format(...): (line 694)
    # Processing the call arguments (line 694)
    
    # Obtaining the type of the subscript
    int_505067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 694, 32), 'int')
    # Getting the type of 'doc' (line 694)
    doc_505068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 28), 'doc', False)
    # Obtaining the member '__getitem__' of a type (line 694)
    getitem___505069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 28), doc_505068, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 694)
    subscript_call_result_505070 = invoke(stypy.reporting.localization.Localization(__file__, 694, 28), getitem___505069, int_505067)
    
    # Processing the call keyword arguments (line 694)
    kwargs_505071 = {}
    str_505065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 694, 14), 'str', '{}\n')
    # Obtaining the member 'format' of a type (line 694)
    format_505066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 14), str_505065, 'format')
    # Calling format(args, kwargs) (line 694)
    format_call_result_505072 = invoke(stypy.reporting.localization.Localization(__file__, 694, 14), format_505066, *[subscript_call_result_505070], **kwargs_505071)
    
    # Getting the type of 'doc' (line 694)
    doc_505073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 4), 'doc')
    int_505074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 694, 8), 'int')
    # Storing an element on a container (line 694)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 694, 4), doc_505073, (int_505074, format_call_result_505072))
    
    # Assigning a Call to a Name (line 695):
    
    # Assigning a Call to a Name (line 695):
    
    # Call to join(...): (line 695)
    # Processing the call arguments (line 695)
    # Getting the type of 'doc' (line 695)
    doc_505077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 20), 'doc', False)
    # Processing the call keyword arguments (line 695)
    kwargs_505078 = {}
    str_505075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 10), 'str', '\n')
    # Obtaining the member 'join' of a type (line 695)
    join_505076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 695, 10), str_505075, 'join')
    # Calling join(args, kwargs) (line 695)
    join_call_result_505079 = invoke(stypy.reporting.localization.Localization(__file__, 695, 10), join_505076, *[doc_505077], **kwargs_505078)
    
    # Assigning a type to the variable 'doc' (line 695)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 695, 4), 'doc', join_call_result_505079)
    # Getting the type of 'doc' (line 696)
    doc_505080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 11), 'doc')
    # Assigning a type to the variable 'stypy_return_type' (line 696)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 4), 'stypy_return_type', doc_505080)
    
    # ################# End of 'generate_doc(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_doc' in the type store
    # Getting the type of 'stypy_return_type' (line 681)
    stypy_return_type_505081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_505081)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_doc'
    return stypy_return_type_505081

# Assigning a type to the variable 'generate_doc' (line 681)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 681, 0), 'generate_doc', generate_doc)

@norecursion
def npy_cdouble_from_double_complex(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'npy_cdouble_from_double_complex'
    module_type_store = module_type_store.open_function_context('npy_cdouble_from_double_complex', 699, 0, False)
    
    # Passed parameters checking function
    npy_cdouble_from_double_complex.stypy_localization = localization
    npy_cdouble_from_double_complex.stypy_type_of_self = None
    npy_cdouble_from_double_complex.stypy_type_store = module_type_store
    npy_cdouble_from_double_complex.stypy_function_name = 'npy_cdouble_from_double_complex'
    npy_cdouble_from_double_complex.stypy_param_names_list = ['var']
    npy_cdouble_from_double_complex.stypy_varargs_param_name = None
    npy_cdouble_from_double_complex.stypy_kwargs_param_name = None
    npy_cdouble_from_double_complex.stypy_call_defaults = defaults
    npy_cdouble_from_double_complex.stypy_call_varargs = varargs
    npy_cdouble_from_double_complex.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'npy_cdouble_from_double_complex', ['var'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'npy_cdouble_from_double_complex', localization, ['var'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'npy_cdouble_from_double_complex(...)' code ##################

    str_505082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 4), 'str', 'Cast a cython double complex to a numpy cdouble.')
    
    # Assigning a Call to a Name (line 701):
    
    # Assigning a Call to a Name (line 701):
    
    # Call to format(...): (line 701)
    # Processing the call arguments (line 701)
    # Getting the type of 'var' (line 701)
    var_505085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 69), 'var', False)
    # Processing the call keyword arguments (line 701)
    kwargs_505086 = {}
    str_505083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 10), 'str', '_complexstuff.npy_cdouble_from_double_complex({})')
    # Obtaining the member 'format' of a type (line 701)
    format_505084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 10), str_505083, 'format')
    # Calling format(args, kwargs) (line 701)
    format_call_result_505087 = invoke(stypy.reporting.localization.Localization(__file__, 701, 10), format_505084, *[var_505085], **kwargs_505086)
    
    # Assigning a type to the variable 'res' (line 701)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 4), 'res', format_call_result_505087)
    # Getting the type of 'res' (line 702)
    res_505088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 11), 'res')
    # Assigning a type to the variable 'stypy_return_type' (line 702)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 4), 'stypy_return_type', res_505088)
    
    # ################# End of 'npy_cdouble_from_double_complex(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'npy_cdouble_from_double_complex' in the type store
    # Getting the type of 'stypy_return_type' (line 699)
    stypy_return_type_505089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_505089)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'npy_cdouble_from_double_complex'
    return stypy_return_type_505089

# Assigning a type to the variable 'npy_cdouble_from_double_complex' (line 699)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 699, 0), 'npy_cdouble_from_double_complex', npy_cdouble_from_double_complex)

@norecursion
def double_complex_from_npy_cdouble(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'double_complex_from_npy_cdouble'
    module_type_store = module_type_store.open_function_context('double_complex_from_npy_cdouble', 705, 0, False)
    
    # Passed parameters checking function
    double_complex_from_npy_cdouble.stypy_localization = localization
    double_complex_from_npy_cdouble.stypy_type_of_self = None
    double_complex_from_npy_cdouble.stypy_type_store = module_type_store
    double_complex_from_npy_cdouble.stypy_function_name = 'double_complex_from_npy_cdouble'
    double_complex_from_npy_cdouble.stypy_param_names_list = ['var']
    double_complex_from_npy_cdouble.stypy_varargs_param_name = None
    double_complex_from_npy_cdouble.stypy_kwargs_param_name = None
    double_complex_from_npy_cdouble.stypy_call_defaults = defaults
    double_complex_from_npy_cdouble.stypy_call_varargs = varargs
    double_complex_from_npy_cdouble.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'double_complex_from_npy_cdouble', ['var'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'double_complex_from_npy_cdouble', localization, ['var'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'double_complex_from_npy_cdouble(...)' code ##################

    str_505090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 4), 'str', 'Cast a numpy cdouble to a cython double complex.')
    
    # Assigning a Call to a Name (line 707):
    
    # Assigning a Call to a Name (line 707):
    
    # Call to format(...): (line 707)
    # Processing the call arguments (line 707)
    # Getting the type of 'var' (line 707)
    var_505093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 69), 'var', False)
    # Processing the call keyword arguments (line 707)
    kwargs_505094 = {}
    str_505091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 10), 'str', '_complexstuff.double_complex_from_npy_cdouble({})')
    # Obtaining the member 'format' of a type (line 707)
    format_505092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 707, 10), str_505091, 'format')
    # Calling format(args, kwargs) (line 707)
    format_call_result_505095 = invoke(stypy.reporting.localization.Localization(__file__, 707, 10), format_505092, *[var_505093], **kwargs_505094)
    
    # Assigning a type to the variable 'res' (line 707)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 4), 'res', format_call_result_505095)
    # Getting the type of 'res' (line 708)
    res_505096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 11), 'res')
    # Assigning a type to the variable 'stypy_return_type' (line 708)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 708, 4), 'stypy_return_type', res_505096)
    
    # ################# End of 'double_complex_from_npy_cdouble(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'double_complex_from_npy_cdouble' in the type store
    # Getting the type of 'stypy_return_type' (line 705)
    stypy_return_type_505097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_505097)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'double_complex_from_npy_cdouble'
    return stypy_return_type_505097

# Assigning a type to the variable 'double_complex_from_npy_cdouble' (line 705)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 0), 'double_complex_from_npy_cdouble', double_complex_from_npy_cdouble)

@norecursion
def iter_variants(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'iter_variants'
    module_type_store = module_type_store.open_function_context('iter_variants', 711, 0, False)
    
    # Passed parameters checking function
    iter_variants.stypy_localization = localization
    iter_variants.stypy_type_of_self = None
    iter_variants.stypy_type_store = module_type_store
    iter_variants.stypy_function_name = 'iter_variants'
    iter_variants.stypy_param_names_list = ['inputs', 'outputs']
    iter_variants.stypy_varargs_param_name = None
    iter_variants.stypy_kwargs_param_name = None
    iter_variants.stypy_call_defaults = defaults
    iter_variants.stypy_call_varargs = varargs
    iter_variants.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'iter_variants', ['inputs', 'outputs'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'iter_variants', localization, ['inputs', 'outputs'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'iter_variants(...)' code ##################

    str_505098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, (-1)), 'str', '\n    Generate variants of UFunc signatures, by changing variable types,\n    within the limitation that the corresponding C types casts still\n    work out.\n\n    This does not generate all possibilities, just the ones required\n    for the ufunc to work properly with the most common data types.\n\n    Parameters\n    ----------\n    inputs, outputs : str\n        UFunc input and output signature strings\n\n    Yields\n    ------\n    new_input, new_output : str\n        Modified input and output strings.\n        Also the original input/output pair is yielded.\n\n    ')
    
    # Assigning a List to a Name (line 732):
    
    # Assigning a List to a Name (line 732):
    
    # Obtaining an instance of the builtin type 'list' (line 732)
    list_505099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 732)
    # Adding element type (line 732)
    
    # Obtaining an instance of the builtin type 'tuple' (line 734)
    tuple_505100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 734)
    # Adding element type (line 734)
    str_505101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 9), 'str', 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 9), tuple_505100, str_505101)
    # Adding element type (line 734)
    str_505102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 14), 'str', 'l')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 9), tuple_505100, str_505102)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 11), list_505099, tuple_505100)
    
    # Assigning a type to the variable 'maps' (line 732)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 732, 4), 'maps', list_505099)
    
    
    
    # Evaluating a boolean operation
    
    str_505103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 12), 'str', 'i')
    # Getting the type of 'inputs' (line 738)
    inputs_505104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 19), 'inputs')
    # Applying the binary operator 'in' (line 738)
    result_contains_505105 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 12), 'in', str_505103, inputs_505104)
    
    
    str_505106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 29), 'str', 'l')
    # Getting the type of 'inputs' (line 738)
    inputs_505107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 36), 'inputs')
    # Applying the binary operator 'in' (line 738)
    result_contains_505108 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 29), 'in', str_505106, inputs_505107)
    
    # Applying the binary operator 'or' (line 738)
    result_or_keyword_505109 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 12), 'or', result_contains_505105, result_contains_505108)
    
    # Applying the 'not' unary operator (line 738)
    result_not__505110 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 7), 'not', result_or_keyword_505109)
    
    # Testing the type of an if condition (line 738)
    if_condition_505111 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 738, 4), result_not__505110)
    # Assigning a type to the variable 'if_condition_505111' (line 738)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 738, 4), 'if_condition_505111', if_condition_505111)
    # SSA begins for if statement (line 738)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 745):
    
    # Assigning a BinOp to a Name (line 745):
    # Getting the type of 'maps' (line 745)
    maps_505112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 15), 'maps')
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'maps' (line 745)
    maps_505120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 56), 'maps')
    comprehension_505121 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 745, 23), maps_505120)
    # Assigning a type to the variable 'a' (line 745)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 23), 'a', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 745, 23), comprehension_505121))
    # Assigning a type to the variable 'b' (line 745)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 23), 'b', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 745, 23), comprehension_505121))
    
    # Obtaining an instance of the builtin type 'tuple' (line 745)
    tuple_505113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 745)
    # Adding element type (line 745)
    # Getting the type of 'a' (line 745)
    a_505114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 24), 'a')
    str_505115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 28), 'str', 'dD')
    # Applying the binary operator '+' (line 745)
    result_add_505116 = python_operator(stypy.reporting.localization.Localization(__file__, 745, 24), '+', a_505114, str_505115)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 745, 24), tuple_505113, result_add_505116)
    # Adding element type (line 745)
    # Getting the type of 'b' (line 745)
    b_505117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 34), 'b')
    str_505118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 38), 'str', 'fF')
    # Applying the binary operator '+' (line 745)
    result_add_505119 = python_operator(stypy.reporting.localization.Localization(__file__, 745, 34), '+', b_505117, str_505118)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 745, 24), tuple_505113, result_add_505119)
    
    list_505122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 23), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 745, 23), list_505122, tuple_505113)
    # Applying the binary operator '+' (line 745)
    result_add_505123 = python_operator(stypy.reporting.localization.Localization(__file__, 745, 15), '+', maps_505112, list_505122)
    
    # Assigning a type to the variable 'maps' (line 745)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'maps', result_add_505123)
    # SSA join for if statement (line 738)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'maps' (line 748)
    maps_505124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 20), 'maps')
    # Testing the type of a for loop iterable (line 748)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 748, 4), maps_505124)
    # Getting the type of the for loop variable (line 748)
    for_loop_var_505125 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 748, 4), maps_505124)
    # Assigning a type to the variable 'src' (line 748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 4), 'src', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 4), for_loop_var_505125))
    # Assigning a type to the variable 'dst' (line 748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 4), 'dst', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 4), for_loop_var_505125))
    # SSA begins for a for statement (line 748)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Name to a Name (line 749):
    
    # Assigning a Name to a Name (line 749):
    # Getting the type of 'inputs' (line 749)
    inputs_505126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 21), 'inputs')
    # Assigning a type to the variable 'new_inputs' (line 749)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 749, 8), 'new_inputs', inputs_505126)
    
    # Assigning a Name to a Name (line 750):
    
    # Assigning a Name to a Name (line 750):
    # Getting the type of 'outputs' (line 750)
    outputs_505127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 22), 'outputs')
    # Assigning a type to the variable 'new_outputs' (line 750)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 8), 'new_outputs', outputs_505127)
    
    
    # Call to zip(...): (line 751)
    # Processing the call arguments (line 751)
    # Getting the type of 'src' (line 751)
    src_505129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 24), 'src', False)
    # Getting the type of 'dst' (line 751)
    dst_505130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 29), 'dst', False)
    # Processing the call keyword arguments (line 751)
    kwargs_505131 = {}
    # Getting the type of 'zip' (line 751)
    zip_505128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 20), 'zip', False)
    # Calling zip(args, kwargs) (line 751)
    zip_call_result_505132 = invoke(stypy.reporting.localization.Localization(__file__, 751, 20), zip_505128, *[src_505129, dst_505130], **kwargs_505131)
    
    # Testing the type of a for loop iterable (line 751)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 751, 8), zip_call_result_505132)
    # Getting the type of the for loop variable (line 751)
    for_loop_var_505133 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 751, 8), zip_call_result_505132)
    # Assigning a type to the variable 'a' (line 751)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 751, 8), 'a', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 751, 8), for_loop_var_505133))
    # Assigning a type to the variable 'b' (line 751)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 751, 8), 'b', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 751, 8), for_loop_var_505133))
    # SSA begins for a for statement (line 751)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 752):
    
    # Assigning a Call to a Name (line 752):
    
    # Call to replace(...): (line 752)
    # Processing the call arguments (line 752)
    # Getting the type of 'a' (line 752)
    a_505136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 44), 'a', False)
    # Getting the type of 'b' (line 752)
    b_505137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 47), 'b', False)
    # Processing the call keyword arguments (line 752)
    kwargs_505138 = {}
    # Getting the type of 'new_inputs' (line 752)
    new_inputs_505134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 25), 'new_inputs', False)
    # Obtaining the member 'replace' of a type (line 752)
    replace_505135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 25), new_inputs_505134, 'replace')
    # Calling replace(args, kwargs) (line 752)
    replace_call_result_505139 = invoke(stypy.reporting.localization.Localization(__file__, 752, 25), replace_505135, *[a_505136, b_505137], **kwargs_505138)
    
    # Assigning a type to the variable 'new_inputs' (line 752)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 12), 'new_inputs', replace_call_result_505139)
    
    # Assigning a Call to a Name (line 753):
    
    # Assigning a Call to a Name (line 753):
    
    # Call to replace(...): (line 753)
    # Processing the call arguments (line 753)
    # Getting the type of 'a' (line 753)
    a_505142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 46), 'a', False)
    # Getting the type of 'b' (line 753)
    b_505143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 49), 'b', False)
    # Processing the call keyword arguments (line 753)
    kwargs_505144 = {}
    # Getting the type of 'new_outputs' (line 753)
    new_outputs_505140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 26), 'new_outputs', False)
    # Obtaining the member 'replace' of a type (line 753)
    replace_505141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 26), new_outputs_505140, 'replace')
    # Calling replace(args, kwargs) (line 753)
    replace_call_result_505145 = invoke(stypy.reporting.localization.Localization(__file__, 753, 26), replace_505141, *[a_505142, b_505143], **kwargs_505144)
    
    # Assigning a type to the variable 'new_outputs' (line 753)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 12), 'new_outputs', replace_call_result_505145)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Creating a generator
    
    # Obtaining an instance of the builtin type 'tuple' (line 754)
    tuple_505146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 754, 14), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 754)
    # Adding element type (line 754)
    # Getting the type of 'new_inputs' (line 754)
    new_inputs_505147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 14), 'new_inputs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 754, 14), tuple_505146, new_inputs_505147)
    # Adding element type (line 754)
    # Getting the type of 'new_outputs' (line 754)
    new_outputs_505148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 26), 'new_outputs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 754, 14), tuple_505146, new_outputs_505148)
    
    GeneratorType_505149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 754, 8), 'GeneratorType')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 754, 8), GeneratorType_505149, tuple_505146)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), 'stypy_return_type', GeneratorType_505149)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'iter_variants(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'iter_variants' in the type store
    # Getting the type of 'stypy_return_type' (line 711)
    stypy_return_type_505150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_505150)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'iter_variants'
    return stypy_return_type_505150

# Assigning a type to the variable 'iter_variants' (line 711)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 0), 'iter_variants', iter_variants)
# Declaration of the 'Func' class

class Func(object, ):
    str_505151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, (-1)), 'str', '\n    Base class for Ufunc and FusedFunc.\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 762, 4, False)
        # Assigning a type to the variable 'self' (line 763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Func.__init__', ['name', 'signatures', 'headers'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['name', 'signatures', 'headers'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 763):
        
        # Assigning a Name to a Attribute (line 763):
        # Getting the type of 'name' (line 763)
        name_505152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 20), 'name')
        # Getting the type of 'self' (line 763)
        self_505153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 8), 'self')
        # Setting the type of the member 'name' of a type (line 763)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 8), self_505153, 'name', name_505152)
        
        # Assigning a Call to a Attribute (line 764):
        
        # Assigning a Call to a Attribute (line 764):
        
        # Call to _parse_signatures(...): (line 764)
        # Processing the call arguments (line 764)
        # Getting the type of 'signatures' (line 764)
        signatures_505156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 49), 'signatures', False)
        # Getting the type of 'headers' (line 764)
        headers_505157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 61), 'headers', False)
        # Processing the call keyword arguments (line 764)
        kwargs_505158 = {}
        # Getting the type of 'self' (line 764)
        self_505154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 26), 'self', False)
        # Obtaining the member '_parse_signatures' of a type (line 764)
        _parse_signatures_505155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 26), self_505154, '_parse_signatures')
        # Calling _parse_signatures(args, kwargs) (line 764)
        _parse_signatures_call_result_505159 = invoke(stypy.reporting.localization.Localization(__file__, 764, 26), _parse_signatures_505155, *[signatures_505156, headers_505157], **kwargs_505158)
        
        # Getting the type of 'self' (line 764)
        self_505160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 8), 'self')
        # Setting the type of the member 'signatures' of a type (line 764)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 8), self_505160, 'signatures', _parse_signatures_call_result_505159)
        
        # Assigning a Dict to a Attribute (line 765):
        
        # Assigning a Dict to a Attribute (line 765):
        
        # Obtaining an instance of the builtin type 'dict' (line 765)
        dict_505161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 39), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 765)
        
        # Getting the type of 'self' (line 765)
        self_505162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 8), 'self')
        # Setting the type of the member 'function_name_overrides' of a type (line 765)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 8), self_505162, 'function_name_overrides', dict_505161)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _parse_signatures(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_parse_signatures'
        module_type_store = module_type_store.open_function_context('_parse_signatures', 767, 4, False)
        # Assigning a type to the variable 'self' (line 768)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Func._parse_signatures.__dict__.__setitem__('stypy_localization', localization)
        Func._parse_signatures.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Func._parse_signatures.__dict__.__setitem__('stypy_type_store', module_type_store)
        Func._parse_signatures.__dict__.__setitem__('stypy_function_name', 'Func._parse_signatures')
        Func._parse_signatures.__dict__.__setitem__('stypy_param_names_list', ['sigs_str', 'headers_str'])
        Func._parse_signatures.__dict__.__setitem__('stypy_varargs_param_name', None)
        Func._parse_signatures.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Func._parse_signatures.__dict__.__setitem__('stypy_call_defaults', defaults)
        Func._parse_signatures.__dict__.__setitem__('stypy_call_varargs', varargs)
        Func._parse_signatures.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Func._parse_signatures.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Func._parse_signatures', ['sigs_str', 'headers_str'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_parse_signatures', localization, ['sigs_str', 'headers_str'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_parse_signatures(...)' code ##################

        
        # Assigning a ListComp to a Name (line 768):
        
        # Assigning a ListComp to a Name (line 768):
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 768)
        # Processing the call arguments (line 768)
        str_505173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 50), 'str', ',')
        # Processing the call keyword arguments (line 768)
        kwargs_505174 = {}
        # Getting the type of 'sigs_str' (line 768)
        sigs_str_505171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 35), 'sigs_str', False)
        # Obtaining the member 'split' of a type (line 768)
        split_505172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 35), sigs_str_505171, 'split')
        # Calling split(args, kwargs) (line 768)
        split_call_result_505175 = invoke(stypy.reporting.localization.Localization(__file__, 768, 35), split_505172, *[str_505173], **kwargs_505174)
        
        comprehension_505176 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 768, 16), split_call_result_505175)
        # Assigning a type to the variable 'x' (line 768)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 16), 'x', comprehension_505176)
        
        # Call to strip(...): (line 768)
        # Processing the call keyword arguments (line 768)
        kwargs_505169 = {}
        # Getting the type of 'x' (line 768)
        x_505167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 58), 'x', False)
        # Obtaining the member 'strip' of a type (line 768)
        strip_505168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 58), x_505167, 'strip')
        # Calling strip(args, kwargs) (line 768)
        strip_call_result_505170 = invoke(stypy.reporting.localization.Localization(__file__, 768, 58), strip_505168, *[], **kwargs_505169)
        
        
        # Call to strip(...): (line 768)
        # Processing the call keyword arguments (line 768)
        kwargs_505165 = {}
        # Getting the type of 'x' (line 768)
        x_505163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 16), 'x', False)
        # Obtaining the member 'strip' of a type (line 768)
        strip_505164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 16), x_505163, 'strip')
        # Calling strip(args, kwargs) (line 768)
        strip_call_result_505166 = invoke(stypy.reporting.localization.Localization(__file__, 768, 16), strip_505164, *[], **kwargs_505165)
        
        list_505177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 16), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 768, 16), list_505177, strip_call_result_505166)
        # Assigning a type to the variable 'sigs' (line 768)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 8), 'sigs', list_505177)
        
        # Assigning a ListComp to a Name (line 769):
        
        # Assigning a ListComp to a Name (line 769):
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to split(...): (line 769)
        # Processing the call arguments (line 769)
        str_505188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 56), 'str', ',')
        # Processing the call keyword arguments (line 769)
        kwargs_505189 = {}
        # Getting the type of 'headers_str' (line 769)
        headers_str_505186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 38), 'headers_str', False)
        # Obtaining the member 'split' of a type (line 769)
        split_505187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 38), headers_str_505186, 'split')
        # Calling split(args, kwargs) (line 769)
        split_call_result_505190 = invoke(stypy.reporting.localization.Localization(__file__, 769, 38), split_505187, *[str_505188], **kwargs_505189)
        
        comprehension_505191 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 769, 19), split_call_result_505190)
        # Assigning a type to the variable 'x' (line 769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 19), 'x', comprehension_505191)
        
        # Call to strip(...): (line 769)
        # Processing the call keyword arguments (line 769)
        kwargs_505184 = {}
        # Getting the type of 'x' (line 769)
        x_505182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 64), 'x', False)
        # Obtaining the member 'strip' of a type (line 769)
        strip_505183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 64), x_505182, 'strip')
        # Calling strip(args, kwargs) (line 769)
        strip_call_result_505185 = invoke(stypy.reporting.localization.Localization(__file__, 769, 64), strip_505183, *[], **kwargs_505184)
        
        
        # Call to strip(...): (line 769)
        # Processing the call keyword arguments (line 769)
        kwargs_505180 = {}
        # Getting the type of 'x' (line 769)
        x_505178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 19), 'x', False)
        # Obtaining the member 'strip' of a type (line 769)
        strip_505179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 19), x_505178, 'strip')
        # Calling strip(args, kwargs) (line 769)
        strip_call_result_505181 = invoke(stypy.reporting.localization.Localization(__file__, 769, 19), strip_505179, *[], **kwargs_505180)
        
        list_505192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 19), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 769, 19), list_505192, strip_call_result_505181)
        # Assigning a type to the variable 'headers' (line 769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'headers', list_505192)
        
        
        
        # Call to len(...): (line 770)
        # Processing the call arguments (line 770)
        # Getting the type of 'headers' (line 770)
        headers_505194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 15), 'headers', False)
        # Processing the call keyword arguments (line 770)
        kwargs_505195 = {}
        # Getting the type of 'len' (line 770)
        len_505193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 11), 'len', False)
        # Calling len(args, kwargs) (line 770)
        len_call_result_505196 = invoke(stypy.reporting.localization.Localization(__file__, 770, 11), len_505193, *[headers_505194], **kwargs_505195)
        
        int_505197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 27), 'int')
        # Applying the binary operator '==' (line 770)
        result_eq_505198 = python_operator(stypy.reporting.localization.Localization(__file__, 770, 11), '==', len_call_result_505196, int_505197)
        
        # Testing the type of an if condition (line 770)
        if_condition_505199 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 770, 8), result_eq_505198)
        # Assigning a type to the variable 'if_condition_505199' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'if_condition_505199', if_condition_505199)
        # SSA begins for if statement (line 770)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 771):
        
        # Assigning a BinOp to a Name (line 771):
        # Getting the type of 'headers' (line 771)
        headers_505200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 22), 'headers')
        
        # Call to len(...): (line 771)
        # Processing the call arguments (line 771)
        # Getting the type of 'sigs' (line 771)
        sigs_505202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 36), 'sigs', False)
        # Processing the call keyword arguments (line 771)
        kwargs_505203 = {}
        # Getting the type of 'len' (line 771)
        len_505201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 32), 'len', False)
        # Calling len(args, kwargs) (line 771)
        len_call_result_505204 = invoke(stypy.reporting.localization.Localization(__file__, 771, 32), len_505201, *[sigs_505202], **kwargs_505203)
        
        # Applying the binary operator '*' (line 771)
        result_mul_505205 = python_operator(stypy.reporting.localization.Localization(__file__, 771, 22), '*', headers_505200, len_call_result_505204)
        
        # Assigning a type to the variable 'headers' (line 771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 12), 'headers', result_mul_505205)
        # SSA join for if statement (line 770)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 772)
        # Processing the call arguments (line 772)
        # Getting the type of 'headers' (line 772)
        headers_505207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 15), 'headers', False)
        # Processing the call keyword arguments (line 772)
        kwargs_505208 = {}
        # Getting the type of 'len' (line 772)
        len_505206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 11), 'len', False)
        # Calling len(args, kwargs) (line 772)
        len_call_result_505209 = invoke(stypy.reporting.localization.Localization(__file__, 772, 11), len_505206, *[headers_505207], **kwargs_505208)
        
        
        # Call to len(...): (line 772)
        # Processing the call arguments (line 772)
        # Getting the type of 'sigs' (line 772)
        sigs_505211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 31), 'sigs', False)
        # Processing the call keyword arguments (line 772)
        kwargs_505212 = {}
        # Getting the type of 'len' (line 772)
        len_505210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 27), 'len', False)
        # Calling len(args, kwargs) (line 772)
        len_call_result_505213 = invoke(stypy.reporting.localization.Localization(__file__, 772, 27), len_505210, *[sigs_505211], **kwargs_505212)
        
        # Applying the binary operator '!=' (line 772)
        result_ne_505214 = python_operator(stypy.reporting.localization.Localization(__file__, 772, 11), '!=', len_call_result_505209, len_call_result_505213)
        
        # Testing the type of an if condition (line 772)
        if_condition_505215 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 772, 8), result_ne_505214)
        # Assigning a type to the variable 'if_condition_505215' (line 772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 8), 'if_condition_505215', if_condition_505215)
        # SSA begins for if statement (line 772)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 773)
        # Processing the call arguments (line 773)
        str_505217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 29), 'str', "%s: Number of headers and signatures doesn't match: %r -- %r")
        
        # Obtaining an instance of the builtin type 'tuple' (line 774)
        tuple_505218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 774, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 774)
        # Adding element type (line 774)
        # Getting the type of 'self' (line 774)
        self_505219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 16), 'self', False)
        # Obtaining the member 'name' of a type (line 774)
        name_505220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 16), self_505219, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 16), tuple_505218, name_505220)
        # Adding element type (line 774)
        # Getting the type of 'sigs_str' (line 774)
        sigs_str_505221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 27), 'sigs_str', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 16), tuple_505218, sigs_str_505221)
        # Adding element type (line 774)
        # Getting the type of 'headers_str' (line 774)
        headers_str_505222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 37), 'headers_str', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 774, 16), tuple_505218, headers_str_505222)
        
        # Applying the binary operator '%' (line 773)
        result_mod_505223 = python_operator(stypy.reporting.localization.Localization(__file__, 773, 29), '%', str_505217, tuple_505218)
        
        # Processing the call keyword arguments (line 773)
        kwargs_505224 = {}
        # Getting the type of 'ValueError' (line 773)
        ValueError_505216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 773)
        ValueError_call_result_505225 = invoke(stypy.reporting.localization.Localization(__file__, 773, 18), ValueError_505216, *[result_mod_505223], **kwargs_505224)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 773, 12), ValueError_call_result_505225, 'raise parameter', BaseException)
        # SSA join for if statement (line 772)
        module_type_store = module_type_store.join_ssa_context()
        
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to zip(...): (line 775)
        # Processing the call arguments (line 775)
        # Getting the type of 'sigs' (line 775)
        sigs_505235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 64), 'sigs', False)
        # Getting the type of 'headers' (line 775)
        headers_505236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 70), 'headers', False)
        # Processing the call keyword arguments (line 775)
        kwargs_505237 = {}
        # Getting the type of 'zip' (line 775)
        zip_505234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 60), 'zip', False)
        # Calling zip(args, kwargs) (line 775)
        zip_call_result_505238 = invoke(stypy.reporting.localization.Localization(__file__, 775, 60), zip_505234, *[sigs_505235, headers_505236], **kwargs_505237)
        
        comprehension_505239 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 775, 16), zip_call_result_505238)
        # Assigning a type to the variable 'x' (line 775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 775, 16), 'x', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 775, 16), comprehension_505239))
        # Assigning a type to the variable 'h' (line 775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 775, 16), 'h', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 775, 16), comprehension_505239))
        
        # Call to _parse_signature(...): (line 775)
        # Processing the call arguments (line 775)
        # Getting the type of 'x' (line 775)
        x_505228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 38), 'x', False)
        # Processing the call keyword arguments (line 775)
        kwargs_505229 = {}
        # Getting the type of 'self' (line 775)
        self_505226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 16), 'self', False)
        # Obtaining the member '_parse_signature' of a type (line 775)
        _parse_signature_505227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 775, 16), self_505226, '_parse_signature')
        # Calling _parse_signature(args, kwargs) (line 775)
        _parse_signature_call_result_505230 = invoke(stypy.reporting.localization.Localization(__file__, 775, 16), _parse_signature_505227, *[x_505228], **kwargs_505229)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 775)
        tuple_505231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 775)
        # Adding element type (line 775)
        # Getting the type of 'h' (line 775)
        h_505232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 44), 'h')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 775, 44), tuple_505231, h_505232)
        
        # Applying the binary operator '+' (line 775)
        result_add_505233 = python_operator(stypy.reporting.localization.Localization(__file__, 775, 16), '+', _parse_signature_call_result_505230, tuple_505231)
        
        list_505240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 16), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 775, 16), list_505240, result_add_505233)
        # Assigning a type to the variable 'stypy_return_type' (line 775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 775, 8), 'stypy_return_type', list_505240)
        
        # ################# End of '_parse_signatures(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_parse_signatures' in the type store
        # Getting the type of 'stypy_return_type' (line 767)
        stypy_return_type_505241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_505241)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_parse_signatures'
        return stypy_return_type_505241


    @norecursion
    def _parse_signature(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_parse_signature'
        module_type_store = module_type_store.open_function_context('_parse_signature', 777, 4, False)
        # Assigning a type to the variable 'self' (line 778)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Func._parse_signature.__dict__.__setitem__('stypy_localization', localization)
        Func._parse_signature.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Func._parse_signature.__dict__.__setitem__('stypy_type_store', module_type_store)
        Func._parse_signature.__dict__.__setitem__('stypy_function_name', 'Func._parse_signature')
        Func._parse_signature.__dict__.__setitem__('stypy_param_names_list', ['sig'])
        Func._parse_signature.__dict__.__setitem__('stypy_varargs_param_name', None)
        Func._parse_signature.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Func._parse_signature.__dict__.__setitem__('stypy_call_defaults', defaults)
        Func._parse_signature.__dict__.__setitem__('stypy_call_varargs', varargs)
        Func._parse_signature.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Func._parse_signature.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Func._parse_signature', ['sig'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_parse_signature', localization, ['sig'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_parse_signature(...)' code ##################

        
        # Assigning a Call to a Name (line 778):
        
        # Assigning a Call to a Name (line 778):
        
        # Call to match(...): (line 778)
        # Processing the call arguments (line 778)
        str_505244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 778, 21), 'str', '\\s*(.*):\\s*([fdgFDGil]*)\\s*\\*\\s*([fdgFDGil]*)\\s*->\\s*([*fdgFDGil]*)\\s*$')
        # Getting the type of 'sig' (line 778)
        sig_505245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 97), 'sig', False)
        # Processing the call keyword arguments (line 778)
        kwargs_505246 = {}
        # Getting the type of 're' (line 778)
        re_505242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 're', False)
        # Obtaining the member 'match' of a type (line 778)
        match_505243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 12), re_505242, 'match')
        # Calling match(args, kwargs) (line 778)
        match_call_result_505247 = invoke(stypy.reporting.localization.Localization(__file__, 778, 12), match_505243, *[str_505244, sig_505245], **kwargs_505246)
        
        # Assigning a type to the variable 'm' (line 778)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 8), 'm', match_call_result_505247)
        
        # Getting the type of 'm' (line 779)
        m_505248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 11), 'm')
        # Testing the type of an if condition (line 779)
        if_condition_505249 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 779, 8), m_505248)
        # Assigning a type to the variable 'if_condition_505249' (line 779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 8), 'if_condition_505249', if_condition_505249)
        # SSA begins for if statement (line 779)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a ListComp to a Tuple (line 780):
        
        # Assigning a Subscript to a Name (line 780):
        
        # Obtaining the type of the subscript
        int_505250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to groups(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_505257 = {}
        # Getting the type of 'm' (line 780)
        m_505255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 59), 'm', False)
        # Obtaining the member 'groups' of a type (line 780)
        groups_505256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 59), m_505255, 'groups')
        # Calling groups(args, kwargs) (line 780)
        groups_call_result_505258 = invoke(stypy.reporting.localization.Localization(__file__, 780, 59), groups_505256, *[], **kwargs_505257)
        
        comprehension_505259 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 40), groups_call_result_505258)
        # Assigning a type to the variable 'x' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 40), 'x', comprehension_505259)
        
        # Call to strip(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_505253 = {}
        # Getting the type of 'x' (line 780)
        x_505251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 40), 'x', False)
        # Obtaining the member 'strip' of a type (line 780)
        strip_505252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 40), x_505251, 'strip')
        # Calling strip(args, kwargs) (line 780)
        strip_call_result_505254 = invoke(stypy.reporting.localization.Localization(__file__, 780, 40), strip_505252, *[], **kwargs_505253)
        
        list_505260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 40), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 40), list_505260, strip_call_result_505254)
        # Obtaining the member '__getitem__' of a type (line 780)
        getitem___505261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 12), list_505260, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 780)
        subscript_call_result_505262 = invoke(stypy.reporting.localization.Localization(__file__, 780, 12), getitem___505261, int_505250)
        
        # Assigning a type to the variable 'tuple_var_assignment_503903' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'tuple_var_assignment_503903', subscript_call_result_505262)
        
        # Assigning a Subscript to a Name (line 780):
        
        # Obtaining the type of the subscript
        int_505263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to groups(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_505270 = {}
        # Getting the type of 'm' (line 780)
        m_505268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 59), 'm', False)
        # Obtaining the member 'groups' of a type (line 780)
        groups_505269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 59), m_505268, 'groups')
        # Calling groups(args, kwargs) (line 780)
        groups_call_result_505271 = invoke(stypy.reporting.localization.Localization(__file__, 780, 59), groups_505269, *[], **kwargs_505270)
        
        comprehension_505272 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 40), groups_call_result_505271)
        # Assigning a type to the variable 'x' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 40), 'x', comprehension_505272)
        
        # Call to strip(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_505266 = {}
        # Getting the type of 'x' (line 780)
        x_505264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 40), 'x', False)
        # Obtaining the member 'strip' of a type (line 780)
        strip_505265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 40), x_505264, 'strip')
        # Calling strip(args, kwargs) (line 780)
        strip_call_result_505267 = invoke(stypy.reporting.localization.Localization(__file__, 780, 40), strip_505265, *[], **kwargs_505266)
        
        list_505273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 40), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 40), list_505273, strip_call_result_505267)
        # Obtaining the member '__getitem__' of a type (line 780)
        getitem___505274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 12), list_505273, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 780)
        subscript_call_result_505275 = invoke(stypy.reporting.localization.Localization(__file__, 780, 12), getitem___505274, int_505263)
        
        # Assigning a type to the variable 'tuple_var_assignment_503904' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'tuple_var_assignment_503904', subscript_call_result_505275)
        
        # Assigning a Subscript to a Name (line 780):
        
        # Obtaining the type of the subscript
        int_505276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to groups(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_505283 = {}
        # Getting the type of 'm' (line 780)
        m_505281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 59), 'm', False)
        # Obtaining the member 'groups' of a type (line 780)
        groups_505282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 59), m_505281, 'groups')
        # Calling groups(args, kwargs) (line 780)
        groups_call_result_505284 = invoke(stypy.reporting.localization.Localization(__file__, 780, 59), groups_505282, *[], **kwargs_505283)
        
        comprehension_505285 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 40), groups_call_result_505284)
        # Assigning a type to the variable 'x' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 40), 'x', comprehension_505285)
        
        # Call to strip(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_505279 = {}
        # Getting the type of 'x' (line 780)
        x_505277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 40), 'x', False)
        # Obtaining the member 'strip' of a type (line 780)
        strip_505278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 40), x_505277, 'strip')
        # Calling strip(args, kwargs) (line 780)
        strip_call_result_505280 = invoke(stypy.reporting.localization.Localization(__file__, 780, 40), strip_505278, *[], **kwargs_505279)
        
        list_505286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 40), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 40), list_505286, strip_call_result_505280)
        # Obtaining the member '__getitem__' of a type (line 780)
        getitem___505287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 12), list_505286, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 780)
        subscript_call_result_505288 = invoke(stypy.reporting.localization.Localization(__file__, 780, 12), getitem___505287, int_505276)
        
        # Assigning a type to the variable 'tuple_var_assignment_503905' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'tuple_var_assignment_503905', subscript_call_result_505288)
        
        # Assigning a Subscript to a Name (line 780):
        
        # Obtaining the type of the subscript
        int_505289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to groups(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_505296 = {}
        # Getting the type of 'm' (line 780)
        m_505294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 59), 'm', False)
        # Obtaining the member 'groups' of a type (line 780)
        groups_505295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 59), m_505294, 'groups')
        # Calling groups(args, kwargs) (line 780)
        groups_call_result_505297 = invoke(stypy.reporting.localization.Localization(__file__, 780, 59), groups_505295, *[], **kwargs_505296)
        
        comprehension_505298 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 40), groups_call_result_505297)
        # Assigning a type to the variable 'x' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 40), 'x', comprehension_505298)
        
        # Call to strip(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_505292 = {}
        # Getting the type of 'x' (line 780)
        x_505290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 40), 'x', False)
        # Obtaining the member 'strip' of a type (line 780)
        strip_505291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 40), x_505290, 'strip')
        # Calling strip(args, kwargs) (line 780)
        strip_call_result_505293 = invoke(stypy.reporting.localization.Localization(__file__, 780, 40), strip_505291, *[], **kwargs_505292)
        
        list_505299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 40), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 780, 40), list_505299, strip_call_result_505293)
        # Obtaining the member '__getitem__' of a type (line 780)
        getitem___505300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 12), list_505299, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 780)
        subscript_call_result_505301 = invoke(stypy.reporting.localization.Localization(__file__, 780, 12), getitem___505300, int_505289)
        
        # Assigning a type to the variable 'tuple_var_assignment_503906' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'tuple_var_assignment_503906', subscript_call_result_505301)
        
        # Assigning a Name to a Name (line 780):
        # Getting the type of 'tuple_var_assignment_503903' (line 780)
        tuple_var_assignment_503903_505302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'tuple_var_assignment_503903')
        # Assigning a type to the variable 'func' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'func', tuple_var_assignment_503903_505302)
        
        # Assigning a Name to a Name (line 780):
        # Getting the type of 'tuple_var_assignment_503904' (line 780)
        tuple_var_assignment_503904_505303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'tuple_var_assignment_503904')
        # Assigning a type to the variable 'inarg' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 18), 'inarg', tuple_var_assignment_503904_505303)
        
        # Assigning a Name to a Name (line 780):
        # Getting the type of 'tuple_var_assignment_503905' (line 780)
        tuple_var_assignment_503905_505304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'tuple_var_assignment_503905')
        # Assigning a type to the variable 'outarg' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 25), 'outarg', tuple_var_assignment_503905_505304)
        
        # Assigning a Name to a Name (line 780):
        # Getting the type of 'tuple_var_assignment_503906' (line 780)
        tuple_var_assignment_503906_505305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'tuple_var_assignment_503906')
        # Assigning a type to the variable 'ret' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 33), 'ret', tuple_var_assignment_503906_505305)
        
        
        
        # Call to count(...): (line 781)
        # Processing the call arguments (line 781)
        str_505308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 781, 25), 'str', '*')
        # Processing the call keyword arguments (line 781)
        kwargs_505309 = {}
        # Getting the type of 'ret' (line 781)
        ret_505306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 15), 'ret', False)
        # Obtaining the member 'count' of a type (line 781)
        count_505307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 15), ret_505306, 'count')
        # Calling count(args, kwargs) (line 781)
        count_call_result_505310 = invoke(stypy.reporting.localization.Localization(__file__, 781, 15), count_505307, *[str_505308], **kwargs_505309)
        
        int_505311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 781, 32), 'int')
        # Applying the binary operator '>' (line 781)
        result_gt_505312 = python_operator(stypy.reporting.localization.Localization(__file__, 781, 15), '>', count_call_result_505310, int_505311)
        
        # Testing the type of an if condition (line 781)
        if_condition_505313 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 781, 12), result_gt_505312)
        # Assigning a type to the variable 'if_condition_505313' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 12), 'if_condition_505313', if_condition_505313)
        # SSA begins for if statement (line 781)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 782)
        # Processing the call arguments (line 782)
        str_505315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 33), 'str', '%s: Invalid signature: %r')
        
        # Obtaining an instance of the builtin type 'tuple' (line 782)
        tuple_505316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 64), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 782)
        # Adding element type (line 782)
        # Getting the type of 'self' (line 782)
        self_505317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 64), 'self', False)
        # Obtaining the member 'name' of a type (line 782)
        name_505318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 64), self_505317, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 64), tuple_505316, name_505318)
        # Adding element type (line 782)
        # Getting the type of 'sig' (line 782)
        sig_505319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 75), 'sig', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 64), tuple_505316, sig_505319)
        
        # Applying the binary operator '%' (line 782)
        result_mod_505320 = python_operator(stypy.reporting.localization.Localization(__file__, 782, 33), '%', str_505315, tuple_505316)
        
        # Processing the call keyword arguments (line 782)
        kwargs_505321 = {}
        # Getting the type of 'ValueError' (line 782)
        ValueError_505314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 782)
        ValueError_call_result_505322 = invoke(stypy.reporting.localization.Localization(__file__, 782, 22), ValueError_505314, *[result_mod_505320], **kwargs_505321)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 782, 16), ValueError_call_result_505322, 'raise parameter', BaseException)
        # SSA join for if statement (line 781)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 783)
        tuple_505323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 783)
        # Adding element type (line 783)
        # Getting the type of 'func' (line 783)
        func_505324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 20), 'func')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 20), tuple_505323, func_505324)
        # Adding element type (line 783)
        # Getting the type of 'inarg' (line 783)
        inarg_505325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 26), 'inarg')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 20), tuple_505323, inarg_505325)
        # Adding element type (line 783)
        # Getting the type of 'outarg' (line 783)
        outarg_505326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 33), 'outarg')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 20), tuple_505323, outarg_505326)
        # Adding element type (line 783)
        # Getting the type of 'ret' (line 783)
        ret_505327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 41), 'ret')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 20), tuple_505323, ret_505327)
        
        # Assigning a type to the variable 'stypy_return_type' (line 783)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 783, 12), 'stypy_return_type', tuple_505323)
        # SSA join for if statement (line 779)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 784):
        
        # Assigning a Call to a Name (line 784):
        
        # Call to match(...): (line 784)
        # Processing the call arguments (line 784)
        str_505330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 21), 'str', '\\s*(.*):\\s*([fdgFDGil]*)\\s*->\\s*([fdgFDGil]?)\\s*$')
        # Getting the type of 'sig' (line 784)
        sig_505331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 75), 'sig', False)
        # Processing the call keyword arguments (line 784)
        kwargs_505332 = {}
        # Getting the type of 're' (line 784)
        re_505328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 12), 're', False)
        # Obtaining the member 'match' of a type (line 784)
        match_505329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 784, 12), re_505328, 'match')
        # Calling match(args, kwargs) (line 784)
        match_call_result_505333 = invoke(stypy.reporting.localization.Localization(__file__, 784, 12), match_505329, *[str_505330, sig_505331], **kwargs_505332)
        
        # Assigning a type to the variable 'm' (line 784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 784, 8), 'm', match_call_result_505333)
        
        # Getting the type of 'm' (line 785)
        m_505334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 11), 'm')
        # Testing the type of an if condition (line 785)
        if_condition_505335 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 785, 8), m_505334)
        # Assigning a type to the variable 'if_condition_505335' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'if_condition_505335', if_condition_505335)
        # SSA begins for if statement (line 785)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a ListComp to a Tuple (line 786):
        
        # Assigning a Subscript to a Name (line 786):
        
        # Obtaining the type of the subscript
        int_505336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to groups(...): (line 786)
        # Processing the call keyword arguments (line 786)
        kwargs_505343 = {}
        # Getting the type of 'm' (line 786)
        m_505341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 51), 'm', False)
        # Obtaining the member 'groups' of a type (line 786)
        groups_505342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 51), m_505341, 'groups')
        # Calling groups(args, kwargs) (line 786)
        groups_call_result_505344 = invoke(stypy.reporting.localization.Localization(__file__, 786, 51), groups_505342, *[], **kwargs_505343)
        
        comprehension_505345 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 32), groups_call_result_505344)
        # Assigning a type to the variable 'x' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 32), 'x', comprehension_505345)
        
        # Call to strip(...): (line 786)
        # Processing the call keyword arguments (line 786)
        kwargs_505339 = {}
        # Getting the type of 'x' (line 786)
        x_505337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 32), 'x', False)
        # Obtaining the member 'strip' of a type (line 786)
        strip_505338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 32), x_505337, 'strip')
        # Calling strip(args, kwargs) (line 786)
        strip_call_result_505340 = invoke(stypy.reporting.localization.Localization(__file__, 786, 32), strip_505338, *[], **kwargs_505339)
        
        list_505346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 32), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 32), list_505346, strip_call_result_505340)
        # Obtaining the member '__getitem__' of a type (line 786)
        getitem___505347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 12), list_505346, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 786)
        subscript_call_result_505348 = invoke(stypy.reporting.localization.Localization(__file__, 786, 12), getitem___505347, int_505336)
        
        # Assigning a type to the variable 'tuple_var_assignment_503907' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'tuple_var_assignment_503907', subscript_call_result_505348)
        
        # Assigning a Subscript to a Name (line 786):
        
        # Obtaining the type of the subscript
        int_505349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to groups(...): (line 786)
        # Processing the call keyword arguments (line 786)
        kwargs_505356 = {}
        # Getting the type of 'm' (line 786)
        m_505354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 51), 'm', False)
        # Obtaining the member 'groups' of a type (line 786)
        groups_505355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 51), m_505354, 'groups')
        # Calling groups(args, kwargs) (line 786)
        groups_call_result_505357 = invoke(stypy.reporting.localization.Localization(__file__, 786, 51), groups_505355, *[], **kwargs_505356)
        
        comprehension_505358 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 32), groups_call_result_505357)
        # Assigning a type to the variable 'x' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 32), 'x', comprehension_505358)
        
        # Call to strip(...): (line 786)
        # Processing the call keyword arguments (line 786)
        kwargs_505352 = {}
        # Getting the type of 'x' (line 786)
        x_505350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 32), 'x', False)
        # Obtaining the member 'strip' of a type (line 786)
        strip_505351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 32), x_505350, 'strip')
        # Calling strip(args, kwargs) (line 786)
        strip_call_result_505353 = invoke(stypy.reporting.localization.Localization(__file__, 786, 32), strip_505351, *[], **kwargs_505352)
        
        list_505359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 32), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 32), list_505359, strip_call_result_505353)
        # Obtaining the member '__getitem__' of a type (line 786)
        getitem___505360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 12), list_505359, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 786)
        subscript_call_result_505361 = invoke(stypy.reporting.localization.Localization(__file__, 786, 12), getitem___505360, int_505349)
        
        # Assigning a type to the variable 'tuple_var_assignment_503908' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'tuple_var_assignment_503908', subscript_call_result_505361)
        
        # Assigning a Subscript to a Name (line 786):
        
        # Obtaining the type of the subscript
        int_505362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 12), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to groups(...): (line 786)
        # Processing the call keyword arguments (line 786)
        kwargs_505369 = {}
        # Getting the type of 'm' (line 786)
        m_505367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 51), 'm', False)
        # Obtaining the member 'groups' of a type (line 786)
        groups_505368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 51), m_505367, 'groups')
        # Calling groups(args, kwargs) (line 786)
        groups_call_result_505370 = invoke(stypy.reporting.localization.Localization(__file__, 786, 51), groups_505368, *[], **kwargs_505369)
        
        comprehension_505371 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 32), groups_call_result_505370)
        # Assigning a type to the variable 'x' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 32), 'x', comprehension_505371)
        
        # Call to strip(...): (line 786)
        # Processing the call keyword arguments (line 786)
        kwargs_505365 = {}
        # Getting the type of 'x' (line 786)
        x_505363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 32), 'x', False)
        # Obtaining the member 'strip' of a type (line 786)
        strip_505364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 32), x_505363, 'strip')
        # Calling strip(args, kwargs) (line 786)
        strip_call_result_505366 = invoke(stypy.reporting.localization.Localization(__file__, 786, 32), strip_505364, *[], **kwargs_505365)
        
        list_505372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 32), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 32), list_505372, strip_call_result_505366)
        # Obtaining the member '__getitem__' of a type (line 786)
        getitem___505373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 12), list_505372, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 786)
        subscript_call_result_505374 = invoke(stypy.reporting.localization.Localization(__file__, 786, 12), getitem___505373, int_505362)
        
        # Assigning a type to the variable 'tuple_var_assignment_503909' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'tuple_var_assignment_503909', subscript_call_result_505374)
        
        # Assigning a Name to a Name (line 786):
        # Getting the type of 'tuple_var_assignment_503907' (line 786)
        tuple_var_assignment_503907_505375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'tuple_var_assignment_503907')
        # Assigning a type to the variable 'func' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'func', tuple_var_assignment_503907_505375)
        
        # Assigning a Name to a Name (line 786):
        # Getting the type of 'tuple_var_assignment_503908' (line 786)
        tuple_var_assignment_503908_505376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'tuple_var_assignment_503908')
        # Assigning a type to the variable 'inarg' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 18), 'inarg', tuple_var_assignment_503908_505376)
        
        # Assigning a Name to a Name (line 786):
        # Getting the type of 'tuple_var_assignment_503909' (line 786)
        tuple_var_assignment_503909_505377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'tuple_var_assignment_503909')
        # Assigning a type to the variable 'ret' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 25), 'ret', tuple_var_assignment_503909_505377)
        
        # Obtaining an instance of the builtin type 'tuple' (line 787)
        tuple_505378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 20), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 787)
        # Adding element type (line 787)
        # Getting the type of 'func' (line 787)
        func_505379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 20), 'func')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 20), tuple_505378, func_505379)
        # Adding element type (line 787)
        # Getting the type of 'inarg' (line 787)
        inarg_505380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 26), 'inarg')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 20), tuple_505378, inarg_505380)
        # Adding element type (line 787)
        str_505381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 33), 'str', '')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 20), tuple_505378, str_505381)
        # Adding element type (line 787)
        # Getting the type of 'ret' (line 787)
        ret_505382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 37), 'ret')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 20), tuple_505378, ret_505382)
        
        # Assigning a type to the variable 'stypy_return_type' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 12), 'stypy_return_type', tuple_505378)
        # SSA join for if statement (line 785)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to ValueError(...): (line 788)
        # Processing the call arguments (line 788)
        str_505384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 25), 'str', '%s: Invalid signature: %r')
        
        # Obtaining an instance of the builtin type 'tuple' (line 788)
        tuple_505385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 788)
        # Adding element type (line 788)
        # Getting the type of 'self' (line 788)
        self_505386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 56), 'self', False)
        # Obtaining the member 'name' of a type (line 788)
        name_505387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 56), self_505386, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 788, 56), tuple_505385, name_505387)
        # Adding element type (line 788)
        # Getting the type of 'sig' (line 788)
        sig_505388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 67), 'sig', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 788, 56), tuple_505385, sig_505388)
        
        # Applying the binary operator '%' (line 788)
        result_mod_505389 = python_operator(stypy.reporting.localization.Localization(__file__, 788, 25), '%', str_505384, tuple_505385)
        
        # Processing the call keyword arguments (line 788)
        kwargs_505390 = {}
        # Getting the type of 'ValueError' (line 788)
        ValueError_505383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 14), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 788)
        ValueError_call_result_505391 = invoke(stypy.reporting.localization.Localization(__file__, 788, 14), ValueError_505383, *[result_mod_505389], **kwargs_505390)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 788, 8), ValueError_call_result_505391, 'raise parameter', BaseException)
        
        # ################# End of '_parse_signature(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_parse_signature' in the type store
        # Getting the type of 'stypy_return_type' (line 777)
        stypy_return_type_505392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_505392)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_parse_signature'
        return stypy_return_type_505392


    @norecursion
    def get_prototypes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 790)
        False_505393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 43), 'False')
        defaults = [False_505393]
        # Create a new context for function 'get_prototypes'
        module_type_store = module_type_store.open_function_context('get_prototypes', 790, 4, False)
        # Assigning a type to the variable 'self' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Func.get_prototypes.__dict__.__setitem__('stypy_localization', localization)
        Func.get_prototypes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Func.get_prototypes.__dict__.__setitem__('stypy_type_store', module_type_store)
        Func.get_prototypes.__dict__.__setitem__('stypy_function_name', 'Func.get_prototypes')
        Func.get_prototypes.__dict__.__setitem__('stypy_param_names_list', ['nptypes_for_h'])
        Func.get_prototypes.__dict__.__setitem__('stypy_varargs_param_name', None)
        Func.get_prototypes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Func.get_prototypes.__dict__.__setitem__('stypy_call_defaults', defaults)
        Func.get_prototypes.__dict__.__setitem__('stypy_call_varargs', varargs)
        Func.get_prototypes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Func.get_prototypes.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Func.get_prototypes', ['nptypes_for_h'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_prototypes', localization, ['nptypes_for_h'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_prototypes(...)' code ##################

        
        # Assigning a List to a Name (line 791):
        
        # Assigning a List to a Name (line 791):
        
        # Obtaining an instance of the builtin type 'list' (line 791)
        list_505394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 791)
        
        # Assigning a type to the variable 'prototypes' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 8), 'prototypes', list_505394)
        
        # Getting the type of 'self' (line 792)
        self_505395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 53), 'self')
        # Obtaining the member 'signatures' of a type (line 792)
        signatures_505396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 792, 53), self_505395, 'signatures')
        # Testing the type of a for loop iterable (line 792)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 792, 8), signatures_505396)
        # Getting the type of the for loop variable (line 792)
        for_loop_var_505397 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 792, 8), signatures_505396)
        # Assigning a type to the variable 'func_name' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'func_name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 8), for_loop_var_505397))
        # Assigning a type to the variable 'inarg' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'inarg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 8), for_loop_var_505397))
        # Assigning a type to the variable 'outarg' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'outarg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 8), for_loop_var_505397))
        # Assigning a type to the variable 'ret' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'ret', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 8), for_loop_var_505397))
        # Assigning a type to the variable 'header' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'header', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 8), for_loop_var_505397))
        # SSA begins for a for statement (line 792)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 793):
        
        # Assigning a Call to a Name (line 793):
        
        # Call to replace(...): (line 793)
        # Processing the call arguments (line 793)
        str_505400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 30), 'str', '*')
        str_505401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 35), 'str', '')
        # Processing the call keyword arguments (line 793)
        kwargs_505402 = {}
        # Getting the type of 'ret' (line 793)
        ret_505398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 18), 'ret', False)
        # Obtaining the member 'replace' of a type (line 793)
        replace_505399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 18), ret_505398, 'replace')
        # Calling replace(args, kwargs) (line 793)
        replace_call_result_505403 = invoke(stypy.reporting.localization.Localization(__file__, 793, 18), replace_505399, *[str_505400, str_505401], **kwargs_505402)
        
        # Assigning a type to the variable 'ret' (line 793)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 12), 'ret', replace_call_result_505403)
        
        # Assigning a BinOp to a Name (line 794):
        
        # Assigning a BinOp to a Name (line 794):
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'inarg' (line 794)
        inarg_505408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 43), 'inarg')
        comprehension_505409 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 23), inarg_505408)
        # Assigning a type to the variable 'x' (line 794)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 23), 'x', comprehension_505409)
        
        # Obtaining the type of the subscript
        # Getting the type of 'x' (line 794)
        x_505404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 31), 'x')
        # Getting the type of 'C_TYPES' (line 794)
        C_TYPES_505405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 23), 'C_TYPES')
        # Obtaining the member '__getitem__' of a type (line 794)
        getitem___505406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 23), C_TYPES_505405, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 794)
        subscript_call_result_505407 = invoke(stypy.reporting.localization.Localization(__file__, 794, 23), getitem___505406, x_505404)
        
        list_505410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 23), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 794, 23), list_505410, subscript_call_result_505407)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'outarg' (line 795)
        outarg_505417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 52), 'outarg')
        comprehension_505418 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 795, 25), outarg_505417)
        # Assigning a type to the variable 'x' (line 795)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 25), 'x', comprehension_505418)
        
        # Obtaining the type of the subscript
        # Getting the type of 'x' (line 795)
        x_505411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 33), 'x')
        # Getting the type of 'C_TYPES' (line 795)
        C_TYPES_505412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 25), 'C_TYPES')
        # Obtaining the member '__getitem__' of a type (line 795)
        getitem___505413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 25), C_TYPES_505412, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 795)
        subscript_call_result_505414 = invoke(stypy.reporting.localization.Localization(__file__, 795, 25), getitem___505413, x_505411)
        
        str_505415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 38), 'str', ' *')
        # Applying the binary operator '+' (line 795)
        result_add_505416 = python_operator(stypy.reporting.localization.Localization(__file__, 795, 25), '+', subscript_call_result_505414, str_505415)
        
        list_505419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 25), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 795, 25), list_505419, result_add_505416)
        # Applying the binary operator '+' (line 794)
        result_add_505420 = python_operator(stypy.reporting.localization.Localization(__file__, 794, 22), '+', list_505410, list_505419)
        
        # Assigning a type to the variable 'c_args' (line 794)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 12), 'c_args', result_add_505420)
        
        # Assigning a BinOp to a Name (line 796):
        
        # Assigning a BinOp to a Name (line 796):
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'inarg' (line 796)
        inarg_505425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 45), 'inarg')
        comprehension_505426 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 796, 24), inarg_505425)
        # Assigning a type to the variable 'x' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 24), 'x', comprehension_505426)
        
        # Obtaining the type of the subscript
        # Getting the type of 'x' (line 796)
        x_505421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 33), 'x')
        # Getting the type of 'CY_TYPES' (line 796)
        CY_TYPES_505422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 24), 'CY_TYPES')
        # Obtaining the member '__getitem__' of a type (line 796)
        getitem___505423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 24), CY_TYPES_505422, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 796)
        subscript_call_result_505424 = invoke(stypy.reporting.localization.Localization(__file__, 796, 24), getitem___505423, x_505421)
        
        list_505427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 796, 24), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 796, 24), list_505427, subscript_call_result_505424)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'outarg' (line 797)
        outarg_505434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 54), 'outarg')
        comprehension_505435 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 797, 26), outarg_505434)
        # Assigning a type to the variable 'x' (line 797)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 26), 'x', comprehension_505435)
        
        # Obtaining the type of the subscript
        # Getting the type of 'x' (line 797)
        x_505428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 35), 'x')
        # Getting the type of 'CY_TYPES' (line 797)
        CY_TYPES_505429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 26), 'CY_TYPES')
        # Obtaining the member '__getitem__' of a type (line 797)
        getitem___505430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 26), CY_TYPES_505429, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 797)
        subscript_call_result_505431 = invoke(stypy.reporting.localization.Localization(__file__, 797, 26), getitem___505430, x_505428)
        
        str_505432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 797, 40), 'str', ' *')
        # Applying the binary operator '+' (line 797)
        result_add_505433 = python_operator(stypy.reporting.localization.Localization(__file__, 797, 26), '+', subscript_call_result_505431, str_505432)
        
        list_505436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 797, 26), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 797, 26), list_505436, result_add_505433)
        # Applying the binary operator '+' (line 796)
        result_add_505437 = python_operator(stypy.reporting.localization.Localization(__file__, 796, 23), '+', list_505427, list_505436)
        
        # Assigning a type to the variable 'cy_args' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 12), 'cy_args', result_add_505437)
        
        # Assigning a BinOp to a Name (line 798):
        
        # Assigning a BinOp to a Name (line 798):
        str_505438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 22), 'str', '%s (*)(%s)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 798)
        tuple_505439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 798)
        # Adding element type (line 798)
        
        # Obtaining the type of the subscript
        # Getting the type of 'ret' (line 798)
        ret_505440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 46), 'ret')
        # Getting the type of 'C_TYPES' (line 798)
        C_TYPES_505441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 38), 'C_TYPES')
        # Obtaining the member '__getitem__' of a type (line 798)
        getitem___505442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 38), C_TYPES_505441, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 798)
        subscript_call_result_505443 = invoke(stypy.reporting.localization.Localization(__file__, 798, 38), getitem___505442, ret_505440)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 798, 38), tuple_505439, subscript_call_result_505443)
        # Adding element type (line 798)
        
        # Call to join(...): (line 798)
        # Processing the call arguments (line 798)
        # Getting the type of 'c_args' (line 798)
        c_args_505446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 62), 'c_args', False)
        # Processing the call keyword arguments (line 798)
        kwargs_505447 = {}
        str_505444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 52), 'str', ', ')
        # Obtaining the member 'join' of a type (line 798)
        join_505445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 52), str_505444, 'join')
        # Calling join(args, kwargs) (line 798)
        join_call_result_505448 = invoke(stypy.reporting.localization.Localization(__file__, 798, 52), join_505445, *[c_args_505446], **kwargs_505447)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 798, 38), tuple_505439, join_call_result_505448)
        
        # Applying the binary operator '%' (line 798)
        result_mod_505449 = python_operator(stypy.reporting.localization.Localization(__file__, 798, 22), '%', str_505438, tuple_505439)
        
        # Assigning a type to the variable 'c_proto' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 12), 'c_proto', result_mod_505449)
        
        
        # Evaluating a boolean operation
        
        # Call to endswith(...): (line 799)
        # Processing the call arguments (line 799)
        str_505452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 799, 31), 'str', 'h')
        # Processing the call keyword arguments (line 799)
        kwargs_505453 = {}
        # Getting the type of 'header' (line 799)
        header_505450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 15), 'header', False)
        # Obtaining the member 'endswith' of a type (line 799)
        endswith_505451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 799, 15), header_505450, 'endswith')
        # Calling endswith(args, kwargs) (line 799)
        endswith_call_result_505454 = invoke(stypy.reporting.localization.Localization(__file__, 799, 15), endswith_505451, *[str_505452], **kwargs_505453)
        
        # Getting the type of 'nptypes_for_h' (line 799)
        nptypes_for_h_505455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 40), 'nptypes_for_h')
        # Applying the binary operator 'and' (line 799)
        result_and_keyword_505456 = python_operator(stypy.reporting.localization.Localization(__file__, 799, 15), 'and', endswith_call_result_505454, nptypes_for_h_505455)
        
        # Testing the type of an if condition (line 799)
        if_condition_505457 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 799, 12), result_and_keyword_505456)
        # Assigning a type to the variable 'if_condition_505457' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 12), 'if_condition_505457', if_condition_505457)
        # SSA begins for if statement (line 799)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 800):
        
        # Assigning a BinOp to a Name (line 800):
        # Getting the type of 'c_proto' (line 800)
        c_proto_505458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 27), 'c_proto')
        str_505459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 800, 37), 'str', 'nogil')
        # Applying the binary operator '+' (line 800)
        result_add_505460 = python_operator(stypy.reporting.localization.Localization(__file__, 800, 27), '+', c_proto_505458, str_505459)
        
        # Assigning a type to the variable 'cy_proto' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 16), 'cy_proto', result_add_505460)
        # SSA branch for the else part of an if statement (line 799)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 802):
        
        # Assigning a BinOp to a Name (line 802):
        str_505461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 27), 'str', '%s (*)(%s) nogil')
        
        # Obtaining an instance of the builtin type 'tuple' (line 802)
        tuple_505462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 802)
        # Adding element type (line 802)
        
        # Obtaining the type of the subscript
        # Getting the type of 'ret' (line 802)
        ret_505463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 58), 'ret')
        # Getting the type of 'CY_TYPES' (line 802)
        CY_TYPES_505464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 49), 'CY_TYPES')
        # Obtaining the member '__getitem__' of a type (line 802)
        getitem___505465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 49), CY_TYPES_505464, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 802)
        subscript_call_result_505466 = invoke(stypy.reporting.localization.Localization(__file__, 802, 49), getitem___505465, ret_505463)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 49), tuple_505462, subscript_call_result_505466)
        # Adding element type (line 802)
        
        # Call to join(...): (line 802)
        # Processing the call arguments (line 802)
        # Getting the type of 'cy_args' (line 802)
        cy_args_505469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 74), 'cy_args', False)
        # Processing the call keyword arguments (line 802)
        kwargs_505470 = {}
        str_505467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 64), 'str', ', ')
        # Obtaining the member 'join' of a type (line 802)
        join_505468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 64), str_505467, 'join')
        # Calling join(args, kwargs) (line 802)
        join_call_result_505471 = invoke(stypy.reporting.localization.Localization(__file__, 802, 64), join_505468, *[cy_args_505469], **kwargs_505470)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 49), tuple_505462, join_call_result_505471)
        
        # Applying the binary operator '%' (line 802)
        result_mod_505472 = python_operator(stypy.reporting.localization.Localization(__file__, 802, 27), '%', str_505461, tuple_505462)
        
        # Assigning a type to the variable 'cy_proto' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 16), 'cy_proto', result_mod_505472)
        # SSA join for if statement (line 799)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to append(...): (line 803)
        # Processing the call arguments (line 803)
        
        # Obtaining an instance of the builtin type 'tuple' (line 803)
        tuple_505475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 803)
        # Adding element type (line 803)
        # Getting the type of 'func_name' (line 803)
        func_name_505476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 31), 'func_name', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 31), tuple_505475, func_name_505476)
        # Adding element type (line 803)
        # Getting the type of 'c_proto' (line 803)
        c_proto_505477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 42), 'c_proto', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 31), tuple_505475, c_proto_505477)
        # Adding element type (line 803)
        # Getting the type of 'cy_proto' (line 803)
        cy_proto_505478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 51), 'cy_proto', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 31), tuple_505475, cy_proto_505478)
        # Adding element type (line 803)
        # Getting the type of 'header' (line 803)
        header_505479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 61), 'header', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 803, 31), tuple_505475, header_505479)
        
        # Processing the call keyword arguments (line 803)
        kwargs_505480 = {}
        # Getting the type of 'prototypes' (line 803)
        prototypes_505473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 12), 'prototypes', False)
        # Obtaining the member 'append' of a type (line 803)
        append_505474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 803, 12), prototypes_505473, 'append')
        # Calling append(args, kwargs) (line 803)
        append_call_result_505481 = invoke(stypy.reporting.localization.Localization(__file__, 803, 12), append_505474, *[tuple_505475], **kwargs_505480)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'prototypes' (line 804)
        prototypes_505482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 15), 'prototypes')
        # Assigning a type to the variable 'stypy_return_type' (line 804)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 8), 'stypy_return_type', prototypes_505482)
        
        # ################# End of 'get_prototypes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_prototypes' in the type store
        # Getting the type of 'stypy_return_type' (line 790)
        stypy_return_type_505483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_505483)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_prototypes'
        return stypy_return_type_505483


    @norecursion
    def cython_func_name(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 806)
        False_505484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 51), 'False')
        str_505485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 65), 'str', '_func_')
        # Getting the type of 'True' (line 807)
        True_505486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 34), 'True')
        defaults = [False_505484, str_505485, True_505486]
        # Create a new context for function 'cython_func_name'
        module_type_store = module_type_store.open_function_context('cython_func_name', 806, 4, False)
        # Assigning a type to the variable 'self' (line 807)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 807, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Func.cython_func_name.__dict__.__setitem__('stypy_localization', localization)
        Func.cython_func_name.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Func.cython_func_name.__dict__.__setitem__('stypy_type_store', module_type_store)
        Func.cython_func_name.__dict__.__setitem__('stypy_function_name', 'Func.cython_func_name')
        Func.cython_func_name.__dict__.__setitem__('stypy_param_names_list', ['c_name', 'specialized', 'prefix', 'override'])
        Func.cython_func_name.__dict__.__setitem__('stypy_varargs_param_name', None)
        Func.cython_func_name.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Func.cython_func_name.__dict__.__setitem__('stypy_call_defaults', defaults)
        Func.cython_func_name.__dict__.__setitem__('stypy_call_varargs', varargs)
        Func.cython_func_name.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Func.cython_func_name.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Func.cython_func_name', ['c_name', 'specialized', 'prefix', 'override'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'cython_func_name', localization, ['c_name', 'specialized', 'prefix', 'override'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'cython_func_name(...)' code ##################

        
        
        # Evaluating a boolean operation
        # Getting the type of 'override' (line 809)
        override_505487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 11), 'override')
        
        # Getting the type of 'c_name' (line 809)
        c_name_505488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 24), 'c_name')
        # Getting the type of 'self' (line 809)
        self_505489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 34), 'self')
        # Obtaining the member 'function_name_overrides' of a type (line 809)
        function_name_overrides_505490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 34), self_505489, 'function_name_overrides')
        # Applying the binary operator 'in' (line 809)
        result_contains_505491 = python_operator(stypy.reporting.localization.Localization(__file__, 809, 24), 'in', c_name_505488, function_name_overrides_505490)
        
        # Applying the binary operator 'and' (line 809)
        result_and_keyword_505492 = python_operator(stypy.reporting.localization.Localization(__file__, 809, 11), 'and', override_505487, result_contains_505491)
        
        # Testing the type of an if condition (line 809)
        if_condition_505493 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 809, 8), result_and_keyword_505492)
        # Assigning a type to the variable 'if_condition_505493' (line 809)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 8), 'if_condition_505493', if_condition_505493)
        # SSA begins for if statement (line 809)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 810):
        
        # Assigning a Subscript to a Name (line 810):
        
        # Obtaining the type of the subscript
        # Getting the type of 'c_name' (line 810)
        c_name_505494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 50), 'c_name')
        # Getting the type of 'self' (line 810)
        self_505495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 21), 'self')
        # Obtaining the member 'function_name_overrides' of a type (line 810)
        function_name_overrides_505496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 21), self_505495, 'function_name_overrides')
        # Obtaining the member '__getitem__' of a type (line 810)
        getitem___505497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 21), function_name_overrides_505496, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 810)
        subscript_call_result_505498 = invoke(stypy.reporting.localization.Localization(__file__, 810, 21), getitem___505497, c_name_505494)
        
        # Assigning a type to the variable 'c_name' (line 810)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 12), 'c_name', subscript_call_result_505498)
        
        # Assigning a Str to a Name (line 811):
        
        # Assigning a Str to a Name (line 811):
        str_505499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 21), 'str', '')
        # Assigning a type to the variable 'prefix' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 12), 'prefix', str_505499)
        # SSA join for if statement (line 809)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 814):
        
        # Assigning a Call to a Name (line 814):
        
        # Call to match(...): (line 814)
        # Processing the call arguments (line 814)
        str_505502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 21), 'str', '^(.*?)(\\[.*\\])$')
        # Getting the type of 'c_name' (line 814)
        c_name_505503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 41), 'c_name', False)
        # Processing the call keyword arguments (line 814)
        kwargs_505504 = {}
        # Getting the type of 're' (line 814)
        re_505500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 12), 're', False)
        # Obtaining the member 'match' of a type (line 814)
        match_505501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 814, 12), re_505500, 'match')
        # Calling match(args, kwargs) (line 814)
        match_call_result_505505 = invoke(stypy.reporting.localization.Localization(__file__, 814, 12), match_505501, *[str_505502, c_name_505503], **kwargs_505504)
        
        # Assigning a type to the variable 'm' (line 814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 814, 8), 'm', match_call_result_505505)
        
        # Getting the type of 'm' (line 815)
        m_505506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 11), 'm')
        # Testing the type of an if condition (line 815)
        if_condition_505507 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 815, 8), m_505506)
        # Assigning a type to the variable 'if_condition_505507' (line 815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 8), 'if_condition_505507', if_condition_505507)
        # SSA begins for if statement (line 815)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 816):
        
        # Assigning a Subscript to a Name (line 816):
        
        # Obtaining the type of the subscript
        int_505508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 12), 'int')
        
        # Call to groups(...): (line 816)
        # Processing the call keyword arguments (line 816)
        kwargs_505511 = {}
        # Getting the type of 'm' (line 816)
        m_505509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 38), 'm', False)
        # Obtaining the member 'groups' of a type (line 816)
        groups_505510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 38), m_505509, 'groups')
        # Calling groups(args, kwargs) (line 816)
        groups_call_result_505512 = invoke(stypy.reporting.localization.Localization(__file__, 816, 38), groups_505510, *[], **kwargs_505511)
        
        # Obtaining the member '__getitem__' of a type (line 816)
        getitem___505513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 12), groups_call_result_505512, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 816)
        subscript_call_result_505514 = invoke(stypy.reporting.localization.Localization(__file__, 816, 12), getitem___505513, int_505508)
        
        # Assigning a type to the variable 'tuple_var_assignment_503910' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'tuple_var_assignment_503910', subscript_call_result_505514)
        
        # Assigning a Subscript to a Name (line 816):
        
        # Obtaining the type of the subscript
        int_505515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 12), 'int')
        
        # Call to groups(...): (line 816)
        # Processing the call keyword arguments (line 816)
        kwargs_505518 = {}
        # Getting the type of 'm' (line 816)
        m_505516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 38), 'm', False)
        # Obtaining the member 'groups' of a type (line 816)
        groups_505517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 38), m_505516, 'groups')
        # Calling groups(args, kwargs) (line 816)
        groups_call_result_505519 = invoke(stypy.reporting.localization.Localization(__file__, 816, 38), groups_505517, *[], **kwargs_505518)
        
        # Obtaining the member '__getitem__' of a type (line 816)
        getitem___505520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 12), groups_call_result_505519, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 816)
        subscript_call_result_505521 = invoke(stypy.reporting.localization.Localization(__file__, 816, 12), getitem___505520, int_505515)
        
        # Assigning a type to the variable 'tuple_var_assignment_503911' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'tuple_var_assignment_503911', subscript_call_result_505521)
        
        # Assigning a Name to a Name (line 816):
        # Getting the type of 'tuple_var_assignment_503910' (line 816)
        tuple_var_assignment_503910_505522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'tuple_var_assignment_503910')
        # Assigning a type to the variable 'c_base_name' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'c_base_name', tuple_var_assignment_503910_505522)
        
        # Assigning a Name to a Name (line 816):
        # Getting the type of 'tuple_var_assignment_503911' (line 816)
        tuple_var_assignment_503911_505523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'tuple_var_assignment_503911')
        # Assigning a type to the variable 'fused_part' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 25), 'fused_part', tuple_var_assignment_503911_505523)
        # SSA branch for the else part of an if statement (line 815)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Tuple to a Tuple (line 818):
        
        # Assigning a Name to a Name (line 818):
        # Getting the type of 'c_name' (line 818)
        c_name_505524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 38), 'c_name')
        # Assigning a type to the variable 'tuple_assignment_503912' (line 818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 12), 'tuple_assignment_503912', c_name_505524)
        
        # Assigning a Str to a Name (line 818):
        str_505525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 46), 'str', '')
        # Assigning a type to the variable 'tuple_assignment_503913' (line 818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 12), 'tuple_assignment_503913', str_505525)
        
        # Assigning a Name to a Name (line 818):
        # Getting the type of 'tuple_assignment_503912' (line 818)
        tuple_assignment_503912_505526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 12), 'tuple_assignment_503912')
        # Assigning a type to the variable 'c_base_name' (line 818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 12), 'c_base_name', tuple_assignment_503912_505526)
        
        # Assigning a Name to a Name (line 818):
        # Getting the type of 'tuple_assignment_503913' (line 818)
        tuple_assignment_503913_505527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 12), 'tuple_assignment_503913')
        # Assigning a type to the variable 'fused_part' (line 818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 25), 'fused_part', tuple_assignment_503913_505527)
        # SSA join for if statement (line 815)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'specialized' (line 819)
        specialized_505528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 11), 'specialized')
        # Testing the type of an if condition (line 819)
        if_condition_505529 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 819, 8), specialized_505528)
        # Assigning a type to the variable 'if_condition_505529' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 8), 'if_condition_505529', if_condition_505529)
        # SSA begins for if statement (line 819)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        str_505530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 19), 'str', '%s%s%s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 820)
        tuple_505531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 820)
        # Adding element type (line 820)
        # Getting the type of 'prefix' (line 820)
        prefix_505532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 31), 'prefix')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 820, 31), tuple_505531, prefix_505532)
        # Adding element type (line 820)
        # Getting the type of 'c_base_name' (line 820)
        c_base_name_505533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 39), 'c_base_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 820, 31), tuple_505531, c_base_name_505533)
        # Adding element type (line 820)
        
        # Call to replace(...): (line 820)
        # Processing the call arguments (line 820)
        str_505536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 71), 'str', ' ')
        str_505537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 76), 'str', '_')
        # Processing the call keyword arguments (line 820)
        kwargs_505538 = {}
        # Getting the type of 'fused_part' (line 820)
        fused_part_505534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 52), 'fused_part', False)
        # Obtaining the member 'replace' of a type (line 820)
        replace_505535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 52), fused_part_505534, 'replace')
        # Calling replace(args, kwargs) (line 820)
        replace_call_result_505539 = invoke(stypy.reporting.localization.Localization(__file__, 820, 52), replace_505535, *[str_505536, str_505537], **kwargs_505538)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 820, 31), tuple_505531, replace_call_result_505539)
        
        # Applying the binary operator '%' (line 820)
        result_mod_505540 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 19), '%', str_505530, tuple_505531)
        
        # Assigning a type to the variable 'stypy_return_type' (line 820)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 12), 'stypy_return_type', result_mod_505540)
        # SSA branch for the else part of an if statement (line 819)
        module_type_store.open_ssa_branch('else')
        str_505541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 822, 19), 'str', '%s%s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 822)
        tuple_505542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 822, 29), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 822)
        # Adding element type (line 822)
        # Getting the type of 'prefix' (line 822)
        prefix_505543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 29), 'prefix')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 822, 29), tuple_505542, prefix_505543)
        # Adding element type (line 822)
        # Getting the type of 'c_base_name' (line 822)
        c_base_name_505544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 37), 'c_base_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 822, 29), tuple_505542, c_base_name_505544)
        
        # Applying the binary operator '%' (line 822)
        result_mod_505545 = python_operator(stypy.reporting.localization.Localization(__file__, 822, 19), '%', str_505541, tuple_505542)
        
        # Assigning a type to the variable 'stypy_return_type' (line 822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 822, 12), 'stypy_return_type', result_mod_505545)
        # SSA join for if statement (line 819)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'cython_func_name(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'cython_func_name' in the type store
        # Getting the type of 'stypy_return_type' (line 806)
        stypy_return_type_505546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_505546)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'cython_func_name'
        return stypy_return_type_505546


    @norecursion
    def parse_all(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'parse_all'
        module_type_store = module_type_store.open_function_context('parse_all', 824, 4, False)
        # Assigning a type to the variable 'self' (line 825)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 825, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Func.parse_all.__dict__.__setitem__('stypy_localization', localization)
        Func.parse_all.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Func.parse_all.__dict__.__setitem__('stypy_type_store', module_type_store)
        Func.parse_all.__dict__.__setitem__('stypy_function_name', 'Func.parse_all')
        Func.parse_all.__dict__.__setitem__('stypy_param_names_list', ['ufunc_str'])
        Func.parse_all.__dict__.__setitem__('stypy_varargs_param_name', None)
        Func.parse_all.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Func.parse_all.__dict__.__setitem__('stypy_call_defaults', defaults)
        Func.parse_all.__dict__.__setitem__('stypy_call_varargs', varargs)
        Func.parse_all.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Func.parse_all.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Func.parse_all', ['ufunc_str'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'parse_all', localization, ['ufunc_str'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'parse_all(...)' code ##################

        
        # Assigning a List to a Name (line 826):
        
        # Assigning a List to a Name (line 826):
        
        # Obtaining an instance of the builtin type 'list' (line 826)
        list_505547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 826)
        
        # Assigning a type to the variable 'ufuncs' (line 826)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 8), 'ufuncs', list_505547)
        
        # Assigning a Call to a Name (line 828):
        
        # Assigning a Call to a Name (line 828):
        
        # Call to splitlines(...): (line 828)
        # Processing the call keyword arguments (line 828)
        kwargs_505550 = {}
        # Getting the type of 'ufunc_str' (line 828)
        ufunc_str_505548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 16), 'ufunc_str', False)
        # Obtaining the member 'splitlines' of a type (line 828)
        splitlines_505549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 16), ufunc_str_505548, 'splitlines')
        # Calling splitlines(args, kwargs) (line 828)
        splitlines_call_result_505551 = invoke(stypy.reporting.localization.Localization(__file__, 828, 16), splitlines_505549, *[], **kwargs_505550)
        
        # Assigning a type to the variable 'lines' (line 828)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 8), 'lines', splitlines_call_result_505551)
        
        # Call to sort(...): (line 829)
        # Processing the call keyword arguments (line 829)
        kwargs_505554 = {}
        # Getting the type of 'lines' (line 829)
        lines_505552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 8), 'lines', False)
        # Obtaining the member 'sort' of a type (line 829)
        sort_505553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 8), lines_505552, 'sort')
        # Calling sort(args, kwargs) (line 829)
        sort_call_result_505555 = invoke(stypy.reporting.localization.Localization(__file__, 829, 8), sort_505553, *[], **kwargs_505554)
        
        
        # Getting the type of 'lines' (line 831)
        lines_505556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 20), 'lines')
        # Testing the type of a for loop iterable (line 831)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 831, 8), lines_505556)
        # Getting the type of the for loop variable (line 831)
        for_loop_var_505557 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 831, 8), lines_505556)
        # Assigning a type to the variable 'line' (line 831)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 8), 'line', for_loop_var_505557)
        # SSA begins for a for statement (line 831)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 832):
        
        # Assigning a Call to a Name (line 832):
        
        # Call to strip(...): (line 832)
        # Processing the call keyword arguments (line 832)
        kwargs_505560 = {}
        # Getting the type of 'line' (line 832)
        line_505558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 19), 'line', False)
        # Obtaining the member 'strip' of a type (line 832)
        strip_505559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 19), line_505558, 'strip')
        # Calling strip(args, kwargs) (line 832)
        strip_call_result_505561 = invoke(stypy.reporting.localization.Localization(__file__, 832, 19), strip_505559, *[], **kwargs_505560)
        
        # Assigning a type to the variable 'line' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 12), 'line', strip_call_result_505561)
        
        
        # Getting the type of 'line' (line 833)
        line_505562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 19), 'line')
        # Applying the 'not' unary operator (line 833)
        result_not__505563 = python_operator(stypy.reporting.localization.Localization(__file__, 833, 15), 'not', line_505562)
        
        # Testing the type of an if condition (line 833)
        if_condition_505564 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 833, 12), result_not__505563)
        # Assigning a type to the variable 'if_condition_505564' (line 833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 12), 'if_condition_505564', if_condition_505564)
        # SSA begins for if statement (line 833)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 833)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 835):
        
        # Assigning a Call to a Name (line 835):
        
        # Call to match(...): (line 835)
        # Processing the call arguments (line 835)
        str_505567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 25), 'str', '^([a-z0-9_]+)\\s*--\\s*(.*?)\\s*--(.*)$')
        # Getting the type of 'line' (line 835)
        line_505568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 66), 'line', False)
        # Processing the call keyword arguments (line 835)
        kwargs_505569 = {}
        # Getting the type of 're' (line 835)
        re_505565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 16), 're', False)
        # Obtaining the member 'match' of a type (line 835)
        match_505566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 16), re_505565, 'match')
        # Calling match(args, kwargs) (line 835)
        match_call_result_505570 = invoke(stypy.reporting.localization.Localization(__file__, 835, 16), match_505566, *[str_505567, line_505568], **kwargs_505569)
        
        # Assigning a type to the variable 'm' (line 835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 12), 'm', match_call_result_505570)
        
        
        # Getting the type of 'm' (line 836)
        m_505571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 19), 'm')
        # Applying the 'not' unary operator (line 836)
        result_not__505572 = python_operator(stypy.reporting.localization.Localization(__file__, 836, 15), 'not', m_505571)
        
        # Testing the type of an if condition (line 836)
        if_condition_505573 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 836, 12), result_not__505572)
        # Assigning a type to the variable 'if_condition_505573' (line 836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 12), 'if_condition_505573', if_condition_505573)
        # SSA begins for if statement (line 836)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 837)
        # Processing the call arguments (line 837)
        str_505575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 33), 'str', 'Unparseable line %r')
        # Getting the type of 'line' (line 837)
        line_505576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 57), 'line', False)
        # Applying the binary operator '%' (line 837)
        result_mod_505577 = python_operator(stypy.reporting.localization.Localization(__file__, 837, 33), '%', str_505575, line_505576)
        
        # Processing the call keyword arguments (line 837)
        kwargs_505578 = {}
        # Getting the type of 'ValueError' (line 837)
        ValueError_505574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 837)
        ValueError_call_result_505579 = invoke(stypy.reporting.localization.Localization(__file__, 837, 22), ValueError_505574, *[result_mod_505577], **kwargs_505578)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 837, 16), ValueError_call_result_505579, 'raise parameter', BaseException)
        # SSA join for if statement (line 836)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to append(...): (line 838)
        # Processing the call arguments (line 838)
        
        # Call to cls(...): (line 838)
        # Processing the call arguments (line 838)
        
        # Call to group(...): (line 838)
        # Processing the call arguments (line 838)
        int_505585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 38), 'int')
        # Processing the call keyword arguments (line 838)
        kwargs_505586 = {}
        # Getting the type of 'm' (line 838)
        m_505583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 30), 'm', False)
        # Obtaining the member 'group' of a type (line 838)
        group_505584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 30), m_505583, 'group')
        # Calling group(args, kwargs) (line 838)
        group_call_result_505587 = invoke(stypy.reporting.localization.Localization(__file__, 838, 30), group_505584, *[int_505585], **kwargs_505586)
        
        
        # Call to group(...): (line 838)
        # Processing the call arguments (line 838)
        int_505590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 50), 'int')
        # Processing the call keyword arguments (line 838)
        kwargs_505591 = {}
        # Getting the type of 'm' (line 838)
        m_505588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 42), 'm', False)
        # Obtaining the member 'group' of a type (line 838)
        group_505589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 42), m_505588, 'group')
        # Calling group(args, kwargs) (line 838)
        group_call_result_505592 = invoke(stypy.reporting.localization.Localization(__file__, 838, 42), group_505589, *[int_505590], **kwargs_505591)
        
        
        # Call to group(...): (line 838)
        # Processing the call arguments (line 838)
        int_505595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 62), 'int')
        # Processing the call keyword arguments (line 838)
        kwargs_505596 = {}
        # Getting the type of 'm' (line 838)
        m_505593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 54), 'm', False)
        # Obtaining the member 'group' of a type (line 838)
        group_505594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 54), m_505593, 'group')
        # Calling group(args, kwargs) (line 838)
        group_call_result_505597 = invoke(stypy.reporting.localization.Localization(__file__, 838, 54), group_505594, *[int_505595], **kwargs_505596)
        
        # Processing the call keyword arguments (line 838)
        kwargs_505598 = {}
        # Getting the type of 'cls' (line 838)
        cls_505582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 26), 'cls', False)
        # Calling cls(args, kwargs) (line 838)
        cls_call_result_505599 = invoke(stypy.reporting.localization.Localization(__file__, 838, 26), cls_505582, *[group_call_result_505587, group_call_result_505592, group_call_result_505597], **kwargs_505598)
        
        # Processing the call keyword arguments (line 838)
        kwargs_505600 = {}
        # Getting the type of 'ufuncs' (line 838)
        ufuncs_505580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 12), 'ufuncs', False)
        # Obtaining the member 'append' of a type (line 838)
        append_505581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 12), ufuncs_505580, 'append')
        # Calling append(args, kwargs) (line 838)
        append_call_result_505601 = invoke(stypy.reporting.localization.Localization(__file__, 838, 12), append_505581, *[cls_call_result_505599], **kwargs_505600)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'ufuncs' (line 839)
        ufuncs_505602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 15), 'ufuncs')
        # Assigning a type to the variable 'stypy_return_type' (line 839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 8), 'stypy_return_type', ufuncs_505602)
        
        # ################# End of 'parse_all(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'parse_all' in the type store
        # Getting the type of 'stypy_return_type' (line 824)
        stypy_return_type_505603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_505603)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'parse_all'
        return stypy_return_type_505603


# Assigning a type to the variable 'Func' (line 757)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 757, 0), 'Func', Func)
# Declaration of the 'Ufunc' class
# Getting the type of 'Func' (line 842)
Func_505604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 12), 'Func')

class Ufunc(Func_505604, ):
    str_505605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, (-1)), 'str', "\n    Ufunc signature, restricted format suitable for special functions.\n\n    Parameters\n    ----------\n    name\n        Name of the ufunc to create\n    signature\n        String of form 'func: fff*ff->f, func2: ddd->*i' describing\n        the C-level functions and types of their input arguments\n        and return values.\n\n        The syntax is 'function_name: inputparams*outputparams->output_retval*ignored_retval'\n\n    Attributes\n    ----------\n    name : str\n        Python name for the Ufunc\n    signatures : list of (func_name, inarg_spec, outarg_spec, ret_spec, header_name)\n        List of parsed signatures\n    doc : str\n        Docstring, obtained from add_newdocs\n    function_name_overrides : dict of str->str\n        Overrides for the function names in signatures\n\n    ")

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 869, 4, False)
        # Assigning a type to the variable 'self' (line 870)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 870, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Ufunc.__init__', ['name', 'signatures', 'headers'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['name', 'signatures', 'headers'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 870)
        # Processing the call arguments (line 870)
        # Getting the type of 'name' (line 870)
        name_505612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 36), 'name', False)
        # Getting the type of 'signatures' (line 870)
        signatures_505613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 42), 'signatures', False)
        # Getting the type of 'headers' (line 870)
        headers_505614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 54), 'headers', False)
        # Processing the call keyword arguments (line 870)
        kwargs_505615 = {}
        
        # Call to super(...): (line 870)
        # Processing the call arguments (line 870)
        # Getting the type of 'Ufunc' (line 870)
        Ufunc_505607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 14), 'Ufunc', False)
        # Getting the type of 'self' (line 870)
        self_505608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 21), 'self', False)
        # Processing the call keyword arguments (line 870)
        kwargs_505609 = {}
        # Getting the type of 'super' (line 870)
        super_505606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 8), 'super', False)
        # Calling super(args, kwargs) (line 870)
        super_call_result_505610 = invoke(stypy.reporting.localization.Localization(__file__, 870, 8), super_505606, *[Ufunc_505607, self_505608], **kwargs_505609)
        
        # Obtaining the member '__init__' of a type (line 870)
        init___505611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 8), super_call_result_505610, '__init__')
        # Calling __init__(args, kwargs) (line 870)
        init___call_result_505616 = invoke(stypy.reporting.localization.Localization(__file__, 870, 8), init___505611, *[name_505612, signatures_505613, headers_505614], **kwargs_505615)
        
        
        # Assigning a Call to a Attribute (line 871):
        
        # Assigning a Call to a Attribute (line 871):
        
        # Call to get(...): (line 871)
        # Processing the call arguments (line 871)
        str_505619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 35), 'str', 'scipy.special.')
        # Getting the type of 'name' (line 871)
        name_505620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 54), 'name', False)
        # Applying the binary operator '+' (line 871)
        result_add_505621 = python_operator(stypy.reporting.localization.Localization(__file__, 871, 35), '+', str_505619, name_505620)
        
        # Processing the call keyword arguments (line 871)
        kwargs_505622 = {}
        # Getting the type of 'add_newdocs' (line 871)
        add_newdocs_505617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 19), 'add_newdocs', False)
        # Obtaining the member 'get' of a type (line 871)
        get_505618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 19), add_newdocs_505617, 'get')
        # Calling get(args, kwargs) (line 871)
        get_call_result_505623 = invoke(stypy.reporting.localization.Localization(__file__, 871, 19), get_505618, *[result_add_505621], **kwargs_505622)
        
        # Getting the type of 'self' (line 871)
        self_505624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 8), 'self')
        # Setting the type of the member 'doc' of a type (line 871)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 8), self_505624, 'doc', get_call_result_505623)
        
        # Type idiom detected: calculating its left and rigth part (line 872)
        # Getting the type of 'self' (line 872)
        self_505625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 11), 'self')
        # Obtaining the member 'doc' of a type (line 872)
        doc_505626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 11), self_505625, 'doc')
        # Getting the type of 'None' (line 872)
        None_505627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 23), 'None')
        
        (may_be_505628, more_types_in_union_505629) = may_be_none(doc_505626, None_505627)

        if may_be_505628:

            if more_types_in_union_505629:
                # Runtime conditional SSA (line 872)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 873)
            # Processing the call arguments (line 873)
            str_505631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 29), 'str', 'No docstring for ufunc %r')
            # Getting the type of 'name' (line 873)
            name_505632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 59), 'name', False)
            # Applying the binary operator '%' (line 873)
            result_mod_505633 = python_operator(stypy.reporting.localization.Localization(__file__, 873, 29), '%', str_505631, name_505632)
            
            # Processing the call keyword arguments (line 873)
            kwargs_505634 = {}
            # Getting the type of 'ValueError' (line 873)
            ValueError_505630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 873)
            ValueError_call_result_505635 = invoke(stypy.reporting.localization.Localization(__file__, 873, 18), ValueError_505630, *[result_mod_505633], **kwargs_505634)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 873, 12), ValueError_call_result_505635, 'raise parameter', BaseException)

            if more_types_in_union_505629:
                # SSA join for if statement (line 872)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Attribute (line 874):
        
        # Assigning a Call to a Attribute (line 874):
        
        # Call to strip(...): (line 874)
        # Processing the call keyword arguments (line 874)
        kwargs_505643 = {}
        
        # Call to dedent(...): (line 874)
        # Processing the call arguments (line 874)
        # Getting the type of 'self' (line 874)
        self_505638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 35), 'self', False)
        # Obtaining the member 'doc' of a type (line 874)
        doc_505639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 35), self_505638, 'doc')
        # Processing the call keyword arguments (line 874)
        kwargs_505640 = {}
        # Getting the type of 'textwrap' (line 874)
        textwrap_505636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 19), 'textwrap', False)
        # Obtaining the member 'dedent' of a type (line 874)
        dedent_505637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 19), textwrap_505636, 'dedent')
        # Calling dedent(args, kwargs) (line 874)
        dedent_call_result_505641 = invoke(stypy.reporting.localization.Localization(__file__, 874, 19), dedent_505637, *[doc_505639], **kwargs_505640)
        
        # Obtaining the member 'strip' of a type (line 874)
        strip_505642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 19), dedent_call_result_505641, 'strip')
        # Calling strip(args, kwargs) (line 874)
        strip_call_result_505644 = invoke(stypy.reporting.localization.Localization(__file__, 874, 19), strip_505642, *[], **kwargs_505643)
        
        # Getting the type of 'self' (line 874)
        self_505645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'self')
        # Setting the type of the member 'doc' of a type (line 874)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 8), self_505645, 'doc', strip_call_result_505644)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _get_signatures_and_loops(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_signatures_and_loops'
        module_type_store = module_type_store.open_function_context('_get_signatures_and_loops', 876, 4, False)
        # Assigning a type to the variable 'self' (line 877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 877, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_localization', localization)
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_type_store', module_type_store)
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_function_name', 'Ufunc._get_signatures_and_loops')
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_param_names_list', ['all_loops'])
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_varargs_param_name', None)
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_call_defaults', defaults)
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_call_varargs', varargs)
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Ufunc._get_signatures_and_loops.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Ufunc._get_signatures_and_loops', ['all_loops'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_signatures_and_loops', localization, ['all_loops'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_signatures_and_loops(...)' code ##################

        
        # Assigning a Name to a Name (line 877):
        
        # Assigning a Name to a Name (line 877):
        # Getting the type of 'None' (line 877)
        None_505646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 20), 'None')
        # Assigning a type to the variable 'inarg_num' (line 877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 877, 8), 'inarg_num', None_505646)
        
        # Assigning a Name to a Name (line 878):
        
        # Assigning a Name to a Name (line 878):
        # Getting the type of 'None' (line 878)
        None_505647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 21), 'None')
        # Assigning a type to the variable 'outarg_num' (line 878)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 878, 8), 'outarg_num', None_505647)
        
        # Assigning a Call to a Name (line 880):
        
        # Assigning a Call to a Name (line 880):
        
        # Call to set(...): (line 880)
        # Processing the call keyword arguments (line 880)
        kwargs_505649 = {}
        # Getting the type of 'set' (line 880)
        set_505648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 15), 'set', False)
        # Calling set(args, kwargs) (line 880)
        set_call_result_505650 = invoke(stypy.reporting.localization.Localization(__file__, 880, 15), set_505648, *[], **kwargs_505649)
        
        # Assigning a type to the variable 'seen' (line 880)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 880, 8), 'seen', set_call_result_505650)
        
        # Assigning a List to a Name (line 881):
        
        # Assigning a List to a Name (line 881):
        
        # Obtaining an instance of the builtin type 'list' (line 881)
        list_505651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 881, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 881)
        
        # Assigning a type to the variable 'variants' (line 881)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 881, 8), 'variants', list_505651)

        @norecursion
        def add_variant(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'add_variant'
            module_type_store = module_type_store.open_function_context('add_variant', 883, 8, False)
            
            # Passed parameters checking function
            add_variant.stypy_localization = localization
            add_variant.stypy_type_of_self = None
            add_variant.stypy_type_store = module_type_store
            add_variant.stypy_function_name = 'add_variant'
            add_variant.stypy_param_names_list = ['func_name', 'inarg', 'outarg', 'ret', 'inp', 'outp']
            add_variant.stypy_varargs_param_name = None
            add_variant.stypy_kwargs_param_name = None
            add_variant.stypy_call_defaults = defaults
            add_variant.stypy_call_varargs = varargs
            add_variant.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'add_variant', ['func_name', 'inarg', 'outarg', 'ret', 'inp', 'outp'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'add_variant', localization, ['func_name', 'inarg', 'outarg', 'ret', 'inp', 'outp'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'add_variant(...)' code ##################

            
            
            # Getting the type of 'inp' (line 884)
            inp_505652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 15), 'inp')
            # Getting the type of 'seen' (line 884)
            seen_505653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 22), 'seen')
            # Applying the binary operator 'in' (line 884)
            result_contains_505654 = python_operator(stypy.reporting.localization.Localization(__file__, 884, 15), 'in', inp_505652, seen_505653)
            
            # Testing the type of an if condition (line 884)
            if_condition_505655 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 884, 12), result_contains_505654)
            # Assigning a type to the variable 'if_condition_505655' (line 884)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 12), 'if_condition_505655', if_condition_505655)
            # SSA begins for if statement (line 884)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Assigning a type to the variable 'stypy_return_type' (line 885)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 885, 16), 'stypy_return_type', types.NoneType)
            # SSA join for if statement (line 884)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to add(...): (line 886)
            # Processing the call arguments (line 886)
            # Getting the type of 'inp' (line 886)
            inp_505658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 21), 'inp', False)
            # Processing the call keyword arguments (line 886)
            kwargs_505659 = {}
            # Getting the type of 'seen' (line 886)
            seen_505656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 12), 'seen', False)
            # Obtaining the member 'add' of a type (line 886)
            add_505657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 12), seen_505656, 'add')
            # Calling add(args, kwargs) (line 886)
            add_call_result_505660 = invoke(stypy.reporting.localization.Localization(__file__, 886, 12), add_505657, *[inp_505658], **kwargs_505659)
            
            
            # Assigning a Tuple to a Name (line 888):
            
            # Assigning a Tuple to a Name (line 888):
            
            # Obtaining an instance of the builtin type 'tuple' (line 888)
            tuple_505661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 19), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 888)
            # Adding element type (line 888)
            # Getting the type of 'func_name' (line 888)
            func_name_505662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 19), 'func_name')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 888, 19), tuple_505661, func_name_505662)
            # Adding element type (line 888)
            # Getting the type of 'inp' (line 888)
            inp_505663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 30), 'inp')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 888, 19), tuple_505661, inp_505663)
            # Adding element type (line 888)
            # Getting the type of 'outp' (line 888)
            outp_505664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 35), 'outp')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 888, 19), tuple_505661, outp_505664)
            
            # Assigning a type to the variable 'sig' (line 888)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 12), 'sig', tuple_505661)
            
            
            str_505665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 15), 'str', 'v')
            # Getting the type of 'outp' (line 889)
            outp_505666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 22), 'outp')
            # Applying the binary operator 'in' (line 889)
            result_contains_505667 = python_operator(stypy.reporting.localization.Localization(__file__, 889, 15), 'in', str_505665, outp_505666)
            
            # Testing the type of an if condition (line 889)
            if_condition_505668 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 889, 12), result_contains_505667)
            # Assigning a type to the variable 'if_condition_505668' (line 889)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 12), 'if_condition_505668', if_condition_505668)
            # SSA begins for if statement (line 889)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to ValueError(...): (line 890)
            # Processing the call arguments (line 890)
            str_505670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 33), 'str', '%s: void signature %r')
            
            # Obtaining an instance of the builtin type 'tuple' (line 890)
            tuple_505671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 60), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 890)
            # Adding element type (line 890)
            # Getting the type of 'self' (line 890)
            self_505672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 60), 'self', False)
            # Obtaining the member 'name' of a type (line 890)
            name_505673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 890, 60), self_505672, 'name')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 60), tuple_505671, name_505673)
            # Adding element type (line 890)
            # Getting the type of 'sig' (line 890)
            sig_505674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 71), 'sig', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 60), tuple_505671, sig_505674)
            
            # Applying the binary operator '%' (line 890)
            result_mod_505675 = python_operator(stypy.reporting.localization.Localization(__file__, 890, 33), '%', str_505670, tuple_505671)
            
            # Processing the call keyword arguments (line 890)
            kwargs_505676 = {}
            # Getting the type of 'ValueError' (line 890)
            ValueError_505669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 890)
            ValueError_call_result_505677 = invoke(stypy.reporting.localization.Localization(__file__, 890, 22), ValueError_505669, *[result_mod_505675], **kwargs_505676)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 890, 16), ValueError_call_result_505677, 'raise parameter', BaseException)
            # SSA join for if statement (line 889)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Evaluating a boolean operation
            
            
            # Call to len(...): (line 891)
            # Processing the call arguments (line 891)
            # Getting the type of 'inp' (line 891)
            inp_505679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 19), 'inp', False)
            # Processing the call keyword arguments (line 891)
            kwargs_505680 = {}
            # Getting the type of 'len' (line 891)
            len_505678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 15), 'len', False)
            # Calling len(args, kwargs) (line 891)
            len_call_result_505681 = invoke(stypy.reporting.localization.Localization(__file__, 891, 15), len_505678, *[inp_505679], **kwargs_505680)
            
            # Getting the type of 'inarg_num' (line 891)
            inarg_num_505682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 27), 'inarg_num')
            # Applying the binary operator '!=' (line 891)
            result_ne_505683 = python_operator(stypy.reporting.localization.Localization(__file__, 891, 15), '!=', len_call_result_505681, inarg_num_505682)
            
            
            
            # Call to len(...): (line 891)
            # Processing the call arguments (line 891)
            # Getting the type of 'outp' (line 891)
            outp_505685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 44), 'outp', False)
            # Processing the call keyword arguments (line 891)
            kwargs_505686 = {}
            # Getting the type of 'len' (line 891)
            len_505684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 40), 'len', False)
            # Calling len(args, kwargs) (line 891)
            len_call_result_505687 = invoke(stypy.reporting.localization.Localization(__file__, 891, 40), len_505684, *[outp_505685], **kwargs_505686)
            
            # Getting the type of 'outarg_num' (line 891)
            outarg_num_505688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 53), 'outarg_num')
            # Applying the binary operator '!=' (line 891)
            result_ne_505689 = python_operator(stypy.reporting.localization.Localization(__file__, 891, 40), '!=', len_call_result_505687, outarg_num_505688)
            
            # Applying the binary operator 'or' (line 891)
            result_or_keyword_505690 = python_operator(stypy.reporting.localization.Localization(__file__, 891, 15), 'or', result_ne_505683, result_ne_505689)
            
            # Testing the type of an if condition (line 891)
            if_condition_505691 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 891, 12), result_or_keyword_505690)
            # Assigning a type to the variable 'if_condition_505691' (line 891)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 891, 12), 'if_condition_505691', if_condition_505691)
            # SSA begins for if statement (line 891)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to ValueError(...): (line 892)
            # Processing the call arguments (line 892)
            str_505693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 33), 'str', '%s: signature %r does not have %d/%d input/output args')
            
            # Obtaining an instance of the builtin type 'tuple' (line 893)
            tuple_505694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 20), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 893)
            # Adding element type (line 893)
            # Getting the type of 'self' (line 893)
            self_505695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 20), 'self', False)
            # Obtaining the member 'name' of a type (line 893)
            name_505696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 20), self_505695, 'name')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 893, 20), tuple_505694, name_505696)
            # Adding element type (line 893)
            # Getting the type of 'sig' (line 893)
            sig_505697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 31), 'sig', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 893, 20), tuple_505694, sig_505697)
            # Adding element type (line 893)
            # Getting the type of 'inarg_num' (line 894)
            inarg_num_505698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 20), 'inarg_num', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 893, 20), tuple_505694, inarg_num_505698)
            # Adding element type (line 893)
            # Getting the type of 'outarg_num' (line 894)
            outarg_num_505699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 31), 'outarg_num', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 893, 20), tuple_505694, outarg_num_505699)
            
            # Applying the binary operator '%' (line 892)
            result_mod_505700 = python_operator(stypy.reporting.localization.Localization(__file__, 892, 33), '%', str_505693, tuple_505694)
            
            # Processing the call keyword arguments (line 892)
            kwargs_505701 = {}
            # Getting the type of 'ValueError' (line 892)
            ValueError_505692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 892)
            ValueError_call_result_505702 = invoke(stypy.reporting.localization.Localization(__file__, 892, 22), ValueError_505692, *[result_mod_505700], **kwargs_505701)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 892, 16), ValueError_call_result_505702, 'raise parameter', BaseException)
            # SSA join for if statement (line 891)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Call to a Tuple (line 896):
            
            # Assigning a Subscript to a Name (line 896):
            
            # Obtaining the type of the subscript
            int_505703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 12), 'int')
            
            # Call to generate_loop(...): (line 896)
            # Processing the call arguments (line 896)
            # Getting the type of 'inarg' (line 896)
            inarg_505705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 44), 'inarg', False)
            # Getting the type of 'outarg' (line 896)
            outarg_505706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 51), 'outarg', False)
            # Getting the type of 'ret' (line 896)
            ret_505707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 59), 'ret', False)
            # Getting the type of 'inp' (line 896)
            inp_505708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 64), 'inp', False)
            # Getting the type of 'outp' (line 896)
            outp_505709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 69), 'outp', False)
            # Processing the call keyword arguments (line 896)
            kwargs_505710 = {}
            # Getting the type of 'generate_loop' (line 896)
            generate_loop_505704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 30), 'generate_loop', False)
            # Calling generate_loop(args, kwargs) (line 896)
            generate_loop_call_result_505711 = invoke(stypy.reporting.localization.Localization(__file__, 896, 30), generate_loop_505704, *[inarg_505705, outarg_505706, ret_505707, inp_505708, outp_505709], **kwargs_505710)
            
            # Obtaining the member '__getitem__' of a type (line 896)
            getitem___505712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 12), generate_loop_call_result_505711, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 896)
            subscript_call_result_505713 = invoke(stypy.reporting.localization.Localization(__file__, 896, 12), getitem___505712, int_505703)
            
            # Assigning a type to the variable 'tuple_var_assignment_503914' (line 896)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 12), 'tuple_var_assignment_503914', subscript_call_result_505713)
            
            # Assigning a Subscript to a Name (line 896):
            
            # Obtaining the type of the subscript
            int_505714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 12), 'int')
            
            # Call to generate_loop(...): (line 896)
            # Processing the call arguments (line 896)
            # Getting the type of 'inarg' (line 896)
            inarg_505716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 44), 'inarg', False)
            # Getting the type of 'outarg' (line 896)
            outarg_505717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 51), 'outarg', False)
            # Getting the type of 'ret' (line 896)
            ret_505718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 59), 'ret', False)
            # Getting the type of 'inp' (line 896)
            inp_505719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 64), 'inp', False)
            # Getting the type of 'outp' (line 896)
            outp_505720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 69), 'outp', False)
            # Processing the call keyword arguments (line 896)
            kwargs_505721 = {}
            # Getting the type of 'generate_loop' (line 896)
            generate_loop_505715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 30), 'generate_loop', False)
            # Calling generate_loop(args, kwargs) (line 896)
            generate_loop_call_result_505722 = invoke(stypy.reporting.localization.Localization(__file__, 896, 30), generate_loop_505715, *[inarg_505716, outarg_505717, ret_505718, inp_505719, outp_505720], **kwargs_505721)
            
            # Obtaining the member '__getitem__' of a type (line 896)
            getitem___505723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 12), generate_loop_call_result_505722, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 896)
            subscript_call_result_505724 = invoke(stypy.reporting.localization.Localization(__file__, 896, 12), getitem___505723, int_505714)
            
            # Assigning a type to the variable 'tuple_var_assignment_503915' (line 896)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 12), 'tuple_var_assignment_503915', subscript_call_result_505724)
            
            # Assigning a Name to a Name (line 896):
            # Getting the type of 'tuple_var_assignment_503914' (line 896)
            tuple_var_assignment_503914_505725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 12), 'tuple_var_assignment_503914')
            # Assigning a type to the variable 'loop_name' (line 896)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 12), 'loop_name', tuple_var_assignment_503914_505725)
            
            # Assigning a Name to a Name (line 896):
            # Getting the type of 'tuple_var_assignment_503915' (line 896)
            tuple_var_assignment_503915_505726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 12), 'tuple_var_assignment_503915')
            # Assigning a type to the variable 'loop' (line 896)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 23), 'loop', tuple_var_assignment_503915_505726)
            
            # Assigning a Name to a Subscript (line 897):
            
            # Assigning a Name to a Subscript (line 897):
            # Getting the type of 'loop' (line 897)
            loop_505727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 35), 'loop')
            # Getting the type of 'all_loops' (line 897)
            all_loops_505728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 12), 'all_loops')
            # Getting the type of 'loop_name' (line 897)
            loop_name_505729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 22), 'loop_name')
            # Storing an element on a container (line 897)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 12), all_loops_505728, (loop_name_505729, loop_505727))
            
            # Call to append(...): (line 898)
            # Processing the call arguments (line 898)
            
            # Obtaining an instance of the builtin type 'tuple' (line 898)
            tuple_505732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 29), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 898)
            # Adding element type (line 898)
            # Getting the type of 'func_name' (line 898)
            func_name_505733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 29), 'func_name', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 29), tuple_505732, func_name_505733)
            # Adding element type (line 898)
            # Getting the type of 'loop_name' (line 898)
            loop_name_505734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 40), 'loop_name', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 29), tuple_505732, loop_name_505734)
            # Adding element type (line 898)
            # Getting the type of 'inp' (line 898)
            inp_505735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 51), 'inp', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 29), tuple_505732, inp_505735)
            # Adding element type (line 898)
            # Getting the type of 'outp' (line 898)
            outp_505736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 56), 'outp', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 29), tuple_505732, outp_505736)
            
            # Processing the call keyword arguments (line 898)
            kwargs_505737 = {}
            # Getting the type of 'variants' (line 898)
            variants_505730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 12), 'variants', False)
            # Obtaining the member 'append' of a type (line 898)
            append_505731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 898, 12), variants_505730, 'append')
            # Calling append(args, kwargs) (line 898)
            append_call_result_505738 = invoke(stypy.reporting.localization.Localization(__file__, 898, 12), append_505731, *[tuple_505732], **kwargs_505737)
            
            
            # ################# End of 'add_variant(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'add_variant' in the type store
            # Getting the type of 'stypy_return_type' (line 883)
            stypy_return_type_505739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_505739)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'add_variant'
            return stypy_return_type_505739

        # Assigning a type to the variable 'add_variant' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'add_variant', add_variant)
        
        # Getting the type of 'self' (line 901)
        self_505740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 53), 'self')
        # Obtaining the member 'signatures' of a type (line 901)
        signatures_505741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 901, 53), self_505740, 'signatures')
        # Testing the type of a for loop iterable (line 901)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 901, 8), signatures_505741)
        # Getting the type of the for loop variable (line 901)
        for_loop_var_505742 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 901, 8), signatures_505741)
        # Assigning a type to the variable 'func_name' (line 901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'func_name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 8), for_loop_var_505742))
        # Assigning a type to the variable 'inarg' (line 901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'inarg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 8), for_loop_var_505742))
        # Assigning a type to the variable 'outarg' (line 901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'outarg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 8), for_loop_var_505742))
        # Assigning a type to the variable 'ret' (line 901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'ret', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 8), for_loop_var_505742))
        # Assigning a type to the variable 'header' (line 901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'header', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 8), for_loop_var_505742))
        # SSA begins for a for statement (line 901)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 902):
        
        # Assigning a BinOp to a Name (line 902):
        
        # Call to sub(...): (line 902)
        # Processing the call arguments (line 902)
        str_505745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 26), 'str', '\\*.*')
        str_505746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 35), 'str', '')
        # Getting the type of 'ret' (line 902)
        ret_505747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 39), 'ret', False)
        # Processing the call keyword arguments (line 902)
        kwargs_505748 = {}
        # Getting the type of 're' (line 902)
        re_505743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 19), 're', False)
        # Obtaining the member 'sub' of a type (line 902)
        sub_505744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 902, 19), re_505743, 'sub')
        # Calling sub(args, kwargs) (line 902)
        sub_call_result_505749 = invoke(stypy.reporting.localization.Localization(__file__, 902, 19), sub_505744, *[str_505745, str_505746, ret_505747], **kwargs_505748)
        
        # Getting the type of 'outarg' (line 902)
        outarg_505750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 46), 'outarg')
        # Applying the binary operator '+' (line 902)
        result_add_505751 = python_operator(stypy.reporting.localization.Localization(__file__, 902, 19), '+', sub_call_result_505749, outarg_505750)
        
        # Assigning a type to the variable 'outp' (line 902)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 902, 12), 'outp', result_add_505751)
        
        # Assigning a Call to a Name (line 903):
        
        # Assigning a Call to a Name (line 903):
        
        # Call to replace(...): (line 903)
        # Processing the call arguments (line 903)
        str_505754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 30), 'str', '*')
        str_505755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 35), 'str', '')
        # Processing the call keyword arguments (line 903)
        kwargs_505756 = {}
        # Getting the type of 'ret' (line 903)
        ret_505752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 18), 'ret', False)
        # Obtaining the member 'replace' of a type (line 903)
        replace_505753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 903, 18), ret_505752, 'replace')
        # Calling replace(args, kwargs) (line 903)
        replace_call_result_505757 = invoke(stypy.reporting.localization.Localization(__file__, 903, 18), replace_505753, *[str_505754, str_505755], **kwargs_505756)
        
        # Assigning a type to the variable 'ret' (line 903)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 903, 12), 'ret', replace_call_result_505757)
        
        # Type idiom detected: calculating its left and rigth part (line 904)
        # Getting the type of 'inarg_num' (line 904)
        inarg_num_505758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 15), 'inarg_num')
        # Getting the type of 'None' (line 904)
        None_505759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 28), 'None')
        
        (may_be_505760, more_types_in_union_505761) = may_be_none(inarg_num_505758, None_505759)

        if may_be_505760:

            if more_types_in_union_505761:
                # Runtime conditional SSA (line 904)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 905):
            
            # Assigning a Call to a Name (line 905):
            
            # Call to len(...): (line 905)
            # Processing the call arguments (line 905)
            # Getting the type of 'inarg' (line 905)
            inarg_505763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 32), 'inarg', False)
            # Processing the call keyword arguments (line 905)
            kwargs_505764 = {}
            # Getting the type of 'len' (line 905)
            len_505762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 28), 'len', False)
            # Calling len(args, kwargs) (line 905)
            len_call_result_505765 = invoke(stypy.reporting.localization.Localization(__file__, 905, 28), len_505762, *[inarg_505763], **kwargs_505764)
            
            # Assigning a type to the variable 'inarg_num' (line 905)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 16), 'inarg_num', len_call_result_505765)
            
            # Assigning a Call to a Name (line 906):
            
            # Assigning a Call to a Name (line 906):
            
            # Call to len(...): (line 906)
            # Processing the call arguments (line 906)
            # Getting the type of 'outp' (line 906)
            outp_505767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 33), 'outp', False)
            # Processing the call keyword arguments (line 906)
            kwargs_505768 = {}
            # Getting the type of 'len' (line 906)
            len_505766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 29), 'len', False)
            # Calling len(args, kwargs) (line 906)
            len_call_result_505769 = invoke(stypy.reporting.localization.Localization(__file__, 906, 29), len_505766, *[outp_505767], **kwargs_505768)
            
            # Assigning a type to the variable 'outarg_num' (line 906)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 16), 'outarg_num', len_call_result_505769)

            if more_types_in_union_505761:
                # SSA join for if statement (line 904)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Subscript to a Tuple (line 908):
        
        # Assigning a Subscript to a Name (line 908):
        
        # Obtaining the type of the subscript
        int_505770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 12), 'int')
        
        # Obtaining the type of the subscript
        int_505771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 57), 'int')
        
        # Call to list(...): (line 908)
        # Processing the call arguments (line 908)
        
        # Call to iter_variants(...): (line 908)
        # Processing the call arguments (line 908)
        # Getting the type of 'inarg' (line 908)
        inarg_505774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 43), 'inarg', False)
        # Getting the type of 'outp' (line 908)
        outp_505775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 50), 'outp', False)
        # Processing the call keyword arguments (line 908)
        kwargs_505776 = {}
        # Getting the type of 'iter_variants' (line 908)
        iter_variants_505773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 29), 'iter_variants', False)
        # Calling iter_variants(args, kwargs) (line 908)
        iter_variants_call_result_505777 = invoke(stypy.reporting.localization.Localization(__file__, 908, 29), iter_variants_505773, *[inarg_505774, outp_505775], **kwargs_505776)
        
        # Processing the call keyword arguments (line 908)
        kwargs_505778 = {}
        # Getting the type of 'list' (line 908)
        list_505772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 24), 'list', False)
        # Calling list(args, kwargs) (line 908)
        list_call_result_505779 = invoke(stypy.reporting.localization.Localization(__file__, 908, 24), list_505772, *[iter_variants_call_result_505777], **kwargs_505778)
        
        # Obtaining the member '__getitem__' of a type (line 908)
        getitem___505780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 24), list_call_result_505779, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 908)
        subscript_call_result_505781 = invoke(stypy.reporting.localization.Localization(__file__, 908, 24), getitem___505780, int_505771)
        
        # Obtaining the member '__getitem__' of a type (line 908)
        getitem___505782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 12), subscript_call_result_505781, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 908)
        subscript_call_result_505783 = invoke(stypy.reporting.localization.Localization(__file__, 908, 12), getitem___505782, int_505770)
        
        # Assigning a type to the variable 'tuple_var_assignment_503916' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 12), 'tuple_var_assignment_503916', subscript_call_result_505783)
        
        # Assigning a Subscript to a Name (line 908):
        
        # Obtaining the type of the subscript
        int_505784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 12), 'int')
        
        # Obtaining the type of the subscript
        int_505785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 908, 57), 'int')
        
        # Call to list(...): (line 908)
        # Processing the call arguments (line 908)
        
        # Call to iter_variants(...): (line 908)
        # Processing the call arguments (line 908)
        # Getting the type of 'inarg' (line 908)
        inarg_505788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 43), 'inarg', False)
        # Getting the type of 'outp' (line 908)
        outp_505789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 50), 'outp', False)
        # Processing the call keyword arguments (line 908)
        kwargs_505790 = {}
        # Getting the type of 'iter_variants' (line 908)
        iter_variants_505787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 29), 'iter_variants', False)
        # Calling iter_variants(args, kwargs) (line 908)
        iter_variants_call_result_505791 = invoke(stypy.reporting.localization.Localization(__file__, 908, 29), iter_variants_505787, *[inarg_505788, outp_505789], **kwargs_505790)
        
        # Processing the call keyword arguments (line 908)
        kwargs_505792 = {}
        # Getting the type of 'list' (line 908)
        list_505786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 24), 'list', False)
        # Calling list(args, kwargs) (line 908)
        list_call_result_505793 = invoke(stypy.reporting.localization.Localization(__file__, 908, 24), list_505786, *[iter_variants_call_result_505791], **kwargs_505792)
        
        # Obtaining the member '__getitem__' of a type (line 908)
        getitem___505794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 24), list_call_result_505793, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 908)
        subscript_call_result_505795 = invoke(stypy.reporting.localization.Localization(__file__, 908, 24), getitem___505794, int_505785)
        
        # Obtaining the member '__getitem__' of a type (line 908)
        getitem___505796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 12), subscript_call_result_505795, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 908)
        subscript_call_result_505797 = invoke(stypy.reporting.localization.Localization(__file__, 908, 12), getitem___505796, int_505784)
        
        # Assigning a type to the variable 'tuple_var_assignment_503917' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 12), 'tuple_var_assignment_503917', subscript_call_result_505797)
        
        # Assigning a Name to a Name (line 908):
        # Getting the type of 'tuple_var_assignment_503916' (line 908)
        tuple_var_assignment_503916_505798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 12), 'tuple_var_assignment_503916')
        # Assigning a type to the variable 'inp' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 12), 'inp', tuple_var_assignment_503916_505798)
        
        # Assigning a Name to a Name (line 908):
        # Getting the type of 'tuple_var_assignment_503917' (line 908)
        tuple_var_assignment_503917_505799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 12), 'tuple_var_assignment_503917')
        # Assigning a type to the variable 'outp' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 17), 'outp', tuple_var_assignment_503917_505799)
        
        # Call to add_variant(...): (line 909)
        # Processing the call arguments (line 909)
        # Getting the type of 'func_name' (line 909)
        func_name_505801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 24), 'func_name', False)
        # Getting the type of 'inarg' (line 909)
        inarg_505802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 35), 'inarg', False)
        # Getting the type of 'outarg' (line 909)
        outarg_505803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 42), 'outarg', False)
        # Getting the type of 'ret' (line 909)
        ret_505804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 50), 'ret', False)
        # Getting the type of 'inp' (line 909)
        inp_505805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 55), 'inp', False)
        # Getting the type of 'outp' (line 909)
        outp_505806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 60), 'outp', False)
        # Processing the call keyword arguments (line 909)
        kwargs_505807 = {}
        # Getting the type of 'add_variant' (line 909)
        add_variant_505800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 12), 'add_variant', False)
        # Calling add_variant(args, kwargs) (line 909)
        add_variant_call_result_505808 = invoke(stypy.reporting.localization.Localization(__file__, 909, 12), add_variant_505800, *[func_name_505801, inarg_505802, outarg_505803, ret_505804, inp_505805, outp_505806], **kwargs_505807)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 912)
        self_505809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 53), 'self')
        # Obtaining the member 'signatures' of a type (line 912)
        signatures_505810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 53), self_505809, 'signatures')
        # Testing the type of a for loop iterable (line 912)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 912, 8), signatures_505810)
        # Getting the type of the for loop variable (line 912)
        for_loop_var_505811 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 912, 8), signatures_505810)
        # Assigning a type to the variable 'func_name' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'func_name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 8), for_loop_var_505811))
        # Assigning a type to the variable 'inarg' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'inarg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 8), for_loop_var_505811))
        # Assigning a type to the variable 'outarg' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'outarg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 8), for_loop_var_505811))
        # Assigning a type to the variable 'ret' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'ret', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 8), for_loop_var_505811))
        # Assigning a type to the variable 'header' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'header', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 8), for_loop_var_505811))
        # SSA begins for a for statement (line 912)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 913):
        
        # Assigning a BinOp to a Name (line 913):
        
        # Call to sub(...): (line 913)
        # Processing the call arguments (line 913)
        str_505814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 26), 'str', '\\*.*')
        str_505815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 35), 'str', '')
        # Getting the type of 'ret' (line 913)
        ret_505816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 39), 'ret', False)
        # Processing the call keyword arguments (line 913)
        kwargs_505817 = {}
        # Getting the type of 're' (line 913)
        re_505812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 19), 're', False)
        # Obtaining the member 'sub' of a type (line 913)
        sub_505813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 19), re_505812, 'sub')
        # Calling sub(args, kwargs) (line 913)
        sub_call_result_505818 = invoke(stypy.reporting.localization.Localization(__file__, 913, 19), sub_505813, *[str_505814, str_505815, ret_505816], **kwargs_505817)
        
        # Getting the type of 'outarg' (line 913)
        outarg_505819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 46), 'outarg')
        # Applying the binary operator '+' (line 913)
        result_add_505820 = python_operator(stypy.reporting.localization.Localization(__file__, 913, 19), '+', sub_call_result_505818, outarg_505819)
        
        # Assigning a type to the variable 'outp' (line 913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 12), 'outp', result_add_505820)
        
        # Assigning a Call to a Name (line 914):
        
        # Assigning a Call to a Name (line 914):
        
        # Call to replace(...): (line 914)
        # Processing the call arguments (line 914)
        str_505823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 30), 'str', '*')
        str_505824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 35), 'str', '')
        # Processing the call keyword arguments (line 914)
        kwargs_505825 = {}
        # Getting the type of 'ret' (line 914)
        ret_505821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 18), 'ret', False)
        # Obtaining the member 'replace' of a type (line 914)
        replace_505822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 914, 18), ret_505821, 'replace')
        # Calling replace(args, kwargs) (line 914)
        replace_call_result_505826 = invoke(stypy.reporting.localization.Localization(__file__, 914, 18), replace_505822, *[str_505823, str_505824], **kwargs_505825)
        
        # Assigning a type to the variable 'ret' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 12), 'ret', replace_call_result_505826)
        
        
        # Call to iter_variants(...): (line 915)
        # Processing the call arguments (line 915)
        # Getting the type of 'inarg' (line 915)
        inarg_505828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 43), 'inarg', False)
        # Getting the type of 'outp' (line 915)
        outp_505829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 50), 'outp', False)
        # Processing the call keyword arguments (line 915)
        kwargs_505830 = {}
        # Getting the type of 'iter_variants' (line 915)
        iter_variants_505827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 29), 'iter_variants', False)
        # Calling iter_variants(args, kwargs) (line 915)
        iter_variants_call_result_505831 = invoke(stypy.reporting.localization.Localization(__file__, 915, 29), iter_variants_505827, *[inarg_505828, outp_505829], **kwargs_505830)
        
        # Testing the type of a for loop iterable (line 915)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 915, 12), iter_variants_call_result_505831)
        # Getting the type of the for loop variable (line 915)
        for_loop_var_505832 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 915, 12), iter_variants_call_result_505831)
        # Assigning a type to the variable 'inp' (line 915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'inp', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 12), for_loop_var_505832))
        # Assigning a type to the variable 'outp' (line 915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'outp', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 12), for_loop_var_505832))
        # SSA begins for a for statement (line 915)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to add_variant(...): (line 916)
        # Processing the call arguments (line 916)
        # Getting the type of 'func_name' (line 916)
        func_name_505834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 28), 'func_name', False)
        # Getting the type of 'inarg' (line 916)
        inarg_505835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 39), 'inarg', False)
        # Getting the type of 'outarg' (line 916)
        outarg_505836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 46), 'outarg', False)
        # Getting the type of 'ret' (line 916)
        ret_505837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 54), 'ret', False)
        # Getting the type of 'inp' (line 916)
        inp_505838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 59), 'inp', False)
        # Getting the type of 'outp' (line 916)
        outp_505839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 64), 'outp', False)
        # Processing the call keyword arguments (line 916)
        kwargs_505840 = {}
        # Getting the type of 'add_variant' (line 916)
        add_variant_505833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 16), 'add_variant', False)
        # Calling add_variant(args, kwargs) (line 916)
        add_variant_call_result_505841 = invoke(stypy.reporting.localization.Localization(__file__, 916, 16), add_variant_505833, *[func_name_505834, inarg_505835, outarg_505836, ret_505837, inp_505838, outp_505839], **kwargs_505840)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to sort(...): (line 921)
        # Processing the call keyword arguments (line 921)

        @norecursion
        def _stypy_temp_lambda_298(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_298'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_298', 921, 26, True)
            # Passed parameters checking function
            _stypy_temp_lambda_298.stypy_localization = localization
            _stypy_temp_lambda_298.stypy_type_of_self = None
            _stypy_temp_lambda_298.stypy_type_store = module_type_store
            _stypy_temp_lambda_298.stypy_function_name = '_stypy_temp_lambda_298'
            _stypy_temp_lambda_298.stypy_param_names_list = ['v']
            _stypy_temp_lambda_298.stypy_varargs_param_name = None
            _stypy_temp_lambda_298.stypy_kwargs_param_name = None
            _stypy_temp_lambda_298.stypy_call_defaults = defaults
            _stypy_temp_lambda_298.stypy_call_varargs = varargs
            _stypy_temp_lambda_298.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_298', ['v'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_298', ['v'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to cast_order(...): (line 921)
            # Processing the call arguments (line 921)
            
            # Obtaining the type of the subscript
            int_505845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 921, 49), 'int')
            # Getting the type of 'v' (line 921)
            v_505846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 47), 'v', False)
            # Obtaining the member '__getitem__' of a type (line 921)
            getitem___505847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 921, 47), v_505846, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 921)
            subscript_call_result_505848 = invoke(stypy.reporting.localization.Localization(__file__, 921, 47), getitem___505847, int_505845)
            
            # Processing the call keyword arguments (line 921)
            kwargs_505849 = {}
            # Getting the type of 'cast_order' (line 921)
            cast_order_505844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 36), 'cast_order', False)
            # Calling cast_order(args, kwargs) (line 921)
            cast_order_call_result_505850 = invoke(stypy.reporting.localization.Localization(__file__, 921, 36), cast_order_505844, *[subscript_call_result_505848], **kwargs_505849)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 921)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 26), 'stypy_return_type', cast_order_call_result_505850)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_298' in the type store
            # Getting the type of 'stypy_return_type' (line 921)
            stypy_return_type_505851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 26), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_505851)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_298'
            return stypy_return_type_505851

        # Assigning a type to the variable '_stypy_temp_lambda_298' (line 921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 26), '_stypy_temp_lambda_298', _stypy_temp_lambda_298)
        # Getting the type of '_stypy_temp_lambda_298' (line 921)
        _stypy_temp_lambda_298_505852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 26), '_stypy_temp_lambda_298')
        keyword_505853 = _stypy_temp_lambda_298_505852
        kwargs_505854 = {'key': keyword_505853}
        # Getting the type of 'variants' (line 921)
        variants_505842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'variants', False)
        # Obtaining the member 'sort' of a type (line 921)
        sort_505843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 921, 8), variants_505842, 'sort')
        # Calling sort(args, kwargs) (line 921)
        sort_call_result_505855 = invoke(stypy.reporting.localization.Localization(__file__, 921, 8), sort_505843, *[], **kwargs_505854)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 923)
        tuple_505856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 923, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 923)
        # Adding element type (line 923)
        # Getting the type of 'variants' (line 923)
        variants_505857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 15), 'variants')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 923, 15), tuple_505856, variants_505857)
        # Adding element type (line 923)
        # Getting the type of 'inarg_num' (line 923)
        inarg_num_505858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 25), 'inarg_num')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 923, 15), tuple_505856, inarg_num_505858)
        # Adding element type (line 923)
        # Getting the type of 'outarg_num' (line 923)
        outarg_num_505859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 36), 'outarg_num')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 923, 15), tuple_505856, outarg_num_505859)
        
        # Assigning a type to the variable 'stypy_return_type' (line 923)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 923, 8), 'stypy_return_type', tuple_505856)
        
        # ################# End of '_get_signatures_and_loops(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_signatures_and_loops' in the type store
        # Getting the type of 'stypy_return_type' (line 876)
        stypy_return_type_505860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_505860)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_signatures_and_loops'
        return stypy_return_type_505860


    @norecursion
    def generate(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'generate'
        module_type_store = module_type_store.open_function_context('generate', 925, 4, False)
        # Assigning a type to the variable 'self' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Ufunc.generate.__dict__.__setitem__('stypy_localization', localization)
        Ufunc.generate.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Ufunc.generate.__dict__.__setitem__('stypy_type_store', module_type_store)
        Ufunc.generate.__dict__.__setitem__('stypy_function_name', 'Ufunc.generate')
        Ufunc.generate.__dict__.__setitem__('stypy_param_names_list', ['all_loops'])
        Ufunc.generate.__dict__.__setitem__('stypy_varargs_param_name', None)
        Ufunc.generate.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Ufunc.generate.__dict__.__setitem__('stypy_call_defaults', defaults)
        Ufunc.generate.__dict__.__setitem__('stypy_call_varargs', varargs)
        Ufunc.generate.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Ufunc.generate.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Ufunc.generate', ['all_loops'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'generate', localization, ['all_loops'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'generate(...)' code ##################

        
        # Assigning a Str to a Name (line 926):
        
        # Assigning a Str to a Name (line 926):
        str_505861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 19), 'str', '')
        # Assigning a type to the variable 'toplevel' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 8), 'toplevel', str_505861)
        
        # Assigning a Call to a Tuple (line 928):
        
        # Assigning a Subscript to a Name (line 928):
        
        # Obtaining the type of the subscript
        int_505862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 8), 'int')
        
        # Call to _get_signatures_and_loops(...): (line 928)
        # Processing the call arguments (line 928)
        # Getting the type of 'all_loops' (line 928)
        all_loops_505865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 73), 'all_loops', False)
        # Processing the call keyword arguments (line 928)
        kwargs_505866 = {}
        # Getting the type of 'self' (line 928)
        self_505863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 42), 'self', False)
        # Obtaining the member '_get_signatures_and_loops' of a type (line 928)
        _get_signatures_and_loops_505864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 42), self_505863, '_get_signatures_and_loops')
        # Calling _get_signatures_and_loops(args, kwargs) (line 928)
        _get_signatures_and_loops_call_result_505867 = invoke(stypy.reporting.localization.Localization(__file__, 928, 42), _get_signatures_and_loops_505864, *[all_loops_505865], **kwargs_505866)
        
        # Obtaining the member '__getitem__' of a type (line 928)
        getitem___505868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 8), _get_signatures_and_loops_call_result_505867, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 928)
        subscript_call_result_505869 = invoke(stypy.reporting.localization.Localization(__file__, 928, 8), getitem___505868, int_505862)
        
        # Assigning a type to the variable 'tuple_var_assignment_503918' (line 928)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'tuple_var_assignment_503918', subscript_call_result_505869)
        
        # Assigning a Subscript to a Name (line 928):
        
        # Obtaining the type of the subscript
        int_505870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 8), 'int')
        
        # Call to _get_signatures_and_loops(...): (line 928)
        # Processing the call arguments (line 928)
        # Getting the type of 'all_loops' (line 928)
        all_loops_505873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 73), 'all_loops', False)
        # Processing the call keyword arguments (line 928)
        kwargs_505874 = {}
        # Getting the type of 'self' (line 928)
        self_505871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 42), 'self', False)
        # Obtaining the member '_get_signatures_and_loops' of a type (line 928)
        _get_signatures_and_loops_505872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 42), self_505871, '_get_signatures_and_loops')
        # Calling _get_signatures_and_loops(args, kwargs) (line 928)
        _get_signatures_and_loops_call_result_505875 = invoke(stypy.reporting.localization.Localization(__file__, 928, 42), _get_signatures_and_loops_505872, *[all_loops_505873], **kwargs_505874)
        
        # Obtaining the member '__getitem__' of a type (line 928)
        getitem___505876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 8), _get_signatures_and_loops_call_result_505875, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 928)
        subscript_call_result_505877 = invoke(stypy.reporting.localization.Localization(__file__, 928, 8), getitem___505876, int_505870)
        
        # Assigning a type to the variable 'tuple_var_assignment_503919' (line 928)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'tuple_var_assignment_503919', subscript_call_result_505877)
        
        # Assigning a Subscript to a Name (line 928):
        
        # Obtaining the type of the subscript
        int_505878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 8), 'int')
        
        # Call to _get_signatures_and_loops(...): (line 928)
        # Processing the call arguments (line 928)
        # Getting the type of 'all_loops' (line 928)
        all_loops_505881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 73), 'all_loops', False)
        # Processing the call keyword arguments (line 928)
        kwargs_505882 = {}
        # Getting the type of 'self' (line 928)
        self_505879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 42), 'self', False)
        # Obtaining the member '_get_signatures_and_loops' of a type (line 928)
        _get_signatures_and_loops_505880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 42), self_505879, '_get_signatures_and_loops')
        # Calling _get_signatures_and_loops(args, kwargs) (line 928)
        _get_signatures_and_loops_call_result_505883 = invoke(stypy.reporting.localization.Localization(__file__, 928, 42), _get_signatures_and_loops_505880, *[all_loops_505881], **kwargs_505882)
        
        # Obtaining the member '__getitem__' of a type (line 928)
        getitem___505884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 8), _get_signatures_and_loops_call_result_505883, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 928)
        subscript_call_result_505885 = invoke(stypy.reporting.localization.Localization(__file__, 928, 8), getitem___505884, int_505878)
        
        # Assigning a type to the variable 'tuple_var_assignment_503920' (line 928)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'tuple_var_assignment_503920', subscript_call_result_505885)
        
        # Assigning a Name to a Name (line 928):
        # Getting the type of 'tuple_var_assignment_503918' (line 928)
        tuple_var_assignment_503918_505886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'tuple_var_assignment_503918')
        # Assigning a type to the variable 'variants' (line 928)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'variants', tuple_var_assignment_503918_505886)
        
        # Assigning a Name to a Name (line 928):
        # Getting the type of 'tuple_var_assignment_503919' (line 928)
        tuple_var_assignment_503919_505887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'tuple_var_assignment_503919')
        # Assigning a type to the variable 'inarg_num' (line 928)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 928, 18), 'inarg_num', tuple_var_assignment_503919_505887)
        
        # Assigning a Name to a Name (line 928):
        # Getting the type of 'tuple_var_assignment_503920' (line 928)
        tuple_var_assignment_503920_505888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'tuple_var_assignment_503920')
        # Assigning a type to the variable 'outarg_num' (line 928)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 928, 29), 'outarg_num', tuple_var_assignment_503920_505888)
        
        # Assigning a List to a Name (line 930):
        
        # Assigning a List to a Name (line 930):
        
        # Obtaining an instance of the builtin type 'list' (line 930)
        list_505889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 930)
        
        # Assigning a type to the variable 'loops' (line 930)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 930, 8), 'loops', list_505889)
        
        # Assigning a List to a Name (line 931):
        
        # Assigning a List to a Name (line 931):
        
        # Obtaining an instance of the builtin type 'list' (line 931)
        list_505890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 931)
        
        # Assigning a type to the variable 'funcs' (line 931)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 931, 8), 'funcs', list_505890)
        
        # Assigning a List to a Name (line 932):
        
        # Assigning a List to a Name (line 932):
        
        # Obtaining an instance of the builtin type 'list' (line 932)
        list_505891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 932)
        
        # Assigning a type to the variable 'types' (line 932)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 932, 8), 'types', list_505891)
        
        # Getting the type of 'variants' (line 934)
        variants_505892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 53), 'variants')
        # Testing the type of a for loop iterable (line 934)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 934, 8), variants_505892)
        # Getting the type of the for loop variable (line 934)
        for_loop_var_505893 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 934, 8), variants_505892)
        # Assigning a type to the variable 'func_name' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'func_name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 8), for_loop_var_505893))
        # Assigning a type to the variable 'loop_name' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'loop_name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 8), for_loop_var_505893))
        # Assigning a type to the variable 'inputs' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'inputs', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 8), for_loop_var_505893))
        # Assigning a type to the variable 'outputs' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'outputs', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 8), for_loop_var_505893))
        # SSA begins for a for statement (line 934)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Getting the type of 'inputs' (line 935)
        inputs_505894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 21), 'inputs')
        # Testing the type of a for loop iterable (line 935)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 935, 12), inputs_505894)
        # Getting the type of the for loop variable (line 935)
        for_loop_var_505895 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 935, 12), inputs_505894)
        # Assigning a type to the variable 'x' (line 935)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 935, 12), 'x', for_loop_var_505895)
        # SSA begins for a for statement (line 935)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 936)
        # Processing the call arguments (line 936)
        
        # Obtaining the type of the subscript
        # Getting the type of 'x' (line 936)
        x_505898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 40), 'x', False)
        # Getting the type of 'TYPE_NAMES' (line 936)
        TYPE_NAMES_505899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 29), 'TYPE_NAMES', False)
        # Obtaining the member '__getitem__' of a type (line 936)
        getitem___505900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 936, 29), TYPE_NAMES_505899, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 936)
        subscript_call_result_505901 = invoke(stypy.reporting.localization.Localization(__file__, 936, 29), getitem___505900, x_505898)
        
        # Processing the call keyword arguments (line 936)
        kwargs_505902 = {}
        # Getting the type of 'types' (line 936)
        types_505896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 16), 'types', False)
        # Obtaining the member 'append' of a type (line 936)
        append_505897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 936, 16), types_505896, 'append')
        # Calling append(args, kwargs) (line 936)
        append_call_result_505903 = invoke(stypy.reporting.localization.Localization(__file__, 936, 16), append_505897, *[subscript_call_result_505901], **kwargs_505902)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'outputs' (line 937)
        outputs_505904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 21), 'outputs')
        # Testing the type of a for loop iterable (line 937)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 937, 12), outputs_505904)
        # Getting the type of the for loop variable (line 937)
        for_loop_var_505905 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 937, 12), outputs_505904)
        # Assigning a type to the variable 'x' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 12), 'x', for_loop_var_505905)
        # SSA begins for a for statement (line 937)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 938)
        # Processing the call arguments (line 938)
        
        # Obtaining the type of the subscript
        # Getting the type of 'x' (line 938)
        x_505908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 40), 'x', False)
        # Getting the type of 'TYPE_NAMES' (line 938)
        TYPE_NAMES_505909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 29), 'TYPE_NAMES', False)
        # Obtaining the member '__getitem__' of a type (line 938)
        getitem___505910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 29), TYPE_NAMES_505909, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 938)
        subscript_call_result_505911 = invoke(stypy.reporting.localization.Localization(__file__, 938, 29), getitem___505910, x_505908)
        
        # Processing the call keyword arguments (line 938)
        kwargs_505912 = {}
        # Getting the type of 'types' (line 938)
        types_505906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 16), 'types', False)
        # Obtaining the member 'append' of a type (line 938)
        append_505907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 16), types_505906, 'append')
        # Calling append(args, kwargs) (line 938)
        append_call_result_505913 = invoke(stypy.reporting.localization.Localization(__file__, 938, 16), append_505907, *[subscript_call_result_505911], **kwargs_505912)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to append(...): (line 939)
        # Processing the call arguments (line 939)
        # Getting the type of 'loop_name' (line 939)
        loop_name_505916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 25), 'loop_name', False)
        # Processing the call keyword arguments (line 939)
        kwargs_505917 = {}
        # Getting the type of 'loops' (line 939)
        loops_505914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 12), 'loops', False)
        # Obtaining the member 'append' of a type (line 939)
        append_505915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 939, 12), loops_505914, 'append')
        # Calling append(args, kwargs) (line 939)
        append_call_result_505918 = invoke(stypy.reporting.localization.Localization(__file__, 939, 12), append_505915, *[loop_name_505916], **kwargs_505917)
        
        
        # Call to append(...): (line 940)
        # Processing the call arguments (line 940)
        # Getting the type of 'func_name' (line 940)
        func_name_505921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 25), 'func_name', False)
        # Processing the call keyword arguments (line 940)
        kwargs_505922 = {}
        # Getting the type of 'funcs' (line 940)
        funcs_505919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 12), 'funcs', False)
        # Obtaining the member 'append' of a type (line 940)
        append_505920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 940, 12), funcs_505919, 'append')
        # Calling append(args, kwargs) (line 940)
        append_call_result_505923 = invoke(stypy.reporting.localization.Localization(__file__, 940, 12), append_505920, *[func_name_505921], **kwargs_505922)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'toplevel' (line 942)
        toplevel_505924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 8), 'toplevel')
        str_505925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 20), 'str', 'cdef np.PyUFuncGenericFunction ufunc_%s_loops[%d]\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 942)
        tuple_505926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 77), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 942)
        # Adding element type (line 942)
        # Getting the type of 'self' (line 942)
        self_505927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 77), 'self')
        # Obtaining the member 'name' of a type (line 942)
        name_505928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 942, 77), self_505927, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 942, 77), tuple_505926, name_505928)
        # Adding element type (line 942)
        
        # Call to len(...): (line 942)
        # Processing the call arguments (line 942)
        # Getting the type of 'loops' (line 942)
        loops_505930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 92), 'loops', False)
        # Processing the call keyword arguments (line 942)
        kwargs_505931 = {}
        # Getting the type of 'len' (line 942)
        len_505929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 88), 'len', False)
        # Calling len(args, kwargs) (line 942)
        len_call_result_505932 = invoke(stypy.reporting.localization.Localization(__file__, 942, 88), len_505929, *[loops_505930], **kwargs_505931)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 942, 77), tuple_505926, len_call_result_505932)
        
        # Applying the binary operator '%' (line 942)
        result_mod_505933 = python_operator(stypy.reporting.localization.Localization(__file__, 942, 20), '%', str_505925, tuple_505926)
        
        # Applying the binary operator '+=' (line 942)
        result_iadd_505934 = python_operator(stypy.reporting.localization.Localization(__file__, 942, 8), '+=', toplevel_505924, result_mod_505933)
        # Assigning a type to the variable 'toplevel' (line 942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 942, 8), 'toplevel', result_iadd_505934)
        
        
        # Getting the type of 'toplevel' (line 943)
        toplevel_505935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 8), 'toplevel')
        str_505936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 20), 'str', 'cdef void *ufunc_%s_ptr[%d]\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 943)
        tuple_505937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 55), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 943)
        # Adding element type (line 943)
        # Getting the type of 'self' (line 943)
        self_505938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 55), 'self')
        # Obtaining the member 'name' of a type (line 943)
        name_505939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 943, 55), self_505938, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 943, 55), tuple_505937, name_505939)
        # Adding element type (line 943)
        int_505940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 66), 'int')
        
        # Call to len(...): (line 943)
        # Processing the call arguments (line 943)
        # Getting the type of 'funcs' (line 943)
        funcs_505942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 72), 'funcs', False)
        # Processing the call keyword arguments (line 943)
        kwargs_505943 = {}
        # Getting the type of 'len' (line 943)
        len_505941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 68), 'len', False)
        # Calling len(args, kwargs) (line 943)
        len_call_result_505944 = invoke(stypy.reporting.localization.Localization(__file__, 943, 68), len_505941, *[funcs_505942], **kwargs_505943)
        
        # Applying the binary operator '*' (line 943)
        result_mul_505945 = python_operator(stypy.reporting.localization.Localization(__file__, 943, 66), '*', int_505940, len_call_result_505944)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 943, 55), tuple_505937, result_mul_505945)
        
        # Applying the binary operator '%' (line 943)
        result_mod_505946 = python_operator(stypy.reporting.localization.Localization(__file__, 943, 20), '%', str_505936, tuple_505937)
        
        # Applying the binary operator '+=' (line 943)
        result_iadd_505947 = python_operator(stypy.reporting.localization.Localization(__file__, 943, 8), '+=', toplevel_505935, result_mod_505946)
        # Assigning a type to the variable 'toplevel' (line 943)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 943, 8), 'toplevel', result_iadd_505947)
        
        
        # Getting the type of 'toplevel' (line 944)
        toplevel_505948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 8), 'toplevel')
        str_505949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 20), 'str', 'cdef void *ufunc_%s_data[%d]\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 944)
        tuple_505950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 944)
        # Adding element type (line 944)
        # Getting the type of 'self' (line 944)
        self_505951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 56), 'self')
        # Obtaining the member 'name' of a type (line 944)
        name_505952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 944, 56), self_505951, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 944, 56), tuple_505950, name_505952)
        # Adding element type (line 944)
        
        # Call to len(...): (line 944)
        # Processing the call arguments (line 944)
        # Getting the type of 'funcs' (line 944)
        funcs_505954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 71), 'funcs', False)
        # Processing the call keyword arguments (line 944)
        kwargs_505955 = {}
        # Getting the type of 'len' (line 944)
        len_505953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 67), 'len', False)
        # Calling len(args, kwargs) (line 944)
        len_call_result_505956 = invoke(stypy.reporting.localization.Localization(__file__, 944, 67), len_505953, *[funcs_505954], **kwargs_505955)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 944, 56), tuple_505950, len_call_result_505956)
        
        # Applying the binary operator '%' (line 944)
        result_mod_505957 = python_operator(stypy.reporting.localization.Localization(__file__, 944, 20), '%', str_505949, tuple_505950)
        
        # Applying the binary operator '+=' (line 944)
        result_iadd_505958 = python_operator(stypy.reporting.localization.Localization(__file__, 944, 8), '+=', toplevel_505948, result_mod_505957)
        # Assigning a type to the variable 'toplevel' (line 944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 944, 8), 'toplevel', result_iadd_505958)
        
        
        # Getting the type of 'toplevel' (line 945)
        toplevel_505959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 8), 'toplevel')
        str_505960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 20), 'str', 'cdef char ufunc_%s_types[%d]\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 945)
        tuple_505961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 945)
        # Adding element type (line 945)
        # Getting the type of 'self' (line 945)
        self_505962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 56), 'self')
        # Obtaining the member 'name' of a type (line 945)
        name_505963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 945, 56), self_505962, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 56), tuple_505961, name_505963)
        # Adding element type (line 945)
        
        # Call to len(...): (line 945)
        # Processing the call arguments (line 945)
        # Getting the type of 'types' (line 945)
        types_505965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 71), 'types', False)
        # Processing the call keyword arguments (line 945)
        kwargs_505966 = {}
        # Getting the type of 'len' (line 945)
        len_505964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 67), 'len', False)
        # Calling len(args, kwargs) (line 945)
        len_call_result_505967 = invoke(stypy.reporting.localization.Localization(__file__, 945, 67), len_505964, *[types_505965], **kwargs_505966)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 56), tuple_505961, len_call_result_505967)
        
        # Applying the binary operator '%' (line 945)
        result_mod_505968 = python_operator(stypy.reporting.localization.Localization(__file__, 945, 20), '%', str_505960, tuple_505961)
        
        # Applying the binary operator '+=' (line 945)
        result_iadd_505969 = python_operator(stypy.reporting.localization.Localization(__file__, 945, 8), '+=', toplevel_505959, result_mod_505968)
        # Assigning a type to the variable 'toplevel' (line 945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 8), 'toplevel', result_iadd_505969)
        
        
        # Getting the type of 'toplevel' (line 946)
        toplevel_505970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'toplevel')
        str_505971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 20), 'str', 'cdef char *ufunc_%s_doc = (\n    "%s")\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 947)
        tuple_505972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 12), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 947)
        # Adding element type (line 947)
        # Getting the type of 'self' (line 947)
        self_505973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 12), 'self')
        # Obtaining the member 'name' of a type (line 947)
        name_505974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 947, 12), self_505973, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 947, 12), tuple_505972, name_505974)
        # Adding element type (line 947)
        
        # Call to replace(...): (line 948)
        # Processing the call arguments (line 948)
        str_505988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 71), 'str', '\n')
        str_505989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 77), 'str', '\\n"\n    "')
        # Processing the call keyword arguments (line 948)
        kwargs_505990 = {}
        
        # Call to replace(...): (line 948)
        # Processing the call arguments (line 948)
        str_505983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 51), 'str', '"')
        str_505984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 56), 'str', '\\"')
        # Processing the call keyword arguments (line 948)
        kwargs_505985 = {}
        
        # Call to replace(...): (line 948)
        # Processing the call arguments (line 948)
        str_505978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 29), 'str', '\\')
        str_505979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 35), 'str', '\\\\')
        # Processing the call keyword arguments (line 948)
        kwargs_505980 = {}
        # Getting the type of 'self' (line 948)
        self_505975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 12), 'self', False)
        # Obtaining the member 'doc' of a type (line 948)
        doc_505976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 12), self_505975, 'doc')
        # Obtaining the member 'replace' of a type (line 948)
        replace_505977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 12), doc_505976, 'replace')
        # Calling replace(args, kwargs) (line 948)
        replace_call_result_505981 = invoke(stypy.reporting.localization.Localization(__file__, 948, 12), replace_505977, *[str_505978, str_505979], **kwargs_505980)
        
        # Obtaining the member 'replace' of a type (line 948)
        replace_505982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 12), replace_call_result_505981, 'replace')
        # Calling replace(args, kwargs) (line 948)
        replace_call_result_505986 = invoke(stypy.reporting.localization.Localization(__file__, 948, 12), replace_505982, *[str_505983, str_505984], **kwargs_505985)
        
        # Obtaining the member 'replace' of a type (line 948)
        replace_505987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 12), replace_call_result_505986, 'replace')
        # Calling replace(args, kwargs) (line 948)
        replace_call_result_505991 = invoke(stypy.reporting.localization.Localization(__file__, 948, 12), replace_505987, *[str_505988, str_505989], **kwargs_505990)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 947, 12), tuple_505972, replace_call_result_505991)
        
        # Applying the binary operator '%' (line 946)
        result_mod_505992 = python_operator(stypy.reporting.localization.Localization(__file__, 946, 20), '%', str_505971, tuple_505972)
        
        # Applying the binary operator '+=' (line 946)
        result_iadd_505993 = python_operator(stypy.reporting.localization.Localization(__file__, 946, 8), '+=', toplevel_505970, result_mod_505992)
        # Assigning a type to the variable 'toplevel' (line 946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'toplevel', result_iadd_505993)
        
        
        
        # Call to enumerate(...): (line 951)
        # Processing the call arguments (line 951)
        # Getting the type of 'loops' (line 951)
        loops_505995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 37), 'loops', False)
        # Processing the call keyword arguments (line 951)
        kwargs_505996 = {}
        # Getting the type of 'enumerate' (line 951)
        enumerate_505994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 27), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 951)
        enumerate_call_result_505997 = invoke(stypy.reporting.localization.Localization(__file__, 951, 27), enumerate_505994, *[loops_505995], **kwargs_505996)
        
        # Testing the type of a for loop iterable (line 951)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 951, 8), enumerate_call_result_505997)
        # Getting the type of the for loop variable (line 951)
        for_loop_var_505998 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 951, 8), enumerate_call_result_505997)
        # Assigning a type to the variable 'j' (line 951)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 951, 8), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 8), for_loop_var_505998))
        # Assigning a type to the variable 'function' (line 951)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 951, 8), 'function', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 8), for_loop_var_505998))
        # SSA begins for a for statement (line 951)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Getting the type of 'toplevel' (line 952)
        toplevel_505999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 12), 'toplevel')
        str_506000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 952, 24), 'str', 'ufunc_%s_loops[%d] = <np.PyUFuncGenericFunction>%s\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 952)
        tuple_506001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 952, 82), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 952)
        # Adding element type (line 952)
        # Getting the type of 'self' (line 952)
        self_506002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 82), 'self')
        # Obtaining the member 'name' of a type (line 952)
        name_506003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 952, 82), self_506002, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 952, 82), tuple_506001, name_506003)
        # Adding element type (line 952)
        # Getting the type of 'j' (line 952)
        j_506004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 93), 'j')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 952, 82), tuple_506001, j_506004)
        # Adding element type (line 952)
        # Getting the type of 'function' (line 952)
        function_506005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 96), 'function')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 952, 82), tuple_506001, function_506005)
        
        # Applying the binary operator '%' (line 952)
        result_mod_506006 = python_operator(stypy.reporting.localization.Localization(__file__, 952, 24), '%', str_506000, tuple_506001)
        
        # Applying the binary operator '+=' (line 952)
        result_iadd_506007 = python_operator(stypy.reporting.localization.Localization(__file__, 952, 12), '+=', toplevel_505999, result_mod_506006)
        # Assigning a type to the variable 'toplevel' (line 952)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 952, 12), 'toplevel', result_iadd_506007)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to enumerate(...): (line 953)
        # Processing the call arguments (line 953)
        # Getting the type of 'types' (line 953)
        types_506009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 33), 'types', False)
        # Processing the call keyword arguments (line 953)
        kwargs_506010 = {}
        # Getting the type of 'enumerate' (line 953)
        enumerate_506008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 23), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 953)
        enumerate_call_result_506011 = invoke(stypy.reporting.localization.Localization(__file__, 953, 23), enumerate_506008, *[types_506009], **kwargs_506010)
        
        # Testing the type of a for loop iterable (line 953)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 953, 8), enumerate_call_result_506011)
        # Getting the type of the for loop variable (line 953)
        for_loop_var_506012 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 953, 8), enumerate_call_result_506011)
        # Assigning a type to the variable 'j' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 953, 8), for_loop_var_506012))
        # Assigning a type to the variable 'type' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'type', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 953, 8), for_loop_var_506012))
        # SSA begins for a for statement (line 953)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Getting the type of 'toplevel' (line 954)
        toplevel_506013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 12), 'toplevel')
        str_506014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 24), 'str', 'ufunc_%s_types[%d] = <char>%s\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 954)
        tuple_506015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 61), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 954)
        # Adding element type (line 954)
        # Getting the type of 'self' (line 954)
        self_506016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 61), 'self')
        # Obtaining the member 'name' of a type (line 954)
        name_506017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 61), self_506016, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 954, 61), tuple_506015, name_506017)
        # Adding element type (line 954)
        # Getting the type of 'j' (line 954)
        j_506018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 72), 'j')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 954, 61), tuple_506015, j_506018)
        # Adding element type (line 954)
        # Getting the type of 'type' (line 954)
        type_506019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 75), 'type')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 954, 61), tuple_506015, type_506019)
        
        # Applying the binary operator '%' (line 954)
        result_mod_506020 = python_operator(stypy.reporting.localization.Localization(__file__, 954, 24), '%', str_506014, tuple_506015)
        
        # Applying the binary operator '+=' (line 954)
        result_iadd_506021 = python_operator(stypy.reporting.localization.Localization(__file__, 954, 12), '+=', toplevel_506013, result_mod_506020)
        # Assigning a type to the variable 'toplevel' (line 954)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 954, 12), 'toplevel', result_iadd_506021)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to enumerate(...): (line 955)
        # Processing the call arguments (line 955)
        # Getting the type of 'funcs' (line 955)
        funcs_506023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 33), 'funcs', False)
        # Processing the call keyword arguments (line 955)
        kwargs_506024 = {}
        # Getting the type of 'enumerate' (line 955)
        enumerate_506022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 23), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 955)
        enumerate_call_result_506025 = invoke(stypy.reporting.localization.Localization(__file__, 955, 23), enumerate_506022, *[funcs_506023], **kwargs_506024)
        
        # Testing the type of a for loop iterable (line 955)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 955, 8), enumerate_call_result_506025)
        # Getting the type of the for loop variable (line 955)
        for_loop_var_506026 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 955, 8), enumerate_call_result_506025)
        # Assigning a type to the variable 'j' (line 955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 8), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 955, 8), for_loop_var_506026))
        # Assigning a type to the variable 'func' (line 955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 8), 'func', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 955, 8), for_loop_var_506026))
        # SSA begins for a for statement (line 955)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Getting the type of 'toplevel' (line 956)
        toplevel_506027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 12), 'toplevel')
        str_506028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 956, 24), 'str', 'ufunc_%s_ptr[2*%d] = <void*>%s\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 956)
        tuple_506029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 956, 62), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 956)
        # Adding element type (line 956)
        # Getting the type of 'self' (line 956)
        self_506030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 62), 'self')
        # Obtaining the member 'name' of a type (line 956)
        name_506031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 62), self_506030, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 956, 62), tuple_506029, name_506031)
        # Adding element type (line 956)
        # Getting the type of 'j' (line 956)
        j_506032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 73), 'j')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 956, 62), tuple_506029, j_506032)
        # Adding element type (line 956)
        
        # Call to cython_func_name(...): (line 957)
        # Processing the call arguments (line 957)
        # Getting the type of 'func' (line 957)
        func_506035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 84), 'func', False)
        # Processing the call keyword arguments (line 957)
        # Getting the type of 'True' (line 957)
        True_506036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 102), 'True', False)
        keyword_506037 = True_506036
        kwargs_506038 = {'specialized': keyword_506037}
        # Getting the type of 'self' (line 957)
        self_506033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 62), 'self', False)
        # Obtaining the member 'cython_func_name' of a type (line 957)
        cython_func_name_506034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 62), self_506033, 'cython_func_name')
        # Calling cython_func_name(args, kwargs) (line 957)
        cython_func_name_call_result_506039 = invoke(stypy.reporting.localization.Localization(__file__, 957, 62), cython_func_name_506034, *[func_506035], **kwargs_506038)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 956, 62), tuple_506029, cython_func_name_call_result_506039)
        
        # Applying the binary operator '%' (line 956)
        result_mod_506040 = python_operator(stypy.reporting.localization.Localization(__file__, 956, 24), '%', str_506028, tuple_506029)
        
        # Applying the binary operator '+=' (line 956)
        result_iadd_506041 = python_operator(stypy.reporting.localization.Localization(__file__, 956, 12), '+=', toplevel_506027, result_mod_506040)
        # Assigning a type to the variable 'toplevel' (line 956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 956, 12), 'toplevel', result_iadd_506041)
        
        
        # Getting the type of 'toplevel' (line 958)
        toplevel_506042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 12), 'toplevel')
        str_506043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 24), 'str', 'ufunc_%s_ptr[2*%d+1] = <void*>(<char*>"%s")\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 958)
        tuple_506044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 77), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 958)
        # Adding element type (line 958)
        # Getting the type of 'self' (line 958)
        self_506045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 77), 'self')
        # Obtaining the member 'name' of a type (line 958)
        name_506046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 77), self_506045, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 77), tuple_506044, name_506046)
        # Adding element type (line 958)
        # Getting the type of 'j' (line 958)
        j_506047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 88), 'j')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 77), tuple_506044, j_506047)
        # Adding element type (line 958)
        # Getting the type of 'self' (line 959)
        self_506048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 77), 'self')
        # Obtaining the member 'name' of a type (line 959)
        name_506049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 959, 77), self_506048, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 958, 77), tuple_506044, name_506049)
        
        # Applying the binary operator '%' (line 958)
        result_mod_506050 = python_operator(stypy.reporting.localization.Localization(__file__, 958, 24), '%', str_506043, tuple_506044)
        
        # Applying the binary operator '+=' (line 958)
        result_iadd_506051 = python_operator(stypy.reporting.localization.Localization(__file__, 958, 12), '+=', toplevel_506042, result_mod_506050)
        # Assigning a type to the variable 'toplevel' (line 958)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 958, 12), 'toplevel', result_iadd_506051)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to enumerate(...): (line 960)
        # Processing the call arguments (line 960)
        # Getting the type of 'funcs' (line 960)
        funcs_506053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 33), 'funcs', False)
        # Processing the call keyword arguments (line 960)
        kwargs_506054 = {}
        # Getting the type of 'enumerate' (line 960)
        enumerate_506052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 23), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 960)
        enumerate_call_result_506055 = invoke(stypy.reporting.localization.Localization(__file__, 960, 23), enumerate_506052, *[funcs_506053], **kwargs_506054)
        
        # Testing the type of a for loop iterable (line 960)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 960, 8), enumerate_call_result_506055)
        # Getting the type of the for loop variable (line 960)
        for_loop_var_506056 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 960, 8), enumerate_call_result_506055)
        # Assigning a type to the variable 'j' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 960, 8), for_loop_var_506056))
        # Assigning a type to the variable 'func' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'func', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 960, 8), for_loop_var_506056))
        # SSA begins for a for statement (line 960)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Getting the type of 'toplevel' (line 961)
        toplevel_506057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 12), 'toplevel')
        str_506058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 24), 'str', 'ufunc_%s_data[%d] = &ufunc_%s_ptr[2*%d]\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 962)
        tuple_506059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 962)
        # Adding element type (line 962)
        # Getting the type of 'self' (line 962)
        self_506060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 16), 'self')
        # Obtaining the member 'name' of a type (line 962)
        name_506061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 962, 16), self_506060, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 962, 16), tuple_506059, name_506061)
        # Adding element type (line 962)
        # Getting the type of 'j' (line 962)
        j_506062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 27), 'j')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 962, 16), tuple_506059, j_506062)
        # Adding element type (line 962)
        # Getting the type of 'self' (line 962)
        self_506063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 30), 'self')
        # Obtaining the member 'name' of a type (line 962)
        name_506064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 962, 30), self_506063, 'name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 962, 16), tuple_506059, name_506064)
        # Adding element type (line 962)
        # Getting the type of 'j' (line 962)
        j_506065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 41), 'j')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 962, 16), tuple_506059, j_506065)
        
        # Applying the binary operator '%' (line 961)
        result_mod_506066 = python_operator(stypy.reporting.localization.Localization(__file__, 961, 24), '%', str_506058, tuple_506059)
        
        # Applying the binary operator '+=' (line 961)
        result_iadd_506067 = python_operator(stypy.reporting.localization.Localization(__file__, 961, 12), '+=', toplevel_506057, result_mod_506066)
        # Assigning a type to the variable 'toplevel' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 12), 'toplevel', result_iadd_506067)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'toplevel' (line 964)
        toplevel_506068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 8), 'toplevel')
        
        # Call to replace(...): (line 964)
        # Processing the call arguments (line 964)
        str_506083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 31), 'str', '@')
        # Getting the type of 'self' (line 968)
        self_506084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 36), 'self', False)
        # Obtaining the member 'name' of a type (line 968)
        name_506085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 968, 36), self_506084, 'name')
        # Processing the call keyword arguments (line 964)
        kwargs_506086 = {}
        str_506069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 964, 21), 'str', '@ = np.PyUFunc_FromFuncAndData(ufunc_@_loops, ufunc_@_data, ufunc_@_types, %d, %d, %d, 0, "@", ufunc_@_doc, 0)\n')
        
        # Obtaining an instance of the builtin type 'tuple' (line 966)
        tuple_506070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 966)
        # Adding element type (line 966)
        
        # Call to len(...): (line 966)
        # Processing the call arguments (line 966)
        # Getting the type of 'types' (line 966)
        types_506072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 53), 'types', False)
        # Processing the call keyword arguments (line 966)
        kwargs_506073 = {}
        # Getting the type of 'len' (line 966)
        len_506071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 49), 'len', False)
        # Calling len(args, kwargs) (line 966)
        len_call_result_506074 = invoke(stypy.reporting.localization.Localization(__file__, 966, 49), len_506071, *[types_506072], **kwargs_506073)
        
        # Getting the type of 'inarg_num' (line 966)
        inarg_num_506075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 61), 'inarg_num', False)
        # Getting the type of 'outarg_num' (line 966)
        outarg_num_506076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 71), 'outarg_num', False)
        # Applying the binary operator '+' (line 966)
        result_add_506077 = python_operator(stypy.reporting.localization.Localization(__file__, 966, 61), '+', inarg_num_506075, outarg_num_506076)
        
        # Applying the binary operator 'div' (line 966)
        result_div_506078 = python_operator(stypy.reporting.localization.Localization(__file__, 966, 49), 'div', len_call_result_506074, result_add_506077)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 966, 49), tuple_506070, result_div_506078)
        # Adding element type (line 966)
        # Getting the type of 'inarg_num' (line 967)
        inarg_num_506079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 49), 'inarg_num', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 966, 49), tuple_506070, inarg_num_506079)
        # Adding element type (line 966)
        # Getting the type of 'outarg_num' (line 967)
        outarg_num_506080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 60), 'outarg_num', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 966, 49), tuple_506070, outarg_num_506080)
        
        # Applying the binary operator '%' (line 964)
        result_mod_506081 = python_operator(stypy.reporting.localization.Localization(__file__, 964, 21), '%', str_506069, tuple_506070)
        
        # Obtaining the member 'replace' of a type (line 964)
        replace_506082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 964, 21), result_mod_506081, 'replace')
        # Calling replace(args, kwargs) (line 964)
        replace_call_result_506087 = invoke(stypy.reporting.localization.Localization(__file__, 964, 21), replace_506082, *[str_506083, name_506085], **kwargs_506086)
        
        # Applying the binary operator '+=' (line 964)
        result_iadd_506088 = python_operator(stypy.reporting.localization.Localization(__file__, 964, 8), '+=', toplevel_506068, replace_call_result_506087)
        # Assigning a type to the variable 'toplevel' (line 964)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 964, 8), 'toplevel', result_iadd_506088)
        
        # Getting the type of 'toplevel' (line 970)
        toplevel_506089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 15), 'toplevel')
        # Assigning a type to the variable 'stypy_return_type' (line 970)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 970, 8), 'stypy_return_type', toplevel_506089)
        
        # ################# End of 'generate(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'generate' in the type store
        # Getting the type of 'stypy_return_type' (line 925)
        stypy_return_type_506090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_506090)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'generate'
        return stypy_return_type_506090


# Assigning a type to the variable 'Ufunc' (line 842)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 0), 'Ufunc', Ufunc)
# Declaration of the 'FusedFunc' class
# Getting the type of 'Func' (line 973)
Func_506091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 16), 'Func')

class FusedFunc(Func_506091, ):
    str_506092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, (-1)), 'str', '\n    Generate code for a fused-type special function that can be\n    cimported in cython.\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 979, 4, False)
        # Assigning a type to the variable 'self' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc.__init__', ['name', 'signatures', 'headers'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['name', 'signatures', 'headers'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 980)
        # Processing the call arguments (line 980)
        # Getting the type of 'name' (line 980)
        name_506099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 40), 'name', False)
        # Getting the type of 'signatures' (line 980)
        signatures_506100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 46), 'signatures', False)
        # Getting the type of 'headers' (line 980)
        headers_506101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 58), 'headers', False)
        # Processing the call keyword arguments (line 980)
        kwargs_506102 = {}
        
        # Call to super(...): (line 980)
        # Processing the call arguments (line 980)
        # Getting the type of 'FusedFunc' (line 980)
        FusedFunc_506094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 14), 'FusedFunc', False)
        # Getting the type of 'self' (line 980)
        self_506095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 25), 'self', False)
        # Processing the call keyword arguments (line 980)
        kwargs_506096 = {}
        # Getting the type of 'super' (line 980)
        super_506093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'super', False)
        # Calling super(args, kwargs) (line 980)
        super_call_result_506097 = invoke(stypy.reporting.localization.Localization(__file__, 980, 8), super_506093, *[FusedFunc_506094, self_506095], **kwargs_506096)
        
        # Obtaining the member '__init__' of a type (line 980)
        init___506098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 980, 8), super_call_result_506097, '__init__')
        # Calling __init__(args, kwargs) (line 980)
        init___call_result_506103 = invoke(stypy.reporting.localization.Localization(__file__, 980, 8), init___506098, *[name_506099, signatures_506100, headers_506101], **kwargs_506102)
        
        
        # Assigning a BinOp to a Attribute (line 981):
        
        # Assigning a BinOp to a Attribute (line 981):
        str_506104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 19), 'str', 'See the documentation for scipy.special.')
        # Getting the type of 'self' (line 981)
        self_506105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 64), 'self')
        # Obtaining the member 'name' of a type (line 981)
        name_506106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 64), self_506105, 'name')
        # Applying the binary operator '+' (line 981)
        result_add_506107 = python_operator(stypy.reporting.localization.Localization(__file__, 981, 19), '+', str_506104, name_506106)
        
        # Getting the type of 'self' (line 981)
        self_506108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 8), 'self')
        # Setting the type of the member 'doc' of a type (line 981)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 8), self_506108, 'doc', result_add_506107)
        
        # Assigning a Call to a Tuple (line 983):
        
        # Assigning a Subscript to a Name (line 983):
        
        # Obtaining the type of the subscript
        int_506109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 8), 'int')
        
        # Call to _get_codes(...): (line 983)
        # Processing the call keyword arguments (line 983)
        kwargs_506112 = {}
        # Getting the type of 'self' (line 983)
        self_506110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 38), 'self', False)
        # Obtaining the member '_get_codes' of a type (line 983)
        _get_codes_506111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 38), self_506110, '_get_codes')
        # Calling _get_codes(args, kwargs) (line 983)
        _get_codes_call_result_506113 = invoke(stypy.reporting.localization.Localization(__file__, 983, 38), _get_codes_506111, *[], **kwargs_506112)
        
        # Obtaining the member '__getitem__' of a type (line 983)
        getitem___506114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 8), _get_codes_call_result_506113, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 983)
        subscript_call_result_506115 = invoke(stypy.reporting.localization.Localization(__file__, 983, 8), getitem___506114, int_506109)
        
        # Assigning a type to the variable 'tuple_var_assignment_503921' (line 983)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'tuple_var_assignment_503921', subscript_call_result_506115)
        
        # Assigning a Subscript to a Name (line 983):
        
        # Obtaining the type of the subscript
        int_506116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 8), 'int')
        
        # Call to _get_codes(...): (line 983)
        # Processing the call keyword arguments (line 983)
        kwargs_506119 = {}
        # Getting the type of 'self' (line 983)
        self_506117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 38), 'self', False)
        # Obtaining the member '_get_codes' of a type (line 983)
        _get_codes_506118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 38), self_506117, '_get_codes')
        # Calling _get_codes(args, kwargs) (line 983)
        _get_codes_call_result_506120 = invoke(stypy.reporting.localization.Localization(__file__, 983, 38), _get_codes_506118, *[], **kwargs_506119)
        
        # Obtaining the member '__getitem__' of a type (line 983)
        getitem___506121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 8), _get_codes_call_result_506120, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 983)
        subscript_call_result_506122 = invoke(stypy.reporting.localization.Localization(__file__, 983, 8), getitem___506121, int_506116)
        
        # Assigning a type to the variable 'tuple_var_assignment_503922' (line 983)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'tuple_var_assignment_503922', subscript_call_result_506122)
        
        # Assigning a Name to a Attribute (line 983):
        # Getting the type of 'tuple_var_assignment_503921' (line 983)
        tuple_var_assignment_503921_506123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'tuple_var_assignment_503921')
        # Getting the type of 'self' (line 983)
        self_506124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'self')
        # Setting the type of the member 'incodes' of a type (line 983)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 8), self_506124, 'incodes', tuple_var_assignment_503921_506123)
        
        # Assigning a Name to a Attribute (line 983):
        # Getting the type of 'tuple_var_assignment_503922' (line 983)
        tuple_var_assignment_503922_506125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'tuple_var_assignment_503922')
        # Getting the type of 'self' (line 983)
        self_506126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 22), 'self')
        # Setting the type of the member 'outcodes' of a type (line 983)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 22), self_506126, 'outcodes', tuple_var_assignment_503922_506125)
        
        # Assigning a Call to a Attribute (line 984):
        
        # Assigning a Call to a Attribute (line 984):
        
        # Call to set(...): (line 984)
        # Processing the call keyword arguments (line 984)
        kwargs_506128 = {}
        # Getting the type of 'set' (line 984)
        set_506127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 27), 'set', False)
        # Calling set(args, kwargs) (line 984)
        set_call_result_506129 = invoke(stypy.reporting.localization.Localization(__file__, 984, 27), set_506127, *[], **kwargs_506128)
        
        # Getting the type of 'self' (line 984)
        self_506130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 8), 'self')
        # Setting the type of the member 'fused_types' of a type (line 984)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 8), self_506130, 'fused_types', set_call_result_506129)
        
        # Assigning a Call to a Tuple (line 985):
        
        # Assigning a Subscript to a Name (line 985):
        
        # Obtaining the type of the subscript
        int_506131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 985, 8), 'int')
        
        # Call to _get_types(...): (line 985)
        # Processing the call arguments (line 985)
        # Getting the type of 'self' (line 985)
        self_506134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 54), 'self', False)
        # Obtaining the member 'incodes' of a type (line 985)
        incodes_506135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 54), self_506134, 'incodes')
        # Processing the call keyword arguments (line 985)
        kwargs_506136 = {}
        # Getting the type of 'self' (line 985)
        self_506132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 38), 'self', False)
        # Obtaining the member '_get_types' of a type (line 985)
        _get_types_506133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 38), self_506132, '_get_types')
        # Calling _get_types(args, kwargs) (line 985)
        _get_types_call_result_506137 = invoke(stypy.reporting.localization.Localization(__file__, 985, 38), _get_types_506133, *[incodes_506135], **kwargs_506136)
        
        # Obtaining the member '__getitem__' of a type (line 985)
        getitem___506138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 8), _get_types_call_result_506137, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 985)
        subscript_call_result_506139 = invoke(stypy.reporting.localization.Localization(__file__, 985, 8), getitem___506138, int_506131)
        
        # Assigning a type to the variable 'tuple_var_assignment_503923' (line 985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 985, 8), 'tuple_var_assignment_503923', subscript_call_result_506139)
        
        # Assigning a Subscript to a Name (line 985):
        
        # Obtaining the type of the subscript
        int_506140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 985, 8), 'int')
        
        # Call to _get_types(...): (line 985)
        # Processing the call arguments (line 985)
        # Getting the type of 'self' (line 985)
        self_506143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 54), 'self', False)
        # Obtaining the member 'incodes' of a type (line 985)
        incodes_506144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 54), self_506143, 'incodes')
        # Processing the call keyword arguments (line 985)
        kwargs_506145 = {}
        # Getting the type of 'self' (line 985)
        self_506141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 38), 'self', False)
        # Obtaining the member '_get_types' of a type (line 985)
        _get_types_506142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 38), self_506141, '_get_types')
        # Calling _get_types(args, kwargs) (line 985)
        _get_types_call_result_506146 = invoke(stypy.reporting.localization.Localization(__file__, 985, 38), _get_types_506142, *[incodes_506144], **kwargs_506145)
        
        # Obtaining the member '__getitem__' of a type (line 985)
        getitem___506147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 8), _get_types_call_result_506146, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 985)
        subscript_call_result_506148 = invoke(stypy.reporting.localization.Localization(__file__, 985, 8), getitem___506147, int_506140)
        
        # Assigning a type to the variable 'tuple_var_assignment_503924' (line 985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 985, 8), 'tuple_var_assignment_503924', subscript_call_result_506148)
        
        # Assigning a Name to a Attribute (line 985):
        # Getting the type of 'tuple_var_assignment_503923' (line 985)
        tuple_var_assignment_503923_506149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 8), 'tuple_var_assignment_503923')
        # Getting the type of 'self' (line 985)
        self_506150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 8), 'self')
        # Setting the type of the member 'intypes' of a type (line 985)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 8), self_506150, 'intypes', tuple_var_assignment_503923_506149)
        
        # Assigning a Name to a Name (line 985):
        # Getting the type of 'tuple_var_assignment_503924' (line 985)
        tuple_var_assignment_503924_506151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 8), 'tuple_var_assignment_503924')
        # Assigning a type to the variable 'infused_types' (line 985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 985, 22), 'infused_types', tuple_var_assignment_503924_506151)
        
        # Call to update(...): (line 986)
        # Processing the call arguments (line 986)
        # Getting the type of 'infused_types' (line 986)
        infused_types_506155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 32), 'infused_types', False)
        # Processing the call keyword arguments (line 986)
        kwargs_506156 = {}
        # Getting the type of 'self' (line 986)
        self_506152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 8), 'self', False)
        # Obtaining the member 'fused_types' of a type (line 986)
        fused_types_506153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 8), self_506152, 'fused_types')
        # Obtaining the member 'update' of a type (line 986)
        update_506154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 8), fused_types_506153, 'update')
        # Calling update(args, kwargs) (line 986)
        update_call_result_506157 = invoke(stypy.reporting.localization.Localization(__file__, 986, 8), update_506154, *[infused_types_506155], **kwargs_506156)
        
        
        # Assigning a Call to a Tuple (line 987):
        
        # Assigning a Subscript to a Name (line 987):
        
        # Obtaining the type of the subscript
        int_506158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 987, 8), 'int')
        
        # Call to _get_types(...): (line 987)
        # Processing the call arguments (line 987)
        # Getting the type of 'self' (line 987)
        self_506161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 56), 'self', False)
        # Obtaining the member 'outcodes' of a type (line 987)
        outcodes_506162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 56), self_506161, 'outcodes')
        # Processing the call keyword arguments (line 987)
        kwargs_506163 = {}
        # Getting the type of 'self' (line 987)
        self_506159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 40), 'self', False)
        # Obtaining the member '_get_types' of a type (line 987)
        _get_types_506160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 40), self_506159, '_get_types')
        # Calling _get_types(args, kwargs) (line 987)
        _get_types_call_result_506164 = invoke(stypy.reporting.localization.Localization(__file__, 987, 40), _get_types_506160, *[outcodes_506162], **kwargs_506163)
        
        # Obtaining the member '__getitem__' of a type (line 987)
        getitem___506165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 8), _get_types_call_result_506164, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 987)
        subscript_call_result_506166 = invoke(stypy.reporting.localization.Localization(__file__, 987, 8), getitem___506165, int_506158)
        
        # Assigning a type to the variable 'tuple_var_assignment_503925' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 8), 'tuple_var_assignment_503925', subscript_call_result_506166)
        
        # Assigning a Subscript to a Name (line 987):
        
        # Obtaining the type of the subscript
        int_506167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 987, 8), 'int')
        
        # Call to _get_types(...): (line 987)
        # Processing the call arguments (line 987)
        # Getting the type of 'self' (line 987)
        self_506170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 56), 'self', False)
        # Obtaining the member 'outcodes' of a type (line 987)
        outcodes_506171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 56), self_506170, 'outcodes')
        # Processing the call keyword arguments (line 987)
        kwargs_506172 = {}
        # Getting the type of 'self' (line 987)
        self_506168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 40), 'self', False)
        # Obtaining the member '_get_types' of a type (line 987)
        _get_types_506169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 40), self_506168, '_get_types')
        # Calling _get_types(args, kwargs) (line 987)
        _get_types_call_result_506173 = invoke(stypy.reporting.localization.Localization(__file__, 987, 40), _get_types_506169, *[outcodes_506171], **kwargs_506172)
        
        # Obtaining the member '__getitem__' of a type (line 987)
        getitem___506174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 8), _get_types_call_result_506173, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 987)
        subscript_call_result_506175 = invoke(stypy.reporting.localization.Localization(__file__, 987, 8), getitem___506174, int_506167)
        
        # Assigning a type to the variable 'tuple_var_assignment_503926' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 8), 'tuple_var_assignment_503926', subscript_call_result_506175)
        
        # Assigning a Name to a Attribute (line 987):
        # Getting the type of 'tuple_var_assignment_503925' (line 987)
        tuple_var_assignment_503925_506176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 8), 'tuple_var_assignment_503925')
        # Getting the type of 'self' (line 987)
        self_506177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 8), 'self')
        # Setting the type of the member 'outtypes' of a type (line 987)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 8), self_506177, 'outtypes', tuple_var_assignment_503925_506176)
        
        # Assigning a Name to a Name (line 987):
        # Getting the type of 'tuple_var_assignment_503926' (line 987)
        tuple_var_assignment_503926_506178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 8), 'tuple_var_assignment_503926')
        # Assigning a type to the variable 'outfused_types' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 23), 'outfused_types', tuple_var_assignment_503926_506178)
        
        # Call to update(...): (line 988)
        # Processing the call arguments (line 988)
        # Getting the type of 'outfused_types' (line 988)
        outfused_types_506182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 32), 'outfused_types', False)
        # Processing the call keyword arguments (line 988)
        kwargs_506183 = {}
        # Getting the type of 'self' (line 988)
        self_506179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'self', False)
        # Obtaining the member 'fused_types' of a type (line 988)
        fused_types_506180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 8), self_506179, 'fused_types')
        # Obtaining the member 'update' of a type (line 988)
        update_506181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 8), fused_types_506180, 'update')
        # Calling update(args, kwargs) (line 988)
        update_call_result_506184 = invoke(stypy.reporting.localization.Localization(__file__, 988, 8), update_506181, *[outfused_types_506182], **kwargs_506183)
        
        
        # Assigning a Call to a Tuple (line 989):
        
        # Assigning a Subscript to a Name (line 989):
        
        # Obtaining the type of the subscript
        int_506185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 8), 'int')
        
        # Call to _get_vars(...): (line 989)
        # Processing the call keyword arguments (line 989)
        kwargs_506188 = {}
        # Getting the type of 'self' (line 989)
        self_506186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 36), 'self', False)
        # Obtaining the member '_get_vars' of a type (line 989)
        _get_vars_506187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 36), self_506186, '_get_vars')
        # Calling _get_vars(args, kwargs) (line 989)
        _get_vars_call_result_506189 = invoke(stypy.reporting.localization.Localization(__file__, 989, 36), _get_vars_506187, *[], **kwargs_506188)
        
        # Obtaining the member '__getitem__' of a type (line 989)
        getitem___506190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 8), _get_vars_call_result_506189, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 989)
        subscript_call_result_506191 = invoke(stypy.reporting.localization.Localization(__file__, 989, 8), getitem___506190, int_506185)
        
        # Assigning a type to the variable 'tuple_var_assignment_503927' (line 989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'tuple_var_assignment_503927', subscript_call_result_506191)
        
        # Assigning a Subscript to a Name (line 989):
        
        # Obtaining the type of the subscript
        int_506192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 8), 'int')
        
        # Call to _get_vars(...): (line 989)
        # Processing the call keyword arguments (line 989)
        kwargs_506195 = {}
        # Getting the type of 'self' (line 989)
        self_506193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 36), 'self', False)
        # Obtaining the member '_get_vars' of a type (line 989)
        _get_vars_506194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 36), self_506193, '_get_vars')
        # Calling _get_vars(args, kwargs) (line 989)
        _get_vars_call_result_506196 = invoke(stypy.reporting.localization.Localization(__file__, 989, 36), _get_vars_506194, *[], **kwargs_506195)
        
        # Obtaining the member '__getitem__' of a type (line 989)
        getitem___506197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 8), _get_vars_call_result_506196, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 989)
        subscript_call_result_506198 = invoke(stypy.reporting.localization.Localization(__file__, 989, 8), getitem___506197, int_506192)
        
        # Assigning a type to the variable 'tuple_var_assignment_503928' (line 989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'tuple_var_assignment_503928', subscript_call_result_506198)
        
        # Assigning a Name to a Attribute (line 989):
        # Getting the type of 'tuple_var_assignment_503927' (line 989)
        tuple_var_assignment_503927_506199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'tuple_var_assignment_503927')
        # Getting the type of 'self' (line 989)
        self_506200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'self')
        # Setting the type of the member 'invars' of a type (line 989)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 8), self_506200, 'invars', tuple_var_assignment_503927_506199)
        
        # Assigning a Name to a Attribute (line 989):
        # Getting the type of 'tuple_var_assignment_503928' (line 989)
        tuple_var_assignment_503928_506201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'tuple_var_assignment_503928')
        # Getting the type of 'self' (line 989)
        self_506202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 21), 'self')
        # Setting the type of the member 'outvars' of a type (line 989)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 21), self_506202, 'outvars', tuple_var_assignment_503928_506201)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _get_codes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_codes'
        module_type_store = module_type_store.open_function_context('_get_codes', 991, 4, False)
        # Assigning a type to the variable 'self' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_codes.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_codes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_codes.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_codes.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_codes')
        FusedFunc._get_codes.__dict__.__setitem__('stypy_param_names_list', [])
        FusedFunc._get_codes.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_codes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_codes.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_codes.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_codes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_codes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_codes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_codes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_codes(...)' code ##################

        
        # Assigning a Tuple to a Tuple (line 992):
        
        # Assigning a Name to a Name (line 992):
        # Getting the type of 'None' (line 992)
        None_506203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 32), 'None')
        # Assigning a type to the variable 'tuple_assignment_503929' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'tuple_assignment_503929', None_506203)
        
        # Assigning a Name to a Name (line 992):
        # Getting the type of 'None' (line 992)
        None_506204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 38), 'None')
        # Assigning a type to the variable 'tuple_assignment_503930' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'tuple_assignment_503930', None_506204)
        
        # Assigning a Name to a Name (line 992):
        # Getting the type of 'tuple_assignment_503929' (line 992)
        tuple_assignment_503929_506205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'tuple_assignment_503929')
        # Assigning a type to the variable 'inarg_num' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'inarg_num', tuple_assignment_503929_506205)
        
        # Assigning a Name to a Name (line 992):
        # Getting the type of 'tuple_assignment_503930' (line 992)
        tuple_assignment_503930_506206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'tuple_assignment_503930')
        # Assigning a type to the variable 'outarg_num' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 19), 'outarg_num', tuple_assignment_503930_506206)
        
        # Assigning a Tuple to a Tuple (line 993):
        
        # Assigning a List to a Name (line 993):
        
        # Obtaining an instance of the builtin type 'list' (line 993)
        list_506207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 993)
        
        # Assigning a type to the variable 'tuple_assignment_503931' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'tuple_assignment_503931', list_506207)
        
        # Assigning a List to a Name (line 993):
        
        # Obtaining an instance of the builtin type 'list' (line 993)
        list_506208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 993)
        
        # Assigning a type to the variable 'tuple_assignment_503932' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'tuple_assignment_503932', list_506208)
        
        # Assigning a Name to a Name (line 993):
        # Getting the type of 'tuple_assignment_503931' (line 993)
        tuple_assignment_503931_506209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'tuple_assignment_503931')
        # Assigning a type to the variable 'all_inp' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'all_inp', tuple_assignment_503931_506209)
        
        # Assigning a Name to a Name (line 993):
        # Getting the type of 'tuple_assignment_503932' (line 993)
        tuple_assignment_503932_506210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'tuple_assignment_503932')
        # Assigning a type to the variable 'all_outp' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 17), 'all_outp', tuple_assignment_503932_506210)
        
        # Getting the type of 'self' (line 994)
        self_506211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 40), 'self')
        # Obtaining the member 'signatures' of a type (line 994)
        signatures_506212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 40), self_506211, 'signatures')
        # Testing the type of a for loop iterable (line 994)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 994, 8), signatures_506212)
        # Getting the type of the for loop variable (line 994)
        for_loop_var_506213 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 994, 8), signatures_506212)
        # Assigning a type to the variable '_' (line 994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 994, 8), '_', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 994, 8), for_loop_var_506213))
        # Assigning a type to the variable 'inarg' (line 994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 994, 8), 'inarg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 994, 8), for_loop_var_506213))
        # Assigning a type to the variable 'outarg' (line 994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 994, 8), 'outarg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 994, 8), for_loop_var_506213))
        # Assigning a type to the variable 'ret' (line 994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 994, 8), 'ret', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 994, 8), for_loop_var_506213))
        # Assigning a type to the variable '_' (line 994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 994, 8), '_', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 994, 8), for_loop_var_506213))
        # SSA begins for a for statement (line 994)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BinOp to a Name (line 995):
        
        # Assigning a BinOp to a Name (line 995):
        
        # Call to sub(...): (line 995)
        # Processing the call arguments (line 995)
        str_506216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 26), 'str', '\\*.*')
        str_506217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 35), 'str', '')
        # Getting the type of 'ret' (line 995)
        ret_506218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 39), 'ret', False)
        # Processing the call keyword arguments (line 995)
        kwargs_506219 = {}
        # Getting the type of 're' (line 995)
        re_506214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 19), 're', False)
        # Obtaining the member 'sub' of a type (line 995)
        sub_506215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 995, 19), re_506214, 'sub')
        # Calling sub(args, kwargs) (line 995)
        sub_call_result_506220 = invoke(stypy.reporting.localization.Localization(__file__, 995, 19), sub_506215, *[str_506216, str_506217, ret_506218], **kwargs_506219)
        
        # Getting the type of 'outarg' (line 995)
        outarg_506221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 46), 'outarg')
        # Applying the binary operator '+' (line 995)
        result_add_506222 = python_operator(stypy.reporting.localization.Localization(__file__, 995, 19), '+', sub_call_result_506220, outarg_506221)
        
        # Assigning a type to the variable 'outp' (line 995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 995, 12), 'outp', result_add_506222)
        
        # Type idiom detected: calculating its left and rigth part (line 996)
        # Getting the type of 'inarg_num' (line 996)
        inarg_num_506223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 15), 'inarg_num')
        # Getting the type of 'None' (line 996)
        None_506224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 28), 'None')
        
        (may_be_506225, more_types_in_union_506226) = may_be_none(inarg_num_506223, None_506224)

        if may_be_506225:

            if more_types_in_union_506226:
                # Runtime conditional SSA (line 996)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 997):
            
            # Assigning a Call to a Name (line 997):
            
            # Call to len(...): (line 997)
            # Processing the call arguments (line 997)
            # Getting the type of 'inarg' (line 997)
            inarg_506228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 32), 'inarg', False)
            # Processing the call keyword arguments (line 997)
            kwargs_506229 = {}
            # Getting the type of 'len' (line 997)
            len_506227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 28), 'len', False)
            # Calling len(args, kwargs) (line 997)
            len_call_result_506230 = invoke(stypy.reporting.localization.Localization(__file__, 997, 28), len_506227, *[inarg_506228], **kwargs_506229)
            
            # Assigning a type to the variable 'inarg_num' (line 997)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 997, 16), 'inarg_num', len_call_result_506230)
            
            # Assigning a Call to a Name (line 998):
            
            # Assigning a Call to a Name (line 998):
            
            # Call to len(...): (line 998)
            # Processing the call arguments (line 998)
            # Getting the type of 'outp' (line 998)
            outp_506232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 33), 'outp', False)
            # Processing the call keyword arguments (line 998)
            kwargs_506233 = {}
            # Getting the type of 'len' (line 998)
            len_506231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 29), 'len', False)
            # Calling len(args, kwargs) (line 998)
            len_call_result_506234 = invoke(stypy.reporting.localization.Localization(__file__, 998, 29), len_506231, *[outp_506232], **kwargs_506233)
            
            # Assigning a type to the variable 'outarg_num' (line 998)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 16), 'outarg_num', len_call_result_506234)

            if more_types_in_union_506226:
                # SSA join for if statement (line 996)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Subscript to a Tuple (line 999):
        
        # Assigning a Subscript to a Name (line 999):
        
        # Obtaining the type of the subscript
        int_506235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 12), 'int')
        
        # Obtaining the type of the subscript
        int_506236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 57), 'int')
        
        # Call to list(...): (line 999)
        # Processing the call arguments (line 999)
        
        # Call to iter_variants(...): (line 999)
        # Processing the call arguments (line 999)
        # Getting the type of 'inarg' (line 999)
        inarg_506239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 43), 'inarg', False)
        # Getting the type of 'outp' (line 999)
        outp_506240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 50), 'outp', False)
        # Processing the call keyword arguments (line 999)
        kwargs_506241 = {}
        # Getting the type of 'iter_variants' (line 999)
        iter_variants_506238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 29), 'iter_variants', False)
        # Calling iter_variants(args, kwargs) (line 999)
        iter_variants_call_result_506242 = invoke(stypy.reporting.localization.Localization(__file__, 999, 29), iter_variants_506238, *[inarg_506239, outp_506240], **kwargs_506241)
        
        # Processing the call keyword arguments (line 999)
        kwargs_506243 = {}
        # Getting the type of 'list' (line 999)
        list_506237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 24), 'list', False)
        # Calling list(args, kwargs) (line 999)
        list_call_result_506244 = invoke(stypy.reporting.localization.Localization(__file__, 999, 24), list_506237, *[iter_variants_call_result_506242], **kwargs_506243)
        
        # Obtaining the member '__getitem__' of a type (line 999)
        getitem___506245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 24), list_call_result_506244, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 999)
        subscript_call_result_506246 = invoke(stypy.reporting.localization.Localization(__file__, 999, 24), getitem___506245, int_506236)
        
        # Obtaining the member '__getitem__' of a type (line 999)
        getitem___506247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 12), subscript_call_result_506246, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 999)
        subscript_call_result_506248 = invoke(stypy.reporting.localization.Localization(__file__, 999, 12), getitem___506247, int_506235)
        
        # Assigning a type to the variable 'tuple_var_assignment_503933' (line 999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 999, 12), 'tuple_var_assignment_503933', subscript_call_result_506248)
        
        # Assigning a Subscript to a Name (line 999):
        
        # Obtaining the type of the subscript
        int_506249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 12), 'int')
        
        # Obtaining the type of the subscript
        int_506250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 57), 'int')
        
        # Call to list(...): (line 999)
        # Processing the call arguments (line 999)
        
        # Call to iter_variants(...): (line 999)
        # Processing the call arguments (line 999)
        # Getting the type of 'inarg' (line 999)
        inarg_506253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 43), 'inarg', False)
        # Getting the type of 'outp' (line 999)
        outp_506254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 50), 'outp', False)
        # Processing the call keyword arguments (line 999)
        kwargs_506255 = {}
        # Getting the type of 'iter_variants' (line 999)
        iter_variants_506252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 29), 'iter_variants', False)
        # Calling iter_variants(args, kwargs) (line 999)
        iter_variants_call_result_506256 = invoke(stypy.reporting.localization.Localization(__file__, 999, 29), iter_variants_506252, *[inarg_506253, outp_506254], **kwargs_506255)
        
        # Processing the call keyword arguments (line 999)
        kwargs_506257 = {}
        # Getting the type of 'list' (line 999)
        list_506251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 24), 'list', False)
        # Calling list(args, kwargs) (line 999)
        list_call_result_506258 = invoke(stypy.reporting.localization.Localization(__file__, 999, 24), list_506251, *[iter_variants_call_result_506256], **kwargs_506257)
        
        # Obtaining the member '__getitem__' of a type (line 999)
        getitem___506259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 24), list_call_result_506258, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 999)
        subscript_call_result_506260 = invoke(stypy.reporting.localization.Localization(__file__, 999, 24), getitem___506259, int_506250)
        
        # Obtaining the member '__getitem__' of a type (line 999)
        getitem___506261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 12), subscript_call_result_506260, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 999)
        subscript_call_result_506262 = invoke(stypy.reporting.localization.Localization(__file__, 999, 12), getitem___506261, int_506249)
        
        # Assigning a type to the variable 'tuple_var_assignment_503934' (line 999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 999, 12), 'tuple_var_assignment_503934', subscript_call_result_506262)
        
        # Assigning a Name to a Name (line 999):
        # Getting the type of 'tuple_var_assignment_503933' (line 999)
        tuple_var_assignment_503933_506263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 12), 'tuple_var_assignment_503933')
        # Assigning a type to the variable 'inp' (line 999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 999, 12), 'inp', tuple_var_assignment_503933_506263)
        
        # Assigning a Name to a Name (line 999):
        # Getting the type of 'tuple_var_assignment_503934' (line 999)
        tuple_var_assignment_503934_506264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 12), 'tuple_var_assignment_503934')
        # Assigning a type to the variable 'outp' (line 999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 999, 17), 'outp', tuple_var_assignment_503934_506264)
        
        # Call to append(...): (line 1000)
        # Processing the call arguments (line 1000)
        # Getting the type of 'inp' (line 1000)
        inp_506267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 27), 'inp', False)
        # Processing the call keyword arguments (line 1000)
        kwargs_506268 = {}
        # Getting the type of 'all_inp' (line 1000)
        all_inp_506265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 12), 'all_inp', False)
        # Obtaining the member 'append' of a type (line 1000)
        append_506266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 12), all_inp_506265, 'append')
        # Calling append(args, kwargs) (line 1000)
        append_call_result_506269 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 12), append_506266, *[inp_506267], **kwargs_506268)
        
        
        # Call to append(...): (line 1001)
        # Processing the call arguments (line 1001)
        # Getting the type of 'outp' (line 1001)
        outp_506272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 28), 'outp', False)
        # Processing the call keyword arguments (line 1001)
        kwargs_506273 = {}
        # Getting the type of 'all_outp' (line 1001)
        all_outp_506270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 12), 'all_outp', False)
        # Obtaining the member 'append' of a type (line 1001)
        append_506271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1001, 12), all_outp_506270, 'append')
        # Calling append(args, kwargs) (line 1001)
        append_call_result_506274 = invoke(stypy.reporting.localization.Localization(__file__, 1001, 12), append_506271, *[outp_506272], **kwargs_506273)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a List to a Name (line 1003):
        
        # Assigning a List to a Name (line 1003):
        
        # Obtaining an instance of the builtin type 'list' (line 1003)
        list_506275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1003)
        
        # Assigning a type to the variable 'incodes' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 8), 'incodes', list_506275)
        
        
        # Call to range(...): (line 1004)
        # Processing the call arguments (line 1004)
        # Getting the type of 'inarg_num' (line 1004)
        inarg_num_506277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 23), 'inarg_num', False)
        # Processing the call keyword arguments (line 1004)
        kwargs_506278 = {}
        # Getting the type of 'range' (line 1004)
        range_506276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 17), 'range', False)
        # Calling range(args, kwargs) (line 1004)
        range_call_result_506279 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 17), range_506276, *[inarg_num_506277], **kwargs_506278)
        
        # Testing the type of a for loop iterable (line 1004)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1004, 8), range_call_result_506279)
        # Getting the type of the for loop variable (line 1004)
        for_loop_var_506280 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1004, 8), range_call_result_506279)
        # Assigning a type to the variable 'n' (line 1004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 8), 'n', for_loop_var_506280)
        # SSA begins for a for statement (line 1004)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1005):
        
        # Assigning a Call to a Name (line 1005):
        
        # Call to unique(...): (line 1005)
        # Processing the call arguments (line 1005)
        
        # Call to map(...): (line 1005)
        # Processing the call arguments (line 1005)

        @norecursion
        def _stypy_temp_lambda_299(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_299'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_299', 1005, 31, True)
            # Passed parameters checking function
            _stypy_temp_lambda_299.stypy_localization = localization
            _stypy_temp_lambda_299.stypy_type_of_self = None
            _stypy_temp_lambda_299.stypy_type_store = module_type_store
            _stypy_temp_lambda_299.stypy_function_name = '_stypy_temp_lambda_299'
            _stypy_temp_lambda_299.stypy_param_names_list = ['x']
            _stypy_temp_lambda_299.stypy_varargs_param_name = None
            _stypy_temp_lambda_299.stypy_kwargs_param_name = None
            _stypy_temp_lambda_299.stypy_call_defaults = defaults
            _stypy_temp_lambda_299.stypy_call_varargs = varargs
            _stypy_temp_lambda_299.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_299', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_299', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            # Getting the type of 'n' (line 1005)
            n_506283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 43), 'n', False)
            # Getting the type of 'x' (line 1005)
            x_506284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 41), 'x', False)
            # Obtaining the member '__getitem__' of a type (line 1005)
            getitem___506285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 41), x_506284, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1005)
            subscript_call_result_506286 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 41), getitem___506285, n_506283)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1005)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 31), 'stypy_return_type', subscript_call_result_506286)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_299' in the type store
            # Getting the type of 'stypy_return_type' (line 1005)
            stypy_return_type_506287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 31), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_506287)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_299'
            return stypy_return_type_506287

        # Assigning a type to the variable '_stypy_temp_lambda_299' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 31), '_stypy_temp_lambda_299', _stypy_temp_lambda_299)
        # Getting the type of '_stypy_temp_lambda_299' (line 1005)
        _stypy_temp_lambda_299_506288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 31), '_stypy_temp_lambda_299')
        # Getting the type of 'all_inp' (line 1005)
        all_inp_506289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 47), 'all_inp', False)
        # Processing the call keyword arguments (line 1005)
        kwargs_506290 = {}
        # Getting the type of 'map' (line 1005)
        map_506282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 27), 'map', False)
        # Calling map(args, kwargs) (line 1005)
        map_call_result_506291 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 27), map_506282, *[_stypy_temp_lambda_299_506288, all_inp_506289], **kwargs_506290)
        
        # Processing the call keyword arguments (line 1005)
        kwargs_506292 = {}
        # Getting the type of 'unique' (line 1005)
        unique_506281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 20), 'unique', False)
        # Calling unique(args, kwargs) (line 1005)
        unique_call_result_506293 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 20), unique_506281, *[map_call_result_506291], **kwargs_506292)
        
        # Assigning a type to the variable 'codes' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 12), 'codes', unique_call_result_506293)
        
        # Call to sort(...): (line 1006)
        # Processing the call keyword arguments (line 1006)
        kwargs_506296 = {}
        # Getting the type of 'codes' (line 1006)
        codes_506294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 12), 'codes', False)
        # Obtaining the member 'sort' of a type (line 1006)
        sort_506295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1006, 12), codes_506294, 'sort')
        # Calling sort(args, kwargs) (line 1006)
        sort_call_result_506297 = invoke(stypy.reporting.localization.Localization(__file__, 1006, 12), sort_506295, *[], **kwargs_506296)
        
        
        # Call to append(...): (line 1007)
        # Processing the call arguments (line 1007)
        
        # Call to join(...): (line 1007)
        # Processing the call arguments (line 1007)
        # Getting the type of 'codes' (line 1007)
        codes_506302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 35), 'codes', False)
        # Processing the call keyword arguments (line 1007)
        kwargs_506303 = {}
        str_506300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 27), 'str', '')
        # Obtaining the member 'join' of a type (line 1007)
        join_506301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 27), str_506300, 'join')
        # Calling join(args, kwargs) (line 1007)
        join_call_result_506304 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 27), join_506301, *[codes_506302], **kwargs_506303)
        
        # Processing the call keyword arguments (line 1007)
        kwargs_506305 = {}
        # Getting the type of 'incodes' (line 1007)
        incodes_506298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 12), 'incodes', False)
        # Obtaining the member 'append' of a type (line 1007)
        append_506299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 12), incodes_506298, 'append')
        # Calling append(args, kwargs) (line 1007)
        append_call_result_506306 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 12), append_506299, *[join_call_result_506304], **kwargs_506305)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a List to a Name (line 1008):
        
        # Assigning a List to a Name (line 1008):
        
        # Obtaining an instance of the builtin type 'list' (line 1008)
        list_506307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1008)
        
        # Assigning a type to the variable 'outcodes' (line 1008)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1008, 8), 'outcodes', list_506307)
        
        
        # Call to range(...): (line 1009)
        # Processing the call arguments (line 1009)
        # Getting the type of 'outarg_num' (line 1009)
        outarg_num_506309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 23), 'outarg_num', False)
        # Processing the call keyword arguments (line 1009)
        kwargs_506310 = {}
        # Getting the type of 'range' (line 1009)
        range_506308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 17), 'range', False)
        # Calling range(args, kwargs) (line 1009)
        range_call_result_506311 = invoke(stypy.reporting.localization.Localization(__file__, 1009, 17), range_506308, *[outarg_num_506309], **kwargs_506310)
        
        # Testing the type of a for loop iterable (line 1009)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1009, 8), range_call_result_506311)
        # Getting the type of the for loop variable (line 1009)
        for_loop_var_506312 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1009, 8), range_call_result_506311)
        # Assigning a type to the variable 'n' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 8), 'n', for_loop_var_506312)
        # SSA begins for a for statement (line 1009)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1010):
        
        # Assigning a Call to a Name (line 1010):
        
        # Call to unique(...): (line 1010)
        # Processing the call arguments (line 1010)
        
        # Call to map(...): (line 1010)
        # Processing the call arguments (line 1010)

        @norecursion
        def _stypy_temp_lambda_300(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_300'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_300', 1010, 31, True)
            # Passed parameters checking function
            _stypy_temp_lambda_300.stypy_localization = localization
            _stypy_temp_lambda_300.stypy_type_of_self = None
            _stypy_temp_lambda_300.stypy_type_store = module_type_store
            _stypy_temp_lambda_300.stypy_function_name = '_stypy_temp_lambda_300'
            _stypy_temp_lambda_300.stypy_param_names_list = ['x']
            _stypy_temp_lambda_300.stypy_varargs_param_name = None
            _stypy_temp_lambda_300.stypy_kwargs_param_name = None
            _stypy_temp_lambda_300.stypy_call_defaults = defaults
            _stypy_temp_lambda_300.stypy_call_varargs = varargs
            _stypy_temp_lambda_300.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_300', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_300', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            # Getting the type of 'n' (line 1010)
            n_506315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 43), 'n', False)
            # Getting the type of 'x' (line 1010)
            x_506316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 41), 'x', False)
            # Obtaining the member '__getitem__' of a type (line 1010)
            getitem___506317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1010, 41), x_506316, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1010)
            subscript_call_result_506318 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 41), getitem___506317, n_506315)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1010)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1010, 31), 'stypy_return_type', subscript_call_result_506318)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_300' in the type store
            # Getting the type of 'stypy_return_type' (line 1010)
            stypy_return_type_506319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 31), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_506319)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_300'
            return stypy_return_type_506319

        # Assigning a type to the variable '_stypy_temp_lambda_300' (line 1010)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1010, 31), '_stypy_temp_lambda_300', _stypy_temp_lambda_300)
        # Getting the type of '_stypy_temp_lambda_300' (line 1010)
        _stypy_temp_lambda_300_506320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 31), '_stypy_temp_lambda_300')
        # Getting the type of 'all_outp' (line 1010)
        all_outp_506321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 47), 'all_outp', False)
        # Processing the call keyword arguments (line 1010)
        kwargs_506322 = {}
        # Getting the type of 'map' (line 1010)
        map_506314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 27), 'map', False)
        # Calling map(args, kwargs) (line 1010)
        map_call_result_506323 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 27), map_506314, *[_stypy_temp_lambda_300_506320, all_outp_506321], **kwargs_506322)
        
        # Processing the call keyword arguments (line 1010)
        kwargs_506324 = {}
        # Getting the type of 'unique' (line 1010)
        unique_506313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 20), 'unique', False)
        # Calling unique(args, kwargs) (line 1010)
        unique_call_result_506325 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 20), unique_506313, *[map_call_result_506323], **kwargs_506324)
        
        # Assigning a type to the variable 'codes' (line 1010)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1010, 12), 'codes', unique_call_result_506325)
        
        # Call to sort(...): (line 1011)
        # Processing the call keyword arguments (line 1011)
        kwargs_506328 = {}
        # Getting the type of 'codes' (line 1011)
        codes_506326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 12), 'codes', False)
        # Obtaining the member 'sort' of a type (line 1011)
        sort_506327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1011, 12), codes_506326, 'sort')
        # Calling sort(args, kwargs) (line 1011)
        sort_call_result_506329 = invoke(stypy.reporting.localization.Localization(__file__, 1011, 12), sort_506327, *[], **kwargs_506328)
        
        
        # Call to append(...): (line 1012)
        # Processing the call arguments (line 1012)
        
        # Call to join(...): (line 1012)
        # Processing the call arguments (line 1012)
        # Getting the type of 'codes' (line 1012)
        codes_506334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 36), 'codes', False)
        # Processing the call keyword arguments (line 1012)
        kwargs_506335 = {}
        str_506332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 28), 'str', '')
        # Obtaining the member 'join' of a type (line 1012)
        join_506333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 28), str_506332, 'join')
        # Calling join(args, kwargs) (line 1012)
        join_call_result_506336 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 28), join_506333, *[codes_506334], **kwargs_506335)
        
        # Processing the call keyword arguments (line 1012)
        kwargs_506337 = {}
        # Getting the type of 'outcodes' (line 1012)
        outcodes_506330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 12), 'outcodes', False)
        # Obtaining the member 'append' of a type (line 1012)
        append_506331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 12), outcodes_506330, 'append')
        # Calling append(args, kwargs) (line 1012)
        append_call_result_506338 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 12), append_506331, *[join_call_result_506336], **kwargs_506337)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1014)
        tuple_506339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1014)
        # Adding element type (line 1014)
        
        # Call to tuple(...): (line 1014)
        # Processing the call arguments (line 1014)
        # Getting the type of 'incodes' (line 1014)
        incodes_506341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 21), 'incodes', False)
        # Processing the call keyword arguments (line 1014)
        kwargs_506342 = {}
        # Getting the type of 'tuple' (line 1014)
        tuple_506340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1014)
        tuple_call_result_506343 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 15), tuple_506340, *[incodes_506341], **kwargs_506342)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1014, 15), tuple_506339, tuple_call_result_506343)
        # Adding element type (line 1014)
        
        # Call to tuple(...): (line 1014)
        # Processing the call arguments (line 1014)
        # Getting the type of 'outcodes' (line 1014)
        outcodes_506345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 37), 'outcodes', False)
        # Processing the call keyword arguments (line 1014)
        kwargs_506346 = {}
        # Getting the type of 'tuple' (line 1014)
        tuple_506344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 31), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1014)
        tuple_call_result_506347 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 31), tuple_506344, *[outcodes_506345], **kwargs_506346)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1014, 15), tuple_506339, tuple_call_result_506347)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1014)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1014, 8), 'stypy_return_type', tuple_506339)
        
        # ################# End of '_get_codes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_codes' in the type store
        # Getting the type of 'stypy_return_type' (line 991)
        stypy_return_type_506348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_506348)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_codes'
        return stypy_return_type_506348


    @norecursion
    def _get_types(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_types'
        module_type_store = module_type_store.open_function_context('_get_types', 1016, 4, False)
        # Assigning a type to the variable 'self' (line 1017)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_types.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_types.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_types.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_types.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_types')
        FusedFunc._get_types.__dict__.__setitem__('stypy_param_names_list', ['codes'])
        FusedFunc._get_types.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_types.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_types.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_types.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_types.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_types.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_types', ['codes'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_types', localization, ['codes'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_types(...)' code ##################

        
        # Assigning a List to a Name (line 1017):
        
        # Assigning a List to a Name (line 1017):
        
        # Obtaining an instance of the builtin type 'list' (line 1017)
        list_506349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1017, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1017)
        
        # Assigning a type to the variable 'all_types' (line 1017)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 8), 'all_types', list_506349)
        
        # Assigning a Call to a Name (line 1018):
        
        # Assigning a Call to a Name (line 1018):
        
        # Call to set(...): (line 1018)
        # Processing the call keyword arguments (line 1018)
        kwargs_506351 = {}
        # Getting the type of 'set' (line 1018)
        set_506350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 22), 'set', False)
        # Calling set(args, kwargs) (line 1018)
        set_call_result_506352 = invoke(stypy.reporting.localization.Localization(__file__, 1018, 22), set_506350, *[], **kwargs_506351)
        
        # Assigning a type to the variable 'fused_types' (line 1018)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1018, 8), 'fused_types', set_call_result_506352)
        
        # Getting the type of 'codes' (line 1019)
        codes_506353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 20), 'codes')
        # Testing the type of a for loop iterable (line 1019)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1019, 8), codes_506353)
        # Getting the type of the for loop variable (line 1019)
        for_loop_var_506354 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1019, 8), codes_506353)
        # Assigning a type to the variable 'code' (line 1019)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1019, 8), 'code', for_loop_var_506354)
        # SSA begins for a for statement (line 1019)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Call to len(...): (line 1020)
        # Processing the call arguments (line 1020)
        # Getting the type of 'code' (line 1020)
        code_506356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 19), 'code', False)
        # Processing the call keyword arguments (line 1020)
        kwargs_506357 = {}
        # Getting the type of 'len' (line 1020)
        len_506355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 15), 'len', False)
        # Calling len(args, kwargs) (line 1020)
        len_call_result_506358 = invoke(stypy.reporting.localization.Localization(__file__, 1020, 15), len_506355, *[code_506356], **kwargs_506357)
        
        int_506359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1020, 28), 'int')
        # Applying the binary operator '==' (line 1020)
        result_eq_506360 = python_operator(stypy.reporting.localization.Localization(__file__, 1020, 15), '==', len_call_result_506358, int_506359)
        
        # Testing the type of an if condition (line 1020)
        if_condition_506361 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1020, 12), result_eq_506360)
        # Assigning a type to the variable 'if_condition_506361' (line 1020)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1020, 12), 'if_condition_506361', if_condition_506361)
        # SSA begins for if statement (line 1020)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 1022)
        # Processing the call arguments (line 1022)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1022)
        tuple_506364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1022)
        # Adding element type (line 1022)
        
        # Obtaining the type of the subscript
        # Getting the type of 'code' (line 1022)
        code_506365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 43), 'code', False)
        # Getting the type of 'CY_TYPES' (line 1022)
        CY_TYPES_506366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 34), 'CY_TYPES', False)
        # Obtaining the member '__getitem__' of a type (line 1022)
        getitem___506367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 34), CY_TYPES_506366, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1022)
        subscript_call_result_506368 = invoke(stypy.reporting.localization.Localization(__file__, 1022, 34), getitem___506367, code_506365)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1022, 34), tuple_506364, subscript_call_result_506368)
        # Adding element type (line 1022)
        # Getting the type of 'code' (line 1022)
        code_506369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 50), 'code', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1022, 34), tuple_506364, code_506369)
        
        # Processing the call keyword arguments (line 1022)
        kwargs_506370 = {}
        # Getting the type of 'all_types' (line 1022)
        all_types_506362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 16), 'all_types', False)
        # Obtaining the member 'append' of a type (line 1022)
        append_506363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 16), all_types_506362, 'append')
        # Calling append(args, kwargs) (line 1022)
        append_call_result_506371 = invoke(stypy.reporting.localization.Localization(__file__, 1022, 16), append_506363, *[tuple_506364], **kwargs_506370)
        
        # SSA branch for the else part of an if statement (line 1020)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 1025):
        
        # Assigning a Subscript to a Name (line 1025):
        
        # Obtaining the type of the subscript
        int_506372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 16), 'int')
        
        # Call to generate_fused_type(...): (line 1025)
        # Processing the call arguments (line 1025)
        # Getting the type of 'code' (line 1025)
        code_506374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 54), 'code', False)
        # Processing the call keyword arguments (line 1025)
        kwargs_506375 = {}
        # Getting the type of 'generate_fused_type' (line 1025)
        generate_fused_type_506373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 34), 'generate_fused_type', False)
        # Calling generate_fused_type(args, kwargs) (line 1025)
        generate_fused_type_call_result_506376 = invoke(stypy.reporting.localization.Localization(__file__, 1025, 34), generate_fused_type_506373, *[code_506374], **kwargs_506375)
        
        # Obtaining the member '__getitem__' of a type (line 1025)
        getitem___506377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1025, 16), generate_fused_type_call_result_506376, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1025)
        subscript_call_result_506378 = invoke(stypy.reporting.localization.Localization(__file__, 1025, 16), getitem___506377, int_506372)
        
        # Assigning a type to the variable 'tuple_var_assignment_503935' (line 1025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 16), 'tuple_var_assignment_503935', subscript_call_result_506378)
        
        # Assigning a Subscript to a Name (line 1025):
        
        # Obtaining the type of the subscript
        int_506379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 16), 'int')
        
        # Call to generate_fused_type(...): (line 1025)
        # Processing the call arguments (line 1025)
        # Getting the type of 'code' (line 1025)
        code_506381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 54), 'code', False)
        # Processing the call keyword arguments (line 1025)
        kwargs_506382 = {}
        # Getting the type of 'generate_fused_type' (line 1025)
        generate_fused_type_506380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 34), 'generate_fused_type', False)
        # Calling generate_fused_type(args, kwargs) (line 1025)
        generate_fused_type_call_result_506383 = invoke(stypy.reporting.localization.Localization(__file__, 1025, 34), generate_fused_type_506380, *[code_506381], **kwargs_506382)
        
        # Obtaining the member '__getitem__' of a type (line 1025)
        getitem___506384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1025, 16), generate_fused_type_call_result_506383, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1025)
        subscript_call_result_506385 = invoke(stypy.reporting.localization.Localization(__file__, 1025, 16), getitem___506384, int_506379)
        
        # Assigning a type to the variable 'tuple_var_assignment_503936' (line 1025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 16), 'tuple_var_assignment_503936', subscript_call_result_506385)
        
        # Assigning a Name to a Name (line 1025):
        # Getting the type of 'tuple_var_assignment_503935' (line 1025)
        tuple_var_assignment_503935_506386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 16), 'tuple_var_assignment_503935')
        # Assigning a type to the variable 'fused_type' (line 1025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 16), 'fused_type', tuple_var_assignment_503935_506386)
        
        # Assigning a Name to a Name (line 1025):
        # Getting the type of 'tuple_var_assignment_503936' (line 1025)
        tuple_var_assignment_503936_506387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 16), 'tuple_var_assignment_503936')
        # Assigning a type to the variable 'dec' (line 1025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 28), 'dec', tuple_var_assignment_503936_506387)
        
        # Call to add(...): (line 1026)
        # Processing the call arguments (line 1026)
        # Getting the type of 'dec' (line 1026)
        dec_506390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 32), 'dec', False)
        # Processing the call keyword arguments (line 1026)
        kwargs_506391 = {}
        # Getting the type of 'fused_types' (line 1026)
        fused_types_506388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 16), 'fused_types', False)
        # Obtaining the member 'add' of a type (line 1026)
        add_506389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 16), fused_types_506388, 'add')
        # Calling add(args, kwargs) (line 1026)
        add_call_result_506392 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 16), add_506389, *[dec_506390], **kwargs_506391)
        
        
        # Call to append(...): (line 1027)
        # Processing the call arguments (line 1027)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1027)
        tuple_506395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1027, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1027)
        # Adding element type (line 1027)
        # Getting the type of 'fused_type' (line 1027)
        fused_type_506396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 34), 'fused_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1027, 34), tuple_506395, fused_type_506396)
        # Adding element type (line 1027)
        # Getting the type of 'code' (line 1027)
        code_506397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 46), 'code', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1027, 34), tuple_506395, code_506397)
        
        # Processing the call keyword arguments (line 1027)
        kwargs_506398 = {}
        # Getting the type of 'all_types' (line 1027)
        all_types_506393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 16), 'all_types', False)
        # Obtaining the member 'append' of a type (line 1027)
        append_506394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 16), all_types_506393, 'append')
        # Calling append(args, kwargs) (line 1027)
        append_call_result_506399 = invoke(stypy.reporting.localization.Localization(__file__, 1027, 16), append_506394, *[tuple_506395], **kwargs_506398)
        
        # SSA join for if statement (line 1020)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1028)
        tuple_506400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1028)
        # Adding element type (line 1028)
        # Getting the type of 'all_types' (line 1028)
        all_types_506401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 15), 'all_types')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1028, 15), tuple_506400, all_types_506401)
        # Adding element type (line 1028)
        # Getting the type of 'fused_types' (line 1028)
        fused_types_506402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 26), 'fused_types')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1028, 15), tuple_506400, fused_types_506402)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1028)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1028, 8), 'stypy_return_type', tuple_506400)
        
        # ################# End of '_get_types(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_types' in the type store
        # Getting the type of 'stypy_return_type' (line 1016)
        stypy_return_type_506403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_506403)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_types'
        return stypy_return_type_506403


    @norecursion
    def _get_vars(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_vars'
        module_type_store = module_type_store.open_function_context('_get_vars', 1030, 4, False)
        # Assigning a type to the variable 'self' (line 1031)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1031, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_vars.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_vars.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_vars.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_vars.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_vars')
        FusedFunc._get_vars.__dict__.__setitem__('stypy_param_names_list', [])
        FusedFunc._get_vars.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_vars.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_vars.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_vars.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_vars.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_vars.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_vars', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_vars', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_vars(...)' code ##################

        
        # Assigning a List to a Name (line 1031):
        
        # Assigning a List to a Name (line 1031):
        
        # Obtaining an instance of the builtin type 'list' (line 1031)
        list_506404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1031)
        
        # Assigning a type to the variable 'invars' (line 1031)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1031, 8), 'invars', list_506404)
        
        
        # Call to range(...): (line 1032)
        # Processing the call arguments (line 1032)
        
        # Call to len(...): (line 1032)
        # Processing the call arguments (line 1032)
        # Getting the type of 'self' (line 1032)
        self_506407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 27), 'self', False)
        # Obtaining the member 'intypes' of a type (line 1032)
        intypes_506408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1032, 27), self_506407, 'intypes')
        # Processing the call keyword arguments (line 1032)
        kwargs_506409 = {}
        # Getting the type of 'len' (line 1032)
        len_506406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 23), 'len', False)
        # Calling len(args, kwargs) (line 1032)
        len_call_result_506410 = invoke(stypy.reporting.localization.Localization(__file__, 1032, 23), len_506406, *[intypes_506408], **kwargs_506409)
        
        # Processing the call keyword arguments (line 1032)
        kwargs_506411 = {}
        # Getting the type of 'range' (line 1032)
        range_506405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 17), 'range', False)
        # Calling range(args, kwargs) (line 1032)
        range_call_result_506412 = invoke(stypy.reporting.localization.Localization(__file__, 1032, 17), range_506405, *[len_call_result_506410], **kwargs_506411)
        
        # Testing the type of a for loop iterable (line 1032)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1032, 8), range_call_result_506412)
        # Getting the type of the for loop variable (line 1032)
        for_loop_var_506413 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1032, 8), range_call_result_506412)
        # Assigning a type to the variable 'n' (line 1032)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1032, 8), 'n', for_loop_var_506413)
        # SSA begins for a for statement (line 1032)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 1033)
        # Processing the call arguments (line 1033)
        
        # Call to format(...): (line 1033)
        # Processing the call arguments (line 1033)
        # Getting the type of 'n' (line 1033)
        n_506418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 39), 'n', False)
        # Processing the call keyword arguments (line 1033)
        kwargs_506419 = {}
        str_506416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 26), 'str', 'x{}')
        # Obtaining the member 'format' of a type (line 1033)
        format_506417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 26), str_506416, 'format')
        # Calling format(args, kwargs) (line 1033)
        format_call_result_506420 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 26), format_506417, *[n_506418], **kwargs_506419)
        
        # Processing the call keyword arguments (line 1033)
        kwargs_506421 = {}
        # Getting the type of 'invars' (line 1033)
        invars_506414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 12), 'invars', False)
        # Obtaining the member 'append' of a type (line 1033)
        append_506415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 12), invars_506414, 'append')
        # Calling append(args, kwargs) (line 1033)
        append_call_result_506422 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 12), append_506415, *[format_call_result_506420], **kwargs_506421)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a List to a Name (line 1034):
        
        # Assigning a List to a Name (line 1034):
        
        # Obtaining an instance of the builtin type 'list' (line 1034)
        list_506423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1034)
        
        # Assigning a type to the variable 'outvars' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'outvars', list_506423)
        
        
        # Call to range(...): (line 1035)
        # Processing the call arguments (line 1035)
        
        # Call to len(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'self' (line 1035)
        self_506426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 27), 'self', False)
        # Obtaining the member 'outtypes' of a type (line 1035)
        outtypes_506427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 27), self_506426, 'outtypes')
        # Processing the call keyword arguments (line 1035)
        kwargs_506428 = {}
        # Getting the type of 'len' (line 1035)
        len_506425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 23), 'len', False)
        # Calling len(args, kwargs) (line 1035)
        len_call_result_506429 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 23), len_506425, *[outtypes_506427], **kwargs_506428)
        
        # Processing the call keyword arguments (line 1035)
        kwargs_506430 = {}
        # Getting the type of 'range' (line 1035)
        range_506424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 17), 'range', False)
        # Calling range(args, kwargs) (line 1035)
        range_call_result_506431 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 17), range_506424, *[len_call_result_506429], **kwargs_506430)
        
        # Testing the type of a for loop iterable (line 1035)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1035, 8), range_call_result_506431)
        # Getting the type of the for loop variable (line 1035)
        for_loop_var_506432 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1035, 8), range_call_result_506431)
        # Assigning a type to the variable 'n' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'n', for_loop_var_506432)
        # SSA begins for a for statement (line 1035)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 1036)
        # Processing the call arguments (line 1036)
        
        # Call to format(...): (line 1036)
        # Processing the call arguments (line 1036)
        # Getting the type of 'n' (line 1036)
        n_506437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 40), 'n', False)
        # Processing the call keyword arguments (line 1036)
        kwargs_506438 = {}
        str_506435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 27), 'str', 'y{}')
        # Obtaining the member 'format' of a type (line 1036)
        format_506436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 27), str_506435, 'format')
        # Calling format(args, kwargs) (line 1036)
        format_call_result_506439 = invoke(stypy.reporting.localization.Localization(__file__, 1036, 27), format_506436, *[n_506437], **kwargs_506438)
        
        # Processing the call keyword arguments (line 1036)
        kwargs_506440 = {}
        # Getting the type of 'outvars' (line 1036)
        outvars_506433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 12), 'outvars', False)
        # Obtaining the member 'append' of a type (line 1036)
        append_506434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 12), outvars_506433, 'append')
        # Calling append(args, kwargs) (line 1036)
        append_call_result_506441 = invoke(stypy.reporting.localization.Localization(__file__, 1036, 12), append_506434, *[format_call_result_506439], **kwargs_506440)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1037)
        tuple_506442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1037)
        # Adding element type (line 1037)
        # Getting the type of 'invars' (line 1037)
        invars_506443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 15), 'invars')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 15), tuple_506442, invars_506443)
        # Adding element type (line 1037)
        # Getting the type of 'outvars' (line 1037)
        outvars_506444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 23), 'outvars')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 15), tuple_506442, outvars_506444)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1037)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1037, 8), 'stypy_return_type', tuple_506442)
        
        # ################# End of '_get_vars(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_vars' in the type store
        # Getting the type of 'stypy_return_type' (line 1030)
        stypy_return_type_506445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_506445)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_vars'
        return stypy_return_type_506445


    @norecursion
    def _get_conditional(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_conditional'
        module_type_store = module_type_store.open_function_context('_get_conditional', 1039, 4, False)
        # Assigning a type to the variable 'self' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_conditional')
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_param_names_list', ['types', 'codes', 'adverb'])
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_conditional.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_conditional', ['types', 'codes', 'adverb'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_conditional', localization, ['types', 'codes', 'adverb'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_conditional(...)' code ##################

        str_506446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, (-1)), 'str', 'Generate an if/elif/else clause that selects a specialization of\n        fused types.\n\n        ')
        
        # Assigning a List to a Name (line 1044):
        
        # Assigning a List to a Name (line 1044):
        
        # Obtaining an instance of the builtin type 'list' (line 1044)
        list_506447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1044)
        
        # Assigning a type to the variable 'clauses' (line 1044)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1044, 8), 'clauses', list_506447)
        
        # Assigning a Call to a Name (line 1045):
        
        # Assigning a Call to a Name (line 1045):
        
        # Call to set(...): (line 1045)
        # Processing the call keyword arguments (line 1045)
        kwargs_506449 = {}
        # Getting the type of 'set' (line 1045)
        set_506448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 15), 'set', False)
        # Calling set(args, kwargs) (line 1045)
        set_call_result_506450 = invoke(stypy.reporting.localization.Localization(__file__, 1045, 15), set_506448, *[], **kwargs_506449)
        
        # Assigning a type to the variable 'seen' (line 1045)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1045, 8), 'seen', set_call_result_506450)
        
        
        # Call to zip(...): (line 1046)
        # Processing the call arguments (line 1046)
        # Getting the type of 'types' (line 1046)
        types_506452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 40), 'types', False)
        # Getting the type of 'codes' (line 1046)
        codes_506453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 47), 'codes', False)
        # Processing the call keyword arguments (line 1046)
        kwargs_506454 = {}
        # Getting the type of 'zip' (line 1046)
        zip_506451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 36), 'zip', False)
        # Calling zip(args, kwargs) (line 1046)
        zip_call_result_506455 = invoke(stypy.reporting.localization.Localization(__file__, 1046, 36), zip_506451, *[types_506452, codes_506453], **kwargs_506454)
        
        # Testing the type of a for loop iterable (line 1046)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1046, 8), zip_call_result_506455)
        # Getting the type of the for loop variable (line 1046)
        for_loop_var_506456 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1046, 8), zip_call_result_506455)
        # Assigning a type to the variable 'typ' (line 1046)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1046, 8), 'typ', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 8), for_loop_var_506456))
        # Assigning a type to the variable 'typcode' (line 1046)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1046, 8), 'typcode', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 8), for_loop_var_506456))
        # Assigning a type to the variable 'code' (line 1046)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1046, 8), 'code', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1046, 8), for_loop_var_506456))
        # SSA begins for a for statement (line 1046)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Call to len(...): (line 1047)
        # Processing the call arguments (line 1047)
        # Getting the type of 'typcode' (line 1047)
        typcode_506458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 19), 'typcode', False)
        # Processing the call keyword arguments (line 1047)
        kwargs_506459 = {}
        # Getting the type of 'len' (line 1047)
        len_506457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 15), 'len', False)
        # Calling len(args, kwargs) (line 1047)
        len_call_result_506460 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 15), len_506457, *[typcode_506458], **kwargs_506459)
        
        int_506461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 31), 'int')
        # Applying the binary operator '==' (line 1047)
        result_eq_506462 = python_operator(stypy.reporting.localization.Localization(__file__, 1047, 15), '==', len_call_result_506460, int_506461)
        
        # Testing the type of an if condition (line 1047)
        if_condition_506463 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1047, 12), result_eq_506462)
        # Assigning a type to the variable 'if_condition_506463' (line 1047)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1047, 12), 'if_condition_506463', if_condition_506463)
        # SSA begins for if statement (line 1047)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # SSA join for if statement (line 1047)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'typ' (line 1049)
        typ_506464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 15), 'typ')
        # Getting the type of 'seen' (line 1049)
        seen_506465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 26), 'seen')
        # Applying the binary operator 'notin' (line 1049)
        result_contains_506466 = python_operator(stypy.reporting.localization.Localization(__file__, 1049, 15), 'notin', typ_506464, seen_506465)
        
        # Testing the type of an if condition (line 1049)
        if_condition_506467 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1049, 12), result_contains_506466)
        # Assigning a type to the variable 'if_condition_506467' (line 1049)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1049, 12), 'if_condition_506467', if_condition_506467)
        # SSA begins for if statement (line 1049)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 1050)
        # Processing the call arguments (line 1050)
        
        # Call to format(...): (line 1050)
        # Processing the call arguments (line 1050)
        # Getting the type of 'typ' (line 1050)
        typ_506472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 49), 'typ', False)
        
        # Call to underscore(...): (line 1050)
        # Processing the call arguments (line 1050)
        
        # Obtaining the type of the subscript
        # Getting the type of 'code' (line 1050)
        code_506474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 74), 'code', False)
        # Getting the type of 'CY_TYPES' (line 1050)
        CY_TYPES_506475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 65), 'CY_TYPES', False)
        # Obtaining the member '__getitem__' of a type (line 1050)
        getitem___506476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1050, 65), CY_TYPES_506475, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1050)
        subscript_call_result_506477 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 65), getitem___506476, code_506474)
        
        # Processing the call keyword arguments (line 1050)
        kwargs_506478 = {}
        # Getting the type of 'underscore' (line 1050)
        underscore_506473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 54), 'underscore', False)
        # Calling underscore(args, kwargs) (line 1050)
        underscore_call_result_506479 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 54), underscore_506473, *[subscript_call_result_506477], **kwargs_506478)
        
        # Processing the call keyword arguments (line 1050)
        kwargs_506480 = {}
        str_506470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1050, 31), 'str', '{} is {}')
        # Obtaining the member 'format' of a type (line 1050)
        format_506471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1050, 31), str_506470, 'format')
        # Calling format(args, kwargs) (line 1050)
        format_call_result_506481 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 31), format_506471, *[typ_506472, underscore_call_result_506479], **kwargs_506480)
        
        # Processing the call keyword arguments (line 1050)
        kwargs_506482 = {}
        # Getting the type of 'clauses' (line 1050)
        clauses_506468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 16), 'clauses', False)
        # Obtaining the member 'append' of a type (line 1050)
        append_506469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1050, 16), clauses_506468, 'append')
        # Calling append(args, kwargs) (line 1050)
        append_call_result_506483 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 16), append_506469, *[format_call_result_506481], **kwargs_506482)
        
        
        # Call to add(...): (line 1051)
        # Processing the call arguments (line 1051)
        # Getting the type of 'typ' (line 1051)
        typ_506486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 25), 'typ', False)
        # Processing the call keyword arguments (line 1051)
        kwargs_506487 = {}
        # Getting the type of 'seen' (line 1051)
        seen_506484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 16), 'seen', False)
        # Obtaining the member 'add' of a type (line 1051)
        add_506485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 16), seen_506484, 'add')
        # Calling add(args, kwargs) (line 1051)
        add_call_result_506488 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 16), add_506485, *[typ_506486], **kwargs_506487)
        
        # SSA join for if statement (line 1049)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        # Getting the type of 'clauses' (line 1052)
        clauses_506489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 11), 'clauses')
        
        # Getting the type of 'adverb' (line 1052)
        adverb_506490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 23), 'adverb')
        str_506491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1052, 33), 'str', 'else')
        # Applying the binary operator '!=' (line 1052)
        result_ne_506492 = python_operator(stypy.reporting.localization.Localization(__file__, 1052, 23), '!=', adverb_506490, str_506491)
        
        # Applying the binary operator 'and' (line 1052)
        result_and_keyword_506493 = python_operator(stypy.reporting.localization.Localization(__file__, 1052, 11), 'and', clauses_506489, result_ne_506492)
        
        # Testing the type of an if condition (line 1052)
        if_condition_506494 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1052, 8), result_and_keyword_506493)
        # Assigning a type to the variable 'if_condition_506494' (line 1052)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1052, 8), 'if_condition_506494', if_condition_506494)
        # SSA begins for if statement (line 1052)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1053):
        
        # Assigning a Call to a Name (line 1053):
        
        # Call to format(...): (line 1053)
        # Processing the call arguments (line 1053)
        # Getting the type of 'adverb' (line 1053)
        adverb_506497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 35), 'adverb', False)
        
        # Call to join(...): (line 1053)
        # Processing the call arguments (line 1053)
        # Getting the type of 'clauses' (line 1053)
        clauses_506500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 56), 'clauses', False)
        # Processing the call keyword arguments (line 1053)
        kwargs_506501 = {}
        str_506498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 43), 'str', ' and ')
        # Obtaining the member 'join' of a type (line 1053)
        join_506499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1053, 43), str_506498, 'join')
        # Calling join(args, kwargs) (line 1053)
        join_call_result_506502 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 43), join_506499, *[clauses_506500], **kwargs_506501)
        
        # Processing the call keyword arguments (line 1053)
        kwargs_506503 = {}
        str_506495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 19), 'str', '{} {}:')
        # Obtaining the member 'format' of a type (line 1053)
        format_506496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1053, 19), str_506495, 'format')
        # Calling format(args, kwargs) (line 1053)
        format_call_result_506504 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 19), format_506496, *[adverb_506497, join_call_result_506502], **kwargs_506503)
        
        # Assigning a type to the variable 'line' (line 1053)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1053, 12), 'line', format_call_result_506504)
        # SSA branch for the else part of an if statement (line 1052)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        # Getting the type of 'clauses' (line 1054)
        clauses_506505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 13), 'clauses')
        
        # Getting the type of 'adverb' (line 1054)
        adverb_506506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 25), 'adverb')
        str_506507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 35), 'str', 'else')
        # Applying the binary operator '==' (line 1054)
        result_eq_506508 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 25), '==', adverb_506506, str_506507)
        
        # Applying the binary operator 'and' (line 1054)
        result_and_keyword_506509 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 13), 'and', clauses_506505, result_eq_506508)
        
        # Testing the type of an if condition (line 1054)
        if_condition_506510 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1054, 13), result_and_keyword_506509)
        # Assigning a type to the variable 'if_condition_506510' (line 1054)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1054, 13), 'if_condition_506510', if_condition_506510)
        # SSA begins for if statement (line 1054)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1055):
        
        # Assigning a Str to a Name (line 1055):
        str_506511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 19), 'str', 'else:')
        # Assigning a type to the variable 'line' (line 1055)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1055, 12), 'line', str_506511)
        # SSA branch for the else part of an if statement (line 1054)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1057):
        
        # Assigning a Name to a Name (line 1057):
        # Getting the type of 'None' (line 1057)
        None_506512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 19), 'None')
        # Assigning a type to the variable 'line' (line 1057)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1057, 12), 'line', None_506512)
        # SSA join for if statement (line 1054)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1052)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'line' (line 1058)
        line_506513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 15), 'line')
        # Assigning a type to the variable 'stypy_return_type' (line 1058)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1058, 8), 'stypy_return_type', line_506513)
        
        # ################# End of '_get_conditional(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_conditional' in the type store
        # Getting the type of 'stypy_return_type' (line 1039)
        stypy_return_type_506514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_506514)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_conditional'
        return stypy_return_type_506514


    @norecursion
    def _get_incallvars(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_incallvars'
        module_type_store = module_type_store.open_function_context('_get_incallvars', 1060, 4, False)
        # Assigning a type to the variable 'self' (line 1061)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1061, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_incallvars')
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_param_names_list', ['intypes', 'c'])
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_incallvars.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_incallvars', ['intypes', 'c'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_incallvars', localization, ['intypes', 'c'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_incallvars(...)' code ##################

        str_506515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, (-1)), 'str', "Generate pure input variables to a specialization,\n        i.e. variables that aren't used to return a value.\n\n        ")
        
        # Assigning a List to a Name (line 1065):
        
        # Assigning a List to a Name (line 1065):
        
        # Obtaining an instance of the builtin type 'list' (line 1065)
        list_506516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1065, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1065)
        
        # Assigning a type to the variable 'incallvars' (line 1065)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1065, 8), 'incallvars', list_506516)
        
        
        # Call to enumerate(...): (line 1066)
        # Processing the call arguments (line 1066)
        # Getting the type of 'intypes' (line 1066)
        intypes_506518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 35), 'intypes', False)
        # Processing the call keyword arguments (line 1066)
        kwargs_506519 = {}
        # Getting the type of 'enumerate' (line 1066)
        enumerate_506517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 25), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1066)
        enumerate_call_result_506520 = invoke(stypy.reporting.localization.Localization(__file__, 1066, 25), enumerate_506517, *[intypes_506518], **kwargs_506519)
        
        # Testing the type of a for loop iterable (line 1066)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1066, 8), enumerate_call_result_506520)
        # Getting the type of the for loop variable (line 1066)
        for_loop_var_506521 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1066, 8), enumerate_call_result_506520)
        # Assigning a type to the variable 'n' (line 1066)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1066, 8), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1066, 8), for_loop_var_506521))
        # Assigning a type to the variable 'intype' (line 1066)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1066, 8), 'intype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1066, 8), for_loop_var_506521))
        # SSA begins for a for statement (line 1066)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Name (line 1067):
        
        # Assigning a Subscript to a Name (line 1067):
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 1067)
        n_506522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 30), 'n')
        # Getting the type of 'self' (line 1067)
        self_506523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 18), 'self')
        # Obtaining the member 'invars' of a type (line 1067)
        invars_506524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 18), self_506523, 'invars')
        # Obtaining the member '__getitem__' of a type (line 1067)
        getitem___506525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 18), invars_506524, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1067)
        subscript_call_result_506526 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 18), getitem___506525, n_506522)
        
        # Assigning a type to the variable 'var' (line 1067)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 12), 'var', subscript_call_result_506526)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'c' (line 1068)
        c_506527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 15), 'c')
        
        # Getting the type of 'intype' (line 1068)
        intype_506528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 21), 'intype')
        str_506529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1068, 31), 'str', 'double complex')
        # Applying the binary operator '==' (line 1068)
        result_eq_506530 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 21), '==', intype_506528, str_506529)
        
        # Applying the binary operator 'and' (line 1068)
        result_and_keyword_506531 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 15), 'and', c_506527, result_eq_506530)
        
        # Testing the type of an if condition (line 1068)
        if_condition_506532 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1068, 12), result_and_keyword_506531)
        # Assigning a type to the variable 'if_condition_506532' (line 1068)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1068, 12), 'if_condition_506532', if_condition_506532)
        # SSA begins for if statement (line 1068)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1069):
        
        # Assigning a Call to a Name (line 1069):
        
        # Call to npy_cdouble_from_double_complex(...): (line 1069)
        # Processing the call arguments (line 1069)
        # Getting the type of 'var' (line 1069)
        var_506534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 54), 'var', False)
        # Processing the call keyword arguments (line 1069)
        kwargs_506535 = {}
        # Getting the type of 'npy_cdouble_from_double_complex' (line 1069)
        npy_cdouble_from_double_complex_506533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 22), 'npy_cdouble_from_double_complex', False)
        # Calling npy_cdouble_from_double_complex(args, kwargs) (line 1069)
        npy_cdouble_from_double_complex_call_result_506536 = invoke(stypy.reporting.localization.Localization(__file__, 1069, 22), npy_cdouble_from_double_complex_506533, *[var_506534], **kwargs_506535)
        
        # Assigning a type to the variable 'var' (line 1069)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1069, 16), 'var', npy_cdouble_from_double_complex_call_result_506536)
        # SSA join for if statement (line 1068)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to append(...): (line 1070)
        # Processing the call arguments (line 1070)
        # Getting the type of 'var' (line 1070)
        var_506539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 30), 'var', False)
        # Processing the call keyword arguments (line 1070)
        kwargs_506540 = {}
        # Getting the type of 'incallvars' (line 1070)
        incallvars_506537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 12), 'incallvars', False)
        # Obtaining the member 'append' of a type (line 1070)
        append_506538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1070, 12), incallvars_506537, 'append')
        # Calling append(args, kwargs) (line 1070)
        append_call_result_506541 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 12), append_506538, *[var_506539], **kwargs_506540)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'incallvars' (line 1071)
        incallvars_506542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 15), 'incallvars')
        # Assigning a type to the variable 'stypy_return_type' (line 1071)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1071, 8), 'stypy_return_type', incallvars_506542)
        
        # ################# End of '_get_incallvars(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_incallvars' in the type store
        # Getting the type of 'stypy_return_type' (line 1060)
        stypy_return_type_506543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_506543)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_incallvars'
        return stypy_return_type_506543


    @norecursion
    def _get_outcallvars(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_outcallvars'
        module_type_store = module_type_store.open_function_context('_get_outcallvars', 1073, 4, False)
        # Assigning a type to the variable 'self' (line 1074)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1074, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_outcallvars')
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_param_names_list', ['outtypes', 'c'])
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_outcallvars.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_outcallvars', ['outtypes', 'c'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_outcallvars', localization, ['outtypes', 'c'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_outcallvars(...)' code ##################

        str_506544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1077, (-1)), 'str', 'Generate output variables to a specialization,\n        i.e. pointers that are used to return values.\n\n        ')
        
        # Assigning a Tuple to a Tuple (line 1078):
        
        # Assigning a List to a Name (line 1078):
        
        # Obtaining an instance of the builtin type 'list' (line 1078)
        list_506545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1078)
        
        # Assigning a type to the variable 'tuple_assignment_503937' (line 1078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 8), 'tuple_assignment_503937', list_506545)
        
        # Assigning a List to a Name (line 1078):
        
        # Obtaining an instance of the builtin type 'list' (line 1078)
        list_506546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1078)
        
        # Assigning a type to the variable 'tuple_assignment_503938' (line 1078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 8), 'tuple_assignment_503938', list_506546)
        
        # Assigning a List to a Name (line 1078):
        
        # Obtaining an instance of the builtin type 'list' (line 1078)
        list_506547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 46), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1078)
        
        # Assigning a type to the variable 'tuple_assignment_503939' (line 1078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 8), 'tuple_assignment_503939', list_506547)
        
        # Assigning a Name to a Name (line 1078):
        # Getting the type of 'tuple_assignment_503937' (line 1078)
        tuple_assignment_503937_506548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 8), 'tuple_assignment_503937')
        # Assigning a type to the variable 'outcallvars' (line 1078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 8), 'outcallvars', tuple_assignment_503937_506548)
        
        # Assigning a Name to a Name (line 1078):
        # Getting the type of 'tuple_assignment_503938' (line 1078)
        tuple_assignment_503938_506549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 8), 'tuple_assignment_503938')
        # Assigning a type to the variable 'tmpvars' (line 1078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 21), 'tmpvars', tuple_assignment_503938_506549)
        
        # Assigning a Name to a Name (line 1078):
        # Getting the type of 'tuple_assignment_503939' (line 1078)
        tuple_assignment_503939_506550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 8), 'tuple_assignment_503939')
        # Assigning a type to the variable 'casts' (line 1078)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 30), 'casts', tuple_assignment_503939_506550)
        
        # Assigning a BinOp to a Name (line 1081):
        
        # Assigning a BinOp to a Name (line 1081):
        
        # Call to len(...): (line 1081)
        # Processing the call arguments (line 1081)
        # Getting the type of 'self' (line 1081)
        self_506552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 20), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1081)
        outvars_506553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1081, 20), self_506552, 'outvars')
        # Processing the call keyword arguments (line 1081)
        kwargs_506554 = {}
        # Getting the type of 'len' (line 1081)
        len_506551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 16), 'len', False)
        # Calling len(args, kwargs) (line 1081)
        len_call_result_506555 = invoke(stypy.reporting.localization.Localization(__file__, 1081, 16), len_506551, *[outvars_506553], **kwargs_506554)
        
        
        # Call to len(...): (line 1081)
        # Processing the call arguments (line 1081)
        # Getting the type of 'outtypes' (line 1081)
        outtypes_506557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 40), 'outtypes', False)
        # Processing the call keyword arguments (line 1081)
        kwargs_506558 = {}
        # Getting the type of 'len' (line 1081)
        len_506556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 36), 'len', False)
        # Calling len(args, kwargs) (line 1081)
        len_call_result_506559 = invoke(stypy.reporting.localization.Localization(__file__, 1081, 36), len_506556, *[outtypes_506557], **kwargs_506558)
        
        # Applying the binary operator '-' (line 1081)
        result_sub_506560 = python_operator(stypy.reporting.localization.Localization(__file__, 1081, 16), '-', len_call_result_506555, len_call_result_506559)
        
        # Assigning a type to the variable 'start' (line 1081)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1081, 8), 'start', result_sub_506560)
        
        # Assigning a Subscript to a Name (line 1082):
        
        # Assigning a Subscript to a Name (line 1082):
        
        # Obtaining the type of the subscript
        # Getting the type of 'start' (line 1082)
        start_506561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 31), 'start')
        slice_506562 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1082, 18), start_506561, None, None)
        # Getting the type of 'self' (line 1082)
        self_506563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 18), 'self')
        # Obtaining the member 'outvars' of a type (line 1082)
        outvars_506564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1082, 18), self_506563, 'outvars')
        # Obtaining the member '__getitem__' of a type (line 1082)
        getitem___506565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1082, 18), outvars_506564, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1082)
        subscript_call_result_506566 = invoke(stypy.reporting.localization.Localization(__file__, 1082, 18), getitem___506565, slice_506562)
        
        # Assigning a type to the variable 'outvars' (line 1082)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1082, 8), 'outvars', subscript_call_result_506566)
        
        
        # Call to enumerate(...): (line 1083)
        # Processing the call arguments (line 1083)
        
        # Call to zip(...): (line 1083)
        # Processing the call arguments (line 1083)
        # Getting the type of 'outvars' (line 1083)
        outvars_506569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 47), 'outvars', False)
        # Getting the type of 'outtypes' (line 1083)
        outtypes_506570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 56), 'outtypes', False)
        # Processing the call keyword arguments (line 1083)
        kwargs_506571 = {}
        # Getting the type of 'zip' (line 1083)
        zip_506568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 43), 'zip', False)
        # Calling zip(args, kwargs) (line 1083)
        zip_call_result_506572 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 43), zip_506568, *[outvars_506569, outtypes_506570], **kwargs_506571)
        
        # Processing the call keyword arguments (line 1083)
        kwargs_506573 = {}
        # Getting the type of 'enumerate' (line 1083)
        enumerate_506567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 33), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1083)
        enumerate_call_result_506574 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 33), enumerate_506567, *[zip_call_result_506572], **kwargs_506573)
        
        # Testing the type of a for loop iterable (line 1083)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1083, 8), enumerate_call_result_506574)
        # Getting the type of the for loop variable (line 1083)
        for_loop_var_506575 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1083, 8), enumerate_call_result_506574)
        # Assigning a type to the variable 'n' (line 1083)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1083, 8), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1083, 8), for_loop_var_506575))
        # Assigning a type to the variable 'var' (line 1083)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1083, 8), 'var', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1083, 8), for_loop_var_506575))
        # Assigning a type to the variable 'outtype' (line 1083)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1083, 8), 'outtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1083, 8), for_loop_var_506575))
        # SSA begins for a for statement (line 1083)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Evaluating a boolean operation
        # Getting the type of 'c' (line 1084)
        c_506576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 15), 'c')
        
        # Getting the type of 'outtype' (line 1084)
        outtype_506577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 21), 'outtype')
        str_506578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 32), 'str', 'double complex')
        # Applying the binary operator '==' (line 1084)
        result_eq_506579 = python_operator(stypy.reporting.localization.Localization(__file__, 1084, 21), '==', outtype_506577, str_506578)
        
        # Applying the binary operator 'and' (line 1084)
        result_and_keyword_506580 = python_operator(stypy.reporting.localization.Localization(__file__, 1084, 15), 'and', c_506576, result_eq_506579)
        
        # Testing the type of an if condition (line 1084)
        if_condition_506581 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1084, 12), result_and_keyword_506580)
        # Assigning a type to the variable 'if_condition_506581' (line 1084)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1084, 12), 'if_condition_506581', if_condition_506581)
        # SSA begins for if statement (line 1084)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1085):
        
        # Assigning a Call to a Name (line 1085):
        
        # Call to format(...): (line 1085)
        # Processing the call arguments (line 1085)
        # Getting the type of 'n' (line 1085)
        n_506584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1085, 37), 'n', False)
        # Processing the call keyword arguments (line 1085)
        kwargs_506585 = {}
        str_506582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1085, 22), 'str', 'tmp{}')
        # Obtaining the member 'format' of a type (line 1085)
        format_506583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1085, 22), str_506582, 'format')
        # Calling format(args, kwargs) (line 1085)
        format_call_result_506586 = invoke(stypy.reporting.localization.Localization(__file__, 1085, 22), format_506583, *[n_506584], **kwargs_506585)
        
        # Assigning a type to the variable 'tmp' (line 1085)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1085, 16), 'tmp', format_call_result_506586)
        
        # Call to append(...): (line 1086)
        # Processing the call arguments (line 1086)
        # Getting the type of 'tmp' (line 1086)
        tmp_506589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 31), 'tmp', False)
        # Processing the call keyword arguments (line 1086)
        kwargs_506590 = {}
        # Getting the type of 'tmpvars' (line 1086)
        tmpvars_506587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 16), 'tmpvars', False)
        # Obtaining the member 'append' of a type (line 1086)
        append_506588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1086, 16), tmpvars_506587, 'append')
        # Calling append(args, kwargs) (line 1086)
        append_call_result_506591 = invoke(stypy.reporting.localization.Localization(__file__, 1086, 16), append_506588, *[tmp_506589], **kwargs_506590)
        
        
        # Call to append(...): (line 1087)
        # Processing the call arguments (line 1087)
        
        # Call to format(...): (line 1087)
        # Processing the call arguments (line 1087)
        # Getting the type of 'tmp' (line 1087)
        tmp_506596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 48), 'tmp', False)
        # Processing the call keyword arguments (line 1087)
        kwargs_506597 = {}
        str_506594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1087, 35), 'str', '&{}')
        # Obtaining the member 'format' of a type (line 1087)
        format_506595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1087, 35), str_506594, 'format')
        # Calling format(args, kwargs) (line 1087)
        format_call_result_506598 = invoke(stypy.reporting.localization.Localization(__file__, 1087, 35), format_506595, *[tmp_506596], **kwargs_506597)
        
        # Processing the call keyword arguments (line 1087)
        kwargs_506599 = {}
        # Getting the type of 'outcallvars' (line 1087)
        outcallvars_506592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 16), 'outcallvars', False)
        # Obtaining the member 'append' of a type (line 1087)
        append_506593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1087, 16), outcallvars_506592, 'append')
        # Calling append(args, kwargs) (line 1087)
        append_call_result_506600 = invoke(stypy.reporting.localization.Localization(__file__, 1087, 16), append_506593, *[format_call_result_506598], **kwargs_506599)
        
        
        # Assigning a Call to a Name (line 1088):
        
        # Assigning a Call to a Name (line 1088):
        
        # Call to double_complex_from_npy_cdouble(...): (line 1088)
        # Processing the call arguments (line 1088)
        # Getting the type of 'tmp' (line 1088)
        tmp_506602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 58), 'tmp', False)
        # Processing the call keyword arguments (line 1088)
        kwargs_506603 = {}
        # Getting the type of 'double_complex_from_npy_cdouble' (line 1088)
        double_complex_from_npy_cdouble_506601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 26), 'double_complex_from_npy_cdouble', False)
        # Calling double_complex_from_npy_cdouble(args, kwargs) (line 1088)
        double_complex_from_npy_cdouble_call_result_506604 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 26), double_complex_from_npy_cdouble_506601, *[tmp_506602], **kwargs_506603)
        
        # Assigning a type to the variable 'tmpcast' (line 1088)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1088, 16), 'tmpcast', double_complex_from_npy_cdouble_call_result_506604)
        
        # Call to append(...): (line 1089)
        # Processing the call arguments (line 1089)
        
        # Call to format(...): (line 1089)
        # Processing the call arguments (line 1089)
        # Getting the type of 'var' (line 1089)
        var_506609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 49), 'var', False)
        # Getting the type of 'tmpcast' (line 1089)
        tmpcast_506610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 54), 'tmpcast', False)
        # Processing the call keyword arguments (line 1089)
        kwargs_506611 = {}
        str_506607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, 29), 'str', '{}[0] = {}')
        # Obtaining the member 'format' of a type (line 1089)
        format_506608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1089, 29), str_506607, 'format')
        # Calling format(args, kwargs) (line 1089)
        format_call_result_506612 = invoke(stypy.reporting.localization.Localization(__file__, 1089, 29), format_506608, *[var_506609, tmpcast_506610], **kwargs_506611)
        
        # Processing the call keyword arguments (line 1089)
        kwargs_506613 = {}
        # Getting the type of 'casts' (line 1089)
        casts_506605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 16), 'casts', False)
        # Obtaining the member 'append' of a type (line 1089)
        append_506606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1089, 16), casts_506605, 'append')
        # Calling append(args, kwargs) (line 1089)
        append_call_result_506614 = invoke(stypy.reporting.localization.Localization(__file__, 1089, 16), append_506606, *[format_call_result_506612], **kwargs_506613)
        
        # SSA branch for the else part of an if statement (line 1084)
        module_type_store.open_ssa_branch('else')
        
        # Call to append(...): (line 1091)
        # Processing the call arguments (line 1091)
        
        # Call to format(...): (line 1091)
        # Processing the call arguments (line 1091)
        # Getting the type of 'var' (line 1091)
        var_506619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 47), 'var', False)
        # Processing the call keyword arguments (line 1091)
        kwargs_506620 = {}
        str_506617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 35), 'str', '{}')
        # Obtaining the member 'format' of a type (line 1091)
        format_506618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1091, 35), str_506617, 'format')
        # Calling format(args, kwargs) (line 1091)
        format_call_result_506621 = invoke(stypy.reporting.localization.Localization(__file__, 1091, 35), format_506618, *[var_506619], **kwargs_506620)
        
        # Processing the call keyword arguments (line 1091)
        kwargs_506622 = {}
        # Getting the type of 'outcallvars' (line 1091)
        outcallvars_506615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 16), 'outcallvars', False)
        # Obtaining the member 'append' of a type (line 1091)
        append_506616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1091, 16), outcallvars_506615, 'append')
        # Calling append(args, kwargs) (line 1091)
        append_call_result_506623 = invoke(stypy.reporting.localization.Localization(__file__, 1091, 16), append_506616, *[format_call_result_506621], **kwargs_506622)
        
        # SSA join for if statement (line 1084)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1092)
        tuple_506624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1092, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1092)
        # Adding element type (line 1092)
        # Getting the type of 'outcallvars' (line 1092)
        outcallvars_506625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 15), 'outcallvars')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1092, 15), tuple_506624, outcallvars_506625)
        # Adding element type (line 1092)
        # Getting the type of 'tmpvars' (line 1092)
        tmpvars_506626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 28), 'tmpvars')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1092, 15), tuple_506624, tmpvars_506626)
        # Adding element type (line 1092)
        # Getting the type of 'casts' (line 1092)
        casts_506627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 37), 'casts')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1092, 15), tuple_506624, casts_506627)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1092)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1092, 8), 'stypy_return_type', tuple_506624)
        
        # ################# End of '_get_outcallvars(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_outcallvars' in the type store
        # Getting the type of 'stypy_return_type' (line 1073)
        stypy_return_type_506628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_506628)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_outcallvars'
        return stypy_return_type_506628


    @norecursion
    def _get_nan_decs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_nan_decs'
        module_type_store = module_type_store.open_function_context('_get_nan_decs', 1094, 4, False)
        # Assigning a type to the variable 'self' (line 1095)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1095, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_nan_decs')
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_param_names_list', [])
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_nan_decs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_nan_decs', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_nan_decs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_nan_decs(...)' code ##################

        str_506629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, (-1)), 'str', "Set all variables to nan for specializations of fused types for\n        which don't have signatures.\n\n        ")
        
        # Assigning a BinOp to a Name (line 1100):
        
        # Assigning a BinOp to a Name (line 1100):
        str_506630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 14), 'str', ' ')
        int_506631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 18), 'int')
        # Applying the binary operator '*' (line 1100)
        result_mul_506632 = python_operator(stypy.reporting.localization.Localization(__file__, 1100, 14), '*', str_506630, int_506631)
        
        # Assigning a type to the variable 'tab' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'tab', result_mul_506632)
        
        # Assigning a Tuple to a Tuple (line 1101):
        
        # Assigning a List to a Name (line 1101):
        
        # Obtaining an instance of the builtin type 'list' (line 1101)
        list_506633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1101)
        
        # Assigning a type to the variable 'tuple_assignment_503940' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_assignment_503940', list_506633)
        
        # Assigning a List to a Name (line 1101):
        
        # Obtaining an instance of the builtin type 'list' (line 1101)
        list_506634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1101)
        # Adding element type (line 1101)
        # Getting the type of 'tab' (line 1101)
        tab_506635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 34), 'tab')
        str_506636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 40), 'str', 'else:')
        # Applying the binary operator '+' (line 1101)
        result_add_506637 = python_operator(stypy.reporting.localization.Localization(__file__, 1101, 34), '+', tab_506635, str_506636)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1101, 33), list_506634, result_add_506637)
        
        # Assigning a type to the variable 'tuple_assignment_503941' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_assignment_503941', list_506634)
        
        # Assigning a Name to a Name (line 1101):
        # Getting the type of 'tuple_assignment_503940' (line 1101)
        tuple_assignment_503940_506638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_assignment_503940')
        # Assigning a type to the variable 'fused_types' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'fused_types', tuple_assignment_503940_506638)
        
        # Assigning a Name to a Name (line 1101):
        # Getting the type of 'tuple_assignment_503941' (line 1101)
        tuple_assignment_503941_506639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_assignment_503941')
        # Assigning a type to the variable 'lines' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 21), 'lines', tuple_assignment_503941_506639)
        
        # Assigning a Call to a Name (line 1102):
        
        # Assigning a Call to a Name (line 1102):
        
        # Call to set(...): (line 1102)
        # Processing the call keyword arguments (line 1102)
        kwargs_506641 = {}
        # Getting the type of 'set' (line 1102)
        set_506640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 15), 'set', False)
        # Calling set(args, kwargs) (line 1102)
        set_call_result_506642 = invoke(stypy.reporting.localization.Localization(__file__, 1102, 15), set_506640, *[], **kwargs_506641)
        
        # Assigning a type to the variable 'seen' (line 1102)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1102, 8), 'seen', set_call_result_506642)
        
        
        # Call to zip(...): (line 1103)
        # Processing the call arguments (line 1103)
        # Getting the type of 'self' (line 1103)
        self_506644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 41), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1103)
        outvars_506645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1103, 41), self_506644, 'outvars')
        # Getting the type of 'self' (line 1103)
        self_506646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 55), 'self', False)
        # Obtaining the member 'outtypes' of a type (line 1103)
        outtypes_506647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1103, 55), self_506646, 'outtypes')
        # Getting the type of 'self' (line 1103)
        self_506648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 70), 'self', False)
        # Obtaining the member 'outcodes' of a type (line 1103)
        outcodes_506649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1103, 70), self_506648, 'outcodes')
        # Processing the call keyword arguments (line 1103)
        kwargs_506650 = {}
        # Getting the type of 'zip' (line 1103)
        zip_506643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 37), 'zip', False)
        # Calling zip(args, kwargs) (line 1103)
        zip_call_result_506651 = invoke(stypy.reporting.localization.Localization(__file__, 1103, 37), zip_506643, *[outvars_506645, outtypes_506647, outcodes_506649], **kwargs_506650)
        
        # Testing the type of a for loop iterable (line 1103)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1103, 8), zip_call_result_506651)
        # Getting the type of the for loop variable (line 1103)
        for_loop_var_506652 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1103, 8), zip_call_result_506651)
        # Assigning a type to the variable 'outvar' (line 1103)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1103, 8), 'outvar', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1103, 8), for_loop_var_506652))
        # Assigning a type to the variable 'outtype' (line 1103)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1103, 8), 'outtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1103, 8), for_loop_var_506652))
        # Assigning a type to the variable 'code' (line 1103)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1103, 8), 'code', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1103, 8), for_loop_var_506652))
        # SSA begins for a for statement (line 1103)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Call to len(...): (line 1104)
        # Processing the call arguments (line 1104)
        # Getting the type of 'code' (line 1104)
        code_506654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1104, 19), 'code', False)
        # Processing the call keyword arguments (line 1104)
        kwargs_506655 = {}
        # Getting the type of 'len' (line 1104)
        len_506653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1104, 15), 'len', False)
        # Calling len(args, kwargs) (line 1104)
        len_call_result_506656 = invoke(stypy.reporting.localization.Localization(__file__, 1104, 15), len_506653, *[code_506654], **kwargs_506655)
        
        int_506657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1104, 28), 'int')
        # Applying the binary operator '==' (line 1104)
        result_eq_506658 = python_operator(stypy.reporting.localization.Localization(__file__, 1104, 15), '==', len_call_result_506656, int_506657)
        
        # Testing the type of an if condition (line 1104)
        if_condition_506659 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1104, 12), result_eq_506658)
        # Assigning a type to the variable 'if_condition_506659' (line 1104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1104, 12), 'if_condition_506659', if_condition_506659)
        # SSA begins for if statement (line 1104)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1105):
        
        # Assigning a Call to a Name (line 1105):
        
        # Call to format(...): (line 1105)
        # Processing the call arguments (line 1105)
        # Getting the type of 'outvar' (line 1105)
        outvar_506662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 43), 'outvar', False)
        
        # Obtaining the type of the subscript
        # Getting the type of 'code' (line 1105)
        code_506663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 61), 'code', False)
        # Getting the type of 'NAN_VALUE' (line 1105)
        NAN_VALUE_506664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 51), 'NAN_VALUE', False)
        # Obtaining the member '__getitem__' of a type (line 1105)
        getitem___506665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 51), NAN_VALUE_506664, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1105)
        subscript_call_result_506666 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 51), getitem___506665, code_506663)
        
        # Processing the call keyword arguments (line 1105)
        kwargs_506667 = {}
        str_506660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1105, 23), 'str', '{}[0] = {}')
        # Obtaining the member 'format' of a type (line 1105)
        format_506661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 23), str_506660, 'format')
        # Calling format(args, kwargs) (line 1105)
        format_call_result_506668 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 23), format_506661, *[outvar_506662, subscript_call_result_506666], **kwargs_506667)
        
        # Assigning a type to the variable 'line' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 16), 'line', format_call_result_506668)
        
        # Call to append(...): (line 1106)
        # Processing the call arguments (line 1106)
        int_506671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1106, 29), 'int')
        # Getting the type of 'tab' (line 1106)
        tab_506672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 31), 'tab', False)
        # Applying the binary operator '*' (line 1106)
        result_mul_506673 = python_operator(stypy.reporting.localization.Localization(__file__, 1106, 29), '*', int_506671, tab_506672)
        
        # Getting the type of 'line' (line 1106)
        line_506674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 37), 'line', False)
        # Applying the binary operator '+' (line 1106)
        result_add_506675 = python_operator(stypy.reporting.localization.Localization(__file__, 1106, 29), '+', result_mul_506673, line_506674)
        
        # Processing the call keyword arguments (line 1106)
        kwargs_506676 = {}
        # Getting the type of 'lines' (line 1106)
        lines_506669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 16), 'lines', False)
        # Obtaining the member 'append' of a type (line 1106)
        append_506670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1106, 16), lines_506669, 'append')
        # Calling append(args, kwargs) (line 1106)
        append_call_result_506677 = invoke(stypy.reporting.localization.Localization(__file__, 1106, 16), append_506670, *[result_add_506675], **kwargs_506676)
        
        # SSA branch for the else part of an if statement (line 1104)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1108):
        
        # Assigning a Name to a Name (line 1108):
        # Getting the type of 'outtype' (line 1108)
        outtype_506678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1108, 29), 'outtype')
        # Assigning a type to the variable 'fused_type' (line 1108)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1108, 16), 'fused_type', outtype_506678)
        
        # Assigning a Name to a Tuple (line 1109):
        
        # Assigning a Subscript to a Name (line 1109):
        
        # Obtaining the type of the subscript
        int_506679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 16), 'int')
        # Getting the type of 'fused_type' (line 1109)
        fused_type_506680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 26), 'fused_type')
        # Obtaining the member '__getitem__' of a type (line 1109)
        getitem___506681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1109, 16), fused_type_506680, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1109)
        subscript_call_result_506682 = invoke(stypy.reporting.localization.Localization(__file__, 1109, 16), getitem___506681, int_506679)
        
        # Assigning a type to the variable 'tuple_var_assignment_503942' (line 1109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1109, 16), 'tuple_var_assignment_503942', subscript_call_result_506682)
        
        # Assigning a Subscript to a Name (line 1109):
        
        # Obtaining the type of the subscript
        int_506683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 16), 'int')
        # Getting the type of 'fused_type' (line 1109)
        fused_type_506684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 26), 'fused_type')
        # Obtaining the member '__getitem__' of a type (line 1109)
        getitem___506685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1109, 16), fused_type_506684, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1109)
        subscript_call_result_506686 = invoke(stypy.reporting.localization.Localization(__file__, 1109, 16), getitem___506685, int_506683)
        
        # Assigning a type to the variable 'tuple_var_assignment_503943' (line 1109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1109, 16), 'tuple_var_assignment_503943', subscript_call_result_506686)
        
        # Assigning a Name to a Name (line 1109):
        # Getting the type of 'tuple_var_assignment_503942' (line 1109)
        tuple_var_assignment_503942_506687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 16), 'tuple_var_assignment_503942')
        # Assigning a type to the variable 'name' (line 1109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1109, 16), 'name', tuple_var_assignment_503942_506687)
        
        # Assigning a Name to a Name (line 1109):
        # Getting the type of 'tuple_var_assignment_503943' (line 1109)
        tuple_var_assignment_503943_506688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 16), 'tuple_var_assignment_503943')
        # Assigning a type to the variable '_' (line 1109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1109, 22), '_', tuple_var_assignment_503943_506688)
        
        
        # Getting the type of 'name' (line 1110)
        name_506689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1110, 19), 'name')
        # Getting the type of 'seen' (line 1110)
        seen_506690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1110, 31), 'seen')
        # Applying the binary operator 'notin' (line 1110)
        result_contains_506691 = python_operator(stypy.reporting.localization.Localization(__file__, 1110, 19), 'notin', name_506689, seen_506690)
        
        # Testing the type of an if condition (line 1110)
        if_condition_506692 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1110, 16), result_contains_506691)
        # Assigning a type to the variable 'if_condition_506692' (line 1110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1110, 16), 'if_condition_506692', if_condition_506692)
        # SSA begins for if statement (line 1110)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 1111)
        # Processing the call arguments (line 1111)
        # Getting the type of 'fused_type' (line 1111)
        fused_type_506695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 39), 'fused_type', False)
        # Processing the call keyword arguments (line 1111)
        kwargs_506696 = {}
        # Getting the type of 'fused_types' (line 1111)
        fused_types_506693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 20), 'fused_types', False)
        # Obtaining the member 'append' of a type (line 1111)
        append_506694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1111, 20), fused_types_506693, 'append')
        # Calling append(args, kwargs) (line 1111)
        append_call_result_506697 = invoke(stypy.reporting.localization.Localization(__file__, 1111, 20), append_506694, *[fused_type_506695], **kwargs_506696)
        
        
        # Call to add(...): (line 1112)
        # Processing the call arguments (line 1112)
        # Getting the type of 'name' (line 1112)
        name_506700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 29), 'name', False)
        # Processing the call keyword arguments (line 1112)
        kwargs_506701 = {}
        # Getting the type of 'seen' (line 1112)
        seen_506698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 20), 'seen', False)
        # Obtaining the member 'add' of a type (line 1112)
        add_506699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1112, 20), seen_506698, 'add')
        # Calling add(args, kwargs) (line 1112)
        add_call_result_506702 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 20), add_506699, *[name_506700], **kwargs_506701)
        
        # SSA join for if statement (line 1110)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1104)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'fused_types' (line 1113)
        fused_types_506703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 15), 'fused_types')
        # Applying the 'not' unary operator (line 1113)
        result_not__506704 = python_operator(stypy.reporting.localization.Localization(__file__, 1113, 11), 'not', fused_types_506703)
        
        # Testing the type of an if condition (line 1113)
        if_condition_506705 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1113, 8), result_not__506704)
        # Assigning a type to the variable 'if_condition_506705' (line 1113)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1113, 8), 'if_condition_506705', if_condition_506705)
        # SSA begins for if statement (line 1113)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'lines' (line 1114)
        lines_506706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 19), 'lines')
        # Assigning a type to the variable 'stypy_return_type' (line 1114)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1114, 12), 'stypy_return_type', lines_506706)
        # SSA join for if statement (line 1113)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a List to a Name (line 1117):
        
        # Assigning a List to a Name (line 1117):
        
        # Obtaining an instance of the builtin type 'list' (line 1117)
        list_506707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1117, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1117)
        
        # Assigning a type to the variable 'all_codes' (line 1117)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1117, 8), 'all_codes', list_506707)
        
        # Getting the type of 'fused_types' (line 1118)
        fused_types_506708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 26), 'fused_types')
        # Testing the type of a for loop iterable (line 1118)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1118, 8), fused_types_506708)
        # Getting the type of the for loop variable (line 1118)
        for_loop_var_506709 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1118, 8), fused_types_506708)
        # Assigning a type to the variable 'fused_type' (line 1118)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1118, 8), 'fused_type', for_loop_var_506709)
        # SSA begins for a for statement (line 1118)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Name to a Tuple (line 1119):
        
        # Assigning a Subscript to a Name (line 1119):
        
        # Obtaining the type of the subscript
        int_506710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 12), 'int')
        # Getting the type of 'fused_type' (line 1119)
        fused_type_506711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 23), 'fused_type')
        # Obtaining the member '__getitem__' of a type (line 1119)
        getitem___506712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1119, 12), fused_type_506711, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1119)
        subscript_call_result_506713 = invoke(stypy.reporting.localization.Localization(__file__, 1119, 12), getitem___506712, int_506710)
        
        # Assigning a type to the variable 'tuple_var_assignment_503944' (line 1119)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1119, 12), 'tuple_var_assignment_503944', subscript_call_result_506713)
        
        # Assigning a Subscript to a Name (line 1119):
        
        # Obtaining the type of the subscript
        int_506714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 12), 'int')
        # Getting the type of 'fused_type' (line 1119)
        fused_type_506715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 23), 'fused_type')
        # Obtaining the member '__getitem__' of a type (line 1119)
        getitem___506716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1119, 12), fused_type_506715, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1119)
        subscript_call_result_506717 = invoke(stypy.reporting.localization.Localization(__file__, 1119, 12), getitem___506716, int_506714)
        
        # Assigning a type to the variable 'tuple_var_assignment_503945' (line 1119)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1119, 12), 'tuple_var_assignment_503945', subscript_call_result_506717)
        
        # Assigning a Name to a Name (line 1119):
        # Getting the type of 'tuple_var_assignment_503944' (line 1119)
        tuple_var_assignment_503944_506718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 12), 'tuple_var_assignment_503944')
        # Assigning a type to the variable '_' (line 1119)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1119, 12), '_', tuple_var_assignment_503944_506718)
        
        # Assigning a Name to a Name (line 1119):
        # Getting the type of 'tuple_var_assignment_503945' (line 1119)
        tuple_var_assignment_503945_506719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 12), 'tuple_var_assignment_503945')
        # Assigning a type to the variable 'codes' (line 1119)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1119, 15), 'codes', tuple_var_assignment_503945_506719)
        
        # Call to append(...): (line 1120)
        # Processing the call arguments (line 1120)
        # Getting the type of 'codes' (line 1120)
        codes_506722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 29), 'codes', False)
        # Processing the call keyword arguments (line 1120)
        kwargs_506723 = {}
        # Getting the type of 'all_codes' (line 1120)
        all_codes_506720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 12), 'all_codes', False)
        # Obtaining the member 'append' of a type (line 1120)
        append_506721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1120, 12), all_codes_506720, 'append')
        # Calling append(args, kwargs) (line 1120)
        append_call_result_506724 = invoke(stypy.reporting.localization.Localization(__file__, 1120, 12), append_506721, *[codes_506722], **kwargs_506723)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1121):
        
        # Assigning a Call to a Name (line 1121):
        
        # Call to tuple(...): (line 1121)
        # Processing the call arguments (line 1121)
        # Getting the type of 'all_codes' (line 1121)
        all_codes_506726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 26), 'all_codes', False)
        # Processing the call keyword arguments (line 1121)
        kwargs_506727 = {}
        # Getting the type of 'tuple' (line 1121)
        tuple_506725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 20), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1121)
        tuple_call_result_506728 = invoke(stypy.reporting.localization.Localization(__file__, 1121, 20), tuple_506725, *[all_codes_506726], **kwargs_506727)
        
        # Assigning a type to the variable 'all_codes' (line 1121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1121, 8), 'all_codes', tuple_call_result_506728)
        
        # Assigning a Call to a Name (line 1123):
        
        # Assigning a Call to a Name (line 1123):
        
        # Call to list(...): (line 1123)
        # Processing the call arguments (line 1123)
        
        # Call to map(...): (line 1123)
        # Processing the call arguments (line 1123)

        @norecursion
        def _stypy_temp_lambda_301(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_301'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_301', 1123, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_301.stypy_localization = localization
            _stypy_temp_lambda_301.stypy_type_of_self = None
            _stypy_temp_lambda_301.stypy_type_store = module_type_store
            _stypy_temp_lambda_301.stypy_function_name = '_stypy_temp_lambda_301'
            _stypy_temp_lambda_301.stypy_param_names_list = ['x']
            _stypy_temp_lambda_301.stypy_varargs_param_name = None
            _stypy_temp_lambda_301.stypy_kwargs_param_name = None
            _stypy_temp_lambda_301.stypy_call_defaults = defaults
            _stypy_temp_lambda_301.stypy_call_varargs = varargs
            _stypy_temp_lambda_301.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_301', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_301', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to len(...): (line 1123)
            # Processing the call arguments (line 1123)
            # Getting the type of 'x' (line 1123)
            x_506732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 42), 'x', False)
            # Processing the call keyword arguments (line 1123)
            kwargs_506733 = {}
            # Getting the type of 'len' (line 1123)
            len_506731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 38), 'len', False)
            # Calling len(args, kwargs) (line 1123)
            len_call_result_506734 = invoke(stypy.reporting.localization.Localization(__file__, 1123, 38), len_506731, *[x_506732], **kwargs_506733)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1123)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1123, 28), 'stypy_return_type', len_call_result_506734)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_301' in the type store
            # Getting the type of 'stypy_return_type' (line 1123)
            stypy_return_type_506735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_506735)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_301'
            return stypy_return_type_506735

        # Assigning a type to the variable '_stypy_temp_lambda_301' (line 1123)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1123, 28), '_stypy_temp_lambda_301', _stypy_temp_lambda_301)
        # Getting the type of '_stypy_temp_lambda_301' (line 1123)
        _stypy_temp_lambda_301_506736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 28), '_stypy_temp_lambda_301')
        # Getting the type of 'all_codes' (line 1123)
        all_codes_506737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 46), 'all_codes', False)
        # Processing the call keyword arguments (line 1123)
        kwargs_506738 = {}
        # Getting the type of 'map' (line 1123)
        map_506730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 24), 'map', False)
        # Calling map(args, kwargs) (line 1123)
        map_call_result_506739 = invoke(stypy.reporting.localization.Localization(__file__, 1123, 24), map_506730, *[_stypy_temp_lambda_301_506736, all_codes_506737], **kwargs_506738)
        
        # Processing the call keyword arguments (line 1123)
        kwargs_506740 = {}
        # Getting the type of 'list' (line 1123)
        list_506729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 19), 'list', False)
        # Calling list(args, kwargs) (line 1123)
        list_call_result_506741 = invoke(stypy.reporting.localization.Localization(__file__, 1123, 19), list_506729, *[map_call_result_506739], **kwargs_506740)
        
        # Assigning a type to the variable 'codelens' (line 1123)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1123, 8), 'codelens', list_call_result_506741)
        
        # Assigning a BinOp to a Name (line 1124):
        
        # Assigning a BinOp to a Name (line 1124):
        
        # Call to product(...): (line 1124)
        # Processing the call arguments (line 1124)
        # Getting the type of 'codelens' (line 1124)
        codelens_506744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 29), 'codelens', False)
        # Processing the call keyword arguments (line 1124)
        kwargs_506745 = {}
        # Getting the type of 'numpy' (line 1124)
        numpy_506742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 15), 'numpy', False)
        # Obtaining the member 'product' of a type (line 1124)
        product_506743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1124, 15), numpy_506742, 'product')
        # Calling product(args, kwargs) (line 1124)
        product_call_result_506746 = invoke(stypy.reporting.localization.Localization(__file__, 1124, 15), product_506743, *[codelens_506744], **kwargs_506745)
        
        int_506747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1124, 41), 'int')
        # Applying the binary operator '-' (line 1124)
        result_sub_506748 = python_operator(stypy.reporting.localization.Localization(__file__, 1124, 15), '-', product_call_result_506746, int_506747)
        
        # Assigning a type to the variable 'last' (line 1124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1124, 8), 'last', result_sub_506748)
        
        
        # Call to enumerate(...): (line 1125)
        # Processing the call arguments (line 1125)
        
        # Call to product(...): (line 1125)
        # Getting the type of 'all_codes' (line 1125)
        all_codes_506752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 53), 'all_codes', False)
        # Processing the call keyword arguments (line 1125)
        kwargs_506753 = {}
        # Getting the type of 'itertools' (line 1125)
        itertools_506750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 34), 'itertools', False)
        # Obtaining the member 'product' of a type (line 1125)
        product_506751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1125, 34), itertools_506750, 'product')
        # Calling product(args, kwargs) (line 1125)
        product_call_result_506754 = invoke(stypy.reporting.localization.Localization(__file__, 1125, 34), product_506751, *[all_codes_506752], **kwargs_506753)
        
        # Processing the call keyword arguments (line 1125)
        kwargs_506755 = {}
        # Getting the type of 'enumerate' (line 1125)
        enumerate_506749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 24), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1125)
        enumerate_call_result_506756 = invoke(stypy.reporting.localization.Localization(__file__, 1125, 24), enumerate_506749, *[product_call_result_506754], **kwargs_506755)
        
        # Testing the type of a for loop iterable (line 1125)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1125, 8), enumerate_call_result_506756)
        # Getting the type of the for loop variable (line 1125)
        for_loop_var_506757 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1125, 8), enumerate_call_result_506756)
        # Assigning a type to the variable 'm' (line 1125)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1125, 8), 'm', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1125, 8), for_loop_var_506757))
        # Assigning a type to the variable 'codes' (line 1125)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1125, 8), 'codes', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1125, 8), for_loop_var_506757))
        # SSA begins for a for statement (line 1125)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Tuple to a Tuple (line 1126):
        
        # Assigning a List to a Name (line 1126):
        
        # Obtaining an instance of the builtin type 'list' (line 1126)
        list_506758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1126)
        
        # Assigning a type to the variable 'tuple_assignment_503946' (line 1126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 12), 'tuple_assignment_503946', list_506758)
        
        # Assigning a List to a Name (line 1126):
        
        # Obtaining an instance of the builtin type 'list' (line 1126)
        list_506759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1126)
        
        # Assigning a type to the variable 'tuple_assignment_503947' (line 1126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 12), 'tuple_assignment_503947', list_506759)
        
        # Assigning a Name to a Name (line 1126):
        # Getting the type of 'tuple_assignment_503946' (line 1126)
        tuple_assignment_503946_506760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 12), 'tuple_assignment_503946')
        # Assigning a type to the variable 'fused_codes' (line 1126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 12), 'fused_codes', tuple_assignment_503946_506760)
        
        # Assigning a Name to a Name (line 1126):
        # Getting the type of 'tuple_assignment_503947' (line 1126)
        tuple_assignment_503947_506761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 12), 'tuple_assignment_503947')
        # Assigning a type to the variable 'decs' (line 1126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 25), 'decs', tuple_assignment_503947_506761)
        
        
        # Call to enumerate(...): (line 1127)
        # Processing the call arguments (line 1127)
        # Getting the type of 'fused_types' (line 1127)
        fused_types_506763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 43), 'fused_types', False)
        # Processing the call keyword arguments (line 1127)
        kwargs_506764 = {}
        # Getting the type of 'enumerate' (line 1127)
        enumerate_506762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 33), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1127)
        enumerate_call_result_506765 = invoke(stypy.reporting.localization.Localization(__file__, 1127, 33), enumerate_506762, *[fused_types_506763], **kwargs_506764)
        
        # Testing the type of a for loop iterable (line 1127)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1127, 12), enumerate_call_result_506765)
        # Getting the type of the for loop variable (line 1127)
        for_loop_var_506766 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1127, 12), enumerate_call_result_506765)
        # Assigning a type to the variable 'n' (line 1127)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1127, 12), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1127, 12), for_loop_var_506766))
        # Assigning a type to the variable 'fused_type' (line 1127)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1127, 12), 'fused_type', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1127, 12), for_loop_var_506766))
        # SSA begins for a for statement (line 1127)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Name (line 1128):
        
        # Assigning a Subscript to a Name (line 1128):
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 1128)
        n_506767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 29), 'n')
        # Getting the type of 'codes' (line 1128)
        codes_506768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 23), 'codes')
        # Obtaining the member '__getitem__' of a type (line 1128)
        getitem___506769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1128, 23), codes_506768, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1128)
        subscript_call_result_506770 = invoke(stypy.reporting.localization.Localization(__file__, 1128, 23), getitem___506769, n_506767)
        
        # Assigning a type to the variable 'code' (line 1128)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1128, 16), 'code', subscript_call_result_506770)
        
        # Call to append(...): (line 1129)
        # Processing the call arguments (line 1129)
        
        # Call to underscore(...): (line 1129)
        # Processing the call arguments (line 1129)
        
        # Obtaining the type of the subscript
        # Getting the type of 'code' (line 1129)
        code_506774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 55), 'code', False)
        # Getting the type of 'CY_TYPES' (line 1129)
        CY_TYPES_506775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 46), 'CY_TYPES', False)
        # Obtaining the member '__getitem__' of a type (line 1129)
        getitem___506776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1129, 46), CY_TYPES_506775, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1129)
        subscript_call_result_506777 = invoke(stypy.reporting.localization.Localization(__file__, 1129, 46), getitem___506776, code_506774)
        
        # Processing the call keyword arguments (line 1129)
        kwargs_506778 = {}
        # Getting the type of 'underscore' (line 1129)
        underscore_506773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 35), 'underscore', False)
        # Calling underscore(args, kwargs) (line 1129)
        underscore_call_result_506779 = invoke(stypy.reporting.localization.Localization(__file__, 1129, 35), underscore_506773, *[subscript_call_result_506777], **kwargs_506778)
        
        # Processing the call keyword arguments (line 1129)
        kwargs_506780 = {}
        # Getting the type of 'fused_codes' (line 1129)
        fused_codes_506771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 16), 'fused_codes', False)
        # Obtaining the member 'append' of a type (line 1129)
        append_506772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1129, 16), fused_codes_506771, 'append')
        # Calling append(args, kwargs) (line 1129)
        append_call_result_506781 = invoke(stypy.reporting.localization.Localization(__file__, 1129, 16), append_506772, *[underscore_call_result_506779], **kwargs_506780)
        
        
        
        # Call to enumerate(...): (line 1130)
        # Processing the call arguments (line 1130)
        # Getting the type of 'self' (line 1130)
        self_506783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1130, 44), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1130)
        outvars_506784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1130, 44), self_506783, 'outvars')
        # Processing the call keyword arguments (line 1130)
        kwargs_506785 = {}
        # Getting the type of 'enumerate' (line 1130)
        enumerate_506782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1130, 34), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1130)
        enumerate_call_result_506786 = invoke(stypy.reporting.localization.Localization(__file__, 1130, 34), enumerate_506782, *[outvars_506784], **kwargs_506785)
        
        # Testing the type of a for loop iterable (line 1130)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1130, 16), enumerate_call_result_506786)
        # Getting the type of the for loop variable (line 1130)
        for_loop_var_506787 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1130, 16), enumerate_call_result_506786)
        # Assigning a type to the variable 'nn' (line 1130)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1130, 16), 'nn', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1130, 16), for_loop_var_506787))
        # Assigning a type to the variable 'outvar' (line 1130)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1130, 16), 'outvar', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1130, 16), for_loop_var_506787))
        # SSA begins for a for statement (line 1130)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'nn' (line 1131)
        nn_506788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 37), 'nn')
        # Getting the type of 'self' (line 1131)
        self_506789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 23), 'self')
        # Obtaining the member 'outtypes' of a type (line 1131)
        outtypes_506790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1131, 23), self_506789, 'outtypes')
        # Obtaining the member '__getitem__' of a type (line 1131)
        getitem___506791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1131, 23), outtypes_506790, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1131)
        subscript_call_result_506792 = invoke(stypy.reporting.localization.Localization(__file__, 1131, 23), getitem___506791, nn_506788)
        
        # Getting the type of 'fused_type' (line 1131)
        fused_type_506793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 44), 'fused_type')
        # Applying the binary operator '==' (line 1131)
        result_eq_506794 = python_operator(stypy.reporting.localization.Localization(__file__, 1131, 23), '==', subscript_call_result_506792, fused_type_506793)
        
        # Testing the type of an if condition (line 1131)
        if_condition_506795 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1131, 20), result_eq_506794)
        # Assigning a type to the variable 'if_condition_506795' (line 1131)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1131, 20), 'if_condition_506795', if_condition_506795)
        # SSA begins for if statement (line 1131)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1132):
        
        # Assigning a Call to a Name (line 1132):
        
        # Call to format(...): (line 1132)
        # Processing the call arguments (line 1132)
        # Getting the type of 'outvar' (line 1132)
        outvar_506798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 51), 'outvar', False)
        
        # Obtaining the type of the subscript
        # Getting the type of 'code' (line 1132)
        code_506799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 69), 'code', False)
        # Getting the type of 'NAN_VALUE' (line 1132)
        NAN_VALUE_506800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 59), 'NAN_VALUE', False)
        # Obtaining the member '__getitem__' of a type (line 1132)
        getitem___506801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1132, 59), NAN_VALUE_506800, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1132)
        subscript_call_result_506802 = invoke(stypy.reporting.localization.Localization(__file__, 1132, 59), getitem___506801, code_506799)
        
        # Processing the call keyword arguments (line 1132)
        kwargs_506803 = {}
        str_506796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1132, 31), 'str', '{}[0] = {}')
        # Obtaining the member 'format' of a type (line 1132)
        format_506797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1132, 31), str_506796, 'format')
        # Calling format(args, kwargs) (line 1132)
        format_call_result_506804 = invoke(stypy.reporting.localization.Localization(__file__, 1132, 31), format_506797, *[outvar_506798, subscript_call_result_506802], **kwargs_506803)
        
        # Assigning a type to the variable 'line' (line 1132)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1132, 24), 'line', format_call_result_506804)
        
        # Call to append(...): (line 1133)
        # Processing the call arguments (line 1133)
        # Getting the type of 'line' (line 1133)
        line_506807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 36), 'line', False)
        # Processing the call keyword arguments (line 1133)
        kwargs_506808 = {}
        # Getting the type of 'decs' (line 1133)
        decs_506805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 24), 'decs', False)
        # Obtaining the member 'append' of a type (line 1133)
        append_506806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1133, 24), decs_506805, 'append')
        # Calling append(args, kwargs) (line 1133)
        append_call_result_506809 = invoke(stypy.reporting.localization.Localization(__file__, 1133, 24), append_506806, *[line_506807], **kwargs_506808)
        
        # SSA join for if statement (line 1131)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'm' (line 1134)
        m_506810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 15), 'm')
        int_506811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1134, 20), 'int')
        # Applying the binary operator '==' (line 1134)
        result_eq_506812 = python_operator(stypy.reporting.localization.Localization(__file__, 1134, 15), '==', m_506810, int_506811)
        
        # Testing the type of an if condition (line 1134)
        if_condition_506813 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1134, 12), result_eq_506812)
        # Assigning a type to the variable 'if_condition_506813' (line 1134)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1134, 12), 'if_condition_506813', if_condition_506813)
        # SSA begins for if statement (line 1134)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1135):
        
        # Assigning a Str to a Name (line 1135):
        str_506814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1135, 25), 'str', 'if')
        # Assigning a type to the variable 'adverb' (line 1135)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1135, 16), 'adverb', str_506814)
        # SSA branch for the else part of an if statement (line 1134)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'm' (line 1136)
        m_506815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1136, 17), 'm')
        # Getting the type of 'last' (line 1136)
        last_506816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1136, 22), 'last')
        # Applying the binary operator '==' (line 1136)
        result_eq_506817 = python_operator(stypy.reporting.localization.Localization(__file__, 1136, 17), '==', m_506815, last_506816)
        
        # Testing the type of an if condition (line 1136)
        if_condition_506818 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1136, 17), result_eq_506817)
        # Assigning a type to the variable 'if_condition_506818' (line 1136)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1136, 17), 'if_condition_506818', if_condition_506818)
        # SSA begins for if statement (line 1136)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1137):
        
        # Assigning a Str to a Name (line 1137):
        str_506819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1137, 25), 'str', 'else')
        # Assigning a type to the variable 'adverb' (line 1137)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1137, 16), 'adverb', str_506819)
        # SSA branch for the else part of an if statement (line 1136)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Str to a Name (line 1139):
        
        # Assigning a Str to a Name (line 1139):
        str_506820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 25), 'str', 'elif')
        # Assigning a type to the variable 'adverb' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 16), 'adverb', str_506820)
        # SSA join for if statement (line 1136)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1134)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1140):
        
        # Assigning a Call to a Name (line 1140):
        
        # Call to _get_conditional(...): (line 1140)
        # Processing the call arguments (line 1140)
        # Getting the type of 'fused_types' (line 1140)
        fused_types_506823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 41), 'fused_types', False)
        # Getting the type of 'codes' (line 1140)
        codes_506824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 54), 'codes', False)
        # Getting the type of 'adverb' (line 1140)
        adverb_506825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 61), 'adverb', False)
        # Processing the call keyword arguments (line 1140)
        kwargs_506826 = {}
        # Getting the type of 'self' (line 1140)
        self_506821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 19), 'self', False)
        # Obtaining the member '_get_conditional' of a type (line 1140)
        _get_conditional_506822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1140, 19), self_506821, '_get_conditional')
        # Calling _get_conditional(args, kwargs) (line 1140)
        _get_conditional_call_result_506827 = invoke(stypy.reporting.localization.Localization(__file__, 1140, 19), _get_conditional_506822, *[fused_types_506823, codes_506824, adverb_506825], **kwargs_506826)
        
        # Assigning a type to the variable 'cond' (line 1140)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1140, 12), 'cond', _get_conditional_call_result_506827)
        
        # Call to append(...): (line 1141)
        # Processing the call arguments (line 1141)
        int_506830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1141, 25), 'int')
        # Getting the type of 'tab' (line 1141)
        tab_506831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 27), 'tab', False)
        # Applying the binary operator '*' (line 1141)
        result_mul_506832 = python_operator(stypy.reporting.localization.Localization(__file__, 1141, 25), '*', int_506830, tab_506831)
        
        # Getting the type of 'cond' (line 1141)
        cond_506833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 33), 'cond', False)
        # Applying the binary operator '+' (line 1141)
        result_add_506834 = python_operator(stypy.reporting.localization.Localization(__file__, 1141, 25), '+', result_mul_506832, cond_506833)
        
        # Processing the call keyword arguments (line 1141)
        kwargs_506835 = {}
        # Getting the type of 'lines' (line 1141)
        lines_506828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 12), 'lines', False)
        # Obtaining the member 'append' of a type (line 1141)
        append_506829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1141, 12), lines_506828, 'append')
        # Calling append(args, kwargs) (line 1141)
        append_call_result_506836 = invoke(stypy.reporting.localization.Localization(__file__, 1141, 12), append_506829, *[result_add_506834], **kwargs_506835)
        
        
        # Call to extend(...): (line 1142)
        # Processing the call arguments (line 1142)
        
        # Call to map(...): (line 1142)
        # Processing the call arguments (line 1142)

        @norecursion
        def _stypy_temp_lambda_302(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_302'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_302', 1142, 29, True)
            # Passed parameters checking function
            _stypy_temp_lambda_302.stypy_localization = localization
            _stypy_temp_lambda_302.stypy_type_of_self = None
            _stypy_temp_lambda_302.stypy_type_store = module_type_store
            _stypy_temp_lambda_302.stypy_function_name = '_stypy_temp_lambda_302'
            _stypy_temp_lambda_302.stypy_param_names_list = ['x']
            _stypy_temp_lambda_302.stypy_varargs_param_name = None
            _stypy_temp_lambda_302.stypy_kwargs_param_name = None
            _stypy_temp_lambda_302.stypy_call_defaults = defaults
            _stypy_temp_lambda_302.stypy_call_varargs = varargs
            _stypy_temp_lambda_302.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_302', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_302', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            int_506840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1142, 39), 'int')
            # Getting the type of 'tab' (line 1142)
            tab_506841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 41), 'tab', False)
            # Applying the binary operator '*' (line 1142)
            result_mul_506842 = python_operator(stypy.reporting.localization.Localization(__file__, 1142, 39), '*', int_506840, tab_506841)
            
            # Getting the type of 'x' (line 1142)
            x_506843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 47), 'x', False)
            # Applying the binary operator '+' (line 1142)
            result_add_506844 = python_operator(stypy.reporting.localization.Localization(__file__, 1142, 39), '+', result_mul_506842, x_506843)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1142)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1142, 29), 'stypy_return_type', result_add_506844)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_302' in the type store
            # Getting the type of 'stypy_return_type' (line 1142)
            stypy_return_type_506845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 29), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_506845)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_302'
            return stypy_return_type_506845

        # Assigning a type to the variable '_stypy_temp_lambda_302' (line 1142)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1142, 29), '_stypy_temp_lambda_302', _stypy_temp_lambda_302)
        # Getting the type of '_stypy_temp_lambda_302' (line 1142)
        _stypy_temp_lambda_302_506846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 29), '_stypy_temp_lambda_302')
        # Getting the type of 'decs' (line 1142)
        decs_506847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 50), 'decs', False)
        # Processing the call keyword arguments (line 1142)
        kwargs_506848 = {}
        # Getting the type of 'map' (line 1142)
        map_506839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 25), 'map', False)
        # Calling map(args, kwargs) (line 1142)
        map_call_result_506849 = invoke(stypy.reporting.localization.Localization(__file__, 1142, 25), map_506839, *[_stypy_temp_lambda_302_506846, decs_506847], **kwargs_506848)
        
        # Processing the call keyword arguments (line 1142)
        kwargs_506850 = {}
        # Getting the type of 'lines' (line 1142)
        lines_506837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 12), 'lines', False)
        # Obtaining the member 'extend' of a type (line 1142)
        extend_506838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1142, 12), lines_506837, 'extend')
        # Calling extend(args, kwargs) (line 1142)
        extend_call_result_506851 = invoke(stypy.reporting.localization.Localization(__file__, 1142, 12), extend_506838, *[map_call_result_506849], **kwargs_506850)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'lines' (line 1143)
        lines_506852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 15), 'lines')
        # Assigning a type to the variable 'stypy_return_type' (line 1143)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1143, 8), 'stypy_return_type', lines_506852)
        
        # ################# End of '_get_nan_decs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_nan_decs' in the type store
        # Getting the type of 'stypy_return_type' (line 1094)
        stypy_return_type_506853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_506853)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_nan_decs'
        return stypy_return_type_506853


    @norecursion
    def _get_tmp_decs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_tmp_decs'
        module_type_store = module_type_store.open_function_context('_get_tmp_decs', 1145, 4, False)
        # Assigning a type to the variable 'self' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_tmp_decs')
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_param_names_list', ['all_tmpvars'])
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_tmp_decs.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_tmp_decs', ['all_tmpvars'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_tmp_decs', localization, ['all_tmpvars'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_tmp_decs(...)' code ##################

        str_506854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, (-1)), 'str', 'Generate the declarations of any necessary temporary\n        variables.\n\n        ')
        
        # Assigning a BinOp to a Name (line 1150):
        
        # Assigning a BinOp to a Name (line 1150):
        str_506855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 14), 'str', ' ')
        int_506856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1150, 18), 'int')
        # Applying the binary operator '*' (line 1150)
        result_mul_506857 = python_operator(stypy.reporting.localization.Localization(__file__, 1150, 14), '*', str_506855, int_506856)
        
        # Assigning a type to the variable 'tab' (line 1150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1150, 8), 'tab', result_mul_506857)
        
        # Assigning a Call to a Name (line 1151):
        
        # Assigning a Call to a Name (line 1151):
        
        # Call to list(...): (line 1151)
        # Processing the call arguments (line 1151)
        # Getting the type of 'all_tmpvars' (line 1151)
        all_tmpvars_506859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 23), 'all_tmpvars', False)
        # Processing the call keyword arguments (line 1151)
        kwargs_506860 = {}
        # Getting the type of 'list' (line 1151)
        list_506858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 18), 'list', False)
        # Calling list(args, kwargs) (line 1151)
        list_call_result_506861 = invoke(stypy.reporting.localization.Localization(__file__, 1151, 18), list_506858, *[all_tmpvars_506859], **kwargs_506860)
        
        # Assigning a type to the variable 'tmpvars' (line 1151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1151, 8), 'tmpvars', list_call_result_506861)
        
        # Call to sort(...): (line 1152)
        # Processing the call keyword arguments (line 1152)
        kwargs_506864 = {}
        # Getting the type of 'tmpvars' (line 1152)
        tmpvars_506862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 8), 'tmpvars', False)
        # Obtaining the member 'sort' of a type (line 1152)
        sort_506863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 8), tmpvars_506862, 'sort')
        # Calling sort(args, kwargs) (line 1152)
        sort_call_result_506865 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 8), sort_506863, *[], **kwargs_506864)
        
        
        # Assigning a List to a Name (line 1153):
        
        # Assigning a List to a Name (line 1153):
        
        # Obtaining an instance of the builtin type 'list' (line 1153)
        list_506866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1153)
        
        # Assigning a type to the variable 'tmpdecs' (line 1153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1153, 8), 'tmpdecs', list_506866)
        
        # Getting the type of 'tmpvars' (line 1154)
        tmpvars_506867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 22), 'tmpvars')
        # Testing the type of a for loop iterable (line 1154)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1154, 8), tmpvars_506867)
        # Getting the type of the for loop variable (line 1154)
        for_loop_var_506868 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1154, 8), tmpvars_506867)
        # Assigning a type to the variable 'tmpvar' (line 1154)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1154, 8), 'tmpvar', for_loop_var_506868)
        # SSA begins for a for statement (line 1154)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1155):
        
        # Assigning a Call to a Name (line 1155):
        
        # Call to format(...): (line 1155)
        # Processing the call arguments (line 1155)
        # Getting the type of 'tmpvar' (line 1155)
        tmpvar_506871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 48), 'tmpvar', False)
        # Processing the call keyword arguments (line 1155)
        kwargs_506872 = {}
        str_506869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1155, 19), 'str', 'cdef npy_cdouble {}')
        # Obtaining the member 'format' of a type (line 1155)
        format_506870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1155, 19), str_506869, 'format')
        # Calling format(args, kwargs) (line 1155)
        format_call_result_506873 = invoke(stypy.reporting.localization.Localization(__file__, 1155, 19), format_506870, *[tmpvar_506871], **kwargs_506872)
        
        # Assigning a type to the variable 'line' (line 1155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1155, 12), 'line', format_call_result_506873)
        
        # Call to append(...): (line 1156)
        # Processing the call arguments (line 1156)
        # Getting the type of 'tab' (line 1156)
        tab_506876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 27), 'tab', False)
        # Getting the type of 'line' (line 1156)
        line_506877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 33), 'line', False)
        # Applying the binary operator '+' (line 1156)
        result_add_506878 = python_operator(stypy.reporting.localization.Localization(__file__, 1156, 27), '+', tab_506876, line_506877)
        
        # Processing the call keyword arguments (line 1156)
        kwargs_506879 = {}
        # Getting the type of 'tmpdecs' (line 1156)
        tmpdecs_506874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 12), 'tmpdecs', False)
        # Obtaining the member 'append' of a type (line 1156)
        append_506875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1156, 12), tmpdecs_506874, 'append')
        # Calling append(args, kwargs) (line 1156)
        append_call_result_506880 = invoke(stypy.reporting.localization.Localization(__file__, 1156, 12), append_506875, *[result_add_506878], **kwargs_506879)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'tmpdecs' (line 1157)
        tmpdecs_506881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 15), 'tmpdecs')
        # Assigning a type to the variable 'stypy_return_type' (line 1157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1157, 8), 'stypy_return_type', tmpdecs_506881)
        
        # ################# End of '_get_tmp_decs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_tmp_decs' in the type store
        # Getting the type of 'stypy_return_type' (line 1145)
        stypy_return_type_506882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_506882)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_tmp_decs'
        return stypy_return_type_506882


    @norecursion
    def _get_python_wrap(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_python_wrap'
        module_type_store = module_type_store.open_function_context('_get_python_wrap', 1159, 4, False)
        # Assigning a type to the variable 'self' (line 1160)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1160, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_python_wrap')
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_param_names_list', [])
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_python_wrap.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_python_wrap', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_python_wrap', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_python_wrap(...)' code ##################

        str_506883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1163, (-1)), 'str', 'Generate a python wrapper for functions which pass their\n        arguments as pointers.\n\n        ')
        
        # Assigning a BinOp to a Name (line 1164):
        
        # Assigning a BinOp to a Name (line 1164):
        str_506884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1164, 14), 'str', ' ')
        int_506885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1164, 18), 'int')
        # Applying the binary operator '*' (line 1164)
        result_mul_506886 = python_operator(stypy.reporting.localization.Localization(__file__, 1164, 14), '*', str_506884, int_506885)
        
        # Assigning a type to the variable 'tab' (line 1164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1164, 8), 'tab', result_mul_506886)
        
        # Assigning a Tuple to a Tuple (line 1165):
        
        # Assigning a List to a Name (line 1165):
        
        # Obtaining an instance of the builtin type 'list' (line 1165)
        list_506887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1165, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1165)
        
        # Assigning a type to the variable 'tuple_assignment_503948' (line 1165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1165, 8), 'tuple_assignment_503948', list_506887)
        
        # Assigning a List to a Name (line 1165):
        
        # Obtaining an instance of the builtin type 'list' (line 1165)
        list_506888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1165, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1165)
        
        # Assigning a type to the variable 'tuple_assignment_503949' (line 1165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1165, 8), 'tuple_assignment_503949', list_506888)
        
        # Assigning a Name to a Name (line 1165):
        # Getting the type of 'tuple_assignment_503948' (line 1165)
        tuple_assignment_503948_506889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 8), 'tuple_assignment_503948')
        # Assigning a type to the variable 'body' (line 1165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1165, 8), 'body', tuple_assignment_503948_506889)
        
        # Assigning a Name to a Name (line 1165):
        # Getting the type of 'tuple_assignment_503949' (line 1165)
        tuple_assignment_503949_506890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 8), 'tuple_assignment_503949')
        # Assigning a type to the variable 'callvars' (line 1165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1165, 14), 'callvars', tuple_assignment_503949_506890)
        
        
        # Call to zip(...): (line 1166)
        # Processing the call arguments (line 1166)
        # Getting the type of 'self' (line 1166)
        self_506892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 38), 'self', False)
        # Obtaining the member 'intypes' of a type (line 1166)
        intypes_506893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 38), self_506892, 'intypes')
        # Getting the type of 'self' (line 1166)
        self_506894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 52), 'self', False)
        # Obtaining the member 'invars' of a type (line 1166)
        invars_506895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 52), self_506894, 'invars')
        # Processing the call keyword arguments (line 1166)
        kwargs_506896 = {}
        # Getting the type of 'zip' (line 1166)
        zip_506891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 34), 'zip', False)
        # Calling zip(args, kwargs) (line 1166)
        zip_call_result_506897 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 34), zip_506891, *[intypes_506893, invars_506895], **kwargs_506896)
        
        # Testing the type of a for loop iterable (line 1166)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1166, 8), zip_call_result_506897)
        # Getting the type of the for loop variable (line 1166)
        for_loop_var_506898 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1166, 8), zip_call_result_506897)
        # Assigning a type to the variable 'intype' (line 1166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 8), 'intype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1166, 8), for_loop_var_506898))
        # Assigning a type to the variable '_' (line 1166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 8), '_', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1166, 8), for_loop_var_506898))
        # Assigning a type to the variable 'invar' (line 1166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 8), 'invar', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1166, 8), for_loop_var_506898))
        # SSA begins for a for statement (line 1166)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 1167)
        # Processing the call arguments (line 1167)
        
        # Call to format(...): (line 1167)
        # Processing the call arguments (line 1167)
        # Getting the type of 'intype' (line 1167)
        intype_506903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 43), 'intype', False)
        # Getting the type of 'invar' (line 1167)
        invar_506904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 51), 'invar', False)
        # Processing the call keyword arguments (line 1167)
        kwargs_506905 = {}
        str_506901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 28), 'str', '{} {}')
        # Obtaining the member 'format' of a type (line 1167)
        format_506902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 28), str_506901, 'format')
        # Calling format(args, kwargs) (line 1167)
        format_call_result_506906 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 28), format_506902, *[intype_506903, invar_506904], **kwargs_506905)
        
        # Processing the call keyword arguments (line 1167)
        kwargs_506907 = {}
        # Getting the type of 'callvars' (line 1167)
        callvars_506899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 12), 'callvars', False)
        # Obtaining the member 'append' of a type (line 1167)
        append_506900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 12), callvars_506899, 'append')
        # Calling append(args, kwargs) (line 1167)
        append_call_result_506908 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 12), append_506900, *[format_call_result_506906], **kwargs_506907)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1168):
        
        # Assigning a Call to a Name (line 1168):
        
        # Call to format(...): (line 1168)
        # Processing the call arguments (line 1168)
        # Getting the type of 'self' (line 1168)
        self_506911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 44), 'self', False)
        # Obtaining the member 'name' of a type (line 1168)
        name_506912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1168, 44), self_506911, 'name')
        
        # Call to join(...): (line 1168)
        # Processing the call arguments (line 1168)
        # Getting the type of 'callvars' (line 1168)
        callvars_506915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 65), 'callvars', False)
        # Processing the call keyword arguments (line 1168)
        kwargs_506916 = {}
        str_506913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1168, 55), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1168)
        join_506914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1168, 55), str_506913, 'join')
        # Calling join(args, kwargs) (line 1168)
        join_call_result_506917 = invoke(stypy.reporting.localization.Localization(__file__, 1168, 55), join_506914, *[callvars_506915], **kwargs_506916)
        
        # Processing the call keyword arguments (line 1168)
        kwargs_506918 = {}
        str_506909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1168, 15), 'str', 'def _{}_pywrap({}):')
        # Obtaining the member 'format' of a type (line 1168)
        format_506910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1168, 15), str_506909, 'format')
        # Calling format(args, kwargs) (line 1168)
        format_call_result_506919 = invoke(stypy.reporting.localization.Localization(__file__, 1168, 15), format_506910, *[name_506912, join_call_result_506917], **kwargs_506918)
        
        # Assigning a type to the variable 'line' (line 1168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1168, 8), 'line', format_call_result_506919)
        
        # Call to append(...): (line 1169)
        # Processing the call arguments (line 1169)
        # Getting the type of 'line' (line 1169)
        line_506922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 20), 'line', False)
        # Processing the call keyword arguments (line 1169)
        kwargs_506923 = {}
        # Getting the type of 'body' (line 1169)
        body_506920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1169, 8), 'body', False)
        # Obtaining the member 'append' of a type (line 1169)
        append_506921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1169, 8), body_506920, 'append')
        # Calling append(args, kwargs) (line 1169)
        append_call_result_506924 = invoke(stypy.reporting.localization.Localization(__file__, 1169, 8), append_506921, *[line_506922], **kwargs_506923)
        
        
        
        # Call to zip(...): (line 1170)
        # Processing the call arguments (line 1170)
        # Getting the type of 'self' (line 1170)
        self_506926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 40), 'self', False)
        # Obtaining the member 'outtypes' of a type (line 1170)
        outtypes_506927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1170, 40), self_506926, 'outtypes')
        # Getting the type of 'self' (line 1170)
        self_506928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 55), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1170)
        outvars_506929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1170, 55), self_506928, 'outvars')
        # Processing the call keyword arguments (line 1170)
        kwargs_506930 = {}
        # Getting the type of 'zip' (line 1170)
        zip_506925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 36), 'zip', False)
        # Calling zip(args, kwargs) (line 1170)
        zip_call_result_506931 = invoke(stypy.reporting.localization.Localization(__file__, 1170, 36), zip_506925, *[outtypes_506927, outvars_506929], **kwargs_506930)
        
        # Testing the type of a for loop iterable (line 1170)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1170, 8), zip_call_result_506931)
        # Getting the type of the for loop variable (line 1170)
        for_loop_var_506932 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1170, 8), zip_call_result_506931)
        # Assigning a type to the variable 'outtype' (line 1170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1170, 8), 'outtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1170, 8), for_loop_var_506932))
        # Assigning a type to the variable '_' (line 1170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1170, 8), '_', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1170, 8), for_loop_var_506932))
        # Assigning a type to the variable 'outvar' (line 1170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1170, 8), 'outvar', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1170, 8), for_loop_var_506932))
        # SSA begins for a for statement (line 1170)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1171):
        
        # Assigning a Call to a Name (line 1171):
        
        # Call to format(...): (line 1171)
        # Processing the call arguments (line 1171)
        # Getting the type of 'outtype' (line 1171)
        outtype_506935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 39), 'outtype', False)
        # Getting the type of 'outvar' (line 1171)
        outvar_506936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 48), 'outvar', False)
        # Processing the call keyword arguments (line 1171)
        kwargs_506937 = {}
        str_506933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 19), 'str', 'cdef {} {}')
        # Obtaining the member 'format' of a type (line 1171)
        format_506934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 19), str_506933, 'format')
        # Calling format(args, kwargs) (line 1171)
        format_call_result_506938 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 19), format_506934, *[outtype_506935, outvar_506936], **kwargs_506937)
        
        # Assigning a type to the variable 'line' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 12), 'line', format_call_result_506938)
        
        # Call to append(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'tab' (line 1172)
        tab_506941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 24), 'tab', False)
        # Getting the type of 'line' (line 1172)
        line_506942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 30), 'line', False)
        # Applying the binary operator '+' (line 1172)
        result_add_506943 = python_operator(stypy.reporting.localization.Localization(__file__, 1172, 24), '+', tab_506941, line_506942)
        
        # Processing the call keyword arguments (line 1172)
        kwargs_506944 = {}
        # Getting the type of 'body' (line 1172)
        body_506939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 12), 'body', False)
        # Obtaining the member 'append' of a type (line 1172)
        append_506940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 12), body_506939, 'append')
        # Calling append(args, kwargs) (line 1172)
        append_call_result_506945 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 12), append_506940, *[result_add_506943], **kwargs_506944)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1173):
        
        # Assigning a Call to a Name (line 1173):
        
        # Call to map(...): (line 1173)
        # Processing the call arguments (line 1173)

        @norecursion
        def _stypy_temp_lambda_303(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_303'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_303', 1173, 27, True)
            # Passed parameters checking function
            _stypy_temp_lambda_303.stypy_localization = localization
            _stypy_temp_lambda_303.stypy_type_of_self = None
            _stypy_temp_lambda_303.stypy_type_store = module_type_store
            _stypy_temp_lambda_303.stypy_function_name = '_stypy_temp_lambda_303'
            _stypy_temp_lambda_303.stypy_param_names_list = ['x']
            _stypy_temp_lambda_303.stypy_varargs_param_name = None
            _stypy_temp_lambda_303.stypy_kwargs_param_name = None
            _stypy_temp_lambda_303.stypy_call_defaults = defaults
            _stypy_temp_lambda_303.stypy_call_varargs = varargs
            _stypy_temp_lambda_303.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_303', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_303', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to format(...): (line 1173)
            # Processing the call arguments (line 1173)
            # Getting the type of 'x' (line 1173)
            x_506949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 50), 'x', False)
            # Processing the call keyword arguments (line 1173)
            kwargs_506950 = {}
            str_506947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1173, 37), 'str', '&{}')
            # Obtaining the member 'format' of a type (line 1173)
            format_506948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1173, 37), str_506947, 'format')
            # Calling format(args, kwargs) (line 1173)
            format_call_result_506951 = invoke(stypy.reporting.localization.Localization(__file__, 1173, 37), format_506948, *[x_506949], **kwargs_506950)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1173)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1173, 27), 'stypy_return_type', format_call_result_506951)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_303' in the type store
            # Getting the type of 'stypy_return_type' (line 1173)
            stypy_return_type_506952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 27), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_506952)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_303'
            return stypy_return_type_506952

        # Assigning a type to the variable '_stypy_temp_lambda_303' (line 1173)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1173, 27), '_stypy_temp_lambda_303', _stypy_temp_lambda_303)
        # Getting the type of '_stypy_temp_lambda_303' (line 1173)
        _stypy_temp_lambda_303_506953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 27), '_stypy_temp_lambda_303')
        # Getting the type of 'self' (line 1173)
        self_506954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 54), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1173)
        outvars_506955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1173, 54), self_506954, 'outvars')
        # Processing the call keyword arguments (line 1173)
        kwargs_506956 = {}
        # Getting the type of 'map' (line 1173)
        map_506946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 23), 'map', False)
        # Calling map(args, kwargs) (line 1173)
        map_call_result_506957 = invoke(stypy.reporting.localization.Localization(__file__, 1173, 23), map_506946, *[_stypy_temp_lambda_303_506953, outvars_506955], **kwargs_506956)
        
        # Assigning a type to the variable 'addr_outvars' (line 1173)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1173, 8), 'addr_outvars', map_call_result_506957)
        
        # Assigning a Call to a Name (line 1174):
        
        # Assigning a Call to a Name (line 1174):
        
        # Call to format(...): (line 1174)
        # Processing the call arguments (line 1174)
        # Getting the type of 'self' (line 1174)
        self_506960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 35), 'self', False)
        # Obtaining the member 'name' of a type (line 1174)
        name_506961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1174, 35), self_506960, 'name')
        
        # Call to join(...): (line 1174)
        # Processing the call arguments (line 1174)
        # Getting the type of 'self' (line 1174)
        self_506964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1174, 56), 'self', False)
        # Obtaining the member 'invars' of a type (line 1174)
        invars_506965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1174, 56), self_506964, 'invars')
        # Processing the call keyword arguments (line 1174)
        kwargs_506966 = {}
        str_506962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1174, 46), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1174)
        join_506963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1174, 46), str_506962, 'join')
        # Calling join(args, kwargs) (line 1174)
        join_call_result_506967 = invoke(stypy.reporting.localization.Localization(__file__, 1174, 46), join_506963, *[invars_506965], **kwargs_506966)
        
        
        # Call to join(...): (line 1175)
        # Processing the call arguments (line 1175)
        # Getting the type of 'addr_outvars' (line 1175)
        addr_outvars_506970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 45), 'addr_outvars', False)
        # Processing the call keyword arguments (line 1175)
        kwargs_506971 = {}
        str_506968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1175, 35), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1175)
        join_506969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1175, 35), str_506968, 'join')
        # Calling join(args, kwargs) (line 1175)
        join_call_result_506972 = invoke(stypy.reporting.localization.Localization(__file__, 1175, 35), join_506969, *[addr_outvars_506970], **kwargs_506971)
        
        # Processing the call keyword arguments (line 1174)
        kwargs_506973 = {}
        str_506958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1174, 15), 'str', '{}({}, {})')
        # Obtaining the member 'format' of a type (line 1174)
        format_506959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1174, 15), str_506958, 'format')
        # Calling format(args, kwargs) (line 1174)
        format_call_result_506974 = invoke(stypy.reporting.localization.Localization(__file__, 1174, 15), format_506959, *[name_506961, join_call_result_506967, join_call_result_506972], **kwargs_506973)
        
        # Assigning a type to the variable 'line' (line 1174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1174, 8), 'line', format_call_result_506974)
        
        # Call to append(...): (line 1176)
        # Processing the call arguments (line 1176)
        # Getting the type of 'tab' (line 1176)
        tab_506977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 20), 'tab', False)
        # Getting the type of 'line' (line 1176)
        line_506978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 26), 'line', False)
        # Applying the binary operator '+' (line 1176)
        result_add_506979 = python_operator(stypy.reporting.localization.Localization(__file__, 1176, 20), '+', tab_506977, line_506978)
        
        # Processing the call keyword arguments (line 1176)
        kwargs_506980 = {}
        # Getting the type of 'body' (line 1176)
        body_506975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 8), 'body', False)
        # Obtaining the member 'append' of a type (line 1176)
        append_506976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 8), body_506975, 'append')
        # Calling append(args, kwargs) (line 1176)
        append_call_result_506981 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 8), append_506976, *[result_add_506979], **kwargs_506980)
        
        
        # Assigning a Call to a Name (line 1177):
        
        # Assigning a Call to a Name (line 1177):
        
        # Call to format(...): (line 1177)
        # Processing the call arguments (line 1177)
        
        # Call to join(...): (line 1177)
        # Processing the call arguments (line 1177)
        # Getting the type of 'self' (line 1177)
        self_506986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1177, 44), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1177)
        outvars_506987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1177, 44), self_506986, 'outvars')
        # Processing the call keyword arguments (line 1177)
        kwargs_506988 = {}
        str_506984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1177, 34), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1177)
        join_506985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1177, 34), str_506984, 'join')
        # Calling join(args, kwargs) (line 1177)
        join_call_result_506989 = invoke(stypy.reporting.localization.Localization(__file__, 1177, 34), join_506985, *[outvars_506987], **kwargs_506988)
        
        # Processing the call keyword arguments (line 1177)
        kwargs_506990 = {}
        str_506982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1177, 15), 'str', 'return {}')
        # Obtaining the member 'format' of a type (line 1177)
        format_506983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1177, 15), str_506982, 'format')
        # Calling format(args, kwargs) (line 1177)
        format_call_result_506991 = invoke(stypy.reporting.localization.Localization(__file__, 1177, 15), format_506983, *[join_call_result_506989], **kwargs_506990)
        
        # Assigning a type to the variable 'line' (line 1177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1177, 8), 'line', format_call_result_506991)
        
        # Call to append(...): (line 1178)
        # Processing the call arguments (line 1178)
        # Getting the type of 'tab' (line 1178)
        tab_506994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 20), 'tab', False)
        # Getting the type of 'line' (line 1178)
        line_506995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 26), 'line', False)
        # Applying the binary operator '+' (line 1178)
        result_add_506996 = python_operator(stypy.reporting.localization.Localization(__file__, 1178, 20), '+', tab_506994, line_506995)
        
        # Processing the call keyword arguments (line 1178)
        kwargs_506997 = {}
        # Getting the type of 'body' (line 1178)
        body_506992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 8), 'body', False)
        # Obtaining the member 'append' of a type (line 1178)
        append_506993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1178, 8), body_506992, 'append')
        # Calling append(args, kwargs) (line 1178)
        append_call_result_506998 = invoke(stypy.reporting.localization.Localization(__file__, 1178, 8), append_506993, *[result_add_506996], **kwargs_506997)
        
        
        # Assigning a Call to a Name (line 1179):
        
        # Assigning a Call to a Name (line 1179):
        
        # Call to join(...): (line 1179)
        # Processing the call arguments (line 1179)
        # Getting the type of 'body' (line 1179)
        body_507001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 25), 'body', False)
        # Processing the call keyword arguments (line 1179)
        kwargs_507002 = {}
        str_506999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1179, 15), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1179)
        join_507000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1179, 15), str_506999, 'join')
        # Calling join(args, kwargs) (line 1179)
        join_call_result_507003 = invoke(stypy.reporting.localization.Localization(__file__, 1179, 15), join_507000, *[body_507001], **kwargs_507002)
        
        # Assigning a type to the variable 'body' (line 1179)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1179, 8), 'body', join_call_result_507003)
        # Getting the type of 'body' (line 1180)
        body_507004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 15), 'body')
        # Assigning a type to the variable 'stypy_return_type' (line 1180)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1180, 8), 'stypy_return_type', body_507004)
        
        # ################# End of '_get_python_wrap(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_python_wrap' in the type store
        # Getting the type of 'stypy_return_type' (line 1159)
        stypy_return_type_507005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1159, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_507005)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_python_wrap'
        return stypy_return_type_507005


    @norecursion
    def _get_common(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_get_common'
        module_type_store = module_type_store.open_function_context('_get_common', 1182, 4, False)
        # Assigning a type to the variable 'self' (line 1183)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1183, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._get_common.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._get_common.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._get_common.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._get_common.__dict__.__setitem__('stypy_function_name', 'FusedFunc._get_common')
        FusedFunc._get_common.__dict__.__setitem__('stypy_param_names_list', ['signum', 'sig'])
        FusedFunc._get_common.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._get_common.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._get_common.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._get_common.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._get_common.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._get_common.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._get_common', ['signum', 'sig'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_get_common', localization, ['signum', 'sig'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_get_common(...)' code ##################

        str_507006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1183, 8), 'str', 'Generate code common to all the _generate_* methods.')
        
        # Assigning a BinOp to a Name (line 1184):
        
        # Assigning a BinOp to a Name (line 1184):
        str_507007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1184, 14), 'str', ' ')
        int_507008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1184, 18), 'int')
        # Applying the binary operator '*' (line 1184)
        result_mul_507009 = python_operator(stypy.reporting.localization.Localization(__file__, 1184, 14), '*', str_507007, int_507008)
        
        # Assigning a type to the variable 'tab' (line 1184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1184, 8), 'tab', result_mul_507009)
        
        # Assigning a Name to a Tuple (line 1185):
        
        # Assigning a Subscript to a Name (line 1185):
        
        # Obtaining the type of the subscript
        int_507010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 8), 'int')
        # Getting the type of 'sig' (line 1185)
        sig_507011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 56), 'sig')
        # Obtaining the member '__getitem__' of a type (line 1185)
        getitem___507012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 8), sig_507011, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1185)
        subscript_call_result_507013 = invoke(stypy.reporting.localization.Localization(__file__, 1185, 8), getitem___507012, int_507010)
        
        # Assigning a type to the variable 'tuple_var_assignment_503950' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503950', subscript_call_result_507013)
        
        # Assigning a Subscript to a Name (line 1185):
        
        # Obtaining the type of the subscript
        int_507014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 8), 'int')
        # Getting the type of 'sig' (line 1185)
        sig_507015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 56), 'sig')
        # Obtaining the member '__getitem__' of a type (line 1185)
        getitem___507016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 8), sig_507015, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1185)
        subscript_call_result_507017 = invoke(stypy.reporting.localization.Localization(__file__, 1185, 8), getitem___507016, int_507014)
        
        # Assigning a type to the variable 'tuple_var_assignment_503951' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503951', subscript_call_result_507017)
        
        # Assigning a Subscript to a Name (line 1185):
        
        # Obtaining the type of the subscript
        int_507018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 8), 'int')
        # Getting the type of 'sig' (line 1185)
        sig_507019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 56), 'sig')
        # Obtaining the member '__getitem__' of a type (line 1185)
        getitem___507020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 8), sig_507019, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1185)
        subscript_call_result_507021 = invoke(stypy.reporting.localization.Localization(__file__, 1185, 8), getitem___507020, int_507018)
        
        # Assigning a type to the variable 'tuple_var_assignment_503952' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503952', subscript_call_result_507021)
        
        # Assigning a Subscript to a Name (line 1185):
        
        # Obtaining the type of the subscript
        int_507022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 8), 'int')
        # Getting the type of 'sig' (line 1185)
        sig_507023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 56), 'sig')
        # Obtaining the member '__getitem__' of a type (line 1185)
        getitem___507024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 8), sig_507023, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1185)
        subscript_call_result_507025 = invoke(stypy.reporting.localization.Localization(__file__, 1185, 8), getitem___507024, int_507022)
        
        # Assigning a type to the variable 'tuple_var_assignment_503953' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503953', subscript_call_result_507025)
        
        # Assigning a Subscript to a Name (line 1185):
        
        # Obtaining the type of the subscript
        int_507026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 8), 'int')
        # Getting the type of 'sig' (line 1185)
        sig_507027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 56), 'sig')
        # Obtaining the member '__getitem__' of a type (line 1185)
        getitem___507028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1185, 8), sig_507027, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1185)
        subscript_call_result_507029 = invoke(stypy.reporting.localization.Localization(__file__, 1185, 8), getitem___507028, int_507026)
        
        # Assigning a type to the variable 'tuple_var_assignment_503954' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503954', subscript_call_result_507029)
        
        # Assigning a Name to a Name (line 1185):
        # Getting the type of 'tuple_var_assignment_503950' (line 1185)
        tuple_var_assignment_503950_507030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503950')
        # Assigning a type to the variable 'func_name' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'func_name', tuple_var_assignment_503950_507030)
        
        # Assigning a Name to a Name (line 1185):
        # Getting the type of 'tuple_var_assignment_503951' (line 1185)
        tuple_var_assignment_503951_507031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503951')
        # Assigning a type to the variable 'incodes' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 19), 'incodes', tuple_var_assignment_503951_507031)
        
        # Assigning a Name to a Name (line 1185):
        # Getting the type of 'tuple_var_assignment_503952' (line 1185)
        tuple_var_assignment_503952_507032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503952')
        # Assigning a type to the variable 'outcodes' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 28), 'outcodes', tuple_var_assignment_503952_507032)
        
        # Assigning a Name to a Name (line 1185):
        # Getting the type of 'tuple_var_assignment_503953' (line 1185)
        tuple_var_assignment_503953_507033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503953')
        # Assigning a type to the variable 'retcode' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 38), 'retcode', tuple_var_assignment_503953_507033)
        
        # Assigning a Name to a Name (line 1185):
        # Getting the type of 'tuple_var_assignment_503954' (line 1185)
        tuple_var_assignment_503954_507034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 8), 'tuple_var_assignment_503954')
        # Assigning a type to the variable 'header' (line 1185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1185, 47), 'header', tuple_var_assignment_503954_507034)
        
        # Assigning a Call to a Name (line 1187):
        
        # Assigning a Call to a Name (line 1187):
        
        # Call to replace(...): (line 1187)
        # Processing the call arguments (line 1187)
        str_507037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 34), 'str', 'i')
        str_507038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 39), 'str', 'l')
        # Processing the call keyword arguments (line 1187)
        kwargs_507039 = {}
        # Getting the type of 'incodes' (line 1187)
        incodes_507035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 18), 'incodes', False)
        # Obtaining the member 'replace' of a type (line 1187)
        replace_507036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1187, 18), incodes_507035, 'replace')
        # Calling replace(args, kwargs) (line 1187)
        replace_call_result_507040 = invoke(stypy.reporting.localization.Localization(__file__, 1187, 18), replace_507036, *[str_507037, str_507038], **kwargs_507039)
        
        # Assigning a type to the variable 'incodes' (line 1187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1187, 8), 'incodes', replace_call_result_507040)
        
        # Assigning a Call to a Name (line 1188):
        
        # Assigning a Call to a Name (line 1188):
        
        # Call to replace(...): (line 1188)
        # Processing the call arguments (line 1188)
        str_507043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 36), 'str', 'i')
        str_507044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 41), 'str', 'l')
        # Processing the call keyword arguments (line 1188)
        kwargs_507045 = {}
        # Getting the type of 'outcodes' (line 1188)
        outcodes_507041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 19), 'outcodes', False)
        # Obtaining the member 'replace' of a type (line 1188)
        replace_507042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1188, 19), outcodes_507041, 'replace')
        # Calling replace(args, kwargs) (line 1188)
        replace_call_result_507046 = invoke(stypy.reporting.localization.Localization(__file__, 1188, 19), replace_507042, *[str_507043, str_507044], **kwargs_507045)
        
        # Assigning a type to the variable 'outcodes' (line 1188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1188, 8), 'outcodes', replace_call_result_507046)
        
        # Assigning a Call to a Name (line 1189):
        
        # Assigning a Call to a Name (line 1189):
        
        # Call to replace(...): (line 1189)
        # Processing the call arguments (line 1189)
        str_507049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1189, 34), 'str', 'i')
        str_507050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1189, 39), 'str', 'l')
        # Processing the call keyword arguments (line 1189)
        kwargs_507051 = {}
        # Getting the type of 'retcode' (line 1189)
        retcode_507047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1189, 18), 'retcode', False)
        # Obtaining the member 'replace' of a type (line 1189)
        replace_507048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1189, 18), retcode_507047, 'replace')
        # Calling replace(args, kwargs) (line 1189)
        replace_call_result_507052 = invoke(stypy.reporting.localization.Localization(__file__, 1189, 18), replace_507048, *[str_507049, str_507050], **kwargs_507051)
        
        # Assigning a type to the variable 'retcode' (line 1189)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1189, 8), 'retcode', replace_call_result_507052)
        
        
        # Call to endswith(...): (line 1191)
        # Processing the call arguments (line 1191)
        str_507055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1191, 27), 'str', 'h')
        # Processing the call keyword arguments (line 1191)
        kwargs_507056 = {}
        # Getting the type of 'header' (line 1191)
        header_507053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 11), 'header', False)
        # Obtaining the member 'endswith' of a type (line 1191)
        endswith_507054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1191, 11), header_507053, 'endswith')
        # Calling endswith(args, kwargs) (line 1191)
        endswith_call_result_507057 = invoke(stypy.reporting.localization.Localization(__file__, 1191, 11), endswith_507054, *[str_507055], **kwargs_507056)
        
        # Testing the type of an if condition (line 1191)
        if_condition_507058 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1191, 8), endswith_call_result_507057)
        # Assigning a type to the variable 'if_condition_507058' (line 1191)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1191, 8), 'if_condition_507058', if_condition_507058)
        # SSA begins for if statement (line 1191)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1192):
        
        # Assigning a Name to a Name (line 1192):
        # Getting the type of 'True' (line 1192)
        True_507059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 16), 'True')
        # Assigning a type to the variable 'c' (line 1192)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1192, 12), 'c', True_507059)
        # SSA branch for the else part of an if statement (line 1191)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1194):
        
        # Assigning a Name to a Name (line 1194):
        # Getting the type of 'False' (line 1194)
        False_507060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1194, 16), 'False')
        # Assigning a type to the variable 'c' (line 1194)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1194, 12), 'c', False_507060)
        # SSA join for if statement (line 1191)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to endswith(...): (line 1195)
        # Processing the call arguments (line 1195)
        str_507063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1195, 27), 'str', '++')
        # Processing the call keyword arguments (line 1195)
        kwargs_507064 = {}
        # Getting the type of 'header' (line 1195)
        header_507061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1195, 11), 'header', False)
        # Obtaining the member 'endswith' of a type (line 1195)
        endswith_507062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1195, 11), header_507061, 'endswith')
        # Calling endswith(args, kwargs) (line 1195)
        endswith_call_result_507065 = invoke(stypy.reporting.localization.Localization(__file__, 1195, 11), endswith_507062, *[str_507063], **kwargs_507064)
        
        # Testing the type of an if condition (line 1195)
        if_condition_507066 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1195, 8), endswith_call_result_507065)
        # Assigning a type to the variable 'if_condition_507066' (line 1195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1195, 8), 'if_condition_507066', if_condition_507066)
        # SSA begins for if statement (line 1195)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1196):
        
        # Assigning a Name to a Name (line 1196):
        # Getting the type of 'True' (line 1196)
        True_507067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 18), 'True')
        # Assigning a type to the variable 'cpp' (line 1196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 12), 'cpp', True_507067)
        # SSA branch for the else part of an if statement (line 1195)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1198):
        
        # Assigning a Name to a Name (line 1198):
        # Getting the type of 'False' (line 1198)
        False_507068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1198, 18), 'False')
        # Assigning a type to the variable 'cpp' (line 1198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1198, 12), 'cpp', False_507068)
        # SSA join for if statement (line 1195)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1200):
        
        # Assigning a Call to a Name (line 1200):
        
        # Call to list(...): (line 1200)
        # Processing the call arguments (line 1200)
        
        # Call to map(...): (line 1200)
        # Processing the call arguments (line 1200)

        @norecursion
        def _stypy_temp_lambda_304(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_304'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_304', 1200, 27, True)
            # Passed parameters checking function
            _stypy_temp_lambda_304.stypy_localization = localization
            _stypy_temp_lambda_304.stypy_type_of_self = None
            _stypy_temp_lambda_304.stypy_type_store = module_type_store
            _stypy_temp_lambda_304.stypy_function_name = '_stypy_temp_lambda_304'
            _stypy_temp_lambda_304.stypy_param_names_list = ['x']
            _stypy_temp_lambda_304.stypy_varargs_param_name = None
            _stypy_temp_lambda_304.stypy_kwargs_param_name = None
            _stypy_temp_lambda_304.stypy_call_defaults = defaults
            _stypy_temp_lambda_304.stypy_call_varargs = varargs
            _stypy_temp_lambda_304.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_304', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_304', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            # Getting the type of 'x' (line 1200)
            x_507071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 46), 'x', False)
            # Getting the type of 'CY_TYPES' (line 1200)
            CY_TYPES_507072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 37), 'CY_TYPES', False)
            # Obtaining the member '__getitem__' of a type (line 1200)
            getitem___507073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1200, 37), CY_TYPES_507072, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1200)
            subscript_call_result_507074 = invoke(stypy.reporting.localization.Localization(__file__, 1200, 37), getitem___507073, x_507071)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1200)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1200, 27), 'stypy_return_type', subscript_call_result_507074)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_304' in the type store
            # Getting the type of 'stypy_return_type' (line 1200)
            stypy_return_type_507075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 27), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_507075)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_304'
            return stypy_return_type_507075

        # Assigning a type to the variable '_stypy_temp_lambda_304' (line 1200)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1200, 27), '_stypy_temp_lambda_304', _stypy_temp_lambda_304)
        # Getting the type of '_stypy_temp_lambda_304' (line 1200)
        _stypy_temp_lambda_304_507076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 27), '_stypy_temp_lambda_304')
        # Getting the type of 'incodes' (line 1200)
        incodes_507077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 50), 'incodes', False)
        # Processing the call keyword arguments (line 1200)
        kwargs_507078 = {}
        # Getting the type of 'map' (line 1200)
        map_507070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 23), 'map', False)
        # Calling map(args, kwargs) (line 1200)
        map_call_result_507079 = invoke(stypy.reporting.localization.Localization(__file__, 1200, 23), map_507070, *[_stypy_temp_lambda_304_507076, incodes_507077], **kwargs_507078)
        
        # Processing the call keyword arguments (line 1200)
        kwargs_507080 = {}
        # Getting the type of 'list' (line 1200)
        list_507069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1200, 18), 'list', False)
        # Calling list(args, kwargs) (line 1200)
        list_call_result_507081 = invoke(stypy.reporting.localization.Localization(__file__, 1200, 18), list_507069, *[map_call_result_507079], **kwargs_507080)
        
        # Assigning a type to the variable 'intypes' (line 1200)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1200, 8), 'intypes', list_call_result_507081)
        
        # Assigning a Call to a Name (line 1201):
        
        # Assigning a Call to a Name (line 1201):
        
        # Call to list(...): (line 1201)
        # Processing the call arguments (line 1201)
        
        # Call to map(...): (line 1201)
        # Processing the call arguments (line 1201)

        @norecursion
        def _stypy_temp_lambda_305(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_305'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_305', 1201, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_305.stypy_localization = localization
            _stypy_temp_lambda_305.stypy_type_of_self = None
            _stypy_temp_lambda_305.stypy_type_store = module_type_store
            _stypy_temp_lambda_305.stypy_function_name = '_stypy_temp_lambda_305'
            _stypy_temp_lambda_305.stypy_param_names_list = ['x']
            _stypy_temp_lambda_305.stypy_varargs_param_name = None
            _stypy_temp_lambda_305.stypy_kwargs_param_name = None
            _stypy_temp_lambda_305.stypy_call_defaults = defaults
            _stypy_temp_lambda_305.stypy_call_varargs = varargs
            _stypy_temp_lambda_305.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_305', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_305', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            # Getting the type of 'x' (line 1201)
            x_507084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 47), 'x', False)
            # Getting the type of 'CY_TYPES' (line 1201)
            CY_TYPES_507085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 38), 'CY_TYPES', False)
            # Obtaining the member '__getitem__' of a type (line 1201)
            getitem___507086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1201, 38), CY_TYPES_507085, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1201)
            subscript_call_result_507087 = invoke(stypy.reporting.localization.Localization(__file__, 1201, 38), getitem___507086, x_507084)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1201)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1201, 28), 'stypy_return_type', subscript_call_result_507087)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_305' in the type store
            # Getting the type of 'stypy_return_type' (line 1201)
            stypy_return_type_507088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_507088)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_305'
            return stypy_return_type_507088

        # Assigning a type to the variable '_stypy_temp_lambda_305' (line 1201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1201, 28), '_stypy_temp_lambda_305', _stypy_temp_lambda_305)
        # Getting the type of '_stypy_temp_lambda_305' (line 1201)
        _stypy_temp_lambda_305_507089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 28), '_stypy_temp_lambda_305')
        # Getting the type of 'outcodes' (line 1201)
        outcodes_507090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 51), 'outcodes', False)
        # Processing the call keyword arguments (line 1201)
        kwargs_507091 = {}
        # Getting the type of 'map' (line 1201)
        map_507083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 24), 'map', False)
        # Calling map(args, kwargs) (line 1201)
        map_call_result_507092 = invoke(stypy.reporting.localization.Localization(__file__, 1201, 24), map_507083, *[_stypy_temp_lambda_305_507089, outcodes_507090], **kwargs_507091)
        
        # Processing the call keyword arguments (line 1201)
        kwargs_507093 = {}
        # Getting the type of 'list' (line 1201)
        list_507082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 19), 'list', False)
        # Calling list(args, kwargs) (line 1201)
        list_call_result_507094 = invoke(stypy.reporting.localization.Localization(__file__, 1201, 19), list_507082, *[map_call_result_507092], **kwargs_507093)
        
        # Assigning a type to the variable 'outtypes' (line 1201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1201, 8), 'outtypes', list_call_result_507094)
        
        # Assigning a Call to a Name (line 1202):
        
        # Assigning a Call to a Name (line 1202):
        
        # Call to sub(...): (line 1202)
        # Processing the call arguments (line 1202)
        str_507097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1202, 25), 'str', '\\*.*')
        str_507098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1202, 34), 'str', '')
        # Getting the type of 'retcode' (line 1202)
        retcode_507099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 38), 'retcode', False)
        # Processing the call keyword arguments (line 1202)
        kwargs_507100 = {}
        # Getting the type of 're' (line 1202)
        re_507095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 18), 're', False)
        # Obtaining the member 'sub' of a type (line 1202)
        sub_507096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1202, 18), re_507095, 'sub')
        # Calling sub(args, kwargs) (line 1202)
        sub_call_result_507101 = invoke(stypy.reporting.localization.Localization(__file__, 1202, 18), sub_507096, *[str_507097, str_507098, retcode_507099], **kwargs_507100)
        
        # Assigning a type to the variable 'retcode' (line 1202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1202, 8), 'retcode', sub_call_result_507101)
        
        
        # Getting the type of 'retcode' (line 1203)
        retcode_507102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 15), 'retcode')
        # Applying the 'not' unary operator (line 1203)
        result_not__507103 = python_operator(stypy.reporting.localization.Localization(__file__, 1203, 11), 'not', retcode_507102)
        
        # Testing the type of an if condition (line 1203)
        if_condition_507104 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1203, 8), result_not__507103)
        # Assigning a type to the variable 'if_condition_507104' (line 1203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1203, 8), 'if_condition_507104', if_condition_507104)
        # SSA begins for if statement (line 1203)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1204):
        
        # Assigning a Str to a Name (line 1204):
        str_507105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1204, 22), 'str', 'v')
        # Assigning a type to the variable 'retcode' (line 1204)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1204, 12), 'retcode', str_507105)
        # SSA join for if statement (line 1203)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Name (line 1205):
        
        # Assigning a Subscript to a Name (line 1205):
        
        # Obtaining the type of the subscript
        # Getting the type of 'retcode' (line 1205)
        retcode_507106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 27), 'retcode')
        # Getting the type of 'CY_TYPES' (line 1205)
        CY_TYPES_507107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 18), 'CY_TYPES')
        # Obtaining the member '__getitem__' of a type (line 1205)
        getitem___507108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1205, 18), CY_TYPES_507107, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1205)
        subscript_call_result_507109 = invoke(stypy.reporting.localization.Localization(__file__, 1205, 18), getitem___507108, retcode_507106)
        
        # Assigning a type to the variable 'rettype' (line 1205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1205, 8), 'rettype', subscript_call_result_507109)
        
        # Getting the type of 'cpp' (line 1207)
        cpp_507110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 11), 'cpp')
        # Testing the type of an if condition (line 1207)
        if_condition_507111 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1207, 8), cpp_507110)
        # Assigning a type to the variable 'if_condition_507111' (line 1207)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1207, 8), 'if_condition_507111', if_condition_507111)
        # SSA begins for if statement (line 1207)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1210):
        
        # Assigning a Call to a Name (line 1210):
        
        # Call to format(...): (line 1210)
        # Processing the call arguments (line 1210)
        # Getting the type of 'func_name' (line 1210)
        func_name_507114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1210, 70), 'func_name', False)
        # Processing the call keyword arguments (line 1210)
        kwargs_507115 = {}
        str_507112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1210, 24), 'str', 'scipy.special._ufuncs_cxx._export_{}')
        # Obtaining the member 'format' of a type (line 1210)
        format_507113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1210, 24), str_507112, 'format')
        # Calling format(args, kwargs) (line 1210)
        format_call_result_507116 = invoke(stypy.reporting.localization.Localization(__file__, 1210, 24), format_507113, *[func_name_507114], **kwargs_507115)
        
        # Assigning a type to the variable 'func_name' (line 1210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1210, 12), 'func_name', format_call_result_507116)
        
        # Assigning a Call to a Name (line 1211):
        
        # Assigning a Call to a Name (line 1211):
        
        # Call to format(...): (line 1211)
        # Processing the call arguments (line 1211)
        # Getting the type of 'rettype' (line 1212)
        rettype_507119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 28), 'rettype', False)
        
        # Call to join(...): (line 1212)
        # Processing the call arguments (line 1212)
        # Getting the type of 'intypes' (line 1212)
        intypes_507122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 47), 'intypes', False)
        # Getting the type of 'outtypes' (line 1212)
        outtypes_507123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 57), 'outtypes', False)
        # Applying the binary operator '+' (line 1212)
        result_add_507124 = python_operator(stypy.reporting.localization.Localization(__file__, 1212, 47), '+', intypes_507122, outtypes_507123)
        
        # Processing the call keyword arguments (line 1212)
        kwargs_507125 = {}
        str_507120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1212, 37), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1212)
        join_507121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1212, 37), str_507120, 'join')
        # Calling join(args, kwargs) (line 1212)
        join_call_result_507126 = invoke(stypy.reporting.localization.Localization(__file__, 1212, 37), join_507121, *[result_add_507124], **kwargs_507125)
        
        # Getting the type of 'func_name' (line 1212)
        func_name_507127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 68), 'func_name', False)
        # Processing the call keyword arguments (line 1211)
        kwargs_507128 = {}
        str_507117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1211, 24), 'str', '(<{}(*)({}) nogil>{})')
        # Obtaining the member 'format' of a type (line 1211)
        format_507118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1211, 24), str_507117, 'format')
        # Calling format(args, kwargs) (line 1211)
        format_call_result_507129 = invoke(stypy.reporting.localization.Localization(__file__, 1211, 24), format_507118, *[rettype_507119, join_call_result_507126, func_name_507127], **kwargs_507128)
        
        # Assigning a type to the variable 'func_name' (line 1211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1211, 12), 'func_name', format_call_result_507129)
        # SSA branch for the else part of an if statement (line 1207)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1214):
        
        # Assigning a Call to a Name (line 1214):
        
        # Call to cython_func_name(...): (line 1214)
        # Processing the call arguments (line 1214)
        # Getting the type of 'func_name' (line 1214)
        func_name_507132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 46), 'func_name', False)
        # Processing the call keyword arguments (line 1214)
        # Getting the type of 'True' (line 1214)
        True_507133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 69), 'True', False)
        keyword_507134 = True_507133
        kwargs_507135 = {'specialized': keyword_507134}
        # Getting the type of 'self' (line 1214)
        self_507130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 24), 'self', False)
        # Obtaining the member 'cython_func_name' of a type (line 1214)
        cython_func_name_507131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1214, 24), self_507130, 'cython_func_name')
        # Calling cython_func_name(args, kwargs) (line 1214)
        cython_func_name_call_result_507136 = invoke(stypy.reporting.localization.Localization(__file__, 1214, 24), cython_func_name_507131, *[func_name_507132], **kwargs_507135)
        
        # Assigning a type to the variable 'func_name' (line 1214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1214, 12), 'func_name', cython_func_name_call_result_507136)
        # SSA join for if statement (line 1207)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'signum' (line 1216)
        signum_507137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 11), 'signum')
        int_507138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1216, 21), 'int')
        # Applying the binary operator '==' (line 1216)
        result_eq_507139 = python_operator(stypy.reporting.localization.Localization(__file__, 1216, 11), '==', signum_507137, int_507138)
        
        # Testing the type of an if condition (line 1216)
        if_condition_507140 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1216, 8), result_eq_507139)
        # Assigning a type to the variable 'if_condition_507140' (line 1216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1216, 8), 'if_condition_507140', if_condition_507140)
        # SSA begins for if statement (line 1216)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1217):
        
        # Assigning a Str to a Name (line 1217):
        str_507141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1217, 21), 'str', 'if')
        # Assigning a type to the variable 'adverb' (line 1217)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1217, 12), 'adverb', str_507141)
        # SSA branch for the else part of an if statement (line 1216)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Str to a Name (line 1219):
        
        # Assigning a Str to a Name (line 1219):
        str_507142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1219, 21), 'str', 'elif')
        # Assigning a type to the variable 'adverb' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 12), 'adverb', str_507142)
        # SSA join for if statement (line 1216)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1220):
        
        # Assigning a Call to a Name (line 1220):
        
        # Call to _get_conditional(...): (line 1220)
        # Processing the call arguments (line 1220)
        # Getting the type of 'self' (line 1220)
        self_507145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 37), 'self', False)
        # Obtaining the member 'intypes' of a type (line 1220)
        intypes_507146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1220, 37), self_507145, 'intypes')
        # Getting the type of 'incodes' (line 1220)
        incodes_507147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 51), 'incodes', False)
        # Getting the type of 'adverb' (line 1220)
        adverb_507148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 60), 'adverb', False)
        # Processing the call keyword arguments (line 1220)
        kwargs_507149 = {}
        # Getting the type of 'self' (line 1220)
        self_507143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 15), 'self', False)
        # Obtaining the member '_get_conditional' of a type (line 1220)
        _get_conditional_507144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1220, 15), self_507143, '_get_conditional')
        # Calling _get_conditional(args, kwargs) (line 1220)
        _get_conditional_call_result_507150 = invoke(stypy.reporting.localization.Localization(__file__, 1220, 15), _get_conditional_507144, *[intypes_507146, incodes_507147, adverb_507148], **kwargs_507149)
        
        # Assigning a type to the variable 'cond' (line 1220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1220, 8), 'cond', _get_conditional_call_result_507150)
        
        # Getting the type of 'cond' (line 1221)
        cond_507151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 11), 'cond')
        # Testing the type of an if condition (line 1221)
        if_condition_507152 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1221, 8), cond_507151)
        # Assigning a type to the variable 'if_condition_507152' (line 1221)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1221, 8), 'if_condition_507152', if_condition_507152)
        # SSA begins for if statement (line 1221)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a List to a Name (line 1222):
        
        # Assigning a List to a Name (line 1222):
        
        # Obtaining an instance of the builtin type 'list' (line 1222)
        list_507153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1222, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1222)
        # Adding element type (line 1222)
        # Getting the type of 'tab' (line 1222)
        tab_507154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1222, 21), 'tab')
        # Getting the type of 'cond' (line 1222)
        cond_507155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1222, 27), 'cond')
        # Applying the binary operator '+' (line 1222)
        result_add_507156 = python_operator(stypy.reporting.localization.Localization(__file__, 1222, 21), '+', tab_507154, cond_507155)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1222, 20), list_507153, result_add_507156)
        
        # Assigning a type to the variable 'lines' (line 1222)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1222, 12), 'lines', list_507153)
        
        # Assigning a BinOp to a Name (line 1223):
        
        # Assigning a BinOp to a Name (line 1223):
        int_507157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1223, 17), 'int')
        # Getting the type of 'tab' (line 1223)
        tab_507158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1223, 19), 'tab')
        # Applying the binary operator '*' (line 1223)
        result_mul_507159 = python_operator(stypy.reporting.localization.Localization(__file__, 1223, 17), '*', int_507157, tab_507158)
        
        # Assigning a type to the variable 'sp' (line 1223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1223, 12), 'sp', result_mul_507159)
        # SSA branch for the else part of an if statement (line 1221)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a List to a Name (line 1225):
        
        # Assigning a List to a Name (line 1225):
        
        # Obtaining an instance of the builtin type 'list' (line 1225)
        list_507160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1225)
        
        # Assigning a type to the variable 'lines' (line 1225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1225, 12), 'lines', list_507160)
        
        # Assigning a Name to a Name (line 1226):
        
        # Assigning a Name to a Name (line 1226):
        # Getting the type of 'tab' (line 1226)
        tab_507161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 17), 'tab')
        # Assigning a type to the variable 'sp' (line 1226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1226, 12), 'sp', tab_507161)
        # SSA join for if statement (line 1221)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1228)
        tuple_507162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1228, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1228)
        # Adding element type (line 1228)
        # Getting the type of 'func_name' (line 1228)
        func_name_507163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 15), 'func_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, func_name_507163)
        # Adding element type (line 1228)
        # Getting the type of 'incodes' (line 1228)
        incodes_507164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 26), 'incodes')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, incodes_507164)
        # Adding element type (line 1228)
        # Getting the type of 'outcodes' (line 1228)
        outcodes_507165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 35), 'outcodes')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, outcodes_507165)
        # Adding element type (line 1228)
        # Getting the type of 'retcode' (line 1228)
        retcode_507166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 45), 'retcode')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, retcode_507166)
        # Adding element type (line 1228)
        # Getting the type of 'intypes' (line 1229)
        intypes_507167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 12), 'intypes')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, intypes_507167)
        # Adding element type (line 1228)
        # Getting the type of 'outtypes' (line 1229)
        outtypes_507168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 21), 'outtypes')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, outtypes_507168)
        # Adding element type (line 1228)
        # Getting the type of 'rettype' (line 1229)
        rettype_507169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 31), 'rettype')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, rettype_507169)
        # Adding element type (line 1228)
        # Getting the type of 'c' (line 1229)
        c_507170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 40), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, c_507170)
        # Adding element type (line 1228)
        # Getting the type of 'lines' (line 1229)
        lines_507171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 43), 'lines')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, lines_507171)
        # Adding element type (line 1228)
        # Getting the type of 'sp' (line 1229)
        sp_507172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 50), 'sp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1228, 15), tuple_507162, sp_507172)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1228)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1228, 8), 'stypy_return_type', tuple_507162)
        
        # ################# End of '_get_common(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_get_common' in the type store
        # Getting the type of 'stypy_return_type' (line 1182)
        stypy_return_type_507173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_507173)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_get_common'
        return stypy_return_type_507173


    @norecursion
    def _generate_from_return_and_no_outargs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_generate_from_return_and_no_outargs'
        module_type_store = module_type_store.open_function_context('_generate_from_return_and_no_outargs', 1231, 4, False)
        # Assigning a type to the variable 'self' (line 1232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1232, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_function_name', 'FusedFunc._generate_from_return_and_no_outargs')
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_param_names_list', [])
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._generate_from_return_and_no_outargs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._generate_from_return_and_no_outargs', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_generate_from_return_and_no_outargs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_generate_from_return_and_no_outargs(...)' code ##################

        
        # Assigning a BinOp to a Name (line 1232):
        
        # Assigning a BinOp to a Name (line 1232):
        str_507174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1232, 14), 'str', ' ')
        int_507175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1232, 18), 'int')
        # Applying the binary operator '*' (line 1232)
        result_mul_507176 = python_operator(stypy.reporting.localization.Localization(__file__, 1232, 14), '*', str_507174, int_507175)
        
        # Assigning a type to the variable 'tab' (line 1232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1232, 8), 'tab', result_mul_507176)
        
        # Assigning a Tuple to a Tuple (line 1233):
        
        # Assigning a List to a Name (line 1233):
        
        # Obtaining an instance of the builtin type 'list' (line 1233)
        list_507177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1233, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1233)
        
        # Assigning a type to the variable 'tuple_assignment_503955' (line 1233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1233, 8), 'tuple_assignment_503955', list_507177)
        
        # Assigning a List to a Name (line 1233):
        
        # Obtaining an instance of the builtin type 'list' (line 1233)
        list_507178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1233, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1233)
        
        # Assigning a type to the variable 'tuple_assignment_503956' (line 1233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1233, 8), 'tuple_assignment_503956', list_507178)
        
        # Assigning a Name to a Name (line 1233):
        # Getting the type of 'tuple_assignment_503955' (line 1233)
        tuple_assignment_503955_507179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 8), 'tuple_assignment_503955')
        # Assigning a type to the variable 'specs' (line 1233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1233, 8), 'specs', tuple_assignment_503955_507179)
        
        # Assigning a Name to a Name (line 1233):
        # Getting the type of 'tuple_assignment_503956' (line 1233)
        tuple_assignment_503956_507180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 8), 'tuple_assignment_503956')
        # Assigning a type to the variable 'body' (line 1233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1233, 15), 'body', tuple_assignment_503956_507180)
        
        
        # Call to enumerate(...): (line 1234)
        # Processing the call arguments (line 1234)
        # Getting the type of 'self' (line 1234)
        self_507182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 37), 'self', False)
        # Obtaining the member 'signatures' of a type (line 1234)
        signatures_507183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1234, 37), self_507182, 'signatures')
        # Processing the call keyword arguments (line 1234)
        kwargs_507184 = {}
        # Getting the type of 'enumerate' (line 1234)
        enumerate_507181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 27), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1234)
        enumerate_call_result_507185 = invoke(stypy.reporting.localization.Localization(__file__, 1234, 27), enumerate_507181, *[signatures_507183], **kwargs_507184)
        
        # Testing the type of a for loop iterable (line 1234)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1234, 8), enumerate_call_result_507185)
        # Getting the type of the for loop variable (line 1234)
        for_loop_var_507186 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1234, 8), enumerate_call_result_507185)
        # Assigning a type to the variable 'signum' (line 1234)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1234, 8), 'signum', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1234, 8), for_loop_var_507186))
        # Assigning a type to the variable 'sig' (line 1234)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1234, 8), 'sig', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1234, 8), for_loop_var_507186))
        # SSA begins for a for statement (line 1234)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 1235):
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507192 = {}
        # Getting the type of 'self' (line 1236)
        self_507188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507188, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507193 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507189, *[signum_507190, sig_507191], **kwargs_507192)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507193, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507195 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507194, int_507187)
        
        # Assigning a type to the variable 'tuple_var_assignment_503957' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503957', subscript_call_result_507195)
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507201 = {}
        # Getting the type of 'self' (line 1236)
        self_507197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507197, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507202 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507198, *[signum_507199, sig_507200], **kwargs_507201)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507202, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507204 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507203, int_507196)
        
        # Assigning a type to the variable 'tuple_var_assignment_503958' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503958', subscript_call_result_507204)
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507210 = {}
        # Getting the type of 'self' (line 1236)
        self_507206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507206, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507211 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507207, *[signum_507208, sig_507209], **kwargs_507210)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507211, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507213 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507212, int_507205)
        
        # Assigning a type to the variable 'tuple_var_assignment_503959' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503959', subscript_call_result_507213)
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507219 = {}
        # Getting the type of 'self' (line 1236)
        self_507215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507215, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507220 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507216, *[signum_507217, sig_507218], **kwargs_507219)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507220, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507222 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507221, int_507214)
        
        # Assigning a type to the variable 'tuple_var_assignment_503960' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503960', subscript_call_result_507222)
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507228 = {}
        # Getting the type of 'self' (line 1236)
        self_507224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507224, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507229 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507225, *[signum_507226, sig_507227], **kwargs_507228)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507229, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507231 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507230, int_507223)
        
        # Assigning a type to the variable 'tuple_var_assignment_503961' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503961', subscript_call_result_507231)
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507237 = {}
        # Getting the type of 'self' (line 1236)
        self_507233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507233, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507238 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507234, *[signum_507235, sig_507236], **kwargs_507237)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507238, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507240 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507239, int_507232)
        
        # Assigning a type to the variable 'tuple_var_assignment_503962' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503962', subscript_call_result_507240)
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507246 = {}
        # Getting the type of 'self' (line 1236)
        self_507242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507242, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507247 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507243, *[signum_507244, sig_507245], **kwargs_507246)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507247, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507249 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507248, int_507241)
        
        # Assigning a type to the variable 'tuple_var_assignment_503963' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503963', subscript_call_result_507249)
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507255 = {}
        # Getting the type of 'self' (line 1236)
        self_507251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507251, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507256 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507252, *[signum_507253, sig_507254], **kwargs_507255)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507256, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507258 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507257, int_507250)
        
        # Assigning a type to the variable 'tuple_var_assignment_503964' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503964', subscript_call_result_507258)
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507264 = {}
        # Getting the type of 'self' (line 1236)
        self_507260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507260, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507265 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507261, *[signum_507262, sig_507263], **kwargs_507264)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507265, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507267 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507266, int_507259)
        
        # Assigning a type to the variable 'tuple_var_assignment_503965' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503965', subscript_call_result_507267)
        
        # Assigning a Subscript to a Name (line 1235):
        
        # Obtaining the type of the subscript
        int_507268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1235, 12), 'int')
        
        # Call to _get_common(...): (line 1236)
        # Processing the call arguments (line 1236)
        # Getting the type of 'signum' (line 1236)
        signum_507271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 57), 'signum', False)
        # Getting the type of 'sig' (line 1236)
        sig_507272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 65), 'sig', False)
        # Processing the call keyword arguments (line 1236)
        kwargs_507273 = {}
        # Getting the type of 'self' (line 1236)
        self_507269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1236)
        _get_common_507270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1236, 40), self_507269, '_get_common')
        # Calling _get_common(args, kwargs) (line 1236)
        _get_common_call_result_507274 = invoke(stypy.reporting.localization.Localization(__file__, 1236, 40), _get_common_507270, *[signum_507271, sig_507272], **kwargs_507273)
        
        # Obtaining the member '__getitem__' of a type (line 1235)
        getitem___507275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1235, 12), _get_common_call_result_507274, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1235)
        subscript_call_result_507276 = invoke(stypy.reporting.localization.Localization(__file__, 1235, 12), getitem___507275, int_507268)
        
        # Assigning a type to the variable 'tuple_var_assignment_503966' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503966', subscript_call_result_507276)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503957' (line 1235)
        tuple_var_assignment_503957_507277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503957')
        # Assigning a type to the variable 'func_name' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'func_name', tuple_var_assignment_503957_507277)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503958' (line 1235)
        tuple_var_assignment_503958_507278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503958')
        # Assigning a type to the variable 'incodes' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 23), 'incodes', tuple_var_assignment_503958_507278)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503959' (line 1235)
        tuple_var_assignment_503959_507279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503959')
        # Assigning a type to the variable 'outcodes' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 32), 'outcodes', tuple_var_assignment_503959_507279)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503960' (line 1235)
        tuple_var_assignment_503960_507280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503960')
        # Assigning a type to the variable 'retcode' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 42), 'retcode', tuple_var_assignment_503960_507280)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503961' (line 1235)
        tuple_var_assignment_503961_507281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503961')
        # Assigning a type to the variable 'intypes' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 51), 'intypes', tuple_var_assignment_503961_507281)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503962' (line 1235)
        tuple_var_assignment_503962_507282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503962')
        # Assigning a type to the variable 'outtypes' (line 1235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1235, 60), 'outtypes', tuple_var_assignment_503962_507282)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503963' (line 1235)
        tuple_var_assignment_503963_507283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503963')
        # Assigning a type to the variable 'rettype' (line 1236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1236, 16), 'rettype', tuple_var_assignment_503963_507283)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503964' (line 1235)
        tuple_var_assignment_503964_507284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503964')
        # Assigning a type to the variable 'c' (line 1236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1236, 25), 'c', tuple_var_assignment_503964_507284)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503965' (line 1235)
        tuple_var_assignment_503965_507285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503965')
        # Assigning a type to the variable 'lines' (line 1236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1236, 28), 'lines', tuple_var_assignment_503965_507285)
        
        # Assigning a Name to a Name (line 1235):
        # Getting the type of 'tuple_var_assignment_503966' (line 1235)
        tuple_var_assignment_503966_507286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1235, 12), 'tuple_var_assignment_503966')
        # Assigning a type to the variable 'sp' (line 1236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1236, 35), 'sp', tuple_var_assignment_503966_507286)
        
        # Call to extend(...): (line 1237)
        # Processing the call arguments (line 1237)
        # Getting the type of 'lines' (line 1237)
        lines_507289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 24), 'lines', False)
        # Processing the call keyword arguments (line 1237)
        kwargs_507290 = {}
        # Getting the type of 'body' (line 1237)
        body_507287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 12), 'body', False)
        # Obtaining the member 'extend' of a type (line 1237)
        extend_507288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1237, 12), body_507287, 'extend')
        # Calling extend(args, kwargs) (line 1237)
        extend_call_result_507291 = invoke(stypy.reporting.localization.Localization(__file__, 1237, 12), extend_507288, *[lines_507289], **kwargs_507290)
        
        
        # Assigning a Call to a Name (line 1240):
        
        # Assigning a Call to a Name (line 1240):
        
        # Call to _get_incallvars(...): (line 1240)
        # Processing the call arguments (line 1240)
        # Getting the type of 'intypes' (line 1240)
        intypes_507294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 44), 'intypes', False)
        # Getting the type of 'c' (line 1240)
        c_507295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 53), 'c', False)
        # Processing the call keyword arguments (line 1240)
        kwargs_507296 = {}
        # Getting the type of 'self' (line 1240)
        self_507292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 23), 'self', False)
        # Obtaining the member '_get_incallvars' of a type (line 1240)
        _get_incallvars_507293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1240, 23), self_507292, '_get_incallvars')
        # Calling _get_incallvars(args, kwargs) (line 1240)
        _get_incallvars_call_result_507297 = invoke(stypy.reporting.localization.Localization(__file__, 1240, 23), _get_incallvars_507293, *[intypes_507294, c_507295], **kwargs_507296)
        
        # Assigning a type to the variable 'callvars' (line 1240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1240, 12), 'callvars', _get_incallvars_call_result_507297)
        
        # Assigning a Call to a Name (line 1241):
        
        # Assigning a Call to a Name (line 1241):
        
        # Call to format(...): (line 1241)
        # Processing the call arguments (line 1241)
        # Getting the type of 'func_name' (line 1241)
        func_name_507300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 35), 'func_name', False)
        
        # Call to join(...): (line 1241)
        # Processing the call arguments (line 1241)
        # Getting the type of 'callvars' (line 1241)
        callvars_507303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 56), 'callvars', False)
        # Processing the call keyword arguments (line 1241)
        kwargs_507304 = {}
        str_507301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 46), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1241)
        join_507302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1241, 46), str_507301, 'join')
        # Calling join(args, kwargs) (line 1241)
        join_call_result_507305 = invoke(stypy.reporting.localization.Localization(__file__, 1241, 46), join_507302, *[callvars_507303], **kwargs_507304)
        
        # Processing the call keyword arguments (line 1241)
        kwargs_507306 = {}
        str_507298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 19), 'str', '{}({})')
        # Obtaining the member 'format' of a type (line 1241)
        format_507299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1241, 19), str_507298, 'format')
        # Calling format(args, kwargs) (line 1241)
        format_call_result_507307 = invoke(stypy.reporting.localization.Localization(__file__, 1241, 19), format_507299, *[func_name_507300, join_call_result_507305], **kwargs_507306)
        
        # Assigning a type to the variable 'call' (line 1241)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 12), 'call', format_call_result_507307)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'c' (line 1242)
        c_507308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 15), 'c')
        
        # Getting the type of 'rettype' (line 1242)
        rettype_507309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 21), 'rettype')
        str_507310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1242, 32), 'str', 'double complex')
        # Applying the binary operator '==' (line 1242)
        result_eq_507311 = python_operator(stypy.reporting.localization.Localization(__file__, 1242, 21), '==', rettype_507309, str_507310)
        
        # Applying the binary operator 'and' (line 1242)
        result_and_keyword_507312 = python_operator(stypy.reporting.localization.Localization(__file__, 1242, 15), 'and', c_507308, result_eq_507311)
        
        # Testing the type of an if condition (line 1242)
        if_condition_507313 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1242, 12), result_and_keyword_507312)
        # Assigning a type to the variable 'if_condition_507313' (line 1242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1242, 12), 'if_condition_507313', if_condition_507313)
        # SSA begins for if statement (line 1242)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1243):
        
        # Assigning a Call to a Name (line 1243):
        
        # Call to double_complex_from_npy_cdouble(...): (line 1243)
        # Processing the call arguments (line 1243)
        # Getting the type of 'call' (line 1243)
        call_507315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 55), 'call', False)
        # Processing the call keyword arguments (line 1243)
        kwargs_507316 = {}
        # Getting the type of 'double_complex_from_npy_cdouble' (line 1243)
        double_complex_from_npy_cdouble_507314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 23), 'double_complex_from_npy_cdouble', False)
        # Calling double_complex_from_npy_cdouble(args, kwargs) (line 1243)
        double_complex_from_npy_cdouble_call_result_507317 = invoke(stypy.reporting.localization.Localization(__file__, 1243, 23), double_complex_from_npy_cdouble_507314, *[call_507315], **kwargs_507316)
        
        # Assigning a type to the variable 'call' (line 1243)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1243, 16), 'call', double_complex_from_npy_cdouble_call_result_507317)
        # SSA join for if statement (line 1242)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 1244):
        
        # Assigning a BinOp to a Name (line 1244):
        # Getting the type of 'sp' (line 1244)
        sp_507318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 19), 'sp')
        
        # Call to format(...): (line 1244)
        # Processing the call arguments (line 1244)
        # Getting the type of 'call' (line 1244)
        call_507321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 43), 'call', False)
        # Processing the call keyword arguments (line 1244)
        kwargs_507322 = {}
        str_507319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1244, 24), 'str', 'return {}')
        # Obtaining the member 'format' of a type (line 1244)
        format_507320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1244, 24), str_507319, 'format')
        # Calling format(args, kwargs) (line 1244)
        format_call_result_507323 = invoke(stypy.reporting.localization.Localization(__file__, 1244, 24), format_507320, *[call_507321], **kwargs_507322)
        
        # Applying the binary operator '+' (line 1244)
        result_add_507324 = python_operator(stypy.reporting.localization.Localization(__file__, 1244, 19), '+', sp_507318, format_call_result_507323)
        
        # Assigning a type to the variable 'line' (line 1244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1244, 12), 'line', result_add_507324)
        
        # Call to append(...): (line 1245)
        # Processing the call arguments (line 1245)
        # Getting the type of 'line' (line 1245)
        line_507327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 24), 'line', False)
        # Processing the call keyword arguments (line 1245)
        kwargs_507328 = {}
        # Getting the type of 'body' (line 1245)
        body_507325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 12), 'body', False)
        # Obtaining the member 'append' of a type (line 1245)
        append_507326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1245, 12), body_507325, 'append')
        # Calling append(args, kwargs) (line 1245)
        append_call_result_507329 = invoke(stypy.reporting.localization.Localization(__file__, 1245, 12), append_507326, *[line_507327], **kwargs_507328)
        
        
        # Assigning a Call to a Name (line 1246):
        
        # Assigning a Call to a Name (line 1246):
        
        # Call to format(...): (line 1246)
        # Processing the call arguments (line 1246)
        # Getting the type of 'incodes' (line 1246)
        incodes_507332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 34), 'incodes', False)
        # Getting the type of 'retcode' (line 1246)
        retcode_507333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 43), 'retcode', False)
        # Processing the call keyword arguments (line 1246)
        kwargs_507334 = {}
        str_507330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1246, 18), 'str', '{}->{}')
        # Obtaining the member 'format' of a type (line 1246)
        format_507331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1246, 18), str_507330, 'format')
        # Calling format(args, kwargs) (line 1246)
        format_call_result_507335 = invoke(stypy.reporting.localization.Localization(__file__, 1246, 18), format_507331, *[incodes_507332, retcode_507333], **kwargs_507334)
        
        # Assigning a type to the variable 'sig' (line 1246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1246, 12), 'sig', format_call_result_507335)
        
        # Call to append(...): (line 1247)
        # Processing the call arguments (line 1247)
        # Getting the type of 'sig' (line 1247)
        sig_507338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 25), 'sig', False)
        # Processing the call keyword arguments (line 1247)
        kwargs_507339 = {}
        # Getting the type of 'specs' (line 1247)
        specs_507336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 12), 'specs', False)
        # Obtaining the member 'append' of a type (line 1247)
        append_507337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1247, 12), specs_507336, 'append')
        # Calling append(args, kwargs) (line 1247)
        append_call_result_507340 = invoke(stypy.reporting.localization.Localization(__file__, 1247, 12), append_507337, *[sig_507338], **kwargs_507339)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 1249)
        # Processing the call arguments (line 1249)
        # Getting the type of 'specs' (line 1249)
        specs_507342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1249, 15), 'specs', False)
        # Processing the call keyword arguments (line 1249)
        kwargs_507343 = {}
        # Getting the type of 'len' (line 1249)
        len_507341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1249, 11), 'len', False)
        # Calling len(args, kwargs) (line 1249)
        len_call_result_507344 = invoke(stypy.reporting.localization.Localization(__file__, 1249, 11), len_507341, *[specs_507342], **kwargs_507343)
        
        int_507345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1249, 24), 'int')
        # Applying the binary operator '>' (line 1249)
        result_gt_507346 = python_operator(stypy.reporting.localization.Localization(__file__, 1249, 11), '>', len_call_result_507344, int_507345)
        
        # Testing the type of an if condition (line 1249)
        if_condition_507347 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1249, 8), result_gt_507346)
        # Assigning a type to the variable 'if_condition_507347' (line 1249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1249, 8), 'if_condition_507347', if_condition_507347)
        # SSA begins for if statement (line 1249)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 1251)
        # Processing the call arguments (line 1251)
        # Getting the type of 'tab' (line 1251)
        tab_507350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1251, 24), 'tab', False)
        str_507351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1251, 30), 'str', 'else:')
        # Applying the binary operator '+' (line 1251)
        result_add_507352 = python_operator(stypy.reporting.localization.Localization(__file__, 1251, 24), '+', tab_507350, str_507351)
        
        # Processing the call keyword arguments (line 1251)
        kwargs_507353 = {}
        # Getting the type of 'body' (line 1251)
        body_507348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1251, 12), 'body', False)
        # Obtaining the member 'append' of a type (line 1251)
        append_507349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1251, 12), body_507348, 'append')
        # Calling append(args, kwargs) (line 1251)
        append_call_result_507354 = invoke(stypy.reporting.localization.Localization(__file__, 1251, 12), append_507349, *[result_add_507352], **kwargs_507353)
        
        
        # Assigning a Subscript to a Tuple (line 1252):
        
        # Assigning a Subscript to a Name (line 1252):
        
        # Obtaining the type of the subscript
        int_507355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 12), 'int')
        
        # Obtaining the type of the subscript
        int_507356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 46), 'int')
        # Getting the type of 'self' (line 1252)
        self_507357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 32), 'self')
        # Obtaining the member 'outtypes' of a type (line 1252)
        outtypes_507358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 32), self_507357, 'outtypes')
        # Obtaining the member '__getitem__' of a type (line 1252)
        getitem___507359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 32), outtypes_507358, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1252)
        subscript_call_result_507360 = invoke(stypy.reporting.localization.Localization(__file__, 1252, 32), getitem___507359, int_507356)
        
        # Obtaining the member '__getitem__' of a type (line 1252)
        getitem___507361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 12), subscript_call_result_507360, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1252)
        subscript_call_result_507362 = invoke(stypy.reporting.localization.Localization(__file__, 1252, 12), getitem___507361, int_507355)
        
        # Assigning a type to the variable 'tuple_var_assignment_503967' (line 1252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 12), 'tuple_var_assignment_503967', subscript_call_result_507362)
        
        # Assigning a Subscript to a Name (line 1252):
        
        # Obtaining the type of the subscript
        int_507363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 12), 'int')
        
        # Obtaining the type of the subscript
        int_507364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 46), 'int')
        # Getting the type of 'self' (line 1252)
        self_507365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 32), 'self')
        # Obtaining the member 'outtypes' of a type (line 1252)
        outtypes_507366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 32), self_507365, 'outtypes')
        # Obtaining the member '__getitem__' of a type (line 1252)
        getitem___507367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 32), outtypes_507366, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1252)
        subscript_call_result_507368 = invoke(stypy.reporting.localization.Localization(__file__, 1252, 32), getitem___507367, int_507364)
        
        # Obtaining the member '__getitem__' of a type (line 1252)
        getitem___507369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 12), subscript_call_result_507368, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1252)
        subscript_call_result_507370 = invoke(stypy.reporting.localization.Localization(__file__, 1252, 12), getitem___507369, int_507363)
        
        # Assigning a type to the variable 'tuple_var_assignment_503968' (line 1252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 12), 'tuple_var_assignment_503968', subscript_call_result_507370)
        
        # Assigning a Name to a Name (line 1252):
        # Getting the type of 'tuple_var_assignment_503967' (line 1252)
        tuple_var_assignment_503967_507371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 12), 'tuple_var_assignment_503967')
        # Assigning a type to the variable 'outtype' (line 1252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 12), 'outtype', tuple_var_assignment_503967_507371)
        
        # Assigning a Name to a Name (line 1252):
        # Getting the type of 'tuple_var_assignment_503968' (line 1252)
        tuple_var_assignment_503968_507372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 12), 'tuple_var_assignment_503968')
        # Assigning a type to the variable 'outcodes' (line 1252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 21), 'outcodes', tuple_var_assignment_503968_507372)
        
        # Assigning a BinOp to a Name (line 1253):
        
        # Assigning a BinOp to a Name (line 1253):
        
        # Call to len(...): (line 1253)
        # Processing the call arguments (line 1253)
        # Getting the type of 'outcodes' (line 1253)
        outcodes_507374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 23), 'outcodes', False)
        # Processing the call keyword arguments (line 1253)
        kwargs_507375 = {}
        # Getting the type of 'len' (line 1253)
        len_507373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 19), 'len', False)
        # Calling len(args, kwargs) (line 1253)
        len_call_result_507376 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 19), len_507373, *[outcodes_507374], **kwargs_507375)
        
        int_507377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1253, 35), 'int')
        # Applying the binary operator '-' (line 1253)
        result_sub_507378 = python_operator(stypy.reporting.localization.Localization(__file__, 1253, 19), '-', len_call_result_507376, int_507377)
        
        # Assigning a type to the variable 'last' (line 1253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 12), 'last', result_sub_507378)
        
        
        
        # Call to len(...): (line 1254)
        # Processing the call arguments (line 1254)
        # Getting the type of 'outcodes' (line 1254)
        outcodes_507380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 19), 'outcodes', False)
        # Processing the call keyword arguments (line 1254)
        kwargs_507381 = {}
        # Getting the type of 'len' (line 1254)
        len_507379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 15), 'len', False)
        # Calling len(args, kwargs) (line 1254)
        len_call_result_507382 = invoke(stypy.reporting.localization.Localization(__file__, 1254, 15), len_507379, *[outcodes_507380], **kwargs_507381)
        
        int_507383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1254, 32), 'int')
        # Applying the binary operator '==' (line 1254)
        result_eq_507384 = python_operator(stypy.reporting.localization.Localization(__file__, 1254, 15), '==', len_call_result_507382, int_507383)
        
        # Testing the type of an if condition (line 1254)
        if_condition_507385 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1254, 12), result_eq_507384)
        # Assigning a type to the variable 'if_condition_507385' (line 1254)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1254, 12), 'if_condition_507385', if_condition_507385)
        # SSA begins for if statement (line 1254)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1255):
        
        # Assigning a Call to a Name (line 1255):
        
        # Call to format(...): (line 1255)
        # Processing the call arguments (line 1255)
        
        # Obtaining the type of the subscript
        # Getting the type of 'outcodes' (line 1255)
        outcodes_507388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 52), 'outcodes', False)
        # Getting the type of 'NAN_VALUE' (line 1255)
        NAN_VALUE_507389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 42), 'NAN_VALUE', False)
        # Obtaining the member '__getitem__' of a type (line 1255)
        getitem___507390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1255, 42), NAN_VALUE_507389, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1255)
        subscript_call_result_507391 = invoke(stypy.reporting.localization.Localization(__file__, 1255, 42), getitem___507390, outcodes_507388)
        
        # Processing the call keyword arguments (line 1255)
        kwargs_507392 = {}
        str_507386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1255, 23), 'str', 'return {}')
        # Obtaining the member 'format' of a type (line 1255)
        format_507387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1255, 23), str_507386, 'format')
        # Calling format(args, kwargs) (line 1255)
        format_call_result_507393 = invoke(stypy.reporting.localization.Localization(__file__, 1255, 23), format_507387, *[subscript_call_result_507391], **kwargs_507392)
        
        # Assigning a type to the variable 'line' (line 1255)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1255, 16), 'line', format_call_result_507393)
        
        # Call to append(...): (line 1256)
        # Processing the call arguments (line 1256)
        int_507396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1256, 28), 'int')
        # Getting the type of 'tab' (line 1256)
        tab_507397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 30), 'tab', False)
        # Applying the binary operator '*' (line 1256)
        result_mul_507398 = python_operator(stypy.reporting.localization.Localization(__file__, 1256, 28), '*', int_507396, tab_507397)
        
        # Getting the type of 'line' (line 1256)
        line_507399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 36), 'line', False)
        # Applying the binary operator '+' (line 1256)
        result_add_507400 = python_operator(stypy.reporting.localization.Localization(__file__, 1256, 28), '+', result_mul_507398, line_507399)
        
        # Processing the call keyword arguments (line 1256)
        kwargs_507401 = {}
        # Getting the type of 'body' (line 1256)
        body_507394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 16), 'body', False)
        # Obtaining the member 'append' of a type (line 1256)
        append_507395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1256, 16), body_507394, 'append')
        # Calling append(args, kwargs) (line 1256)
        append_call_result_507402 = invoke(stypy.reporting.localization.Localization(__file__, 1256, 16), append_507395, *[result_add_507400], **kwargs_507401)
        
        # SSA branch for the else part of an if statement (line 1254)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to enumerate(...): (line 1258)
        # Processing the call arguments (line 1258)
        # Getting the type of 'outcodes' (line 1258)
        outcodes_507404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1258, 41), 'outcodes', False)
        # Processing the call keyword arguments (line 1258)
        kwargs_507405 = {}
        # Getting the type of 'enumerate' (line 1258)
        enumerate_507403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1258, 31), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1258)
        enumerate_call_result_507406 = invoke(stypy.reporting.localization.Localization(__file__, 1258, 31), enumerate_507403, *[outcodes_507404], **kwargs_507405)
        
        # Testing the type of a for loop iterable (line 1258)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1258, 16), enumerate_call_result_507406)
        # Getting the type of the for loop variable (line 1258)
        for_loop_var_507407 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1258, 16), enumerate_call_result_507406)
        # Assigning a type to the variable 'n' (line 1258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1258, 16), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1258, 16), for_loop_var_507407))
        # Assigning a type to the variable 'code' (line 1258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1258, 16), 'code', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1258, 16), for_loop_var_507407))
        # SSA begins for a for statement (line 1258)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Getting the type of 'n' (line 1259)
        n_507408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 23), 'n')
        int_507409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1259, 28), 'int')
        # Applying the binary operator '==' (line 1259)
        result_eq_507410 = python_operator(stypy.reporting.localization.Localization(__file__, 1259, 23), '==', n_507408, int_507409)
        
        # Testing the type of an if condition (line 1259)
        if_condition_507411 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1259, 20), result_eq_507410)
        # Assigning a type to the variable 'if_condition_507411' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 20), 'if_condition_507411', if_condition_507411)
        # SSA begins for if statement (line 1259)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1260):
        
        # Assigning a Str to a Name (line 1260):
        str_507412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 33), 'str', 'if')
        # Assigning a type to the variable 'adverb' (line 1260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1260, 24), 'adverb', str_507412)
        # SSA branch for the else part of an if statement (line 1259)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'n' (line 1261)
        n_507413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 25), 'n')
        # Getting the type of 'last' (line 1261)
        last_507414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 30), 'last')
        # Applying the binary operator '==' (line 1261)
        result_eq_507415 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 25), '==', n_507413, last_507414)
        
        # Testing the type of an if condition (line 1261)
        if_condition_507416 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1261, 25), result_eq_507415)
        # Assigning a type to the variable 'if_condition_507416' (line 1261)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1261, 25), 'if_condition_507416', if_condition_507416)
        # SSA begins for if statement (line 1261)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1262):
        
        # Assigning a Str to a Name (line 1262):
        str_507417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 33), 'str', 'else')
        # Assigning a type to the variable 'adverb' (line 1262)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1262, 24), 'adverb', str_507417)
        # SSA branch for the else part of an if statement (line 1261)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Str to a Name (line 1264):
        
        # Assigning a Str to a Name (line 1264):
        str_507418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1264, 33), 'str', 'elif')
        # Assigning a type to the variable 'adverb' (line 1264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1264, 24), 'adverb', str_507418)
        # SSA join for if statement (line 1261)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1259)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1265):
        
        # Assigning a Call to a Name (line 1265):
        
        # Call to _get_conditional(...): (line 1265)
        # Processing the call arguments (line 1265)
        # Getting the type of 'self' (line 1265)
        self_507421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 49), 'self', False)
        # Obtaining the member 'outtypes' of a type (line 1265)
        outtypes_507422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1265, 49), self_507421, 'outtypes')
        # Getting the type of 'code' (line 1265)
        code_507423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 64), 'code', False)
        # Getting the type of 'adverb' (line 1265)
        adverb_507424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 70), 'adverb', False)
        # Processing the call keyword arguments (line 1265)
        kwargs_507425 = {}
        # Getting the type of 'self' (line 1265)
        self_507419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 27), 'self', False)
        # Obtaining the member '_get_conditional' of a type (line 1265)
        _get_conditional_507420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1265, 27), self_507419, '_get_conditional')
        # Calling _get_conditional(args, kwargs) (line 1265)
        _get_conditional_call_result_507426 = invoke(stypy.reporting.localization.Localization(__file__, 1265, 27), _get_conditional_507420, *[outtypes_507422, code_507423, adverb_507424], **kwargs_507425)
        
        # Assigning a type to the variable 'cond' (line 1265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1265, 20), 'cond', _get_conditional_call_result_507426)
        
        # Call to append(...): (line 1266)
        # Processing the call arguments (line 1266)
        int_507429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1266, 32), 'int')
        # Getting the type of 'tab' (line 1266)
        tab_507430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 34), 'tab', False)
        # Applying the binary operator '*' (line 1266)
        result_mul_507431 = python_operator(stypy.reporting.localization.Localization(__file__, 1266, 32), '*', int_507429, tab_507430)
        
        # Getting the type of 'cond' (line 1266)
        cond_507432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 40), 'cond', False)
        # Applying the binary operator '+' (line 1266)
        result_add_507433 = python_operator(stypy.reporting.localization.Localization(__file__, 1266, 32), '+', result_mul_507431, cond_507432)
        
        # Processing the call keyword arguments (line 1266)
        kwargs_507434 = {}
        # Getting the type of 'body' (line 1266)
        body_507427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 20), 'body', False)
        # Obtaining the member 'append' of a type (line 1266)
        append_507428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1266, 20), body_507427, 'append')
        # Calling append(args, kwargs) (line 1266)
        append_call_result_507435 = invoke(stypy.reporting.localization.Localization(__file__, 1266, 20), append_507428, *[result_add_507433], **kwargs_507434)
        
        
        # Assigning a Call to a Name (line 1267):
        
        # Assigning a Call to a Name (line 1267):
        
        # Call to format(...): (line 1267)
        # Processing the call arguments (line 1267)
        
        # Obtaining the type of the subscript
        # Getting the type of 'code' (line 1267)
        code_507438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 56), 'code', False)
        # Getting the type of 'NAN_VALUE' (line 1267)
        NAN_VALUE_507439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 46), 'NAN_VALUE', False)
        # Obtaining the member '__getitem__' of a type (line 1267)
        getitem___507440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1267, 46), NAN_VALUE_507439, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1267)
        subscript_call_result_507441 = invoke(stypy.reporting.localization.Localization(__file__, 1267, 46), getitem___507440, code_507438)
        
        # Processing the call keyword arguments (line 1267)
        kwargs_507442 = {}
        str_507436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 27), 'str', 'return {}')
        # Obtaining the member 'format' of a type (line 1267)
        format_507437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1267, 27), str_507436, 'format')
        # Calling format(args, kwargs) (line 1267)
        format_call_result_507443 = invoke(stypy.reporting.localization.Localization(__file__, 1267, 27), format_507437, *[subscript_call_result_507441], **kwargs_507442)
        
        # Assigning a type to the variable 'line' (line 1267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1267, 20), 'line', format_call_result_507443)
        
        # Call to append(...): (line 1268)
        # Processing the call arguments (line 1268)
        int_507446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1268, 32), 'int')
        # Getting the type of 'tab' (line 1268)
        tab_507447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 34), 'tab', False)
        # Applying the binary operator '*' (line 1268)
        result_mul_507448 = python_operator(stypy.reporting.localization.Localization(__file__, 1268, 32), '*', int_507446, tab_507447)
        
        # Getting the type of 'line' (line 1268)
        line_507449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 40), 'line', False)
        # Applying the binary operator '+' (line 1268)
        result_add_507450 = python_operator(stypy.reporting.localization.Localization(__file__, 1268, 32), '+', result_mul_507448, line_507449)
        
        # Processing the call keyword arguments (line 1268)
        kwargs_507451 = {}
        # Getting the type of 'body' (line 1268)
        body_507444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 20), 'body', False)
        # Obtaining the member 'append' of a type (line 1268)
        append_507445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1268, 20), body_507444, 'append')
        # Calling append(args, kwargs) (line 1268)
        append_call_result_507452 = invoke(stypy.reporting.localization.Localization(__file__, 1268, 20), append_507445, *[result_add_507450], **kwargs_507451)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1254)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1249)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Tuple to a Tuple (line 1271):
        
        # Assigning a List to a Name (line 1271):
        
        # Obtaining an instance of the builtin type 'list' (line 1271)
        list_507453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1271, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1271)
        
        # Assigning a type to the variable 'tuple_assignment_503969' (line 1271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1271, 8), 'tuple_assignment_503969', list_507453)
        
        # Assigning a List to a Name (line 1271):
        
        # Obtaining an instance of the builtin type 'list' (line 1271)
        list_507454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1271, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1271)
        
        # Assigning a type to the variable 'tuple_assignment_503970' (line 1271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1271, 8), 'tuple_assignment_503970', list_507454)
        
        # Assigning a Name to a Name (line 1271):
        # Getting the type of 'tuple_assignment_503969' (line 1271)
        tuple_assignment_503969_507455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1271, 8), 'tuple_assignment_503969')
        # Assigning a type to the variable 'callvars' (line 1271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1271, 8), 'callvars', tuple_assignment_503969_507455)
        
        # Assigning a Name to a Name (line 1271):
        # Getting the type of 'tuple_assignment_503970' (line 1271)
        tuple_assignment_503970_507456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1271, 8), 'tuple_assignment_503970')
        # Assigning a type to the variable 'head' (line 1271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1271, 18), 'head', tuple_assignment_503970_507456)
        
        
        # Call to enumerate(...): (line 1272)
        # Processing the call arguments (line 1272)
        # Getting the type of 'self' (line 1272)
        self_507458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1272, 40), 'self', False)
        # Obtaining the member 'intypes' of a type (line 1272)
        intypes_507459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1272, 40), self_507458, 'intypes')
        # Processing the call keyword arguments (line 1272)
        kwargs_507460 = {}
        # Getting the type of 'enumerate' (line 1272)
        enumerate_507457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1272, 30), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1272)
        enumerate_call_result_507461 = invoke(stypy.reporting.localization.Localization(__file__, 1272, 30), enumerate_507457, *[intypes_507459], **kwargs_507460)
        
        # Testing the type of a for loop iterable (line 1272)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1272, 8), enumerate_call_result_507461)
        # Getting the type of the for loop variable (line 1272)
        for_loop_var_507462 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1272, 8), enumerate_call_result_507461)
        # Assigning a type to the variable 'n' (line 1272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1272, 8), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1272, 8), for_loop_var_507462))
        # Assigning a type to the variable 'intype' (line 1272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1272, 8), 'intype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1272, 8), for_loop_var_507462))
        # Assigning a type to the variable '_' (line 1272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1272, 8), '_', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1272, 8), for_loop_var_507462))
        # SSA begins for a for statement (line 1272)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 1273)
        # Processing the call arguments (line 1273)
        
        # Call to format(...): (line 1273)
        # Processing the call arguments (line 1273)
        # Getting the type of 'intype' (line 1273)
        intype_507467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 43), 'intype', False)
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 1273)
        n_507468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 63), 'n', False)
        # Getting the type of 'self' (line 1273)
        self_507469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 51), 'self', False)
        # Obtaining the member 'invars' of a type (line 1273)
        invars_507470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1273, 51), self_507469, 'invars')
        # Obtaining the member '__getitem__' of a type (line 1273)
        getitem___507471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1273, 51), invars_507470, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1273)
        subscript_call_result_507472 = invoke(stypy.reporting.localization.Localization(__file__, 1273, 51), getitem___507471, n_507468)
        
        # Processing the call keyword arguments (line 1273)
        kwargs_507473 = {}
        str_507465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1273, 28), 'str', '{} {}')
        # Obtaining the member 'format' of a type (line 1273)
        format_507466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1273, 28), str_507465, 'format')
        # Calling format(args, kwargs) (line 1273)
        format_call_result_507474 = invoke(stypy.reporting.localization.Localization(__file__, 1273, 28), format_507466, *[intype_507467, subscript_call_result_507472], **kwargs_507473)
        
        # Processing the call keyword arguments (line 1273)
        kwargs_507475 = {}
        # Getting the type of 'callvars' (line 1273)
        callvars_507463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 12), 'callvars', False)
        # Obtaining the member 'append' of a type (line 1273)
        append_507464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1273, 12), callvars_507463, 'append')
        # Calling append(args, kwargs) (line 1273)
        append_call_result_507476 = invoke(stypy.reporting.localization.Localization(__file__, 1273, 12), append_507464, *[format_call_result_507474], **kwargs_507475)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Tuple (line 1274):
        
        # Assigning a Subscript to a Name (line 1274):
        
        # Obtaining the type of the subscript
        int_507477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 8), 'int')
        
        # Obtaining the type of the subscript
        int_507478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 37), 'int')
        # Getting the type of 'self' (line 1274)
        self_507479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 23), 'self')
        # Obtaining the member 'outtypes' of a type (line 1274)
        outtypes_507480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 23), self_507479, 'outtypes')
        # Obtaining the member '__getitem__' of a type (line 1274)
        getitem___507481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 23), outtypes_507480, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1274)
        subscript_call_result_507482 = invoke(stypy.reporting.localization.Localization(__file__, 1274, 23), getitem___507481, int_507478)
        
        # Obtaining the member '__getitem__' of a type (line 1274)
        getitem___507483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 8), subscript_call_result_507482, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1274)
        subscript_call_result_507484 = invoke(stypy.reporting.localization.Localization(__file__, 1274, 8), getitem___507483, int_507477)
        
        # Assigning a type to the variable 'tuple_var_assignment_503971' (line 1274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1274, 8), 'tuple_var_assignment_503971', subscript_call_result_507484)
        
        # Assigning a Subscript to a Name (line 1274):
        
        # Obtaining the type of the subscript
        int_507485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 8), 'int')
        
        # Obtaining the type of the subscript
        int_507486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 37), 'int')
        # Getting the type of 'self' (line 1274)
        self_507487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 23), 'self')
        # Obtaining the member 'outtypes' of a type (line 1274)
        outtypes_507488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 23), self_507487, 'outtypes')
        # Obtaining the member '__getitem__' of a type (line 1274)
        getitem___507489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 23), outtypes_507488, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1274)
        subscript_call_result_507490 = invoke(stypy.reporting.localization.Localization(__file__, 1274, 23), getitem___507489, int_507486)
        
        # Obtaining the member '__getitem__' of a type (line 1274)
        getitem___507491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 8), subscript_call_result_507490, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1274)
        subscript_call_result_507492 = invoke(stypy.reporting.localization.Localization(__file__, 1274, 8), getitem___507491, int_507485)
        
        # Assigning a type to the variable 'tuple_var_assignment_503972' (line 1274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1274, 8), 'tuple_var_assignment_503972', subscript_call_result_507492)
        
        # Assigning a Name to a Name (line 1274):
        # Getting the type of 'tuple_var_assignment_503971' (line 1274)
        tuple_var_assignment_503971_507493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 8), 'tuple_var_assignment_503971')
        # Assigning a type to the variable 'outtype' (line 1274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1274, 9), 'outtype', tuple_var_assignment_503971_507493)
        
        # Assigning a Name to a Name (line 1274):
        # Getting the type of 'tuple_var_assignment_503972' (line 1274)
        tuple_var_assignment_503972_507494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 8), 'tuple_var_assignment_503972')
        # Assigning a type to the variable '_' (line 1274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1274, 18), '_', tuple_var_assignment_503972_507494)
        
        # Assigning a Call to a Name (line 1275):
        
        # Assigning a Call to a Name (line 1275):
        
        # Call to format(...): (line 1275)
        # Processing the call arguments (line 1275)
        # Getting the type of 'outtype' (line 1275)
        outtype_507497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1275, 45), 'outtype', False)
        # Getting the type of 'self' (line 1275)
        self_507498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1275, 54), 'self', False)
        # Obtaining the member 'name' of a type (line 1275)
        name_507499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1275, 54), self_507498, 'name')
        
        # Call to join(...): (line 1275)
        # Processing the call arguments (line 1275)
        # Getting the type of 'callvars' (line 1275)
        callvars_507502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1275, 75), 'callvars', False)
        # Processing the call keyword arguments (line 1275)
        kwargs_507503 = {}
        str_507500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1275, 65), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1275)
        join_507501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1275, 65), str_507500, 'join')
        # Calling join(args, kwargs) (line 1275)
        join_call_result_507504 = invoke(stypy.reporting.localization.Localization(__file__, 1275, 65), join_507501, *[callvars_507502], **kwargs_507503)
        
        # Processing the call keyword arguments (line 1275)
        kwargs_507505 = {}
        str_507495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1275, 14), 'str', 'cpdef {} {}({}) nogil')
        # Obtaining the member 'format' of a type (line 1275)
        format_507496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1275, 14), str_507495, 'format')
        # Calling format(args, kwargs) (line 1275)
        format_call_result_507506 = invoke(stypy.reporting.localization.Localization(__file__, 1275, 14), format_507496, *[outtype_507497, name_507499, join_call_result_507504], **kwargs_507505)
        
        # Assigning a type to the variable 'dec' (line 1275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1275, 8), 'dec', format_call_result_507506)
        
        # Call to append(...): (line 1276)
        # Processing the call arguments (line 1276)
        # Getting the type of 'dec' (line 1276)
        dec_507509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1276, 20), 'dec', False)
        str_507510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1276, 26), 'str', ':')
        # Applying the binary operator '+' (line 1276)
        result_add_507511 = python_operator(stypy.reporting.localization.Localization(__file__, 1276, 20), '+', dec_507509, str_507510)
        
        # Processing the call keyword arguments (line 1276)
        kwargs_507512 = {}
        # Getting the type of 'head' (line 1276)
        head_507507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1276, 8), 'head', False)
        # Obtaining the member 'append' of a type (line 1276)
        append_507508 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1276, 8), head_507507, 'append')
        # Calling append(args, kwargs) (line 1276)
        append_call_result_507513 = invoke(stypy.reporting.localization.Localization(__file__, 1276, 8), append_507508, *[result_add_507511], **kwargs_507512)
        
        
        # Call to append(...): (line 1277)
        # Processing the call arguments (line 1277)
        # Getting the type of 'tab' (line 1277)
        tab_507516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 20), 'tab', False)
        
        # Call to format(...): (line 1277)
        # Processing the call arguments (line 1277)
        # Getting the type of 'self' (line 1277)
        self_507519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 44), 'self', False)
        # Obtaining the member 'doc' of a type (line 1277)
        doc_507520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1277, 44), self_507519, 'doc')
        # Processing the call keyword arguments (line 1277)
        kwargs_507521 = {}
        str_507517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1277, 26), 'str', '"""{}"""')
        # Obtaining the member 'format' of a type (line 1277)
        format_507518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1277, 26), str_507517, 'format')
        # Calling format(args, kwargs) (line 1277)
        format_call_result_507522 = invoke(stypy.reporting.localization.Localization(__file__, 1277, 26), format_507518, *[doc_507520], **kwargs_507521)
        
        # Applying the binary operator '+' (line 1277)
        result_add_507523 = python_operator(stypy.reporting.localization.Localization(__file__, 1277, 20), '+', tab_507516, format_call_result_507522)
        
        # Processing the call keyword arguments (line 1277)
        kwargs_507524 = {}
        # Getting the type of 'head' (line 1277)
        head_507514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 8), 'head', False)
        # Obtaining the member 'append' of a type (line 1277)
        append_507515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1277, 8), head_507514, 'append')
        # Calling append(args, kwargs) (line 1277)
        append_call_result_507525 = invoke(stypy.reporting.localization.Localization(__file__, 1277, 8), append_507515, *[result_add_507523], **kwargs_507524)
        
        
        # Assigning a Call to a Name (line 1279):
        
        # Assigning a Call to a Name (line 1279):
        
        # Call to join(...): (line 1279)
        # Processing the call arguments (line 1279)
        # Getting the type of 'head' (line 1279)
        head_507528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1279, 24), 'head', False)
        # Getting the type of 'body' (line 1279)
        body_507529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1279, 31), 'body', False)
        # Applying the binary operator '+' (line 1279)
        result_add_507530 = python_operator(stypy.reporting.localization.Localization(__file__, 1279, 24), '+', head_507528, body_507529)
        
        # Processing the call keyword arguments (line 1279)
        kwargs_507531 = {}
        str_507526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1279, 14), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1279)
        join_507527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1279, 14), str_507526, 'join')
        # Calling join(args, kwargs) (line 1279)
        join_call_result_507532 = invoke(stypy.reporting.localization.Localization(__file__, 1279, 14), join_507527, *[result_add_507530], **kwargs_507531)
        
        # Assigning a type to the variable 'src' (line 1279)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1279, 8), 'src', join_call_result_507532)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1280)
        tuple_507533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1280, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1280)
        # Adding element type (line 1280)
        # Getting the type of 'dec' (line 1280)
        dec_507534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 15), 'dec')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1280, 15), tuple_507533, dec_507534)
        # Adding element type (line 1280)
        # Getting the type of 'src' (line 1280)
        src_507535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 20), 'src')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1280, 15), tuple_507533, src_507535)
        # Adding element type (line 1280)
        # Getting the type of 'specs' (line 1280)
        specs_507536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1280, 25), 'specs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1280, 15), tuple_507533, specs_507536)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1280)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1280, 8), 'stypy_return_type', tuple_507533)
        
        # ################# End of '_generate_from_return_and_no_outargs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_generate_from_return_and_no_outargs' in the type store
        # Getting the type of 'stypy_return_type' (line 1231)
        stypy_return_type_507537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1231, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_507537)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_generate_from_return_and_no_outargs'
        return stypy_return_type_507537


    @norecursion
    def _generate_from_outargs_and_no_return(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_generate_from_outargs_and_no_return'
        module_type_store = module_type_store.open_function_context('_generate_from_outargs_and_no_return', 1282, 4, False)
        # Assigning a type to the variable 'self' (line 1283)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1283, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_function_name', 'FusedFunc._generate_from_outargs_and_no_return')
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_param_names_list', [])
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._generate_from_outargs_and_no_return.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._generate_from_outargs_and_no_return', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_generate_from_outargs_and_no_return', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_generate_from_outargs_and_no_return(...)' code ##################

        
        # Assigning a BinOp to a Name (line 1283):
        
        # Assigning a BinOp to a Name (line 1283):
        str_507538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1283, 14), 'str', ' ')
        int_507539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1283, 18), 'int')
        # Applying the binary operator '*' (line 1283)
        result_mul_507540 = python_operator(stypy.reporting.localization.Localization(__file__, 1283, 14), '*', str_507538, int_507539)
        
        # Assigning a type to the variable 'tab' (line 1283)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1283, 8), 'tab', result_mul_507540)
        
        # Assigning a Call to a Name (line 1284):
        
        # Assigning a Call to a Name (line 1284):
        
        # Call to set(...): (line 1284)
        # Processing the call keyword arguments (line 1284)
        kwargs_507542 = {}
        # Getting the type of 'set' (line 1284)
        set_507541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1284, 22), 'set', False)
        # Calling set(args, kwargs) (line 1284)
        set_call_result_507543 = invoke(stypy.reporting.localization.Localization(__file__, 1284, 22), set_507541, *[], **kwargs_507542)
        
        # Assigning a type to the variable 'all_tmpvars' (line 1284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1284, 8), 'all_tmpvars', set_call_result_507543)
        
        # Assigning a Tuple to a Tuple (line 1285):
        
        # Assigning a List to a Name (line 1285):
        
        # Obtaining an instance of the builtin type 'list' (line 1285)
        list_507544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1285)
        
        # Assigning a type to the variable 'tuple_assignment_503973' (line 1285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1285, 8), 'tuple_assignment_503973', list_507544)
        
        # Assigning a List to a Name (line 1285):
        
        # Obtaining an instance of the builtin type 'list' (line 1285)
        list_507545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1285)
        
        # Assigning a type to the variable 'tuple_assignment_503974' (line 1285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1285, 8), 'tuple_assignment_503974', list_507545)
        
        # Assigning a Name to a Name (line 1285):
        # Getting the type of 'tuple_assignment_503973' (line 1285)
        tuple_assignment_503973_507546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 8), 'tuple_assignment_503973')
        # Assigning a type to the variable 'specs' (line 1285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1285, 8), 'specs', tuple_assignment_503973_507546)
        
        # Assigning a Name to a Name (line 1285):
        # Getting the type of 'tuple_assignment_503974' (line 1285)
        tuple_assignment_503974_507547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 8), 'tuple_assignment_503974')
        # Assigning a type to the variable 'body' (line 1285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1285, 15), 'body', tuple_assignment_503974_507547)
        
        
        # Call to enumerate(...): (line 1286)
        # Processing the call arguments (line 1286)
        # Getting the type of 'self' (line 1286)
        self_507549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 37), 'self', False)
        # Obtaining the member 'signatures' of a type (line 1286)
        signatures_507550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1286, 37), self_507549, 'signatures')
        # Processing the call keyword arguments (line 1286)
        kwargs_507551 = {}
        # Getting the type of 'enumerate' (line 1286)
        enumerate_507548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 27), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1286)
        enumerate_call_result_507552 = invoke(stypy.reporting.localization.Localization(__file__, 1286, 27), enumerate_507548, *[signatures_507550], **kwargs_507551)
        
        # Testing the type of a for loop iterable (line 1286)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1286, 8), enumerate_call_result_507552)
        # Getting the type of the for loop variable (line 1286)
        for_loop_var_507553 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1286, 8), enumerate_call_result_507552)
        # Assigning a type to the variable 'signum' (line 1286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1286, 8), 'signum', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1286, 8), for_loop_var_507553))
        # Assigning a type to the variable 'sig' (line 1286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1286, 8), 'sig', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1286, 8), for_loop_var_507553))
        # SSA begins for a for statement (line 1286)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 1287):
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507559 = {}
        # Getting the type of 'self' (line 1288)
        self_507555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507556 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507555, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507560 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507556, *[signum_507557, sig_507558], **kwargs_507559)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507560, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507562 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507561, int_507554)
        
        # Assigning a type to the variable 'tuple_var_assignment_503975' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503975', subscript_call_result_507562)
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507568 = {}
        # Getting the type of 'self' (line 1288)
        self_507564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507564, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507569 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507565, *[signum_507566, sig_507567], **kwargs_507568)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507569, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507571 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507570, int_507563)
        
        # Assigning a type to the variable 'tuple_var_assignment_503976' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503976', subscript_call_result_507571)
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507577 = {}
        # Getting the type of 'self' (line 1288)
        self_507573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507573, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507578 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507574, *[signum_507575, sig_507576], **kwargs_507577)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507578, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507580 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507579, int_507572)
        
        # Assigning a type to the variable 'tuple_var_assignment_503977' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503977', subscript_call_result_507580)
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507586 = {}
        # Getting the type of 'self' (line 1288)
        self_507582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507582, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507587 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507583, *[signum_507584, sig_507585], **kwargs_507586)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507587, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507589 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507588, int_507581)
        
        # Assigning a type to the variable 'tuple_var_assignment_503978' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503978', subscript_call_result_507589)
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507595 = {}
        # Getting the type of 'self' (line 1288)
        self_507591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507591, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507596 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507592, *[signum_507593, sig_507594], **kwargs_507595)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507596, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507598 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507597, int_507590)
        
        # Assigning a type to the variable 'tuple_var_assignment_503979' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503979', subscript_call_result_507598)
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507604 = {}
        # Getting the type of 'self' (line 1288)
        self_507600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507600, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507605 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507601, *[signum_507602, sig_507603], **kwargs_507604)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507605, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507607 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507606, int_507599)
        
        # Assigning a type to the variable 'tuple_var_assignment_503980' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503980', subscript_call_result_507607)
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507613 = {}
        # Getting the type of 'self' (line 1288)
        self_507609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507609, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507614 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507610, *[signum_507611, sig_507612], **kwargs_507613)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507614, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507616 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507615, int_507608)
        
        # Assigning a type to the variable 'tuple_var_assignment_503981' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503981', subscript_call_result_507616)
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507622 = {}
        # Getting the type of 'self' (line 1288)
        self_507618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507618, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507623 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507619, *[signum_507620, sig_507621], **kwargs_507622)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507623, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507625 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507624, int_507617)
        
        # Assigning a type to the variable 'tuple_var_assignment_503982' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503982', subscript_call_result_507625)
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507631 = {}
        # Getting the type of 'self' (line 1288)
        self_507627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507627, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507632 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507628, *[signum_507629, sig_507630], **kwargs_507631)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507632, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507634 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507633, int_507626)
        
        # Assigning a type to the variable 'tuple_var_assignment_503983' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503983', subscript_call_result_507634)
        
        # Assigning a Subscript to a Name (line 1287):
        
        # Obtaining the type of the subscript
        int_507635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1287, 12), 'int')
        
        # Call to _get_common(...): (line 1288)
        # Processing the call arguments (line 1288)
        # Getting the type of 'signum' (line 1288)
        signum_507638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 57), 'signum', False)
        # Getting the type of 'sig' (line 1288)
        sig_507639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 65), 'sig', False)
        # Processing the call keyword arguments (line 1288)
        kwargs_507640 = {}
        # Getting the type of 'self' (line 1288)
        self_507636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1288)
        _get_common_507637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1288, 40), self_507636, '_get_common')
        # Calling _get_common(args, kwargs) (line 1288)
        _get_common_call_result_507641 = invoke(stypy.reporting.localization.Localization(__file__, 1288, 40), _get_common_507637, *[signum_507638, sig_507639], **kwargs_507640)
        
        # Obtaining the member '__getitem__' of a type (line 1287)
        getitem___507642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 12), _get_common_call_result_507641, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1287)
        subscript_call_result_507643 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 12), getitem___507642, int_507635)
        
        # Assigning a type to the variable 'tuple_var_assignment_503984' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503984', subscript_call_result_507643)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503975' (line 1287)
        tuple_var_assignment_503975_507644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503975')
        # Assigning a type to the variable 'func_name' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'func_name', tuple_var_assignment_503975_507644)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503976' (line 1287)
        tuple_var_assignment_503976_507645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503976')
        # Assigning a type to the variable 'incodes' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 23), 'incodes', tuple_var_assignment_503976_507645)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503977' (line 1287)
        tuple_var_assignment_503977_507646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503977')
        # Assigning a type to the variable 'outcodes' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 32), 'outcodes', tuple_var_assignment_503977_507646)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503978' (line 1287)
        tuple_var_assignment_503978_507647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503978')
        # Assigning a type to the variable 'retcode' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 42), 'retcode', tuple_var_assignment_503978_507647)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503979' (line 1287)
        tuple_var_assignment_503979_507648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503979')
        # Assigning a type to the variable 'intypes' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 51), 'intypes', tuple_var_assignment_503979_507648)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503980' (line 1287)
        tuple_var_assignment_503980_507649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503980')
        # Assigning a type to the variable 'outtypes' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 60), 'outtypes', tuple_var_assignment_503980_507649)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503981' (line 1287)
        tuple_var_assignment_503981_507650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503981')
        # Assigning a type to the variable 'rettype' (line 1288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1288, 16), 'rettype', tuple_var_assignment_503981_507650)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503982' (line 1287)
        tuple_var_assignment_503982_507651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503982')
        # Assigning a type to the variable 'c' (line 1288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1288, 25), 'c', tuple_var_assignment_503982_507651)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503983' (line 1287)
        tuple_var_assignment_503983_507652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503983')
        # Assigning a type to the variable 'lines' (line 1288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1288, 28), 'lines', tuple_var_assignment_503983_507652)
        
        # Assigning a Name to a Name (line 1287):
        # Getting the type of 'tuple_var_assignment_503984' (line 1287)
        tuple_var_assignment_503984_507653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'tuple_var_assignment_503984')
        # Assigning a type to the variable 'sp' (line 1288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1288, 35), 'sp', tuple_var_assignment_503984_507653)
        
        # Call to extend(...): (line 1289)
        # Processing the call arguments (line 1289)
        # Getting the type of 'lines' (line 1289)
        lines_507656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1289, 24), 'lines', False)
        # Processing the call keyword arguments (line 1289)
        kwargs_507657 = {}
        # Getting the type of 'body' (line 1289)
        body_507654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1289, 12), 'body', False)
        # Obtaining the member 'extend' of a type (line 1289)
        extend_507655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1289, 12), body_507654, 'extend')
        # Calling extend(args, kwargs) (line 1289)
        extend_call_result_507658 = invoke(stypy.reporting.localization.Localization(__file__, 1289, 12), extend_507655, *[lines_507656], **kwargs_507657)
        
        
        # Assigning a Call to a Name (line 1292):
        
        # Assigning a Call to a Name (line 1292):
        
        # Call to _get_incallvars(...): (line 1292)
        # Processing the call arguments (line 1292)
        # Getting the type of 'intypes' (line 1292)
        intypes_507661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 44), 'intypes', False)
        # Getting the type of 'c' (line 1292)
        c_507662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 53), 'c', False)
        # Processing the call keyword arguments (line 1292)
        kwargs_507663 = {}
        # Getting the type of 'self' (line 1292)
        self_507659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 23), 'self', False)
        # Obtaining the member '_get_incallvars' of a type (line 1292)
        _get_incallvars_507660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1292, 23), self_507659, '_get_incallvars')
        # Calling _get_incallvars(args, kwargs) (line 1292)
        _get_incallvars_call_result_507664 = invoke(stypy.reporting.localization.Localization(__file__, 1292, 23), _get_incallvars_507660, *[intypes_507661, c_507662], **kwargs_507663)
        
        # Assigning a type to the variable 'callvars' (line 1292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1292, 12), 'callvars', _get_incallvars_call_result_507664)
        
        # Assigning a Call to a Tuple (line 1293):
        
        # Assigning a Subscript to a Name (line 1293):
        
        # Obtaining the type of the subscript
        int_507665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 12), 'int')
        
        # Call to _get_outcallvars(...): (line 1293)
        # Processing the call arguments (line 1293)
        # Getting the type of 'outtypes' (line 1293)
        outtypes_507668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 64), 'outtypes', False)
        # Getting the type of 'c' (line 1293)
        c_507669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 74), 'c', False)
        # Processing the call keyword arguments (line 1293)
        kwargs_507670 = {}
        # Getting the type of 'self' (line 1293)
        self_507666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 42), 'self', False)
        # Obtaining the member '_get_outcallvars' of a type (line 1293)
        _get_outcallvars_507667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 42), self_507666, '_get_outcallvars')
        # Calling _get_outcallvars(args, kwargs) (line 1293)
        _get_outcallvars_call_result_507671 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 42), _get_outcallvars_507667, *[outtypes_507668, c_507669], **kwargs_507670)
        
        # Obtaining the member '__getitem__' of a type (line 1293)
        getitem___507672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 12), _get_outcallvars_call_result_507671, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1293)
        subscript_call_result_507673 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 12), getitem___507672, int_507665)
        
        # Assigning a type to the variable 'tuple_var_assignment_503985' (line 1293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'tuple_var_assignment_503985', subscript_call_result_507673)
        
        # Assigning a Subscript to a Name (line 1293):
        
        # Obtaining the type of the subscript
        int_507674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 12), 'int')
        
        # Call to _get_outcallvars(...): (line 1293)
        # Processing the call arguments (line 1293)
        # Getting the type of 'outtypes' (line 1293)
        outtypes_507677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 64), 'outtypes', False)
        # Getting the type of 'c' (line 1293)
        c_507678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 74), 'c', False)
        # Processing the call keyword arguments (line 1293)
        kwargs_507679 = {}
        # Getting the type of 'self' (line 1293)
        self_507675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 42), 'self', False)
        # Obtaining the member '_get_outcallvars' of a type (line 1293)
        _get_outcallvars_507676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 42), self_507675, '_get_outcallvars')
        # Calling _get_outcallvars(args, kwargs) (line 1293)
        _get_outcallvars_call_result_507680 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 42), _get_outcallvars_507676, *[outtypes_507677, c_507678], **kwargs_507679)
        
        # Obtaining the member '__getitem__' of a type (line 1293)
        getitem___507681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 12), _get_outcallvars_call_result_507680, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1293)
        subscript_call_result_507682 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 12), getitem___507681, int_507674)
        
        # Assigning a type to the variable 'tuple_var_assignment_503986' (line 1293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'tuple_var_assignment_503986', subscript_call_result_507682)
        
        # Assigning a Subscript to a Name (line 1293):
        
        # Obtaining the type of the subscript
        int_507683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 12), 'int')
        
        # Call to _get_outcallvars(...): (line 1293)
        # Processing the call arguments (line 1293)
        # Getting the type of 'outtypes' (line 1293)
        outtypes_507686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 64), 'outtypes', False)
        # Getting the type of 'c' (line 1293)
        c_507687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 74), 'c', False)
        # Processing the call keyword arguments (line 1293)
        kwargs_507688 = {}
        # Getting the type of 'self' (line 1293)
        self_507684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 42), 'self', False)
        # Obtaining the member '_get_outcallvars' of a type (line 1293)
        _get_outcallvars_507685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 42), self_507684, '_get_outcallvars')
        # Calling _get_outcallvars(args, kwargs) (line 1293)
        _get_outcallvars_call_result_507689 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 42), _get_outcallvars_507685, *[outtypes_507686, c_507687], **kwargs_507688)
        
        # Obtaining the member '__getitem__' of a type (line 1293)
        getitem___507690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1293, 12), _get_outcallvars_call_result_507689, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1293)
        subscript_call_result_507691 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 12), getitem___507690, int_507683)
        
        # Assigning a type to the variable 'tuple_var_assignment_503987' (line 1293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'tuple_var_assignment_503987', subscript_call_result_507691)
        
        # Assigning a Name to a Name (line 1293):
        # Getting the type of 'tuple_var_assignment_503985' (line 1293)
        tuple_var_assignment_503985_507692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'tuple_var_assignment_503985')
        # Assigning a type to the variable 'outcallvars' (line 1293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'outcallvars', tuple_var_assignment_503985_507692)
        
        # Assigning a Name to a Name (line 1293):
        # Getting the type of 'tuple_var_assignment_503986' (line 1293)
        tuple_var_assignment_503986_507693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'tuple_var_assignment_503986')
        # Assigning a type to the variable 'tmpvars' (line 1293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 25), 'tmpvars', tuple_var_assignment_503986_507693)
        
        # Assigning a Name to a Name (line 1293):
        # Getting the type of 'tuple_var_assignment_503987' (line 1293)
        tuple_var_assignment_503987_507694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'tuple_var_assignment_503987')
        # Assigning a type to the variable 'casts' (line 1293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 34), 'casts', tuple_var_assignment_503987_507694)
        
        # Call to extend(...): (line 1294)
        # Processing the call arguments (line 1294)
        # Getting the type of 'outcallvars' (line 1294)
        outcallvars_507697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 28), 'outcallvars', False)
        # Processing the call keyword arguments (line 1294)
        kwargs_507698 = {}
        # Getting the type of 'callvars' (line 1294)
        callvars_507695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 12), 'callvars', False)
        # Obtaining the member 'extend' of a type (line 1294)
        extend_507696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1294, 12), callvars_507695, 'extend')
        # Calling extend(args, kwargs) (line 1294)
        extend_call_result_507699 = invoke(stypy.reporting.localization.Localization(__file__, 1294, 12), extend_507696, *[outcallvars_507697], **kwargs_507698)
        
        
        # Call to update(...): (line 1295)
        # Processing the call arguments (line 1295)
        # Getting the type of 'tmpvars' (line 1295)
        tmpvars_507702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 31), 'tmpvars', False)
        # Processing the call keyword arguments (line 1295)
        kwargs_507703 = {}
        # Getting the type of 'all_tmpvars' (line 1295)
        all_tmpvars_507700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 12), 'all_tmpvars', False)
        # Obtaining the member 'update' of a type (line 1295)
        update_507701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1295, 12), all_tmpvars_507700, 'update')
        # Calling update(args, kwargs) (line 1295)
        update_call_result_507704 = invoke(stypy.reporting.localization.Localization(__file__, 1295, 12), update_507701, *[tmpvars_507702], **kwargs_507703)
        
        
        # Assigning a Call to a Name (line 1297):
        
        # Assigning a Call to a Name (line 1297):
        
        # Call to format(...): (line 1297)
        # Processing the call arguments (line 1297)
        # Getting the type of 'func_name' (line 1297)
        func_name_507707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 35), 'func_name', False)
        
        # Call to join(...): (line 1297)
        # Processing the call arguments (line 1297)
        # Getting the type of 'callvars' (line 1297)
        callvars_507710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 56), 'callvars', False)
        # Processing the call keyword arguments (line 1297)
        kwargs_507711 = {}
        str_507708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1297, 46), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1297)
        join_507709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1297, 46), str_507708, 'join')
        # Calling join(args, kwargs) (line 1297)
        join_call_result_507712 = invoke(stypy.reporting.localization.Localization(__file__, 1297, 46), join_507709, *[callvars_507710], **kwargs_507711)
        
        # Processing the call keyword arguments (line 1297)
        kwargs_507713 = {}
        str_507705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1297, 19), 'str', '{}({})')
        # Obtaining the member 'format' of a type (line 1297)
        format_507706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1297, 19), str_507705, 'format')
        # Calling format(args, kwargs) (line 1297)
        format_call_result_507714 = invoke(stypy.reporting.localization.Localization(__file__, 1297, 19), format_507706, *[func_name_507707, join_call_result_507712], **kwargs_507713)
        
        # Assigning a type to the variable 'call' (line 1297)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1297, 12), 'call', format_call_result_507714)
        
        # Call to append(...): (line 1298)
        # Processing the call arguments (line 1298)
        # Getting the type of 'sp' (line 1298)
        sp_507717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 24), 'sp', False)
        # Getting the type of 'call' (line 1298)
        call_507718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 29), 'call', False)
        # Applying the binary operator '+' (line 1298)
        result_add_507719 = python_operator(stypy.reporting.localization.Localization(__file__, 1298, 24), '+', sp_507717, call_507718)
        
        # Processing the call keyword arguments (line 1298)
        kwargs_507720 = {}
        # Getting the type of 'body' (line 1298)
        body_507715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 12), 'body', False)
        # Obtaining the member 'append' of a type (line 1298)
        append_507716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1298, 12), body_507715, 'append')
        # Calling append(args, kwargs) (line 1298)
        append_call_result_507721 = invoke(stypy.reporting.localization.Localization(__file__, 1298, 12), append_507716, *[result_add_507719], **kwargs_507720)
        
        
        # Call to extend(...): (line 1299)
        # Processing the call arguments (line 1299)
        
        # Call to map(...): (line 1299)
        # Processing the call arguments (line 1299)

        @norecursion
        def _stypy_temp_lambda_306(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_306'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_306', 1299, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_306.stypy_localization = localization
            _stypy_temp_lambda_306.stypy_type_of_self = None
            _stypy_temp_lambda_306.stypy_type_store = module_type_store
            _stypy_temp_lambda_306.stypy_function_name = '_stypy_temp_lambda_306'
            _stypy_temp_lambda_306.stypy_param_names_list = ['x']
            _stypy_temp_lambda_306.stypy_varargs_param_name = None
            _stypy_temp_lambda_306.stypy_kwargs_param_name = None
            _stypy_temp_lambda_306.stypy_call_defaults = defaults
            _stypy_temp_lambda_306.stypy_call_varargs = varargs
            _stypy_temp_lambda_306.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_306', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_306', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'sp' (line 1299)
            sp_507725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 38), 'sp', False)
            # Getting the type of 'x' (line 1299)
            x_507726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 43), 'x', False)
            # Applying the binary operator '+' (line 1299)
            result_add_507727 = python_operator(stypy.reporting.localization.Localization(__file__, 1299, 38), '+', sp_507725, x_507726)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1299)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1299, 28), 'stypy_return_type', result_add_507727)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_306' in the type store
            # Getting the type of 'stypy_return_type' (line 1299)
            stypy_return_type_507728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_507728)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_306'
            return stypy_return_type_507728

        # Assigning a type to the variable '_stypy_temp_lambda_306' (line 1299)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1299, 28), '_stypy_temp_lambda_306', _stypy_temp_lambda_306)
        # Getting the type of '_stypy_temp_lambda_306' (line 1299)
        _stypy_temp_lambda_306_507729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 28), '_stypy_temp_lambda_306')
        # Getting the type of 'casts' (line 1299)
        casts_507730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 46), 'casts', False)
        # Processing the call keyword arguments (line 1299)
        kwargs_507731 = {}
        # Getting the type of 'map' (line 1299)
        map_507724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 24), 'map', False)
        # Calling map(args, kwargs) (line 1299)
        map_call_result_507732 = invoke(stypy.reporting.localization.Localization(__file__, 1299, 24), map_507724, *[_stypy_temp_lambda_306_507729, casts_507730], **kwargs_507731)
        
        # Processing the call keyword arguments (line 1299)
        kwargs_507733 = {}
        # Getting the type of 'body' (line 1299)
        body_507722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 12), 'body', False)
        # Obtaining the member 'extend' of a type (line 1299)
        extend_507723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1299, 12), body_507722, 'extend')
        # Calling extend(args, kwargs) (line 1299)
        extend_call_result_507734 = invoke(stypy.reporting.localization.Localization(__file__, 1299, 12), extend_507723, *[map_call_result_507732], **kwargs_507733)
        
        
        
        
        # Call to len(...): (line 1300)
        # Processing the call arguments (line 1300)
        # Getting the type of 'outcodes' (line 1300)
        outcodes_507736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 19), 'outcodes', False)
        # Processing the call keyword arguments (line 1300)
        kwargs_507737 = {}
        # Getting the type of 'len' (line 1300)
        len_507735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 15), 'len', False)
        # Calling len(args, kwargs) (line 1300)
        len_call_result_507738 = invoke(stypy.reporting.localization.Localization(__file__, 1300, 15), len_507735, *[outcodes_507736], **kwargs_507737)
        
        int_507739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1300, 32), 'int')
        # Applying the binary operator '==' (line 1300)
        result_eq_507740 = python_operator(stypy.reporting.localization.Localization(__file__, 1300, 15), '==', len_call_result_507738, int_507739)
        
        # Testing the type of an if condition (line 1300)
        if_condition_507741 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1300, 12), result_eq_507740)
        # Assigning a type to the variable 'if_condition_507741' (line 1300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1300, 12), 'if_condition_507741', if_condition_507741)
        # SSA begins for if statement (line 1300)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1301):
        
        # Assigning a Call to a Name (line 1301):
        
        # Call to format(...): (line 1301)
        # Processing the call arguments (line 1301)
        # Getting the type of 'incodes' (line 1301)
        incodes_507744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 38), 'incodes', False)
        # Getting the type of 'outcodes' (line 1301)
        outcodes_507745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 47), 'outcodes', False)
        # Processing the call keyword arguments (line 1301)
        kwargs_507746 = {}
        str_507742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1301, 22), 'str', '{}->{}')
        # Obtaining the member 'format' of a type (line 1301)
        format_507743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1301, 22), str_507742, 'format')
        # Calling format(args, kwargs) (line 1301)
        format_call_result_507747 = invoke(stypy.reporting.localization.Localization(__file__, 1301, 22), format_507743, *[incodes_507744, outcodes_507745], **kwargs_507746)
        
        # Assigning a type to the variable 'sig' (line 1301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1301, 16), 'sig', format_call_result_507747)
        
        # Call to append(...): (line 1302)
        # Processing the call arguments (line 1302)
        # Getting the type of 'sig' (line 1302)
        sig_507750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 29), 'sig', False)
        # Processing the call keyword arguments (line 1302)
        kwargs_507751 = {}
        # Getting the type of 'specs' (line 1302)
        specs_507748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 16), 'specs', False)
        # Obtaining the member 'append' of a type (line 1302)
        append_507749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1302, 16), specs_507748, 'append')
        # Calling append(args, kwargs) (line 1302)
        append_call_result_507752 = invoke(stypy.reporting.localization.Localization(__file__, 1302, 16), append_507749, *[sig_507750], **kwargs_507751)
        
        # SSA branch for the else part of an if statement (line 1300)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1304):
        
        # Assigning a Call to a Name (line 1304):
        
        # Call to format(...): (line 1304)
        # Processing the call arguments (line 1304)
        # Getting the type of 'incodes' (line 1304)
        incodes_507755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 40), 'incodes', False)
        # Getting the type of 'outcodes' (line 1304)
        outcodes_507756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 49), 'outcodes', False)
        # Processing the call keyword arguments (line 1304)
        kwargs_507757 = {}
        str_507753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1304, 22), 'str', '{}*{}->v')
        # Obtaining the member 'format' of a type (line 1304)
        format_507754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1304, 22), str_507753, 'format')
        # Calling format(args, kwargs) (line 1304)
        format_call_result_507758 = invoke(stypy.reporting.localization.Localization(__file__, 1304, 22), format_507754, *[incodes_507755, outcodes_507756], **kwargs_507757)
        
        # Assigning a type to the variable 'sig' (line 1304)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1304, 16), 'sig', format_call_result_507758)
        
        # Call to append(...): (line 1305)
        # Processing the call arguments (line 1305)
        # Getting the type of 'sig' (line 1305)
        sig_507761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 29), 'sig', False)
        # Processing the call keyword arguments (line 1305)
        kwargs_507762 = {}
        # Getting the type of 'specs' (line 1305)
        specs_507759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 16), 'specs', False)
        # Obtaining the member 'append' of a type (line 1305)
        append_507760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 16), specs_507759, 'append')
        # Calling append(args, kwargs) (line 1305)
        append_call_result_507763 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 16), append_507760, *[sig_507761], **kwargs_507762)
        
        # SSA join for if statement (line 1300)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 1307)
        # Processing the call arguments (line 1307)
        # Getting the type of 'specs' (line 1307)
        specs_507765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 15), 'specs', False)
        # Processing the call keyword arguments (line 1307)
        kwargs_507766 = {}
        # Getting the type of 'len' (line 1307)
        len_507764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 11), 'len', False)
        # Calling len(args, kwargs) (line 1307)
        len_call_result_507767 = invoke(stypy.reporting.localization.Localization(__file__, 1307, 11), len_507764, *[specs_507765], **kwargs_507766)
        
        int_507768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1307, 24), 'int')
        # Applying the binary operator '>' (line 1307)
        result_gt_507769 = python_operator(stypy.reporting.localization.Localization(__file__, 1307, 11), '>', len_call_result_507767, int_507768)
        
        # Testing the type of an if condition (line 1307)
        if_condition_507770 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1307, 8), result_gt_507769)
        # Assigning a type to the variable 'if_condition_507770' (line 1307)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1307, 8), 'if_condition_507770', if_condition_507770)
        # SSA begins for if statement (line 1307)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1308):
        
        # Assigning a Call to a Name (line 1308):
        
        # Call to _get_nan_decs(...): (line 1308)
        # Processing the call keyword arguments (line 1308)
        kwargs_507773 = {}
        # Getting the type of 'self' (line 1308)
        self_507771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 20), 'self', False)
        # Obtaining the member '_get_nan_decs' of a type (line 1308)
        _get_nan_decs_507772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1308, 20), self_507771, '_get_nan_decs')
        # Calling _get_nan_decs(args, kwargs) (line 1308)
        _get_nan_decs_call_result_507774 = invoke(stypy.reporting.localization.Localization(__file__, 1308, 20), _get_nan_decs_507772, *[], **kwargs_507773)
        
        # Assigning a type to the variable 'lines' (line 1308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1308, 12), 'lines', _get_nan_decs_call_result_507774)
        
        # Call to extend(...): (line 1309)
        # Processing the call arguments (line 1309)
        # Getting the type of 'lines' (line 1309)
        lines_507777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 24), 'lines', False)
        # Processing the call keyword arguments (line 1309)
        kwargs_507778 = {}
        # Getting the type of 'body' (line 1309)
        body_507775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 12), 'body', False)
        # Obtaining the member 'extend' of a type (line 1309)
        extend_507776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1309, 12), body_507775, 'extend')
        # Calling extend(args, kwargs) (line 1309)
        extend_call_result_507779 = invoke(stypy.reporting.localization.Localization(__file__, 1309, 12), extend_507776, *[lines_507777], **kwargs_507778)
        
        # SSA join for if statement (line 1307)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 1311)
        # Processing the call arguments (line 1311)
        # Getting the type of 'self' (line 1311)
        self_507781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 15), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1311)
        outvars_507782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1311, 15), self_507781, 'outvars')
        # Processing the call keyword arguments (line 1311)
        kwargs_507783 = {}
        # Getting the type of 'len' (line 1311)
        len_507780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 11), 'len', False)
        # Calling len(args, kwargs) (line 1311)
        len_call_result_507784 = invoke(stypy.reporting.localization.Localization(__file__, 1311, 11), len_507780, *[outvars_507782], **kwargs_507783)
        
        int_507785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1311, 32), 'int')
        # Applying the binary operator '==' (line 1311)
        result_eq_507786 = python_operator(stypy.reporting.localization.Localization(__file__, 1311, 11), '==', len_call_result_507784, int_507785)
        
        # Testing the type of an if condition (line 1311)
        if_condition_507787 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1311, 8), result_eq_507786)
        # Assigning a type to the variable 'if_condition_507787' (line 1311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1311, 8), 'if_condition_507787', if_condition_507787)
        # SSA begins for if statement (line 1311)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1312):
        
        # Assigning a Call to a Name (line 1312):
        
        # Call to format(...): (line 1312)
        # Processing the call arguments (line 1312)
        
        # Obtaining the type of the subscript
        int_507790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 54), 'int')
        # Getting the type of 'self' (line 1312)
        self_507791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1312, 41), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1312)
        outvars_507792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1312, 41), self_507791, 'outvars')
        # Obtaining the member '__getitem__' of a type (line 1312)
        getitem___507793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1312, 41), outvars_507792, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1312)
        subscript_call_result_507794 = invoke(stypy.reporting.localization.Localization(__file__, 1312, 41), getitem___507793, int_507790)
        
        # Processing the call keyword arguments (line 1312)
        kwargs_507795 = {}
        str_507788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1312, 19), 'str', 'return {}[0]')
        # Obtaining the member 'format' of a type (line 1312)
        format_507789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1312, 19), str_507788, 'format')
        # Calling format(args, kwargs) (line 1312)
        format_call_result_507796 = invoke(stypy.reporting.localization.Localization(__file__, 1312, 19), format_507789, *[subscript_call_result_507794], **kwargs_507795)
        
        # Assigning a type to the variable 'line' (line 1312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1312, 12), 'line', format_call_result_507796)
        
        # Call to append(...): (line 1313)
        # Processing the call arguments (line 1313)
        # Getting the type of 'tab' (line 1313)
        tab_507799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 24), 'tab', False)
        # Getting the type of 'line' (line 1313)
        line_507800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 30), 'line', False)
        # Applying the binary operator '+' (line 1313)
        result_add_507801 = python_operator(stypy.reporting.localization.Localization(__file__, 1313, 24), '+', tab_507799, line_507800)
        
        # Processing the call keyword arguments (line 1313)
        kwargs_507802 = {}
        # Getting the type of 'body' (line 1313)
        body_507797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 12), 'body', False)
        # Obtaining the member 'append' of a type (line 1313)
        append_507798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1313, 12), body_507797, 'append')
        # Calling append(args, kwargs) (line 1313)
        append_call_result_507803 = invoke(stypy.reporting.localization.Localization(__file__, 1313, 12), append_507798, *[result_add_507801], **kwargs_507802)
        
        # SSA join for if statement (line 1311)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Tuple to a Tuple (line 1316):
        
        # Assigning a List to a Name (line 1316):
        
        # Obtaining an instance of the builtin type 'list' (line 1316)
        list_507804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1316)
        
        # Assigning a type to the variable 'tuple_assignment_503988' (line 1316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1316, 8), 'tuple_assignment_503988', list_507804)
        
        # Assigning a List to a Name (line 1316):
        
        # Obtaining an instance of the builtin type 'list' (line 1316)
        list_507805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1316, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1316)
        
        # Assigning a type to the variable 'tuple_assignment_503989' (line 1316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1316, 8), 'tuple_assignment_503989', list_507805)
        
        # Assigning a Name to a Name (line 1316):
        # Getting the type of 'tuple_assignment_503988' (line 1316)
        tuple_assignment_503988_507806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 8), 'tuple_assignment_503988')
        # Assigning a type to the variable 'callvars' (line 1316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1316, 8), 'callvars', tuple_assignment_503988_507806)
        
        # Assigning a Name to a Name (line 1316):
        # Getting the type of 'tuple_assignment_503989' (line 1316)
        tuple_assignment_503989_507807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1316, 8), 'tuple_assignment_503989')
        # Assigning a type to the variable 'head' (line 1316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1316, 18), 'head', tuple_assignment_503989_507807)
        
        
        # Call to zip(...): (line 1317)
        # Processing the call arguments (line 1317)
        # Getting the type of 'self' (line 1317)
        self_507809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 38), 'self', False)
        # Obtaining the member 'invars' of a type (line 1317)
        invars_507810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1317, 38), self_507809, 'invars')
        # Getting the type of 'self' (line 1317)
        self_507811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 51), 'self', False)
        # Obtaining the member 'intypes' of a type (line 1317)
        intypes_507812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1317, 51), self_507811, 'intypes')
        # Processing the call keyword arguments (line 1317)
        kwargs_507813 = {}
        # Getting the type of 'zip' (line 1317)
        zip_507808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 34), 'zip', False)
        # Calling zip(args, kwargs) (line 1317)
        zip_call_result_507814 = invoke(stypy.reporting.localization.Localization(__file__, 1317, 34), zip_507808, *[invars_507810, intypes_507812], **kwargs_507813)
        
        # Testing the type of a for loop iterable (line 1317)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1317, 8), zip_call_result_507814)
        # Getting the type of the for loop variable (line 1317)
        for_loop_var_507815 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1317, 8), zip_call_result_507814)
        # Assigning a type to the variable 'invar' (line 1317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1317, 8), 'invar', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1317, 8), for_loop_var_507815))
        # Assigning a type to the variable 'intype' (line 1317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1317, 8), 'intype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1317, 8), for_loop_var_507815))
        # Assigning a type to the variable '_' (line 1317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1317, 8), '_', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1317, 8), for_loop_var_507815))
        # SSA begins for a for statement (line 1317)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 1318)
        # Processing the call arguments (line 1318)
        
        # Call to format(...): (line 1318)
        # Processing the call arguments (line 1318)
        # Getting the type of 'intype' (line 1318)
        intype_507820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 43), 'intype', False)
        # Getting the type of 'invar' (line 1318)
        invar_507821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 51), 'invar', False)
        # Processing the call keyword arguments (line 1318)
        kwargs_507822 = {}
        str_507818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1318, 28), 'str', '{} {}')
        # Obtaining the member 'format' of a type (line 1318)
        format_507819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1318, 28), str_507818, 'format')
        # Calling format(args, kwargs) (line 1318)
        format_call_result_507823 = invoke(stypy.reporting.localization.Localization(__file__, 1318, 28), format_507819, *[intype_507820, invar_507821], **kwargs_507822)
        
        # Processing the call keyword arguments (line 1318)
        kwargs_507824 = {}
        # Getting the type of 'callvars' (line 1318)
        callvars_507816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 12), 'callvars', False)
        # Obtaining the member 'append' of a type (line 1318)
        append_507817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1318, 12), callvars_507816, 'append')
        # Calling append(args, kwargs) (line 1318)
        append_call_result_507825 = invoke(stypy.reporting.localization.Localization(__file__, 1318, 12), append_507817, *[format_call_result_507823], **kwargs_507824)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 1319)
        # Processing the call arguments (line 1319)
        # Getting the type of 'self' (line 1319)
        self_507827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 15), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1319)
        outvars_507828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1319, 15), self_507827, 'outvars')
        # Processing the call keyword arguments (line 1319)
        kwargs_507829 = {}
        # Getting the type of 'len' (line 1319)
        len_507826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 11), 'len', False)
        # Calling len(args, kwargs) (line 1319)
        len_call_result_507830 = invoke(stypy.reporting.localization.Localization(__file__, 1319, 11), len_507826, *[outvars_507828], **kwargs_507829)
        
        int_507831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1319, 31), 'int')
        # Applying the binary operator '>' (line 1319)
        result_gt_507832 = python_operator(stypy.reporting.localization.Localization(__file__, 1319, 11), '>', len_call_result_507830, int_507831)
        
        # Testing the type of an if condition (line 1319)
        if_condition_507833 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1319, 8), result_gt_507832)
        # Assigning a type to the variable 'if_condition_507833' (line 1319)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1319, 8), 'if_condition_507833', if_condition_507833)
        # SSA begins for if statement (line 1319)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Call to zip(...): (line 1320)
        # Processing the call arguments (line 1320)
        # Getting the type of 'self' (line 1320)
        self_507835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 44), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1320)
        outvars_507836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1320, 44), self_507835, 'outvars')
        # Getting the type of 'self' (line 1320)
        self_507837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 58), 'self', False)
        # Obtaining the member 'outtypes' of a type (line 1320)
        outtypes_507838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1320, 58), self_507837, 'outtypes')
        # Processing the call keyword arguments (line 1320)
        kwargs_507839 = {}
        # Getting the type of 'zip' (line 1320)
        zip_507834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1320, 40), 'zip', False)
        # Calling zip(args, kwargs) (line 1320)
        zip_call_result_507840 = invoke(stypy.reporting.localization.Localization(__file__, 1320, 40), zip_507834, *[outvars_507836, outtypes_507838], **kwargs_507839)
        
        # Testing the type of a for loop iterable (line 1320)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1320, 12), zip_call_result_507840)
        # Getting the type of the for loop variable (line 1320)
        for_loop_var_507841 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1320, 12), zip_call_result_507840)
        # Assigning a type to the variable 'outvar' (line 1320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1320, 12), 'outvar', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1320, 12), for_loop_var_507841))
        # Assigning a type to the variable 'outtype' (line 1320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1320, 12), 'outtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1320, 12), for_loop_var_507841))
        # Assigning a type to the variable '_' (line 1320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1320, 12), '_', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1320, 12), for_loop_var_507841))
        # SSA begins for a for statement (line 1320)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 1321)
        # Processing the call arguments (line 1321)
        
        # Call to format(...): (line 1321)
        # Processing the call arguments (line 1321)
        # Getting the type of 'outtype' (line 1321)
        outtype_507846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 48), 'outtype', False)
        # Getting the type of 'outvar' (line 1321)
        outvar_507847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 57), 'outvar', False)
        # Processing the call keyword arguments (line 1321)
        kwargs_507848 = {}
        str_507844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1321, 32), 'str', '{} *{}')
        # Obtaining the member 'format' of a type (line 1321)
        format_507845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1321, 32), str_507844, 'format')
        # Calling format(args, kwargs) (line 1321)
        format_call_result_507849 = invoke(stypy.reporting.localization.Localization(__file__, 1321, 32), format_507845, *[outtype_507846, outvar_507847], **kwargs_507848)
        
        # Processing the call keyword arguments (line 1321)
        kwargs_507850 = {}
        # Getting the type of 'callvars' (line 1321)
        callvars_507842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 16), 'callvars', False)
        # Obtaining the member 'append' of a type (line 1321)
        append_507843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1321, 16), callvars_507842, 'append')
        # Calling append(args, kwargs) (line 1321)
        append_call_result_507851 = invoke(stypy.reporting.localization.Localization(__file__, 1321, 16), append_507843, *[format_call_result_507849], **kwargs_507850)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1319)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 1322)
        # Processing the call arguments (line 1322)
        # Getting the type of 'self' (line 1322)
        self_507853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1322, 15), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1322)
        outvars_507854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1322, 15), self_507853, 'outvars')
        # Processing the call keyword arguments (line 1322)
        kwargs_507855 = {}
        # Getting the type of 'len' (line 1322)
        len_507852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1322, 11), 'len', False)
        # Calling len(args, kwargs) (line 1322)
        len_call_result_507856 = invoke(stypy.reporting.localization.Localization(__file__, 1322, 11), len_507852, *[outvars_507854], **kwargs_507855)
        
        int_507857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1322, 32), 'int')
        # Applying the binary operator '==' (line 1322)
        result_eq_507858 = python_operator(stypy.reporting.localization.Localization(__file__, 1322, 11), '==', len_call_result_507856, int_507857)
        
        # Testing the type of an if condition (line 1322)
        if_condition_507859 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1322, 8), result_eq_507858)
        # Assigning a type to the variable 'if_condition_507859' (line 1322)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1322, 8), 'if_condition_507859', if_condition_507859)
        # SSA begins for if statement (line 1322)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Tuple (line 1323):
        
        # Assigning a Subscript to a Name (line 1323):
        
        # Obtaining the type of the subscript
        int_507860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1323, 12), 'int')
        
        # Obtaining the type of the subscript
        int_507861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1323, 39), 'int')
        # Getting the type of 'self' (line 1323)
        self_507862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 25), 'self')
        # Obtaining the member 'outtypes' of a type (line 1323)
        outtypes_507863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1323, 25), self_507862, 'outtypes')
        # Obtaining the member '__getitem__' of a type (line 1323)
        getitem___507864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1323, 25), outtypes_507863, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1323)
        subscript_call_result_507865 = invoke(stypy.reporting.localization.Localization(__file__, 1323, 25), getitem___507864, int_507861)
        
        # Obtaining the member '__getitem__' of a type (line 1323)
        getitem___507866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1323, 12), subscript_call_result_507865, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1323)
        subscript_call_result_507867 = invoke(stypy.reporting.localization.Localization(__file__, 1323, 12), getitem___507866, int_507860)
        
        # Assigning a type to the variable 'tuple_var_assignment_503990' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 12), 'tuple_var_assignment_503990', subscript_call_result_507867)
        
        # Assigning a Subscript to a Name (line 1323):
        
        # Obtaining the type of the subscript
        int_507868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1323, 12), 'int')
        
        # Obtaining the type of the subscript
        int_507869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1323, 39), 'int')
        # Getting the type of 'self' (line 1323)
        self_507870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 25), 'self')
        # Obtaining the member 'outtypes' of a type (line 1323)
        outtypes_507871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1323, 25), self_507870, 'outtypes')
        # Obtaining the member '__getitem__' of a type (line 1323)
        getitem___507872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1323, 25), outtypes_507871, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1323)
        subscript_call_result_507873 = invoke(stypy.reporting.localization.Localization(__file__, 1323, 25), getitem___507872, int_507869)
        
        # Obtaining the member '__getitem__' of a type (line 1323)
        getitem___507874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1323, 12), subscript_call_result_507873, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1323)
        subscript_call_result_507875 = invoke(stypy.reporting.localization.Localization(__file__, 1323, 12), getitem___507874, int_507868)
        
        # Assigning a type to the variable 'tuple_var_assignment_503991' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 12), 'tuple_var_assignment_503991', subscript_call_result_507875)
        
        # Assigning a Name to a Name (line 1323):
        # Getting the type of 'tuple_var_assignment_503990' (line 1323)
        tuple_var_assignment_503990_507876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 12), 'tuple_var_assignment_503990')
        # Assigning a type to the variable 'outtype' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 12), 'outtype', tuple_var_assignment_503990_507876)
        
        # Assigning a Name to a Name (line 1323):
        # Getting the type of 'tuple_var_assignment_503991' (line 1323)
        tuple_var_assignment_503991_507877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 12), 'tuple_var_assignment_503991')
        # Assigning a type to the variable '_' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 21), '_', tuple_var_assignment_503991_507877)
        
        # Assigning a Call to a Name (line 1324):
        
        # Assigning a Call to a Name (line 1324):
        
        # Call to format(...): (line 1324)
        # Processing the call arguments (line 1324)
        # Getting the type of 'outtype' (line 1324)
        outtype_507880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1324, 49), 'outtype', False)
        # Getting the type of 'self' (line 1324)
        self_507881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1324, 58), 'self', False)
        # Obtaining the member 'name' of a type (line 1324)
        name_507882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1324, 58), self_507881, 'name')
        
        # Call to join(...): (line 1324)
        # Processing the call arguments (line 1324)
        # Getting the type of 'callvars' (line 1324)
        callvars_507885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1324, 79), 'callvars', False)
        # Processing the call keyword arguments (line 1324)
        kwargs_507886 = {}
        str_507883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1324, 69), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1324)
        join_507884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1324, 69), str_507883, 'join')
        # Calling join(args, kwargs) (line 1324)
        join_call_result_507887 = invoke(stypy.reporting.localization.Localization(__file__, 1324, 69), join_507884, *[callvars_507885], **kwargs_507886)
        
        # Processing the call keyword arguments (line 1324)
        kwargs_507888 = {}
        str_507878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1324, 18), 'str', 'cpdef {} {}({}) nogil')
        # Obtaining the member 'format' of a type (line 1324)
        format_507879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1324, 18), str_507878, 'format')
        # Calling format(args, kwargs) (line 1324)
        format_call_result_507889 = invoke(stypy.reporting.localization.Localization(__file__, 1324, 18), format_507879, *[outtype_507880, name_507882, join_call_result_507887], **kwargs_507888)
        
        # Assigning a type to the variable 'dec' (line 1324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1324, 12), 'dec', format_call_result_507889)
        # SSA branch for the else part of an if statement (line 1322)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1326):
        
        # Assigning a Call to a Name (line 1326):
        
        # Call to format(...): (line 1326)
        # Processing the call arguments (line 1326)
        # Getting the type of 'self' (line 1326)
        self_507892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 50), 'self', False)
        # Obtaining the member 'name' of a type (line 1326)
        name_507893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1326, 50), self_507892, 'name')
        
        # Call to join(...): (line 1326)
        # Processing the call arguments (line 1326)
        # Getting the type of 'callvars' (line 1326)
        callvars_507896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1326, 71), 'callvars', False)
        # Processing the call keyword arguments (line 1326)
        kwargs_507897 = {}
        str_507894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 61), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1326)
        join_507895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1326, 61), str_507894, 'join')
        # Calling join(args, kwargs) (line 1326)
        join_call_result_507898 = invoke(stypy.reporting.localization.Localization(__file__, 1326, 61), join_507895, *[callvars_507896], **kwargs_507897)
        
        # Processing the call keyword arguments (line 1326)
        kwargs_507899 = {}
        str_507890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1326, 18), 'str', 'cdef void {}({}) nogil')
        # Obtaining the member 'format' of a type (line 1326)
        format_507891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1326, 18), str_507890, 'format')
        # Calling format(args, kwargs) (line 1326)
        format_call_result_507900 = invoke(stypy.reporting.localization.Localization(__file__, 1326, 18), format_507891, *[name_507893, join_call_result_507898], **kwargs_507899)
        
        # Assigning a type to the variable 'dec' (line 1326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1326, 12), 'dec', format_call_result_507900)
        # SSA join for if statement (line 1322)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to append(...): (line 1327)
        # Processing the call arguments (line 1327)
        # Getting the type of 'dec' (line 1327)
        dec_507903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 20), 'dec', False)
        str_507904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1327, 26), 'str', ':')
        # Applying the binary operator '+' (line 1327)
        result_add_507905 = python_operator(stypy.reporting.localization.Localization(__file__, 1327, 20), '+', dec_507903, str_507904)
        
        # Processing the call keyword arguments (line 1327)
        kwargs_507906 = {}
        # Getting the type of 'head' (line 1327)
        head_507901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 8), 'head', False)
        # Obtaining the member 'append' of a type (line 1327)
        append_507902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1327, 8), head_507901, 'append')
        # Calling append(args, kwargs) (line 1327)
        append_call_result_507907 = invoke(stypy.reporting.localization.Localization(__file__, 1327, 8), append_507902, *[result_add_507905], **kwargs_507906)
        
        
        # Call to append(...): (line 1328)
        # Processing the call arguments (line 1328)
        # Getting the type of 'tab' (line 1328)
        tab_507910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 20), 'tab', False)
        
        # Call to format(...): (line 1328)
        # Processing the call arguments (line 1328)
        # Getting the type of 'self' (line 1328)
        self_507913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 44), 'self', False)
        # Obtaining the member 'doc' of a type (line 1328)
        doc_507914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1328, 44), self_507913, 'doc')
        # Processing the call keyword arguments (line 1328)
        kwargs_507915 = {}
        str_507911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1328, 26), 'str', '"""{}"""')
        # Obtaining the member 'format' of a type (line 1328)
        format_507912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1328, 26), str_507911, 'format')
        # Calling format(args, kwargs) (line 1328)
        format_call_result_507916 = invoke(stypy.reporting.localization.Localization(__file__, 1328, 26), format_507912, *[doc_507914], **kwargs_507915)
        
        # Applying the binary operator '+' (line 1328)
        result_add_507917 = python_operator(stypy.reporting.localization.Localization(__file__, 1328, 20), '+', tab_507910, format_call_result_507916)
        
        # Processing the call keyword arguments (line 1328)
        kwargs_507918 = {}
        # Getting the type of 'head' (line 1328)
        head_507908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 8), 'head', False)
        # Obtaining the member 'append' of a type (line 1328)
        append_507909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1328, 8), head_507908, 'append')
        # Calling append(args, kwargs) (line 1328)
        append_call_result_507919 = invoke(stypy.reporting.localization.Localization(__file__, 1328, 8), append_507909, *[result_add_507917], **kwargs_507918)
        
        
        
        
        # Call to len(...): (line 1329)
        # Processing the call arguments (line 1329)
        # Getting the type of 'self' (line 1329)
        self_507921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 15), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1329)
        outvars_507922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1329, 15), self_507921, 'outvars')
        # Processing the call keyword arguments (line 1329)
        kwargs_507923 = {}
        # Getting the type of 'len' (line 1329)
        len_507920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 11), 'len', False)
        # Calling len(args, kwargs) (line 1329)
        len_call_result_507924 = invoke(stypy.reporting.localization.Localization(__file__, 1329, 11), len_507920, *[outvars_507922], **kwargs_507923)
        
        int_507925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1329, 32), 'int')
        # Applying the binary operator '==' (line 1329)
        result_eq_507926 = python_operator(stypy.reporting.localization.Localization(__file__, 1329, 11), '==', len_call_result_507924, int_507925)
        
        # Testing the type of an if condition (line 1329)
        if_condition_507927 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1329, 8), result_eq_507926)
        # Assigning a type to the variable 'if_condition_507927' (line 1329)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1329, 8), 'if_condition_507927', if_condition_507927)
        # SSA begins for if statement (line 1329)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 1330):
        
        # Assigning a Subscript to a Name (line 1330):
        
        # Obtaining the type of the subscript
        int_507928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 34), 'int')
        # Getting the type of 'self' (line 1330)
        self_507929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 21), 'self')
        # Obtaining the member 'outvars' of a type (line 1330)
        outvars_507930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 21), self_507929, 'outvars')
        # Obtaining the member '__getitem__' of a type (line 1330)
        getitem___507931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1330, 21), outvars_507930, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1330)
        subscript_call_result_507932 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 21), getitem___507931, int_507928)
        
        # Assigning a type to the variable 'outvar' (line 1330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1330, 12), 'outvar', subscript_call_result_507932)
        
        # Assigning a Subscript to a Tuple (line 1331):
        
        # Assigning a Subscript to a Name (line 1331):
        
        # Obtaining the type of the subscript
        int_507933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 12), 'int')
        
        # Obtaining the type of the subscript
        int_507934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 39), 'int')
        # Getting the type of 'self' (line 1331)
        self_507935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 25), 'self')
        # Obtaining the member 'outtypes' of a type (line 1331)
        outtypes_507936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1331, 25), self_507935, 'outtypes')
        # Obtaining the member '__getitem__' of a type (line 1331)
        getitem___507937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1331, 25), outtypes_507936, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1331)
        subscript_call_result_507938 = invoke(stypy.reporting.localization.Localization(__file__, 1331, 25), getitem___507937, int_507934)
        
        # Obtaining the member '__getitem__' of a type (line 1331)
        getitem___507939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1331, 12), subscript_call_result_507938, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1331)
        subscript_call_result_507940 = invoke(stypy.reporting.localization.Localization(__file__, 1331, 12), getitem___507939, int_507933)
        
        # Assigning a type to the variable 'tuple_var_assignment_503992' (line 1331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1331, 12), 'tuple_var_assignment_503992', subscript_call_result_507940)
        
        # Assigning a Subscript to a Name (line 1331):
        
        # Obtaining the type of the subscript
        int_507941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 12), 'int')
        
        # Obtaining the type of the subscript
        int_507942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1331, 39), 'int')
        # Getting the type of 'self' (line 1331)
        self_507943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 25), 'self')
        # Obtaining the member 'outtypes' of a type (line 1331)
        outtypes_507944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1331, 25), self_507943, 'outtypes')
        # Obtaining the member '__getitem__' of a type (line 1331)
        getitem___507945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1331, 25), outtypes_507944, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1331)
        subscript_call_result_507946 = invoke(stypy.reporting.localization.Localization(__file__, 1331, 25), getitem___507945, int_507942)
        
        # Obtaining the member '__getitem__' of a type (line 1331)
        getitem___507947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1331, 12), subscript_call_result_507946, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1331)
        subscript_call_result_507948 = invoke(stypy.reporting.localization.Localization(__file__, 1331, 12), getitem___507947, int_507941)
        
        # Assigning a type to the variable 'tuple_var_assignment_503993' (line 1331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1331, 12), 'tuple_var_assignment_503993', subscript_call_result_507948)
        
        # Assigning a Name to a Name (line 1331):
        # Getting the type of 'tuple_var_assignment_503992' (line 1331)
        tuple_var_assignment_503992_507949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 12), 'tuple_var_assignment_503992')
        # Assigning a type to the variable 'outtype' (line 1331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1331, 12), 'outtype', tuple_var_assignment_503992_507949)
        
        # Assigning a Name to a Name (line 1331):
        # Getting the type of 'tuple_var_assignment_503993' (line 1331)
        tuple_var_assignment_503993_507950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1331, 12), 'tuple_var_assignment_503993')
        # Assigning a type to the variable '_' (line 1331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1331, 21), '_', tuple_var_assignment_503993_507950)
        
        # Assigning a Call to a Name (line 1332):
        
        # Assigning a Call to a Name (line 1332):
        
        # Call to format(...): (line 1332)
        # Processing the call arguments (line 1332)
        # Getting the type of 'outtype' (line 1332)
        outtype_507953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 39), 'outtype', False)
        # Getting the type of 'outvar' (line 1332)
        outvar_507954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 48), 'outvar', False)
        # Processing the call keyword arguments (line 1332)
        kwargs_507955 = {}
        str_507951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1332, 19), 'str', 'cdef {} {}')
        # Obtaining the member 'format' of a type (line 1332)
        format_507952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1332, 19), str_507951, 'format')
        # Calling format(args, kwargs) (line 1332)
        format_call_result_507956 = invoke(stypy.reporting.localization.Localization(__file__, 1332, 19), format_507952, *[outtype_507953, outvar_507954], **kwargs_507955)
        
        # Assigning a type to the variable 'line' (line 1332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1332, 12), 'line', format_call_result_507956)
        
        # Call to append(...): (line 1333)
        # Processing the call arguments (line 1333)
        # Getting the type of 'tab' (line 1333)
        tab_507959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 24), 'tab', False)
        # Getting the type of 'line' (line 1333)
        line_507960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 30), 'line', False)
        # Applying the binary operator '+' (line 1333)
        result_add_507961 = python_operator(stypy.reporting.localization.Localization(__file__, 1333, 24), '+', tab_507959, line_507960)
        
        # Processing the call keyword arguments (line 1333)
        kwargs_507962 = {}
        # Getting the type of 'head' (line 1333)
        head_507957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1333, 12), 'head', False)
        # Obtaining the member 'append' of a type (line 1333)
        append_507958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1333, 12), head_507957, 'append')
        # Calling append(args, kwargs) (line 1333)
        append_call_result_507963 = invoke(stypy.reporting.localization.Localization(__file__, 1333, 12), append_507958, *[result_add_507961], **kwargs_507962)
        
        # SSA join for if statement (line 1329)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to extend(...): (line 1334)
        # Processing the call arguments (line 1334)
        
        # Call to _get_tmp_decs(...): (line 1334)
        # Processing the call arguments (line 1334)
        # Getting the type of 'all_tmpvars' (line 1334)
        all_tmpvars_507968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 39), 'all_tmpvars', False)
        # Processing the call keyword arguments (line 1334)
        kwargs_507969 = {}
        # Getting the type of 'self' (line 1334)
        self_507966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 20), 'self', False)
        # Obtaining the member '_get_tmp_decs' of a type (line 1334)
        _get_tmp_decs_507967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1334, 20), self_507966, '_get_tmp_decs')
        # Calling _get_tmp_decs(args, kwargs) (line 1334)
        _get_tmp_decs_call_result_507970 = invoke(stypy.reporting.localization.Localization(__file__, 1334, 20), _get_tmp_decs_507967, *[all_tmpvars_507968], **kwargs_507969)
        
        # Processing the call keyword arguments (line 1334)
        kwargs_507971 = {}
        # Getting the type of 'head' (line 1334)
        head_507964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 8), 'head', False)
        # Obtaining the member 'extend' of a type (line 1334)
        extend_507965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1334, 8), head_507964, 'extend')
        # Calling extend(args, kwargs) (line 1334)
        extend_call_result_507972 = invoke(stypy.reporting.localization.Localization(__file__, 1334, 8), extend_507965, *[_get_tmp_decs_call_result_507970], **kwargs_507971)
        
        
        # Assigning a Call to a Name (line 1336):
        
        # Assigning a Call to a Name (line 1336):
        
        # Call to join(...): (line 1336)
        # Processing the call arguments (line 1336)
        # Getting the type of 'head' (line 1336)
        head_507975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 24), 'head', False)
        # Getting the type of 'body' (line 1336)
        body_507976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 31), 'body', False)
        # Applying the binary operator '+' (line 1336)
        result_add_507977 = python_operator(stypy.reporting.localization.Localization(__file__, 1336, 24), '+', head_507975, body_507976)
        
        # Processing the call keyword arguments (line 1336)
        kwargs_507978 = {}
        str_507973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 14), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1336)
        join_507974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1336, 14), str_507973, 'join')
        # Calling join(args, kwargs) (line 1336)
        join_call_result_507979 = invoke(stypy.reporting.localization.Localization(__file__, 1336, 14), join_507974, *[result_add_507977], **kwargs_507978)
        
        # Assigning a type to the variable 'src' (line 1336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1336, 8), 'src', join_call_result_507979)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1337)
        tuple_507980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1337, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1337)
        # Adding element type (line 1337)
        # Getting the type of 'dec' (line 1337)
        dec_507981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1337, 15), 'dec')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1337, 15), tuple_507980, dec_507981)
        # Adding element type (line 1337)
        # Getting the type of 'src' (line 1337)
        src_507982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1337, 20), 'src')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1337, 15), tuple_507980, src_507982)
        # Adding element type (line 1337)
        # Getting the type of 'specs' (line 1337)
        specs_507983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1337, 25), 'specs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1337, 15), tuple_507980, specs_507983)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1337, 8), 'stypy_return_type', tuple_507980)
        
        # ################# End of '_generate_from_outargs_and_no_return(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_generate_from_outargs_and_no_return' in the type store
        # Getting the type of 'stypy_return_type' (line 1282)
        stypy_return_type_507984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_507984)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_generate_from_outargs_and_no_return'
        return stypy_return_type_507984


    @norecursion
    def _generate_from_outargs_and_return(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_generate_from_outargs_and_return'
        module_type_store = module_type_store.open_function_context('_generate_from_outargs_and_return', 1339, 4, False)
        # Assigning a type to the variable 'self' (line 1340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1340, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_function_name', 'FusedFunc._generate_from_outargs_and_return')
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_param_names_list', [])
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc._generate_from_outargs_and_return.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc._generate_from_outargs_and_return', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_generate_from_outargs_and_return', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_generate_from_outargs_and_return(...)' code ##################

        
        # Assigning a BinOp to a Name (line 1340):
        
        # Assigning a BinOp to a Name (line 1340):
        str_507985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1340, 14), 'str', ' ')
        int_507986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1340, 18), 'int')
        # Applying the binary operator '*' (line 1340)
        result_mul_507987 = python_operator(stypy.reporting.localization.Localization(__file__, 1340, 14), '*', str_507985, int_507986)
        
        # Assigning a type to the variable 'tab' (line 1340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1340, 8), 'tab', result_mul_507987)
        
        # Assigning a Call to a Name (line 1341):
        
        # Assigning a Call to a Name (line 1341):
        
        # Call to set(...): (line 1341)
        # Processing the call keyword arguments (line 1341)
        kwargs_507989 = {}
        # Getting the type of 'set' (line 1341)
        set_507988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 22), 'set', False)
        # Calling set(args, kwargs) (line 1341)
        set_call_result_507990 = invoke(stypy.reporting.localization.Localization(__file__, 1341, 22), set_507988, *[], **kwargs_507989)
        
        # Assigning a type to the variable 'all_tmpvars' (line 1341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1341, 8), 'all_tmpvars', set_call_result_507990)
        
        # Assigning a Tuple to a Tuple (line 1342):
        
        # Assigning a List to a Name (line 1342):
        
        # Obtaining an instance of the builtin type 'list' (line 1342)
        list_507991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1342, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1342)
        
        # Assigning a type to the variable 'tuple_assignment_503994' (line 1342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1342, 8), 'tuple_assignment_503994', list_507991)
        
        # Assigning a List to a Name (line 1342):
        
        # Obtaining an instance of the builtin type 'list' (line 1342)
        list_507992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1342, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1342)
        
        # Assigning a type to the variable 'tuple_assignment_503995' (line 1342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1342, 8), 'tuple_assignment_503995', list_507992)
        
        # Assigning a Name to a Name (line 1342):
        # Getting the type of 'tuple_assignment_503994' (line 1342)
        tuple_assignment_503994_507993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 8), 'tuple_assignment_503994')
        # Assigning a type to the variable 'specs' (line 1342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1342, 8), 'specs', tuple_assignment_503994_507993)
        
        # Assigning a Name to a Name (line 1342):
        # Getting the type of 'tuple_assignment_503995' (line 1342)
        tuple_assignment_503995_507994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 8), 'tuple_assignment_503995')
        # Assigning a type to the variable 'body' (line 1342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1342, 15), 'body', tuple_assignment_503995_507994)
        
        
        # Call to enumerate(...): (line 1343)
        # Processing the call arguments (line 1343)
        # Getting the type of 'self' (line 1343)
        self_507996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1343, 37), 'self', False)
        # Obtaining the member 'signatures' of a type (line 1343)
        signatures_507997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1343, 37), self_507996, 'signatures')
        # Processing the call keyword arguments (line 1343)
        kwargs_507998 = {}
        # Getting the type of 'enumerate' (line 1343)
        enumerate_507995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1343, 27), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1343)
        enumerate_call_result_507999 = invoke(stypy.reporting.localization.Localization(__file__, 1343, 27), enumerate_507995, *[signatures_507997], **kwargs_507998)
        
        # Testing the type of a for loop iterable (line 1343)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1343, 8), enumerate_call_result_507999)
        # Getting the type of the for loop variable (line 1343)
        for_loop_var_508000 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1343, 8), enumerate_call_result_507999)
        # Assigning a type to the variable 'signum' (line 1343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1343, 8), 'signum', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 8), for_loop_var_508000))
        # Assigning a type to the variable 'sig' (line 1343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1343, 8), 'sig', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 8), for_loop_var_508000))
        # SSA begins for a for statement (line 1343)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 1344):
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508006 = {}
        # Getting the type of 'self' (line 1345)
        self_508002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508002, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508007 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508003, *[signum_508004, sig_508005], **kwargs_508006)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508007, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508009 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508008, int_508001)
        
        # Assigning a type to the variable 'tuple_var_assignment_503996' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_503996', subscript_call_result_508009)
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508015 = {}
        # Getting the type of 'self' (line 1345)
        self_508011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508011, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508016 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508012, *[signum_508013, sig_508014], **kwargs_508015)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508016, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508018 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508017, int_508010)
        
        # Assigning a type to the variable 'tuple_var_assignment_503997' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_503997', subscript_call_result_508018)
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508024 = {}
        # Getting the type of 'self' (line 1345)
        self_508020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508020, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508025 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508021, *[signum_508022, sig_508023], **kwargs_508024)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508025, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508027 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508026, int_508019)
        
        # Assigning a type to the variable 'tuple_var_assignment_503998' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_503998', subscript_call_result_508027)
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508033 = {}
        # Getting the type of 'self' (line 1345)
        self_508029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508029, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508034 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508030, *[signum_508031, sig_508032], **kwargs_508033)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508034, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508036 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508035, int_508028)
        
        # Assigning a type to the variable 'tuple_var_assignment_503999' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_503999', subscript_call_result_508036)
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508042 = {}
        # Getting the type of 'self' (line 1345)
        self_508038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508038, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508043 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508039, *[signum_508040, sig_508041], **kwargs_508042)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508043, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508045 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508044, int_508037)
        
        # Assigning a type to the variable 'tuple_var_assignment_504000' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504000', subscript_call_result_508045)
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508051 = {}
        # Getting the type of 'self' (line 1345)
        self_508047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508047, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508052 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508048, *[signum_508049, sig_508050], **kwargs_508051)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508052, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508054 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508053, int_508046)
        
        # Assigning a type to the variable 'tuple_var_assignment_504001' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504001', subscript_call_result_508054)
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508060 = {}
        # Getting the type of 'self' (line 1345)
        self_508056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508056, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508061 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508057, *[signum_508058, sig_508059], **kwargs_508060)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508061, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508063 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508062, int_508055)
        
        # Assigning a type to the variable 'tuple_var_assignment_504002' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504002', subscript_call_result_508063)
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508069 = {}
        # Getting the type of 'self' (line 1345)
        self_508065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508065, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508070 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508066, *[signum_508067, sig_508068], **kwargs_508069)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508070, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508072 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508071, int_508064)
        
        # Assigning a type to the variable 'tuple_var_assignment_504003' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504003', subscript_call_result_508072)
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508078 = {}
        # Getting the type of 'self' (line 1345)
        self_508074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508074, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508079 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508075, *[signum_508076, sig_508077], **kwargs_508078)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508079, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508081 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508080, int_508073)
        
        # Assigning a type to the variable 'tuple_var_assignment_504004' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504004', subscript_call_result_508081)
        
        # Assigning a Subscript to a Name (line 1344):
        
        # Obtaining the type of the subscript
        int_508082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 12), 'int')
        
        # Call to _get_common(...): (line 1345)
        # Processing the call arguments (line 1345)
        # Getting the type of 'signum' (line 1345)
        signum_508085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 57), 'signum', False)
        # Getting the type of 'sig' (line 1345)
        sig_508086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 65), 'sig', False)
        # Processing the call keyword arguments (line 1345)
        kwargs_508087 = {}
        # Getting the type of 'self' (line 1345)
        self_508083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 40), 'self', False)
        # Obtaining the member '_get_common' of a type (line 1345)
        _get_common_508084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 40), self_508083, '_get_common')
        # Calling _get_common(args, kwargs) (line 1345)
        _get_common_call_result_508088 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 40), _get_common_508084, *[signum_508085, sig_508086], **kwargs_508087)
        
        # Obtaining the member '__getitem__' of a type (line 1344)
        getitem___508089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 12), _get_common_call_result_508088, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1344)
        subscript_call_result_508090 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 12), getitem___508089, int_508082)
        
        # Assigning a type to the variable 'tuple_var_assignment_504005' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504005', subscript_call_result_508090)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_503996' (line 1344)
        tuple_var_assignment_503996_508091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_503996')
        # Assigning a type to the variable 'func_name' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'func_name', tuple_var_assignment_503996_508091)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_503997' (line 1344)
        tuple_var_assignment_503997_508092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_503997')
        # Assigning a type to the variable 'incodes' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 23), 'incodes', tuple_var_assignment_503997_508092)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_503998' (line 1344)
        tuple_var_assignment_503998_508093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_503998')
        # Assigning a type to the variable 'outcodes' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 32), 'outcodes', tuple_var_assignment_503998_508093)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_503999' (line 1344)
        tuple_var_assignment_503999_508094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_503999')
        # Assigning a type to the variable 'retcode' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 42), 'retcode', tuple_var_assignment_503999_508094)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_504000' (line 1344)
        tuple_var_assignment_504000_508095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504000')
        # Assigning a type to the variable 'intypes' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 51), 'intypes', tuple_var_assignment_504000_508095)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_504001' (line 1344)
        tuple_var_assignment_504001_508096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504001')
        # Assigning a type to the variable 'outtypes' (line 1344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1344, 60), 'outtypes', tuple_var_assignment_504001_508096)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_504002' (line 1344)
        tuple_var_assignment_504002_508097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504002')
        # Assigning a type to the variable 'rettype' (line 1345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1345, 16), 'rettype', tuple_var_assignment_504002_508097)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_504003' (line 1344)
        tuple_var_assignment_504003_508098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504003')
        # Assigning a type to the variable 'c' (line 1345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1345, 25), 'c', tuple_var_assignment_504003_508098)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_504004' (line 1344)
        tuple_var_assignment_504004_508099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504004')
        # Assigning a type to the variable 'lines' (line 1345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1345, 28), 'lines', tuple_var_assignment_504004_508099)
        
        # Assigning a Name to a Name (line 1344):
        # Getting the type of 'tuple_var_assignment_504005' (line 1344)
        tuple_var_assignment_504005_508100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 12), 'tuple_var_assignment_504005')
        # Assigning a type to the variable 'sp' (line 1345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1345, 35), 'sp', tuple_var_assignment_504005_508100)
        
        # Call to extend(...): (line 1346)
        # Processing the call arguments (line 1346)
        # Getting the type of 'lines' (line 1346)
        lines_508103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1346, 24), 'lines', False)
        # Processing the call keyword arguments (line 1346)
        kwargs_508104 = {}
        # Getting the type of 'body' (line 1346)
        body_508101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1346, 12), 'body', False)
        # Obtaining the member 'extend' of a type (line 1346)
        extend_508102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1346, 12), body_508101, 'extend')
        # Calling extend(args, kwargs) (line 1346)
        extend_call_result_508105 = invoke(stypy.reporting.localization.Localization(__file__, 1346, 12), extend_508102, *[lines_508103], **kwargs_508104)
        
        
        # Assigning a Call to a Name (line 1349):
        
        # Assigning a Call to a Name (line 1349):
        
        # Call to _get_incallvars(...): (line 1349)
        # Processing the call arguments (line 1349)
        # Getting the type of 'intypes' (line 1349)
        intypes_508108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 44), 'intypes', False)
        # Getting the type of 'c' (line 1349)
        c_508109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 53), 'c', False)
        # Processing the call keyword arguments (line 1349)
        kwargs_508110 = {}
        # Getting the type of 'self' (line 1349)
        self_508106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 23), 'self', False)
        # Obtaining the member '_get_incallvars' of a type (line 1349)
        _get_incallvars_508107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1349, 23), self_508106, '_get_incallvars')
        # Calling _get_incallvars(args, kwargs) (line 1349)
        _get_incallvars_call_result_508111 = invoke(stypy.reporting.localization.Localization(__file__, 1349, 23), _get_incallvars_508107, *[intypes_508108, c_508109], **kwargs_508110)
        
        # Assigning a type to the variable 'callvars' (line 1349)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1349, 12), 'callvars', _get_incallvars_call_result_508111)
        
        # Assigning a Call to a Tuple (line 1350):
        
        # Assigning a Subscript to a Name (line 1350):
        
        # Obtaining the type of the subscript
        int_508112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1350, 12), 'int')
        
        # Call to _get_outcallvars(...): (line 1350)
        # Processing the call arguments (line 1350)
        # Getting the type of 'outtypes' (line 1350)
        outtypes_508115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 64), 'outtypes', False)
        # Getting the type of 'c' (line 1350)
        c_508116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 74), 'c', False)
        # Processing the call keyword arguments (line 1350)
        kwargs_508117 = {}
        # Getting the type of 'self' (line 1350)
        self_508113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 42), 'self', False)
        # Obtaining the member '_get_outcallvars' of a type (line 1350)
        _get_outcallvars_508114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 42), self_508113, '_get_outcallvars')
        # Calling _get_outcallvars(args, kwargs) (line 1350)
        _get_outcallvars_call_result_508118 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 42), _get_outcallvars_508114, *[outtypes_508115, c_508116], **kwargs_508117)
        
        # Obtaining the member '__getitem__' of a type (line 1350)
        getitem___508119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 12), _get_outcallvars_call_result_508118, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1350)
        subscript_call_result_508120 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 12), getitem___508119, int_508112)
        
        # Assigning a type to the variable 'tuple_var_assignment_504006' (line 1350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1350, 12), 'tuple_var_assignment_504006', subscript_call_result_508120)
        
        # Assigning a Subscript to a Name (line 1350):
        
        # Obtaining the type of the subscript
        int_508121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1350, 12), 'int')
        
        # Call to _get_outcallvars(...): (line 1350)
        # Processing the call arguments (line 1350)
        # Getting the type of 'outtypes' (line 1350)
        outtypes_508124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 64), 'outtypes', False)
        # Getting the type of 'c' (line 1350)
        c_508125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 74), 'c', False)
        # Processing the call keyword arguments (line 1350)
        kwargs_508126 = {}
        # Getting the type of 'self' (line 1350)
        self_508122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 42), 'self', False)
        # Obtaining the member '_get_outcallvars' of a type (line 1350)
        _get_outcallvars_508123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 42), self_508122, '_get_outcallvars')
        # Calling _get_outcallvars(args, kwargs) (line 1350)
        _get_outcallvars_call_result_508127 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 42), _get_outcallvars_508123, *[outtypes_508124, c_508125], **kwargs_508126)
        
        # Obtaining the member '__getitem__' of a type (line 1350)
        getitem___508128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 12), _get_outcallvars_call_result_508127, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1350)
        subscript_call_result_508129 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 12), getitem___508128, int_508121)
        
        # Assigning a type to the variable 'tuple_var_assignment_504007' (line 1350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1350, 12), 'tuple_var_assignment_504007', subscript_call_result_508129)
        
        # Assigning a Subscript to a Name (line 1350):
        
        # Obtaining the type of the subscript
        int_508130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1350, 12), 'int')
        
        # Call to _get_outcallvars(...): (line 1350)
        # Processing the call arguments (line 1350)
        # Getting the type of 'outtypes' (line 1350)
        outtypes_508133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 64), 'outtypes', False)
        # Getting the type of 'c' (line 1350)
        c_508134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 74), 'c', False)
        # Processing the call keyword arguments (line 1350)
        kwargs_508135 = {}
        # Getting the type of 'self' (line 1350)
        self_508131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 42), 'self', False)
        # Obtaining the member '_get_outcallvars' of a type (line 1350)
        _get_outcallvars_508132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 42), self_508131, '_get_outcallvars')
        # Calling _get_outcallvars(args, kwargs) (line 1350)
        _get_outcallvars_call_result_508136 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 42), _get_outcallvars_508132, *[outtypes_508133, c_508134], **kwargs_508135)
        
        # Obtaining the member '__getitem__' of a type (line 1350)
        getitem___508137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1350, 12), _get_outcallvars_call_result_508136, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1350)
        subscript_call_result_508138 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 12), getitem___508137, int_508130)
        
        # Assigning a type to the variable 'tuple_var_assignment_504008' (line 1350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1350, 12), 'tuple_var_assignment_504008', subscript_call_result_508138)
        
        # Assigning a Name to a Name (line 1350):
        # Getting the type of 'tuple_var_assignment_504006' (line 1350)
        tuple_var_assignment_504006_508139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 12), 'tuple_var_assignment_504006')
        # Assigning a type to the variable 'outcallvars' (line 1350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1350, 12), 'outcallvars', tuple_var_assignment_504006_508139)
        
        # Assigning a Name to a Name (line 1350):
        # Getting the type of 'tuple_var_assignment_504007' (line 1350)
        tuple_var_assignment_504007_508140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 12), 'tuple_var_assignment_504007')
        # Assigning a type to the variable 'tmpvars' (line 1350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1350, 25), 'tmpvars', tuple_var_assignment_504007_508140)
        
        # Assigning a Name to a Name (line 1350):
        # Getting the type of 'tuple_var_assignment_504008' (line 1350)
        tuple_var_assignment_504008_508141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 12), 'tuple_var_assignment_504008')
        # Assigning a type to the variable 'casts' (line 1350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1350, 34), 'casts', tuple_var_assignment_504008_508141)
        
        # Call to extend(...): (line 1351)
        # Processing the call arguments (line 1351)
        # Getting the type of 'outcallvars' (line 1351)
        outcallvars_508144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 28), 'outcallvars', False)
        # Processing the call keyword arguments (line 1351)
        kwargs_508145 = {}
        # Getting the type of 'callvars' (line 1351)
        callvars_508142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 12), 'callvars', False)
        # Obtaining the member 'extend' of a type (line 1351)
        extend_508143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1351, 12), callvars_508142, 'extend')
        # Calling extend(args, kwargs) (line 1351)
        extend_call_result_508146 = invoke(stypy.reporting.localization.Localization(__file__, 1351, 12), extend_508143, *[outcallvars_508144], **kwargs_508145)
        
        
        # Call to update(...): (line 1352)
        # Processing the call arguments (line 1352)
        # Getting the type of 'tmpvars' (line 1352)
        tmpvars_508149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 31), 'tmpvars', False)
        # Processing the call keyword arguments (line 1352)
        kwargs_508150 = {}
        # Getting the type of 'all_tmpvars' (line 1352)
        all_tmpvars_508147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 12), 'all_tmpvars', False)
        # Obtaining the member 'update' of a type (line 1352)
        update_508148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1352, 12), all_tmpvars_508147, 'update')
        # Calling update(args, kwargs) (line 1352)
        update_call_result_508151 = invoke(stypy.reporting.localization.Localization(__file__, 1352, 12), update_508148, *[tmpvars_508149], **kwargs_508150)
        
        
        # Assigning a Call to a Name (line 1353):
        
        # Assigning a Call to a Name (line 1353):
        
        # Call to format(...): (line 1353)
        # Processing the call arguments (line 1353)
        # Getting the type of 'func_name' (line 1353)
        func_name_508154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1353, 35), 'func_name', False)
        
        # Call to join(...): (line 1353)
        # Processing the call arguments (line 1353)
        # Getting the type of 'callvars' (line 1353)
        callvars_508157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1353, 56), 'callvars', False)
        # Processing the call keyword arguments (line 1353)
        kwargs_508158 = {}
        str_508155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1353, 46), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1353)
        join_508156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1353, 46), str_508155, 'join')
        # Calling join(args, kwargs) (line 1353)
        join_call_result_508159 = invoke(stypy.reporting.localization.Localization(__file__, 1353, 46), join_508156, *[callvars_508157], **kwargs_508158)
        
        # Processing the call keyword arguments (line 1353)
        kwargs_508160 = {}
        str_508152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1353, 19), 'str', '{}({})')
        # Obtaining the member 'format' of a type (line 1353)
        format_508153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1353, 19), str_508152, 'format')
        # Calling format(args, kwargs) (line 1353)
        format_call_result_508161 = invoke(stypy.reporting.localization.Localization(__file__, 1353, 19), format_508153, *[func_name_508154, join_call_result_508159], **kwargs_508160)
        
        # Assigning a type to the variable 'call' (line 1353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1353, 12), 'call', format_call_result_508161)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'c' (line 1354)
        c_508162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 15), 'c')
        
        # Getting the type of 'rettype' (line 1354)
        rettype_508163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 21), 'rettype')
        str_508164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 32), 'str', 'double complex')
        # Applying the binary operator '==' (line 1354)
        result_eq_508165 = python_operator(stypy.reporting.localization.Localization(__file__, 1354, 21), '==', rettype_508163, str_508164)
        
        # Applying the binary operator 'and' (line 1354)
        result_and_keyword_508166 = python_operator(stypy.reporting.localization.Localization(__file__, 1354, 15), 'and', c_508162, result_eq_508165)
        
        # Testing the type of an if condition (line 1354)
        if_condition_508167 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1354, 12), result_and_keyword_508166)
        # Assigning a type to the variable 'if_condition_508167' (line 1354)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1354, 12), 'if_condition_508167', if_condition_508167)
        # SSA begins for if statement (line 1354)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1355):
        
        # Assigning a Call to a Name (line 1355):
        
        # Call to double_complex_from_npy_cdouble(...): (line 1355)
        # Processing the call arguments (line 1355)
        # Getting the type of 'call' (line 1355)
        call_508169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 55), 'call', False)
        # Processing the call keyword arguments (line 1355)
        kwargs_508170 = {}
        # Getting the type of 'double_complex_from_npy_cdouble' (line 1355)
        double_complex_from_npy_cdouble_508168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 23), 'double_complex_from_npy_cdouble', False)
        # Calling double_complex_from_npy_cdouble(args, kwargs) (line 1355)
        double_complex_from_npy_cdouble_call_result_508171 = invoke(stypy.reporting.localization.Localization(__file__, 1355, 23), double_complex_from_npy_cdouble_508168, *[call_508169], **kwargs_508170)
        
        # Assigning a type to the variable 'call' (line 1355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1355, 16), 'call', double_complex_from_npy_cdouble_call_result_508171)
        # SSA join for if statement (line 1354)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1356):
        
        # Assigning a Call to a Name (line 1356):
        
        # Call to format(...): (line 1356)
        # Processing the call arguments (line 1356)
        
        # Obtaining the type of the subscript
        int_508174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 52), 'int')
        # Getting the type of 'self' (line 1356)
        self_508175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 39), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1356)
        outvars_508176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1356, 39), self_508175, 'outvars')
        # Obtaining the member '__getitem__' of a type (line 1356)
        getitem___508177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1356, 39), outvars_508176, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1356)
        subscript_call_result_508178 = invoke(stypy.reporting.localization.Localization(__file__, 1356, 39), getitem___508177, int_508174)
        
        # Getting the type of 'call' (line 1356)
        call_508179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 56), 'call', False)
        # Processing the call keyword arguments (line 1356)
        kwargs_508180 = {}
        str_508172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 19), 'str', '{}[0] = {}')
        # Obtaining the member 'format' of a type (line 1356)
        format_508173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1356, 19), str_508172, 'format')
        # Calling format(args, kwargs) (line 1356)
        format_call_result_508181 = invoke(stypy.reporting.localization.Localization(__file__, 1356, 19), format_508173, *[subscript_call_result_508178, call_508179], **kwargs_508180)
        
        # Assigning a type to the variable 'call' (line 1356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1356, 12), 'call', format_call_result_508181)
        
        # Call to append(...): (line 1357)
        # Processing the call arguments (line 1357)
        # Getting the type of 'sp' (line 1357)
        sp_508184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 24), 'sp', False)
        # Getting the type of 'call' (line 1357)
        call_508185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 29), 'call', False)
        # Applying the binary operator '+' (line 1357)
        result_add_508186 = python_operator(stypy.reporting.localization.Localization(__file__, 1357, 24), '+', sp_508184, call_508185)
        
        # Processing the call keyword arguments (line 1357)
        kwargs_508187 = {}
        # Getting the type of 'body' (line 1357)
        body_508182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 12), 'body', False)
        # Obtaining the member 'append' of a type (line 1357)
        append_508183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1357, 12), body_508182, 'append')
        # Calling append(args, kwargs) (line 1357)
        append_call_result_508188 = invoke(stypy.reporting.localization.Localization(__file__, 1357, 12), append_508183, *[result_add_508186], **kwargs_508187)
        
        
        # Call to extend(...): (line 1358)
        # Processing the call arguments (line 1358)
        
        # Call to map(...): (line 1358)
        # Processing the call arguments (line 1358)

        @norecursion
        def _stypy_temp_lambda_307(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_307'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_307', 1358, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_307.stypy_localization = localization
            _stypy_temp_lambda_307.stypy_type_of_self = None
            _stypy_temp_lambda_307.stypy_type_store = module_type_store
            _stypy_temp_lambda_307.stypy_function_name = '_stypy_temp_lambda_307'
            _stypy_temp_lambda_307.stypy_param_names_list = ['x']
            _stypy_temp_lambda_307.stypy_varargs_param_name = None
            _stypy_temp_lambda_307.stypy_kwargs_param_name = None
            _stypy_temp_lambda_307.stypy_call_defaults = defaults
            _stypy_temp_lambda_307.stypy_call_varargs = varargs
            _stypy_temp_lambda_307.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_307', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_307', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'sp' (line 1358)
            sp_508192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 38), 'sp', False)
            # Getting the type of 'x' (line 1358)
            x_508193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 43), 'x', False)
            # Applying the binary operator '+' (line 1358)
            result_add_508194 = python_operator(stypy.reporting.localization.Localization(__file__, 1358, 38), '+', sp_508192, x_508193)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1358)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1358, 28), 'stypy_return_type', result_add_508194)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_307' in the type store
            # Getting the type of 'stypy_return_type' (line 1358)
            stypy_return_type_508195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_508195)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_307'
            return stypy_return_type_508195

        # Assigning a type to the variable '_stypy_temp_lambda_307' (line 1358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1358, 28), '_stypy_temp_lambda_307', _stypy_temp_lambda_307)
        # Getting the type of '_stypy_temp_lambda_307' (line 1358)
        _stypy_temp_lambda_307_508196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 28), '_stypy_temp_lambda_307')
        # Getting the type of 'casts' (line 1358)
        casts_508197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 46), 'casts', False)
        # Processing the call keyword arguments (line 1358)
        kwargs_508198 = {}
        # Getting the type of 'map' (line 1358)
        map_508191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 24), 'map', False)
        # Calling map(args, kwargs) (line 1358)
        map_call_result_508199 = invoke(stypy.reporting.localization.Localization(__file__, 1358, 24), map_508191, *[_stypy_temp_lambda_307_508196, casts_508197], **kwargs_508198)
        
        # Processing the call keyword arguments (line 1358)
        kwargs_508200 = {}
        # Getting the type of 'body' (line 1358)
        body_508189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 12), 'body', False)
        # Obtaining the member 'extend' of a type (line 1358)
        extend_508190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1358, 12), body_508189, 'extend')
        # Calling extend(args, kwargs) (line 1358)
        extend_call_result_508201 = invoke(stypy.reporting.localization.Localization(__file__, 1358, 12), extend_508190, *[map_call_result_508199], **kwargs_508200)
        
        
        # Assigning a Call to a Name (line 1359):
        
        # Assigning a Call to a Name (line 1359):
        
        # Call to format(...): (line 1359)
        # Processing the call arguments (line 1359)
        # Getting the type of 'incodes' (line 1359)
        incodes_508204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 36), 'incodes', False)
        # Getting the type of 'outcodes' (line 1359)
        outcodes_508205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 45), 'outcodes', False)
        # Getting the type of 'retcode' (line 1359)
        retcode_508206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 56), 'retcode', False)
        # Applying the binary operator '+' (line 1359)
        result_add_508207 = python_operator(stypy.reporting.localization.Localization(__file__, 1359, 45), '+', outcodes_508205, retcode_508206)
        
        # Processing the call keyword arguments (line 1359)
        kwargs_508208 = {}
        str_508202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 18), 'str', '{}*{}->v')
        # Obtaining the member 'format' of a type (line 1359)
        format_508203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1359, 18), str_508202, 'format')
        # Calling format(args, kwargs) (line 1359)
        format_call_result_508209 = invoke(stypy.reporting.localization.Localization(__file__, 1359, 18), format_508203, *[incodes_508204, result_add_508207], **kwargs_508208)
        
        # Assigning a type to the variable 'sig' (line 1359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1359, 12), 'sig', format_call_result_508209)
        
        # Call to append(...): (line 1360)
        # Processing the call arguments (line 1360)
        # Getting the type of 'sig' (line 1360)
        sig_508212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1360, 25), 'sig', False)
        # Processing the call keyword arguments (line 1360)
        kwargs_508213 = {}
        # Getting the type of 'specs' (line 1360)
        specs_508210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1360, 12), 'specs', False)
        # Obtaining the member 'append' of a type (line 1360)
        append_508211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1360, 12), specs_508210, 'append')
        # Calling append(args, kwargs) (line 1360)
        append_call_result_508214 = invoke(stypy.reporting.localization.Localization(__file__, 1360, 12), append_508211, *[sig_508212], **kwargs_508213)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 1362)
        # Processing the call arguments (line 1362)
        # Getting the type of 'specs' (line 1362)
        specs_508216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 15), 'specs', False)
        # Processing the call keyword arguments (line 1362)
        kwargs_508217 = {}
        # Getting the type of 'len' (line 1362)
        len_508215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 11), 'len', False)
        # Calling len(args, kwargs) (line 1362)
        len_call_result_508218 = invoke(stypy.reporting.localization.Localization(__file__, 1362, 11), len_508215, *[specs_508216], **kwargs_508217)
        
        int_508219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 24), 'int')
        # Applying the binary operator '>' (line 1362)
        result_gt_508220 = python_operator(stypy.reporting.localization.Localization(__file__, 1362, 11), '>', len_call_result_508218, int_508219)
        
        # Testing the type of an if condition (line 1362)
        if_condition_508221 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1362, 8), result_gt_508220)
        # Assigning a type to the variable 'if_condition_508221' (line 1362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1362, 8), 'if_condition_508221', if_condition_508221)
        # SSA begins for if statement (line 1362)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1363):
        
        # Assigning a Call to a Name (line 1363):
        
        # Call to _get_nan_decs(...): (line 1363)
        # Processing the call keyword arguments (line 1363)
        kwargs_508224 = {}
        # Getting the type of 'self' (line 1363)
        self_508222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 20), 'self', False)
        # Obtaining the member '_get_nan_decs' of a type (line 1363)
        _get_nan_decs_508223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1363, 20), self_508222, '_get_nan_decs')
        # Calling _get_nan_decs(args, kwargs) (line 1363)
        _get_nan_decs_call_result_508225 = invoke(stypy.reporting.localization.Localization(__file__, 1363, 20), _get_nan_decs_508223, *[], **kwargs_508224)
        
        # Assigning a type to the variable 'lines' (line 1363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1363, 12), 'lines', _get_nan_decs_call_result_508225)
        
        # Call to extend(...): (line 1364)
        # Processing the call arguments (line 1364)
        # Getting the type of 'lines' (line 1364)
        lines_508228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 24), 'lines', False)
        # Processing the call keyword arguments (line 1364)
        kwargs_508229 = {}
        # Getting the type of 'body' (line 1364)
        body_508226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 12), 'body', False)
        # Obtaining the member 'extend' of a type (line 1364)
        extend_508227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1364, 12), body_508226, 'extend')
        # Calling extend(args, kwargs) (line 1364)
        extend_call_result_508230 = invoke(stypy.reporting.localization.Localization(__file__, 1364, 12), extend_508227, *[lines_508228], **kwargs_508229)
        
        # SSA join for if statement (line 1362)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Tuple to a Tuple (line 1367):
        
        # Assigning a List to a Name (line 1367):
        
        # Obtaining an instance of the builtin type 'list' (line 1367)
        list_508231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1367)
        
        # Assigning a type to the variable 'tuple_assignment_504009' (line 1367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1367, 8), 'tuple_assignment_504009', list_508231)
        
        # Assigning a List to a Name (line 1367):
        
        # Obtaining an instance of the builtin type 'list' (line 1367)
        list_508232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1367)
        
        # Assigning a type to the variable 'tuple_assignment_504010' (line 1367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1367, 8), 'tuple_assignment_504010', list_508232)
        
        # Assigning a Name to a Name (line 1367):
        # Getting the type of 'tuple_assignment_504009' (line 1367)
        tuple_assignment_504009_508233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 8), 'tuple_assignment_504009')
        # Assigning a type to the variable 'callvars' (line 1367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1367, 8), 'callvars', tuple_assignment_504009_508233)
        
        # Assigning a Name to a Name (line 1367):
        # Getting the type of 'tuple_assignment_504010' (line 1367)
        tuple_assignment_504010_508234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 8), 'tuple_assignment_504010')
        # Assigning a type to the variable 'head' (line 1367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1367, 18), 'head', tuple_assignment_504010_508234)
        
        
        # Call to zip(...): (line 1368)
        # Processing the call arguments (line 1368)
        # Getting the type of 'self' (line 1368)
        self_508236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 38), 'self', False)
        # Obtaining the member 'invars' of a type (line 1368)
        invars_508237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1368, 38), self_508236, 'invars')
        # Getting the type of 'self' (line 1368)
        self_508238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 51), 'self', False)
        # Obtaining the member 'intypes' of a type (line 1368)
        intypes_508239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1368, 51), self_508238, 'intypes')
        # Processing the call keyword arguments (line 1368)
        kwargs_508240 = {}
        # Getting the type of 'zip' (line 1368)
        zip_508235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 34), 'zip', False)
        # Calling zip(args, kwargs) (line 1368)
        zip_call_result_508241 = invoke(stypy.reporting.localization.Localization(__file__, 1368, 34), zip_508235, *[invars_508237, intypes_508239], **kwargs_508240)
        
        # Testing the type of a for loop iterable (line 1368)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1368, 8), zip_call_result_508241)
        # Getting the type of the for loop variable (line 1368)
        for_loop_var_508242 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1368, 8), zip_call_result_508241)
        # Assigning a type to the variable 'invar' (line 1368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1368, 8), 'invar', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 8), for_loop_var_508242))
        # Assigning a type to the variable 'intype' (line 1368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1368, 8), 'intype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 8), for_loop_var_508242))
        # Assigning a type to the variable '_' (line 1368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1368, 8), '_', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 8), for_loop_var_508242))
        # SSA begins for a for statement (line 1368)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 1369)
        # Processing the call arguments (line 1369)
        
        # Call to format(...): (line 1369)
        # Processing the call arguments (line 1369)
        # Getting the type of 'intype' (line 1369)
        intype_508247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 43), 'intype', False)
        # Getting the type of 'invar' (line 1369)
        invar_508248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 51), 'invar', False)
        # Processing the call keyword arguments (line 1369)
        kwargs_508249 = {}
        str_508245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1369, 28), 'str', '{} {}')
        # Obtaining the member 'format' of a type (line 1369)
        format_508246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1369, 28), str_508245, 'format')
        # Calling format(args, kwargs) (line 1369)
        format_call_result_508250 = invoke(stypy.reporting.localization.Localization(__file__, 1369, 28), format_508246, *[intype_508247, invar_508248], **kwargs_508249)
        
        # Processing the call keyword arguments (line 1369)
        kwargs_508251 = {}
        # Getting the type of 'callvars' (line 1369)
        callvars_508243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 12), 'callvars', False)
        # Obtaining the member 'append' of a type (line 1369)
        append_508244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1369, 12), callvars_508243, 'append')
        # Calling append(args, kwargs) (line 1369)
        append_call_result_508252 = invoke(stypy.reporting.localization.Localization(__file__, 1369, 12), append_508244, *[format_call_result_508250], **kwargs_508251)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to zip(...): (line 1370)
        # Processing the call arguments (line 1370)
        # Getting the type of 'self' (line 1370)
        self_508254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 40), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1370)
        outvars_508255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 40), self_508254, 'outvars')
        # Getting the type of 'self' (line 1370)
        self_508256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 54), 'self', False)
        # Obtaining the member 'outtypes' of a type (line 1370)
        outtypes_508257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 54), self_508256, 'outtypes')
        # Processing the call keyword arguments (line 1370)
        kwargs_508258 = {}
        # Getting the type of 'zip' (line 1370)
        zip_508253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 36), 'zip', False)
        # Calling zip(args, kwargs) (line 1370)
        zip_call_result_508259 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 36), zip_508253, *[outvars_508255, outtypes_508257], **kwargs_508258)
        
        # Testing the type of a for loop iterable (line 1370)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1370, 8), zip_call_result_508259)
        # Getting the type of the for loop variable (line 1370)
        for_loop_var_508260 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1370, 8), zip_call_result_508259)
        # Assigning a type to the variable 'outvar' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'outvar', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 8), for_loop_var_508260))
        # Assigning a type to the variable 'outtype' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'outtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 8), for_loop_var_508260))
        # Assigning a type to the variable '_' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), '_', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 8), for_loop_var_508260))
        # SSA begins for a for statement (line 1370)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 1371)
        # Processing the call arguments (line 1371)
        
        # Call to format(...): (line 1371)
        # Processing the call arguments (line 1371)
        # Getting the type of 'outtype' (line 1371)
        outtype_508265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 44), 'outtype', False)
        # Getting the type of 'outvar' (line 1371)
        outvar_508266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 53), 'outvar', False)
        # Processing the call keyword arguments (line 1371)
        kwargs_508267 = {}
        str_508263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1371, 28), 'str', '{} *{}')
        # Obtaining the member 'format' of a type (line 1371)
        format_508264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1371, 28), str_508263, 'format')
        # Calling format(args, kwargs) (line 1371)
        format_call_result_508268 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 28), format_508264, *[outtype_508265, outvar_508266], **kwargs_508267)
        
        # Processing the call keyword arguments (line 1371)
        kwargs_508269 = {}
        # Getting the type of 'callvars' (line 1371)
        callvars_508261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 12), 'callvars', False)
        # Obtaining the member 'append' of a type (line 1371)
        append_508262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1371, 12), callvars_508261, 'append')
        # Calling append(args, kwargs) (line 1371)
        append_call_result_508270 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 12), append_508262, *[format_call_result_508268], **kwargs_508269)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1372):
        
        # Assigning a Call to a Name (line 1372):
        
        # Call to format(...): (line 1372)
        # Processing the call arguments (line 1372)
        # Getting the type of 'self' (line 1372)
        self_508273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 46), 'self', False)
        # Obtaining the member 'name' of a type (line 1372)
        name_508274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1372, 46), self_508273, 'name')
        
        # Call to join(...): (line 1372)
        # Processing the call arguments (line 1372)
        # Getting the type of 'callvars' (line 1372)
        callvars_508277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 67), 'callvars', False)
        # Processing the call keyword arguments (line 1372)
        kwargs_508278 = {}
        str_508275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 57), 'str', ', ')
        # Obtaining the member 'join' of a type (line 1372)
        join_508276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1372, 57), str_508275, 'join')
        # Calling join(args, kwargs) (line 1372)
        join_call_result_508279 = invoke(stypy.reporting.localization.Localization(__file__, 1372, 57), join_508276, *[callvars_508277], **kwargs_508278)
        
        # Processing the call keyword arguments (line 1372)
        kwargs_508280 = {}
        str_508271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 14), 'str', 'cdef void {}({}) nogil')
        # Obtaining the member 'format' of a type (line 1372)
        format_508272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1372, 14), str_508271, 'format')
        # Calling format(args, kwargs) (line 1372)
        format_call_result_508281 = invoke(stypy.reporting.localization.Localization(__file__, 1372, 14), format_508272, *[name_508274, join_call_result_508279], **kwargs_508280)
        
        # Assigning a type to the variable 'dec' (line 1372)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1372, 8), 'dec', format_call_result_508281)
        
        # Call to append(...): (line 1373)
        # Processing the call arguments (line 1373)
        # Getting the type of 'dec' (line 1373)
        dec_508284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 20), 'dec', False)
        str_508285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 26), 'str', ':')
        # Applying the binary operator '+' (line 1373)
        result_add_508286 = python_operator(stypy.reporting.localization.Localization(__file__, 1373, 20), '+', dec_508284, str_508285)
        
        # Processing the call keyword arguments (line 1373)
        kwargs_508287 = {}
        # Getting the type of 'head' (line 1373)
        head_508282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 8), 'head', False)
        # Obtaining the member 'append' of a type (line 1373)
        append_508283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1373, 8), head_508282, 'append')
        # Calling append(args, kwargs) (line 1373)
        append_call_result_508288 = invoke(stypy.reporting.localization.Localization(__file__, 1373, 8), append_508283, *[result_add_508286], **kwargs_508287)
        
        
        # Call to append(...): (line 1374)
        # Processing the call arguments (line 1374)
        # Getting the type of 'tab' (line 1374)
        tab_508291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 20), 'tab', False)
        
        # Call to format(...): (line 1374)
        # Processing the call arguments (line 1374)
        # Getting the type of 'self' (line 1374)
        self_508294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 44), 'self', False)
        # Obtaining the member 'doc' of a type (line 1374)
        doc_508295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1374, 44), self_508294, 'doc')
        # Processing the call keyword arguments (line 1374)
        kwargs_508296 = {}
        str_508292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 26), 'str', '"""{}"""')
        # Obtaining the member 'format' of a type (line 1374)
        format_508293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1374, 26), str_508292, 'format')
        # Calling format(args, kwargs) (line 1374)
        format_call_result_508297 = invoke(stypy.reporting.localization.Localization(__file__, 1374, 26), format_508293, *[doc_508295], **kwargs_508296)
        
        # Applying the binary operator '+' (line 1374)
        result_add_508298 = python_operator(stypy.reporting.localization.Localization(__file__, 1374, 20), '+', tab_508291, format_call_result_508297)
        
        # Processing the call keyword arguments (line 1374)
        kwargs_508299 = {}
        # Getting the type of 'head' (line 1374)
        head_508289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 8), 'head', False)
        # Obtaining the member 'append' of a type (line 1374)
        append_508290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1374, 8), head_508289, 'append')
        # Calling append(args, kwargs) (line 1374)
        append_call_result_508300 = invoke(stypy.reporting.localization.Localization(__file__, 1374, 8), append_508290, *[result_add_508298], **kwargs_508299)
        
        
        # Call to extend(...): (line 1375)
        # Processing the call arguments (line 1375)
        
        # Call to _get_tmp_decs(...): (line 1375)
        # Processing the call arguments (line 1375)
        # Getting the type of 'all_tmpvars' (line 1375)
        all_tmpvars_508305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 39), 'all_tmpvars', False)
        # Processing the call keyword arguments (line 1375)
        kwargs_508306 = {}
        # Getting the type of 'self' (line 1375)
        self_508303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 20), 'self', False)
        # Obtaining the member '_get_tmp_decs' of a type (line 1375)
        _get_tmp_decs_508304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1375, 20), self_508303, '_get_tmp_decs')
        # Calling _get_tmp_decs(args, kwargs) (line 1375)
        _get_tmp_decs_call_result_508307 = invoke(stypy.reporting.localization.Localization(__file__, 1375, 20), _get_tmp_decs_508304, *[all_tmpvars_508305], **kwargs_508306)
        
        # Processing the call keyword arguments (line 1375)
        kwargs_508308 = {}
        # Getting the type of 'head' (line 1375)
        head_508301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 8), 'head', False)
        # Obtaining the member 'extend' of a type (line 1375)
        extend_508302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1375, 8), head_508301, 'extend')
        # Calling extend(args, kwargs) (line 1375)
        extend_call_result_508309 = invoke(stypy.reporting.localization.Localization(__file__, 1375, 8), extend_508302, *[_get_tmp_decs_call_result_508307], **kwargs_508308)
        
        
        # Assigning a Call to a Name (line 1377):
        
        # Assigning a Call to a Name (line 1377):
        
        # Call to join(...): (line 1377)
        # Processing the call arguments (line 1377)
        # Getting the type of 'head' (line 1377)
        head_508312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1377, 24), 'head', False)
        # Getting the type of 'body' (line 1377)
        body_508313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1377, 31), 'body', False)
        # Applying the binary operator '+' (line 1377)
        result_add_508314 = python_operator(stypy.reporting.localization.Localization(__file__, 1377, 24), '+', head_508312, body_508313)
        
        # Processing the call keyword arguments (line 1377)
        kwargs_508315 = {}
        str_508310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1377, 14), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1377)
        join_508311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1377, 14), str_508310, 'join')
        # Calling join(args, kwargs) (line 1377)
        join_call_result_508316 = invoke(stypy.reporting.localization.Localization(__file__, 1377, 14), join_508311, *[result_add_508314], **kwargs_508315)
        
        # Assigning a type to the variable 'src' (line 1377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1377, 8), 'src', join_call_result_508316)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1378)
        tuple_508317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1378)
        # Adding element type (line 1378)
        # Getting the type of 'dec' (line 1378)
        dec_508318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 15), 'dec')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1378, 15), tuple_508317, dec_508318)
        # Adding element type (line 1378)
        # Getting the type of 'src' (line 1378)
        src_508319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 20), 'src')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1378, 15), tuple_508317, src_508319)
        # Adding element type (line 1378)
        # Getting the type of 'specs' (line 1378)
        specs_508320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 25), 'specs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1378, 15), tuple_508317, specs_508320)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1378)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1378, 8), 'stypy_return_type', tuple_508317)
        
        # ################# End of '_generate_from_outargs_and_return(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_generate_from_outargs_and_return' in the type store
        # Getting the type of 'stypy_return_type' (line 1339)
        stypy_return_type_508321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1339, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_508321)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_generate_from_outargs_and_return'
        return stypy_return_type_508321


    @norecursion
    def generate(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'generate'
        module_type_store = module_type_store.open_function_context('generate', 1380, 4, False)
        # Assigning a type to the variable 'self' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        FusedFunc.generate.__dict__.__setitem__('stypy_localization', localization)
        FusedFunc.generate.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        FusedFunc.generate.__dict__.__setitem__('stypy_type_store', module_type_store)
        FusedFunc.generate.__dict__.__setitem__('stypy_function_name', 'FusedFunc.generate')
        FusedFunc.generate.__dict__.__setitem__('stypy_param_names_list', [])
        FusedFunc.generate.__dict__.__setitem__('stypy_varargs_param_name', None)
        FusedFunc.generate.__dict__.__setitem__('stypy_kwargs_param_name', None)
        FusedFunc.generate.__dict__.__setitem__('stypy_call_defaults', defaults)
        FusedFunc.generate.__dict__.__setitem__('stypy_call_varargs', varargs)
        FusedFunc.generate.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        FusedFunc.generate.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'FusedFunc.generate', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'generate', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'generate(...)' code ##################

        
        # Assigning a Subscript to a Tuple (line 1381):
        
        # Assigning a Subscript to a Name (line 1381):
        
        # Obtaining the type of the subscript
        int_508322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 8), 'int')
        
        # Obtaining the type of the subscript
        int_508323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 53), 'int')
        # Getting the type of 'self' (line 1381)
        self_508324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 37), 'self')
        # Obtaining the member 'signatures' of a type (line 1381)
        signatures_508325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), self_508324, 'signatures')
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), signatures_508325, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508327 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 37), getitem___508326, int_508323)
        
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 8), subscript_call_result_508327, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508329 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 8), getitem___508328, int_508322)
        
        # Assigning a type to the variable 'tuple_var_assignment_504011' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504011', subscript_call_result_508329)
        
        # Assigning a Subscript to a Name (line 1381):
        
        # Obtaining the type of the subscript
        int_508330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 8), 'int')
        
        # Obtaining the type of the subscript
        int_508331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 53), 'int')
        # Getting the type of 'self' (line 1381)
        self_508332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 37), 'self')
        # Obtaining the member 'signatures' of a type (line 1381)
        signatures_508333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), self_508332, 'signatures')
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), signatures_508333, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508335 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 37), getitem___508334, int_508331)
        
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 8), subscript_call_result_508335, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508337 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 8), getitem___508336, int_508330)
        
        # Assigning a type to the variable 'tuple_var_assignment_504012' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504012', subscript_call_result_508337)
        
        # Assigning a Subscript to a Name (line 1381):
        
        # Obtaining the type of the subscript
        int_508338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 8), 'int')
        
        # Obtaining the type of the subscript
        int_508339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 53), 'int')
        # Getting the type of 'self' (line 1381)
        self_508340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 37), 'self')
        # Obtaining the member 'signatures' of a type (line 1381)
        signatures_508341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), self_508340, 'signatures')
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), signatures_508341, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508343 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 37), getitem___508342, int_508339)
        
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 8), subscript_call_result_508343, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508345 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 8), getitem___508344, int_508338)
        
        # Assigning a type to the variable 'tuple_var_assignment_504013' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504013', subscript_call_result_508345)
        
        # Assigning a Subscript to a Name (line 1381):
        
        # Obtaining the type of the subscript
        int_508346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 8), 'int')
        
        # Obtaining the type of the subscript
        int_508347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 53), 'int')
        # Getting the type of 'self' (line 1381)
        self_508348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 37), 'self')
        # Obtaining the member 'signatures' of a type (line 1381)
        signatures_508349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), self_508348, 'signatures')
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), signatures_508349, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508351 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 37), getitem___508350, int_508347)
        
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 8), subscript_call_result_508351, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508353 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 8), getitem___508352, int_508346)
        
        # Assigning a type to the variable 'tuple_var_assignment_504014' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504014', subscript_call_result_508353)
        
        # Assigning a Subscript to a Name (line 1381):
        
        # Obtaining the type of the subscript
        int_508354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 8), 'int')
        
        # Obtaining the type of the subscript
        int_508355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1381, 53), 'int')
        # Getting the type of 'self' (line 1381)
        self_508356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 37), 'self')
        # Obtaining the member 'signatures' of a type (line 1381)
        signatures_508357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), self_508356, 'signatures')
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 37), signatures_508357, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508359 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 37), getitem___508358, int_508355)
        
        # Obtaining the member '__getitem__' of a type (line 1381)
        getitem___508360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1381, 8), subscript_call_result_508359, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1381)
        subscript_call_result_508361 = invoke(stypy.reporting.localization.Localization(__file__, 1381, 8), getitem___508360, int_508354)
        
        # Assigning a type to the variable 'tuple_var_assignment_504015' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504015', subscript_call_result_508361)
        
        # Assigning a Name to a Name (line 1381):
        # Getting the type of 'tuple_var_assignment_504011' (line 1381)
        tuple_var_assignment_504011_508362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504011')
        # Assigning a type to the variable '_' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), '_', tuple_var_assignment_504011_508362)
        
        # Assigning a Name to a Name (line 1381):
        # Getting the type of 'tuple_var_assignment_504012' (line 1381)
        tuple_var_assignment_504012_508363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504012')
        # Assigning a type to the variable '_' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 11), '_', tuple_var_assignment_504012_508363)
        
        # Assigning a Name to a Name (line 1381):
        # Getting the type of 'tuple_var_assignment_504013' (line 1381)
        tuple_var_assignment_504013_508364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504013')
        # Assigning a type to the variable 'outcodes' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 14), 'outcodes', tuple_var_assignment_504013_508364)
        
        # Assigning a Name to a Name (line 1381):
        # Getting the type of 'tuple_var_assignment_504014' (line 1381)
        tuple_var_assignment_504014_508365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504014')
        # Assigning a type to the variable 'retcode' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 24), 'retcode', tuple_var_assignment_504014_508365)
        
        # Assigning a Name to a Name (line 1381):
        # Getting the type of 'tuple_var_assignment_504015' (line 1381)
        tuple_var_assignment_504015_508366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 8), 'tuple_var_assignment_504015')
        # Assigning a type to the variable '_' (line 1381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 33), '_', tuple_var_assignment_504015_508366)
        
        # Assigning a Call to a Name (line 1382):
        
        # Assigning a Call to a Name (line 1382):
        
        # Call to sub(...): (line 1382)
        # Processing the call arguments (line 1382)
        str_508369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1382, 25), 'str', '\\*.*')
        str_508370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1382, 34), 'str', '')
        # Getting the type of 'retcode' (line 1382)
        retcode_508371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1382, 38), 'retcode', False)
        # Processing the call keyword arguments (line 1382)
        kwargs_508372 = {}
        # Getting the type of 're' (line 1382)
        re_508367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1382, 18), 're', False)
        # Obtaining the member 'sub' of a type (line 1382)
        sub_508368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1382, 18), re_508367, 'sub')
        # Calling sub(args, kwargs) (line 1382)
        sub_call_result_508373 = invoke(stypy.reporting.localization.Localization(__file__, 1382, 18), sub_508368, *[str_508369, str_508370, retcode_508371], **kwargs_508372)
        
        # Assigning a type to the variable 'retcode' (line 1382)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1382, 8), 'retcode', sub_call_result_508373)
        
        
        # Getting the type of 'retcode' (line 1383)
        retcode_508374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 15), 'retcode')
        # Applying the 'not' unary operator (line 1383)
        result_not__508375 = python_operator(stypy.reporting.localization.Localization(__file__, 1383, 11), 'not', retcode_508374)
        
        # Testing the type of an if condition (line 1383)
        if_condition_508376 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1383, 8), result_not__508375)
        # Assigning a type to the variable 'if_condition_508376' (line 1383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1383, 8), 'if_condition_508376', if_condition_508376)
        # SSA begins for if statement (line 1383)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 1384):
        
        # Assigning a Str to a Name (line 1384):
        str_508377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1384, 22), 'str', 'v')
        # Assigning a type to the variable 'retcode' (line 1384)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1384, 12), 'retcode', str_508377)
        # SSA join for if statement (line 1383)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 1386)
        # Processing the call arguments (line 1386)
        # Getting the type of 'outcodes' (line 1386)
        outcodes_508379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 15), 'outcodes', False)
        # Processing the call keyword arguments (line 1386)
        kwargs_508380 = {}
        # Getting the type of 'len' (line 1386)
        len_508378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 11), 'len', False)
        # Calling len(args, kwargs) (line 1386)
        len_call_result_508381 = invoke(stypy.reporting.localization.Localization(__file__, 1386, 11), len_508378, *[outcodes_508379], **kwargs_508380)
        
        int_508382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1386, 28), 'int')
        # Applying the binary operator '==' (line 1386)
        result_eq_508383 = python_operator(stypy.reporting.localization.Localization(__file__, 1386, 11), '==', len_call_result_508381, int_508382)
        
        
        # Getting the type of 'retcode' (line 1386)
        retcode_508384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1386, 34), 'retcode')
        str_508385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1386, 45), 'str', 'v')
        # Applying the binary operator '!=' (line 1386)
        result_ne_508386 = python_operator(stypy.reporting.localization.Localization(__file__, 1386, 34), '!=', retcode_508384, str_508385)
        
        # Applying the binary operator 'and' (line 1386)
        result_and_keyword_508387 = python_operator(stypy.reporting.localization.Localization(__file__, 1386, 11), 'and', result_eq_508383, result_ne_508386)
        
        # Testing the type of an if condition (line 1386)
        if_condition_508388 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1386, 8), result_and_keyword_508387)
        # Assigning a type to the variable 'if_condition_508388' (line 1386)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1386, 8), 'if_condition_508388', if_condition_508388)
        # SSA begins for if statement (line 1386)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 1387):
        
        # Assigning a Subscript to a Name (line 1387):
        
        # Obtaining the type of the subscript
        int_508389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1387, 12), 'int')
        
        # Call to _generate_from_return_and_no_outargs(...): (line 1387)
        # Processing the call keyword arguments (line 1387)
        kwargs_508392 = {}
        # Getting the type of 'self' (line 1387)
        self_508390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 30), 'self', False)
        # Obtaining the member '_generate_from_return_and_no_outargs' of a type (line 1387)
        _generate_from_return_and_no_outargs_508391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1387, 30), self_508390, '_generate_from_return_and_no_outargs')
        # Calling _generate_from_return_and_no_outargs(args, kwargs) (line 1387)
        _generate_from_return_and_no_outargs_call_result_508393 = invoke(stypy.reporting.localization.Localization(__file__, 1387, 30), _generate_from_return_and_no_outargs_508391, *[], **kwargs_508392)
        
        # Obtaining the member '__getitem__' of a type (line 1387)
        getitem___508394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1387, 12), _generate_from_return_and_no_outargs_call_result_508393, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1387)
        subscript_call_result_508395 = invoke(stypy.reporting.localization.Localization(__file__, 1387, 12), getitem___508394, int_508389)
        
        # Assigning a type to the variable 'tuple_var_assignment_504016' (line 1387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1387, 12), 'tuple_var_assignment_504016', subscript_call_result_508395)
        
        # Assigning a Subscript to a Name (line 1387):
        
        # Obtaining the type of the subscript
        int_508396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1387, 12), 'int')
        
        # Call to _generate_from_return_and_no_outargs(...): (line 1387)
        # Processing the call keyword arguments (line 1387)
        kwargs_508399 = {}
        # Getting the type of 'self' (line 1387)
        self_508397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 30), 'self', False)
        # Obtaining the member '_generate_from_return_and_no_outargs' of a type (line 1387)
        _generate_from_return_and_no_outargs_508398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1387, 30), self_508397, '_generate_from_return_and_no_outargs')
        # Calling _generate_from_return_and_no_outargs(args, kwargs) (line 1387)
        _generate_from_return_and_no_outargs_call_result_508400 = invoke(stypy.reporting.localization.Localization(__file__, 1387, 30), _generate_from_return_and_no_outargs_508398, *[], **kwargs_508399)
        
        # Obtaining the member '__getitem__' of a type (line 1387)
        getitem___508401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1387, 12), _generate_from_return_and_no_outargs_call_result_508400, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1387)
        subscript_call_result_508402 = invoke(stypy.reporting.localization.Localization(__file__, 1387, 12), getitem___508401, int_508396)
        
        # Assigning a type to the variable 'tuple_var_assignment_504017' (line 1387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1387, 12), 'tuple_var_assignment_504017', subscript_call_result_508402)
        
        # Assigning a Subscript to a Name (line 1387):
        
        # Obtaining the type of the subscript
        int_508403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1387, 12), 'int')
        
        # Call to _generate_from_return_and_no_outargs(...): (line 1387)
        # Processing the call keyword arguments (line 1387)
        kwargs_508406 = {}
        # Getting the type of 'self' (line 1387)
        self_508404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 30), 'self', False)
        # Obtaining the member '_generate_from_return_and_no_outargs' of a type (line 1387)
        _generate_from_return_and_no_outargs_508405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1387, 30), self_508404, '_generate_from_return_and_no_outargs')
        # Calling _generate_from_return_and_no_outargs(args, kwargs) (line 1387)
        _generate_from_return_and_no_outargs_call_result_508407 = invoke(stypy.reporting.localization.Localization(__file__, 1387, 30), _generate_from_return_and_no_outargs_508405, *[], **kwargs_508406)
        
        # Obtaining the member '__getitem__' of a type (line 1387)
        getitem___508408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1387, 12), _generate_from_return_and_no_outargs_call_result_508407, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1387)
        subscript_call_result_508409 = invoke(stypy.reporting.localization.Localization(__file__, 1387, 12), getitem___508408, int_508403)
        
        # Assigning a type to the variable 'tuple_var_assignment_504018' (line 1387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1387, 12), 'tuple_var_assignment_504018', subscript_call_result_508409)
        
        # Assigning a Name to a Name (line 1387):
        # Getting the type of 'tuple_var_assignment_504016' (line 1387)
        tuple_var_assignment_504016_508410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 12), 'tuple_var_assignment_504016')
        # Assigning a type to the variable 'dec' (line 1387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1387, 12), 'dec', tuple_var_assignment_504016_508410)
        
        # Assigning a Name to a Name (line 1387):
        # Getting the type of 'tuple_var_assignment_504017' (line 1387)
        tuple_var_assignment_504017_508411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 12), 'tuple_var_assignment_504017')
        # Assigning a type to the variable 'src' (line 1387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1387, 17), 'src', tuple_var_assignment_504017_508411)
        
        # Assigning a Name to a Name (line 1387):
        # Getting the type of 'tuple_var_assignment_504018' (line 1387)
        tuple_var_assignment_504018_508412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 12), 'tuple_var_assignment_504018')
        # Assigning a type to the variable 'specs' (line 1387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1387, 22), 'specs', tuple_var_assignment_504018_508412)
        # SSA branch for the else part of an if statement (line 1386)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 1388)
        # Processing the call arguments (line 1388)
        # Getting the type of 'outcodes' (line 1388)
        outcodes_508414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 17), 'outcodes', False)
        # Processing the call keyword arguments (line 1388)
        kwargs_508415 = {}
        # Getting the type of 'len' (line 1388)
        len_508413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 13), 'len', False)
        # Calling len(args, kwargs) (line 1388)
        len_call_result_508416 = invoke(stypy.reporting.localization.Localization(__file__, 1388, 13), len_508413, *[outcodes_508414], **kwargs_508415)
        
        int_508417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 29), 'int')
        # Applying the binary operator '>' (line 1388)
        result_gt_508418 = python_operator(stypy.reporting.localization.Localization(__file__, 1388, 13), '>', len_call_result_508416, int_508417)
        
        
        # Getting the type of 'retcode' (line 1388)
        retcode_508419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1388, 35), 'retcode')
        str_508420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1388, 46), 'str', 'v')
        # Applying the binary operator '==' (line 1388)
        result_eq_508421 = python_operator(stypy.reporting.localization.Localization(__file__, 1388, 35), '==', retcode_508419, str_508420)
        
        # Applying the binary operator 'and' (line 1388)
        result_and_keyword_508422 = python_operator(stypy.reporting.localization.Localization(__file__, 1388, 13), 'and', result_gt_508418, result_eq_508421)
        
        # Testing the type of an if condition (line 1388)
        if_condition_508423 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1388, 13), result_and_keyword_508422)
        # Assigning a type to the variable 'if_condition_508423' (line 1388)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1388, 13), 'if_condition_508423', if_condition_508423)
        # SSA begins for if statement (line 1388)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 1389):
        
        # Assigning a Subscript to a Name (line 1389):
        
        # Obtaining the type of the subscript
        int_508424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1389, 12), 'int')
        
        # Call to _generate_from_outargs_and_no_return(...): (line 1389)
        # Processing the call keyword arguments (line 1389)
        kwargs_508427 = {}
        # Getting the type of 'self' (line 1389)
        self_508425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 30), 'self', False)
        # Obtaining the member '_generate_from_outargs_and_no_return' of a type (line 1389)
        _generate_from_outargs_and_no_return_508426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1389, 30), self_508425, '_generate_from_outargs_and_no_return')
        # Calling _generate_from_outargs_and_no_return(args, kwargs) (line 1389)
        _generate_from_outargs_and_no_return_call_result_508428 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 30), _generate_from_outargs_and_no_return_508426, *[], **kwargs_508427)
        
        # Obtaining the member '__getitem__' of a type (line 1389)
        getitem___508429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1389, 12), _generate_from_outargs_and_no_return_call_result_508428, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1389)
        subscript_call_result_508430 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 12), getitem___508429, int_508424)
        
        # Assigning a type to the variable 'tuple_var_assignment_504019' (line 1389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1389, 12), 'tuple_var_assignment_504019', subscript_call_result_508430)
        
        # Assigning a Subscript to a Name (line 1389):
        
        # Obtaining the type of the subscript
        int_508431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1389, 12), 'int')
        
        # Call to _generate_from_outargs_and_no_return(...): (line 1389)
        # Processing the call keyword arguments (line 1389)
        kwargs_508434 = {}
        # Getting the type of 'self' (line 1389)
        self_508432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 30), 'self', False)
        # Obtaining the member '_generate_from_outargs_and_no_return' of a type (line 1389)
        _generate_from_outargs_and_no_return_508433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1389, 30), self_508432, '_generate_from_outargs_and_no_return')
        # Calling _generate_from_outargs_and_no_return(args, kwargs) (line 1389)
        _generate_from_outargs_and_no_return_call_result_508435 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 30), _generate_from_outargs_and_no_return_508433, *[], **kwargs_508434)
        
        # Obtaining the member '__getitem__' of a type (line 1389)
        getitem___508436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1389, 12), _generate_from_outargs_and_no_return_call_result_508435, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1389)
        subscript_call_result_508437 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 12), getitem___508436, int_508431)
        
        # Assigning a type to the variable 'tuple_var_assignment_504020' (line 1389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1389, 12), 'tuple_var_assignment_504020', subscript_call_result_508437)
        
        # Assigning a Subscript to a Name (line 1389):
        
        # Obtaining the type of the subscript
        int_508438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1389, 12), 'int')
        
        # Call to _generate_from_outargs_and_no_return(...): (line 1389)
        # Processing the call keyword arguments (line 1389)
        kwargs_508441 = {}
        # Getting the type of 'self' (line 1389)
        self_508439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 30), 'self', False)
        # Obtaining the member '_generate_from_outargs_and_no_return' of a type (line 1389)
        _generate_from_outargs_and_no_return_508440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1389, 30), self_508439, '_generate_from_outargs_and_no_return')
        # Calling _generate_from_outargs_and_no_return(args, kwargs) (line 1389)
        _generate_from_outargs_and_no_return_call_result_508442 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 30), _generate_from_outargs_and_no_return_508440, *[], **kwargs_508441)
        
        # Obtaining the member '__getitem__' of a type (line 1389)
        getitem___508443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1389, 12), _generate_from_outargs_and_no_return_call_result_508442, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1389)
        subscript_call_result_508444 = invoke(stypy.reporting.localization.Localization(__file__, 1389, 12), getitem___508443, int_508438)
        
        # Assigning a type to the variable 'tuple_var_assignment_504021' (line 1389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1389, 12), 'tuple_var_assignment_504021', subscript_call_result_508444)
        
        # Assigning a Name to a Name (line 1389):
        # Getting the type of 'tuple_var_assignment_504019' (line 1389)
        tuple_var_assignment_504019_508445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 12), 'tuple_var_assignment_504019')
        # Assigning a type to the variable 'dec' (line 1389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1389, 12), 'dec', tuple_var_assignment_504019_508445)
        
        # Assigning a Name to a Name (line 1389):
        # Getting the type of 'tuple_var_assignment_504020' (line 1389)
        tuple_var_assignment_504020_508446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 12), 'tuple_var_assignment_504020')
        # Assigning a type to the variable 'src' (line 1389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1389, 17), 'src', tuple_var_assignment_504020_508446)
        
        # Assigning a Name to a Name (line 1389):
        # Getting the type of 'tuple_var_assignment_504021' (line 1389)
        tuple_var_assignment_504021_508447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 12), 'tuple_var_assignment_504021')
        # Assigning a type to the variable 'specs' (line 1389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1389, 22), 'specs', tuple_var_assignment_504021_508447)
        # SSA branch for the else part of an if statement (line 1388)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        
        # Call to len(...): (line 1390)
        # Processing the call arguments (line 1390)
        # Getting the type of 'outcodes' (line 1390)
        outcodes_508449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 17), 'outcodes', False)
        # Processing the call keyword arguments (line 1390)
        kwargs_508450 = {}
        # Getting the type of 'len' (line 1390)
        len_508448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 13), 'len', False)
        # Calling len(args, kwargs) (line 1390)
        len_call_result_508451 = invoke(stypy.reporting.localization.Localization(__file__, 1390, 13), len_508448, *[outcodes_508449], **kwargs_508450)
        
        int_508452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 29), 'int')
        # Applying the binary operator '>' (line 1390)
        result_gt_508453 = python_operator(stypy.reporting.localization.Localization(__file__, 1390, 13), '>', len_call_result_508451, int_508452)
        
        
        # Getting the type of 'retcode' (line 1390)
        retcode_508454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 35), 'retcode')
        str_508455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 46), 'str', 'v')
        # Applying the binary operator '!=' (line 1390)
        result_ne_508456 = python_operator(stypy.reporting.localization.Localization(__file__, 1390, 35), '!=', retcode_508454, str_508455)
        
        # Applying the binary operator 'and' (line 1390)
        result_and_keyword_508457 = python_operator(stypy.reporting.localization.Localization(__file__, 1390, 13), 'and', result_gt_508453, result_ne_508456)
        
        # Testing the type of an if condition (line 1390)
        if_condition_508458 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1390, 13), result_and_keyword_508457)
        # Assigning a type to the variable 'if_condition_508458' (line 1390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1390, 13), 'if_condition_508458', if_condition_508458)
        # SSA begins for if statement (line 1390)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 1391):
        
        # Assigning a Subscript to a Name (line 1391):
        
        # Obtaining the type of the subscript
        int_508459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 12), 'int')
        
        # Call to _generate_from_outargs_and_return(...): (line 1391)
        # Processing the call keyword arguments (line 1391)
        kwargs_508462 = {}
        # Getting the type of 'self' (line 1391)
        self_508460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 30), 'self', False)
        # Obtaining the member '_generate_from_outargs_and_return' of a type (line 1391)
        _generate_from_outargs_and_return_508461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1391, 30), self_508460, '_generate_from_outargs_and_return')
        # Calling _generate_from_outargs_and_return(args, kwargs) (line 1391)
        _generate_from_outargs_and_return_call_result_508463 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 30), _generate_from_outargs_and_return_508461, *[], **kwargs_508462)
        
        # Obtaining the member '__getitem__' of a type (line 1391)
        getitem___508464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1391, 12), _generate_from_outargs_and_return_call_result_508463, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1391)
        subscript_call_result_508465 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 12), getitem___508464, int_508459)
        
        # Assigning a type to the variable 'tuple_var_assignment_504022' (line 1391)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 12), 'tuple_var_assignment_504022', subscript_call_result_508465)
        
        # Assigning a Subscript to a Name (line 1391):
        
        # Obtaining the type of the subscript
        int_508466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 12), 'int')
        
        # Call to _generate_from_outargs_and_return(...): (line 1391)
        # Processing the call keyword arguments (line 1391)
        kwargs_508469 = {}
        # Getting the type of 'self' (line 1391)
        self_508467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 30), 'self', False)
        # Obtaining the member '_generate_from_outargs_and_return' of a type (line 1391)
        _generate_from_outargs_and_return_508468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1391, 30), self_508467, '_generate_from_outargs_and_return')
        # Calling _generate_from_outargs_and_return(args, kwargs) (line 1391)
        _generate_from_outargs_and_return_call_result_508470 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 30), _generate_from_outargs_and_return_508468, *[], **kwargs_508469)
        
        # Obtaining the member '__getitem__' of a type (line 1391)
        getitem___508471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1391, 12), _generate_from_outargs_and_return_call_result_508470, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1391)
        subscript_call_result_508472 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 12), getitem___508471, int_508466)
        
        # Assigning a type to the variable 'tuple_var_assignment_504023' (line 1391)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 12), 'tuple_var_assignment_504023', subscript_call_result_508472)
        
        # Assigning a Subscript to a Name (line 1391):
        
        # Obtaining the type of the subscript
        int_508473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 12), 'int')
        
        # Call to _generate_from_outargs_and_return(...): (line 1391)
        # Processing the call keyword arguments (line 1391)
        kwargs_508476 = {}
        # Getting the type of 'self' (line 1391)
        self_508474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 30), 'self', False)
        # Obtaining the member '_generate_from_outargs_and_return' of a type (line 1391)
        _generate_from_outargs_and_return_508475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1391, 30), self_508474, '_generate_from_outargs_and_return')
        # Calling _generate_from_outargs_and_return(args, kwargs) (line 1391)
        _generate_from_outargs_and_return_call_result_508477 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 30), _generate_from_outargs_and_return_508475, *[], **kwargs_508476)
        
        # Obtaining the member '__getitem__' of a type (line 1391)
        getitem___508478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1391, 12), _generate_from_outargs_and_return_call_result_508477, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1391)
        subscript_call_result_508479 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 12), getitem___508478, int_508473)
        
        # Assigning a type to the variable 'tuple_var_assignment_504024' (line 1391)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 12), 'tuple_var_assignment_504024', subscript_call_result_508479)
        
        # Assigning a Name to a Name (line 1391):
        # Getting the type of 'tuple_var_assignment_504022' (line 1391)
        tuple_var_assignment_504022_508480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 12), 'tuple_var_assignment_504022')
        # Assigning a type to the variable 'dec' (line 1391)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 12), 'dec', tuple_var_assignment_504022_508480)
        
        # Assigning a Name to a Name (line 1391):
        # Getting the type of 'tuple_var_assignment_504023' (line 1391)
        tuple_var_assignment_504023_508481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 12), 'tuple_var_assignment_504023')
        # Assigning a type to the variable 'src' (line 1391)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 17), 'src', tuple_var_assignment_504023_508481)
        
        # Assigning a Name to a Name (line 1391):
        # Getting the type of 'tuple_var_assignment_504024' (line 1391)
        tuple_var_assignment_504024_508482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 12), 'tuple_var_assignment_504024')
        # Assigning a type to the variable 'specs' (line 1391)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 22), 'specs', tuple_var_assignment_504024_508482)
        # SSA branch for the else part of an if statement (line 1390)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 1393)
        # Processing the call arguments (line 1393)
        str_508484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1393, 29), 'str', 'Invalid signature')
        # Processing the call keyword arguments (line 1393)
        kwargs_508485 = {}
        # Getting the type of 'ValueError' (line 1393)
        ValueError_508483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1393, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1393)
        ValueError_call_result_508486 = invoke(stypy.reporting.localization.Localization(__file__, 1393, 18), ValueError_508483, *[str_508484], **kwargs_508485)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1393, 12), ValueError_call_result_508486, 'raise parameter', BaseException)
        # SSA join for if statement (line 1390)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1388)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1386)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 1395)
        # Processing the call arguments (line 1395)
        # Getting the type of 'self' (line 1395)
        self_508488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 15), 'self', False)
        # Obtaining the member 'outvars' of a type (line 1395)
        outvars_508489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1395, 15), self_508488, 'outvars')
        # Processing the call keyword arguments (line 1395)
        kwargs_508490 = {}
        # Getting the type of 'len' (line 1395)
        len_508487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 11), 'len', False)
        # Calling len(args, kwargs) (line 1395)
        len_call_result_508491 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 11), len_508487, *[outvars_508489], **kwargs_508490)
        
        int_508492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1395, 31), 'int')
        # Applying the binary operator '>' (line 1395)
        result_gt_508493 = python_operator(stypy.reporting.localization.Localization(__file__, 1395, 11), '>', len_call_result_508491, int_508492)
        
        # Testing the type of an if condition (line 1395)
        if_condition_508494 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1395, 8), result_gt_508493)
        # Assigning a type to the variable 'if_condition_508494' (line 1395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1395, 8), 'if_condition_508494', if_condition_508494)
        # SSA begins for if statement (line 1395)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1396):
        
        # Assigning a Call to a Name (line 1396):
        
        # Call to _get_python_wrap(...): (line 1396)
        # Processing the call keyword arguments (line 1396)
        kwargs_508497 = {}
        # Getting the type of 'self' (line 1396)
        self_508495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1396, 19), 'self', False)
        # Obtaining the member '_get_python_wrap' of a type (line 1396)
        _get_python_wrap_508496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1396, 19), self_508495, '_get_python_wrap')
        # Calling _get_python_wrap(args, kwargs) (line 1396)
        _get_python_wrap_call_result_508498 = invoke(stypy.reporting.localization.Localization(__file__, 1396, 19), _get_python_wrap_508496, *[], **kwargs_508497)
        
        # Assigning a type to the variable 'wrap' (line 1396)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1396, 12), 'wrap', _get_python_wrap_call_result_508498)
        # SSA branch for the else part of an if statement (line 1395)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Name (line 1398):
        
        # Assigning a Name to a Name (line 1398):
        # Getting the type of 'None' (line 1398)
        None_508499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1398, 19), 'None')
        # Assigning a type to the variable 'wrap' (line 1398)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1398, 12), 'wrap', None_508499)
        # SSA join for if statement (line 1395)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1400)
        tuple_508500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1400, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1400)
        # Adding element type (line 1400)
        # Getting the type of 'dec' (line 1400)
        dec_508501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1400, 15), 'dec')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1400, 15), tuple_508500, dec_508501)
        # Adding element type (line 1400)
        # Getting the type of 'src' (line 1400)
        src_508502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1400, 20), 'src')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1400, 15), tuple_508500, src_508502)
        # Adding element type (line 1400)
        # Getting the type of 'specs' (line 1400)
        specs_508503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1400, 25), 'specs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1400, 15), tuple_508500, specs_508503)
        # Adding element type (line 1400)
        # Getting the type of 'self' (line 1400)
        self_508504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1400, 32), 'self')
        # Obtaining the member 'fused_types' of a type (line 1400)
        fused_types_508505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1400, 32), self_508504, 'fused_types')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1400, 15), tuple_508500, fused_types_508505)
        # Adding element type (line 1400)
        # Getting the type of 'wrap' (line 1400)
        wrap_508506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1400, 50), 'wrap')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1400, 15), tuple_508500, wrap_508506)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1400)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1400, 8), 'stypy_return_type', tuple_508500)
        
        # ################# End of 'generate(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'generate' in the type store
        # Getting the type of 'stypy_return_type' (line 1380)
        stypy_return_type_508507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_508507)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'generate'
        return stypy_return_type_508507


# Assigning a type to the variable 'FusedFunc' (line 973)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 0), 'FusedFunc', FusedFunc)

@norecursion
def get_declaration(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'get_declaration'
    module_type_store = module_type_store.open_function_context('get_declaration', 1403, 0, False)
    
    # Passed parameters checking function
    get_declaration.stypy_localization = localization
    get_declaration.stypy_type_of_self = None
    get_declaration.stypy_type_store = module_type_store
    get_declaration.stypy_function_name = 'get_declaration'
    get_declaration.stypy_param_names_list = ['ufunc', 'c_name', 'c_proto', 'cy_proto', 'header', 'proto_h_filename']
    get_declaration.stypy_varargs_param_name = None
    get_declaration.stypy_kwargs_param_name = None
    get_declaration.stypy_call_defaults = defaults
    get_declaration.stypy_call_varargs = varargs
    get_declaration.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_declaration', ['ufunc', 'c_name', 'c_proto', 'cy_proto', 'header', 'proto_h_filename'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_declaration', localization, ['ufunc', 'c_name', 'c_proto', 'cy_proto', 'header', 'proto_h_filename'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_declaration(...)' code ##################

    str_508508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1408, (-1)), 'str', '\n    Construct a Cython declaration of a function coming either from a\n    pxd or a header file. Do sufficient tricks to enable compile-time\n    type checking against the signature expected by the ufunc.\n    ')
    
    # Assigning a List to a Name (line 1410):
    
    # Assigning a List to a Name (line 1410):
    
    # Obtaining an instance of the builtin type 'list' (line 1410)
    list_508509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1410)
    
    # Assigning a type to the variable 'defs' (line 1410)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1410, 4), 'defs', list_508509)
    
    # Assigning a List to a Name (line 1411):
    
    # Assigning a List to a Name (line 1411):
    
    # Obtaining an instance of the builtin type 'list' (line 1411)
    list_508510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1411, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1411)
    
    # Assigning a type to the variable 'defs_h' (line 1411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1411, 4), 'defs_h', list_508510)
    
    # Assigning a Call to a Name (line 1413):
    
    # Assigning a Call to a Name (line 1413):
    
    # Call to replace(...): (line 1413)
    # Processing the call arguments (line 1413)
    str_508523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1413, 66), 'str', ' ')
    str_508524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1413, 71), 'str', '_')
    # Processing the call keyword arguments (line 1413)
    kwargs_508525 = {}
    
    # Call to replace(...): (line 1413)
    # Processing the call arguments (line 1413)
    str_508518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1413, 48), 'str', ']')
    str_508519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1413, 53), 'str', '_')
    # Processing the call keyword arguments (line 1413)
    kwargs_508520 = {}
    
    # Call to replace(...): (line 1413)
    # Processing the call arguments (line 1413)
    str_508513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1413, 30), 'str', '[')
    str_508514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1413, 35), 'str', '_')
    # Processing the call keyword arguments (line 1413)
    kwargs_508515 = {}
    # Getting the type of 'c_name' (line 1413)
    c_name_508511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1413, 15), 'c_name', False)
    # Obtaining the member 'replace' of a type (line 1413)
    replace_508512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1413, 15), c_name_508511, 'replace')
    # Calling replace(args, kwargs) (line 1413)
    replace_call_result_508516 = invoke(stypy.reporting.localization.Localization(__file__, 1413, 15), replace_508512, *[str_508513, str_508514], **kwargs_508515)
    
    # Obtaining the member 'replace' of a type (line 1413)
    replace_508517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1413, 15), replace_call_result_508516, 'replace')
    # Calling replace(args, kwargs) (line 1413)
    replace_call_result_508521 = invoke(stypy.reporting.localization.Localization(__file__, 1413, 15), replace_508517, *[str_508518, str_508519], **kwargs_508520)
    
    # Obtaining the member 'replace' of a type (line 1413)
    replace_508522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1413, 15), replace_call_result_508521, 'replace')
    # Calling replace(args, kwargs) (line 1413)
    replace_call_result_508526 = invoke(stypy.reporting.localization.Localization(__file__, 1413, 15), replace_508522, *[str_508523, str_508524], **kwargs_508525)
    
    # Assigning a type to the variable 'var_name' (line 1413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1413, 4), 'var_name', replace_call_result_508526)
    
    
    # Call to endswith(...): (line 1415)
    # Processing the call arguments (line 1415)
    str_508529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1415, 23), 'str', '.pxd')
    # Processing the call keyword arguments (line 1415)
    kwargs_508530 = {}
    # Getting the type of 'header' (line 1415)
    header_508527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1415, 7), 'header', False)
    # Obtaining the member 'endswith' of a type (line 1415)
    endswith_508528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1415, 7), header_508527, 'endswith')
    # Calling endswith(args, kwargs) (line 1415)
    endswith_call_result_508531 = invoke(stypy.reporting.localization.Localization(__file__, 1415, 7), endswith_508528, *[str_508529], **kwargs_508530)
    
    # Testing the type of an if condition (line 1415)
    if_condition_508532 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1415, 4), endswith_call_result_508531)
    # Assigning a type to the variable 'if_condition_508532' (line 1415)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1415, 4), 'if_condition_508532', if_condition_508532)
    # SSA begins for if statement (line 1415)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1416)
    # Processing the call arguments (line 1416)
    str_508535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1416, 20), 'str', 'from .%s cimport %s as %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1417)
    tuple_508536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1417, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1417)
    # Adding element type (line 1417)
    
    # Obtaining the type of the subscript
    int_508537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1417, 20), 'int')
    slice_508538 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1417, 12), None, int_508537, None)
    # Getting the type of 'header' (line 1417)
    header_508539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 12), 'header', False)
    # Obtaining the member '__getitem__' of a type (line 1417)
    getitem___508540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1417, 12), header_508539, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1417)
    subscript_call_result_508541 = invoke(stypy.reporting.localization.Localization(__file__, 1417, 12), getitem___508540, slice_508538)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 12), tuple_508536, subscript_call_result_508541)
    # Adding element type (line 1417)
    
    # Call to cython_func_name(...): (line 1417)
    # Processing the call arguments (line 1417)
    # Getting the type of 'c_name' (line 1417)
    c_name_508544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 48), 'c_name', False)
    # Processing the call keyword arguments (line 1417)
    str_508545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1417, 63), 'str', '')
    keyword_508546 = str_508545
    kwargs_508547 = {'prefix': keyword_508546}
    # Getting the type of 'ufunc' (line 1417)
    ufunc_508542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 25), 'ufunc', False)
    # Obtaining the member 'cython_func_name' of a type (line 1417)
    cython_func_name_508543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1417, 25), ufunc_508542, 'cython_func_name')
    # Calling cython_func_name(args, kwargs) (line 1417)
    cython_func_name_call_result_508548 = invoke(stypy.reporting.localization.Localization(__file__, 1417, 25), cython_func_name_508543, *[c_name_508544], **kwargs_508547)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 12), tuple_508536, cython_func_name_call_result_508548)
    # Adding element type (line 1417)
    
    # Call to cython_func_name(...): (line 1418)
    # Processing the call arguments (line 1418)
    # Getting the type of 'c_name' (line 1418)
    c_name_508551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1418, 35), 'c_name', False)
    # Processing the call keyword arguments (line 1418)
    kwargs_508552 = {}
    # Getting the type of 'ufunc' (line 1418)
    ufunc_508549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1418, 12), 'ufunc', False)
    # Obtaining the member 'cython_func_name' of a type (line 1418)
    cython_func_name_508550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1418, 12), ufunc_508549, 'cython_func_name')
    # Calling cython_func_name(args, kwargs) (line 1418)
    cython_func_name_call_result_508553 = invoke(stypy.reporting.localization.Localization(__file__, 1418, 12), cython_func_name_508550, *[c_name_508551], **kwargs_508552)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 12), tuple_508536, cython_func_name_call_result_508553)
    
    # Applying the binary operator '%' (line 1416)
    result_mod_508554 = python_operator(stypy.reporting.localization.Localization(__file__, 1416, 20), '%', str_508535, tuple_508536)
    
    # Processing the call keyword arguments (line 1416)
    kwargs_508555 = {}
    # Getting the type of 'defs' (line 1416)
    defs_508533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 8), 'defs', False)
    # Obtaining the member 'append' of a type (line 1416)
    append_508534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1416, 8), defs_508533, 'append')
    # Calling append(args, kwargs) (line 1416)
    append_call_result_508556 = invoke(stypy.reporting.localization.Localization(__file__, 1416, 8), append_508534, *[result_mod_508554], **kwargs_508555)
    
    
    # Assigning a BinOp to a Name (line 1421):
    
    # Assigning a BinOp to a Name (line 1421):
    str_508557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1421, 21), 'str', '_proto_%s_t')
    # Getting the type of 'var_name' (line 1421)
    var_name_508558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1421, 37), 'var_name')
    # Applying the binary operator '%' (line 1421)
    result_mod_508559 = python_operator(stypy.reporting.localization.Localization(__file__, 1421, 21), '%', str_508557, var_name_508558)
    
    # Assigning a type to the variable 'proto_name' (line 1421)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1421, 8), 'proto_name', result_mod_508559)
    
    # Call to append(...): (line 1422)
    # Processing the call arguments (line 1422)
    str_508562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1422, 20), 'str', 'ctypedef %s')
    
    # Call to replace(...): (line 1422)
    # Processing the call arguments (line 1422)
    str_508565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1422, 54), 'str', '(*)')
    # Getting the type of 'proto_name' (line 1422)
    proto_name_508566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 61), 'proto_name', False)
    # Processing the call keyword arguments (line 1422)
    kwargs_508567 = {}
    # Getting the type of 'cy_proto' (line 1422)
    cy_proto_508563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 37), 'cy_proto', False)
    # Obtaining the member 'replace' of a type (line 1422)
    replace_508564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1422, 37), cy_proto_508563, 'replace')
    # Calling replace(args, kwargs) (line 1422)
    replace_call_result_508568 = invoke(stypy.reporting.localization.Localization(__file__, 1422, 37), replace_508564, *[str_508565, proto_name_508566], **kwargs_508567)
    
    # Applying the binary operator '%' (line 1422)
    result_mod_508569 = python_operator(stypy.reporting.localization.Localization(__file__, 1422, 20), '%', str_508562, replace_call_result_508568)
    
    # Processing the call keyword arguments (line 1422)
    kwargs_508570 = {}
    # Getting the type of 'defs' (line 1422)
    defs_508560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 8), 'defs', False)
    # Obtaining the member 'append' of a type (line 1422)
    append_508561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1422, 8), defs_508560, 'append')
    # Calling append(args, kwargs) (line 1422)
    append_call_result_508571 = invoke(stypy.reporting.localization.Localization(__file__, 1422, 8), append_508561, *[result_mod_508569], **kwargs_508570)
    
    
    # Call to append(...): (line 1423)
    # Processing the call arguments (line 1423)
    str_508574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1423, 20), 'str', 'cdef %s *%s_var = &%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1424)
    tuple_508575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1424, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1424)
    # Adding element type (line 1424)
    # Getting the type of 'proto_name' (line 1424)
    proto_name_508576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 12), 'proto_name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1424, 12), tuple_508575, proto_name_508576)
    # Adding element type (line 1424)
    # Getting the type of 'proto_name' (line 1424)
    proto_name_508577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 24), 'proto_name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1424, 12), tuple_508575, proto_name_508577)
    # Adding element type (line 1424)
    
    # Call to cython_func_name(...): (line 1424)
    # Processing the call arguments (line 1424)
    # Getting the type of 'c_name' (line 1424)
    c_name_508580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 59), 'c_name', False)
    # Processing the call keyword arguments (line 1424)
    # Getting the type of 'True' (line 1424)
    True_508581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 79), 'True', False)
    keyword_508582 = True_508581
    kwargs_508583 = {'specialized': keyword_508582}
    # Getting the type of 'ufunc' (line 1424)
    ufunc_508578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1424, 36), 'ufunc', False)
    # Obtaining the member 'cython_func_name' of a type (line 1424)
    cython_func_name_508579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1424, 36), ufunc_508578, 'cython_func_name')
    # Calling cython_func_name(args, kwargs) (line 1424)
    cython_func_name_call_result_508584 = invoke(stypy.reporting.localization.Localization(__file__, 1424, 36), cython_func_name_508579, *[c_name_508580], **kwargs_508583)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1424, 12), tuple_508575, cython_func_name_call_result_508584)
    
    # Applying the binary operator '%' (line 1423)
    result_mod_508585 = python_operator(stypy.reporting.localization.Localization(__file__, 1423, 20), '%', str_508574, tuple_508575)
    
    # Processing the call keyword arguments (line 1423)
    kwargs_508586 = {}
    # Getting the type of 'defs' (line 1423)
    defs_508572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 8), 'defs', False)
    # Obtaining the member 'append' of a type (line 1423)
    append_508573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1423, 8), defs_508572, 'append')
    # Calling append(args, kwargs) (line 1423)
    append_call_result_508587 = invoke(stypy.reporting.localization.Localization(__file__, 1423, 8), append_508573, *[result_mod_508585], **kwargs_508586)
    
    # SSA branch for the else part of an if statement (line 1415)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 1428):
    
    # Assigning a BinOp to a Name (line 1428):
    str_508588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1428, 19), 'str', '%s "%s"')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1428)
    tuple_508589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1428, 34), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1428)
    # Adding element type (line 1428)
    
    # Call to cython_func_name(...): (line 1428)
    # Processing the call arguments (line 1428)
    # Getting the type of 'c_name' (line 1428)
    c_name_508592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1428, 57), 'c_name', False)
    # Processing the call keyword arguments (line 1428)
    kwargs_508593 = {}
    # Getting the type of 'ufunc' (line 1428)
    ufunc_508590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1428, 34), 'ufunc', False)
    # Obtaining the member 'cython_func_name' of a type (line 1428)
    cython_func_name_508591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1428, 34), ufunc_508590, 'cython_func_name')
    # Calling cython_func_name(args, kwargs) (line 1428)
    cython_func_name_call_result_508594 = invoke(stypy.reporting.localization.Localization(__file__, 1428, 34), cython_func_name_508591, *[c_name_508592], **kwargs_508593)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1428, 34), tuple_508589, cython_func_name_call_result_508594)
    # Adding element type (line 1428)
    # Getting the type of 'c_name' (line 1428)
    c_name_508595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1428, 66), 'c_name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1428, 34), tuple_508589, c_name_508595)
    
    # Applying the binary operator '%' (line 1428)
    result_mod_508596 = python_operator(stypy.reporting.localization.Localization(__file__, 1428, 19), '%', str_508588, tuple_508589)
    
    # Assigning a type to the variable 'new_name' (line 1428)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1428, 8), 'new_name', result_mod_508596)
    
    # Call to append(...): (line 1429)
    # Processing the call arguments (line 1429)
    str_508599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1429, 20), 'str', 'cdef extern from "%s":')
    # Getting the type of 'proto_h_filename' (line 1429)
    proto_h_filename_508600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 49), 'proto_h_filename', False)
    # Applying the binary operator '%' (line 1429)
    result_mod_508601 = python_operator(stypy.reporting.localization.Localization(__file__, 1429, 20), '%', str_508599, proto_h_filename_508600)
    
    # Processing the call keyword arguments (line 1429)
    kwargs_508602 = {}
    # Getting the type of 'defs' (line 1429)
    defs_508597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1429, 8), 'defs', False)
    # Obtaining the member 'append' of a type (line 1429)
    append_508598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1429, 8), defs_508597, 'append')
    # Calling append(args, kwargs) (line 1429)
    append_call_result_508603 = invoke(stypy.reporting.localization.Localization(__file__, 1429, 8), append_508598, *[result_mod_508601], **kwargs_508602)
    
    
    # Call to append(...): (line 1430)
    # Processing the call arguments (line 1430)
    str_508606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1430, 20), 'str', '    cdef %s')
    
    # Call to replace(...): (line 1430)
    # Processing the call arguments (line 1430)
    str_508609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1430, 54), 'str', '(*)')
    # Getting the type of 'new_name' (line 1430)
    new_name_508610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1430, 61), 'new_name', False)
    # Processing the call keyword arguments (line 1430)
    kwargs_508611 = {}
    # Getting the type of 'cy_proto' (line 1430)
    cy_proto_508607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1430, 37), 'cy_proto', False)
    # Obtaining the member 'replace' of a type (line 1430)
    replace_508608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1430, 37), cy_proto_508607, 'replace')
    # Calling replace(args, kwargs) (line 1430)
    replace_call_result_508612 = invoke(stypy.reporting.localization.Localization(__file__, 1430, 37), replace_508608, *[str_508609, new_name_508610], **kwargs_508611)
    
    # Applying the binary operator '%' (line 1430)
    result_mod_508613 = python_operator(stypy.reporting.localization.Localization(__file__, 1430, 20), '%', str_508606, replace_call_result_508612)
    
    # Processing the call keyword arguments (line 1430)
    kwargs_508614 = {}
    # Getting the type of 'defs' (line 1430)
    defs_508604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1430, 8), 'defs', False)
    # Obtaining the member 'append' of a type (line 1430)
    append_508605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1430, 8), defs_508604, 'append')
    # Calling append(args, kwargs) (line 1430)
    append_call_result_508615 = invoke(stypy.reporting.localization.Localization(__file__, 1430, 8), append_508605, *[result_mod_508613], **kwargs_508614)
    
    
    # Call to append(...): (line 1431)
    # Processing the call arguments (line 1431)
    str_508618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1431, 22), 'str', '#include "%s"')
    # Getting the type of 'header' (line 1431)
    header_508619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1431, 42), 'header', False)
    # Applying the binary operator '%' (line 1431)
    result_mod_508620 = python_operator(stypy.reporting.localization.Localization(__file__, 1431, 22), '%', str_508618, header_508619)
    
    # Processing the call keyword arguments (line 1431)
    kwargs_508621 = {}
    # Getting the type of 'defs_h' (line 1431)
    defs_h_508616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1431, 8), 'defs_h', False)
    # Obtaining the member 'append' of a type (line 1431)
    append_508617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1431, 8), defs_h_508616, 'append')
    # Calling append(args, kwargs) (line 1431)
    append_call_result_508622 = invoke(stypy.reporting.localization.Localization(__file__, 1431, 8), append_508617, *[result_mod_508620], **kwargs_508621)
    
    
    # Call to append(...): (line 1432)
    # Processing the call arguments (line 1432)
    str_508625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1432, 22), 'str', '%s;')
    
    # Call to replace(...): (line 1432)
    # Processing the call arguments (line 1432)
    str_508628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1432, 47), 'str', '(*)')
    # Getting the type of 'c_name' (line 1432)
    c_name_508629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1432, 54), 'c_name', False)
    # Processing the call keyword arguments (line 1432)
    kwargs_508630 = {}
    # Getting the type of 'c_proto' (line 1432)
    c_proto_508626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1432, 31), 'c_proto', False)
    # Obtaining the member 'replace' of a type (line 1432)
    replace_508627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1432, 31), c_proto_508626, 'replace')
    # Calling replace(args, kwargs) (line 1432)
    replace_call_result_508631 = invoke(stypy.reporting.localization.Localization(__file__, 1432, 31), replace_508627, *[str_508628, c_name_508629], **kwargs_508630)
    
    # Applying the binary operator '%' (line 1432)
    result_mod_508632 = python_operator(stypy.reporting.localization.Localization(__file__, 1432, 22), '%', str_508625, replace_call_result_508631)
    
    # Processing the call keyword arguments (line 1432)
    kwargs_508633 = {}
    # Getting the type of 'defs_h' (line 1432)
    defs_h_508623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1432, 8), 'defs_h', False)
    # Obtaining the member 'append' of a type (line 1432)
    append_508624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1432, 8), defs_h_508623, 'append')
    # Calling append(args, kwargs) (line 1432)
    append_call_result_508634 = invoke(stypy.reporting.localization.Localization(__file__, 1432, 8), append_508624, *[result_mod_508632], **kwargs_508633)
    
    # SSA join for if statement (line 1415)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 1434)
    tuple_508635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1434, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1434)
    # Adding element type (line 1434)
    # Getting the type of 'defs' (line 1434)
    defs_508636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1434, 11), 'defs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1434, 11), tuple_508635, defs_508636)
    # Adding element type (line 1434)
    # Getting the type of 'defs_h' (line 1434)
    defs_h_508637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1434, 17), 'defs_h')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1434, 11), tuple_508635, defs_h_508637)
    # Adding element type (line 1434)
    # Getting the type of 'var_name' (line 1434)
    var_name_508638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1434, 25), 'var_name')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1434, 11), tuple_508635, var_name_508638)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1434)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1434, 4), 'stypy_return_type', tuple_508635)
    
    # ################# End of 'get_declaration(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_declaration' in the type store
    # Getting the type of 'stypy_return_type' (line 1403)
    stypy_return_type_508639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_508639)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_declaration'
    return stypy_return_type_508639

# Assigning a type to the variable 'get_declaration' (line 1403)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1403, 0), 'get_declaration', get_declaration)

@norecursion
def generate_ufuncs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'generate_ufuncs'
    module_type_store = module_type_store.open_function_context('generate_ufuncs', 1437, 0, False)
    
    # Passed parameters checking function
    generate_ufuncs.stypy_localization = localization
    generate_ufuncs.stypy_type_of_self = None
    generate_ufuncs.stypy_type_store = module_type_store
    generate_ufuncs.stypy_function_name = 'generate_ufuncs'
    generate_ufuncs.stypy_param_names_list = ['fn_prefix', 'cxx_fn_prefix', 'ufuncs']
    generate_ufuncs.stypy_varargs_param_name = None
    generate_ufuncs.stypy_kwargs_param_name = None
    generate_ufuncs.stypy_call_defaults = defaults
    generate_ufuncs.stypy_call_varargs = varargs
    generate_ufuncs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_ufuncs', ['fn_prefix', 'cxx_fn_prefix', 'ufuncs'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_ufuncs', localization, ['fn_prefix', 'cxx_fn_prefix', 'ufuncs'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_ufuncs(...)' code ##################

    
    # Assigning a BinOp to a Name (line 1438):
    
    # Assigning a BinOp to a Name (line 1438):
    # Getting the type of 'fn_prefix' (line 1438)
    fn_prefix_508640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1438, 15), 'fn_prefix')
    str_508641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1438, 27), 'str', '.pyx')
    # Applying the binary operator '+' (line 1438)
    result_add_508642 = python_operator(stypy.reporting.localization.Localization(__file__, 1438, 15), '+', fn_prefix_508640, str_508641)
    
    # Assigning a type to the variable 'filename' (line 1438)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1438, 4), 'filename', result_add_508642)
    
    # Assigning a BinOp to a Name (line 1439):
    
    # Assigning a BinOp to a Name (line 1439):
    # Getting the type of 'fn_prefix' (line 1439)
    fn_prefix_508643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1439, 23), 'fn_prefix')
    str_508644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1439, 35), 'str', '_defs.h')
    # Applying the binary operator '+' (line 1439)
    result_add_508645 = python_operator(stypy.reporting.localization.Localization(__file__, 1439, 23), '+', fn_prefix_508643, str_508644)
    
    # Assigning a type to the variable 'proto_h_filename' (line 1439)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1439, 4), 'proto_h_filename', result_add_508645)
    
    # Assigning a BinOp to a Name (line 1441):
    
    # Assigning a BinOp to a Name (line 1441):
    # Getting the type of 'cxx_fn_prefix' (line 1441)
    cxx_fn_prefix_508646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1441, 27), 'cxx_fn_prefix')
    str_508647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1441, 43), 'str', '_defs.h')
    # Applying the binary operator '+' (line 1441)
    result_add_508648 = python_operator(stypy.reporting.localization.Localization(__file__, 1441, 27), '+', cxx_fn_prefix_508646, str_508647)
    
    # Assigning a type to the variable 'cxx_proto_h_filename' (line 1441)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1441, 4), 'cxx_proto_h_filename', result_add_508648)
    
    # Assigning a BinOp to a Name (line 1442):
    
    # Assigning a BinOp to a Name (line 1442):
    # Getting the type of 'cxx_fn_prefix' (line 1442)
    cxx_fn_prefix_508649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1442, 23), 'cxx_fn_prefix')
    str_508650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1442, 39), 'str', '.pyx')
    # Applying the binary operator '+' (line 1442)
    result_add_508651 = python_operator(stypy.reporting.localization.Localization(__file__, 1442, 23), '+', cxx_fn_prefix_508649, str_508650)
    
    # Assigning a type to the variable 'cxx_pyx_filename' (line 1442)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1442, 4), 'cxx_pyx_filename', result_add_508651)
    
    # Assigning a BinOp to a Name (line 1443):
    
    # Assigning a BinOp to a Name (line 1443):
    # Getting the type of 'cxx_fn_prefix' (line 1443)
    cxx_fn_prefix_508652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1443, 23), 'cxx_fn_prefix')
    str_508653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1443, 39), 'str', '.pxd')
    # Applying the binary operator '+' (line 1443)
    result_add_508654 = python_operator(stypy.reporting.localization.Localization(__file__, 1443, 23), '+', cxx_fn_prefix_508652, str_508653)
    
    # Assigning a type to the variable 'cxx_pxd_filename' (line 1443)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1443, 4), 'cxx_pxd_filename', result_add_508654)
    
    # Assigning a Str to a Name (line 1445):
    
    # Assigning a Str to a Name (line 1445):
    str_508655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1445, 15), 'str', '')
    # Assigning a type to the variable 'toplevel' (line 1445)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1445, 4), 'toplevel', str_508655)
    
    # Assigning a List to a Name (line 1448):
    
    # Assigning a List to a Name (line 1448):
    
    # Obtaining an instance of the builtin type 'list' (line 1448)
    list_508656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1448)
    
    # Assigning a type to the variable 'defs' (line 1448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1448, 4), 'defs', list_508656)
    
    # Assigning a List to a Name (line 1449):
    
    # Assigning a List to a Name (line 1449):
    
    # Obtaining an instance of the builtin type 'list' (line 1449)
    list_508657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1449, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1449)
    
    # Assigning a type to the variable 'defs_h' (line 1449)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1449, 4), 'defs_h', list_508657)
    
    # Assigning a Dict to a Name (line 1450):
    
    # Assigning a Dict to a Name (line 1450):
    
    # Obtaining an instance of the builtin type 'dict' (line 1450)
    dict_508658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1450, 16), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1450)
    
    # Assigning a type to the variable 'all_loops' (line 1450)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1450, 4), 'all_loops', dict_508658)
    
    # Assigning a List to a Name (line 1453):
    
    # Assigning a List to a Name (line 1453):
    
    # Obtaining an instance of the builtin type 'list' (line 1453)
    list_508659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1453, 15), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1453)
    
    # Assigning a type to the variable 'cxx_defs' (line 1453)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1453, 4), 'cxx_defs', list_508659)
    
    # Assigning a List to a Name (line 1454):
    
    # Assigning a List to a Name (line 1454):
    
    # Obtaining an instance of the builtin type 'list' (line 1454)
    list_508660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1454, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1454)
    # Adding element type (line 1454)
    str_508661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1455, 8), 'str', 'from . cimport sf_error')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 19), list_508660, str_508661)
    # Adding element type (line 1454)
    str_508662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1456, 8), 'str', 'cdef void _set_action(sf_error.sf_error_t, sf_error.sf_action_t) nogil')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1454, 19), list_508660, str_508662)
    
    # Assigning a type to the variable 'cxx_pxd_defs' (line 1454)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1454, 4), 'cxx_pxd_defs', list_508660)
    
    # Assigning a List to a Name (line 1458):
    
    # Assigning a List to a Name (line 1458):
    
    # Obtaining an instance of the builtin type 'list' (line 1458)
    list_508663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1458)
    
    # Assigning a type to the variable 'cxx_defs_h' (line 1458)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1458, 4), 'cxx_defs_h', list_508663)
    
    # Call to sort(...): (line 1460)
    # Processing the call keyword arguments (line 1460)

    @norecursion
    def _stypy_temp_lambda_308(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_308'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_308', 1460, 20, True)
        # Passed parameters checking function
        _stypy_temp_lambda_308.stypy_localization = localization
        _stypy_temp_lambda_308.stypy_type_of_self = None
        _stypy_temp_lambda_308.stypy_type_store = module_type_store
        _stypy_temp_lambda_308.stypy_function_name = '_stypy_temp_lambda_308'
        _stypy_temp_lambda_308.stypy_param_names_list = ['u']
        _stypy_temp_lambda_308.stypy_varargs_param_name = None
        _stypy_temp_lambda_308.stypy_kwargs_param_name = None
        _stypy_temp_lambda_308.stypy_call_defaults = defaults
        _stypy_temp_lambda_308.stypy_call_varargs = varargs
        _stypy_temp_lambda_308.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_308', ['u'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_308', ['u'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        # Getting the type of 'u' (line 1460)
        u_508666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 30), 'u', False)
        # Obtaining the member 'name' of a type (line 1460)
        name_508667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1460, 30), u_508666, 'name')
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 1460)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1460, 20), 'stypy_return_type', name_508667)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_308' in the type store
        # Getting the type of 'stypy_return_type' (line 1460)
        stypy_return_type_508668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 20), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_508668)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_308'
        return stypy_return_type_508668

    # Assigning a type to the variable '_stypy_temp_lambda_308' (line 1460)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1460, 20), '_stypy_temp_lambda_308', _stypy_temp_lambda_308)
    # Getting the type of '_stypy_temp_lambda_308' (line 1460)
    _stypy_temp_lambda_308_508669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 20), '_stypy_temp_lambda_308')
    keyword_508670 = _stypy_temp_lambda_308_508669
    kwargs_508671 = {'key': keyword_508670}
    # Getting the type of 'ufuncs' (line 1460)
    ufuncs_508664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 4), 'ufuncs', False)
    # Obtaining the member 'sort' of a type (line 1460)
    sort_508665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1460, 4), ufuncs_508664, 'sort')
    # Calling sort(args, kwargs) (line 1460)
    sort_call_result_508672 = invoke(stypy.reporting.localization.Localization(__file__, 1460, 4), sort_508665, *[], **kwargs_508671)
    
    
    # Getting the type of 'ufuncs' (line 1462)
    ufuncs_508673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1462, 17), 'ufuncs')
    # Testing the type of a for loop iterable (line 1462)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1462, 4), ufuncs_508673)
    # Getting the type of the for loop variable (line 1462)
    for_loop_var_508674 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1462, 4), ufuncs_508673)
    # Assigning a type to the variable 'ufunc' (line 1462)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1462, 4), 'ufunc', for_loop_var_508674)
    # SSA begins for a for statement (line 1462)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 1464):
    
    # Assigning a Call to a Name (line 1464):
    
    # Call to get_prototypes(...): (line 1464)
    # Processing the call keyword arguments (line 1464)
    kwargs_508677 = {}
    # Getting the type of 'ufunc' (line 1464)
    ufunc_508675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1464, 17), 'ufunc', False)
    # Obtaining the member 'get_prototypes' of a type (line 1464)
    get_prototypes_508676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1464, 17), ufunc_508675, 'get_prototypes')
    # Calling get_prototypes(args, kwargs) (line 1464)
    get_prototypes_call_result_508678 = invoke(stypy.reporting.localization.Localization(__file__, 1464, 17), get_prototypes_508676, *[], **kwargs_508677)
    
    # Assigning a type to the variable 'cfuncs' (line 1464)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1464, 8), 'cfuncs', get_prototypes_call_result_508678)
    
    # Getting the type of 'cfuncs' (line 1465)
    cfuncs_508679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 49), 'cfuncs')
    # Testing the type of a for loop iterable (line 1465)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1465, 8), cfuncs_508679)
    # Getting the type of the for loop variable (line 1465)
    for_loop_var_508680 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1465, 8), cfuncs_508679)
    # Assigning a type to the variable 'c_name' (line 1465)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1465, 8), 'c_name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1465, 8), for_loop_var_508680))
    # Assigning a type to the variable 'c_proto' (line 1465)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1465, 8), 'c_proto', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1465, 8), for_loop_var_508680))
    # Assigning a type to the variable 'cy_proto' (line 1465)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1465, 8), 'cy_proto', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1465, 8), for_loop_var_508680))
    # Assigning a type to the variable 'header' (line 1465)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1465, 8), 'header', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1465, 8), for_loop_var_508680))
    # SSA begins for a for statement (line 1465)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to endswith(...): (line 1466)
    # Processing the call arguments (line 1466)
    str_508683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1466, 31), 'str', '++')
    # Processing the call keyword arguments (line 1466)
    kwargs_508684 = {}
    # Getting the type of 'header' (line 1466)
    header_508681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 15), 'header', False)
    # Obtaining the member 'endswith' of a type (line 1466)
    endswith_508682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1466, 15), header_508681, 'endswith')
    # Calling endswith(args, kwargs) (line 1466)
    endswith_call_result_508685 = invoke(stypy.reporting.localization.Localization(__file__, 1466, 15), endswith_508682, *[str_508683], **kwargs_508684)
    
    # Testing the type of an if condition (line 1466)
    if_condition_508686 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1466, 12), endswith_call_result_508685)
    # Assigning a type to the variable 'if_condition_508686' (line 1466)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1466, 12), 'if_condition_508686', if_condition_508686)
    # SSA begins for if statement (line 1466)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1467):
    
    # Assigning a Subscript to a Name (line 1467):
    
    # Obtaining the type of the subscript
    int_508687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 33), 'int')
    slice_508688 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1467, 25), None, int_508687, None)
    # Getting the type of 'header' (line 1467)
    header_508689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 25), 'header')
    # Obtaining the member '__getitem__' of a type (line 1467)
    getitem___508690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1467, 25), header_508689, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1467)
    subscript_call_result_508691 = invoke(stypy.reporting.localization.Localization(__file__, 1467, 25), getitem___508690, slice_508688)
    
    # Assigning a type to the variable 'header' (line 1467)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1467, 16), 'header', subscript_call_result_508691)
    
    # Assigning a Call to a Tuple (line 1470):
    
    # Assigning a Subscript to a Name (line 1470):
    
    # Obtaining the type of the subscript
    int_508692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1470, 16), 'int')
    
    # Call to get_declaration(...): (line 1470)
    # Processing the call arguments (line 1470)
    # Getting the type of 'ufunc' (line 1470)
    ufunc_508694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 67), 'ufunc', False)
    # Getting the type of 'c_name' (line 1470)
    c_name_508695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 74), 'c_name', False)
    # Getting the type of 'c_proto' (line 1470)
    c_proto_508696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 82), 'c_proto', False)
    # Getting the type of 'cy_proto' (line 1470)
    cy_proto_508697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 91), 'cy_proto', False)
    # Getting the type of 'header' (line 1471)
    header_508698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 67), 'header', False)
    # Getting the type of 'cxx_proto_h_filename' (line 1471)
    cxx_proto_h_filename_508699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 75), 'cxx_proto_h_filename', False)
    # Processing the call keyword arguments (line 1470)
    kwargs_508700 = {}
    # Getting the type of 'get_declaration' (line 1470)
    get_declaration_508693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 51), 'get_declaration', False)
    # Calling get_declaration(args, kwargs) (line 1470)
    get_declaration_call_result_508701 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 51), get_declaration_508693, *[ufunc_508694, c_name_508695, c_proto_508696, cy_proto_508697, header_508698, cxx_proto_h_filename_508699], **kwargs_508700)
    
    # Obtaining the member '__getitem__' of a type (line 1470)
    getitem___508702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 16), get_declaration_call_result_508701, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1470)
    subscript_call_result_508703 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 16), getitem___508702, int_508692)
    
    # Assigning a type to the variable 'tuple_var_assignment_504025' (line 1470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 16), 'tuple_var_assignment_504025', subscript_call_result_508703)
    
    # Assigning a Subscript to a Name (line 1470):
    
    # Obtaining the type of the subscript
    int_508704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1470, 16), 'int')
    
    # Call to get_declaration(...): (line 1470)
    # Processing the call arguments (line 1470)
    # Getting the type of 'ufunc' (line 1470)
    ufunc_508706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 67), 'ufunc', False)
    # Getting the type of 'c_name' (line 1470)
    c_name_508707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 74), 'c_name', False)
    # Getting the type of 'c_proto' (line 1470)
    c_proto_508708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 82), 'c_proto', False)
    # Getting the type of 'cy_proto' (line 1470)
    cy_proto_508709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 91), 'cy_proto', False)
    # Getting the type of 'header' (line 1471)
    header_508710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 67), 'header', False)
    # Getting the type of 'cxx_proto_h_filename' (line 1471)
    cxx_proto_h_filename_508711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 75), 'cxx_proto_h_filename', False)
    # Processing the call keyword arguments (line 1470)
    kwargs_508712 = {}
    # Getting the type of 'get_declaration' (line 1470)
    get_declaration_508705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 51), 'get_declaration', False)
    # Calling get_declaration(args, kwargs) (line 1470)
    get_declaration_call_result_508713 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 51), get_declaration_508705, *[ufunc_508706, c_name_508707, c_proto_508708, cy_proto_508709, header_508710, cxx_proto_h_filename_508711], **kwargs_508712)
    
    # Obtaining the member '__getitem__' of a type (line 1470)
    getitem___508714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 16), get_declaration_call_result_508713, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1470)
    subscript_call_result_508715 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 16), getitem___508714, int_508704)
    
    # Assigning a type to the variable 'tuple_var_assignment_504026' (line 1470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 16), 'tuple_var_assignment_504026', subscript_call_result_508715)
    
    # Assigning a Subscript to a Name (line 1470):
    
    # Obtaining the type of the subscript
    int_508716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1470, 16), 'int')
    
    # Call to get_declaration(...): (line 1470)
    # Processing the call arguments (line 1470)
    # Getting the type of 'ufunc' (line 1470)
    ufunc_508718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 67), 'ufunc', False)
    # Getting the type of 'c_name' (line 1470)
    c_name_508719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 74), 'c_name', False)
    # Getting the type of 'c_proto' (line 1470)
    c_proto_508720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 82), 'c_proto', False)
    # Getting the type of 'cy_proto' (line 1470)
    cy_proto_508721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 91), 'cy_proto', False)
    # Getting the type of 'header' (line 1471)
    header_508722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 67), 'header', False)
    # Getting the type of 'cxx_proto_h_filename' (line 1471)
    cxx_proto_h_filename_508723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 75), 'cxx_proto_h_filename', False)
    # Processing the call keyword arguments (line 1470)
    kwargs_508724 = {}
    # Getting the type of 'get_declaration' (line 1470)
    get_declaration_508717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 51), 'get_declaration', False)
    # Calling get_declaration(args, kwargs) (line 1470)
    get_declaration_call_result_508725 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 51), get_declaration_508717, *[ufunc_508718, c_name_508719, c_proto_508720, cy_proto_508721, header_508722, cxx_proto_h_filename_508723], **kwargs_508724)
    
    # Obtaining the member '__getitem__' of a type (line 1470)
    getitem___508726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 16), get_declaration_call_result_508725, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1470)
    subscript_call_result_508727 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 16), getitem___508726, int_508716)
    
    # Assigning a type to the variable 'tuple_var_assignment_504027' (line 1470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 16), 'tuple_var_assignment_504027', subscript_call_result_508727)
    
    # Assigning a Name to a Name (line 1470):
    # Getting the type of 'tuple_var_assignment_504025' (line 1470)
    tuple_var_assignment_504025_508728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 16), 'tuple_var_assignment_504025')
    # Assigning a type to the variable 'item_defs' (line 1470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 16), 'item_defs', tuple_var_assignment_504025_508728)
    
    # Assigning a Name to a Name (line 1470):
    # Getting the type of 'tuple_var_assignment_504026' (line 1470)
    tuple_var_assignment_504026_508729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 16), 'tuple_var_assignment_504026')
    # Assigning a type to the variable 'item_defs_h' (line 1470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 27), 'item_defs_h', tuple_var_assignment_504026_508729)
    
    # Assigning a Name to a Name (line 1470):
    # Getting the type of 'tuple_var_assignment_504027' (line 1470)
    tuple_var_assignment_504027_508730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 16), 'tuple_var_assignment_504027')
    # Assigning a type to the variable 'var_name' (line 1470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 40), 'var_name', tuple_var_assignment_504027_508730)
    
    # Call to extend(...): (line 1472)
    # Processing the call arguments (line 1472)
    # Getting the type of 'item_defs' (line 1472)
    item_defs_508733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 32), 'item_defs', False)
    # Processing the call keyword arguments (line 1472)
    kwargs_508734 = {}
    # Getting the type of 'cxx_defs' (line 1472)
    cxx_defs_508731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 16), 'cxx_defs', False)
    # Obtaining the member 'extend' of a type (line 1472)
    extend_508732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 16), cxx_defs_508731, 'extend')
    # Calling extend(args, kwargs) (line 1472)
    extend_call_result_508735 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 16), extend_508732, *[item_defs_508733], **kwargs_508734)
    
    
    # Call to extend(...): (line 1473)
    # Processing the call arguments (line 1473)
    # Getting the type of 'item_defs_h' (line 1473)
    item_defs_h_508738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 34), 'item_defs_h', False)
    # Processing the call keyword arguments (line 1473)
    kwargs_508739 = {}
    # Getting the type of 'cxx_defs_h' (line 1473)
    cxx_defs_h_508736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 16), 'cxx_defs_h', False)
    # Obtaining the member 'extend' of a type (line 1473)
    extend_508737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1473, 16), cxx_defs_h_508736, 'extend')
    # Calling extend(args, kwargs) (line 1473)
    extend_call_result_508740 = invoke(stypy.reporting.localization.Localization(__file__, 1473, 16), extend_508737, *[item_defs_h_508738], **kwargs_508739)
    
    
    # Call to append(...): (line 1475)
    # Processing the call arguments (line 1475)
    str_508743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1475, 32), 'str', 'cdef void *_export_%s = <void*>%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1476)
    tuple_508744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1476, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1476)
    # Adding element type (line 1476)
    # Getting the type of 'var_name' (line 1476)
    var_name_508745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 20), 'var_name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1476, 20), tuple_508744, var_name_508745)
    # Adding element type (line 1476)
    
    # Call to cython_func_name(...): (line 1476)
    # Processing the call arguments (line 1476)
    # Getting the type of 'c_name' (line 1476)
    c_name_508748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 53), 'c_name', False)
    # Processing the call keyword arguments (line 1476)
    # Getting the type of 'True' (line 1476)
    True_508749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 73), 'True', False)
    keyword_508750 = True_508749
    # Getting the type of 'False' (line 1476)
    False_508751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 88), 'False', False)
    keyword_508752 = False_508751
    kwargs_508753 = {'override': keyword_508752, 'specialized': keyword_508750}
    # Getting the type of 'ufunc' (line 1476)
    ufunc_508746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 30), 'ufunc', False)
    # Obtaining the member 'cython_func_name' of a type (line 1476)
    cython_func_name_508747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1476, 30), ufunc_508746, 'cython_func_name')
    # Calling cython_func_name(args, kwargs) (line 1476)
    cython_func_name_call_result_508754 = invoke(stypy.reporting.localization.Localization(__file__, 1476, 30), cython_func_name_508747, *[c_name_508748], **kwargs_508753)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1476, 20), tuple_508744, cython_func_name_call_result_508754)
    
    # Applying the binary operator '%' (line 1475)
    result_mod_508755 = python_operator(stypy.reporting.localization.Localization(__file__, 1475, 32), '%', str_508743, tuple_508744)
    
    # Processing the call keyword arguments (line 1475)
    kwargs_508756 = {}
    # Getting the type of 'cxx_defs' (line 1475)
    cxx_defs_508741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1475, 16), 'cxx_defs', False)
    # Obtaining the member 'append' of a type (line 1475)
    append_508742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1475, 16), cxx_defs_508741, 'append')
    # Calling append(args, kwargs) (line 1475)
    append_call_result_508757 = invoke(stypy.reporting.localization.Localization(__file__, 1475, 16), append_508742, *[result_mod_508755], **kwargs_508756)
    
    
    # Call to append(...): (line 1477)
    # Processing the call arguments (line 1477)
    str_508760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1477, 36), 'str', 'cdef void *_export_%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1477)
    tuple_508761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1477, 63), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1477)
    # Adding element type (line 1477)
    # Getting the type of 'var_name' (line 1477)
    var_name_508762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1477, 63), 'var_name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1477, 63), tuple_508761, var_name_508762)
    
    # Applying the binary operator '%' (line 1477)
    result_mod_508763 = python_operator(stypy.reporting.localization.Localization(__file__, 1477, 36), '%', str_508760, tuple_508761)
    
    # Processing the call keyword arguments (line 1477)
    kwargs_508764 = {}
    # Getting the type of 'cxx_pxd_defs' (line 1477)
    cxx_pxd_defs_508758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1477, 16), 'cxx_pxd_defs', False)
    # Obtaining the member 'append' of a type (line 1477)
    append_508759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1477, 16), cxx_pxd_defs_508758, 'append')
    # Calling append(args, kwargs) (line 1477)
    append_call_result_508765 = invoke(stypy.reporting.localization.Localization(__file__, 1477, 16), append_508759, *[result_mod_508763], **kwargs_508764)
    
    
    # Assigning a BinOp to a Subscript (line 1480):
    
    # Assigning a BinOp to a Subscript (line 1480):
    str_508766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1480, 56), 'str', 'scipy.special._ufuncs_cxx._export_')
    # Getting the type of 'var_name' (line 1480)
    var_name_508767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 95), 'var_name')
    # Applying the binary operator '+' (line 1480)
    result_add_508768 = python_operator(stypy.reporting.localization.Localization(__file__, 1480, 56), '+', str_508766, var_name_508767)
    
    # Getting the type of 'ufunc' (line 1480)
    ufunc_508769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 16), 'ufunc')
    # Obtaining the member 'function_name_overrides' of a type (line 1480)
    function_name_overrides_508770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1480, 16), ufunc_508769, 'function_name_overrides')
    # Getting the type of 'c_name' (line 1480)
    c_name_508771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 46), 'c_name')
    # Storing an element on a container (line 1480)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1480, 16), function_name_overrides_508770, (c_name_508771, result_add_508768))
    # SSA branch for the else part of an if statement (line 1466)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Tuple (line 1483):
    
    # Assigning a Subscript to a Name (line 1483):
    
    # Obtaining the type of the subscript
    int_508772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 16), 'int')
    
    # Call to get_declaration(...): (line 1483)
    # Processing the call arguments (line 1483)
    # Getting the type of 'ufunc' (line 1483)
    ufunc_508774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 60), 'ufunc', False)
    # Getting the type of 'c_name' (line 1483)
    c_name_508775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 67), 'c_name', False)
    # Getting the type of 'c_proto' (line 1483)
    c_proto_508776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 75), 'c_proto', False)
    # Getting the type of 'cy_proto' (line 1483)
    cy_proto_508777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 84), 'cy_proto', False)
    # Getting the type of 'header' (line 1483)
    header_508778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 94), 'header', False)
    # Getting the type of 'proto_h_filename' (line 1484)
    proto_h_filename_508779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 60), 'proto_h_filename', False)
    # Processing the call keyword arguments (line 1483)
    kwargs_508780 = {}
    # Getting the type of 'get_declaration' (line 1483)
    get_declaration_508773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 44), 'get_declaration', False)
    # Calling get_declaration(args, kwargs) (line 1483)
    get_declaration_call_result_508781 = invoke(stypy.reporting.localization.Localization(__file__, 1483, 44), get_declaration_508773, *[ufunc_508774, c_name_508775, c_proto_508776, cy_proto_508777, header_508778, proto_h_filename_508779], **kwargs_508780)
    
    # Obtaining the member '__getitem__' of a type (line 1483)
    getitem___508782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1483, 16), get_declaration_call_result_508781, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1483)
    subscript_call_result_508783 = invoke(stypy.reporting.localization.Localization(__file__, 1483, 16), getitem___508782, int_508772)
    
    # Assigning a type to the variable 'tuple_var_assignment_504028' (line 1483)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1483, 16), 'tuple_var_assignment_504028', subscript_call_result_508783)
    
    # Assigning a Subscript to a Name (line 1483):
    
    # Obtaining the type of the subscript
    int_508784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 16), 'int')
    
    # Call to get_declaration(...): (line 1483)
    # Processing the call arguments (line 1483)
    # Getting the type of 'ufunc' (line 1483)
    ufunc_508786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 60), 'ufunc', False)
    # Getting the type of 'c_name' (line 1483)
    c_name_508787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 67), 'c_name', False)
    # Getting the type of 'c_proto' (line 1483)
    c_proto_508788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 75), 'c_proto', False)
    # Getting the type of 'cy_proto' (line 1483)
    cy_proto_508789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 84), 'cy_proto', False)
    # Getting the type of 'header' (line 1483)
    header_508790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 94), 'header', False)
    # Getting the type of 'proto_h_filename' (line 1484)
    proto_h_filename_508791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 60), 'proto_h_filename', False)
    # Processing the call keyword arguments (line 1483)
    kwargs_508792 = {}
    # Getting the type of 'get_declaration' (line 1483)
    get_declaration_508785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 44), 'get_declaration', False)
    # Calling get_declaration(args, kwargs) (line 1483)
    get_declaration_call_result_508793 = invoke(stypy.reporting.localization.Localization(__file__, 1483, 44), get_declaration_508785, *[ufunc_508786, c_name_508787, c_proto_508788, cy_proto_508789, header_508790, proto_h_filename_508791], **kwargs_508792)
    
    # Obtaining the member '__getitem__' of a type (line 1483)
    getitem___508794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1483, 16), get_declaration_call_result_508793, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1483)
    subscript_call_result_508795 = invoke(stypy.reporting.localization.Localization(__file__, 1483, 16), getitem___508794, int_508784)
    
    # Assigning a type to the variable 'tuple_var_assignment_504029' (line 1483)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1483, 16), 'tuple_var_assignment_504029', subscript_call_result_508795)
    
    # Assigning a Subscript to a Name (line 1483):
    
    # Obtaining the type of the subscript
    int_508796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 16), 'int')
    
    # Call to get_declaration(...): (line 1483)
    # Processing the call arguments (line 1483)
    # Getting the type of 'ufunc' (line 1483)
    ufunc_508798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 60), 'ufunc', False)
    # Getting the type of 'c_name' (line 1483)
    c_name_508799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 67), 'c_name', False)
    # Getting the type of 'c_proto' (line 1483)
    c_proto_508800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 75), 'c_proto', False)
    # Getting the type of 'cy_proto' (line 1483)
    cy_proto_508801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 84), 'cy_proto', False)
    # Getting the type of 'header' (line 1483)
    header_508802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 94), 'header', False)
    # Getting the type of 'proto_h_filename' (line 1484)
    proto_h_filename_508803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 60), 'proto_h_filename', False)
    # Processing the call keyword arguments (line 1483)
    kwargs_508804 = {}
    # Getting the type of 'get_declaration' (line 1483)
    get_declaration_508797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 44), 'get_declaration', False)
    # Calling get_declaration(args, kwargs) (line 1483)
    get_declaration_call_result_508805 = invoke(stypy.reporting.localization.Localization(__file__, 1483, 44), get_declaration_508797, *[ufunc_508798, c_name_508799, c_proto_508800, cy_proto_508801, header_508802, proto_h_filename_508803], **kwargs_508804)
    
    # Obtaining the member '__getitem__' of a type (line 1483)
    getitem___508806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1483, 16), get_declaration_call_result_508805, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1483)
    subscript_call_result_508807 = invoke(stypy.reporting.localization.Localization(__file__, 1483, 16), getitem___508806, int_508796)
    
    # Assigning a type to the variable 'tuple_var_assignment_504030' (line 1483)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1483, 16), 'tuple_var_assignment_504030', subscript_call_result_508807)
    
    # Assigning a Name to a Name (line 1483):
    # Getting the type of 'tuple_var_assignment_504028' (line 1483)
    tuple_var_assignment_504028_508808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 16), 'tuple_var_assignment_504028')
    # Assigning a type to the variable 'item_defs' (line 1483)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1483, 16), 'item_defs', tuple_var_assignment_504028_508808)
    
    # Assigning a Name to a Name (line 1483):
    # Getting the type of 'tuple_var_assignment_504029' (line 1483)
    tuple_var_assignment_504029_508809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 16), 'tuple_var_assignment_504029')
    # Assigning a type to the variable 'item_defs_h' (line 1483)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1483, 27), 'item_defs_h', tuple_var_assignment_504029_508809)
    
    # Assigning a Name to a Name (line 1483):
    # Getting the type of 'tuple_var_assignment_504030' (line 1483)
    tuple_var_assignment_504030_508810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 16), 'tuple_var_assignment_504030')
    # Assigning a type to the variable '_' (line 1483)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1483, 40), '_', tuple_var_assignment_504030_508810)
    
    # Call to extend(...): (line 1485)
    # Processing the call arguments (line 1485)
    # Getting the type of 'item_defs' (line 1485)
    item_defs_508813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1485, 28), 'item_defs', False)
    # Processing the call keyword arguments (line 1485)
    kwargs_508814 = {}
    # Getting the type of 'defs' (line 1485)
    defs_508811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1485, 16), 'defs', False)
    # Obtaining the member 'extend' of a type (line 1485)
    extend_508812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1485, 16), defs_508811, 'extend')
    # Calling extend(args, kwargs) (line 1485)
    extend_call_result_508815 = invoke(stypy.reporting.localization.Localization(__file__, 1485, 16), extend_508812, *[item_defs_508813], **kwargs_508814)
    
    
    # Call to extend(...): (line 1486)
    # Processing the call arguments (line 1486)
    # Getting the type of 'item_defs_h' (line 1486)
    item_defs_h_508818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 30), 'item_defs_h', False)
    # Processing the call keyword arguments (line 1486)
    kwargs_508819 = {}
    # Getting the type of 'defs_h' (line 1486)
    defs_h_508816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 16), 'defs_h', False)
    # Obtaining the member 'extend' of a type (line 1486)
    extend_508817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1486, 16), defs_h_508816, 'extend')
    # Calling extend(args, kwargs) (line 1486)
    extend_call_result_508820 = invoke(stypy.reporting.localization.Localization(__file__, 1486, 16), extend_508817, *[item_defs_h_508818], **kwargs_508819)
    
    # SSA join for if statement (line 1466)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1489):
    
    # Assigning a Call to a Name (line 1489):
    
    # Call to generate(...): (line 1489)
    # Processing the call arguments (line 1489)
    # Getting the type of 'all_loops' (line 1489)
    all_loops_508823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 27), 'all_loops', False)
    # Processing the call keyword arguments (line 1489)
    kwargs_508824 = {}
    # Getting the type of 'ufunc' (line 1489)
    ufunc_508821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 12), 'ufunc', False)
    # Obtaining the member 'generate' of a type (line 1489)
    generate_508822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1489, 12), ufunc_508821, 'generate')
    # Calling generate(args, kwargs) (line 1489)
    generate_call_result_508825 = invoke(stypy.reporting.localization.Localization(__file__, 1489, 12), generate_508822, *[all_loops_508823], **kwargs_508824)
    
    # Assigning a type to the variable 't' (line 1489)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1489, 8), 't', generate_call_result_508825)
    
    # Getting the type of 'toplevel' (line 1490)
    toplevel_508826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1490, 8), 'toplevel')
    # Getting the type of 't' (line 1490)
    t_508827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1490, 20), 't')
    str_508828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1490, 24), 'str', '\n')
    # Applying the binary operator '+' (line 1490)
    result_add_508829 = python_operator(stypy.reporting.localization.Localization(__file__, 1490, 20), '+', t_508827, str_508828)
    
    # Applying the binary operator '+=' (line 1490)
    result_iadd_508830 = python_operator(stypy.reporting.localization.Localization(__file__, 1490, 8), '+=', toplevel_508826, result_add_508829)
    # Assigning a type to the variable 'toplevel' (line 1490)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1490, 8), 'toplevel', result_iadd_508830)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1493):
    
    # Assigning a Call to a Name (line 1493):
    
    # Call to join(...): (line 1493)
    # Processing the call arguments (line 1493)
    
    # Call to sorted(...): (line 1493)
    # Processing the call arguments (line 1493)
    
    # Call to values(...): (line 1493)
    # Processing the call keyword arguments (line 1493)
    kwargs_508836 = {}
    # Getting the type of 'all_loops' (line 1493)
    all_loops_508834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 32), 'all_loops', False)
    # Obtaining the member 'values' of a type (line 1493)
    values_508835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1493, 32), all_loops_508834, 'values')
    # Calling values(args, kwargs) (line 1493)
    values_call_result_508837 = invoke(stypy.reporting.localization.Localization(__file__, 1493, 32), values_508835, *[], **kwargs_508836)
    
    # Processing the call keyword arguments (line 1493)
    kwargs_508838 = {}
    # Getting the type of 'sorted' (line 1493)
    sorted_508833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 25), 'sorted', False)
    # Calling sorted(args, kwargs) (line 1493)
    sorted_call_result_508839 = invoke(stypy.reporting.localization.Localization(__file__, 1493, 25), sorted_508833, *[values_call_result_508837], **kwargs_508838)
    
    # Getting the type of 'defs' (line 1493)
    defs_508840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 54), 'defs', False)
    # Applying the binary operator '+' (line 1493)
    result_add_508841 = python_operator(stypy.reporting.localization.Localization(__file__, 1493, 25), '+', sorted_call_result_508839, defs_508840)
    
    
    # Obtaining an instance of the builtin type 'list' (line 1493)
    list_508842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1493, 61), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1493)
    # Adding element type (line 1493)
    # Getting the type of 'toplevel' (line 1493)
    toplevel_508843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 62), 'toplevel', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1493, 61), list_508842, toplevel_508843)
    
    # Applying the binary operator '+' (line 1493)
    result_add_508844 = python_operator(stypy.reporting.localization.Localization(__file__, 1493, 59), '+', result_add_508841, list_508842)
    
    # Processing the call keyword arguments (line 1493)
    kwargs_508845 = {}
    str_508831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1493, 15), 'str', '\n')
    # Obtaining the member 'join' of a type (line 1493)
    join_508832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1493, 15), str_508831, 'join')
    # Calling join(args, kwargs) (line 1493)
    join_call_result_508846 = invoke(stypy.reporting.localization.Localization(__file__, 1493, 15), join_508832, *[result_add_508844], **kwargs_508845)
    
    # Assigning a type to the variable 'toplevel' (line 1493)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1493, 4), 'toplevel', join_call_result_508846)
    
    # Call to open(...): (line 1495)
    # Processing the call arguments (line 1495)
    # Getting the type of 'filename' (line 1495)
    filename_508848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 14), 'filename', False)
    str_508849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1495, 24), 'str', 'w')
    # Processing the call keyword arguments (line 1495)
    kwargs_508850 = {}
    # Getting the type of 'open' (line 1495)
    open_508847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 9), 'open', False)
    # Calling open(args, kwargs) (line 1495)
    open_call_result_508851 = invoke(stypy.reporting.localization.Localization(__file__, 1495, 9), open_508847, *[filename_508848, str_508849], **kwargs_508850)
    
    with_508852 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1495, 9), open_call_result_508851, 'with parameter', '__enter__', '__exit__')

    if with_508852:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1495)
        enter___508853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1495, 9), open_call_result_508851, '__enter__')
        with_enter_508854 = invoke(stypy.reporting.localization.Localization(__file__, 1495, 9), enter___508853)
        # Assigning a type to the variable 'f' (line 1495)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1495, 9), 'f', with_enter_508854)
        
        # Call to write(...): (line 1496)
        # Processing the call arguments (line 1496)
        # Getting the type of 'UFUNCS_EXTRA_CODE_COMMON' (line 1496)
        UFUNCS_EXTRA_CODE_COMMON_508857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 16), 'UFUNCS_EXTRA_CODE_COMMON', False)
        # Processing the call keyword arguments (line 1496)
        kwargs_508858 = {}
        # Getting the type of 'f' (line 1496)
        f_508855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1496)
        write_508856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1496, 8), f_508855, 'write')
        # Calling write(args, kwargs) (line 1496)
        write_call_result_508859 = invoke(stypy.reporting.localization.Localization(__file__, 1496, 8), write_508856, *[UFUNCS_EXTRA_CODE_COMMON_508857], **kwargs_508858)
        
        
        # Call to write(...): (line 1497)
        # Processing the call arguments (line 1497)
        # Getting the type of 'UFUNCS_EXTRA_CODE' (line 1497)
        UFUNCS_EXTRA_CODE_508862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 16), 'UFUNCS_EXTRA_CODE', False)
        # Processing the call keyword arguments (line 1497)
        kwargs_508863 = {}
        # Getting the type of 'f' (line 1497)
        f_508860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1497)
        write_508861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1497, 8), f_508860, 'write')
        # Calling write(args, kwargs) (line 1497)
        write_call_result_508864 = invoke(stypy.reporting.localization.Localization(__file__, 1497, 8), write_508861, *[UFUNCS_EXTRA_CODE_508862], **kwargs_508863)
        
        
        # Call to write(...): (line 1498)
        # Processing the call arguments (line 1498)
        str_508867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1498, 16), 'str', '\n')
        # Processing the call keyword arguments (line 1498)
        kwargs_508868 = {}
        # Getting the type of 'f' (line 1498)
        f_508865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1498)
        write_508866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1498, 8), f_508865, 'write')
        # Calling write(args, kwargs) (line 1498)
        write_call_result_508869 = invoke(stypy.reporting.localization.Localization(__file__, 1498, 8), write_508866, *[str_508867], **kwargs_508868)
        
        
        # Call to write(...): (line 1499)
        # Processing the call arguments (line 1499)
        # Getting the type of 'toplevel' (line 1499)
        toplevel_508872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 16), 'toplevel', False)
        # Processing the call keyword arguments (line 1499)
        kwargs_508873 = {}
        # Getting the type of 'f' (line 1499)
        f_508870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1499)
        write_508871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1499, 8), f_508870, 'write')
        # Calling write(args, kwargs) (line 1499)
        write_call_result_508874 = invoke(stypy.reporting.localization.Localization(__file__, 1499, 8), write_508871, *[toplevel_508872], **kwargs_508873)
        
        
        # Call to write(...): (line 1500)
        # Processing the call arguments (line 1500)
        # Getting the type of 'UFUNCS_EXTRA_CODE_BOTTOM' (line 1500)
        UFUNCS_EXTRA_CODE_BOTTOM_508877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 16), 'UFUNCS_EXTRA_CODE_BOTTOM', False)
        # Processing the call keyword arguments (line 1500)
        kwargs_508878 = {}
        # Getting the type of 'f' (line 1500)
        f_508875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1500)
        write_508876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1500, 8), f_508875, 'write')
        # Calling write(args, kwargs) (line 1500)
        write_call_result_508879 = invoke(stypy.reporting.localization.Localization(__file__, 1500, 8), write_508876, *[UFUNCS_EXTRA_CODE_BOTTOM_508877], **kwargs_508878)
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1495)
        exit___508880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1495, 9), open_call_result_508851, '__exit__')
        with_exit_508881 = invoke(stypy.reporting.localization.Localization(__file__, 1495, 9), exit___508880, None, None, None)

    
    # Assigning a Call to a Name (line 1502):
    
    # Assigning a Call to a Name (line 1502):
    
    # Call to unique(...): (line 1502)
    # Processing the call arguments (line 1502)
    # Getting the type of 'defs_h' (line 1502)
    defs_h_508883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 20), 'defs_h', False)
    # Processing the call keyword arguments (line 1502)
    kwargs_508884 = {}
    # Getting the type of 'unique' (line 1502)
    unique_508882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 13), 'unique', False)
    # Calling unique(args, kwargs) (line 1502)
    unique_call_result_508885 = invoke(stypy.reporting.localization.Localization(__file__, 1502, 13), unique_508882, *[defs_h_508883], **kwargs_508884)
    
    # Assigning a type to the variable 'defs_h' (line 1502)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1502, 4), 'defs_h', unique_call_result_508885)
    
    # Call to open(...): (line 1503)
    # Processing the call arguments (line 1503)
    # Getting the type of 'proto_h_filename' (line 1503)
    proto_h_filename_508887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 14), 'proto_h_filename', False)
    str_508888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1503, 32), 'str', 'w')
    # Processing the call keyword arguments (line 1503)
    kwargs_508889 = {}
    # Getting the type of 'open' (line 1503)
    open_508886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 9), 'open', False)
    # Calling open(args, kwargs) (line 1503)
    open_call_result_508890 = invoke(stypy.reporting.localization.Localization(__file__, 1503, 9), open_508886, *[proto_h_filename_508887, str_508888], **kwargs_508889)
    
    with_508891 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1503, 9), open_call_result_508890, 'with parameter', '__enter__', '__exit__')

    if with_508891:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1503)
        enter___508892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1503, 9), open_call_result_508890, '__enter__')
        with_enter_508893 = invoke(stypy.reporting.localization.Localization(__file__, 1503, 9), enter___508892)
        # Assigning a type to the variable 'f' (line 1503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1503, 9), 'f', with_enter_508893)
        
        # Call to write(...): (line 1504)
        # Processing the call arguments (line 1504)
        str_508896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1504, 16), 'str', '#ifndef UFUNCS_PROTO_H\n#define UFUNCS_PROTO_H 1\n')
        # Processing the call keyword arguments (line 1504)
        kwargs_508897 = {}
        # Getting the type of 'f' (line 1504)
        f_508894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1504)
        write_508895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1504, 8), f_508894, 'write')
        # Calling write(args, kwargs) (line 1504)
        write_call_result_508898 = invoke(stypy.reporting.localization.Localization(__file__, 1504, 8), write_508895, *[str_508896], **kwargs_508897)
        
        
        # Call to write(...): (line 1505)
        # Processing the call arguments (line 1505)
        
        # Call to join(...): (line 1505)
        # Processing the call arguments (line 1505)
        # Getting the type of 'defs_h' (line 1505)
        defs_h_508903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 26), 'defs_h', False)
        # Processing the call keyword arguments (line 1505)
        kwargs_508904 = {}
        str_508901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1505, 16), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1505)
        join_508902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1505, 16), str_508901, 'join')
        # Calling join(args, kwargs) (line 1505)
        join_call_result_508905 = invoke(stypy.reporting.localization.Localization(__file__, 1505, 16), join_508902, *[defs_h_508903], **kwargs_508904)
        
        # Processing the call keyword arguments (line 1505)
        kwargs_508906 = {}
        # Getting the type of 'f' (line 1505)
        f_508899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1505)
        write_508900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1505, 8), f_508899, 'write')
        # Calling write(args, kwargs) (line 1505)
        write_call_result_508907 = invoke(stypy.reporting.localization.Localization(__file__, 1505, 8), write_508900, *[join_call_result_508905], **kwargs_508906)
        
        
        # Call to write(...): (line 1506)
        # Processing the call arguments (line 1506)
        str_508910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1506, 16), 'str', '\n#endif\n')
        # Processing the call keyword arguments (line 1506)
        kwargs_508911 = {}
        # Getting the type of 'f' (line 1506)
        f_508908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1506, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1506)
        write_508909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1506, 8), f_508908, 'write')
        # Calling write(args, kwargs) (line 1506)
        write_call_result_508912 = invoke(stypy.reporting.localization.Localization(__file__, 1506, 8), write_508909, *[str_508910], **kwargs_508911)
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1503)
        exit___508913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1503, 9), open_call_result_508890, '__exit__')
        with_exit_508914 = invoke(stypy.reporting.localization.Localization(__file__, 1503, 9), exit___508913, None, None, None)

    
    # Assigning a Call to a Name (line 1508):
    
    # Assigning a Call to a Name (line 1508):
    
    # Call to unique(...): (line 1508)
    # Processing the call arguments (line 1508)
    # Getting the type of 'cxx_defs_h' (line 1508)
    cxx_defs_h_508916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 24), 'cxx_defs_h', False)
    # Processing the call keyword arguments (line 1508)
    kwargs_508917 = {}
    # Getting the type of 'unique' (line 1508)
    unique_508915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 17), 'unique', False)
    # Calling unique(args, kwargs) (line 1508)
    unique_call_result_508918 = invoke(stypy.reporting.localization.Localization(__file__, 1508, 17), unique_508915, *[cxx_defs_h_508916], **kwargs_508917)
    
    # Assigning a type to the variable 'cxx_defs_h' (line 1508)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1508, 4), 'cxx_defs_h', unique_call_result_508918)
    
    # Call to open(...): (line 1509)
    # Processing the call arguments (line 1509)
    # Getting the type of 'cxx_proto_h_filename' (line 1509)
    cxx_proto_h_filename_508920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 14), 'cxx_proto_h_filename', False)
    str_508921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1509, 36), 'str', 'w')
    # Processing the call keyword arguments (line 1509)
    kwargs_508922 = {}
    # Getting the type of 'open' (line 1509)
    open_508919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 9), 'open', False)
    # Calling open(args, kwargs) (line 1509)
    open_call_result_508923 = invoke(stypy.reporting.localization.Localization(__file__, 1509, 9), open_508919, *[cxx_proto_h_filename_508920, str_508921], **kwargs_508922)
    
    with_508924 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1509, 9), open_call_result_508923, 'with parameter', '__enter__', '__exit__')

    if with_508924:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1509)
        enter___508925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 9), open_call_result_508923, '__enter__')
        with_enter_508926 = invoke(stypy.reporting.localization.Localization(__file__, 1509, 9), enter___508925)
        # Assigning a type to the variable 'f' (line 1509)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1509, 9), 'f', with_enter_508926)
        
        # Call to write(...): (line 1510)
        # Processing the call arguments (line 1510)
        str_508929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1510, 16), 'str', '#ifndef UFUNCS_PROTO_H\n#define UFUNCS_PROTO_H 1\n')
        # Processing the call keyword arguments (line 1510)
        kwargs_508930 = {}
        # Getting the type of 'f' (line 1510)
        f_508927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1510)
        write_508928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 8), f_508927, 'write')
        # Calling write(args, kwargs) (line 1510)
        write_call_result_508931 = invoke(stypy.reporting.localization.Localization(__file__, 1510, 8), write_508928, *[str_508929], **kwargs_508930)
        
        
        # Call to write(...): (line 1511)
        # Processing the call arguments (line 1511)
        
        # Call to join(...): (line 1511)
        # Processing the call arguments (line 1511)
        # Getting the type of 'cxx_defs_h' (line 1511)
        cxx_defs_h_508936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 26), 'cxx_defs_h', False)
        # Processing the call keyword arguments (line 1511)
        kwargs_508937 = {}
        str_508934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1511, 16), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1511)
        join_508935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1511, 16), str_508934, 'join')
        # Calling join(args, kwargs) (line 1511)
        join_call_result_508938 = invoke(stypy.reporting.localization.Localization(__file__, 1511, 16), join_508935, *[cxx_defs_h_508936], **kwargs_508937)
        
        # Processing the call keyword arguments (line 1511)
        kwargs_508939 = {}
        # Getting the type of 'f' (line 1511)
        f_508932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1511)
        write_508933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1511, 8), f_508932, 'write')
        # Calling write(args, kwargs) (line 1511)
        write_call_result_508940 = invoke(stypy.reporting.localization.Localization(__file__, 1511, 8), write_508933, *[join_call_result_508938], **kwargs_508939)
        
        
        # Call to write(...): (line 1512)
        # Processing the call arguments (line 1512)
        str_508943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1512, 16), 'str', '\n#endif\n')
        # Processing the call keyword arguments (line 1512)
        kwargs_508944 = {}
        # Getting the type of 'f' (line 1512)
        f_508941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1512)
        write_508942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1512, 8), f_508941, 'write')
        # Calling write(args, kwargs) (line 1512)
        write_call_result_508945 = invoke(stypy.reporting.localization.Localization(__file__, 1512, 8), write_508942, *[str_508943], **kwargs_508944)
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1509)
        exit___508946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 9), open_call_result_508923, '__exit__')
        with_exit_508947 = invoke(stypy.reporting.localization.Localization(__file__, 1509, 9), exit___508946, None, None, None)

    
    # Call to open(...): (line 1514)
    # Processing the call arguments (line 1514)
    # Getting the type of 'cxx_pyx_filename' (line 1514)
    cxx_pyx_filename_508949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 14), 'cxx_pyx_filename', False)
    str_508950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1514, 32), 'str', 'w')
    # Processing the call keyword arguments (line 1514)
    kwargs_508951 = {}
    # Getting the type of 'open' (line 1514)
    open_508948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 9), 'open', False)
    # Calling open(args, kwargs) (line 1514)
    open_call_result_508952 = invoke(stypy.reporting.localization.Localization(__file__, 1514, 9), open_508948, *[cxx_pyx_filename_508949, str_508950], **kwargs_508951)
    
    with_508953 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1514, 9), open_call_result_508952, 'with parameter', '__enter__', '__exit__')

    if with_508953:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1514)
        enter___508954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1514, 9), open_call_result_508952, '__enter__')
        with_enter_508955 = invoke(stypy.reporting.localization.Localization(__file__, 1514, 9), enter___508954)
        # Assigning a type to the variable 'f' (line 1514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1514, 9), 'f', with_enter_508955)
        
        # Call to write(...): (line 1515)
        # Processing the call arguments (line 1515)
        # Getting the type of 'UFUNCS_EXTRA_CODE_COMMON' (line 1515)
        UFUNCS_EXTRA_CODE_COMMON_508958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 16), 'UFUNCS_EXTRA_CODE_COMMON', False)
        # Processing the call keyword arguments (line 1515)
        kwargs_508959 = {}
        # Getting the type of 'f' (line 1515)
        f_508956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1515)
        write_508957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 8), f_508956, 'write')
        # Calling write(args, kwargs) (line 1515)
        write_call_result_508960 = invoke(stypy.reporting.localization.Localization(__file__, 1515, 8), write_508957, *[UFUNCS_EXTRA_CODE_COMMON_508958], **kwargs_508959)
        
        
        # Call to write(...): (line 1516)
        # Processing the call arguments (line 1516)
        str_508963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1516, 16), 'str', '\n')
        # Processing the call keyword arguments (line 1516)
        kwargs_508964 = {}
        # Getting the type of 'f' (line 1516)
        f_508961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1516, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1516)
        write_508962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1516, 8), f_508961, 'write')
        # Calling write(args, kwargs) (line 1516)
        write_call_result_508965 = invoke(stypy.reporting.localization.Localization(__file__, 1516, 8), write_508962, *[str_508963], **kwargs_508964)
        
        
        # Call to write(...): (line 1517)
        # Processing the call arguments (line 1517)
        
        # Call to join(...): (line 1517)
        # Processing the call arguments (line 1517)
        # Getting the type of 'cxx_defs' (line 1517)
        cxx_defs_508970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1517, 26), 'cxx_defs', False)
        # Processing the call keyword arguments (line 1517)
        kwargs_508971 = {}
        str_508968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1517, 16), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1517)
        join_508969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1517, 16), str_508968, 'join')
        # Calling join(args, kwargs) (line 1517)
        join_call_result_508972 = invoke(stypy.reporting.localization.Localization(__file__, 1517, 16), join_508969, *[cxx_defs_508970], **kwargs_508971)
        
        # Processing the call keyword arguments (line 1517)
        kwargs_508973 = {}
        # Getting the type of 'f' (line 1517)
        f_508966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1517, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1517)
        write_508967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1517, 8), f_508966, 'write')
        # Calling write(args, kwargs) (line 1517)
        write_call_result_508974 = invoke(stypy.reporting.localization.Localization(__file__, 1517, 8), write_508967, *[join_call_result_508972], **kwargs_508973)
        
        
        # Call to write(...): (line 1518)
        # Processing the call arguments (line 1518)
        str_508977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1518, 16), 'str', '\n# distutils: language = c++\n')
        # Processing the call keyword arguments (line 1518)
        kwargs_508978 = {}
        # Getting the type of 'f' (line 1518)
        f_508975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1518, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1518)
        write_508976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1518, 8), f_508975, 'write')
        # Calling write(args, kwargs) (line 1518)
        write_call_result_508979 = invoke(stypy.reporting.localization.Localization(__file__, 1518, 8), write_508976, *[str_508977], **kwargs_508978)
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1514)
        exit___508980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1514, 9), open_call_result_508952, '__exit__')
        with_exit_508981 = invoke(stypy.reporting.localization.Localization(__file__, 1514, 9), exit___508980, None, None, None)

    
    # Call to open(...): (line 1520)
    # Processing the call arguments (line 1520)
    # Getting the type of 'cxx_pxd_filename' (line 1520)
    cxx_pxd_filename_508983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 14), 'cxx_pxd_filename', False)
    str_508984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1520, 32), 'str', 'w')
    # Processing the call keyword arguments (line 1520)
    kwargs_508985 = {}
    # Getting the type of 'open' (line 1520)
    open_508982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 9), 'open', False)
    # Calling open(args, kwargs) (line 1520)
    open_call_result_508986 = invoke(stypy.reporting.localization.Localization(__file__, 1520, 9), open_508982, *[cxx_pxd_filename_508983, str_508984], **kwargs_508985)
    
    with_508987 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1520, 9), open_call_result_508986, 'with parameter', '__enter__', '__exit__')

    if with_508987:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1520)
        enter___508988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1520, 9), open_call_result_508986, '__enter__')
        with_enter_508989 = invoke(stypy.reporting.localization.Localization(__file__, 1520, 9), enter___508988)
        # Assigning a type to the variable 'f' (line 1520)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1520, 9), 'f', with_enter_508989)
        
        # Call to write(...): (line 1521)
        # Processing the call arguments (line 1521)
        
        # Call to join(...): (line 1521)
        # Processing the call arguments (line 1521)
        # Getting the type of 'cxx_pxd_defs' (line 1521)
        cxx_pxd_defs_508994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 26), 'cxx_pxd_defs', False)
        # Processing the call keyword arguments (line 1521)
        kwargs_508995 = {}
        str_508992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1521, 16), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1521)
        join_508993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1521, 16), str_508992, 'join')
        # Calling join(args, kwargs) (line 1521)
        join_call_result_508996 = invoke(stypy.reporting.localization.Localization(__file__, 1521, 16), join_508993, *[cxx_pxd_defs_508994], **kwargs_508995)
        
        # Processing the call keyword arguments (line 1521)
        kwargs_508997 = {}
        # Getting the type of 'f' (line 1521)
        f_508990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1521)
        write_508991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1521, 8), f_508990, 'write')
        # Calling write(args, kwargs) (line 1521)
        write_call_result_508998 = invoke(stypy.reporting.localization.Localization(__file__, 1521, 8), write_508991, *[join_call_result_508996], **kwargs_508997)
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1520)
        exit___508999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1520, 9), open_call_result_508986, '__exit__')
        with_exit_509000 = invoke(stypy.reporting.localization.Localization(__file__, 1520, 9), exit___508999, None, None, None)

    
    # ################# End of 'generate_ufuncs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_ufuncs' in the type store
    # Getting the type of 'stypy_return_type' (line 1437)
    stypy_return_type_509001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1437, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_509001)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_ufuncs'
    return stypy_return_type_509001

# Assigning a type to the variable 'generate_ufuncs' (line 1437)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1437, 0), 'generate_ufuncs', generate_ufuncs)

@norecursion
def generate_fused_funcs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'generate_fused_funcs'
    module_type_store = module_type_store.open_function_context('generate_fused_funcs', 1524, 0, False)
    
    # Passed parameters checking function
    generate_fused_funcs.stypy_localization = localization
    generate_fused_funcs.stypy_type_of_self = None
    generate_fused_funcs.stypy_type_store = module_type_store
    generate_fused_funcs.stypy_function_name = 'generate_fused_funcs'
    generate_fused_funcs.stypy_param_names_list = ['modname', 'ufunc_fn_prefix', 'fused_funcs']
    generate_fused_funcs.stypy_varargs_param_name = None
    generate_fused_funcs.stypy_kwargs_param_name = None
    generate_fused_funcs.stypy_call_defaults = defaults
    generate_fused_funcs.stypy_call_varargs = varargs
    generate_fused_funcs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_fused_funcs', ['modname', 'ufunc_fn_prefix', 'fused_funcs'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_fused_funcs', localization, ['modname', 'ufunc_fn_prefix', 'fused_funcs'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_fused_funcs(...)' code ##################

    
    # Assigning a BinOp to a Name (line 1525):
    
    # Assigning a BinOp to a Name (line 1525):
    # Getting the type of 'modname' (line 1525)
    modname_509002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1525, 14), 'modname')
    str_509003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1525, 24), 'str', '.pxd')
    # Applying the binary operator '+' (line 1525)
    result_add_509004 = python_operator(stypy.reporting.localization.Localization(__file__, 1525, 14), '+', modname_509002, str_509003)
    
    # Assigning a type to the variable 'pxdfile' (line 1525)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1525, 4), 'pxdfile', result_add_509004)
    
    # Assigning a BinOp to a Name (line 1526):
    
    # Assigning a BinOp to a Name (line 1526):
    # Getting the type of 'modname' (line 1526)
    modname_509005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1526, 14), 'modname')
    str_509006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1526, 24), 'str', '.pyx')
    # Applying the binary operator '+' (line 1526)
    result_add_509007 = python_operator(stypy.reporting.localization.Localization(__file__, 1526, 14), '+', modname_509005, str_509006)
    
    # Assigning a type to the variable 'pyxfile' (line 1526)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1526, 4), 'pyxfile', result_add_509007)
    
    # Assigning a BinOp to a Name (line 1527):
    
    # Assigning a BinOp to a Name (line 1527):
    # Getting the type of 'ufunc_fn_prefix' (line 1527)
    ufunc_fn_prefix_509008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 23), 'ufunc_fn_prefix')
    str_509009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1527, 41), 'str', '_defs.h')
    # Applying the binary operator '+' (line 1527)
    result_add_509010 = python_operator(stypy.reporting.localization.Localization(__file__, 1527, 23), '+', ufunc_fn_prefix_509008, str_509009)
    
    # Assigning a type to the variable 'proto_h_filename' (line 1527)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1527, 4), 'proto_h_filename', result_add_509010)
    
    # Assigning a List to a Name (line 1529):
    
    # Assigning a List to a Name (line 1529):
    
    # Obtaining an instance of the builtin type 'list' (line 1529)
    list_509011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1529, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1529)
    
    # Assigning a type to the variable 'sources' (line 1529)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1529, 4), 'sources', list_509011)
    
    # Assigning a List to a Name (line 1530):
    
    # Assigning a List to a Name (line 1530):
    
    # Obtaining an instance of the builtin type 'list' (line 1530)
    list_509012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1530, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1530)
    
    # Assigning a type to the variable 'declarations' (line 1530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1530, 4), 'declarations', list_509012)
    
    # Assigning a List to a Name (line 1532):
    
    # Assigning a List to a Name (line 1532):
    
    # Obtaining an instance of the builtin type 'list' (line 1532)
    list_509013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1532, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1532)
    
    # Assigning a type to the variable 'bench_aux' (line 1532)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1532, 4), 'bench_aux', list_509013)
    
    # Assigning a Call to a Name (line 1533):
    
    # Assigning a Call to a Name (line 1533):
    
    # Call to set(...): (line 1533)
    # Processing the call keyword arguments (line 1533)
    kwargs_509015 = {}
    # Getting the type of 'set' (line 1533)
    set_509014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 18), 'set', False)
    # Calling set(args, kwargs) (line 1533)
    set_call_result_509016 = invoke(stypy.reporting.localization.Localization(__file__, 1533, 18), set_509014, *[], **kwargs_509015)
    
    # Assigning a type to the variable 'fused_types' (line 1533)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1533, 4), 'fused_types', set_call_result_509016)
    
    # Assigning a List to a Name (line 1535):
    
    # Assigning a List to a Name (line 1535):
    
    # Obtaining an instance of the builtin type 'list' (line 1535)
    list_509017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1535, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1535)
    
    # Assigning a type to the variable 'doc' (line 1535)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1535, 4), 'doc', list_509017)
    
    # Assigning a List to a Name (line 1536):
    
    # Assigning a List to a Name (line 1536):
    
    # Obtaining an instance of the builtin type 'list' (line 1536)
    list_509018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1536, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1536)
    
    # Assigning a type to the variable 'defs' (line 1536)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1536, 4), 'defs', list_509018)
    
    # Getting the type of 'fused_funcs' (line 1538)
    fused_funcs_509019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1538, 16), 'fused_funcs')
    # Testing the type of a for loop iterable (line 1538)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1538, 4), fused_funcs_509019)
    # Getting the type of the for loop variable (line 1538)
    for_loop_var_509020 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1538, 4), fused_funcs_509019)
    # Assigning a type to the variable 'func' (line 1538)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1538, 4), 'func', for_loop_var_509020)
    # SSA begins for a for statement (line 1538)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to startswith(...): (line 1539)
    # Processing the call arguments (line 1539)
    str_509024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1539, 32), 'str', '_')
    # Processing the call keyword arguments (line 1539)
    kwargs_509025 = {}
    # Getting the type of 'func' (line 1539)
    func_509021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1539, 11), 'func', False)
    # Obtaining the member 'name' of a type (line 1539)
    name_509022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1539, 11), func_509021, 'name')
    # Obtaining the member 'startswith' of a type (line 1539)
    startswith_509023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1539, 11), name_509022, 'startswith')
    # Calling startswith(args, kwargs) (line 1539)
    startswith_call_result_509026 = invoke(stypy.reporting.localization.Localization(__file__, 1539, 11), startswith_509023, *[str_509024], **kwargs_509025)
    
    # Testing the type of an if condition (line 1539)
    if_condition_509027 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1539, 8), startswith_call_result_509026)
    # Assigning a type to the variable 'if_condition_509027' (line 1539)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1539, 8), 'if_condition_509027', if_condition_509027)
    # SSA begins for if statement (line 1539)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1539)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 1546):
    
    # Assigning a Subscript to a Name (line 1546):
    
    # Obtaining the type of the subscript
    int_509028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1546, 8), 'int')
    
    # Call to generate(...): (line 1546)
    # Processing the call keyword arguments (line 1546)
    kwargs_509031 = {}
    # Getting the type of 'func' (line 1546)
    func_509029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 50), 'func', False)
    # Obtaining the member 'generate' of a type (line 1546)
    generate_509030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 50), func_509029, 'generate')
    # Calling generate(args, kwargs) (line 1546)
    generate_call_result_509032 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 50), generate_509030, *[], **kwargs_509031)
    
    # Obtaining the member '__getitem__' of a type (line 1546)
    getitem___509033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 8), generate_call_result_509032, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1546)
    subscript_call_result_509034 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 8), getitem___509033, int_509028)
    
    # Assigning a type to the variable 'tuple_var_assignment_504031' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504031', subscript_call_result_509034)
    
    # Assigning a Subscript to a Name (line 1546):
    
    # Obtaining the type of the subscript
    int_509035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1546, 8), 'int')
    
    # Call to generate(...): (line 1546)
    # Processing the call keyword arguments (line 1546)
    kwargs_509038 = {}
    # Getting the type of 'func' (line 1546)
    func_509036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 50), 'func', False)
    # Obtaining the member 'generate' of a type (line 1546)
    generate_509037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 50), func_509036, 'generate')
    # Calling generate(args, kwargs) (line 1546)
    generate_call_result_509039 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 50), generate_509037, *[], **kwargs_509038)
    
    # Obtaining the member '__getitem__' of a type (line 1546)
    getitem___509040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 8), generate_call_result_509039, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1546)
    subscript_call_result_509041 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 8), getitem___509040, int_509035)
    
    # Assigning a type to the variable 'tuple_var_assignment_504032' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504032', subscript_call_result_509041)
    
    # Assigning a Subscript to a Name (line 1546):
    
    # Obtaining the type of the subscript
    int_509042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1546, 8), 'int')
    
    # Call to generate(...): (line 1546)
    # Processing the call keyword arguments (line 1546)
    kwargs_509045 = {}
    # Getting the type of 'func' (line 1546)
    func_509043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 50), 'func', False)
    # Obtaining the member 'generate' of a type (line 1546)
    generate_509044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 50), func_509043, 'generate')
    # Calling generate(args, kwargs) (line 1546)
    generate_call_result_509046 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 50), generate_509044, *[], **kwargs_509045)
    
    # Obtaining the member '__getitem__' of a type (line 1546)
    getitem___509047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 8), generate_call_result_509046, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1546)
    subscript_call_result_509048 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 8), getitem___509047, int_509042)
    
    # Assigning a type to the variable 'tuple_var_assignment_504033' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504033', subscript_call_result_509048)
    
    # Assigning a Subscript to a Name (line 1546):
    
    # Obtaining the type of the subscript
    int_509049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1546, 8), 'int')
    
    # Call to generate(...): (line 1546)
    # Processing the call keyword arguments (line 1546)
    kwargs_509052 = {}
    # Getting the type of 'func' (line 1546)
    func_509050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 50), 'func', False)
    # Obtaining the member 'generate' of a type (line 1546)
    generate_509051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 50), func_509050, 'generate')
    # Calling generate(args, kwargs) (line 1546)
    generate_call_result_509053 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 50), generate_509051, *[], **kwargs_509052)
    
    # Obtaining the member '__getitem__' of a type (line 1546)
    getitem___509054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 8), generate_call_result_509053, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1546)
    subscript_call_result_509055 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 8), getitem___509054, int_509049)
    
    # Assigning a type to the variable 'tuple_var_assignment_504034' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504034', subscript_call_result_509055)
    
    # Assigning a Subscript to a Name (line 1546):
    
    # Obtaining the type of the subscript
    int_509056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1546, 8), 'int')
    
    # Call to generate(...): (line 1546)
    # Processing the call keyword arguments (line 1546)
    kwargs_509059 = {}
    # Getting the type of 'func' (line 1546)
    func_509057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 50), 'func', False)
    # Obtaining the member 'generate' of a type (line 1546)
    generate_509058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 50), func_509057, 'generate')
    # Calling generate(args, kwargs) (line 1546)
    generate_call_result_509060 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 50), generate_509058, *[], **kwargs_509059)
    
    # Obtaining the member '__getitem__' of a type (line 1546)
    getitem___509061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1546, 8), generate_call_result_509060, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1546)
    subscript_call_result_509062 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 8), getitem___509061, int_509056)
    
    # Assigning a type to the variable 'tuple_var_assignment_504035' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504035', subscript_call_result_509062)
    
    # Assigning a Name to a Name (line 1546):
    # Getting the type of 'tuple_var_assignment_504031' (line 1546)
    tuple_var_assignment_504031_509063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504031')
    # Assigning a type to the variable 'dec' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'dec', tuple_var_assignment_504031_509063)
    
    # Assigning a Name to a Name (line 1546):
    # Getting the type of 'tuple_var_assignment_504032' (line 1546)
    tuple_var_assignment_504032_509064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504032')
    # Assigning a type to the variable 'src' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 13), 'src', tuple_var_assignment_504032_509064)
    
    # Assigning a Name to a Name (line 1546):
    # Getting the type of 'tuple_var_assignment_504033' (line 1546)
    tuple_var_assignment_504033_509065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504033')
    # Assigning a type to the variable 'specs' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 18), 'specs', tuple_var_assignment_504033_509065)
    
    # Assigning a Name to a Name (line 1546):
    # Getting the type of 'tuple_var_assignment_504034' (line 1546)
    tuple_var_assignment_504034_509066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504034')
    # Assigning a type to the variable 'func_fused_types' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 25), 'func_fused_types', tuple_var_assignment_504034_509066)
    
    # Assigning a Name to a Name (line 1546):
    # Getting the type of 'tuple_var_assignment_504035' (line 1546)
    tuple_var_assignment_504035_509067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 8), 'tuple_var_assignment_504035')
    # Assigning a type to the variable 'wrap' (line 1546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 43), 'wrap', tuple_var_assignment_504035_509067)
    
    # Call to append(...): (line 1547)
    # Processing the call arguments (line 1547)
    # Getting the type of 'dec' (line 1547)
    dec_509070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1547, 28), 'dec', False)
    # Processing the call keyword arguments (line 1547)
    kwargs_509071 = {}
    # Getting the type of 'declarations' (line 1547)
    declarations_509068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1547, 8), 'declarations', False)
    # Obtaining the member 'append' of a type (line 1547)
    append_509069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1547, 8), declarations_509068, 'append')
    # Calling append(args, kwargs) (line 1547)
    append_call_result_509072 = invoke(stypy.reporting.localization.Localization(__file__, 1547, 8), append_509069, *[dec_509070], **kwargs_509071)
    
    
    # Call to append(...): (line 1548)
    # Processing the call arguments (line 1548)
    # Getting the type of 'src' (line 1548)
    src_509075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1548, 23), 'src', False)
    # Processing the call keyword arguments (line 1548)
    kwargs_509076 = {}
    # Getting the type of 'sources' (line 1548)
    sources_509073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1548, 8), 'sources', False)
    # Obtaining the member 'append' of a type (line 1548)
    append_509074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1548, 8), sources_509073, 'append')
    # Calling append(args, kwargs) (line 1548)
    append_call_result_509077 = invoke(stypy.reporting.localization.Localization(__file__, 1548, 8), append_509074, *[src_509075], **kwargs_509076)
    
    
    # Getting the type of 'wrap' (line 1549)
    wrap_509078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 11), 'wrap')
    # Testing the type of an if condition (line 1549)
    if_condition_509079 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1549, 8), wrap_509078)
    # Assigning a type to the variable 'if_condition_509079' (line 1549)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1549, 8), 'if_condition_509079', if_condition_509079)
    # SSA begins for if statement (line 1549)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 1550)
    # Processing the call arguments (line 1550)
    # Getting the type of 'wrap' (line 1550)
    wrap_509082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 27), 'wrap', False)
    # Processing the call keyword arguments (line 1550)
    kwargs_509083 = {}
    # Getting the type of 'sources' (line 1550)
    sources_509080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 12), 'sources', False)
    # Obtaining the member 'append' of a type (line 1550)
    append_509081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1550, 12), sources_509080, 'append')
    # Calling append(args, kwargs) (line 1550)
    append_call_result_509084 = invoke(stypy.reporting.localization.Localization(__file__, 1550, 12), append_509081, *[wrap_509082], **kwargs_509083)
    
    # SSA join for if statement (line 1549)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to update(...): (line 1551)
    # Processing the call arguments (line 1551)
    # Getting the type of 'func_fused_types' (line 1551)
    func_fused_types_509087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1551, 27), 'func_fused_types', False)
    # Processing the call keyword arguments (line 1551)
    kwargs_509088 = {}
    # Getting the type of 'fused_types' (line 1551)
    fused_types_509085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1551, 8), 'fused_types', False)
    # Obtaining the member 'update' of a type (line 1551)
    update_509086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1551, 8), fused_types_509085, 'update')
    # Calling update(args, kwargs) (line 1551)
    update_call_result_509089 = invoke(stypy.reporting.localization.Localization(__file__, 1551, 8), update_509086, *[func_fused_types_509087], **kwargs_509088)
    
    
    # Assigning a Call to a Name (line 1554):
    
    # Assigning a Call to a Name (line 1554):
    
    # Call to get_prototypes(...): (line 1554)
    # Processing the call keyword arguments (line 1554)
    # Getting the type of 'True' (line 1554)
    True_509092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1554, 51), 'True', False)
    keyword_509093 = True_509092
    kwargs_509094 = {'nptypes_for_h': keyword_509093}
    # Getting the type of 'func' (line 1554)
    func_509090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1554, 17), 'func', False)
    # Obtaining the member 'get_prototypes' of a type (line 1554)
    get_prototypes_509091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1554, 17), func_509090, 'get_prototypes')
    # Calling get_prototypes(args, kwargs) (line 1554)
    get_prototypes_call_result_509095 = invoke(stypy.reporting.localization.Localization(__file__, 1554, 17), get_prototypes_509091, *[], **kwargs_509094)
    
    # Assigning a type to the variable 'cfuncs' (line 1554)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1554, 8), 'cfuncs', get_prototypes_call_result_509095)
    
    # Getting the type of 'cfuncs' (line 1555)
    cfuncs_509096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1555, 49), 'cfuncs')
    # Testing the type of a for loop iterable (line 1555)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1555, 8), cfuncs_509096)
    # Getting the type of the for loop variable (line 1555)
    for_loop_var_509097 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1555, 8), cfuncs_509096)
    # Assigning a type to the variable 'c_name' (line 1555)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1555, 8), 'c_name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1555, 8), for_loop_var_509097))
    # Assigning a type to the variable 'c_proto' (line 1555)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1555, 8), 'c_proto', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1555, 8), for_loop_var_509097))
    # Assigning a type to the variable 'cy_proto' (line 1555)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1555, 8), 'cy_proto', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1555, 8), for_loop_var_509097))
    # Assigning a type to the variable 'header' (line 1555)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1555, 8), 'header', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1555, 8), for_loop_var_509097))
    # SSA begins for a for statement (line 1555)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to endswith(...): (line 1556)
    # Processing the call arguments (line 1556)
    str_509100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1556, 31), 'str', '++')
    # Processing the call keyword arguments (line 1556)
    kwargs_509101 = {}
    # Getting the type of 'header' (line 1556)
    header_509098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 15), 'header', False)
    # Obtaining the member 'endswith' of a type (line 1556)
    endswith_509099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1556, 15), header_509098, 'endswith')
    # Calling endswith(args, kwargs) (line 1556)
    endswith_call_result_509102 = invoke(stypy.reporting.localization.Localization(__file__, 1556, 15), endswith_509099, *[str_509100], **kwargs_509101)
    
    # Testing the type of an if condition (line 1556)
    if_condition_509103 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1556, 12), endswith_call_result_509102)
    # Assigning a type to the variable 'if_condition_509103' (line 1556)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1556, 12), 'if_condition_509103', if_condition_509103)
    # SSA begins for if statement (line 1556)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1556)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 1559):
    
    # Assigning a Subscript to a Name (line 1559):
    
    # Obtaining the type of the subscript
    int_509104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1559, 12), 'int')
    
    # Call to get_declaration(...): (line 1559)
    # Processing the call arguments (line 1559)
    # Getting the type of 'func' (line 1559)
    func_509106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 46), 'func', False)
    # Getting the type of 'c_name' (line 1559)
    c_name_509107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 52), 'c_name', False)
    # Getting the type of 'c_proto' (line 1559)
    c_proto_509108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 60), 'c_proto', False)
    # Getting the type of 'cy_proto' (line 1560)
    cy_proto_509109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 46), 'cy_proto', False)
    # Getting the type of 'header' (line 1560)
    header_509110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 56), 'header', False)
    # Getting the type of 'proto_h_filename' (line 1561)
    proto_h_filename_509111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 46), 'proto_h_filename', False)
    # Processing the call keyword arguments (line 1559)
    kwargs_509112 = {}
    # Getting the type of 'get_declaration' (line 1559)
    get_declaration_509105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 30), 'get_declaration', False)
    # Calling get_declaration(args, kwargs) (line 1559)
    get_declaration_call_result_509113 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 30), get_declaration_509105, *[func_509106, c_name_509107, c_proto_509108, cy_proto_509109, header_509110, proto_h_filename_509111], **kwargs_509112)
    
    # Obtaining the member '__getitem__' of a type (line 1559)
    getitem___509114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 12), get_declaration_call_result_509113, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1559)
    subscript_call_result_509115 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 12), getitem___509114, int_509104)
    
    # Assigning a type to the variable 'tuple_var_assignment_504036' (line 1559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 12), 'tuple_var_assignment_504036', subscript_call_result_509115)
    
    # Assigning a Subscript to a Name (line 1559):
    
    # Obtaining the type of the subscript
    int_509116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1559, 12), 'int')
    
    # Call to get_declaration(...): (line 1559)
    # Processing the call arguments (line 1559)
    # Getting the type of 'func' (line 1559)
    func_509118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 46), 'func', False)
    # Getting the type of 'c_name' (line 1559)
    c_name_509119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 52), 'c_name', False)
    # Getting the type of 'c_proto' (line 1559)
    c_proto_509120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 60), 'c_proto', False)
    # Getting the type of 'cy_proto' (line 1560)
    cy_proto_509121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 46), 'cy_proto', False)
    # Getting the type of 'header' (line 1560)
    header_509122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 56), 'header', False)
    # Getting the type of 'proto_h_filename' (line 1561)
    proto_h_filename_509123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 46), 'proto_h_filename', False)
    # Processing the call keyword arguments (line 1559)
    kwargs_509124 = {}
    # Getting the type of 'get_declaration' (line 1559)
    get_declaration_509117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 30), 'get_declaration', False)
    # Calling get_declaration(args, kwargs) (line 1559)
    get_declaration_call_result_509125 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 30), get_declaration_509117, *[func_509118, c_name_509119, c_proto_509120, cy_proto_509121, header_509122, proto_h_filename_509123], **kwargs_509124)
    
    # Obtaining the member '__getitem__' of a type (line 1559)
    getitem___509126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 12), get_declaration_call_result_509125, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1559)
    subscript_call_result_509127 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 12), getitem___509126, int_509116)
    
    # Assigning a type to the variable 'tuple_var_assignment_504037' (line 1559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 12), 'tuple_var_assignment_504037', subscript_call_result_509127)
    
    # Assigning a Subscript to a Name (line 1559):
    
    # Obtaining the type of the subscript
    int_509128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1559, 12), 'int')
    
    # Call to get_declaration(...): (line 1559)
    # Processing the call arguments (line 1559)
    # Getting the type of 'func' (line 1559)
    func_509130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 46), 'func', False)
    # Getting the type of 'c_name' (line 1559)
    c_name_509131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 52), 'c_name', False)
    # Getting the type of 'c_proto' (line 1559)
    c_proto_509132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 60), 'c_proto', False)
    # Getting the type of 'cy_proto' (line 1560)
    cy_proto_509133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 46), 'cy_proto', False)
    # Getting the type of 'header' (line 1560)
    header_509134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 56), 'header', False)
    # Getting the type of 'proto_h_filename' (line 1561)
    proto_h_filename_509135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 46), 'proto_h_filename', False)
    # Processing the call keyword arguments (line 1559)
    kwargs_509136 = {}
    # Getting the type of 'get_declaration' (line 1559)
    get_declaration_509129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 30), 'get_declaration', False)
    # Calling get_declaration(args, kwargs) (line 1559)
    get_declaration_call_result_509137 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 30), get_declaration_509129, *[func_509130, c_name_509131, c_proto_509132, cy_proto_509133, header_509134, proto_h_filename_509135], **kwargs_509136)
    
    # Obtaining the member '__getitem__' of a type (line 1559)
    getitem___509138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 12), get_declaration_call_result_509137, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1559)
    subscript_call_result_509139 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 12), getitem___509138, int_509128)
    
    # Assigning a type to the variable 'tuple_var_assignment_504038' (line 1559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 12), 'tuple_var_assignment_504038', subscript_call_result_509139)
    
    # Assigning a Name to a Name (line 1559):
    # Getting the type of 'tuple_var_assignment_504036' (line 1559)
    tuple_var_assignment_504036_509140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 12), 'tuple_var_assignment_504036')
    # Assigning a type to the variable 'item_defs' (line 1559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 12), 'item_defs', tuple_var_assignment_504036_509140)
    
    # Assigning a Name to a Name (line 1559):
    # Getting the type of 'tuple_var_assignment_504037' (line 1559)
    tuple_var_assignment_504037_509141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 12), 'tuple_var_assignment_504037')
    # Assigning a type to the variable '_' (line 1559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 23), '_', tuple_var_assignment_504037_509141)
    
    # Assigning a Name to a Name (line 1559):
    # Getting the type of 'tuple_var_assignment_504038' (line 1559)
    tuple_var_assignment_504038_509142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 12), 'tuple_var_assignment_504038')
    # Assigning a type to the variable '_' (line 1559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 26), '_', tuple_var_assignment_504038_509142)
    
    # Call to extend(...): (line 1562)
    # Processing the call arguments (line 1562)
    # Getting the type of 'item_defs' (line 1562)
    item_defs_509145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 24), 'item_defs', False)
    # Processing the call keyword arguments (line 1562)
    kwargs_509146 = {}
    # Getting the type of 'defs' (line 1562)
    defs_509143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 12), 'defs', False)
    # Obtaining the member 'extend' of a type (line 1562)
    extend_509144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1562, 12), defs_509143, 'extend')
    # Calling extend(args, kwargs) (line 1562)
    extend_call_result_509147 = invoke(stypy.reporting.localization.Localization(__file__, 1562, 12), extend_509144, *[item_defs_509145], **kwargs_509146)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 1565)
    # Processing the call arguments (line 1565)
    
    # Call to generate_doc(...): (line 1565)
    # Processing the call arguments (line 1565)
    # Getting the type of 'func' (line 1565)
    func_509151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 32), 'func', False)
    # Obtaining the member 'name' of a type (line 1565)
    name_509152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1565, 32), func_509151, 'name')
    # Getting the type of 'specs' (line 1565)
    specs_509153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 43), 'specs', False)
    # Processing the call keyword arguments (line 1565)
    kwargs_509154 = {}
    # Getting the type of 'generate_doc' (line 1565)
    generate_doc_509150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 19), 'generate_doc', False)
    # Calling generate_doc(args, kwargs) (line 1565)
    generate_doc_call_result_509155 = invoke(stypy.reporting.localization.Localization(__file__, 1565, 19), generate_doc_509150, *[name_509152, specs_509153], **kwargs_509154)
    
    # Processing the call keyword arguments (line 1565)
    kwargs_509156 = {}
    # Getting the type of 'doc' (line 1565)
    doc_509148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 8), 'doc', False)
    # Obtaining the member 'append' of a type (line 1565)
    append_509149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1565, 8), doc_509148, 'append')
    # Calling append(args, kwargs) (line 1565)
    append_call_result_509157 = invoke(stypy.reporting.localization.Localization(__file__, 1565, 8), append_509149, *[generate_doc_call_result_509155], **kwargs_509156)
    
    
    
    # Getting the type of 'func' (line 1568)
    func_509158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1568, 11), 'func')
    # Obtaining the member 'name' of a type (line 1568)
    name_509159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1568, 11), func_509158, 'name')
    # Getting the type of 'CYTHON_SPECIAL_BENCHFUNCS' (line 1568)
    CYTHON_SPECIAL_BENCHFUNCS_509160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1568, 24), 'CYTHON_SPECIAL_BENCHFUNCS')
    # Applying the binary operator 'in' (line 1568)
    result_contains_509161 = python_operator(stypy.reporting.localization.Localization(__file__, 1568, 11), 'in', name_509159, CYTHON_SPECIAL_BENCHFUNCS_509160)
    
    # Testing the type of an if condition (line 1568)
    if_condition_509162 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1568, 8), result_contains_509161)
    # Assigning a type to the variable 'if_condition_509162' (line 1568)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1568, 8), 'if_condition_509162', if_condition_509162)
    # SSA begins for if statement (line 1568)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'func' (line 1569)
    func_509163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 51), 'func')
    # Obtaining the member 'name' of a type (line 1569)
    name_509164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1569, 51), func_509163, 'name')
    # Getting the type of 'CYTHON_SPECIAL_BENCHFUNCS' (line 1569)
    CYTHON_SPECIAL_BENCHFUNCS_509165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 25), 'CYTHON_SPECIAL_BENCHFUNCS')
    # Obtaining the member '__getitem__' of a type (line 1569)
    getitem___509166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1569, 25), CYTHON_SPECIAL_BENCHFUNCS_509165, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1569)
    subscript_call_result_509167 = invoke(stypy.reporting.localization.Localization(__file__, 1569, 25), getitem___509166, name_509164)
    
    # Testing the type of a for loop iterable (line 1569)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1569, 12), subscript_call_result_509167)
    # Getting the type of the for loop variable (line 1569)
    for_loop_var_509168 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1569, 12), subscript_call_result_509167)
    # Assigning a type to the variable 'codes' (line 1569)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1569, 12), 'codes', for_loop_var_509168)
    # SSA begins for a for statement (line 1569)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Tuple (line 1570):
    
    # Assigning a Subscript to a Name (line 1570):
    
    # Obtaining the type of the subscript
    int_509169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1570, 16), 'int')
    
    # Call to generate_bench(...): (line 1570)
    # Processing the call arguments (line 1570)
    # Getting the type of 'func' (line 1570)
    func_509171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 50), 'func', False)
    # Obtaining the member 'name' of a type (line 1570)
    name_509172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1570, 50), func_509171, 'name')
    # Getting the type of 'codes' (line 1570)
    codes_509173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 61), 'codes', False)
    # Processing the call keyword arguments (line 1570)
    kwargs_509174 = {}
    # Getting the type of 'generate_bench' (line 1570)
    generate_bench_509170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 35), 'generate_bench', False)
    # Calling generate_bench(args, kwargs) (line 1570)
    generate_bench_call_result_509175 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 35), generate_bench_509170, *[name_509172, codes_509173], **kwargs_509174)
    
    # Obtaining the member '__getitem__' of a type (line 1570)
    getitem___509176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1570, 16), generate_bench_call_result_509175, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1570)
    subscript_call_result_509177 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 16), getitem___509176, int_509169)
    
    # Assigning a type to the variable 'tuple_var_assignment_504039' (line 1570)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1570, 16), 'tuple_var_assignment_504039', subscript_call_result_509177)
    
    # Assigning a Subscript to a Name (line 1570):
    
    # Obtaining the type of the subscript
    int_509178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1570, 16), 'int')
    
    # Call to generate_bench(...): (line 1570)
    # Processing the call arguments (line 1570)
    # Getting the type of 'func' (line 1570)
    func_509180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 50), 'func', False)
    # Obtaining the member 'name' of a type (line 1570)
    name_509181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1570, 50), func_509180, 'name')
    # Getting the type of 'codes' (line 1570)
    codes_509182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 61), 'codes', False)
    # Processing the call keyword arguments (line 1570)
    kwargs_509183 = {}
    # Getting the type of 'generate_bench' (line 1570)
    generate_bench_509179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 35), 'generate_bench', False)
    # Calling generate_bench(args, kwargs) (line 1570)
    generate_bench_call_result_509184 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 35), generate_bench_509179, *[name_509181, codes_509182], **kwargs_509183)
    
    # Obtaining the member '__getitem__' of a type (line 1570)
    getitem___509185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1570, 16), generate_bench_call_result_509184, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1570)
    subscript_call_result_509186 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 16), getitem___509185, int_509178)
    
    # Assigning a type to the variable 'tuple_var_assignment_504040' (line 1570)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1570, 16), 'tuple_var_assignment_504040', subscript_call_result_509186)
    
    # Assigning a Name to a Name (line 1570):
    # Getting the type of 'tuple_var_assignment_504039' (line 1570)
    tuple_var_assignment_504039_509187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 16), 'tuple_var_assignment_504039')
    # Assigning a type to the variable 'pybench' (line 1570)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1570, 16), 'pybench', tuple_var_assignment_504039_509187)
    
    # Assigning a Name to a Name (line 1570):
    # Getting the type of 'tuple_var_assignment_504040' (line 1570)
    tuple_var_assignment_504040_509188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 16), 'tuple_var_assignment_504040')
    # Assigning a type to the variable 'cybench' (line 1570)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1570, 25), 'cybench', tuple_var_assignment_504040_509188)
    
    # Call to extend(...): (line 1571)
    # Processing the call arguments (line 1571)
    
    # Obtaining an instance of the builtin type 'list' (line 1571)
    list_509191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1571, 33), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1571)
    # Adding element type (line 1571)
    # Getting the type of 'pybench' (line 1571)
    pybench_509192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 34), 'pybench', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 33), list_509191, pybench_509192)
    # Adding element type (line 1571)
    # Getting the type of 'cybench' (line 1571)
    cybench_509193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 43), 'cybench', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1571, 33), list_509191, cybench_509193)
    
    # Processing the call keyword arguments (line 1571)
    kwargs_509194 = {}
    # Getting the type of 'bench_aux' (line 1571)
    bench_aux_509189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 16), 'bench_aux', False)
    # Obtaining the member 'extend' of a type (line 1571)
    extend_509190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1571, 16), bench_aux_509189, 'extend')
    # Calling extend(args, kwargs) (line 1571)
    extend_call_result_509195 = invoke(stypy.reporting.localization.Localization(__file__, 1571, 16), extend_509190, *[list_509191], **kwargs_509194)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1568)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1573):
    
    # Assigning a Call to a Name (line 1573):
    
    # Call to list(...): (line 1573)
    # Processing the call arguments (line 1573)
    # Getting the type of 'fused_types' (line 1573)
    fused_types_509197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1573, 23), 'fused_types', False)
    # Processing the call keyword arguments (line 1573)
    kwargs_509198 = {}
    # Getting the type of 'list' (line 1573)
    list_509196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1573, 18), 'list', False)
    # Calling list(args, kwargs) (line 1573)
    list_call_result_509199 = invoke(stypy.reporting.localization.Localization(__file__, 1573, 18), list_509196, *[fused_types_509197], **kwargs_509198)
    
    # Assigning a type to the variable 'fused_types' (line 1573)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1573, 4), 'fused_types', list_call_result_509199)
    
    # Call to sort(...): (line 1574)
    # Processing the call keyword arguments (line 1574)
    kwargs_509202 = {}
    # Getting the type of 'fused_types' (line 1574)
    fused_types_509200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 4), 'fused_types', False)
    # Obtaining the member 'sort' of a type (line 1574)
    sort_509201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1574, 4), fused_types_509200, 'sort')
    # Calling sort(args, kwargs) (line 1574)
    sort_call_result_509203 = invoke(stypy.reporting.localization.Localization(__file__, 1574, 4), sort_509201, *[], **kwargs_509202)
    
    
    # Call to open(...): (line 1576)
    # Processing the call arguments (line 1576)
    # Getting the type of 'pxdfile' (line 1576)
    pxdfile_509205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1576, 14), 'pxdfile', False)
    str_509206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1576, 23), 'str', 'w')
    # Processing the call keyword arguments (line 1576)
    kwargs_509207 = {}
    # Getting the type of 'open' (line 1576)
    open_509204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1576, 9), 'open', False)
    # Calling open(args, kwargs) (line 1576)
    open_call_result_509208 = invoke(stypy.reporting.localization.Localization(__file__, 1576, 9), open_509204, *[pxdfile_509205, str_509206], **kwargs_509207)
    
    with_509209 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1576, 9), open_call_result_509208, 'with parameter', '__enter__', '__exit__')

    if with_509209:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1576)
        enter___509210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1576, 9), open_call_result_509208, '__enter__')
        with_enter_509211 = invoke(stypy.reporting.localization.Localization(__file__, 1576, 9), enter___509210)
        # Assigning a type to the variable 'f' (line 1576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1576, 9), 'f', with_enter_509211)
        
        # Call to write(...): (line 1577)
        # Processing the call arguments (line 1577)
        # Getting the type of 'CYTHON_SPECIAL_PXD' (line 1577)
        CYTHON_SPECIAL_PXD_509214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 16), 'CYTHON_SPECIAL_PXD', False)
        # Processing the call keyword arguments (line 1577)
        kwargs_509215 = {}
        # Getting the type of 'f' (line 1577)
        f_509212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1577)
        write_509213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1577, 8), f_509212, 'write')
        # Calling write(args, kwargs) (line 1577)
        write_call_result_509216 = invoke(stypy.reporting.localization.Localization(__file__, 1577, 8), write_509213, *[CYTHON_SPECIAL_PXD_509214], **kwargs_509215)
        
        
        # Call to write(...): (line 1578)
        # Processing the call arguments (line 1578)
        str_509219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1578, 16), 'str', '\n')
        # Processing the call keyword arguments (line 1578)
        kwargs_509220 = {}
        # Getting the type of 'f' (line 1578)
        f_509217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1578, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1578)
        write_509218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1578, 8), f_509217, 'write')
        # Calling write(args, kwargs) (line 1578)
        write_call_result_509221 = invoke(stypy.reporting.localization.Localization(__file__, 1578, 8), write_509218, *[str_509219], **kwargs_509220)
        
        
        # Call to write(...): (line 1579)
        # Processing the call arguments (line 1579)
        
        # Call to join(...): (line 1579)
        # Processing the call arguments (line 1579)
        # Getting the type of 'fused_types' (line 1579)
        fused_types_509226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 28), 'fused_types', False)
        # Processing the call keyword arguments (line 1579)
        kwargs_509227 = {}
        str_509224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1579, 16), 'str', '\n\n')
        # Obtaining the member 'join' of a type (line 1579)
        join_509225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1579, 16), str_509224, 'join')
        # Calling join(args, kwargs) (line 1579)
        join_call_result_509228 = invoke(stypy.reporting.localization.Localization(__file__, 1579, 16), join_509225, *[fused_types_509226], **kwargs_509227)
        
        # Processing the call keyword arguments (line 1579)
        kwargs_509229 = {}
        # Getting the type of 'f' (line 1579)
        f_509222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1579)
        write_509223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1579, 8), f_509222, 'write')
        # Calling write(args, kwargs) (line 1579)
        write_call_result_509230 = invoke(stypy.reporting.localization.Localization(__file__, 1579, 8), write_509223, *[join_call_result_509228], **kwargs_509229)
        
        
        # Call to write(...): (line 1580)
        # Processing the call arguments (line 1580)
        str_509233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1580, 16), 'str', '\n\n')
        # Processing the call keyword arguments (line 1580)
        kwargs_509234 = {}
        # Getting the type of 'f' (line 1580)
        f_509231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1580)
        write_509232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1580, 8), f_509231, 'write')
        # Calling write(args, kwargs) (line 1580)
        write_call_result_509235 = invoke(stypy.reporting.localization.Localization(__file__, 1580, 8), write_509232, *[str_509233], **kwargs_509234)
        
        
        # Call to write(...): (line 1581)
        # Processing the call arguments (line 1581)
        
        # Call to join(...): (line 1581)
        # Processing the call arguments (line 1581)
        # Getting the type of 'declarations' (line 1581)
        declarations_509240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 26), 'declarations', False)
        # Processing the call keyword arguments (line 1581)
        kwargs_509241 = {}
        str_509238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1581, 16), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1581)
        join_509239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1581, 16), str_509238, 'join')
        # Calling join(args, kwargs) (line 1581)
        join_call_result_509242 = invoke(stypy.reporting.localization.Localization(__file__, 1581, 16), join_509239, *[declarations_509240], **kwargs_509241)
        
        # Processing the call keyword arguments (line 1581)
        kwargs_509243 = {}
        # Getting the type of 'f' (line 1581)
        f_509236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1581)
        write_509237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1581, 8), f_509236, 'write')
        # Calling write(args, kwargs) (line 1581)
        write_call_result_509244 = invoke(stypy.reporting.localization.Localization(__file__, 1581, 8), write_509237, *[join_call_result_509242], **kwargs_509243)
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1576)
        exit___509245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1576, 9), open_call_result_509208, '__exit__')
        with_exit_509246 = invoke(stypy.reporting.localization.Localization(__file__, 1576, 9), exit___509245, None, None, None)

    
    # Call to open(...): (line 1582)
    # Processing the call arguments (line 1582)
    # Getting the type of 'pyxfile' (line 1582)
    pyxfile_509248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1582, 14), 'pyxfile', False)
    str_509249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1582, 23), 'str', 'w')
    # Processing the call keyword arguments (line 1582)
    kwargs_509250 = {}
    # Getting the type of 'open' (line 1582)
    open_509247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1582, 9), 'open', False)
    # Calling open(args, kwargs) (line 1582)
    open_call_result_509251 = invoke(stypy.reporting.localization.Localization(__file__, 1582, 9), open_509247, *[pyxfile_509248, str_509249], **kwargs_509250)
    
    with_509252 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1582, 9), open_call_result_509251, 'with parameter', '__enter__', '__exit__')

    if with_509252:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1582)
        enter___509253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1582, 9), open_call_result_509251, '__enter__')
        with_enter_509254 = invoke(stypy.reporting.localization.Localization(__file__, 1582, 9), enter___509253)
        # Assigning a type to the variable 'f' (line 1582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1582, 9), 'f', with_enter_509254)
        
        # Assigning a Name to a Name (line 1583):
        
        # Assigning a Name to a Name (line 1583):
        # Getting the type of 'CYTHON_SPECIAL_PYX' (line 1583)
        CYTHON_SPECIAL_PYX_509255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 17), 'CYTHON_SPECIAL_PYX')
        # Assigning a type to the variable 'header' (line 1583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1583, 8), 'header', CYTHON_SPECIAL_PYX_509255)
        
        # Assigning a Call to a Name (line 1584):
        
        # Assigning a Call to a Name (line 1584):
        
        # Call to replace(...): (line 1584)
        # Processing the call arguments (line 1584)
        str_509258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1584, 32), 'str', 'FUNCLIST')
        
        # Call to join(...): (line 1584)
        # Processing the call arguments (line 1584)
        # Getting the type of 'doc' (line 1584)
        doc_509261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1584, 54), 'doc', False)
        # Processing the call keyword arguments (line 1584)
        kwargs_509262 = {}
        str_509259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1584, 44), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1584)
        join_509260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1584, 44), str_509259, 'join')
        # Calling join(args, kwargs) (line 1584)
        join_call_result_509263 = invoke(stypy.reporting.localization.Localization(__file__, 1584, 44), join_509260, *[doc_509261], **kwargs_509262)
        
        # Processing the call keyword arguments (line 1584)
        kwargs_509264 = {}
        # Getting the type of 'header' (line 1584)
        header_509256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1584, 17), 'header', False)
        # Obtaining the member 'replace' of a type (line 1584)
        replace_509257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1584, 17), header_509256, 'replace')
        # Calling replace(args, kwargs) (line 1584)
        replace_call_result_509265 = invoke(stypy.reporting.localization.Localization(__file__, 1584, 17), replace_509257, *[str_509258, join_call_result_509263], **kwargs_509264)
        
        # Assigning a type to the variable 'header' (line 1584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1584, 8), 'header', replace_call_result_509265)
        
        # Call to write(...): (line 1585)
        # Processing the call arguments (line 1585)
        # Getting the type of 'header' (line 1585)
        header_509268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 16), 'header', False)
        # Processing the call keyword arguments (line 1585)
        kwargs_509269 = {}
        # Getting the type of 'f' (line 1585)
        f_509266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1585)
        write_509267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1585, 8), f_509266, 'write')
        # Calling write(args, kwargs) (line 1585)
        write_call_result_509270 = invoke(stypy.reporting.localization.Localization(__file__, 1585, 8), write_509267, *[header_509268], **kwargs_509269)
        
        
        # Call to write(...): (line 1586)
        # Processing the call arguments (line 1586)
        str_509273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1586, 16), 'str', '\n')
        # Processing the call keyword arguments (line 1586)
        kwargs_509274 = {}
        # Getting the type of 'f' (line 1586)
        f_509271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1586)
        write_509272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1586, 8), f_509271, 'write')
        # Calling write(args, kwargs) (line 1586)
        write_call_result_509275 = invoke(stypy.reporting.localization.Localization(__file__, 1586, 8), write_509272, *[str_509273], **kwargs_509274)
        
        
        # Call to write(...): (line 1587)
        # Processing the call arguments (line 1587)
        
        # Call to join(...): (line 1587)
        # Processing the call arguments (line 1587)
        # Getting the type of 'defs' (line 1587)
        defs_509280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 26), 'defs', False)
        # Processing the call keyword arguments (line 1587)
        kwargs_509281 = {}
        str_509278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1587, 16), 'str', '\n')
        # Obtaining the member 'join' of a type (line 1587)
        join_509279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1587, 16), str_509278, 'join')
        # Calling join(args, kwargs) (line 1587)
        join_call_result_509282 = invoke(stypy.reporting.localization.Localization(__file__, 1587, 16), join_509279, *[defs_509280], **kwargs_509281)
        
        # Processing the call keyword arguments (line 1587)
        kwargs_509283 = {}
        # Getting the type of 'f' (line 1587)
        f_509276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1587)
        write_509277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1587, 8), f_509276, 'write')
        # Calling write(args, kwargs) (line 1587)
        write_call_result_509284 = invoke(stypy.reporting.localization.Localization(__file__, 1587, 8), write_509277, *[join_call_result_509282], **kwargs_509283)
        
        
        # Call to write(...): (line 1588)
        # Processing the call arguments (line 1588)
        str_509287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1588, 16), 'str', '\n\n')
        # Processing the call keyword arguments (line 1588)
        kwargs_509288 = {}
        # Getting the type of 'f' (line 1588)
        f_509285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1588, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1588)
        write_509286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1588, 8), f_509285, 'write')
        # Calling write(args, kwargs) (line 1588)
        write_call_result_509289 = invoke(stypy.reporting.localization.Localization(__file__, 1588, 8), write_509286, *[str_509287], **kwargs_509288)
        
        
        # Call to write(...): (line 1589)
        # Processing the call arguments (line 1589)
        
        # Call to join(...): (line 1589)
        # Processing the call arguments (line 1589)
        # Getting the type of 'sources' (line 1589)
        sources_509294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1589, 28), 'sources', False)
        # Processing the call keyword arguments (line 1589)
        kwargs_509295 = {}
        str_509292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1589, 16), 'str', '\n\n')
        # Obtaining the member 'join' of a type (line 1589)
        join_509293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1589, 16), str_509292, 'join')
        # Calling join(args, kwargs) (line 1589)
        join_call_result_509296 = invoke(stypy.reporting.localization.Localization(__file__, 1589, 16), join_509293, *[sources_509294], **kwargs_509295)
        
        # Processing the call keyword arguments (line 1589)
        kwargs_509297 = {}
        # Getting the type of 'f' (line 1589)
        f_509290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1589, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1589)
        write_509291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1589, 8), f_509290, 'write')
        # Calling write(args, kwargs) (line 1589)
        write_call_result_509298 = invoke(stypy.reporting.localization.Localization(__file__, 1589, 8), write_509291, *[join_call_result_509296], **kwargs_509297)
        
        
        # Call to write(...): (line 1590)
        # Processing the call arguments (line 1590)
        str_509301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1590, 16), 'str', '\n\n')
        # Processing the call keyword arguments (line 1590)
        kwargs_509302 = {}
        # Getting the type of 'f' (line 1590)
        f_509299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1590)
        write_509300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 8), f_509299, 'write')
        # Calling write(args, kwargs) (line 1590)
        write_call_result_509303 = invoke(stypy.reporting.localization.Localization(__file__, 1590, 8), write_509300, *[str_509301], **kwargs_509302)
        
        
        # Call to write(...): (line 1591)
        # Processing the call arguments (line 1591)
        
        # Call to join(...): (line 1591)
        # Processing the call arguments (line 1591)
        # Getting the type of 'bench_aux' (line 1591)
        bench_aux_509308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1591, 28), 'bench_aux', False)
        # Processing the call keyword arguments (line 1591)
        kwargs_509309 = {}
        str_509306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1591, 16), 'str', '\n\n')
        # Obtaining the member 'join' of a type (line 1591)
        join_509307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1591, 16), str_509306, 'join')
        # Calling join(args, kwargs) (line 1591)
        join_call_result_509310 = invoke(stypy.reporting.localization.Localization(__file__, 1591, 16), join_509307, *[bench_aux_509308], **kwargs_509309)
        
        # Processing the call keyword arguments (line 1591)
        kwargs_509311 = {}
        # Getting the type of 'f' (line 1591)
        f_509304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1591, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 1591)
        write_509305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1591, 8), f_509304, 'write')
        # Calling write(args, kwargs) (line 1591)
        write_call_result_509312 = invoke(stypy.reporting.localization.Localization(__file__, 1591, 8), write_509305, *[join_call_result_509310], **kwargs_509311)
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1582)
        exit___509313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1582, 9), open_call_result_509251, '__exit__')
        with_exit_509314 = invoke(stypy.reporting.localization.Localization(__file__, 1582, 9), exit___509313, None, None, None)

    
    # ################# End of 'generate_fused_funcs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_fused_funcs' in the type store
    # Getting the type of 'stypy_return_type' (line 1524)
    stypy_return_type_509315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1524, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_509315)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_fused_funcs'
    return stypy_return_type_509315

# Assigning a type to the variable 'generate_fused_funcs' (line 1524)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1524, 0), 'generate_fused_funcs', generate_fused_funcs)

@norecursion
def unique(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'unique'
    module_type_store = module_type_store.open_function_context('unique', 1594, 0, False)
    
    # Passed parameters checking function
    unique.stypy_localization = localization
    unique.stypy_type_of_self = None
    unique.stypy_type_store = module_type_store
    unique.stypy_function_name = 'unique'
    unique.stypy_param_names_list = ['lst']
    unique.stypy_varargs_param_name = None
    unique.stypy_kwargs_param_name = None
    unique.stypy_call_defaults = defaults
    unique.stypy_call_varargs = varargs
    unique.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'unique', ['lst'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'unique', localization, ['lst'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'unique(...)' code ##################

    str_509316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1598, (-1)), 'str', '\n    Return a list without repeated entries (first occurrence is kept),\n    preserving order.\n    ')
    
    # Assigning a Call to a Name (line 1599):
    
    # Assigning a Call to a Name (line 1599):
    
    # Call to set(...): (line 1599)
    # Processing the call keyword arguments (line 1599)
    kwargs_509318 = {}
    # Getting the type of 'set' (line 1599)
    set_509317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 11), 'set', False)
    # Calling set(args, kwargs) (line 1599)
    set_call_result_509319 = invoke(stypy.reporting.localization.Localization(__file__, 1599, 11), set_509317, *[], **kwargs_509318)
    
    # Assigning a type to the variable 'seen' (line 1599)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1599, 4), 'seen', set_call_result_509319)
    
    # Assigning a List to a Name (line 1600):
    
    # Assigning a List to a Name (line 1600):
    
    # Obtaining an instance of the builtin type 'list' (line 1600)
    list_509320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1600, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1600)
    
    # Assigning a type to the variable 'new_lst' (line 1600)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1600, 4), 'new_lst', list_509320)
    
    # Getting the type of 'lst' (line 1601)
    lst_509321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 16), 'lst')
    # Testing the type of a for loop iterable (line 1601)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1601, 4), lst_509321)
    # Getting the type of the for loop variable (line 1601)
    for_loop_var_509322 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1601, 4), lst_509321)
    # Assigning a type to the variable 'item' (line 1601)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1601, 4), 'item', for_loop_var_509322)
    # SSA begins for a for statement (line 1601)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'item' (line 1602)
    item_509323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 11), 'item')
    # Getting the type of 'seen' (line 1602)
    seen_509324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 19), 'seen')
    # Applying the binary operator 'in' (line 1602)
    result_contains_509325 = python_operator(stypy.reporting.localization.Localization(__file__, 1602, 11), 'in', item_509323, seen_509324)
    
    # Testing the type of an if condition (line 1602)
    if_condition_509326 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1602, 8), result_contains_509325)
    # Assigning a type to the variable 'if_condition_509326' (line 1602)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1602, 8), 'if_condition_509326', if_condition_509326)
    # SSA begins for if statement (line 1602)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1602)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to add(...): (line 1604)
    # Processing the call arguments (line 1604)
    # Getting the type of 'item' (line 1604)
    item_509329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 17), 'item', False)
    # Processing the call keyword arguments (line 1604)
    kwargs_509330 = {}
    # Getting the type of 'seen' (line 1604)
    seen_509327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 8), 'seen', False)
    # Obtaining the member 'add' of a type (line 1604)
    add_509328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1604, 8), seen_509327, 'add')
    # Calling add(args, kwargs) (line 1604)
    add_call_result_509331 = invoke(stypy.reporting.localization.Localization(__file__, 1604, 8), add_509328, *[item_509329], **kwargs_509330)
    
    
    # Call to append(...): (line 1605)
    # Processing the call arguments (line 1605)
    # Getting the type of 'item' (line 1605)
    item_509334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 23), 'item', False)
    # Processing the call keyword arguments (line 1605)
    kwargs_509335 = {}
    # Getting the type of 'new_lst' (line 1605)
    new_lst_509332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 8), 'new_lst', False)
    # Obtaining the member 'append' of a type (line 1605)
    append_509333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1605, 8), new_lst_509332, 'append')
    # Calling append(args, kwargs) (line 1605)
    append_call_result_509336 = invoke(stypy.reporting.localization.Localization(__file__, 1605, 8), append_509333, *[item_509334], **kwargs_509335)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'new_lst' (line 1606)
    new_lst_509337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1606, 11), 'new_lst')
    # Assigning a type to the variable 'stypy_return_type' (line 1606)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1606, 4), 'stypy_return_type', new_lst_509337)
    
    # ################# End of 'unique(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'unique' in the type store
    # Getting the type of 'stypy_return_type' (line 1594)
    stypy_return_type_509338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_509338)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'unique'
    return stypy_return_type_509338

# Assigning a type to the variable 'unique' (line 1594)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1594, 0), 'unique', unique)

@norecursion
def all_newer(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'all_newer'
    module_type_store = module_type_store.open_function_context('all_newer', 1608, 0, False)
    
    # Passed parameters checking function
    all_newer.stypy_localization = localization
    all_newer.stypy_type_of_self = None
    all_newer.stypy_type_store = module_type_store
    all_newer.stypy_function_name = 'all_newer'
    all_newer.stypy_param_names_list = ['src_files', 'dst_files']
    all_newer.stypy_varargs_param_name = None
    all_newer.stypy_kwargs_param_name = None
    all_newer.stypy_call_defaults = defaults
    all_newer.stypy_call_varargs = varargs
    all_newer.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'all_newer', ['src_files', 'dst_files'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'all_newer', localization, ['src_files', 'dst_files'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'all_newer(...)' code ##################

    stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 1609, 4))
    
    # 'from distutils.dep_util import newer' statement (line 1609)
    update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/')
    import_509339 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 1609, 4), 'distutils.dep_util')

    if (type(import_509339) is not StypyTypeError):

        if (import_509339 != 'pyd_module'):
            __import__(import_509339)
            sys_modules_509340 = sys.modules[import_509339]
            import_from_module(stypy.reporting.localization.Localization(__file__, 1609, 4), 'distutils.dep_util', sys_modules_509340.module_type_store, module_type_store, ['newer'])
            nest_module(stypy.reporting.localization.Localization(__file__, 1609, 4), __file__, sys_modules_509340, sys_modules_509340.module_type_store, module_type_store)
        else:
            from distutils.dep_util import newer

            import_from_module(stypy.reporting.localization.Localization(__file__, 1609, 4), 'distutils.dep_util', None, module_type_store, ['newer'], [newer])

    else:
        # Assigning a type to the variable 'distutils.dep_util' (line 1609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1609, 4), 'distutils.dep_util', import_509339)

    remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/')
    
    
    # Call to all(...): (line 1610)
    # Processing the call arguments (line 1610)
    # Calculating generator expression
    module_type_store = module_type_store.open_function_context('list comprehension expression', 1610, 15, True)
    # Calculating comprehension expression
    # Getting the type of 'dst_files' (line 1611)
    dst_files_509354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 26), 'dst_files', False)
    comprehension_509355 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1610, 15), dst_files_509354)
    # Assigning a type to the variable 'dst' (line 1610)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1610, 15), 'dst', comprehension_509355)
    # Calculating comprehension expression
    # Getting the type of 'src_files' (line 1611)
    src_files_509356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 47), 'src_files', False)
    comprehension_509357 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1610, 15), src_files_509356)
    # Assigning a type to the variable 'src' (line 1610)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1610, 15), 'src', comprehension_509357)
    
    # Evaluating a boolean operation
    
    # Call to exists(...): (line 1610)
    # Processing the call arguments (line 1610)
    # Getting the type of 'dst' (line 1610)
    dst_509345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 30), 'dst', False)
    # Processing the call keyword arguments (line 1610)
    kwargs_509346 = {}
    # Getting the type of 'os' (line 1610)
    os_509342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 15), 'os', False)
    # Obtaining the member 'path' of a type (line 1610)
    path_509343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1610, 15), os_509342, 'path')
    # Obtaining the member 'exists' of a type (line 1610)
    exists_509344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1610, 15), path_509343, 'exists')
    # Calling exists(args, kwargs) (line 1610)
    exists_call_result_509347 = invoke(stypy.reporting.localization.Localization(__file__, 1610, 15), exists_509344, *[dst_509345], **kwargs_509346)
    
    
    # Call to newer(...): (line 1610)
    # Processing the call arguments (line 1610)
    # Getting the type of 'dst' (line 1610)
    dst_509349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 45), 'dst', False)
    # Getting the type of 'src' (line 1610)
    src_509350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 50), 'src', False)
    # Processing the call keyword arguments (line 1610)
    kwargs_509351 = {}
    # Getting the type of 'newer' (line 1610)
    newer_509348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 39), 'newer', False)
    # Calling newer(args, kwargs) (line 1610)
    newer_call_result_509352 = invoke(stypy.reporting.localization.Localization(__file__, 1610, 39), newer_509348, *[dst_509349, src_509350], **kwargs_509351)
    
    # Applying the binary operator 'and' (line 1610)
    result_and_keyword_509353 = python_operator(stypy.reporting.localization.Localization(__file__, 1610, 15), 'and', exists_call_result_509347, newer_call_result_509352)
    
    list_509358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1610, 15), 'list')
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1610, 15), list_509358, result_and_keyword_509353)
    # Processing the call keyword arguments (line 1610)
    kwargs_509359 = {}
    # Getting the type of 'all' (line 1610)
    all_509341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 11), 'all', False)
    # Calling all(args, kwargs) (line 1610)
    all_call_result_509360 = invoke(stypy.reporting.localization.Localization(__file__, 1610, 11), all_509341, *[list_509358], **kwargs_509359)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1610)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1610, 4), 'stypy_return_type', all_call_result_509360)
    
    # ################# End of 'all_newer(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'all_newer' in the type store
    # Getting the type of 'stypy_return_type' (line 1608)
    stypy_return_type_509361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1608, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_509361)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'all_newer'
    return stypy_return_type_509361

# Assigning a type to the variable 'all_newer' (line 1608)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1608, 0), 'all_newer', all_newer)

@norecursion
def main(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'main'
    module_type_store = module_type_store.open_function_context('main', 1613, 0, False)
    
    # Passed parameters checking function
    main.stypy_localization = localization
    main.stypy_type_of_self = None
    main.stypy_type_store = module_type_store
    main.stypy_function_name = 'main'
    main.stypy_param_names_list = []
    main.stypy_varargs_param_name = None
    main.stypy_kwargs_param_name = None
    main.stypy_call_defaults = defaults
    main.stypy_call_varargs = varargs
    main.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'main', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'main', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'main(...)' code ##################

    
    # Assigning a Call to a Name (line 1614):
    
    # Assigning a Call to a Name (line 1614):
    
    # Call to OptionParser(...): (line 1614)
    # Processing the call keyword arguments (line 1614)
    
    # Call to strip(...): (line 1614)
    # Processing the call keyword arguments (line 1614)
    kwargs_509366 = {}
    # Getting the type of '__doc__' (line 1614)
    doc___509364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 36), '__doc__', False)
    # Obtaining the member 'strip' of a type (line 1614)
    strip_509365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 36), doc___509364, 'strip')
    # Calling strip(args, kwargs) (line 1614)
    strip_call_result_509367 = invoke(stypy.reporting.localization.Localization(__file__, 1614, 36), strip_509365, *[], **kwargs_509366)
    
    keyword_509368 = strip_call_result_509367
    kwargs_509369 = {'usage': keyword_509368}
    # Getting the type of 'optparse' (line 1614)
    optparse_509362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 8), 'optparse', False)
    # Obtaining the member 'OptionParser' of a type (line 1614)
    OptionParser_509363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 8), optparse_509362, 'OptionParser')
    # Calling OptionParser(args, kwargs) (line 1614)
    OptionParser_call_result_509370 = invoke(stypy.reporting.localization.Localization(__file__, 1614, 8), OptionParser_509363, *[], **kwargs_509369)
    
    # Assigning a type to the variable 'p' (line 1614)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1614, 4), 'p', OptionParser_call_result_509370)
    
    # Assigning a Call to a Tuple (line 1615):
    
    # Assigning a Subscript to a Name (line 1615):
    
    # Obtaining the type of the subscript
    int_509371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1615, 4), 'int')
    
    # Call to parse_args(...): (line 1615)
    # Processing the call keyword arguments (line 1615)
    kwargs_509374 = {}
    # Getting the type of 'p' (line 1615)
    p_509372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 20), 'p', False)
    # Obtaining the member 'parse_args' of a type (line 1615)
    parse_args_509373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1615, 20), p_509372, 'parse_args')
    # Calling parse_args(args, kwargs) (line 1615)
    parse_args_call_result_509375 = invoke(stypy.reporting.localization.Localization(__file__, 1615, 20), parse_args_509373, *[], **kwargs_509374)
    
    # Obtaining the member '__getitem__' of a type (line 1615)
    getitem___509376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1615, 4), parse_args_call_result_509375, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1615)
    subscript_call_result_509377 = invoke(stypy.reporting.localization.Localization(__file__, 1615, 4), getitem___509376, int_509371)
    
    # Assigning a type to the variable 'tuple_var_assignment_504041' (line 1615)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1615, 4), 'tuple_var_assignment_504041', subscript_call_result_509377)
    
    # Assigning a Subscript to a Name (line 1615):
    
    # Obtaining the type of the subscript
    int_509378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1615, 4), 'int')
    
    # Call to parse_args(...): (line 1615)
    # Processing the call keyword arguments (line 1615)
    kwargs_509381 = {}
    # Getting the type of 'p' (line 1615)
    p_509379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 20), 'p', False)
    # Obtaining the member 'parse_args' of a type (line 1615)
    parse_args_509380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1615, 20), p_509379, 'parse_args')
    # Calling parse_args(args, kwargs) (line 1615)
    parse_args_call_result_509382 = invoke(stypy.reporting.localization.Localization(__file__, 1615, 20), parse_args_509380, *[], **kwargs_509381)
    
    # Obtaining the member '__getitem__' of a type (line 1615)
    getitem___509383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1615, 4), parse_args_call_result_509382, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1615)
    subscript_call_result_509384 = invoke(stypy.reporting.localization.Localization(__file__, 1615, 4), getitem___509383, int_509378)
    
    # Assigning a type to the variable 'tuple_var_assignment_504042' (line 1615)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1615, 4), 'tuple_var_assignment_504042', subscript_call_result_509384)
    
    # Assigning a Name to a Name (line 1615):
    # Getting the type of 'tuple_var_assignment_504041' (line 1615)
    tuple_var_assignment_504041_509385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 4), 'tuple_var_assignment_504041')
    # Assigning a type to the variable 'options' (line 1615)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1615, 4), 'options', tuple_var_assignment_504041_509385)
    
    # Assigning a Name to a Name (line 1615):
    # Getting the type of 'tuple_var_assignment_504042' (line 1615)
    tuple_var_assignment_504042_509386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 4), 'tuple_var_assignment_504042')
    # Assigning a type to the variable 'args' (line 1615)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1615, 13), 'args', tuple_var_assignment_504042_509386)
    
    
    
    # Call to len(...): (line 1616)
    # Processing the call arguments (line 1616)
    # Getting the type of 'args' (line 1616)
    args_509388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1616, 11), 'args', False)
    # Processing the call keyword arguments (line 1616)
    kwargs_509389 = {}
    # Getting the type of 'len' (line 1616)
    len_509387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1616, 7), 'len', False)
    # Calling len(args, kwargs) (line 1616)
    len_call_result_509390 = invoke(stypy.reporting.localization.Localization(__file__, 1616, 7), len_509387, *[args_509388], **kwargs_509389)
    
    int_509391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1616, 20), 'int')
    # Applying the binary operator '!=' (line 1616)
    result_ne_509392 = python_operator(stypy.reporting.localization.Localization(__file__, 1616, 7), '!=', len_call_result_509390, int_509391)
    
    # Testing the type of an if condition (line 1616)
    if_condition_509393 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1616, 4), result_ne_509392)
    # Assigning a type to the variable 'if_condition_509393' (line 1616)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1616, 4), 'if_condition_509393', if_condition_509393)
    # SSA begins for if statement (line 1616)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to error(...): (line 1617)
    # Processing the call arguments (line 1617)
    str_509396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1617, 16), 'str', 'invalid number of arguments')
    # Processing the call keyword arguments (line 1617)
    kwargs_509397 = {}
    # Getting the type of 'p' (line 1617)
    p_509394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1617, 8), 'p', False)
    # Obtaining the member 'error' of a type (line 1617)
    error_509395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1617, 8), p_509394, 'error')
    # Calling error(args, kwargs) (line 1617)
    error_call_result_509398 = invoke(stypy.reporting.localization.Localization(__file__, 1617, 8), error_509395, *[str_509396], **kwargs_509397)
    
    # SSA join for if statement (line 1616)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Tuple to a Name (line 1619):
    
    # Assigning a Tuple to a Name (line 1619):
    
    # Obtaining an instance of the builtin type 'tuple' (line 1619)
    tuple_509399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1619, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1619)
    # Adding element type (line 1619)
    
    # Call to abspath(...): (line 1619)
    # Processing the call arguments (line 1619)
    # Getting the type of '__file__' (line 1619)
    file___509403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 33), '__file__', False)
    # Processing the call keyword arguments (line 1619)
    kwargs_509404 = {}
    # Getting the type of 'os' (line 1619)
    os_509400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 17), 'os', False)
    # Obtaining the member 'path' of a type (line 1619)
    path_509401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1619, 17), os_509400, 'path')
    # Obtaining the member 'abspath' of a type (line 1619)
    abspath_509402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1619, 17), path_509401, 'abspath')
    # Calling abspath(args, kwargs) (line 1619)
    abspath_call_result_509405 = invoke(stypy.reporting.localization.Localization(__file__, 1619, 17), abspath_509402, *[file___509403], **kwargs_509404)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1619, 17), tuple_509399, abspath_call_result_509405)
    
    # Assigning a type to the variable 'src_files' (line 1619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1619, 4), 'src_files', tuple_509399)
    
    # Assigning a Tuple to a Name (line 1620):
    
    # Assigning a Tuple to a Name (line 1620):
    
    # Obtaining an instance of the builtin type 'tuple' (line 1620)
    tuple_509406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1620, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1620)
    # Adding element type (line 1620)
    str_509407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1620, 17), 'str', '_ufuncs.pyx')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1620, 17), tuple_509406, str_509407)
    # Adding element type (line 1620)
    str_509408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1621, 17), 'str', '_ufuncs_defs.h')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1620, 17), tuple_509406, str_509408)
    # Adding element type (line 1620)
    str_509409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1622, 17), 'str', '_ufuncs_cxx.pyx')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1620, 17), tuple_509406, str_509409)
    # Adding element type (line 1620)
    str_509410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1623, 17), 'str', '_ufuncs_cxx.pxd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1620, 17), tuple_509406, str_509410)
    # Adding element type (line 1620)
    str_509411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1624, 17), 'str', '_ufuncs_cxx_defs.h')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1620, 17), tuple_509406, str_509411)
    # Adding element type (line 1620)
    str_509412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 17), 'str', 'cython_special.pyx')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1620, 17), tuple_509406, str_509412)
    # Adding element type (line 1620)
    str_509413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1626, 17), 'str', 'cython_special.pxd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1620, 17), tuple_509406, str_509413)
    
    # Assigning a type to the variable 'dst_files' (line 1620)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1620, 4), 'dst_files', tuple_509406)
    
    # Call to chdir(...): (line 1628)
    # Processing the call arguments (line 1628)
    # Getting the type of 'BASE_DIR' (line 1628)
    BASE_DIR_509416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1628, 13), 'BASE_DIR', False)
    # Processing the call keyword arguments (line 1628)
    kwargs_509417 = {}
    # Getting the type of 'os' (line 1628)
    os_509414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1628, 4), 'os', False)
    # Obtaining the member 'chdir' of a type (line 1628)
    chdir_509415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1628, 4), os_509414, 'chdir')
    # Calling chdir(args, kwargs) (line 1628)
    chdir_call_result_509418 = invoke(stypy.reporting.localization.Localization(__file__, 1628, 4), chdir_509415, *[BASE_DIR_509416], **kwargs_509417)
    
    
    
    # Call to all_newer(...): (line 1630)
    # Processing the call arguments (line 1630)
    # Getting the type of 'src_files' (line 1630)
    src_files_509420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1630, 17), 'src_files', False)
    # Getting the type of 'dst_files' (line 1630)
    dst_files_509421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1630, 28), 'dst_files', False)
    # Processing the call keyword arguments (line 1630)
    kwargs_509422 = {}
    # Getting the type of 'all_newer' (line 1630)
    all_newer_509419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1630, 7), 'all_newer', False)
    # Calling all_newer(args, kwargs) (line 1630)
    all_newer_call_result_509423 = invoke(stypy.reporting.localization.Localization(__file__, 1630, 7), all_newer_509419, *[src_files_509420, dst_files_509421], **kwargs_509422)
    
    # Testing the type of an if condition (line 1630)
    if_condition_509424 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1630, 4), all_newer_call_result_509423)
    # Assigning a type to the variable 'if_condition_509424' (line 1630)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1630, 4), 'if_condition_509424', if_condition_509424)
    # SSA begins for if statement (line 1630)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to print(...): (line 1631)
    # Processing the call arguments (line 1631)
    str_509426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 14), 'str', 'scipy/special/_generate_pyx.py: all files up-to-date')
    # Processing the call keyword arguments (line 1631)
    kwargs_509427 = {}
    # Getting the type of 'print' (line 1631)
    print_509425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1631, 8), 'print', False)
    # Calling print(args, kwargs) (line 1631)
    print_call_result_509428 = invoke(stypy.reporting.localization.Localization(__file__, 1631, 8), print_509425, *[str_509426], **kwargs_509427)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1632)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1632, 8), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 1630)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1634):
    
    # Assigning a Call to a Name (line 1634):
    
    # Call to parse_all(...): (line 1634)
    # Processing the call arguments (line 1634)
    # Getting the type of 'FUNCS' (line 1634)
    FUNCS_509431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1634, 29), 'FUNCS', False)
    # Processing the call keyword arguments (line 1634)
    kwargs_509432 = {}
    # Getting the type of 'Ufunc' (line 1634)
    Ufunc_509429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1634, 13), 'Ufunc', False)
    # Obtaining the member 'parse_all' of a type (line 1634)
    parse_all_509430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1634, 13), Ufunc_509429, 'parse_all')
    # Calling parse_all(args, kwargs) (line 1634)
    parse_all_call_result_509433 = invoke(stypy.reporting.localization.Localization(__file__, 1634, 13), parse_all_509430, *[FUNCS_509431], **kwargs_509432)
    
    # Assigning a type to the variable 'ufuncs' (line 1634)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1634, 4), 'ufuncs', parse_all_call_result_509433)
    
    # Call to generate_ufuncs(...): (line 1635)
    # Processing the call arguments (line 1635)
    str_509435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 20), 'str', '_ufuncs')
    str_509436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1635, 31), 'str', '_ufuncs_cxx')
    # Getting the type of 'ufuncs' (line 1635)
    ufuncs_509437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 46), 'ufuncs', False)
    # Processing the call keyword arguments (line 1635)
    kwargs_509438 = {}
    # Getting the type of 'generate_ufuncs' (line 1635)
    generate_ufuncs_509434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 4), 'generate_ufuncs', False)
    # Calling generate_ufuncs(args, kwargs) (line 1635)
    generate_ufuncs_call_result_509439 = invoke(stypy.reporting.localization.Localization(__file__, 1635, 4), generate_ufuncs_509434, *[str_509435, str_509436, ufuncs_509437], **kwargs_509438)
    
    
    # Assigning a Call to a Name (line 1636):
    
    # Assigning a Call to a Name (line 1636):
    
    # Call to parse_all(...): (line 1636)
    # Processing the call arguments (line 1636)
    # Getting the type of 'FUNCS' (line 1636)
    FUNCS_509442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1636, 38), 'FUNCS', False)
    # Processing the call keyword arguments (line 1636)
    kwargs_509443 = {}
    # Getting the type of 'FusedFunc' (line 1636)
    FusedFunc_509440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1636, 18), 'FusedFunc', False)
    # Obtaining the member 'parse_all' of a type (line 1636)
    parse_all_509441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1636, 18), FusedFunc_509440, 'parse_all')
    # Calling parse_all(args, kwargs) (line 1636)
    parse_all_call_result_509444 = invoke(stypy.reporting.localization.Localization(__file__, 1636, 18), parse_all_509441, *[FUNCS_509442], **kwargs_509443)
    
    # Assigning a type to the variable 'fused_funcs' (line 1636)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1636, 4), 'fused_funcs', parse_all_call_result_509444)
    
    # Call to generate_fused_funcs(...): (line 1637)
    # Processing the call arguments (line 1637)
    str_509446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1637, 25), 'str', 'cython_special')
    str_509447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1637, 43), 'str', '_ufuncs')
    # Getting the type of 'fused_funcs' (line 1637)
    fused_funcs_509448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 54), 'fused_funcs', False)
    # Processing the call keyword arguments (line 1637)
    kwargs_509449 = {}
    # Getting the type of 'generate_fused_funcs' (line 1637)
    generate_fused_funcs_509445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 4), 'generate_fused_funcs', False)
    # Calling generate_fused_funcs(args, kwargs) (line 1637)
    generate_fused_funcs_call_result_509450 = invoke(stypy.reporting.localization.Localization(__file__, 1637, 4), generate_fused_funcs_509445, *[str_509446, str_509447, fused_funcs_509448], **kwargs_509449)
    
    
    # ################# End of 'main(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'main' in the type store
    # Getting the type of 'stypy_return_type' (line 1613)
    stypy_return_type_509451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1613, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_509451)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'main'
    return stypy_return_type_509451

# Assigning a type to the variable 'main' (line 1613)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1613, 0), 'main', main)

if (__name__ == '__main__'):
    
    # Call to main(...): (line 1641)
    # Processing the call keyword arguments (line 1641)
    kwargs_509453 = {}
    # Getting the type of 'main' (line 1641)
    main_509452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1641, 4), 'main', False)
    # Calling main(args, kwargs) (line 1641)
    main_call_result_509454 = invoke(stypy.reporting.localization.Localization(__file__, 1641, 4), main_509452, *[], **kwargs_509453)
    


# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
