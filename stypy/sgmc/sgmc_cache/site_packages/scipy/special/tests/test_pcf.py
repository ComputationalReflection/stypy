
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''Tests for parabolic cylinder functions.
2: 
3: '''
4: import numpy as np
5: from numpy.testing import assert_allclose, assert_equal
6: import scipy.special as sc
7: 
8: 
9: def test_pbwa_segfault():
10:     # Regression test for https://github.com/scipy/scipy/issues/6208.
11:     #
12:     # Data generated by mpmath.
13:     #
14:     w = 1.02276567211316867161
15:     wp = -0.48887053372346189882
16:     assert_allclose(sc.pbwa(0, 0), (w, wp), rtol=1e-13, atol=0)
17: 
18: 
19: def test_pbwa_nan():
20:     # Check that NaN's are returned outside of the range in which the
21:     # implementation is accurate.
22:     pts = [(-6, -6), (-6, 6), (6, -6), (6, 6)]
23:     for p in pts:
24:         assert_equal(sc.pbwa(*p), (np.nan, np.nan))
25: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_559038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3, (-1)), 'str', 'Tests for parabolic cylinder functions.\n\n')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 4, 0))

# 'import numpy' statement (line 4)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_559039 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'numpy')

if (type(import_559039) is not StypyTypeError):

    if (import_559039 != 'pyd_module'):
        __import__(import_559039)
        sys_modules_559040 = sys.modules[import_559039]
        import_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'np', sys_modules_559040.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 4)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 4, 0), 'numpy', import_559039)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 5, 0))

# 'from numpy.testing import assert_allclose, assert_equal' statement (line 5)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_559041 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 5, 0), 'numpy.testing')

if (type(import_559041) is not StypyTypeError):

    if (import_559041 != 'pyd_module'):
        __import__(import_559041)
        sys_modules_559042 = sys.modules[import_559041]
        import_from_module(stypy.reporting.localization.Localization(__file__, 5, 0), 'numpy.testing', sys_modules_559042.module_type_store, module_type_store, ['assert_allclose', 'assert_equal'])
        nest_module(stypy.reporting.localization.Localization(__file__, 5, 0), __file__, sys_modules_559042, sys_modules_559042.module_type_store, module_type_store)
    else:
        from numpy.testing import assert_allclose, assert_equal

        import_from_module(stypy.reporting.localization.Localization(__file__, 5, 0), 'numpy.testing', None, module_type_store, ['assert_allclose', 'assert_equal'], [assert_allclose, assert_equal])

else:
    # Assigning a type to the variable 'numpy.testing' (line 5)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 5, 0), 'numpy.testing', import_559041)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 6, 0))

# 'import scipy.special' statement (line 6)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_559043 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'scipy.special')

if (type(import_559043) is not StypyTypeError):

    if (import_559043 != 'pyd_module'):
        __import__(import_559043)
        sys_modules_559044 = sys.modules[import_559043]
        import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'sc', sys_modules_559044.module_type_store, module_type_store)
    else:
        import scipy.special as sc

        import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'sc', scipy.special, module_type_store)

else:
    # Assigning a type to the variable 'scipy.special' (line 6)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 6, 0), 'scipy.special', import_559043)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')


@norecursion
def test_pbwa_segfault(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_pbwa_segfault'
    module_type_store = module_type_store.open_function_context('test_pbwa_segfault', 9, 0, False)
    
    # Passed parameters checking function
    test_pbwa_segfault.stypy_localization = localization
    test_pbwa_segfault.stypy_type_of_self = None
    test_pbwa_segfault.stypy_type_store = module_type_store
    test_pbwa_segfault.stypy_function_name = 'test_pbwa_segfault'
    test_pbwa_segfault.stypy_param_names_list = []
    test_pbwa_segfault.stypy_varargs_param_name = None
    test_pbwa_segfault.stypy_kwargs_param_name = None
    test_pbwa_segfault.stypy_call_defaults = defaults
    test_pbwa_segfault.stypy_call_varargs = varargs
    test_pbwa_segfault.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_pbwa_segfault', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_pbwa_segfault', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_pbwa_segfault(...)' code ##################

    
    # Assigning a Num to a Name (line 14):
    float_559045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 8), 'float')
    # Assigning a type to the variable 'w' (line 14)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 14, 4), 'w', float_559045)
    
    # Assigning a Num to a Name (line 15):
    float_559046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 15, 9), 'float')
    # Assigning a type to the variable 'wp' (line 15)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 15, 4), 'wp', float_559046)
    
    # Call to assert_allclose(...): (line 16)
    # Processing the call arguments (line 16)
    
    # Call to pbwa(...): (line 16)
    # Processing the call arguments (line 16)
    int_559050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 16, 28), 'int')
    int_559051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 16, 31), 'int')
    # Processing the call keyword arguments (line 16)
    kwargs_559052 = {}
    # Getting the type of 'sc' (line 16)
    sc_559048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 20), 'sc', False)
    # Obtaining the member 'pbwa' of a type (line 16)
    pbwa_559049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 16, 20), sc_559048, 'pbwa')
    # Calling pbwa(args, kwargs) (line 16)
    pbwa_call_result_559053 = invoke(stypy.reporting.localization.Localization(__file__, 16, 20), pbwa_559049, *[int_559050, int_559051], **kwargs_559052)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 16)
    tuple_559054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 16, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 16)
    # Adding element type (line 16)
    # Getting the type of 'w' (line 16)
    w_559055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 36), 'w', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 16, 36), tuple_559054, w_559055)
    # Adding element type (line 16)
    # Getting the type of 'wp' (line 16)
    wp_559056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 39), 'wp', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 16, 36), tuple_559054, wp_559056)
    
    # Processing the call keyword arguments (line 16)
    float_559057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 16, 49), 'float')
    keyword_559058 = float_559057
    int_559059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 16, 61), 'int')
    keyword_559060 = int_559059
    kwargs_559061 = {'rtol': keyword_559058, 'atol': keyword_559060}
    # Getting the type of 'assert_allclose' (line 16)
    assert_allclose_559047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 16)
    assert_allclose_call_result_559062 = invoke(stypy.reporting.localization.Localization(__file__, 16, 4), assert_allclose_559047, *[pbwa_call_result_559053, tuple_559054], **kwargs_559061)
    
    
    # ################# End of 'test_pbwa_segfault(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_pbwa_segfault' in the type store
    # Getting the type of 'stypy_return_type' (line 9)
    stypy_return_type_559063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 9, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_559063)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_pbwa_segfault'
    return stypy_return_type_559063

# Assigning a type to the variable 'test_pbwa_segfault' (line 9)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 9, 0), 'test_pbwa_segfault', test_pbwa_segfault)

@norecursion
def test_pbwa_nan(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_pbwa_nan'
    module_type_store = module_type_store.open_function_context('test_pbwa_nan', 19, 0, False)
    
    # Passed parameters checking function
    test_pbwa_nan.stypy_localization = localization
    test_pbwa_nan.stypy_type_of_self = None
    test_pbwa_nan.stypy_type_store = module_type_store
    test_pbwa_nan.stypy_function_name = 'test_pbwa_nan'
    test_pbwa_nan.stypy_param_names_list = []
    test_pbwa_nan.stypy_varargs_param_name = None
    test_pbwa_nan.stypy_kwargs_param_name = None
    test_pbwa_nan.stypy_call_defaults = defaults
    test_pbwa_nan.stypy_call_varargs = varargs
    test_pbwa_nan.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_pbwa_nan', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_pbwa_nan', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_pbwa_nan(...)' code ##################

    
    # Assigning a List to a Name (line 22):
    
    # Obtaining an instance of the builtin type 'list' (line 22)
    list_559064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 22)
    # Adding element type (line 22)
    
    # Obtaining an instance of the builtin type 'tuple' (line 22)
    tuple_559065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 22)
    # Adding element type (line 22)
    int_559066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 12), tuple_559065, int_559066)
    # Adding element type (line 22)
    int_559067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 12), tuple_559065, int_559067)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 10), list_559064, tuple_559065)
    # Adding element type (line 22)
    
    # Obtaining an instance of the builtin type 'tuple' (line 22)
    tuple_559068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 22), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 22)
    # Adding element type (line 22)
    int_559069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 22), tuple_559068, int_559069)
    # Adding element type (line 22)
    int_559070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 26), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 22), tuple_559068, int_559070)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 10), list_559064, tuple_559068)
    # Adding element type (line 22)
    
    # Obtaining an instance of the builtin type 'tuple' (line 22)
    tuple_559071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 22)
    # Adding element type (line 22)
    int_559072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 31), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 31), tuple_559071, int_559072)
    # Adding element type (line 22)
    int_559073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 34), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 31), tuple_559071, int_559073)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 10), list_559064, tuple_559071)
    # Adding element type (line 22)
    
    # Obtaining an instance of the builtin type 'tuple' (line 22)
    tuple_559074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 40), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 22)
    # Adding element type (line 22)
    int_559075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 40), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 40), tuple_559074, int_559075)
    # Adding element type (line 22)
    int_559076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 43), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 40), tuple_559074, int_559076)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 22, 10), list_559064, tuple_559074)
    
    # Assigning a type to the variable 'pts' (line 22)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 22, 4), 'pts', list_559064)
    
    # Getting the type of 'pts' (line 23)
    pts_559077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 13), 'pts')
    # Testing the type of a for loop iterable (line 23)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 23, 4), pts_559077)
    # Getting the type of the for loop variable (line 23)
    for_loop_var_559078 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 23, 4), pts_559077)
    # Assigning a type to the variable 'p' (line 23)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 4), 'p', for_loop_var_559078)
    # SSA begins for a for statement (line 23)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to assert_equal(...): (line 24)
    # Processing the call arguments (line 24)
    
    # Call to pbwa(...): (line 24)
    # Getting the type of 'p' (line 24)
    p_559082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 30), 'p', False)
    # Processing the call keyword arguments (line 24)
    kwargs_559083 = {}
    # Getting the type of 'sc' (line 24)
    sc_559080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 21), 'sc', False)
    # Obtaining the member 'pbwa' of a type (line 24)
    pbwa_559081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 24, 21), sc_559080, 'pbwa')
    # Calling pbwa(args, kwargs) (line 24)
    pbwa_call_result_559084 = invoke(stypy.reporting.localization.Localization(__file__, 24, 21), pbwa_559081, *[p_559082], **kwargs_559083)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 24)
    tuple_559085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 35), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 24)
    # Adding element type (line 24)
    # Getting the type of 'np' (line 24)
    np_559086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 35), 'np', False)
    # Obtaining the member 'nan' of a type (line 24)
    nan_559087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 24, 35), np_559086, 'nan')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 24, 35), tuple_559085, nan_559087)
    # Adding element type (line 24)
    # Getting the type of 'np' (line 24)
    np_559088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 43), 'np', False)
    # Obtaining the member 'nan' of a type (line 24)
    nan_559089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 24, 43), np_559088, 'nan')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 24, 35), tuple_559085, nan_559089)
    
    # Processing the call keyword arguments (line 24)
    kwargs_559090 = {}
    # Getting the type of 'assert_equal' (line 24)
    assert_equal_559079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 8), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 24)
    assert_equal_call_result_559091 = invoke(stypy.reporting.localization.Localization(__file__, 24, 8), assert_equal_559079, *[pbwa_call_result_559084, tuple_559085], **kwargs_559090)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_pbwa_nan(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_pbwa_nan' in the type store
    # Getting the type of 'stypy_return_type' (line 19)
    stypy_return_type_559092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_559092)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_pbwa_nan'
    return stypy_return_type_559092

# Assigning a type to the variable 'test_pbwa_nan' (line 19)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'test_pbwa_nan', test_pbwa_nan)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
