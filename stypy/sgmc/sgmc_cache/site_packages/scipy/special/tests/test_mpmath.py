
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''
2: Test Scipy functions versus mpmath, if available.
3: 
4: '''
5: from __future__ import division, print_function, absolute_import
6: 
7: import numpy as np
8: from numpy.testing import assert_, assert_allclose
9: from numpy import pi
10: import pytest
11: 
12: from distutils.version import LooseVersion
13: 
14: import scipy.special as sc
15: from scipy._lib.six import with_metaclass
16: from scipy.special._testutils import (
17:     MissingModule, check_version, FuncData,
18:     assert_func_equal)
19: from scipy.special._mptestutils import (
20:     Arg, FixedArg, ComplexArg, IntArg, assert_mpmath_equal,
21:     nonfunctional_tooslow, trace_args, time_limited, exception_to_nan,
22:     inf_to_nan)
23: from scipy.special._ufuncs import (
24:     _sinpi, _cospi, _lgam1p, _lanczos_sum_expg_scaled, _log1pmx,
25:     _igam_fac)
26: 
27: try:
28:     import mpmath
29: except ImportError:
30:     mpmath = MissingModule('mpmath')
31: 
32: 
33: _is_32bit_platform = np.intp(0).itemsize < 8
34: 
35: 
36: # ------------------------------------------------------------------------------
37: # expi
38: # ------------------------------------------------------------------------------
39: 
40: @check_version(mpmath, '0.10')
41: def test_expi_complex():
42:     dataset = []
43:     for r in np.logspace(-99, 2, 10):
44:         for p in np.linspace(0, 2*np.pi, 30):
45:             z = r*np.exp(1j*p)
46:             dataset.append((z, complex(mpmath.ei(z))))
47:     dataset = np.array(dataset, dtype=np.complex_)
48: 
49:     FuncData(sc.expi, dataset, 0, 1).check()
50: 
51: 
52: # ------------------------------------------------------------------------------
53: # expn
54: # ------------------------------------------------------------------------------
55: 
56: @check_version(mpmath, '0.19')
57: def test_expn_large_n():
58:     # Test the transition to the asymptotic regime of n.
59:     dataset = []
60:     for n in [50, 51]:
61:         for x in np.logspace(0, 4, 200):
62:             with mpmath.workdps(100):
63:                 dataset.append((n, x, float(mpmath.expint(n, x))))
64:     dataset = np.asarray(dataset)
65: 
66:     FuncData(sc.expn, dataset, (0, 1), 2, rtol=1e-13).check()
67: 
68: # ------------------------------------------------------------------------------
69: # hyp0f1
70: # ------------------------------------------------------------------------------
71: 
72: 
73: @check_version(mpmath, '0.19')
74: def test_hyp0f1_gh5764():
75:     # Do a small and somewhat systematic test that runs quickly
76:     dataset = []
77:     axis = [-99.5, -9.5, -0.5, 0.5, 9.5, 99.5]
78:     for v in axis:
79:         for x in axis:
80:             for y in axis:
81:                 z = x + 1j*y
82:                 # mpmath computes the answer correctly at dps ~ 17 but
83:                 # fails for 20 < dps < 120 (uses a different method);
84:                 # set the dps high enough that this isn't an issue
85:                 with mpmath.workdps(120):
86:                     res = complex(mpmath.hyp0f1(v, z))
87:                 dataset.append((v, z, res))
88:     dataset = np.array(dataset)
89: 
90:     FuncData(lambda v, z: sc.hyp0f1(v.real, z), dataset, (0, 1), 2,
91:              rtol=1e-13).check()
92: 
93: 
94: @check_version(mpmath, '0.19')
95: def test_hyp0f1_gh_1609():
96:     # this is a regression test for gh-1609
97:     vv = np.linspace(150, 180, 21)
98:     af = sc.hyp0f1(vv, 0.5)
99:     mf = np.array([mpmath.hyp0f1(v, 0.5) for v in vv])
100:     assert_allclose(af, mf.astype(float), rtol=1e-12)
101: 
102: 
103: # ------------------------------------------------------------------------------
104: # hyp2f1
105: # ------------------------------------------------------------------------------
106: 
107: @pytest.mark.xfail(reason="hyp2f1 produces wrong/nonstandard values (gh-7961)")
108: @check_version(mpmath, '1.0.0')
109: def test_hyp2f1_strange_points():
110:     pts = [
111:         (2, -1, -1, 0.7),  # expected: 2.4
112:         (2, -2, -2, 0.7),  # expected: 3.87
113:     ]
114:     kw = dict(eliminate=True)
115:     dataset = [p + (float(mpmath.hyp2f1(*p, **kw)),) for p in pts]
116:     dataset = np.array(dataset, dtype=np.float_)
117: 
118:     FuncData(sc.hyp2f1, dataset, (0,1,2,3), 4, rtol=1e-10).check()
119: 
120: 
121: @check_version(mpmath, '0.13')
122: def test_hyp2f1_real_some_points():
123:     pts = [
124:         (1, 2, 3, 0),
125:         (1./3, 2./3, 5./6, 27./32),
126:         (1./4, 1./2, 3./4, 80./81),
127:         (2,-2, -3, 3),
128:         (2, -3, -2, 3),
129:         (2, -1.5, -1.5, 3),
130:         (1, 2, 3, 0),
131:         (0.7235, -1, -5, 0.3),
132:         (0.25, 1./3, 2, 0.999),
133:         (0.25, 1./3, 2, -1),
134:         (2, 3, 5, 0.99),
135:         (3./2, -0.5, 3, 0.99),
136:         (2, 2.5, -3.25, 0.999),
137:         (-8, 18.016500331508873, 10.805295997850628, 0.90875647507000001),
138:         (-10, 900, -10.5, 0.99),
139:         (-10, 900, 10.5, 0.99),
140:         (-1, 2, 1, 1.0),
141:         (-1, 2, 1, -1.0),
142:         (-3, 13, 5, 1.0),
143:         (-3, 13, 5, -1.0),
144:         (0.5, 1 - 270.5, 1.5, 0.999**2),  # from issue 1561
145:     ]
146:     dataset = [p + (float(mpmath.hyp2f1(*p)),) for p in pts]
147:     dataset = np.array(dataset, dtype=np.float_)
148: 
149:     olderr = np.seterr(invalid='ignore')
150:     try:
151:         FuncData(sc.hyp2f1, dataset, (0,1,2,3), 4, rtol=1e-10).check()
152:     finally:
153:         np.seterr(**olderr)
154: 
155: 
156: @check_version(mpmath, '0.14')
157: def test_hyp2f1_some_points_2():
158:     # Taken from mpmath unit tests -- this point failed for mpmath 0.13 but
159:     # was fixed in their SVN since then
160:     pts = [
161:         (112, (51,10), (-9,10), -0.99999),
162:         (10,-900,10.5,0.99),
163:         (10,-900,-10.5,0.99),
164:     ]
165: 
166:     def fev(x):
167:         if isinstance(x, tuple):
168:             return float(x[0]) / x[1]
169:         else:
170:             return x
171: 
172:     dataset = [tuple(map(fev, p)) + (float(mpmath.hyp2f1(*p)),) for p in pts]
173:     dataset = np.array(dataset, dtype=np.float_)
174: 
175:     FuncData(sc.hyp2f1, dataset, (0,1,2,3), 4, rtol=1e-10).check()
176: 
177: 
178: @check_version(mpmath, '0.13')
179: def test_hyp2f1_real_some():
180:     dataset = []
181:     for a in [-10, -5, -1.8, 1.8, 5, 10]:
182:         for b in [-2.5, -1, 1, 7.4]:
183:             for c in [-9, -1.8, 5, 20.4]:
184:                 for z in [-10, -1.01, -0.99, 0, 0.6, 0.95, 1.5, 10]:
185:                     try:
186:                         v = float(mpmath.hyp2f1(a, b, c, z))
187:                     except:
188:                         continue
189:                     dataset.append((a, b, c, z, v))
190:     dataset = np.array(dataset, dtype=np.float_)
191: 
192:     olderr = np.seterr(invalid='ignore')
193:     try:
194:         FuncData(sc.hyp2f1, dataset, (0,1,2,3), 4, rtol=1e-9,
195:                  ignore_inf_sign=True).check()
196:     finally:
197:         np.seterr(**olderr)
198: 
199: 
200: @check_version(mpmath, '0.12')
201: @pytest.mark.slow
202: def test_hyp2f1_real_random():
203:     npoints = 500
204:     dataset = np.zeros((npoints, 5), np.float_)
205: 
206:     np.random.seed(1234)
207:     dataset[:, 0] = np.random.pareto(1.5, npoints)
208:     dataset[:, 1] = np.random.pareto(1.5, npoints)
209:     dataset[:, 2] = np.random.pareto(1.5, npoints)
210:     dataset[:, 3] = 2*np.random.rand(npoints) - 1
211: 
212:     dataset[:, 0] *= (-1)**np.random.randint(2, npoints)
213:     dataset[:, 1] *= (-1)**np.random.randint(2, npoints)
214:     dataset[:, 2] *= (-1)**np.random.randint(2, npoints)
215: 
216:     for ds in dataset:
217:         if mpmath.__version__ < '0.14':
218:             # mpmath < 0.14 fails for c too much smaller than a, b
219:             if abs(ds[:2]).max() > abs(ds[2]):
220:                 ds[2] = abs(ds[:2]).max()
221:         ds[4] = float(mpmath.hyp2f1(*tuple(ds[:4])))
222: 
223:     FuncData(sc.hyp2f1, dataset, (0, 1, 2, 3), 4, rtol=1e-9).check()
224: 
225: # ------------------------------------------------------------------------------
226: # erf (complex)
227: # ------------------------------------------------------------------------------
228: 
229: @check_version(mpmath, '0.14')
230: def test_erf_complex():
231:     # need to increase mpmath precision for this test
232:     old_dps, old_prec = mpmath.mp.dps, mpmath.mp.prec
233:     try:
234:         mpmath.mp.dps = 70
235:         x1, y1 = np.meshgrid(np.linspace(-10, 1, 31), np.linspace(-10, 1, 11))
236:         x2, y2 = np.meshgrid(np.logspace(-80, .8, 31), np.logspace(-80, .8, 11))
237:         points = np.r_[x1.ravel(),x2.ravel()] + 1j*np.r_[y1.ravel(), y2.ravel()]
238: 
239:         assert_func_equal(sc.erf, lambda x: complex(mpmath.erf(x)), points,
240:                           vectorized=False, rtol=1e-13)
241:         assert_func_equal(sc.erfc, lambda x: complex(mpmath.erfc(x)), points,
242:                           vectorized=False, rtol=1e-13)
243:     finally:
244:         mpmath.mp.dps, mpmath.mp.prec = old_dps, old_prec
245: 
246: 
247: # ------------------------------------------------------------------------------
248: # lpmv
249: # ------------------------------------------------------------------------------
250: 
251: @check_version(mpmath, '0.15')
252: def test_lpmv():
253:     pts = []
254:     for x in [-0.99, -0.557, 1e-6, 0.132, 1]:
255:         pts.extend([
256:             (1, 1, x),
257:             (1, -1, x),
258:             (-1, 1, x),
259:             (-1, -2, x),
260:             (1, 1.7, x),
261:             (1, -1.7, x),
262:             (-1, 1.7, x),
263:             (-1, -2.7, x),
264:             (1, 10, x),
265:             (1, 11, x),
266:             (3, 8, x),
267:             (5, 11, x),
268:             (-3, 8, x),
269:             (-5, 11, x),
270:             (3, -8, x),
271:             (5, -11, x),
272:             (-3, -8, x),
273:             (-5, -11, x),
274:             (3, 8.3, x),
275:             (5, 11.3, x),
276:             (-3, 8.3, x),
277:             (-5, 11.3, x),
278:             (3, -8.3, x),
279:             (5, -11.3, x),
280:             (-3, -8.3, x),
281:             (-5, -11.3, x),
282:         ])
283: 
284:     def mplegenp(nu, mu, x):
285:         if mu == int(mu) and x == 1:
286:             # mpmath 0.17 gets this wrong
287:             if mu == 0:
288:                 return 1
289:             else:
290:                 return 0
291:         return mpmath.legenp(nu, mu, x)
292: 
293:     dataset = [p + (mplegenp(p[1], p[0], p[2]),) for p in pts]
294:     dataset = np.array(dataset, dtype=np.float_)
295: 
296:     def evf(mu, nu, x):
297:         return sc.lpmv(mu.astype(int), nu, x)
298: 
299:     olderr = np.seterr(invalid='ignore')
300:     try:
301:         FuncData(evf, dataset, (0,1,2), 3, rtol=1e-10, atol=1e-14).check()
302:     finally:
303:         np.seterr(**olderr)
304: 
305: 
306: # ------------------------------------------------------------------------------
307: # beta
308: # ------------------------------------------------------------------------------
309: 
310: @check_version(mpmath, '0.15')
311: def test_beta():
312:     np.random.seed(1234)
313: 
314:     b = np.r_[np.logspace(-200, 200, 4),
315:               np.logspace(-10, 10, 4),
316:               np.logspace(-1, 1, 4),
317:               np.arange(-10, 11, 1),
318:               np.arange(-10, 11, 1) + 0.5,
319:               -1, -2.3, -3, -100.3, -10003.4]
320:     a = b
321: 
322:     ab = np.array(np.broadcast_arrays(a[:,None], b[None,:])).reshape(2, -1).T
323: 
324:     old_dps, old_prec = mpmath.mp.dps, mpmath.mp.prec
325:     try:
326:         mpmath.mp.dps = 400
327: 
328:         assert_func_equal(sc.beta,
329:                           lambda a, b: float(mpmath.beta(a, b)),
330:                           ab,
331:                           vectorized=False,
332:                           rtol=1e-10,
333:                           ignore_inf_sign=True)
334: 
335:         assert_func_equal(
336:             sc.betaln,
337:             lambda a, b: float(mpmath.log(abs(mpmath.beta(a, b)))),
338:             ab,
339:             vectorized=False,
340:             rtol=1e-10)
341:     finally:
342:         mpmath.mp.dps, mpmath.mp.prec = old_dps, old_prec
343: 
344: 
345: # ------------------------------------------------------------------------------
346: # loggamma
347: # ------------------------------------------------------------------------------
348: 
349: LOGGAMMA_TAYLOR_RADIUS = 0.2
350: 
351: 
352: @check_version(mpmath, '0.19')
353: def test_loggamma_taylor_transition():
354:     # Make sure there isn't a big jump in accuracy when we move from
355:     # using the Taylor series to using the recurrence relation.
356: 
357:     r = LOGGAMMA_TAYLOR_RADIUS + np.array([-0.1, -0.01, 0, 0.01, 0.1])
358:     theta = np.linspace(0, 2*np.pi, 20)
359:     r, theta = np.meshgrid(r, theta)
360:     dz = r*np.exp(1j*theta)
361:     z = np.r_[1 + dz, 2 + dz].flatten()
362: 
363:     dataset = []
364:     for z0 in z:
365:         dataset.append((z0, complex(mpmath.loggamma(z0))))
366:     dataset = np.array(dataset)
367: 
368:     FuncData(sc.loggamma, dataset, 0, 1, rtol=5e-14).check()
369: 
370: 
371: @check_version(mpmath, '0.19')
372: def test_loggamma_taylor():
373:     # Test around the zeros at z = 1, 2.
374: 
375:     r = np.logspace(-16, np.log10(LOGGAMMA_TAYLOR_RADIUS), 10)
376:     theta = np.linspace(0, 2*np.pi, 20)
377:     r, theta = np.meshgrid(r, theta)
378:     dz = r*np.exp(1j*theta)
379:     z = np.r_[1 + dz, 2 + dz].flatten()
380: 
381:     dataset = []
382:     for z0 in z:
383:         dataset.append((z0, complex(mpmath.loggamma(z0))))
384:     dataset = np.array(dataset)
385: 
386:     FuncData(sc.loggamma, dataset, 0, 1, rtol=5e-14).check()
387: 
388: 
389: # ------------------------------------------------------------------------------
390: # rgamma
391: # ------------------------------------------------------------------------------
392: 
393: @check_version(mpmath, '0.19')
394: @pytest.mark.slow
395: def test_rgamma_zeros():
396:     # Test around the zeros at z = 0, -1, -2, ...,  -169. (After -169 we
397:     # get values that are out of floating point range even when we're
398:     # within 0.1 of the zero.)
399: 
400:     # Can't use too many points here or the test takes forever.
401:     dx = np.r_[-np.logspace(-1, -13, 3), 0, np.logspace(-13, -1, 3)]
402:     dy = dx.copy()
403:     dx, dy = np.meshgrid(dx, dy)
404:     dz = dx + 1j*dy
405:     zeros = np.arange(0, -170, -1).reshape(1, 1, -1)
406:     z = (zeros + np.dstack((dz,)*zeros.size)).flatten()
407:     dataset = []
408:     with mpmath.workdps(100):
409:         for z0 in z:
410:             dataset.append((z0, complex(mpmath.rgamma(z0))))
411: 
412:     dataset = np.array(dataset)
413:     FuncData(sc.rgamma, dataset, 0, 1, rtol=1e-12).check()
414: 
415: 
416: # ------------------------------------------------------------------------------
417: # digamma
418: # ------------------------------------------------------------------------------
419: 
420: @check_version(mpmath, '0.19')
421: @pytest.mark.slow
422: def test_digamma_roots():
423:     # Test the special-cased roots for digamma.
424:     root = mpmath.findroot(mpmath.digamma, 1.5)
425:     roots = [float(root)]
426:     root = mpmath.findroot(mpmath.digamma, -0.5)
427:     roots.append(float(root))
428:     roots = np.array(roots)
429: 
430:     # If we test beyond a radius of 0.24 mpmath will take forever.
431:     dx = np.r_[-0.24, -np.logspace(-1, -15, 10), 0, np.logspace(-15, -1, 10), 0.24]
432:     dy = dx.copy()
433:     dx, dy = np.meshgrid(dx, dy)
434:     dz = dx + 1j*dy
435:     z = (roots + np.dstack((dz,)*roots.size)).flatten()
436:     dataset = []
437:     with mpmath.workdps(30):
438:         for z0 in z:
439:             dataset.append((z0, complex(mpmath.digamma(z0))))
440: 
441:     dataset = np.array(dataset)
442:     FuncData(sc.digamma, dataset, 0, 1, rtol=1e-14).check()
443: 
444: 
445: @check_version(mpmath, '0.19')
446: def test_digamma_negreal():
447:     # Test digamma around the negative real axis. Don't do this in
448:     # TestSystematic because the points need some jiggering so that
449:     # mpmath doesn't take forever.
450: 
451:     digamma = exception_to_nan(mpmath.digamma)
452: 
453:     x = -np.logspace(300, -30, 100)
454:     y = np.r_[-np.logspace(0, -3, 5), 0, np.logspace(-3, 0, 5)]
455:     x, y = np.meshgrid(x, y)
456:     z = (x + 1j*y).flatten()
457: 
458:     dataset = []
459:     with mpmath.workdps(40):
460:         for z0 in z:
461:             res = digamma(z0)
462:             dataset.append((z0, complex(res)))
463:     dataset = np.asarray(dataset)
464: 
465:     FuncData(sc.digamma, dataset, 0, 1, rtol=1e-13).check()
466: 
467: 
468: @check_version(mpmath, '0.19')
469: def test_digamma_boundary():
470:     # Check that there isn't a jump in accuracy when we switch from
471:     # using the asymptotic series to the reflection formula.
472: 
473:     x = -np.logspace(300, -30, 100)
474:     y = np.array([-6.1, -5.9, 5.9, 6.1])
475:     x, y = np.meshgrid(x, y)
476:     z = (x + 1j*y).flatten()
477: 
478:     dataset = []
479:     with mpmath.workdps(30):
480:         for z0 in z:
481:             res = mpmath.digamma(z0)
482:             dataset.append((z0, complex(res)))
483:     dataset = np.asarray(dataset)
484: 
485:     FuncData(sc.digamma, dataset, 0, 1, rtol=1e-13).check()
486: 
487: 
488: # ------------------------------------------------------------------------------
489: # gammainc
490: # ------------------------------------------------------------------------------
491: 
492: @check_version(mpmath, '0.19')
493: @pytest.mark.slow
494: def test_gammainc_boundary():
495:     # Test the transition to the asymptotic series.
496:     small = 20
497:     a = np.linspace(0.5*small, 2*small, 50)
498:     x = a.copy()
499:     a, x = np.meshgrid(a, x)
500:     a, x = a.flatten(), x.flatten()
501:     dataset = []
502:     with mpmath.workdps(100):
503:         for a0, x0 in zip(a, x):
504:             dataset.append((a0, x0, float(mpmath.gammainc(a0, b=x0, regularized=True))))
505:     dataset = np.array(dataset)
506: 
507:     FuncData(sc.gammainc, dataset, (0, 1), 2, rtol=1e-12).check()
508: 
509: 
510: # ------------------------------------------------------------------------------
511: # spence
512: # ------------------------------------------------------------------------------
513: 
514: @check_version(mpmath, '0.19')
515: @pytest.mark.slow
516: def test_spence_circle():
517:     # The trickiest region for spence is around the circle |z - 1| = 1,
518:     # so test that region carefully.
519: 
520:     def spence(z):
521:         return complex(mpmath.polylog(2, 1 - z))
522: 
523:     r = np.linspace(0.5, 1.5)
524:     theta = np.linspace(0, 2*pi)
525:     z = (1 + np.outer(r, np.exp(1j*theta))).flatten()
526:     dataset = []
527:     for z0 in z:
528:         dataset.append((z0, spence(z0)))
529: 
530:     dataset = np.array(dataset)
531:     FuncData(sc.spence, dataset, 0, 1, rtol=1e-14).check()
532: 
533: 
534: # ------------------------------------------------------------------------------
535: # sinpi and cospi
536: # ------------------------------------------------------------------------------
537: 
538: @check_version(mpmath, '0.19')
539: def test_sinpi_zeros():
540:     eps = np.finfo(float).eps
541:     dx = np.r_[-np.logspace(0, -13, 3), 0, np.logspace(-13, 0, 3)]
542:     dy = dx.copy()
543:     dx, dy = np.meshgrid(dx, dy)
544:     dz = dx + 1j*dy
545:     zeros = np.arange(-100, 100, 1).reshape(1, 1, -1)
546:     z = (zeros + np.dstack((dz,)*zeros.size)).flatten()
547:     dataset = []
548:     for z0 in z:
549:         dataset.append((z0, complex(mpmath.sinpi(z0))))
550: 
551:     dataset = np.array(dataset)
552:     FuncData(_sinpi, dataset, 0, 1, rtol=2*eps).check()
553: 
554: 
555: @check_version(mpmath, '0.19')
556: def test_cospi_zeros():
557:     eps = np.finfo(float).eps
558:     dx = np.r_[-np.logspace(0, -13, 3), 0, np.logspace(-13, 0, 3)]
559:     dy = dx.copy()
560:     dx, dy = np.meshgrid(dx, dy)
561:     dz = dx + 1j*dy
562:     zeros = (np.arange(-100, 100, 1) + 0.5).reshape(1, 1, -1)
563:     z = (zeros + np.dstack((dz,)*zeros.size)).flatten()
564:     dataset = []
565:     for z0 in z:
566:         dataset.append((z0, complex(mpmath.cospi(z0))))
567: 
568:     dataset = np.array(dataset)
569:     FuncData(_cospi, dataset, 0, 1, rtol=2*eps).check()
570: 
571: 
572: # ------------------------------------------------------------------------------
573: # ellipj
574: # ------------------------------------------------------------------------------
575: 
576: @check_version(mpmath, '0.19')
577: def test_dn_quarter_period():
578:     def dn(u, m):
579:         return sc.ellipj(u, m)[2]
580: 
581:     def mpmath_dn(u, m):
582:         return float(mpmath.ellipfun("dn", u=u, m=m))
583: 
584:     m = np.linspace(0, 1, 20)
585:     du = np.r_[-np.logspace(-1, -15, 10), 0, np.logspace(-15, -1, 10)]
586:     dataset = []
587:     for m0 in m:
588:         u0 = float(mpmath.ellipk(m0))
589:         for du0 in du:
590:             p = u0 + du0
591:             dataset.append((p, m0, mpmath_dn(p, m0)))
592:     dataset = np.asarray(dataset)
593: 
594:     FuncData(dn, dataset, (0, 1), 2, rtol=1e-10).check()
595: 
596: 
597: # ------------------------------------------------------------------------------
598: # Wright Omega
599: # ------------------------------------------------------------------------------
600: 
601: def _mpmath_wrightomega(z, dps):
602:     with mpmath.workdps(dps):
603:         z = mpmath.mpc(z)
604:         unwind = mpmath.ceil((z.imag - mpmath.pi)/(2*mpmath.pi))
605:         res = mpmath.lambertw(mpmath.exp(z), unwind)
606:     return res
607: 
608: 
609: @pytest.mark.slow
610: @check_version(mpmath, '0.19')
611: def test_wrightomega_branch():
612:     x = -np.logspace(10, 0, 25)
613:     picut_above = [np.nextafter(np.pi, np.inf)]
614:     picut_below = [np.nextafter(np.pi, -np.inf)]
615:     npicut_above = [np.nextafter(-np.pi, np.inf)]
616:     npicut_below = [np.nextafter(-np.pi, -np.inf)]
617:     for i in range(50):
618:         picut_above.append(np.nextafter(picut_above[-1], np.inf))
619:         picut_below.append(np.nextafter(picut_below[-1], -np.inf))
620:         npicut_above.append(np.nextafter(npicut_above[-1], np.inf))
621:         npicut_below.append(np.nextafter(npicut_below[-1], -np.inf))
622:     y = np.hstack((picut_above, picut_below, npicut_above, npicut_below))
623:     x, y = np.meshgrid(x, y)
624:     z = (x + 1j*y).flatten()
625: 
626:     dataset = []
627:     for z0 in z:
628:         dataset.append((z0, complex(_mpmath_wrightomega(z0, 25))))
629:     dataset = np.asarray(dataset)
630: 
631:     FuncData(sc.wrightomega, dataset, 0, 1, rtol=1e-8).check()
632: 
633: 
634: @pytest.mark.slow
635: @check_version(mpmath, '0.19')
636: def test_wrightomega_region1():
637:     # This region gets less coverage in the TestSystematic test
638:     x = np.linspace(-2, 1)
639:     y = np.linspace(1, 2*np.pi)
640:     x, y = np.meshgrid(x, y)
641:     z = (x + 1j*y).flatten()
642: 
643:     dataset = []
644:     for z0 in z:
645:         dataset.append((z0, complex(_mpmath_wrightomega(z0, 25))))
646:     dataset = np.asarray(dataset)
647: 
648:     FuncData(sc.wrightomega, dataset, 0, 1, rtol=1e-15).check()
649: 
650: 
651: @pytest.mark.slow
652: @check_version(mpmath, '0.19')
653: def test_wrightomega_region2():
654:     # This region gets less coverage in the TestSystematic test
655:     x = np.linspace(-2, 1)
656:     y = np.linspace(-2*np.pi, -1)
657:     x, y = np.meshgrid(x, y)
658:     z = (x + 1j*y).flatten()
659: 
660:     dataset = []
661:     for z0 in z:
662:         dataset.append((z0, complex(_mpmath_wrightomega(z0, 25))))
663:     dataset = np.asarray(dataset)
664: 
665:     FuncData(sc.wrightomega, dataset, 0, 1, rtol=1e-15).check()
666: 
667: 
668: # ------------------------------------------------------------------------------
669: # Systematic tests
670: # ------------------------------------------------------------------------------
671: 
672: HYPERKW = dict(maxprec=200, maxterms=200)
673: 
674: 
675: @pytest.mark.slow
676: @check_version(mpmath, '0.17')
677: class TestSystematic(object):
678: 
679:     def test_airyai(self):
680:         # oscillating function, limit range
681:         assert_mpmath_equal(lambda z: sc.airy(z)[0],
682:                             mpmath.airyai,
683:                             [Arg(-1e8, 1e8)],
684:                             rtol=1e-5)
685:         assert_mpmath_equal(lambda z: sc.airy(z)[0],
686:                             mpmath.airyai,
687:                             [Arg(-1e3, 1e3)])
688: 
689:     def test_airyai_complex(self):
690:         assert_mpmath_equal(lambda z: sc.airy(z)[0],
691:                             mpmath.airyai,
692:                             [ComplexArg()])
693: 
694:     def test_airyai_prime(self):
695:         # oscillating function, limit range
696:         assert_mpmath_equal(lambda z: sc.airy(z)[1], lambda z:
697:                             mpmath.airyai(z, derivative=1),
698:                             [Arg(-1e8, 1e8)],
699:                             rtol=1e-5)
700:         assert_mpmath_equal(lambda z: sc.airy(z)[1], lambda z:
701:                             mpmath.airyai(z, derivative=1),
702:                             [Arg(-1e3, 1e3)])
703: 
704:     def test_airyai_prime_complex(self):
705:         assert_mpmath_equal(lambda z: sc.airy(z)[1], lambda z:
706:                             mpmath.airyai(z, derivative=1),
707:                             [ComplexArg()])
708: 
709:     def test_airybi(self):
710:         # oscillating function, limit range
711:         assert_mpmath_equal(lambda z: sc.airy(z)[2], lambda z:
712:                             mpmath.airybi(z),
713:                             [Arg(-1e8, 1e8)],
714:                             rtol=1e-5)
715:         assert_mpmath_equal(lambda z: sc.airy(z)[2], lambda z:
716:                             mpmath.airybi(z),
717:                             [Arg(-1e3, 1e3)])
718: 
719:     def test_airybi_complex(self):
720:         assert_mpmath_equal(lambda z: sc.airy(z)[2], lambda z:
721:                             mpmath.airybi(z),
722:                             [ComplexArg()])
723: 
724:     def test_airybi_prime(self):
725:         # oscillating function, limit range
726:         assert_mpmath_equal(lambda z: sc.airy(z)[3], lambda z:
727:                             mpmath.airybi(z, derivative=1),
728:                             [Arg(-1e8, 1e8)],
729:                             rtol=1e-5)
730:         assert_mpmath_equal(lambda z: sc.airy(z)[3], lambda z:
731:                             mpmath.airybi(z, derivative=1),
732:                             [Arg(-1e3, 1e3)])
733: 
734:     def test_airybi_prime_complex(self):
735:         assert_mpmath_equal(lambda z: sc.airy(z)[3], lambda z:
736:                             mpmath.airybi(z, derivative=1),
737:                             [ComplexArg()])
738: 
739:     def test_bei(self):
740:         assert_mpmath_equal(sc.bei,
741:                             exception_to_nan(lambda z: mpmath.bei(0, z, **HYPERKW)),
742:                             [Arg(-1e3, 1e3)])
743: 
744:     def test_ber(self):
745:         assert_mpmath_equal(sc.ber,
746:                             exception_to_nan(lambda z: mpmath.ber(0, z, **HYPERKW)),
747:                             [Arg(-1e3, 1e3)])
748: 
749:     def test_bernoulli(self):
750:         assert_mpmath_equal(lambda n: sc.bernoulli(int(n))[int(n)],
751:                             lambda n: float(mpmath.bernoulli(int(n))),
752:                             [IntArg(0, 13000)],
753:                             rtol=1e-9, n=13000)
754: 
755:     def test_besseli(self):
756:         assert_mpmath_equal(sc.iv,
757:                             exception_to_nan(lambda v, z: mpmath.besseli(v, z, **HYPERKW)),
758:                             [Arg(-1e100, 1e100), Arg()],
759:                             atol=1e-270)
760: 
761:     def test_besseli_complex(self):
762:         assert_mpmath_equal(lambda v, z: sc.iv(v.real, z),
763:                             exception_to_nan(lambda v, z: mpmath.besseli(v, z, **HYPERKW)),
764:                             [Arg(-1e100, 1e100), ComplexArg()])
765: 
766:     def test_besselj(self):
767:         assert_mpmath_equal(sc.jv,
768:                             exception_to_nan(lambda v, z: mpmath.besselj(v, z, **HYPERKW)),
769:                             [Arg(-1e100, 1e100), Arg(-1e3, 1e3)],
770:                             ignore_inf_sign=True)
771: 
772:         # loss of precision at large arguments due to oscillation
773:         assert_mpmath_equal(sc.jv,
774:                             exception_to_nan(lambda v, z: mpmath.besselj(v, z, **HYPERKW)),
775:                             [Arg(-1e100, 1e100), Arg(-1e8, 1e8)],
776:                             ignore_inf_sign=True,
777:                             rtol=1e-5)
778: 
779:     def test_besselj_complex(self):
780:         assert_mpmath_equal(lambda v, z: sc.jv(v.real, z),
781:                             exception_to_nan(lambda v, z: mpmath.besselj(v, z, **HYPERKW)),
782:                             [Arg(), ComplexArg()])
783: 
784:     def test_besselk(self):
785:         def mpbesselk(v, x):
786:             r = float(mpmath.besselk(v, x, **HYPERKW))
787:             if abs(r) > 1e305:
788:                 # overflowing to inf a bit earlier is OK
789:                 r = np.inf * np.sign(r)
790:             if abs(v) == abs(x) and abs(r) == np.inf and abs(x) > 1:
791:                 # wrong result (kv(x,x) -> 0 for x > 1),
792:                 # try with higher dps
793:                 old_dps = mpmath.mp.dps
794:                 mpmath.mp.dps = 200
795:                 try:
796:                     r = float(mpmath.besselk(v, x, **HYPERKW))
797:                 finally:
798:                     mpmath.mp.dps = old_dps
799:             return r
800:         assert_mpmath_equal(sc.kv,
801:                             exception_to_nan(mpbesselk),
802:                             [Arg(-1e100, 1e100), Arg()])
803: 
804:     def test_besselk_int(self):
805:         assert_mpmath_equal(sc.kn,
806:                             exception_to_nan(lambda v, z: mpmath.besselk(v, z, **HYPERKW)),
807:                             [IntArg(-1000, 1000), Arg()])
808: 
809:     def test_besselk_complex(self):
810:         assert_mpmath_equal(lambda v, z: sc.kv(v.real, z),
811:                             exception_to_nan(lambda v, z: mpmath.besselk(v, z, **HYPERKW)),
812:                             [Arg(-1e100, 1e100), ComplexArg()])
813: 
814:     def test_bessely(self):
815:         def mpbessely(v, x):
816:             r = float(mpmath.bessely(v, x, **HYPERKW))
817:             if abs(r) > 1e305:
818:                 # overflowing to inf a bit earlier is OK
819:                 r = np.inf * np.sign(r)
820:             if abs(r) == 0 and x == 0:
821:                 # invalid result from mpmath, point x=0 is a divergence
822:                 return np.nan
823:             return r
824:         assert_mpmath_equal(sc.yv,
825:                             exception_to_nan(mpbessely),
826:                             [Arg(-1e100, 1e100), Arg(-1e8, 1e8)],
827:                             n=5000)
828: 
829:     def test_bessely_complex(self):
830:         def mpbessely(v, x):
831:             r = complex(mpmath.bessely(v, x, **HYPERKW))
832:             if abs(r) > 1e305:
833:                 # overflowing to inf a bit earlier is OK
834:                 olderr = np.seterr(invalid='ignore')
835:                 try:
836:                     r = np.inf * np.sign(r)
837:                 finally:
838:                     np.seterr(**olderr)
839:             return r
840:         assert_mpmath_equal(lambda v, z: sc.yv(v.real, z),
841:                             exception_to_nan(mpbessely),
842:                             [Arg(), ComplexArg()],
843:                             n=15000)
844: 
845:     def test_bessely_int(self):
846:         def mpbessely(v, x):
847:             r = float(mpmath.bessely(v, x))
848:             if abs(r) == 0 and x == 0:
849:                 # invalid result from mpmath, point x=0 is a divergence
850:                 return np.nan
851:             return r
852:         assert_mpmath_equal(lambda v, z: sc.yn(int(v), z),
853:                             exception_to_nan(mpbessely),
854:                             [IntArg(-1000, 1000), Arg(-1e8, 1e8)])
855: 
856:     def test_beta(self):
857:         bad_points = []
858: 
859:         def beta(a, b, nonzero=False):
860:             if a < -1e12 or b < -1e12:
861:                 # Function is defined here only at integers, but due
862:                 # to loss of precision this is numerically
863:                 # ill-defined. Don't compare values here.
864:                 return np.nan
865:             if (a < 0 or b < 0) and (abs(float(a + b)) % 1) == 0:
866:                 # close to a zero of the function: mpmath and scipy
867:                 # will not round here the same, so the test needs to be
868:                 # run with an absolute tolerance
869:                 if nonzero:
870:                     bad_points.append((float(a), float(b)))
871:                     return np.nan
872:             return mpmath.beta(a, b)
873: 
874:         assert_mpmath_equal(sc.beta,
875:                             lambda a, b: beta(a, b, nonzero=True),
876:                             [Arg(), Arg()],
877:                             dps=400,
878:                             ignore_inf_sign=True)
879: 
880:         assert_mpmath_equal(sc.beta,
881:                             beta,
882:                             np.array(bad_points),
883:                             dps=400,
884:                             ignore_inf_sign=True,
885:                             atol=1e-14)
886: 
887:     def test_betainc(self):
888:         assert_mpmath_equal(sc.betainc,
889:                             time_limited()(exception_to_nan(lambda a, b, x: mpmath.betainc(a, b, 0, x, regularized=True))),
890:                             [Arg(), Arg(), Arg()])
891: 
892:     def test_binom(self):
893:         bad_points = []
894: 
895:         def binomial(n, k, nonzero=False):
896:             if abs(k) > 1e8*(abs(n) + 1):
897:                 # The binomial is rapidly oscillating in this region,
898:                 # and the function is numerically ill-defined. Don't
899:                 # compare values here.
900:                 return np.nan
901:             if n < k and abs(float(n-k) - np.round(float(n-k))) < 1e-15:
902:                 # close to a zero of the function: mpmath and scipy
903:                 # will not round here the same, so the test needs to be
904:                 # run with an absolute tolerance
905:                 if nonzero:
906:                     bad_points.append((float(n), float(k)))
907:                     return np.nan
908:             return mpmath.binomial(n, k)
909: 
910:         assert_mpmath_equal(sc.binom,
911:                             lambda n, k: binomial(n, k, nonzero=True),
912:                             [Arg(), Arg()],
913:                             dps=400)
914: 
915:         assert_mpmath_equal(sc.binom,
916:                             binomial,
917:                             np.array(bad_points),
918:                             dps=400,
919:                             atol=1e-14)
920: 
921:     def test_chebyt_int(self):
922:         assert_mpmath_equal(lambda n, x: sc.eval_chebyt(int(n), x),
923:                             exception_to_nan(lambda n, x: mpmath.chebyt(n, x, **HYPERKW)),
924:                             [IntArg(), Arg()], dps=50)
925: 
926:     @pytest.mark.xfail(run=False, reason="some cases in hyp2f1 not fully accurate")
927:     def test_chebyt(self):
928:         assert_mpmath_equal(sc.eval_chebyt,
929:                             lambda n, x: time_limited()(exception_to_nan(mpmath.chebyt))(n, x, **HYPERKW),
930:                             [Arg(-101, 101), Arg()], n=10000)
931: 
932:     def test_chebyu_int(self):
933:         assert_mpmath_equal(lambda n, x: sc.eval_chebyu(int(n), x),
934:                             exception_to_nan(lambda n, x: mpmath.chebyu(n, x, **HYPERKW)),
935:                             [IntArg(), Arg()], dps=50)
936: 
937:     @pytest.mark.xfail(run=False, reason="some cases in hyp2f1 not fully accurate")
938:     def test_chebyu(self):
939:         assert_mpmath_equal(sc.eval_chebyu,
940:                             lambda n, x: time_limited()(exception_to_nan(mpmath.chebyu))(n, x, **HYPERKW),
941:                             [Arg(-101, 101), Arg()])
942: 
943:     def test_chi(self):
944:         def chi(x):
945:             return sc.shichi(x)[1]
946:         assert_mpmath_equal(chi, mpmath.chi, [Arg()])
947:         # check asymptotic series cross-over
948:         assert_mpmath_equal(chi, mpmath.chi, [FixedArg([88 - 1e-9, 88, 88 + 1e-9])])
949: 
950:     def test_chi_complex(self):
951:         def chi(z):
952:             return sc.shichi(z)[1]
953:         # chi oscillates as Im[z] -> +- inf, so limit range
954:         assert_mpmath_equal(chi,
955:                             mpmath.chi,
956:                             [ComplexArg(complex(-np.inf, -1e8), complex(np.inf, 1e8))],
957:                             rtol=1e-12)
958: 
959:     def test_ci(self):
960:         def ci(x):
961:             return sc.sici(x)[1]
962:         # oscillating function: limit range
963:         assert_mpmath_equal(ci,
964:                             mpmath.ci,
965:                             [Arg(-1e8, 1e8)])
966: 
967:     def test_ci_complex(self):
968:         def ci(z):
969:             return sc.sici(z)[1]
970:         # ci oscillates as Re[z] -> +- inf, so limit range
971:         assert_mpmath_equal(ci,
972:                             mpmath.ci,
973:                             [ComplexArg(complex(-1e8, -np.inf), complex(1e8, np.inf))],
974:                             rtol=1e-8)
975: 
976:     def test_cospi(self):
977:         # Without the extra factor of 2 in the relative tolerance as
978:         # compared to sinpi there will be one failure at ~0.318 with
979:         # an rdiff of ~6e-16. Neither the Taylor series nor the system
980:         # cosine are accurate enough here.
981:         eps = np.finfo(float).eps
982:         assert_mpmath_equal(_cospi,
983:                             mpmath.cospi,
984:                             [Arg()], nan_ok=False, rtol=4*eps)
985: 
986:     def test_cospi_complex(self):
987:         assert_mpmath_equal(_cospi,
988:                             mpmath.cospi,
989:                             [ComplexArg()], nan_ok=False, rtol=1e-13)
990: 
991:     def test_digamma(self):
992:         assert_mpmath_equal(sc.digamma,
993:                             exception_to_nan(mpmath.digamma),
994:                             [Arg()], rtol=1e-12, dps=50)
995: 
996:     def test_digamma_complex(self):
997:         # Test on a cut plane because mpmath will hang. See
998:         # test_digamma_negreal for tests on the negative real axis.
999:         def param_filter(z):
1000:             return np.where((z.real < 0) & (np.abs(z.imag) < 1.12), False, True)
1001: 
1002:         assert_mpmath_equal(sc.digamma,
1003:                             exception_to_nan(mpmath.digamma),
1004:                             [ComplexArg()], rtol=1e-13, dps=40,
1005:                             param_filter=param_filter)
1006: 
1007:     def test_e1(self):
1008:         assert_mpmath_equal(sc.exp1,
1009:                             mpmath.e1,
1010:                             [Arg()], rtol=1e-14)
1011: 
1012:     def test_e1_complex(self):
1013:         # E_1 oscillates as Im[z] -> +- inf, so limit range
1014:         assert_mpmath_equal(sc.exp1,
1015:                             mpmath.e1,
1016:                             [ComplexArg(complex(-np.inf, -1e8), complex(np.inf, 1e8))],
1017:                             rtol=1e-11)
1018: 
1019:         # Check cross-over region
1020:         assert_mpmath_equal(sc.exp1,
1021:                             mpmath.e1,
1022:                             (np.linspace(-50, 50, 171)[:, None] +
1023:                              np.r_[0, np.logspace(-3, 2, 61),
1024:                                    -np.logspace(-3, 2, 11)]*1j).ravel(),
1025:                             rtol=1e-11)
1026:         assert_mpmath_equal(sc.exp1,
1027:                             mpmath.e1,
1028:                             (np.linspace(-50, -35, 10000) + 0j),
1029:                             rtol=1e-11)
1030: 
1031:     def test_exprel(self):
1032:         assert_mpmath_equal(sc.exprel,
1033:                             lambda x: mpmath.expm1(x)/x if x != 0 else mpmath.mpf('1.0'),
1034:                             [Arg(a=-np.log(np.finfo(np.double).max), b=np.log(np.finfo(np.double).max))])
1035:         assert_mpmath_equal(sc.exprel,
1036:                             lambda x: mpmath.expm1(x)/x if x != 0 else mpmath.mpf('1.0'),
1037:                             np.array([1e-12, 1e-24, 0, 1e12, 1e24, np.inf]), rtol=1e-11)
1038:         assert_(np.isinf(sc.exprel(np.inf)))
1039:         assert_(sc.exprel(-np.inf) == 0)
1040: 
1041:     def test_expm1_complex(self):
1042:         # Oscillates as a function of Im[z], so limit range to avoid loss of precision
1043:         assert_mpmath_equal(sc.expm1,
1044:                             mpmath.expm1,
1045:                             [ComplexArg(complex(-np.inf, -1e7), complex(np.inf, 1e7))])
1046: 
1047:     def test_log1p_complex(self):
1048:         assert_mpmath_equal(sc.log1p,
1049:                             lambda x: mpmath.log(x+1),
1050:                             [ComplexArg()], dps=60)
1051: 
1052:     def test_log1pmx(self):
1053:         assert_mpmath_equal(_log1pmx,
1054:                             lambda x: mpmath.log(x + 1) - x,
1055:                             [Arg()], dps=60, rtol=1e-14)
1056: 
1057:     def test_ei(self):
1058:         assert_mpmath_equal(sc.expi,
1059:                             mpmath.ei,
1060:                             [Arg()],
1061:                             rtol=1e-11)
1062: 
1063:     def test_ei_complex(self):
1064:         # Ei oscillates as Im[z] -> +- inf, so limit range
1065:         assert_mpmath_equal(sc.expi,
1066:                             mpmath.ei,
1067:                             [ComplexArg(complex(-np.inf, -1e8), complex(np.inf, 1e8))],
1068:                             rtol=1e-9)
1069: 
1070:     def test_ellipe(self):
1071:         assert_mpmath_equal(sc.ellipe,
1072:                             mpmath.ellipe,
1073:                             [Arg(b=1.0)])
1074: 
1075:     def test_ellipeinc(self):
1076:         assert_mpmath_equal(sc.ellipeinc,
1077:                             mpmath.ellipe,
1078:                             [Arg(-1e3, 1e3), Arg(b=1.0)])
1079: 
1080:     def test_ellipeinc_largephi(self):
1081:         assert_mpmath_equal(sc.ellipeinc,
1082:                             mpmath.ellipe,
1083:                             [Arg(), Arg()])
1084: 
1085:     def test_ellipf(self):
1086:         assert_mpmath_equal(sc.ellipkinc,
1087:                             mpmath.ellipf,
1088:                             [Arg(-1e3, 1e3), Arg()])
1089: 
1090:     def test_ellipf_largephi(self):
1091:         assert_mpmath_equal(sc.ellipkinc,
1092:                             mpmath.ellipf,
1093:                             [Arg(), Arg()])
1094: 
1095:     def test_ellipk(self):
1096:         assert_mpmath_equal(sc.ellipk,
1097:                             mpmath.ellipk,
1098:                             [Arg(b=1.0)])
1099:         assert_mpmath_equal(sc.ellipkm1,
1100:                             lambda m: mpmath.ellipk(1 - m),
1101:                             [Arg(a=0.0)],
1102:                             dps=400)
1103: 
1104:     def test_ellipkinc(self):
1105:         def ellipkinc(phi, m):
1106:             return mpmath.ellippi(0, phi, m)
1107:         assert_mpmath_equal(sc.ellipkinc,
1108:                             ellipkinc,
1109:                             [Arg(-1e3, 1e3), Arg(b=1.0)],
1110:                             ignore_inf_sign=True)
1111: 
1112:     def test_ellipkinc_largephi(self):
1113:         def ellipkinc(phi, m):
1114:             return mpmath.ellippi(0, phi, m)
1115:         assert_mpmath_equal(sc.ellipkinc,
1116:                             ellipkinc,
1117:                             [Arg(), Arg(b=1.0)],
1118:                             ignore_inf_sign=True)
1119: 
1120:     def test_ellipfun_sn(self):
1121:         def sn(u, m):
1122:             # mpmath doesn't get the zero at u = 0--fix that
1123:             if u == 0:
1124:                 return 0
1125:             else:
1126:                 return mpmath.ellipfun("sn", u=u, m=m)
1127: 
1128:         # Oscillating function --- limit range of first argument; the
1129:         # loss of precision there is an expected numerical feature
1130:         # rather than an actual bug
1131:         assert_mpmath_equal(lambda u, m: sc.ellipj(u, m)[0],
1132:                             sn,
1133:                             [Arg(-1e6, 1e6), Arg(a=0, b=1)],
1134:                             rtol=1e-8)
1135: 
1136:     def test_ellipfun_cn(self):
1137:         # see comment in ellipfun_sn
1138:         assert_mpmath_equal(lambda u, m: sc.ellipj(u, m)[1],
1139:                             lambda u, m: mpmath.ellipfun("cn", u=u, m=m),
1140:                             [Arg(-1e6, 1e6), Arg(a=0, b=1)],
1141:                             rtol=1e-8)
1142: 
1143:     def test_ellipfun_dn(self):
1144:         # see comment in ellipfun_sn
1145:         assert_mpmath_equal(lambda u, m: sc.ellipj(u, m)[2],
1146:                             lambda u, m: mpmath.ellipfun("dn", u=u, m=m),
1147:                             [Arg(-1e6, 1e6), Arg(a=0, b=1)],
1148:                             rtol=1e-8)
1149: 
1150:     def test_erf(self):
1151:         assert_mpmath_equal(sc.erf,
1152:                             lambda z: mpmath.erf(z),
1153:                             [Arg()])
1154: 
1155:     def test_erf_complex(self):
1156:         assert_mpmath_equal(sc.erf,
1157:                             lambda z: mpmath.erf(z),
1158:                             [ComplexArg()], n=200)
1159: 
1160:     def test_erfc(self):
1161:         assert_mpmath_equal(sc.erfc,
1162:                             exception_to_nan(lambda z: mpmath.erfc(z)),
1163:                             [Arg()], rtol=1e-13)
1164: 
1165:     def test_erfc_complex(self):
1166:         assert_mpmath_equal(sc.erfc,
1167:                             exception_to_nan(lambda z: mpmath.erfc(z)),
1168:                             [ComplexArg()], n=200)
1169: 
1170:     def test_erfi(self):
1171:         assert_mpmath_equal(sc.erfi,
1172:                             mpmath.erfi,
1173:                             [Arg()], n=200)
1174: 
1175:     def test_erfi_complex(self):
1176:         assert_mpmath_equal(sc.erfi,
1177:                             mpmath.erfi,
1178:                             [ComplexArg()], n=200)
1179: 
1180:     def test_ndtr(self):
1181:         assert_mpmath_equal(sc.ndtr,
1182:                             exception_to_nan(lambda z: mpmath.ncdf(z)),
1183:                             [Arg()], n=200)
1184: 
1185:     def test_ndtr_complex(self):
1186:         assert_mpmath_equal(sc.ndtr,
1187:                             lambda z: mpmath.erfc(-z/np.sqrt(2.))/2.,
1188:                             [ComplexArg(a=complex(-10000, -10000), b=complex(10000, 10000))], n=400)
1189: 
1190:     def test_log_ndtr(self):
1191:         assert_mpmath_equal(sc.log_ndtr,
1192:                             exception_to_nan(lambda z: mpmath.log(mpmath.ncdf(z))),
1193:                             [Arg()], n=600, dps=300)
1194: 
1195:     def test_log_ndtr_complex(self):
1196:         assert_mpmath_equal(sc.log_ndtr,
1197:                             exception_to_nan(lambda z: mpmath.log(mpmath.erfc(-z/np.sqrt(2.))/2.)),
1198:                             [ComplexArg(a=complex(-10000, -100),
1199:                                         b=complex(10000, 100))], n=200, dps=300)
1200: 
1201:     def test_eulernum(self):
1202:         assert_mpmath_equal(lambda n: sc.euler(n)[-1],
1203:                             mpmath.eulernum,
1204:                             [IntArg(1, 10000)], n=10000)
1205: 
1206:     def test_expint(self):
1207:         assert_mpmath_equal(sc.expn,
1208:                             mpmath.expint,
1209:                             [IntArg(0, 200), Arg(0, np.inf)],
1210:                             rtol=1e-13, dps=160)
1211: 
1212:     def test_fresnels(self):
1213:         def fresnels(x):
1214:             return sc.fresnel(x)[0]
1215:         assert_mpmath_equal(fresnels,
1216:                             mpmath.fresnels,
1217:                             [Arg()])
1218: 
1219:     def test_fresnelc(self):
1220:         def fresnelc(x):
1221:             return sc.fresnel(x)[1]
1222:         assert_mpmath_equal(fresnelc,
1223:                             mpmath.fresnelc,
1224:                             [Arg()])
1225: 
1226:     def test_gamma(self):
1227:         assert_mpmath_equal(sc.gamma,
1228:                             exception_to_nan(mpmath.gamma),
1229:                             [Arg()])
1230: 
1231:     def test_gamma_complex(self):
1232:         assert_mpmath_equal(sc.gamma,
1233:                             exception_to_nan(mpmath.gamma),
1234:                             [ComplexArg()], rtol=5e-13)
1235: 
1236:     def test_gammainc(self):
1237:         # Larger arguments are tested in test_data.py:test_local
1238:         assert_mpmath_equal(sc.gammainc,
1239:                             lambda z, b: mpmath.gammainc(z, b=b, regularized=True),
1240:                             [Arg(0, 1e4, inclusive_a=False), Arg(0, 1e4)],
1241:                             nan_ok=False, rtol=1e-11)
1242: 
1243:     def test_gammaincc(self):
1244:         # Larger arguments are tested in test_data.py:test_local
1245:         assert_mpmath_equal(sc.gammaincc,
1246:                             lambda z, a: mpmath.gammainc(z, a=a, regularized=True),
1247:                             [Arg(0, 1e4, inclusive_a=False), Arg(0, 1e4)],
1248:                             nan_ok=False, rtol=1e-11)
1249: 
1250:     def test_gammaln(self):
1251:         # The real part of loggamma is log(|gamma(z)|).
1252:         def f(z):
1253:             return mpmath.loggamma(z).real
1254: 
1255:         assert_mpmath_equal(sc.gammaln, exception_to_nan(f), [Arg()])
1256: 
1257:     @pytest.mark.xfail(run=False)
1258:     def test_gegenbauer(self):
1259:         assert_mpmath_equal(sc.eval_gegenbauer,
1260:                             exception_to_nan(mpmath.gegenbauer),
1261:                             [Arg(-1e3, 1e3), Arg(), Arg()])
1262: 
1263:     def test_gegenbauer_int(self):
1264:         # Redefine functions to deal with numerical + mpmath issues
1265:         def gegenbauer(n, a, x):
1266:             # Avoid overflow at large `a` (mpmath would need an even larger
1267:             # dps to handle this correctly, so just skip this region)
1268:             if abs(a) > 1e100:
1269:                 return np.nan
1270: 
1271:             # Deal with n=0, n=1 correctly; mpmath 0.17 doesn't do these
1272:             # always correctly
1273:             if n == 0:
1274:                 r = 1.0
1275:             elif n == 1:
1276:                 r = 2*a*x
1277:             else:
1278:                 r = mpmath.gegenbauer(n, a, x)
1279: 
1280:             # Mpmath 0.17 gives wrong results (spurious zero) in some cases, so
1281:             # compute the value by perturbing the result
1282:             if float(r) == 0 and n <= 1-a and a < -1 and float(a) == int(float(a)):
1283:                 r = mpmath.gegenbauer(n, a + mpmath.mpf('1e-50'), x)
1284: 
1285:             # Differing overflow thresholds in scipy vs. mpmath
1286:             if abs(r) > 1e270:
1287:                 return np.inf
1288:             return r
1289: 
1290:         def sc_gegenbauer(n, a, x):
1291:             r = sc.eval_gegenbauer(int(n), a, x)
1292:             # Differing overflow thresholds in scipy vs. mpmath
1293:             if abs(r) > 1e270:
1294:                 return np.inf
1295:             return r
1296:         assert_mpmath_equal(sc_gegenbauer,
1297:                             exception_to_nan(gegenbauer),
1298:                             [IntArg(0, 100), Arg(), Arg()],
1299:                             n=40000, dps=100,
1300:                             ignore_inf_sign=True)
1301: 
1302:         # Check the small-x expansion
1303:         assert_mpmath_equal(sc_gegenbauer,
1304:                             exception_to_nan(gegenbauer),
1305:                             [IntArg(0, 100), Arg(), FixedArg(np.logspace(-30, -4, 30))],
1306:                             dps=100,
1307:                             ignore_inf_sign=True)
1308: 
1309:     @pytest.mark.xfail(run=False)
1310:     def test_gegenbauer_complex(self):
1311:         assert_mpmath_equal(lambda n, a, x: sc.eval_gegenbauer(int(n), a.real, x),
1312:                             exception_to_nan(mpmath.gegenbauer),
1313:                             [IntArg(0, 100), Arg(), ComplexArg()])
1314: 
1315:     @nonfunctional_tooslow
1316:     def test_gegenbauer_complex_general(self):
1317:         assert_mpmath_equal(lambda n, a, x: sc.eval_gegenbauer(n.real, a.real, x),
1318:                             exception_to_nan(mpmath.gegenbauer),
1319:                             [Arg(-1e3, 1e3), Arg(), ComplexArg()])
1320: 
1321:     def test_hankel1(self):
1322:         assert_mpmath_equal(sc.hankel1,
1323:                             exception_to_nan(lambda v, x: mpmath.hankel1(v, x,
1324:                                                                           **HYPERKW)),
1325:                             [Arg(-1e20, 1e20), Arg()])
1326: 
1327:     def test_hankel2(self):
1328:         assert_mpmath_equal(sc.hankel2,
1329:                             exception_to_nan(lambda v, x: mpmath.hankel2(v, x, **HYPERKW)),
1330:                             [Arg(-1e20, 1e20), Arg()])
1331: 
1332:     @pytest.mark.xfail(run=False, reason="issues at intermediately large orders")
1333:     def test_hermite(self):
1334:         assert_mpmath_equal(lambda n, x: sc.eval_hermite(int(n), x),
1335:                             exception_to_nan(mpmath.hermite),
1336:                             [IntArg(0, 10000), Arg()])
1337: 
1338:     # hurwitz: same as zeta
1339: 
1340:     def test_hyp0f1(self):
1341:         # mpmath reports no convergence unless maxterms is large enough
1342:         KW = dict(maxprec=400, maxterms=1500)
1343:         # n=500 (non-xslow default) fails for one bad point
1344:         assert_mpmath_equal(sc.hyp0f1,
1345:                             lambda a, x: mpmath.hyp0f1(a, x, **KW),
1346:                             [Arg(-1e7, 1e7), Arg(0, 1e5)],
1347:                             n=5000)
1348:         # NB: The range of the second parameter ("z") is limited from below
1349:         # because of an overflow in the intermediate calculations. The way
1350:         # for fix it is to implement an asymptotic expansion for Bessel J
1351:         # (similar to what is implemented for Bessel I here).
1352: 
1353:     def test_hyp0f1_complex(self):
1354:         assert_mpmath_equal(lambda a, z: sc.hyp0f1(a.real, z),
1355:                             exception_to_nan(lambda a, x: mpmath.hyp0f1(a, x, **HYPERKW)),
1356:                             [Arg(-25, 25), ComplexArg(complex(-120, -120), complex(120, 120))])
1357:         # NB: The range of the first parameter ("v") are limited by an overflow
1358:         # in the intermediate calculations. Can be fixed by implementing an
1359:         # asymptotic expansion for Bessel functions for large order.
1360: 
1361:     @pytest.mark.xfail(run=False)
1362:     def test_hyp1f1(self):
1363:         assert_mpmath_equal(inf_to_nan(sc.hyp1f1),
1364:                             exception_to_nan(lambda a, b, x: mpmath.hyp1f1(a, b, x, **HYPERKW)),
1365:                             [Arg(-1e5, 1e5), Arg(-1e5, 1e5), Arg()],
1366:                             n=2000)
1367: 
1368:     @pytest.mark.xfail(run=False)
1369:     def test_hyp1f1_complex(self):
1370:         assert_mpmath_equal(inf_to_nan(lambda a, b, x: sc.hyp1f1(a.real, b.real, x)),
1371:                             exception_to_nan(lambda a, b, x: mpmath.hyp1f1(a, b, x, **HYPERKW)),
1372:                             [Arg(-1e3, 1e3), Arg(-1e3, 1e3), ComplexArg()],
1373:                             n=2000)
1374: 
1375:     @pytest.mark.xfail(run=False)
1376:     def test_hyp1f2(self):
1377:         def hyp1f2(a, b, c, x):
1378:             v, err = sc.hyp1f2(a, b, c, x)
1379:             if abs(err) > max(1, abs(v)) * 1e-7:
1380:                 return np.nan
1381:             return v
1382:         assert_mpmath_equal(hyp1f2,
1383:                             exception_to_nan(lambda a, b, c, x: mpmath.hyp1f2(a, b, c, x, **HYPERKW)),
1384:                             [Arg(), Arg(), Arg(), Arg()],
1385:                             n=20000)
1386: 
1387:     @pytest.mark.xfail(run=False)
1388:     def test_hyp2f0(self):
1389:         def hyp2f0(a, b, x):
1390:             v, err = sc.hyp2f0(a, b, x, 1)
1391:             if abs(err) > max(1, abs(v)) * 1e-7:
1392:                 return np.nan
1393:             return v
1394:         assert_mpmath_equal(hyp2f0,
1395:                             lambda a, b, x: time_limited(0.1)(exception_to_nan(trace_args(mpmath.hyp2f0)))(
1396:                                 a, b, x, **HYPERKW),
1397:                             [Arg(), Arg(), Arg()])
1398: 
1399:     @pytest.mark.xfail(run=False, reason="spurious inf (or inf with wrong sign) for some argument values")
1400:     def test_hyp2f1(self):
1401:         assert_mpmath_equal(sc.hyp2f1,
1402:                             exception_to_nan(lambda a, b, c, x: mpmath.hyp2f1(a, b, c, x, **HYPERKW)),
1403:                             [Arg(), Arg(), Arg(), Arg()])
1404: 
1405:     @nonfunctional_tooslow
1406:     def test_hyp2f1_complex(self):
1407:         # Scipy's hyp2f1 seems to have performance and accuracy problems
1408:         assert_mpmath_equal(lambda a, b, c, x: sc.hyp2f1(a.real, b.real, c.real, x),
1409:                             exception_to_nan(lambda a, b, c, x: mpmath.hyp2f1(a, b, c, x, **HYPERKW)),
1410:                             [Arg(-1e2, 1e2), Arg(-1e2, 1e2), Arg(-1e2, 1e2), ComplexArg()],
1411:                             n=10)
1412: 
1413:     @pytest.mark.xfail(run=False)
1414:     def test_hyperu(self):
1415:         assert_mpmath_equal(sc.hyperu,
1416:                             exception_to_nan(lambda a, b, x: mpmath.hyperu(a, b, x, **HYPERKW)),
1417:                             [Arg(), Arg(), Arg()])
1418: 
1419:     @pytest.mark.xfail(condition=_is_32bit_platform,
1420:                        reason="mpmath issue gh-342: unsupported operand mpz, long for pow")
1421:     def test_igam_fac(self):
1422:         def mp_igam_fac(a, x):
1423:             return mpmath.power(x, a)*mpmath.exp(-x)/mpmath.gamma(a)
1424: 
1425:         assert_mpmath_equal(_igam_fac,
1426:                             mp_igam_fac,
1427:                             [Arg(0, 1e14, inclusive_a=False), Arg(0, 1e14)],
1428:                             rtol=1e-10)
1429: 
1430:     def test_j0(self):
1431:         # The Bessel function at large arguments is j0(x) ~ cos(x + phi)/sqrt(x)
1432:         # and at large arguments the phase of the cosine loses precision.
1433:         #
1434:         # This is numerically expected behavior, so we compare only up to
1435:         # 1e8 = 1e15 * 1e-7
1436:         assert_mpmath_equal(sc.j0,
1437:                             mpmath.j0,
1438:                             [Arg(-1e3, 1e3)])
1439:         assert_mpmath_equal(sc.j0,
1440:                             mpmath.j0,
1441:                             [Arg(-1e8, 1e8)],
1442:                             rtol=1e-5)
1443: 
1444:     def test_j1(self):
1445:         # See comment in test_j0
1446:         assert_mpmath_equal(sc.j1,
1447:                             mpmath.j1,
1448:                             [Arg(-1e3, 1e3)])
1449:         assert_mpmath_equal(sc.j1,
1450:                             mpmath.j1,
1451:                             [Arg(-1e8, 1e8)],
1452:                             rtol=1e-5)
1453: 
1454:     @pytest.mark.xfail(run=False)
1455:     def test_jacobi(self):
1456:         assert_mpmath_equal(sc.eval_jacobi,
1457:                             exception_to_nan(lambda a, b, c, x: mpmath.jacobi(a, b, c, x, **HYPERKW)),
1458:                             [Arg(), Arg(), Arg(), Arg()])
1459:         assert_mpmath_equal(lambda n, b, c, x: sc.eval_jacobi(int(n), b, c, x),
1460:                             exception_to_nan(lambda a, b, c, x: mpmath.jacobi(a, b, c, x, **HYPERKW)),
1461:                             [IntArg(), Arg(), Arg(), Arg()])
1462: 
1463:     def test_jacobi_int(self):
1464:         # Redefine functions to deal with numerical + mpmath issues
1465:         def jacobi(n, a, b, x):
1466:             # Mpmath does not handle n=0 case always correctly
1467:             if n == 0:
1468:                 return 1.0
1469:             return mpmath.jacobi(n, a, b, x)
1470:         assert_mpmath_equal(lambda n, a, b, x: sc.eval_jacobi(int(n), a, b, x),
1471:                             lambda n, a, b, x: exception_to_nan(jacobi)(n, a, b, x, **HYPERKW),
1472:                             [IntArg(), Arg(), Arg(), Arg()],
1473:                             n=20000, dps=50)
1474: 
1475:     def test_kei(self):
1476:         def kei(x):
1477:             if x == 0:
1478:                 # work around mpmath issue at x=0
1479:                 return -pi/4
1480:             return exception_to_nan(mpmath.kei)(0, x, **HYPERKW)
1481:         assert_mpmath_equal(sc.kei,
1482:                             kei,
1483:                             [Arg(-1e30, 1e30)], n=1000)
1484: 
1485:     def test_ker(self):
1486:         assert_mpmath_equal(sc.ker,
1487:                             exception_to_nan(lambda x: mpmath.ker(0, x, **HYPERKW)),
1488:                             [Arg(-1e30, 1e30)], n=1000)
1489: 
1490:     @nonfunctional_tooslow
1491:     def test_laguerre(self):
1492:         assert_mpmath_equal(trace_args(sc.eval_laguerre),
1493:                             lambda n, x: exception_to_nan(mpmath.laguerre)(n, x, **HYPERKW),
1494:                             [Arg(), Arg()])
1495: 
1496:     def test_laguerre_int(self):
1497:         assert_mpmath_equal(lambda n, x: sc.eval_laguerre(int(n), x),
1498:                             lambda n, x: exception_to_nan(mpmath.laguerre)(n, x, **HYPERKW),
1499:                             [IntArg(), Arg()], n=20000)
1500: 
1501:     @pytest.mark.xfail(condition=_is_32bit_platform, reason="see gh-3551 for bad points")
1502:     def test_lambertw(self):
1503:         assert_mpmath_equal(lambda x, k: sc.lambertw(x, int(k)),
1504:                             lambda x, k: mpmath.lambertw(x, int(k)),
1505:                             [Arg(), IntArg(0, 10)])
1506: 
1507:     def test_lanczos_sum_expg_scaled(self):
1508:         maxgamma = 171.624376956302725
1509:         e = np.exp(1)
1510:         g = 6.024680040776729583740234375
1511: 
1512:         def gamma(x):
1513:             return ((x + g - 0.5)/e)**(x - 0.5)*_lanczos_sum_expg_scaled(x)
1514: 
1515:         assert_mpmath_equal(gamma,
1516:                             mpmath.gamma,
1517:                             [Arg(0, maxgamma, inclusive_a=False)],
1518:                             rtol=1e-13)
1519: 
1520:     @nonfunctional_tooslow
1521:     def test_legendre(self):
1522:         assert_mpmath_equal(sc.eval_legendre,
1523:                             mpmath.legendre,
1524:                             [Arg(), Arg()])
1525: 
1526:     def test_legendre_int(self):
1527:         assert_mpmath_equal(lambda n, x: sc.eval_legendre(int(n), x),
1528:                             lambda n, x: exception_to_nan(mpmath.legendre)(n, x, **HYPERKW),
1529:                             [IntArg(), Arg()],
1530:                             n=20000)
1531: 
1532:         # Check the small-x expansion
1533:         assert_mpmath_equal(lambda n, x: sc.eval_legendre(int(n), x),
1534:                             lambda n, x: exception_to_nan(mpmath.legendre)(n, x, **HYPERKW),
1535:                             [IntArg(), FixedArg(np.logspace(-30, -4, 20))])
1536: 
1537:     def test_legenp(self):
1538:         def lpnm(n, m, z):
1539:             try:
1540:                 v = sc.lpmn(m, n, z)[0][-1,-1]
1541:             except ValueError:
1542:                 return np.nan
1543:             if abs(v) > 1e306:
1544:                 # harmonize overflow to inf
1545:                 v = np.inf * np.sign(v.real)
1546:             return v
1547: 
1548:         def lpnm_2(n, m, z):
1549:             v = sc.lpmv(m, n, z)
1550:             if abs(v) > 1e306:
1551:                 # harmonize overflow to inf
1552:                 v = np.inf * np.sign(v.real)
1553:             return v
1554: 
1555:         def legenp(n, m, z):
1556:             if (z == 1 or z == -1) and int(n) == n:
1557:                 # Special case (mpmath may give inf, we take the limit by
1558:                 # continuity)
1559:                 if m == 0:
1560:                     if n < 0:
1561:                         n = -n - 1
1562:                     return mpmath.power(mpmath.sign(z), n)
1563:                 else:
1564:                     return 0
1565: 
1566:             if abs(z) < 1e-15:
1567:                 # mpmath has bad performance here
1568:                 return np.nan
1569: 
1570:             typ = 2 if abs(z) < 1 else 3
1571:             v = exception_to_nan(mpmath.legenp)(n, m, z, type=typ)
1572: 
1573:             if abs(v) > 1e306:
1574:                 # harmonize overflow to inf
1575:                 v = mpmath.inf * mpmath.sign(v.real)
1576: 
1577:             return v
1578: 
1579:         assert_mpmath_equal(lpnm,
1580:                             legenp,
1581:                             [IntArg(-100, 100), IntArg(-100, 100), Arg()])
1582: 
1583:         assert_mpmath_equal(lpnm_2,
1584:                             legenp,
1585:                             [IntArg(-100, 100), Arg(-100, 100), Arg(-1, 1)])
1586: 
1587:     def test_legenp_complex_2(self):
1588:         def clpnm(n, m, z):
1589:             try:
1590:                 return sc.clpmn(m.real, n.real, z, type=2)[0][-1,-1]
1591:             except ValueError:
1592:                 return np.nan
1593: 
1594:         def legenp(n, m, z):
1595:             if abs(z) < 1e-15:
1596:                 # mpmath has bad performance here
1597:                 return np.nan
1598:             return exception_to_nan(mpmath.legenp)(int(n.real), int(m.real), z, type=2)
1599: 
1600:         # mpmath is quite slow here
1601:         x = np.array([-2, -0.99, -0.5, 0, 1e-5, 0.5, 0.99, 20, 2e3])
1602:         y = np.array([-1e3, -0.5, 0.5, 1.3])
1603:         z = (x[:,None] + 1j*y[None,:]).ravel()
1604: 
1605:         assert_mpmath_equal(clpnm,
1606:                             legenp,
1607:                             [FixedArg([-2, -1, 0, 1, 2, 10]), FixedArg([-2, -1, 0, 1, 2, 10]), FixedArg(z)],
1608:                             rtol=1e-6,
1609:                             n=500)
1610: 
1611:     def test_legenp_complex_3(self):
1612:         def clpnm(n, m, z):
1613:             try:
1614:                 return sc.clpmn(m.real, n.real, z, type=3)[0][-1,-1]
1615:             except ValueError:
1616:                 return np.nan
1617: 
1618:         def legenp(n, m, z):
1619:             if abs(z) < 1e-15:
1620:                 # mpmath has bad performance here
1621:                 return np.nan
1622:             return exception_to_nan(mpmath.legenp)(int(n.real), int(m.real), z, type=3)
1623: 
1624:         # mpmath is quite slow here
1625:         x = np.array([-2, -0.99, -0.5, 0, 1e-5, 0.5, 0.99, 20, 2e3])
1626:         y = np.array([-1e3, -0.5, 0.5, 1.3])
1627:         z = (x[:,None] + 1j*y[None,:]).ravel()
1628: 
1629:         assert_mpmath_equal(clpnm,
1630:                             legenp,
1631:                             [FixedArg([-2, -1, 0, 1, 2, 10]), FixedArg([-2, -1, 0, 1, 2, 10]), FixedArg(z)],
1632:                             rtol=1e-6,
1633:                             n=500)
1634: 
1635:     @pytest.mark.xfail(run=False, reason="apparently picks wrong function at |z| > 1")
1636:     def test_legenq(self):
1637:         def lqnm(n, m, z):
1638:             return sc.lqmn(m, n, z)[0][-1,-1]
1639: 
1640:         def legenq(n, m, z):
1641:             if abs(z) < 1e-15:
1642:                 # mpmath has bad performance here
1643:                 return np.nan
1644:             return exception_to_nan(mpmath.legenq)(n, m, z, type=2)
1645: 
1646:         assert_mpmath_equal(lqnm,
1647:                             legenq,
1648:                             [IntArg(0, 100), IntArg(0, 100), Arg()])
1649: 
1650:     @nonfunctional_tooslow
1651:     def test_legenq_complex(self):
1652:         def lqnm(n, m, z):
1653:             return sc.lqmn(int(m.real), int(n.real), z)[0][-1,-1]
1654: 
1655:         def legenq(n, m, z):
1656:             if abs(z) < 1e-15:
1657:                 # mpmath has bad performance here
1658:                 return np.nan
1659:             return exception_to_nan(mpmath.legenq)(int(n.real), int(m.real), z, type=2)
1660: 
1661:         assert_mpmath_equal(lqnm,
1662:                             legenq,
1663:                             [IntArg(0, 100), IntArg(0, 100), ComplexArg()],
1664:                             n=100)
1665: 
1666:     def test_lgam1p(self):
1667:         def param_filter(x):
1668:             # Filter the poles
1669:             return np.where((np.floor(x) == x) & (x <= 0), False, True)
1670: 
1671:         def mp_lgam1p(z):
1672:             # The real part of loggamma is log(|gamma(z)|)
1673:             return mpmath.loggamma(1 + z).real
1674: 
1675:         assert_mpmath_equal(_lgam1p,
1676:                             mp_lgam1p,
1677:                             [Arg()], rtol=1e-13, dps=100,
1678:                             param_filter=param_filter)
1679: 
1680:     def test_loggamma(self):
1681:         def mpmath_loggamma(z):
1682:             try:
1683:                 res = mpmath.loggamma(z)
1684:             except ValueError:
1685:                 res = complex(np.nan, np.nan)
1686:             return res
1687: 
1688:         assert_mpmath_equal(sc.loggamma,
1689:                             mpmath_loggamma,
1690:                             [ComplexArg()], nan_ok=False,
1691:                             distinguish_nan_and_inf=False, rtol=5e-14)
1692: 
1693:     @pytest.mark.xfail(run=False)
1694:     def test_pcfd(self):
1695:         def pcfd(v, x):
1696:             return sc.pbdv(v, x)[0]
1697:         assert_mpmath_equal(pcfd,
1698:                             exception_to_nan(lambda v, x: mpmath.pcfd(v, x, **HYPERKW)),
1699:                             [Arg(), Arg()])
1700: 
1701:     @pytest.mark.xfail(run=False, reason="it's not the same as the mpmath function --- maybe different definition?")
1702:     def test_pcfv(self):
1703:         def pcfv(v, x):
1704:             return sc.pbvv(v, x)[0]
1705:         assert_mpmath_equal(pcfv,
1706:                             lambda v, x: time_limited()(exception_to_nan(mpmath.pcfv))(v, x, **HYPERKW),
1707:                             [Arg(), Arg()], n=1000)
1708: 
1709:     def test_pcfw(self):
1710:         def pcfw(a, x):
1711:             return sc.pbwa(a, x)[0]
1712: 
1713:         def dpcfw(a, x):
1714:             return sc.pbwa(a, x)[1]
1715: 
1716:         def mpmath_dpcfw(a, x):
1717:             return mpmath.diff(mpmath.pcfw, (a, x), (0, 1))
1718: 
1719:         # The Zhang and Jin implementation only uses Taylor series and
1720:         # is thus accurate in only a very small range.
1721:         assert_mpmath_equal(pcfw,
1722:                             mpmath.pcfw,
1723:                             [Arg(-5, 5), Arg(-5, 5)], rtol=1e-12, n=100)
1724: 
1725:         assert_mpmath_equal(dpcfw,
1726:                             mpmath_dpcfw,
1727:                             [Arg(-5, 5), Arg(-5, 5)], rtol=1e-12, n=100)
1728: 
1729:     @pytest.mark.xfail(run=False, reason="issues at large arguments (atol OK, rtol not) and <eps-close to z=0")
1730:     def test_polygamma(self):
1731:         assert_mpmath_equal(sc.polygamma,
1732:                             time_limited()(exception_to_nan(mpmath.polygamma)),
1733:                             [IntArg(0, 1000), Arg()])
1734: 
1735:     def test_rgamma(self):
1736:         def rgamma(x):
1737:             if x < -8000:
1738:                 return np.inf
1739:             else:
1740:                 v = mpmath.rgamma(x)
1741:             return v
1742:         # n=500 (non-xslow default) fails for one bad point
1743:         assert_mpmath_equal(sc.rgamma,
1744:                             rgamma,
1745:                             [Arg()],
1746:                             n=5000,
1747:                             ignore_inf_sign=True)
1748: 
1749:     def test_rgamma_complex(self):
1750:         assert_mpmath_equal(sc.rgamma,
1751:                             exception_to_nan(mpmath.rgamma),
1752:                             [ComplexArg()], rtol=5e-13)
1753: 
1754:     @pytest.mark.xfail(condition=_is_32bit_platform, reason="see gh-3551 for bad points")
1755:     def test_rf(self):
1756:         if LooseVersion(mpmath.__version__) >= LooseVersion("1.0.0"):
1757:             # no workarounds needed
1758:             mppoch = mpmath.rf
1759:         else:
1760:             def mppoch(a, m):
1761:                 # deal with cases where the result in double precision
1762:                 # hits exactly a non-positive integer, but the
1763:                 # corresponding extended-precision mpf floats don't
1764:                 if float(a + m) == int(a + m) and float(a + m) <= 0:
1765:                     a = mpmath.mpf(a)
1766:                     m = int(a + m) - a
1767:                 return mpmath.rf(a, m)
1768: 
1769:         assert_mpmath_equal(sc.poch,
1770:                             mppoch,
1771:                             [Arg(), Arg()],
1772:                             dps=400)
1773: 
1774:     def test_sinpi(self):
1775:         eps = np.finfo(float).eps
1776:         assert_mpmath_equal(_sinpi, mpmath.sinpi,
1777:                             [Arg()], nan_ok=False, rtol=2*eps)
1778: 
1779:     def test_sinpi_complex(self):
1780:         assert_mpmath_equal(_sinpi, mpmath.sinpi,
1781:                             [ComplexArg()], nan_ok=False, rtol=2e-14)
1782: 
1783:     def test_shi(self):
1784:         def shi(x):
1785:             return sc.shichi(x)[0]
1786:         assert_mpmath_equal(shi, mpmath.shi, [Arg()])
1787:         # check asymptotic series cross-over
1788:         assert_mpmath_equal(shi, mpmath.shi, [FixedArg([88 - 1e-9, 88, 88 + 1e-9])])
1789: 
1790:     def test_shi_complex(self):
1791:         def shi(z):
1792:             return sc.shichi(z)[0]
1793:         # shi oscillates as Im[z] -> +- inf, so limit range
1794:         assert_mpmath_equal(shi,
1795:                             mpmath.shi,
1796:                             [ComplexArg(complex(-np.inf, -1e8), complex(np.inf, 1e8))],
1797:                             rtol=1e-12)
1798: 
1799:     def test_si(self):
1800:         def si(x):
1801:             return sc.sici(x)[0]
1802:         assert_mpmath_equal(si, mpmath.si, [Arg()])
1803: 
1804:     def test_si_complex(self):
1805:         def si(z):
1806:             return sc.sici(z)[0]
1807:         # si oscillates as Re[z] -> +- inf, so limit range
1808:         assert_mpmath_equal(si,
1809:                             mpmath.si,
1810:                             [ComplexArg(complex(-1e8, -np.inf), complex(1e8, np.inf))],
1811:                             rtol=1e-12)
1812: 
1813:     def test_spence(self):
1814:         # mpmath uses a different convention for the dilogarithm
1815:         def dilog(x):
1816:             return mpmath.polylog(2, 1 - x)
1817:         # Spence has a branch cut on the negative real axis
1818:         assert_mpmath_equal(sc.spence,
1819:                             exception_to_nan(dilog),
1820:                             [Arg(0, np.inf)], rtol=1e-14)
1821: 
1822:     def test_spence_complex(self):
1823:         def dilog(z):
1824:             return mpmath.polylog(2, 1 - z)
1825:         assert_mpmath_equal(sc.spence,
1826:                             exception_to_nan(dilog),
1827:                             [ComplexArg()], rtol=1e-14)
1828: 
1829:     def test_spherharm(self):
1830:         def spherharm(l, m, theta, phi):
1831:             if m > l:
1832:                 return np.nan
1833:             return sc.sph_harm(m, l, phi, theta)
1834:         assert_mpmath_equal(spherharm,
1835:                             mpmath.spherharm,
1836:                             [IntArg(0, 100), IntArg(0, 100),
1837:                              Arg(a=0, b=pi), Arg(a=0, b=2*pi)],
1838:                             atol=1e-8, n=6000,
1839:                             dps=150)
1840: 
1841:     def test_struveh(self):
1842:         assert_mpmath_equal(sc.struve,
1843:                             exception_to_nan(mpmath.struveh),
1844:                             [Arg(-1e4, 1e4), Arg(0, 1e4)],
1845:                             rtol=5e-10)
1846: 
1847:     def test_struvel(self):
1848:         def mp_struvel(v, z):
1849:             if v < 0 and z < -v and abs(v) > 1000:
1850:                 # larger DPS needed for correct results
1851:                 old_dps = mpmath.mp.dps
1852:                 try:
1853:                     mpmath.mp.dps = 300
1854:                     return mpmath.struvel(v, z)
1855:                 finally:
1856:                     mpmath.mp.dps = old_dps
1857:             return mpmath.struvel(v, z)
1858: 
1859:         assert_mpmath_equal(sc.modstruve,
1860:                             exception_to_nan(mp_struvel),
1861:                             [Arg(-1e4, 1e4), Arg(0, 1e4)],
1862:                             rtol=5e-10,
1863:                             ignore_inf_sign=True)
1864: 
1865:     def test_wrightomega(self):
1866:         assert_mpmath_equal(sc.wrightomega,
1867:                             lambda z: _mpmath_wrightomega(z, 25),
1868:                             [ComplexArg()], rtol=1e-14, nan_ok=False)
1869: 
1870:     def test_zeta(self):
1871:         assert_mpmath_equal(sc.zeta,
1872:                             exception_to_nan(mpmath.zeta),
1873:                             [Arg(a=1, b=1e10, inclusive_a=False),
1874:                              Arg(a=0, inclusive_a=False)])
1875: 
1876:     def test_boxcox(self):
1877: 
1878:         def mp_boxcox(x, lmbda):
1879:             x = mpmath.mp.mpf(x)
1880:             lmbda = mpmath.mp.mpf(lmbda)
1881:             if lmbda == 0:
1882:                 return mpmath.mp.log(x)
1883:             else:
1884:                 return mpmath.mp.powm1(x, lmbda) / lmbda
1885: 
1886:         assert_mpmath_equal(sc.boxcox,
1887:                             exception_to_nan(mp_boxcox),
1888:                             [Arg(a=0, inclusive_a=False), Arg()],
1889:                             n=200,
1890:                             dps=60,
1891:                             rtol=1e-13)
1892: 
1893:     def test_boxcox1p(self):
1894: 
1895:         def mp_boxcox1p(x, lmbda):
1896:             x = mpmath.mp.mpf(x)
1897:             lmbda = mpmath.mp.mpf(lmbda)
1898:             one = mpmath.mp.mpf(1)
1899:             if lmbda == 0:
1900:                 return mpmath.mp.log(one + x)
1901:             else:
1902:                 return mpmath.mp.powm1(one + x, lmbda) / lmbda
1903: 
1904:         assert_mpmath_equal(sc.boxcox1p,
1905:                             exception_to_nan(mp_boxcox1p),
1906:                             [Arg(a=-1, inclusive_a=False), Arg()],
1907:                             n=200,
1908:                             dps=60,
1909:                             rtol=1e-13)
1910: 
1911:     def test_spherical_jn(self):
1912:         def mp_spherical_jn(n, z):
1913:             arg = mpmath.mpmathify(z)
1914:             out = (mpmath.besselj(n + mpmath.mpf(1)/2, arg) /
1915:                    mpmath.sqrt(2*arg/mpmath.pi))
1916:             if arg.imag == 0:
1917:                 return out.real
1918:             else:
1919:                 return out
1920: 
1921:         assert_mpmath_equal(lambda n, z: sc.spherical_jn(int(n), z),
1922:                             exception_to_nan(mp_spherical_jn),
1923:                             [IntArg(0, 200), Arg(-1e8, 1e8)],
1924:                             dps=300)
1925: 
1926:     def test_spherical_jn_complex(self):
1927:         def mp_spherical_jn(n, z):
1928:             arg = mpmath.mpmathify(z)
1929:             out = (mpmath.besselj(n + mpmath.mpf(1)/2, arg) /
1930:                    mpmath.sqrt(2*arg/mpmath.pi))
1931:             if arg.imag == 0:
1932:                 return out.real
1933:             else:
1934:                 return out
1935: 
1936:         assert_mpmath_equal(lambda n, z: sc.spherical_jn(int(n.real), z),
1937:                             exception_to_nan(mp_spherical_jn),
1938:                             [IntArg(0, 200), ComplexArg()])
1939: 
1940:     def test_spherical_yn(self):
1941:         def mp_spherical_yn(n, z):
1942:             arg = mpmath.mpmathify(z)
1943:             out = (mpmath.bessely(n + mpmath.mpf(1)/2, arg) /
1944:                    mpmath.sqrt(2*arg/mpmath.pi))
1945:             if arg.imag == 0:
1946:                 return out.real
1947:             else:
1948:                 return out
1949: 
1950:         assert_mpmath_equal(lambda n, z: sc.spherical_yn(int(n), z),
1951:                             exception_to_nan(mp_spherical_yn),
1952:                             [IntArg(0, 200), Arg(-1e10, 1e10)],
1953:                             dps=100)
1954: 
1955:     def test_spherical_yn_complex(self):
1956:         def mp_spherical_yn(n, z):
1957:             arg = mpmath.mpmathify(z)
1958:             out = (mpmath.bessely(n + mpmath.mpf(1)/2, arg) /
1959:                    mpmath.sqrt(2*arg/mpmath.pi))
1960:             if arg.imag == 0:
1961:                 return out.real
1962:             else:
1963:                 return out
1964: 
1965:         assert_mpmath_equal(lambda n, z: sc.spherical_yn(int(n.real), z),
1966:                             exception_to_nan(mp_spherical_yn),
1967:                             [IntArg(0, 200), ComplexArg()])
1968: 
1969:     def test_spherical_in(self):
1970:         def mp_spherical_in(n, z):
1971:             arg = mpmath.mpmathify(z)
1972:             out = (mpmath.besseli(n + mpmath.mpf(1)/2, arg) /
1973:                    mpmath.sqrt(2*arg/mpmath.pi))
1974:             if arg.imag == 0:
1975:                 return out.real
1976:             else:
1977:                 return out
1978: 
1979:         assert_mpmath_equal(lambda n, z: sc.spherical_in(int(n), z),
1980:                             exception_to_nan(mp_spherical_in),
1981:                             [IntArg(0, 200), Arg()],
1982:                             dps=200, atol=10**(-278))
1983: 
1984:     def test_spherical_in_complex(self):
1985:         def mp_spherical_in(n, z):
1986:             arg = mpmath.mpmathify(z)
1987:             out = (mpmath.besseli(n + mpmath.mpf(1)/2, arg) /
1988:                    mpmath.sqrt(2*arg/mpmath.pi))
1989:             if arg.imag == 0:
1990:                 return out.real
1991:             else:
1992:                 return out
1993: 
1994:         assert_mpmath_equal(lambda n, z: sc.spherical_in(int(n.real), z),
1995:                             exception_to_nan(mp_spherical_in),
1996:                             [IntArg(0, 200), ComplexArg()])
1997: 
1998:     def test_spherical_kn(self):
1999:         def mp_spherical_kn(n, z):
2000:             out = (mpmath.besselk(n + mpmath.mpf(1)/2, z) *
2001:                    mpmath.sqrt(mpmath.pi/(2*mpmath.mpmathify(z))))
2002:             if mpmath.mpmathify(z).imag == 0:
2003:                 return out.real
2004:             else:
2005:                 return out
2006: 
2007:         assert_mpmath_equal(lambda n, z: sc.spherical_kn(int(n), z),
2008:                             exception_to_nan(mp_spherical_kn),
2009:                             [IntArg(0, 150), Arg()],
2010:                             dps=100)
2011: 
2012:     @pytest.mark.xfail(run=False, reason="Accuracy issues near z = -1 inherited from kv.")
2013:     def test_spherical_kn_complex(self):
2014:         def mp_spherical_kn(n, z):
2015:             arg = mpmath.mpmathify(z)
2016:             out = (mpmath.besselk(n + mpmath.mpf(1)/2, arg) /
2017:                    mpmath.sqrt(2*arg/mpmath.pi))
2018:             if arg.imag == 0:
2019:                 return out.real
2020:             else:
2021:                 return out
2022: 
2023:         assert_mpmath_equal(lambda n, z: sc.spherical_kn(int(n.real), z),
2024:                             exception_to_nan(mp_spherical_kn),
2025:                             [IntArg(0, 200), ComplexArg()],
2026:                             dps=200)
2027: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_542800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 4, (-1)), 'str', '\nTest Scipy functions versus mpmath, if available.\n\n')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 7, 0))

# 'import numpy' statement (line 7)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542801 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'numpy')

if (type(import_542801) is not StypyTypeError):

    if (import_542801 != 'pyd_module'):
        __import__(import_542801)
        sys_modules_542802 = sys.modules[import_542801]
        import_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'np', sys_modules_542802.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 7)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 7, 0), 'numpy', import_542801)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 8, 0))

# 'from numpy.testing import assert_, assert_allclose' statement (line 8)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542803 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'numpy.testing')

if (type(import_542803) is not StypyTypeError):

    if (import_542803 != 'pyd_module'):
        __import__(import_542803)
        sys_modules_542804 = sys.modules[import_542803]
        import_from_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'numpy.testing', sys_modules_542804.module_type_store, module_type_store, ['assert_', 'assert_allclose'])
        nest_module(stypy.reporting.localization.Localization(__file__, 8, 0), __file__, sys_modules_542804, sys_modules_542804.module_type_store, module_type_store)
    else:
        from numpy.testing import assert_, assert_allclose

        import_from_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'numpy.testing', None, module_type_store, ['assert_', 'assert_allclose'], [assert_, assert_allclose])

else:
    # Assigning a type to the variable 'numpy.testing' (line 8)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 8, 0), 'numpy.testing', import_542803)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 9, 0))

# 'from numpy import pi' statement (line 9)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542805 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'numpy')

if (type(import_542805) is not StypyTypeError):

    if (import_542805 != 'pyd_module'):
        __import__(import_542805)
        sys_modules_542806 = sys.modules[import_542805]
        import_from_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'numpy', sys_modules_542806.module_type_store, module_type_store, ['pi'])
        nest_module(stypy.reporting.localization.Localization(__file__, 9, 0), __file__, sys_modules_542806, sys_modules_542806.module_type_store, module_type_store)
    else:
        from numpy import pi

        import_from_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'numpy', None, module_type_store, ['pi'], [pi])

else:
    # Assigning a type to the variable 'numpy' (line 9)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 9, 0), 'numpy', import_542805)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 10, 0))

# 'import pytest' statement (line 10)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542807 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'pytest')

if (type(import_542807) is not StypyTypeError):

    if (import_542807 != 'pyd_module'):
        __import__(import_542807)
        sys_modules_542808 = sys.modules[import_542807]
        import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'pytest', sys_modules_542808.module_type_store, module_type_store)
    else:
        import pytest

        import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'pytest', pytest, module_type_store)

else:
    # Assigning a type to the variable 'pytest' (line 10)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 10, 0), 'pytest', import_542807)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 12, 0))

# 'from distutils.version import LooseVersion' statement (line 12)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542809 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'distutils.version')

if (type(import_542809) is not StypyTypeError):

    if (import_542809 != 'pyd_module'):
        __import__(import_542809)
        sys_modules_542810 = sys.modules[import_542809]
        import_from_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'distutils.version', sys_modules_542810.module_type_store, module_type_store, ['LooseVersion'])
        nest_module(stypy.reporting.localization.Localization(__file__, 12, 0), __file__, sys_modules_542810, sys_modules_542810.module_type_store, module_type_store)
    else:
        from distutils.version import LooseVersion

        import_from_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'distutils.version', None, module_type_store, ['LooseVersion'], [LooseVersion])

else:
    # Assigning a type to the variable 'distutils.version' (line 12)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 12, 0), 'distutils.version', import_542809)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 14, 0))

# 'import scipy.special' statement (line 14)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542811 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'scipy.special')

if (type(import_542811) is not StypyTypeError):

    if (import_542811 != 'pyd_module'):
        __import__(import_542811)
        sys_modules_542812 = sys.modules[import_542811]
        import_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'sc', sys_modules_542812.module_type_store, module_type_store)
    else:
        import scipy.special as sc

        import_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'sc', scipy.special, module_type_store)

else:
    # Assigning a type to the variable 'scipy.special' (line 14)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 14, 0), 'scipy.special', import_542811)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 15, 0))

# 'from scipy._lib.six import with_metaclass' statement (line 15)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542813 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'scipy._lib.six')

if (type(import_542813) is not StypyTypeError):

    if (import_542813 != 'pyd_module'):
        __import__(import_542813)
        sys_modules_542814 = sys.modules[import_542813]
        import_from_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'scipy._lib.six', sys_modules_542814.module_type_store, module_type_store, ['with_metaclass'])
        nest_module(stypy.reporting.localization.Localization(__file__, 15, 0), __file__, sys_modules_542814, sys_modules_542814.module_type_store, module_type_store)
    else:
        from scipy._lib.six import with_metaclass

        import_from_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'scipy._lib.six', None, module_type_store, ['with_metaclass'], [with_metaclass])

else:
    # Assigning a type to the variable 'scipy._lib.six' (line 15)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 15, 0), 'scipy._lib.six', import_542813)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 16, 0))

# 'from scipy.special._testutils import MissingModule, check_version, FuncData, assert_func_equal' statement (line 16)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542815 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.special._testutils')

if (type(import_542815) is not StypyTypeError):

    if (import_542815 != 'pyd_module'):
        __import__(import_542815)
        sys_modules_542816 = sys.modules[import_542815]
        import_from_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.special._testutils', sys_modules_542816.module_type_store, module_type_store, ['MissingModule', 'check_version', 'FuncData', 'assert_func_equal'])
        nest_module(stypy.reporting.localization.Localization(__file__, 16, 0), __file__, sys_modules_542816, sys_modules_542816.module_type_store, module_type_store)
    else:
        from scipy.special._testutils import MissingModule, check_version, FuncData, assert_func_equal

        import_from_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.special._testutils', None, module_type_store, ['MissingModule', 'check_version', 'FuncData', 'assert_func_equal'], [MissingModule, check_version, FuncData, assert_func_equal])

else:
    # Assigning a type to the variable 'scipy.special._testutils' (line 16)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.special._testutils', import_542815)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 19, 0))

# 'from scipy.special._mptestutils import Arg, FixedArg, ComplexArg, IntArg, assert_mpmath_equal, nonfunctional_tooslow, trace_args, time_limited, exception_to_nan, inf_to_nan' statement (line 19)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542817 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.special._mptestutils')

if (type(import_542817) is not StypyTypeError):

    if (import_542817 != 'pyd_module'):
        __import__(import_542817)
        sys_modules_542818 = sys.modules[import_542817]
        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.special._mptestutils', sys_modules_542818.module_type_store, module_type_store, ['Arg', 'FixedArg', 'ComplexArg', 'IntArg', 'assert_mpmath_equal', 'nonfunctional_tooslow', 'trace_args', 'time_limited', 'exception_to_nan', 'inf_to_nan'])
        nest_module(stypy.reporting.localization.Localization(__file__, 19, 0), __file__, sys_modules_542818, sys_modules_542818.module_type_store, module_type_store)
    else:
        from scipy.special._mptestutils import Arg, FixedArg, ComplexArg, IntArg, assert_mpmath_equal, nonfunctional_tooslow, trace_args, time_limited, exception_to_nan, inf_to_nan

        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.special._mptestutils', None, module_type_store, ['Arg', 'FixedArg', 'ComplexArg', 'IntArg', 'assert_mpmath_equal', 'nonfunctional_tooslow', 'trace_args', 'time_limited', 'exception_to_nan', 'inf_to_nan'], [Arg, FixedArg, ComplexArg, IntArg, assert_mpmath_equal, nonfunctional_tooslow, trace_args, time_limited, exception_to_nan, inf_to_nan])

else:
    # Assigning a type to the variable 'scipy.special._mptestutils' (line 19)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.special._mptestutils', import_542817)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 23, 0))

# 'from scipy.special._ufuncs import _sinpi, _cospi, _lgam1p, _lanczos_sum_expg_scaled, _log1pmx, _igam_fac' statement (line 23)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542819 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'scipy.special._ufuncs')

if (type(import_542819) is not StypyTypeError):

    if (import_542819 != 'pyd_module'):
        __import__(import_542819)
        sys_modules_542820 = sys.modules[import_542819]
        import_from_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'scipy.special._ufuncs', sys_modules_542820.module_type_store, module_type_store, ['_sinpi', '_cospi', '_lgam1p', '_lanczos_sum_expg_scaled', '_log1pmx', '_igam_fac'])
        nest_module(stypy.reporting.localization.Localization(__file__, 23, 0), __file__, sys_modules_542820, sys_modules_542820.module_type_store, module_type_store)
    else:
        from scipy.special._ufuncs import _sinpi, _cospi, _lgam1p, _lanczos_sum_expg_scaled, _log1pmx, _igam_fac

        import_from_module(stypy.reporting.localization.Localization(__file__, 23, 0), 'scipy.special._ufuncs', None, module_type_store, ['_sinpi', '_cospi', '_lgam1p', '_lanczos_sum_expg_scaled', '_log1pmx', '_igam_fac'], [_sinpi, _cospi, _lgam1p, _lanczos_sum_expg_scaled, _log1pmx, _igam_fac])

else:
    # Assigning a type to the variable 'scipy.special._ufuncs' (line 23)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 0), 'scipy.special._ufuncs', import_542819)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')



# SSA begins for try-except statement (line 27)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 28, 4))

# 'import mpmath' statement (line 28)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/tests/')
import_542821 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 28, 4), 'mpmath')

if (type(import_542821) is not StypyTypeError):

    if (import_542821 != 'pyd_module'):
        __import__(import_542821)
        sys_modules_542822 = sys.modules[import_542821]
        import_module(stypy.reporting.localization.Localization(__file__, 28, 4), 'mpmath', sys_modules_542822.module_type_store, module_type_store)
    else:
        import mpmath

        import_module(stypy.reporting.localization.Localization(__file__, 28, 4), 'mpmath', mpmath, module_type_store)

else:
    # Assigning a type to the variable 'mpmath' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 4), 'mpmath', import_542821)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/tests/')

# SSA branch for the except part of a try statement (line 27)
# SSA branch for the except 'ImportError' branch of a try statement (line 27)
module_type_store.open_ssa_branch('except')

# Assigning a Call to a Name (line 30):

# Assigning a Call to a Name (line 30):

# Call to MissingModule(...): (line 30)
# Processing the call arguments (line 30)
str_542824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 27), 'str', 'mpmath')
# Processing the call keyword arguments (line 30)
kwargs_542825 = {}
# Getting the type of 'MissingModule' (line 30)
MissingModule_542823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 13), 'MissingModule', False)
# Calling MissingModule(args, kwargs) (line 30)
MissingModule_call_result_542826 = invoke(stypy.reporting.localization.Localization(__file__, 30, 13), MissingModule_542823, *[str_542824], **kwargs_542825)

# Assigning a type to the variable 'mpmath' (line 30)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 4), 'mpmath', MissingModule_call_result_542826)
# SSA join for try-except statement (line 27)
module_type_store = module_type_store.join_ssa_context()


# Assigning a Compare to a Name (line 33):

# Assigning a Compare to a Name (line 33):


# Call to intp(...): (line 33)
# Processing the call arguments (line 33)
int_542829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 33, 29), 'int')
# Processing the call keyword arguments (line 33)
kwargs_542830 = {}
# Getting the type of 'np' (line 33)
np_542827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 33, 21), 'np', False)
# Obtaining the member 'intp' of a type (line 33)
intp_542828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 33, 21), np_542827, 'intp')
# Calling intp(args, kwargs) (line 33)
intp_call_result_542831 = invoke(stypy.reporting.localization.Localization(__file__, 33, 21), intp_542828, *[int_542829], **kwargs_542830)

# Obtaining the member 'itemsize' of a type (line 33)
itemsize_542832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 33, 21), intp_call_result_542831, 'itemsize')
int_542833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 33, 43), 'int')
# Applying the binary operator '<' (line 33)
result_lt_542834 = python_operator(stypy.reporting.localization.Localization(__file__, 33, 21), '<', itemsize_542832, int_542833)

# Assigning a type to the variable '_is_32bit_platform' (line 33)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 0), '_is_32bit_platform', result_lt_542834)

@norecursion
def test_expi_complex(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_expi_complex'
    module_type_store = module_type_store.open_function_context('test_expi_complex', 40, 0, False)
    
    # Passed parameters checking function
    test_expi_complex.stypy_localization = localization
    test_expi_complex.stypy_type_of_self = None
    test_expi_complex.stypy_type_store = module_type_store
    test_expi_complex.stypy_function_name = 'test_expi_complex'
    test_expi_complex.stypy_param_names_list = []
    test_expi_complex.stypy_varargs_param_name = None
    test_expi_complex.stypy_kwargs_param_name = None
    test_expi_complex.stypy_call_defaults = defaults
    test_expi_complex.stypy_call_varargs = varargs
    test_expi_complex.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_expi_complex', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_expi_complex', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_expi_complex(...)' code ##################

    
    # Assigning a List to a Name (line 42):
    
    # Assigning a List to a Name (line 42):
    
    # Obtaining an instance of the builtin type 'list' (line 42)
    list_542835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 42)
    
    # Assigning a type to the variable 'dataset' (line 42)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'dataset', list_542835)
    
    
    # Call to logspace(...): (line 43)
    # Processing the call arguments (line 43)
    int_542838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 25), 'int')
    int_542839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 30), 'int')
    int_542840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 33), 'int')
    # Processing the call keyword arguments (line 43)
    kwargs_542841 = {}
    # Getting the type of 'np' (line 43)
    np_542836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 13), 'np', False)
    # Obtaining the member 'logspace' of a type (line 43)
    logspace_542837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 43, 13), np_542836, 'logspace')
    # Calling logspace(args, kwargs) (line 43)
    logspace_call_result_542842 = invoke(stypy.reporting.localization.Localization(__file__, 43, 13), logspace_542837, *[int_542838, int_542839, int_542840], **kwargs_542841)
    
    # Testing the type of a for loop iterable (line 43)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 43, 4), logspace_call_result_542842)
    # Getting the type of the for loop variable (line 43)
    for_loop_var_542843 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 43, 4), logspace_call_result_542842)
    # Assigning a type to the variable 'r' (line 43)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 4), 'r', for_loop_var_542843)
    # SSA begins for a for statement (line 43)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to linspace(...): (line 44)
    # Processing the call arguments (line 44)
    int_542846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 29), 'int')
    int_542847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 32), 'int')
    # Getting the type of 'np' (line 44)
    np_542848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 34), 'np', False)
    # Obtaining the member 'pi' of a type (line 44)
    pi_542849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 34), np_542848, 'pi')
    # Applying the binary operator '*' (line 44)
    result_mul_542850 = python_operator(stypy.reporting.localization.Localization(__file__, 44, 32), '*', int_542847, pi_542849)
    
    int_542851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 41), 'int')
    # Processing the call keyword arguments (line 44)
    kwargs_542852 = {}
    # Getting the type of 'np' (line 44)
    np_542844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 17), 'np', False)
    # Obtaining the member 'linspace' of a type (line 44)
    linspace_542845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 17), np_542844, 'linspace')
    # Calling linspace(args, kwargs) (line 44)
    linspace_call_result_542853 = invoke(stypy.reporting.localization.Localization(__file__, 44, 17), linspace_542845, *[int_542846, result_mul_542850, int_542851], **kwargs_542852)
    
    # Testing the type of a for loop iterable (line 44)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 44, 8), linspace_call_result_542853)
    # Getting the type of the for loop variable (line 44)
    for_loop_var_542854 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 44, 8), linspace_call_result_542853)
    # Assigning a type to the variable 'p' (line 44)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 44, 8), 'p', for_loop_var_542854)
    # SSA begins for a for statement (line 44)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Name (line 45):
    
    # Assigning a BinOp to a Name (line 45):
    # Getting the type of 'r' (line 45)
    r_542855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 16), 'r')
    
    # Call to exp(...): (line 45)
    # Processing the call arguments (line 45)
    complex_542858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 25), 'complex')
    # Getting the type of 'p' (line 45)
    p_542859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 28), 'p', False)
    # Applying the binary operator '*' (line 45)
    result_mul_542860 = python_operator(stypy.reporting.localization.Localization(__file__, 45, 25), '*', complex_542858, p_542859)
    
    # Processing the call keyword arguments (line 45)
    kwargs_542861 = {}
    # Getting the type of 'np' (line 45)
    np_542856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 18), 'np', False)
    # Obtaining the member 'exp' of a type (line 45)
    exp_542857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 18), np_542856, 'exp')
    # Calling exp(args, kwargs) (line 45)
    exp_call_result_542862 = invoke(stypy.reporting.localization.Localization(__file__, 45, 18), exp_542857, *[result_mul_542860], **kwargs_542861)
    
    # Applying the binary operator '*' (line 45)
    result_mul_542863 = python_operator(stypy.reporting.localization.Localization(__file__, 45, 16), '*', r_542855, exp_call_result_542862)
    
    # Assigning a type to the variable 'z' (line 45)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 12), 'z', result_mul_542863)
    
    # Call to append(...): (line 46)
    # Processing the call arguments (line 46)
    
    # Obtaining an instance of the builtin type 'tuple' (line 46)
    tuple_542866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 46, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 46)
    # Adding element type (line 46)
    # Getting the type of 'z' (line 46)
    z_542867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 28), 'z', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 28), tuple_542866, z_542867)
    # Adding element type (line 46)
    
    # Call to complex(...): (line 46)
    # Processing the call arguments (line 46)
    
    # Call to ei(...): (line 46)
    # Processing the call arguments (line 46)
    # Getting the type of 'z' (line 46)
    z_542871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 49), 'z', False)
    # Processing the call keyword arguments (line 46)
    kwargs_542872 = {}
    # Getting the type of 'mpmath' (line 46)
    mpmath_542869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 39), 'mpmath', False)
    # Obtaining the member 'ei' of a type (line 46)
    ei_542870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 46, 39), mpmath_542869, 'ei')
    # Calling ei(args, kwargs) (line 46)
    ei_call_result_542873 = invoke(stypy.reporting.localization.Localization(__file__, 46, 39), ei_542870, *[z_542871], **kwargs_542872)
    
    # Processing the call keyword arguments (line 46)
    kwargs_542874 = {}
    # Getting the type of 'complex' (line 46)
    complex_542868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 31), 'complex', False)
    # Calling complex(args, kwargs) (line 46)
    complex_call_result_542875 = invoke(stypy.reporting.localization.Localization(__file__, 46, 31), complex_542868, *[ei_call_result_542873], **kwargs_542874)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 46, 28), tuple_542866, complex_call_result_542875)
    
    # Processing the call keyword arguments (line 46)
    kwargs_542876 = {}
    # Getting the type of 'dataset' (line 46)
    dataset_542864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 12), 'dataset', False)
    # Obtaining the member 'append' of a type (line 46)
    append_542865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 46, 12), dataset_542864, 'append')
    # Calling append(args, kwargs) (line 46)
    append_call_result_542877 = invoke(stypy.reporting.localization.Localization(__file__, 46, 12), append_542865, *[tuple_542866], **kwargs_542876)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 47):
    
    # Assigning a Call to a Name (line 47):
    
    # Call to array(...): (line 47)
    # Processing the call arguments (line 47)
    # Getting the type of 'dataset' (line 47)
    dataset_542880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 23), 'dataset', False)
    # Processing the call keyword arguments (line 47)
    # Getting the type of 'np' (line 47)
    np_542881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 38), 'np', False)
    # Obtaining the member 'complex_' of a type (line 47)
    complex__542882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 38), np_542881, 'complex_')
    keyword_542883 = complex__542882
    kwargs_542884 = {'dtype': keyword_542883}
    # Getting the type of 'np' (line 47)
    np_542878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 47)
    array_542879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 14), np_542878, 'array')
    # Calling array(args, kwargs) (line 47)
    array_call_result_542885 = invoke(stypy.reporting.localization.Localization(__file__, 47, 14), array_542879, *[dataset_542880], **kwargs_542884)
    
    # Assigning a type to the variable 'dataset' (line 47)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 47, 4), 'dataset', array_call_result_542885)
    
    # Call to check(...): (line 49)
    # Processing the call keyword arguments (line 49)
    kwargs_542895 = {}
    
    # Call to FuncData(...): (line 49)
    # Processing the call arguments (line 49)
    # Getting the type of 'sc' (line 49)
    sc_542887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 13), 'sc', False)
    # Obtaining the member 'expi' of a type (line 49)
    expi_542888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 49, 13), sc_542887, 'expi')
    # Getting the type of 'dataset' (line 49)
    dataset_542889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 22), 'dataset', False)
    int_542890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 49, 31), 'int')
    int_542891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 49, 34), 'int')
    # Processing the call keyword arguments (line 49)
    kwargs_542892 = {}
    # Getting the type of 'FuncData' (line 49)
    FuncData_542886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 49)
    FuncData_call_result_542893 = invoke(stypy.reporting.localization.Localization(__file__, 49, 4), FuncData_542886, *[expi_542888, dataset_542889, int_542890, int_542891], **kwargs_542892)
    
    # Obtaining the member 'check' of a type (line 49)
    check_542894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 49, 4), FuncData_call_result_542893, 'check')
    # Calling check(args, kwargs) (line 49)
    check_call_result_542896 = invoke(stypy.reporting.localization.Localization(__file__, 49, 4), check_542894, *[], **kwargs_542895)
    
    
    # ################# End of 'test_expi_complex(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_expi_complex' in the type store
    # Getting the type of 'stypy_return_type' (line 40)
    stypy_return_type_542897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 40, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_542897)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_expi_complex'
    return stypy_return_type_542897

# Assigning a type to the variable 'test_expi_complex' (line 40)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 40, 0), 'test_expi_complex', test_expi_complex)

@norecursion
def test_expn_large_n(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_expn_large_n'
    module_type_store = module_type_store.open_function_context('test_expn_large_n', 56, 0, False)
    
    # Passed parameters checking function
    test_expn_large_n.stypy_localization = localization
    test_expn_large_n.stypy_type_of_self = None
    test_expn_large_n.stypy_type_store = module_type_store
    test_expn_large_n.stypy_function_name = 'test_expn_large_n'
    test_expn_large_n.stypy_param_names_list = []
    test_expn_large_n.stypy_varargs_param_name = None
    test_expn_large_n.stypy_kwargs_param_name = None
    test_expn_large_n.stypy_call_defaults = defaults
    test_expn_large_n.stypy_call_varargs = varargs
    test_expn_large_n.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_expn_large_n', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_expn_large_n', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_expn_large_n(...)' code ##################

    
    # Assigning a List to a Name (line 59):
    
    # Assigning a List to a Name (line 59):
    
    # Obtaining an instance of the builtin type 'list' (line 59)
    list_542898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 59)
    
    # Assigning a type to the variable 'dataset' (line 59)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 59, 4), 'dataset', list_542898)
    
    
    # Obtaining an instance of the builtin type 'list' (line 60)
    list_542899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 60, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 60)
    # Adding element type (line 60)
    int_542900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 60, 14), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 60, 13), list_542899, int_542900)
    # Adding element type (line 60)
    int_542901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 60, 18), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 60, 13), list_542899, int_542901)
    
    # Testing the type of a for loop iterable (line 60)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 60, 4), list_542899)
    # Getting the type of the for loop variable (line 60)
    for_loop_var_542902 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 60, 4), list_542899)
    # Assigning a type to the variable 'n' (line 60)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 60, 4), 'n', for_loop_var_542902)
    # SSA begins for a for statement (line 60)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to logspace(...): (line 61)
    # Processing the call arguments (line 61)
    int_542905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 29), 'int')
    int_542906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 32), 'int')
    int_542907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 35), 'int')
    # Processing the call keyword arguments (line 61)
    kwargs_542908 = {}
    # Getting the type of 'np' (line 61)
    np_542903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 17), 'np', False)
    # Obtaining the member 'logspace' of a type (line 61)
    logspace_542904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 17), np_542903, 'logspace')
    # Calling logspace(args, kwargs) (line 61)
    logspace_call_result_542909 = invoke(stypy.reporting.localization.Localization(__file__, 61, 17), logspace_542904, *[int_542905, int_542906, int_542907], **kwargs_542908)
    
    # Testing the type of a for loop iterable (line 61)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 61, 8), logspace_call_result_542909)
    # Getting the type of the for loop variable (line 61)
    for_loop_var_542910 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 61, 8), logspace_call_result_542909)
    # Assigning a type to the variable 'x' (line 61)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 61, 8), 'x', for_loop_var_542910)
    # SSA begins for a for statement (line 61)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to workdps(...): (line 62)
    # Processing the call arguments (line 62)
    int_542913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 62, 32), 'int')
    # Processing the call keyword arguments (line 62)
    kwargs_542914 = {}
    # Getting the type of 'mpmath' (line 62)
    mpmath_542911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 17), 'mpmath', False)
    # Obtaining the member 'workdps' of a type (line 62)
    workdps_542912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 62, 17), mpmath_542911, 'workdps')
    # Calling workdps(args, kwargs) (line 62)
    workdps_call_result_542915 = invoke(stypy.reporting.localization.Localization(__file__, 62, 17), workdps_542912, *[int_542913], **kwargs_542914)
    
    with_542916 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 62, 17), workdps_call_result_542915, 'with parameter', '__enter__', '__exit__')

    if with_542916:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 62)
        enter___542917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 62, 17), workdps_call_result_542915, '__enter__')
        with_enter_542918 = invoke(stypy.reporting.localization.Localization(__file__, 62, 17), enter___542917)
        
        # Call to append(...): (line 63)
        # Processing the call arguments (line 63)
        
        # Obtaining an instance of the builtin type 'tuple' (line 63)
        tuple_542921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 63, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 63)
        # Adding element type (line 63)
        # Getting the type of 'n' (line 63)
        n_542922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 32), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 63, 32), tuple_542921, n_542922)
        # Adding element type (line 63)
        # Getting the type of 'x' (line 63)
        x_542923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 35), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 63, 32), tuple_542921, x_542923)
        # Adding element type (line 63)
        
        # Call to float(...): (line 63)
        # Processing the call arguments (line 63)
        
        # Call to expint(...): (line 63)
        # Processing the call arguments (line 63)
        # Getting the type of 'n' (line 63)
        n_542927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 58), 'n', False)
        # Getting the type of 'x' (line 63)
        x_542928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 61), 'x', False)
        # Processing the call keyword arguments (line 63)
        kwargs_542929 = {}
        # Getting the type of 'mpmath' (line 63)
        mpmath_542925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 44), 'mpmath', False)
        # Obtaining the member 'expint' of a type (line 63)
        expint_542926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 63, 44), mpmath_542925, 'expint')
        # Calling expint(args, kwargs) (line 63)
        expint_call_result_542930 = invoke(stypy.reporting.localization.Localization(__file__, 63, 44), expint_542926, *[n_542927, x_542928], **kwargs_542929)
        
        # Processing the call keyword arguments (line 63)
        kwargs_542931 = {}
        # Getting the type of 'float' (line 63)
        float_542924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 38), 'float', False)
        # Calling float(args, kwargs) (line 63)
        float_call_result_542932 = invoke(stypy.reporting.localization.Localization(__file__, 63, 38), float_542924, *[expint_call_result_542930], **kwargs_542931)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 63, 32), tuple_542921, float_call_result_542932)
        
        # Processing the call keyword arguments (line 63)
        kwargs_542933 = {}
        # Getting the type of 'dataset' (line 63)
        dataset_542919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 16), 'dataset', False)
        # Obtaining the member 'append' of a type (line 63)
        append_542920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 63, 16), dataset_542919, 'append')
        # Calling append(args, kwargs) (line 63)
        append_call_result_542934 = invoke(stypy.reporting.localization.Localization(__file__, 63, 16), append_542920, *[tuple_542921], **kwargs_542933)
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 62)
        exit___542935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 62, 17), workdps_call_result_542915, '__exit__')
        with_exit_542936 = invoke(stypy.reporting.localization.Localization(__file__, 62, 17), exit___542935, None, None, None)

    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 64):
    
    # Assigning a Call to a Name (line 64):
    
    # Call to asarray(...): (line 64)
    # Processing the call arguments (line 64)
    # Getting the type of 'dataset' (line 64)
    dataset_542939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 64, 25), 'dataset', False)
    # Processing the call keyword arguments (line 64)
    kwargs_542940 = {}
    # Getting the type of 'np' (line 64)
    np_542937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 64, 14), 'np', False)
    # Obtaining the member 'asarray' of a type (line 64)
    asarray_542938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 64, 14), np_542937, 'asarray')
    # Calling asarray(args, kwargs) (line 64)
    asarray_call_result_542941 = invoke(stypy.reporting.localization.Localization(__file__, 64, 14), asarray_542938, *[dataset_542939], **kwargs_542940)
    
    # Assigning a type to the variable 'dataset' (line 64)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 64, 4), 'dataset', asarray_call_result_542941)
    
    # Call to check(...): (line 66)
    # Processing the call keyword arguments (line 66)
    kwargs_542955 = {}
    
    # Call to FuncData(...): (line 66)
    # Processing the call arguments (line 66)
    # Getting the type of 'sc' (line 66)
    sc_542943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 13), 'sc', False)
    # Obtaining the member 'expn' of a type (line 66)
    expn_542944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 66, 13), sc_542943, 'expn')
    # Getting the type of 'dataset' (line 66)
    dataset_542945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 22), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 66)
    tuple_542946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 32), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 66)
    # Adding element type (line 66)
    int_542947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 32), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 66, 32), tuple_542946, int_542947)
    # Adding element type (line 66)
    int_542948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 35), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 66, 32), tuple_542946, int_542948)
    
    int_542949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 39), 'int')
    # Processing the call keyword arguments (line 66)
    float_542950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 47), 'float')
    keyword_542951 = float_542950
    kwargs_542952 = {'rtol': keyword_542951}
    # Getting the type of 'FuncData' (line 66)
    FuncData_542942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 66)
    FuncData_call_result_542953 = invoke(stypy.reporting.localization.Localization(__file__, 66, 4), FuncData_542942, *[expn_542944, dataset_542945, tuple_542946, int_542949], **kwargs_542952)
    
    # Obtaining the member 'check' of a type (line 66)
    check_542954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 66, 4), FuncData_call_result_542953, 'check')
    # Calling check(args, kwargs) (line 66)
    check_call_result_542956 = invoke(stypy.reporting.localization.Localization(__file__, 66, 4), check_542954, *[], **kwargs_542955)
    
    
    # ################# End of 'test_expn_large_n(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_expn_large_n' in the type store
    # Getting the type of 'stypy_return_type' (line 56)
    stypy_return_type_542957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_542957)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_expn_large_n'
    return stypy_return_type_542957

# Assigning a type to the variable 'test_expn_large_n' (line 56)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 56, 0), 'test_expn_large_n', test_expn_large_n)

@norecursion
def test_hyp0f1_gh5764(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_hyp0f1_gh5764'
    module_type_store = module_type_store.open_function_context('test_hyp0f1_gh5764', 73, 0, False)
    
    # Passed parameters checking function
    test_hyp0f1_gh5764.stypy_localization = localization
    test_hyp0f1_gh5764.stypy_type_of_self = None
    test_hyp0f1_gh5764.stypy_type_store = module_type_store
    test_hyp0f1_gh5764.stypy_function_name = 'test_hyp0f1_gh5764'
    test_hyp0f1_gh5764.stypy_param_names_list = []
    test_hyp0f1_gh5764.stypy_varargs_param_name = None
    test_hyp0f1_gh5764.stypy_kwargs_param_name = None
    test_hyp0f1_gh5764.stypy_call_defaults = defaults
    test_hyp0f1_gh5764.stypy_call_varargs = varargs
    test_hyp0f1_gh5764.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_hyp0f1_gh5764', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_hyp0f1_gh5764', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_hyp0f1_gh5764(...)' code ##################

    
    # Assigning a List to a Name (line 76):
    
    # Assigning a List to a Name (line 76):
    
    # Obtaining an instance of the builtin type 'list' (line 76)
    list_542958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 76, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 76)
    
    # Assigning a type to the variable 'dataset' (line 76)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 76, 4), 'dataset', list_542958)
    
    # Assigning a List to a Name (line 77):
    
    # Assigning a List to a Name (line 77):
    
    # Obtaining an instance of the builtin type 'list' (line 77)
    list_542959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 77)
    # Adding element type (line 77)
    float_542960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 12), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 11), list_542959, float_542960)
    # Adding element type (line 77)
    float_542961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 19), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 11), list_542959, float_542961)
    # Adding element type (line 77)
    float_542962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 25), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 11), list_542959, float_542962)
    # Adding element type (line 77)
    float_542963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 31), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 11), list_542959, float_542963)
    # Adding element type (line 77)
    float_542964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 36), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 11), list_542959, float_542964)
    # Adding element type (line 77)
    float_542965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 41), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 11), list_542959, float_542965)
    
    # Assigning a type to the variable 'axis' (line 77)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 4), 'axis', list_542959)
    
    # Getting the type of 'axis' (line 78)
    axis_542966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 13), 'axis')
    # Testing the type of a for loop iterable (line 78)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 78, 4), axis_542966)
    # Getting the type of the for loop variable (line 78)
    for_loop_var_542967 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 78, 4), axis_542966)
    # Assigning a type to the variable 'v' (line 78)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 4), 'v', for_loop_var_542967)
    # SSA begins for a for statement (line 78)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'axis' (line 79)
    axis_542968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 17), 'axis')
    # Testing the type of a for loop iterable (line 79)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 79, 8), axis_542968)
    # Getting the type of the for loop variable (line 79)
    for_loop_var_542969 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 79, 8), axis_542968)
    # Assigning a type to the variable 'x' (line 79)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 79, 8), 'x', for_loop_var_542969)
    # SSA begins for a for statement (line 79)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'axis' (line 80)
    axis_542970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 21), 'axis')
    # Testing the type of a for loop iterable (line 80)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 80, 12), axis_542970)
    # Getting the type of the for loop variable (line 80)
    for_loop_var_542971 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 80, 12), axis_542970)
    # Assigning a type to the variable 'y' (line 80)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 12), 'y', for_loop_var_542971)
    # SSA begins for a for statement (line 80)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Name (line 81):
    
    # Assigning a BinOp to a Name (line 81):
    # Getting the type of 'x' (line 81)
    x_542972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 20), 'x')
    complex_542973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 24), 'complex')
    # Getting the type of 'y' (line 81)
    y_542974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 27), 'y')
    # Applying the binary operator '*' (line 81)
    result_mul_542975 = python_operator(stypy.reporting.localization.Localization(__file__, 81, 24), '*', complex_542973, y_542974)
    
    # Applying the binary operator '+' (line 81)
    result_add_542976 = python_operator(stypy.reporting.localization.Localization(__file__, 81, 20), '+', x_542972, result_mul_542975)
    
    # Assigning a type to the variable 'z' (line 81)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'z', result_add_542976)
    
    # Call to workdps(...): (line 85)
    # Processing the call arguments (line 85)
    int_542979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 36), 'int')
    # Processing the call keyword arguments (line 85)
    kwargs_542980 = {}
    # Getting the type of 'mpmath' (line 85)
    mpmath_542977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 21), 'mpmath', False)
    # Obtaining the member 'workdps' of a type (line 85)
    workdps_542978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 85, 21), mpmath_542977, 'workdps')
    # Calling workdps(args, kwargs) (line 85)
    workdps_call_result_542981 = invoke(stypy.reporting.localization.Localization(__file__, 85, 21), workdps_542978, *[int_542979], **kwargs_542980)
    
    with_542982 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 85, 21), workdps_call_result_542981, 'with parameter', '__enter__', '__exit__')

    if with_542982:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 85)
        enter___542983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 85, 21), workdps_call_result_542981, '__enter__')
        with_enter_542984 = invoke(stypy.reporting.localization.Localization(__file__, 85, 21), enter___542983)
        
        # Assigning a Call to a Name (line 86):
        
        # Assigning a Call to a Name (line 86):
        
        # Call to complex(...): (line 86)
        # Processing the call arguments (line 86)
        
        # Call to hyp0f1(...): (line 86)
        # Processing the call arguments (line 86)
        # Getting the type of 'v' (line 86)
        v_542988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 48), 'v', False)
        # Getting the type of 'z' (line 86)
        z_542989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 51), 'z', False)
        # Processing the call keyword arguments (line 86)
        kwargs_542990 = {}
        # Getting the type of 'mpmath' (line 86)
        mpmath_542986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 34), 'mpmath', False)
        # Obtaining the member 'hyp0f1' of a type (line 86)
        hyp0f1_542987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 34), mpmath_542986, 'hyp0f1')
        # Calling hyp0f1(args, kwargs) (line 86)
        hyp0f1_call_result_542991 = invoke(stypy.reporting.localization.Localization(__file__, 86, 34), hyp0f1_542987, *[v_542988, z_542989], **kwargs_542990)
        
        # Processing the call keyword arguments (line 86)
        kwargs_542992 = {}
        # Getting the type of 'complex' (line 86)
        complex_542985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 26), 'complex', False)
        # Calling complex(args, kwargs) (line 86)
        complex_call_result_542993 = invoke(stypy.reporting.localization.Localization(__file__, 86, 26), complex_542985, *[hyp0f1_call_result_542991], **kwargs_542992)
        
        # Assigning a type to the variable 'res' (line 86)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 20), 'res', complex_call_result_542993)
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 85)
        exit___542994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 85, 21), workdps_call_result_542981, '__exit__')
        with_exit_542995 = invoke(stypy.reporting.localization.Localization(__file__, 85, 21), exit___542994, None, None, None)

    
    # Call to append(...): (line 87)
    # Processing the call arguments (line 87)
    
    # Obtaining an instance of the builtin type 'tuple' (line 87)
    tuple_542998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 87, 32), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 87)
    # Adding element type (line 87)
    # Getting the type of 'v' (line 87)
    v_542999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 32), 'v', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 87, 32), tuple_542998, v_542999)
    # Adding element type (line 87)
    # Getting the type of 'z' (line 87)
    z_543000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 35), 'z', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 87, 32), tuple_542998, z_543000)
    # Adding element type (line 87)
    # Getting the type of 'res' (line 87)
    res_543001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 38), 'res', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 87, 32), tuple_542998, res_543001)
    
    # Processing the call keyword arguments (line 87)
    kwargs_543002 = {}
    # Getting the type of 'dataset' (line 87)
    dataset_542996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 16), 'dataset', False)
    # Obtaining the member 'append' of a type (line 87)
    append_542997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 87, 16), dataset_542996, 'append')
    # Calling append(args, kwargs) (line 87)
    append_call_result_543003 = invoke(stypy.reporting.localization.Localization(__file__, 87, 16), append_542997, *[tuple_542998], **kwargs_543002)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 88):
    
    # Assigning a Call to a Name (line 88):
    
    # Call to array(...): (line 88)
    # Processing the call arguments (line 88)
    # Getting the type of 'dataset' (line 88)
    dataset_543006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 23), 'dataset', False)
    # Processing the call keyword arguments (line 88)
    kwargs_543007 = {}
    # Getting the type of 'np' (line 88)
    np_543004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 88)
    array_543005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 88, 14), np_543004, 'array')
    # Calling array(args, kwargs) (line 88)
    array_call_result_543008 = invoke(stypy.reporting.localization.Localization(__file__, 88, 14), array_543005, *[dataset_543006], **kwargs_543007)
    
    # Assigning a type to the variable 'dataset' (line 88)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 4), 'dataset', array_call_result_543008)
    
    # Call to check(...): (line 90)
    # Processing the call keyword arguments (line 90)
    kwargs_543029 = {}
    
    # Call to FuncData(...): (line 90)
    # Processing the call arguments (line 90)

    @norecursion
    def _stypy_temp_lambda_334(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_334'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_334', 90, 13, True)
        # Passed parameters checking function
        _stypy_temp_lambda_334.stypy_localization = localization
        _stypy_temp_lambda_334.stypy_type_of_self = None
        _stypy_temp_lambda_334.stypy_type_store = module_type_store
        _stypy_temp_lambda_334.stypy_function_name = '_stypy_temp_lambda_334'
        _stypy_temp_lambda_334.stypy_param_names_list = ['v', 'z']
        _stypy_temp_lambda_334.stypy_varargs_param_name = None
        _stypy_temp_lambda_334.stypy_kwargs_param_name = None
        _stypy_temp_lambda_334.stypy_call_defaults = defaults
        _stypy_temp_lambda_334.stypy_call_varargs = varargs
        _stypy_temp_lambda_334.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_334', ['v', 'z'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_334', ['v', 'z'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to hyp0f1(...): (line 90)
        # Processing the call arguments (line 90)
        # Getting the type of 'v' (line 90)
        v_543012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 36), 'v', False)
        # Obtaining the member 'real' of a type (line 90)
        real_543013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 36), v_543012, 'real')
        # Getting the type of 'z' (line 90)
        z_543014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 44), 'z', False)
        # Processing the call keyword arguments (line 90)
        kwargs_543015 = {}
        # Getting the type of 'sc' (line 90)
        sc_543010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 26), 'sc', False)
        # Obtaining the member 'hyp0f1' of a type (line 90)
        hyp0f1_543011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 26), sc_543010, 'hyp0f1')
        # Calling hyp0f1(args, kwargs) (line 90)
        hyp0f1_call_result_543016 = invoke(stypy.reporting.localization.Localization(__file__, 90, 26), hyp0f1_543011, *[real_543013, z_543014], **kwargs_543015)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 90)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 13), 'stypy_return_type', hyp0f1_call_result_543016)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_334' in the type store
        # Getting the type of 'stypy_return_type' (line 90)
        stypy_return_type_543017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 13), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_543017)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_334'
        return stypy_return_type_543017

    # Assigning a type to the variable '_stypy_temp_lambda_334' (line 90)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 13), '_stypy_temp_lambda_334', _stypy_temp_lambda_334)
    # Getting the type of '_stypy_temp_lambda_334' (line 90)
    _stypy_temp_lambda_334_543018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 13), '_stypy_temp_lambda_334')
    # Getting the type of 'dataset' (line 90)
    dataset_543019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 48), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 90)
    tuple_543020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 58), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 90)
    # Adding element type (line 90)
    int_543021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 58), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 90, 58), tuple_543020, int_543021)
    # Adding element type (line 90)
    int_543022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 61), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 90, 58), tuple_543020, int_543022)
    
    int_543023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 65), 'int')
    # Processing the call keyword arguments (line 90)
    float_543024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, 18), 'float')
    keyword_543025 = float_543024
    kwargs_543026 = {'rtol': keyword_543025}
    # Getting the type of 'FuncData' (line 90)
    FuncData_543009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 90)
    FuncData_call_result_543027 = invoke(stypy.reporting.localization.Localization(__file__, 90, 4), FuncData_543009, *[_stypy_temp_lambda_334_543018, dataset_543019, tuple_543020, int_543023], **kwargs_543026)
    
    # Obtaining the member 'check' of a type (line 90)
    check_543028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 4), FuncData_call_result_543027, 'check')
    # Calling check(args, kwargs) (line 90)
    check_call_result_543030 = invoke(stypy.reporting.localization.Localization(__file__, 90, 4), check_543028, *[], **kwargs_543029)
    
    
    # ################# End of 'test_hyp0f1_gh5764(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_hyp0f1_gh5764' in the type store
    # Getting the type of 'stypy_return_type' (line 73)
    stypy_return_type_543031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_543031)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_hyp0f1_gh5764'
    return stypy_return_type_543031

# Assigning a type to the variable 'test_hyp0f1_gh5764' (line 73)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 73, 0), 'test_hyp0f1_gh5764', test_hyp0f1_gh5764)

@norecursion
def test_hyp0f1_gh_1609(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_hyp0f1_gh_1609'
    module_type_store = module_type_store.open_function_context('test_hyp0f1_gh_1609', 94, 0, False)
    
    # Passed parameters checking function
    test_hyp0f1_gh_1609.stypy_localization = localization
    test_hyp0f1_gh_1609.stypy_type_of_self = None
    test_hyp0f1_gh_1609.stypy_type_store = module_type_store
    test_hyp0f1_gh_1609.stypy_function_name = 'test_hyp0f1_gh_1609'
    test_hyp0f1_gh_1609.stypy_param_names_list = []
    test_hyp0f1_gh_1609.stypy_varargs_param_name = None
    test_hyp0f1_gh_1609.stypy_kwargs_param_name = None
    test_hyp0f1_gh_1609.stypy_call_defaults = defaults
    test_hyp0f1_gh_1609.stypy_call_varargs = varargs
    test_hyp0f1_gh_1609.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_hyp0f1_gh_1609', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_hyp0f1_gh_1609', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_hyp0f1_gh_1609(...)' code ##################

    
    # Assigning a Call to a Name (line 97):
    
    # Assigning a Call to a Name (line 97):
    
    # Call to linspace(...): (line 97)
    # Processing the call arguments (line 97)
    int_543034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 21), 'int')
    int_543035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 26), 'int')
    int_543036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 31), 'int')
    # Processing the call keyword arguments (line 97)
    kwargs_543037 = {}
    # Getting the type of 'np' (line 97)
    np_543032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 9), 'np', False)
    # Obtaining the member 'linspace' of a type (line 97)
    linspace_543033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 97, 9), np_543032, 'linspace')
    # Calling linspace(args, kwargs) (line 97)
    linspace_call_result_543038 = invoke(stypy.reporting.localization.Localization(__file__, 97, 9), linspace_543033, *[int_543034, int_543035, int_543036], **kwargs_543037)
    
    # Assigning a type to the variable 'vv' (line 97)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 4), 'vv', linspace_call_result_543038)
    
    # Assigning a Call to a Name (line 98):
    
    # Assigning a Call to a Name (line 98):
    
    # Call to hyp0f1(...): (line 98)
    # Processing the call arguments (line 98)
    # Getting the type of 'vv' (line 98)
    vv_543041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 19), 'vv', False)
    float_543042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 23), 'float')
    # Processing the call keyword arguments (line 98)
    kwargs_543043 = {}
    # Getting the type of 'sc' (line 98)
    sc_543039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 9), 'sc', False)
    # Obtaining the member 'hyp0f1' of a type (line 98)
    hyp0f1_543040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 98, 9), sc_543039, 'hyp0f1')
    # Calling hyp0f1(args, kwargs) (line 98)
    hyp0f1_call_result_543044 = invoke(stypy.reporting.localization.Localization(__file__, 98, 9), hyp0f1_543040, *[vv_543041, float_543042], **kwargs_543043)
    
    # Assigning a type to the variable 'af' (line 98)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 98, 4), 'af', hyp0f1_call_result_543044)
    
    # Assigning a Call to a Name (line 99):
    
    # Assigning a Call to a Name (line 99):
    
    # Call to array(...): (line 99)
    # Processing the call arguments (line 99)
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'vv' (line 99)
    vv_543053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 50), 'vv', False)
    comprehension_543054 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 99, 19), vv_543053)
    # Assigning a type to the variable 'v' (line 99)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 19), 'v', comprehension_543054)
    
    # Call to hyp0f1(...): (line 99)
    # Processing the call arguments (line 99)
    # Getting the type of 'v' (line 99)
    v_543049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 33), 'v', False)
    float_543050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 36), 'float')
    # Processing the call keyword arguments (line 99)
    kwargs_543051 = {}
    # Getting the type of 'mpmath' (line 99)
    mpmath_543047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 19), 'mpmath', False)
    # Obtaining the member 'hyp0f1' of a type (line 99)
    hyp0f1_543048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 99, 19), mpmath_543047, 'hyp0f1')
    # Calling hyp0f1(args, kwargs) (line 99)
    hyp0f1_call_result_543052 = invoke(stypy.reporting.localization.Localization(__file__, 99, 19), hyp0f1_543048, *[v_543049, float_543050], **kwargs_543051)
    
    list_543055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 19), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 99, 19), list_543055, hyp0f1_call_result_543052)
    # Processing the call keyword arguments (line 99)
    kwargs_543056 = {}
    # Getting the type of 'np' (line 99)
    np_543045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 9), 'np', False)
    # Obtaining the member 'array' of a type (line 99)
    array_543046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 99, 9), np_543045, 'array')
    # Calling array(args, kwargs) (line 99)
    array_call_result_543057 = invoke(stypy.reporting.localization.Localization(__file__, 99, 9), array_543046, *[list_543055], **kwargs_543056)
    
    # Assigning a type to the variable 'mf' (line 99)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 4), 'mf', array_call_result_543057)
    
    # Call to assert_allclose(...): (line 100)
    # Processing the call arguments (line 100)
    # Getting the type of 'af' (line 100)
    af_543059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 20), 'af', False)
    
    # Call to astype(...): (line 100)
    # Processing the call arguments (line 100)
    # Getting the type of 'float' (line 100)
    float_543062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 34), 'float', False)
    # Processing the call keyword arguments (line 100)
    kwargs_543063 = {}
    # Getting the type of 'mf' (line 100)
    mf_543060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 24), 'mf', False)
    # Obtaining the member 'astype' of a type (line 100)
    astype_543061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 100, 24), mf_543060, 'astype')
    # Calling astype(args, kwargs) (line 100)
    astype_call_result_543064 = invoke(stypy.reporting.localization.Localization(__file__, 100, 24), astype_543061, *[float_543062], **kwargs_543063)
    
    # Processing the call keyword arguments (line 100)
    float_543065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 100, 47), 'float')
    keyword_543066 = float_543065
    kwargs_543067 = {'rtol': keyword_543066}
    # Getting the type of 'assert_allclose' (line 100)
    assert_allclose_543058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 100)
    assert_allclose_call_result_543068 = invoke(stypy.reporting.localization.Localization(__file__, 100, 4), assert_allclose_543058, *[af_543059, astype_call_result_543064], **kwargs_543067)
    
    
    # ################# End of 'test_hyp0f1_gh_1609(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_hyp0f1_gh_1609' in the type store
    # Getting the type of 'stypy_return_type' (line 94)
    stypy_return_type_543069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_543069)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_hyp0f1_gh_1609'
    return stypy_return_type_543069

# Assigning a type to the variable 'test_hyp0f1_gh_1609' (line 94)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 94, 0), 'test_hyp0f1_gh_1609', test_hyp0f1_gh_1609)

@norecursion
def test_hyp2f1_strange_points(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_hyp2f1_strange_points'
    module_type_store = module_type_store.open_function_context('test_hyp2f1_strange_points', 107, 0, False)
    
    # Passed parameters checking function
    test_hyp2f1_strange_points.stypy_localization = localization
    test_hyp2f1_strange_points.stypy_type_of_self = None
    test_hyp2f1_strange_points.stypy_type_store = module_type_store
    test_hyp2f1_strange_points.stypy_function_name = 'test_hyp2f1_strange_points'
    test_hyp2f1_strange_points.stypy_param_names_list = []
    test_hyp2f1_strange_points.stypy_varargs_param_name = None
    test_hyp2f1_strange_points.stypy_kwargs_param_name = None
    test_hyp2f1_strange_points.stypy_call_defaults = defaults
    test_hyp2f1_strange_points.stypy_call_varargs = varargs
    test_hyp2f1_strange_points.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_hyp2f1_strange_points', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_hyp2f1_strange_points', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_hyp2f1_strange_points(...)' code ##################

    
    # Assigning a List to a Name (line 110):
    
    # Assigning a List to a Name (line 110):
    
    # Obtaining an instance of the builtin type 'list' (line 110)
    list_543070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 110)
    # Adding element type (line 110)
    
    # Obtaining an instance of the builtin type 'tuple' (line 111)
    tuple_543071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 111)
    # Adding element type (line 111)
    int_543072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 9), tuple_543071, int_543072)
    # Adding element type (line 111)
    int_543073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 9), tuple_543071, int_543073)
    # Adding element type (line 111)
    int_543074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 9), tuple_543071, int_543074)
    # Adding element type (line 111)
    float_543075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 20), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 9), tuple_543071, float_543075)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 10), list_543070, tuple_543071)
    # Adding element type (line 110)
    
    # Obtaining an instance of the builtin type 'tuple' (line 112)
    tuple_543076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 112)
    # Adding element type (line 112)
    int_543077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 112, 9), tuple_543076, int_543077)
    # Adding element type (line 112)
    int_543078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 112, 9), tuple_543076, int_543078)
    # Adding element type (line 112)
    int_543079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 112, 9), tuple_543076, int_543079)
    # Adding element type (line 112)
    float_543080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 20), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 112, 9), tuple_543076, float_543080)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 110, 10), list_543070, tuple_543076)
    
    # Assigning a type to the variable 'pts' (line 110)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 110, 4), 'pts', list_543070)
    
    # Assigning a Call to a Name (line 114):
    
    # Assigning a Call to a Name (line 114):
    
    # Call to dict(...): (line 114)
    # Processing the call keyword arguments (line 114)
    # Getting the type of 'True' (line 114)
    True_543082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 24), 'True', False)
    keyword_543083 = True_543082
    kwargs_543084 = {'eliminate': keyword_543083}
    # Getting the type of 'dict' (line 114)
    dict_543081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 9), 'dict', False)
    # Calling dict(args, kwargs) (line 114)
    dict_call_result_543085 = invoke(stypy.reporting.localization.Localization(__file__, 114, 9), dict_543081, *[], **kwargs_543084)
    
    # Assigning a type to the variable 'kw' (line 114)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 114, 4), 'kw', dict_call_result_543085)
    
    # Assigning a ListComp to a Name (line 115):
    
    # Assigning a ListComp to a Name (line 115):
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'pts' (line 115)
    pts_543098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 62), 'pts')
    comprehension_543099 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 115, 15), pts_543098)
    # Assigning a type to the variable 'p' (line 115)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 15), 'p', comprehension_543099)
    # Getting the type of 'p' (line 115)
    p_543086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 15), 'p')
    
    # Obtaining an instance of the builtin type 'tuple' (line 115)
    tuple_543087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 115)
    # Adding element type (line 115)
    
    # Call to float(...): (line 115)
    # Processing the call arguments (line 115)
    
    # Call to hyp2f1(...): (line 115)
    # Getting the type of 'p' (line 115)
    p_543091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 41), 'p', False)
    # Processing the call keyword arguments (line 115)
    # Getting the type of 'kw' (line 115)
    kw_543092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 46), 'kw', False)
    kwargs_543093 = {'kw_543092': kw_543092}
    # Getting the type of 'mpmath' (line 115)
    mpmath_543089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 26), 'mpmath', False)
    # Obtaining the member 'hyp2f1' of a type (line 115)
    hyp2f1_543090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 26), mpmath_543089, 'hyp2f1')
    # Calling hyp2f1(args, kwargs) (line 115)
    hyp2f1_call_result_543094 = invoke(stypy.reporting.localization.Localization(__file__, 115, 26), hyp2f1_543090, *[p_543091], **kwargs_543093)
    
    # Processing the call keyword arguments (line 115)
    kwargs_543095 = {}
    # Getting the type of 'float' (line 115)
    float_543088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 20), 'float', False)
    # Calling float(args, kwargs) (line 115)
    float_call_result_543096 = invoke(stypy.reporting.localization.Localization(__file__, 115, 20), float_543088, *[hyp2f1_call_result_543094], **kwargs_543095)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 115, 20), tuple_543087, float_call_result_543096)
    
    # Applying the binary operator '+' (line 115)
    result_add_543097 = python_operator(stypy.reporting.localization.Localization(__file__, 115, 15), '+', p_543086, tuple_543087)
    
    list_543100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 15), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 115, 15), list_543100, result_add_543097)
    # Assigning a type to the variable 'dataset' (line 115)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 4), 'dataset', list_543100)
    
    # Assigning a Call to a Name (line 116):
    
    # Assigning a Call to a Name (line 116):
    
    # Call to array(...): (line 116)
    # Processing the call arguments (line 116)
    # Getting the type of 'dataset' (line 116)
    dataset_543103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 23), 'dataset', False)
    # Processing the call keyword arguments (line 116)
    # Getting the type of 'np' (line 116)
    np_543104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 38), 'np', False)
    # Obtaining the member 'float_' of a type (line 116)
    float__543105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 116, 38), np_543104, 'float_')
    keyword_543106 = float__543105
    kwargs_543107 = {'dtype': keyword_543106}
    # Getting the type of 'np' (line 116)
    np_543101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 116)
    array_543102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 116, 14), np_543101, 'array')
    # Calling array(args, kwargs) (line 116)
    array_call_result_543108 = invoke(stypy.reporting.localization.Localization(__file__, 116, 14), array_543102, *[dataset_543103], **kwargs_543107)
    
    # Assigning a type to the variable 'dataset' (line 116)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 116, 4), 'dataset', array_call_result_543108)
    
    # Call to check(...): (line 118)
    # Processing the call keyword arguments (line 118)
    kwargs_543124 = {}
    
    # Call to FuncData(...): (line 118)
    # Processing the call arguments (line 118)
    # Getting the type of 'sc' (line 118)
    sc_543110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 13), 'sc', False)
    # Obtaining the member 'hyp2f1' of a type (line 118)
    hyp2f1_543111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 118, 13), sc_543110, 'hyp2f1')
    # Getting the type of 'dataset' (line 118)
    dataset_543112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 24), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 118)
    tuple_543113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 34), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 118)
    # Adding element type (line 118)
    int_543114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 34), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 118, 34), tuple_543113, int_543114)
    # Adding element type (line 118)
    int_543115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 36), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 118, 34), tuple_543113, int_543115)
    # Adding element type (line 118)
    int_543116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 38), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 118, 34), tuple_543113, int_543116)
    # Adding element type (line 118)
    int_543117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 40), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 118, 34), tuple_543113, int_543117)
    
    int_543118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 44), 'int')
    # Processing the call keyword arguments (line 118)
    float_543119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 52), 'float')
    keyword_543120 = float_543119
    kwargs_543121 = {'rtol': keyword_543120}
    # Getting the type of 'FuncData' (line 118)
    FuncData_543109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 118)
    FuncData_call_result_543122 = invoke(stypy.reporting.localization.Localization(__file__, 118, 4), FuncData_543109, *[hyp2f1_543111, dataset_543112, tuple_543113, int_543118], **kwargs_543121)
    
    # Obtaining the member 'check' of a type (line 118)
    check_543123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 118, 4), FuncData_call_result_543122, 'check')
    # Calling check(args, kwargs) (line 118)
    check_call_result_543125 = invoke(stypy.reporting.localization.Localization(__file__, 118, 4), check_543123, *[], **kwargs_543124)
    
    
    # ################# End of 'test_hyp2f1_strange_points(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_hyp2f1_strange_points' in the type store
    # Getting the type of 'stypy_return_type' (line 107)
    stypy_return_type_543126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_543126)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_hyp2f1_strange_points'
    return stypy_return_type_543126

# Assigning a type to the variable 'test_hyp2f1_strange_points' (line 107)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 0), 'test_hyp2f1_strange_points', test_hyp2f1_strange_points)

@norecursion
def test_hyp2f1_real_some_points(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_hyp2f1_real_some_points'
    module_type_store = module_type_store.open_function_context('test_hyp2f1_real_some_points', 121, 0, False)
    
    # Passed parameters checking function
    test_hyp2f1_real_some_points.stypy_localization = localization
    test_hyp2f1_real_some_points.stypy_type_of_self = None
    test_hyp2f1_real_some_points.stypy_type_store = module_type_store
    test_hyp2f1_real_some_points.stypy_function_name = 'test_hyp2f1_real_some_points'
    test_hyp2f1_real_some_points.stypy_param_names_list = []
    test_hyp2f1_real_some_points.stypy_varargs_param_name = None
    test_hyp2f1_real_some_points.stypy_kwargs_param_name = None
    test_hyp2f1_real_some_points.stypy_call_defaults = defaults
    test_hyp2f1_real_some_points.stypy_call_varargs = varargs
    test_hyp2f1_real_some_points.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_hyp2f1_real_some_points', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_hyp2f1_real_some_points', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_hyp2f1_real_some_points(...)' code ##################

    
    # Assigning a List to a Name (line 123):
    
    # Assigning a List to a Name (line 123):
    
    # Obtaining an instance of the builtin type 'list' (line 123)
    list_543127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 123)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 124)
    tuple_543128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 124)
    # Adding element type (line 124)
    int_543129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 124, 9), tuple_543128, int_543129)
    # Adding element type (line 124)
    int_543130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 124, 9), tuple_543128, int_543130)
    # Adding element type (line 124)
    int_543131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 15), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 124, 9), tuple_543128, int_543131)
    # Adding element type (line 124)
    int_543132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 18), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 124, 9), tuple_543128, int_543132)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543128)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 125)
    tuple_543133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 125)
    # Adding element type (line 125)
    float_543134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 9), 'float')
    int_543135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 12), 'int')
    # Applying the binary operator 'div' (line 125)
    result_div_543136 = python_operator(stypy.reporting.localization.Localization(__file__, 125, 9), 'div', float_543134, int_543135)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 9), tuple_543133, result_div_543136)
    # Adding element type (line 125)
    float_543137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 15), 'float')
    int_543138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 18), 'int')
    # Applying the binary operator 'div' (line 125)
    result_div_543139 = python_operator(stypy.reporting.localization.Localization(__file__, 125, 15), 'div', float_543137, int_543138)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 9), tuple_543133, result_div_543139)
    # Adding element type (line 125)
    float_543140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 21), 'float')
    int_543141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 24), 'int')
    # Applying the binary operator 'div' (line 125)
    result_div_543142 = python_operator(stypy.reporting.localization.Localization(__file__, 125, 21), 'div', float_543140, int_543141)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 9), tuple_543133, result_div_543142)
    # Adding element type (line 125)
    float_543143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 27), 'float')
    int_543144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 31), 'int')
    # Applying the binary operator 'div' (line 125)
    result_div_543145 = python_operator(stypy.reporting.localization.Localization(__file__, 125, 27), 'div', float_543143, int_543144)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 9), tuple_543133, result_div_543145)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543133)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 126)
    tuple_543146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 126)
    # Adding element type (line 126)
    float_543147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 9), 'float')
    int_543148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 12), 'int')
    # Applying the binary operator 'div' (line 126)
    result_div_543149 = python_operator(stypy.reporting.localization.Localization(__file__, 126, 9), 'div', float_543147, int_543148)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 126, 9), tuple_543146, result_div_543149)
    # Adding element type (line 126)
    float_543150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 15), 'float')
    int_543151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 18), 'int')
    # Applying the binary operator 'div' (line 126)
    result_div_543152 = python_operator(stypy.reporting.localization.Localization(__file__, 126, 15), 'div', float_543150, int_543151)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 126, 9), tuple_543146, result_div_543152)
    # Adding element type (line 126)
    float_543153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 21), 'float')
    int_543154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 24), 'int')
    # Applying the binary operator 'div' (line 126)
    result_div_543155 = python_operator(stypy.reporting.localization.Localization(__file__, 126, 21), 'div', float_543153, int_543154)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 126, 9), tuple_543146, result_div_543155)
    # Adding element type (line 126)
    float_543156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 27), 'float')
    int_543157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 126, 31), 'int')
    # Applying the binary operator 'div' (line 126)
    result_div_543158 = python_operator(stypy.reporting.localization.Localization(__file__, 126, 27), 'div', float_543156, int_543157)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 126, 9), tuple_543146, result_div_543158)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543146)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 127)
    tuple_543159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 127)
    # Adding element type (line 127)
    int_543160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 9), tuple_543159, int_543160)
    # Adding element type (line 127)
    int_543161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 11), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 9), tuple_543159, int_543161)
    # Adding element type (line 127)
    int_543162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 15), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 9), tuple_543159, int_543162)
    # Adding element type (line 127)
    int_543163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 9), tuple_543159, int_543163)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543159)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 128)
    tuple_543164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 128)
    # Adding element type (line 128)
    int_543165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 9), tuple_543164, int_543165)
    # Adding element type (line 128)
    int_543166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 9), tuple_543164, int_543166)
    # Adding element type (line 128)
    int_543167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 9), tuple_543164, int_543167)
    # Adding element type (line 128)
    int_543168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 9), tuple_543164, int_543168)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543164)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 129)
    tuple_543169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 129)
    # Adding element type (line 129)
    int_543170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 9), tuple_543169, int_543170)
    # Adding element type (line 129)
    float_543171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 12), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 9), tuple_543169, float_543171)
    # Adding element type (line 129)
    float_543172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 18), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 9), tuple_543169, float_543172)
    # Adding element type (line 129)
    int_543173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 24), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 9), tuple_543169, int_543173)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543169)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 130)
    tuple_543174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 130)
    # Adding element type (line 130)
    int_543175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 9), tuple_543174, int_543175)
    # Adding element type (line 130)
    int_543176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 9), tuple_543174, int_543176)
    # Adding element type (line 130)
    int_543177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 15), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 9), tuple_543174, int_543177)
    # Adding element type (line 130)
    int_543178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 18), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 9), tuple_543174, int_543178)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543174)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 131)
    tuple_543179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 131)
    # Adding element type (line 131)
    float_543180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 9), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 131, 9), tuple_543179, float_543180)
    # Adding element type (line 131)
    int_543181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 131, 9), tuple_543179, int_543181)
    # Adding element type (line 131)
    int_543182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 21), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 131, 9), tuple_543179, int_543182)
    # Adding element type (line 131)
    float_543183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 25), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 131, 9), tuple_543179, float_543183)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543179)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 132)
    tuple_543184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 132)
    # Adding element type (line 132)
    float_543185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 9), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 9), tuple_543184, float_543185)
    # Adding element type (line 132)
    float_543186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 15), 'float')
    int_543187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 18), 'int')
    # Applying the binary operator 'div' (line 132)
    result_div_543188 = python_operator(stypy.reporting.localization.Localization(__file__, 132, 15), 'div', float_543186, int_543187)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 9), tuple_543184, result_div_543188)
    # Adding element type (line 132)
    int_543189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 21), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 9), tuple_543184, int_543189)
    # Adding element type (line 132)
    float_543190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 24), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 9), tuple_543184, float_543190)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543184)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 133)
    tuple_543191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 133)
    # Adding element type (line 133)
    float_543192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 9), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 9), tuple_543191, float_543192)
    # Adding element type (line 133)
    float_543193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 15), 'float')
    int_543194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 18), 'int')
    # Applying the binary operator 'div' (line 133)
    result_div_543195 = python_operator(stypy.reporting.localization.Localization(__file__, 133, 15), 'div', float_543193, int_543194)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 9), tuple_543191, result_div_543195)
    # Adding element type (line 133)
    int_543196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 21), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 9), tuple_543191, int_543196)
    # Adding element type (line 133)
    int_543197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 24), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 9), tuple_543191, int_543197)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543191)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 134)
    tuple_543198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 134)
    # Adding element type (line 134)
    int_543199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 9), tuple_543198, int_543199)
    # Adding element type (line 134)
    int_543200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 9), tuple_543198, int_543200)
    # Adding element type (line 134)
    int_543201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 15), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 9), tuple_543198, int_543201)
    # Adding element type (line 134)
    float_543202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 18), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 9), tuple_543198, float_543202)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543198)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 135)
    tuple_543203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 135)
    # Adding element type (line 135)
    float_543204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 9), 'float')
    int_543205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 12), 'int')
    # Applying the binary operator 'div' (line 135)
    result_div_543206 = python_operator(stypy.reporting.localization.Localization(__file__, 135, 9), 'div', float_543204, int_543205)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 9), tuple_543203, result_div_543206)
    # Adding element type (line 135)
    float_543207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 15), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 9), tuple_543203, float_543207)
    # Adding element type (line 135)
    int_543208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 21), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 9), tuple_543203, int_543208)
    # Adding element type (line 135)
    float_543209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 24), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 9), tuple_543203, float_543209)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543203)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 136)
    tuple_543210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 136)
    # Adding element type (line 136)
    int_543211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 9), tuple_543210, int_543211)
    # Adding element type (line 136)
    float_543212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 12), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 9), tuple_543210, float_543212)
    # Adding element type (line 136)
    float_543213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 9), tuple_543210, float_543213)
    # Adding element type (line 136)
    float_543214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 24), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 9), tuple_543210, float_543214)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543210)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 137)
    tuple_543215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 137)
    # Adding element type (line 137)
    int_543216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 137, 9), tuple_543215, int_543216)
    # Adding element type (line 137)
    float_543217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 13), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 137, 9), tuple_543215, float_543217)
    # Adding element type (line 137)
    float_543218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 33), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 137, 9), tuple_543215, float_543218)
    # Adding element type (line 137)
    float_543219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 53), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 137, 9), tuple_543215, float_543219)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543215)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 138)
    tuple_543220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 138)
    # Adding element type (line 138)
    int_543221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 9), tuple_543220, int_543221)
    # Adding element type (line 138)
    int_543222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 14), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 9), tuple_543220, int_543222)
    # Adding element type (line 138)
    float_543223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 19), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 9), tuple_543220, float_543223)
    # Adding element type (line 138)
    float_543224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 26), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 9), tuple_543220, float_543224)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543220)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 139)
    tuple_543225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 139)
    # Adding element type (line 139)
    int_543226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 9), tuple_543225, int_543226)
    # Adding element type (line 139)
    int_543227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 14), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 9), tuple_543225, int_543227)
    # Adding element type (line 139)
    float_543228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 19), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 9), tuple_543225, float_543228)
    # Adding element type (line 139)
    float_543229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 25), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 9), tuple_543225, float_543229)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543225)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 140)
    tuple_543230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 140)
    # Adding element type (line 140)
    int_543231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 9), tuple_543230, int_543231)
    # Adding element type (line 140)
    int_543232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 9), tuple_543230, int_543232)
    # Adding element type (line 140)
    int_543233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 9), tuple_543230, int_543233)
    # Adding element type (line 140)
    float_543234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 19), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 9), tuple_543230, float_543234)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543230)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 141)
    tuple_543235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 141)
    # Adding element type (line 141)
    int_543236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 9), tuple_543235, int_543236)
    # Adding element type (line 141)
    int_543237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 9), tuple_543235, int_543237)
    # Adding element type (line 141)
    int_543238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 9), tuple_543235, int_543238)
    # Adding element type (line 141)
    float_543239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 19), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 9), tuple_543235, float_543239)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543235)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 142)
    tuple_543240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 142)
    # Adding element type (line 142)
    int_543241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 9), tuple_543240, int_543241)
    # Adding element type (line 142)
    int_543242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 9), tuple_543240, int_543242)
    # Adding element type (line 142)
    int_543243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 9), tuple_543240, int_543243)
    # Adding element type (line 142)
    float_543244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 20), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 9), tuple_543240, float_543244)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543240)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 143)
    tuple_543245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 143)
    # Adding element type (line 143)
    int_543246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 9), tuple_543245, int_543246)
    # Adding element type (line 143)
    int_543247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 9), tuple_543245, int_543247)
    # Adding element type (line 143)
    int_543248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 9), tuple_543245, int_543248)
    # Adding element type (line 143)
    float_543249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 20), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 9), tuple_543245, float_543249)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543245)
    # Adding element type (line 123)
    
    # Obtaining an instance of the builtin type 'tuple' (line 144)
    tuple_543250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 144)
    # Adding element type (line 144)
    float_543251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 9), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 9), tuple_543250, float_543251)
    # Adding element type (line 144)
    int_543252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 14), 'int')
    float_543253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 18), 'float')
    # Applying the binary operator '-' (line 144)
    result_sub_543254 = python_operator(stypy.reporting.localization.Localization(__file__, 144, 14), '-', int_543252, float_543253)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 9), tuple_543250, result_sub_543254)
    # Adding element type (line 144)
    float_543255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 25), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 9), tuple_543250, float_543255)
    # Adding element type (line 144)
    float_543256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 30), 'float')
    int_543257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 37), 'int')
    # Applying the binary operator '**' (line 144)
    result_pow_543258 = python_operator(stypy.reporting.localization.Localization(__file__, 144, 30), '**', float_543256, int_543257)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 9), tuple_543250, result_pow_543258)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 123, 10), list_543127, tuple_543250)
    
    # Assigning a type to the variable 'pts' (line 123)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 123, 4), 'pts', list_543127)
    
    # Assigning a ListComp to a Name (line 146):
    
    # Assigning a ListComp to a Name (line 146):
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'pts' (line 146)
    pts_543270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 56), 'pts')
    comprehension_543271 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 146, 15), pts_543270)
    # Assigning a type to the variable 'p' (line 146)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 15), 'p', comprehension_543271)
    # Getting the type of 'p' (line 146)
    p_543259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 15), 'p')
    
    # Obtaining an instance of the builtin type 'tuple' (line 146)
    tuple_543260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 146)
    # Adding element type (line 146)
    
    # Call to float(...): (line 146)
    # Processing the call arguments (line 146)
    
    # Call to hyp2f1(...): (line 146)
    # Getting the type of 'p' (line 146)
    p_543264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 41), 'p', False)
    # Processing the call keyword arguments (line 146)
    kwargs_543265 = {}
    # Getting the type of 'mpmath' (line 146)
    mpmath_543262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 26), 'mpmath', False)
    # Obtaining the member 'hyp2f1' of a type (line 146)
    hyp2f1_543263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 26), mpmath_543262, 'hyp2f1')
    # Calling hyp2f1(args, kwargs) (line 146)
    hyp2f1_call_result_543266 = invoke(stypy.reporting.localization.Localization(__file__, 146, 26), hyp2f1_543263, *[p_543264], **kwargs_543265)
    
    # Processing the call keyword arguments (line 146)
    kwargs_543267 = {}
    # Getting the type of 'float' (line 146)
    float_543261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 20), 'float', False)
    # Calling float(args, kwargs) (line 146)
    float_call_result_543268 = invoke(stypy.reporting.localization.Localization(__file__, 146, 20), float_543261, *[hyp2f1_call_result_543266], **kwargs_543267)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 146, 20), tuple_543260, float_call_result_543268)
    
    # Applying the binary operator '+' (line 146)
    result_add_543269 = python_operator(stypy.reporting.localization.Localization(__file__, 146, 15), '+', p_543259, tuple_543260)
    
    list_543272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 15), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 146, 15), list_543272, result_add_543269)
    # Assigning a type to the variable 'dataset' (line 146)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 4), 'dataset', list_543272)
    
    # Assigning a Call to a Name (line 147):
    
    # Assigning a Call to a Name (line 147):
    
    # Call to array(...): (line 147)
    # Processing the call arguments (line 147)
    # Getting the type of 'dataset' (line 147)
    dataset_543275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 23), 'dataset', False)
    # Processing the call keyword arguments (line 147)
    # Getting the type of 'np' (line 147)
    np_543276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 38), 'np', False)
    # Obtaining the member 'float_' of a type (line 147)
    float__543277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 38), np_543276, 'float_')
    keyword_543278 = float__543277
    kwargs_543279 = {'dtype': keyword_543278}
    # Getting the type of 'np' (line 147)
    np_543273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 147)
    array_543274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 14), np_543273, 'array')
    # Calling array(args, kwargs) (line 147)
    array_call_result_543280 = invoke(stypy.reporting.localization.Localization(__file__, 147, 14), array_543274, *[dataset_543275], **kwargs_543279)
    
    # Assigning a type to the variable 'dataset' (line 147)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 4), 'dataset', array_call_result_543280)
    
    # Assigning a Call to a Name (line 149):
    
    # Assigning a Call to a Name (line 149):
    
    # Call to seterr(...): (line 149)
    # Processing the call keyword arguments (line 149)
    str_543283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 31), 'str', 'ignore')
    keyword_543284 = str_543283
    kwargs_543285 = {'invalid': keyword_543284}
    # Getting the type of 'np' (line 149)
    np_543281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 13), 'np', False)
    # Obtaining the member 'seterr' of a type (line 149)
    seterr_543282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 149, 13), np_543281, 'seterr')
    # Calling seterr(args, kwargs) (line 149)
    seterr_call_result_543286 = invoke(stypy.reporting.localization.Localization(__file__, 149, 13), seterr_543282, *[], **kwargs_543285)
    
    # Assigning a type to the variable 'olderr' (line 149)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 149, 4), 'olderr', seterr_call_result_543286)
    
    # Try-finally block (line 150)
    
    # Call to check(...): (line 151)
    # Processing the call keyword arguments (line 151)
    kwargs_543302 = {}
    
    # Call to FuncData(...): (line 151)
    # Processing the call arguments (line 151)
    # Getting the type of 'sc' (line 151)
    sc_543288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 17), 'sc', False)
    # Obtaining the member 'hyp2f1' of a type (line 151)
    hyp2f1_543289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 17), sc_543288, 'hyp2f1')
    # Getting the type of 'dataset' (line 151)
    dataset_543290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 28), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 151)
    tuple_543291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 38), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 151)
    # Adding element type (line 151)
    int_543292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 38), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 38), tuple_543291, int_543292)
    # Adding element type (line 151)
    int_543293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 40), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 38), tuple_543291, int_543293)
    # Adding element type (line 151)
    int_543294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 42), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 38), tuple_543291, int_543294)
    # Adding element type (line 151)
    int_543295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 44), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 38), tuple_543291, int_543295)
    
    int_543296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 48), 'int')
    # Processing the call keyword arguments (line 151)
    float_543297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 56), 'float')
    keyword_543298 = float_543297
    kwargs_543299 = {'rtol': keyword_543298}
    # Getting the type of 'FuncData' (line 151)
    FuncData_543287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 8), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 151)
    FuncData_call_result_543300 = invoke(stypy.reporting.localization.Localization(__file__, 151, 8), FuncData_543287, *[hyp2f1_543289, dataset_543290, tuple_543291, int_543296], **kwargs_543299)
    
    # Obtaining the member 'check' of a type (line 151)
    check_543301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 8), FuncData_call_result_543300, 'check')
    # Calling check(args, kwargs) (line 151)
    check_call_result_543303 = invoke(stypy.reporting.localization.Localization(__file__, 151, 8), check_543301, *[], **kwargs_543302)
    
    
    # finally branch of the try-finally block (line 150)
    
    # Call to seterr(...): (line 153)
    # Processing the call keyword arguments (line 153)
    # Getting the type of 'olderr' (line 153)
    olderr_543306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 20), 'olderr', False)
    kwargs_543307 = {'olderr_543306': olderr_543306}
    # Getting the type of 'np' (line 153)
    np_543304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'np', False)
    # Obtaining the member 'seterr' of a type (line 153)
    seterr_543305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 8), np_543304, 'seterr')
    # Calling seterr(args, kwargs) (line 153)
    seterr_call_result_543308 = invoke(stypy.reporting.localization.Localization(__file__, 153, 8), seterr_543305, *[], **kwargs_543307)
    
    
    
    # ################# End of 'test_hyp2f1_real_some_points(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_hyp2f1_real_some_points' in the type store
    # Getting the type of 'stypy_return_type' (line 121)
    stypy_return_type_543309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_543309)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_hyp2f1_real_some_points'
    return stypy_return_type_543309

# Assigning a type to the variable 'test_hyp2f1_real_some_points' (line 121)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 0), 'test_hyp2f1_real_some_points', test_hyp2f1_real_some_points)

@norecursion
def test_hyp2f1_some_points_2(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_hyp2f1_some_points_2'
    module_type_store = module_type_store.open_function_context('test_hyp2f1_some_points_2', 156, 0, False)
    
    # Passed parameters checking function
    test_hyp2f1_some_points_2.stypy_localization = localization
    test_hyp2f1_some_points_2.stypy_type_of_self = None
    test_hyp2f1_some_points_2.stypy_type_store = module_type_store
    test_hyp2f1_some_points_2.stypy_function_name = 'test_hyp2f1_some_points_2'
    test_hyp2f1_some_points_2.stypy_param_names_list = []
    test_hyp2f1_some_points_2.stypy_varargs_param_name = None
    test_hyp2f1_some_points_2.stypy_kwargs_param_name = None
    test_hyp2f1_some_points_2.stypy_call_defaults = defaults
    test_hyp2f1_some_points_2.stypy_call_varargs = varargs
    test_hyp2f1_some_points_2.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_hyp2f1_some_points_2', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_hyp2f1_some_points_2', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_hyp2f1_some_points_2(...)' code ##################

    
    # Assigning a List to a Name (line 160):
    
    # Assigning a List to a Name (line 160):
    
    # Obtaining an instance of the builtin type 'list' (line 160)
    list_543310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 160)
    # Adding element type (line 160)
    
    # Obtaining an instance of the builtin type 'tuple' (line 161)
    tuple_543311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 161)
    # Adding element type (line 161)
    int_543312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 9), tuple_543311, int_543312)
    # Adding element type (line 161)
    
    # Obtaining an instance of the builtin type 'tuple' (line 161)
    tuple_543313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 161)
    # Adding element type (line 161)
    int_543314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 15), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 15), tuple_543313, int_543314)
    # Adding element type (line 161)
    int_543315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 18), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 15), tuple_543313, int_543315)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 9), tuple_543311, tuple_543313)
    # Adding element type (line 161)
    
    # Obtaining an instance of the builtin type 'tuple' (line 161)
    tuple_543316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 161)
    # Adding element type (line 161)
    int_543317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 24), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 24), tuple_543316, int_543317)
    # Adding element type (line 161)
    int_543318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 27), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 24), tuple_543316, int_543318)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 9), tuple_543311, tuple_543316)
    # Adding element type (line 161)
    float_543319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 32), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 161, 9), tuple_543311, float_543319)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 10), list_543310, tuple_543311)
    # Adding element type (line 160)
    
    # Obtaining an instance of the builtin type 'tuple' (line 162)
    tuple_543320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 162)
    # Adding element type (line 162)
    int_543321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 9), tuple_543320, int_543321)
    # Adding element type (line 162)
    int_543322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 9), tuple_543320, int_543322)
    # Adding element type (line 162)
    float_543323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 9), tuple_543320, float_543323)
    # Adding element type (line 162)
    float_543324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 22), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 9), tuple_543320, float_543324)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 10), list_543310, tuple_543320)
    # Adding element type (line 160)
    
    # Obtaining an instance of the builtin type 'tuple' (line 163)
    tuple_543325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 163)
    # Adding element type (line 163)
    int_543326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 163, 9), tuple_543325, int_543326)
    # Adding element type (line 163)
    int_543327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 163, 9), tuple_543325, int_543327)
    # Adding element type (line 163)
    float_543328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 163, 9), tuple_543325, float_543328)
    # Adding element type (line 163)
    float_543329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 23), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 163, 9), tuple_543325, float_543329)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 10), list_543310, tuple_543325)
    
    # Assigning a type to the variable 'pts' (line 160)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 160, 4), 'pts', list_543310)

    @norecursion
    def fev(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'fev'
        module_type_store = module_type_store.open_function_context('fev', 166, 4, False)
        
        # Passed parameters checking function
        fev.stypy_localization = localization
        fev.stypy_type_of_self = None
        fev.stypy_type_store = module_type_store
        fev.stypy_function_name = 'fev'
        fev.stypy_param_names_list = ['x']
        fev.stypy_varargs_param_name = None
        fev.stypy_kwargs_param_name = None
        fev.stypy_call_defaults = defaults
        fev.stypy_call_varargs = varargs
        fev.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'fev', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'fev', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'fev(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 167)
        # Getting the type of 'tuple' (line 167)
        tuple_543330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 25), 'tuple')
        # Getting the type of 'x' (line 167)
        x_543331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 22), 'x')
        
        (may_be_543332, more_types_in_union_543333) = may_be_subtype(tuple_543330, x_543331)

        if may_be_543332:

            if more_types_in_union_543333:
                # Runtime conditional SSA (line 167)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'x' (line 167)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 167, 8), 'x', remove_not_subtype_from_union(x_543331, tuple))
            
            # Call to float(...): (line 168)
            # Processing the call arguments (line 168)
            
            # Obtaining the type of the subscript
            int_543335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, 27), 'int')
            # Getting the type of 'x' (line 168)
            x_543336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 25), 'x', False)
            # Obtaining the member '__getitem__' of a type (line 168)
            getitem___543337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 168, 25), x_543336, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 168)
            subscript_call_result_543338 = invoke(stypy.reporting.localization.Localization(__file__, 168, 25), getitem___543337, int_543335)
            
            # Processing the call keyword arguments (line 168)
            kwargs_543339 = {}
            # Getting the type of 'float' (line 168)
            float_543334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 19), 'float', False)
            # Calling float(args, kwargs) (line 168)
            float_call_result_543340 = invoke(stypy.reporting.localization.Localization(__file__, 168, 19), float_543334, *[subscript_call_result_543338], **kwargs_543339)
            
            
            # Obtaining the type of the subscript
            int_543341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, 35), 'int')
            # Getting the type of 'x' (line 168)
            x_543342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 33), 'x')
            # Obtaining the member '__getitem__' of a type (line 168)
            getitem___543343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 168, 33), x_543342, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 168)
            subscript_call_result_543344 = invoke(stypy.reporting.localization.Localization(__file__, 168, 33), getitem___543343, int_543341)
            
            # Applying the binary operator 'div' (line 168)
            result_div_543345 = python_operator(stypy.reporting.localization.Localization(__file__, 168, 19), 'div', float_call_result_543340, subscript_call_result_543344)
            
            # Assigning a type to the variable 'stypy_return_type' (line 168)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 12), 'stypy_return_type', result_div_543345)

            if more_types_in_union_543333:
                # Runtime conditional SSA for else branch (line 167)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_543332) or more_types_in_union_543333):
            # Assigning a type to the variable 'x' (line 167)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 167, 8), 'x', remove_subtype_from_union(x_543331, tuple))
            # Getting the type of 'x' (line 170)
            x_543346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 19), 'x')
            # Assigning a type to the variable 'stypy_return_type' (line 170)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 12), 'stypy_return_type', x_543346)

            if (may_be_543332 and more_types_in_union_543333):
                # SSA join for if statement (line 167)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'fev(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'fev' in the type store
        # Getting the type of 'stypy_return_type' (line 166)
        stypy_return_type_543347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_543347)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'fev'
        return stypy_return_type_543347

    # Assigning a type to the variable 'fev' (line 166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 166, 4), 'fev', fev)
    
    # Assigning a ListComp to a Name (line 172):
    
    # Assigning a ListComp to a Name (line 172):
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'pts' (line 172)
    pts_543366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 73), 'pts')
    comprehension_543367 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 172, 15), pts_543366)
    # Assigning a type to the variable 'p' (line 172)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 15), 'p', comprehension_543367)
    
    # Call to tuple(...): (line 172)
    # Processing the call arguments (line 172)
    
    # Call to map(...): (line 172)
    # Processing the call arguments (line 172)
    # Getting the type of 'fev' (line 172)
    fev_543350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 25), 'fev', False)
    # Getting the type of 'p' (line 172)
    p_543351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 30), 'p', False)
    # Processing the call keyword arguments (line 172)
    kwargs_543352 = {}
    # Getting the type of 'map' (line 172)
    map_543349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 21), 'map', False)
    # Calling map(args, kwargs) (line 172)
    map_call_result_543353 = invoke(stypy.reporting.localization.Localization(__file__, 172, 21), map_543349, *[fev_543350, p_543351], **kwargs_543352)
    
    # Processing the call keyword arguments (line 172)
    kwargs_543354 = {}
    # Getting the type of 'tuple' (line 172)
    tuple_543348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 15), 'tuple', False)
    # Calling tuple(args, kwargs) (line 172)
    tuple_call_result_543355 = invoke(stypy.reporting.localization.Localization(__file__, 172, 15), tuple_543348, *[map_call_result_543353], **kwargs_543354)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 172)
    tuple_543356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 37), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 172)
    # Adding element type (line 172)
    
    # Call to float(...): (line 172)
    # Processing the call arguments (line 172)
    
    # Call to hyp2f1(...): (line 172)
    # Getting the type of 'p' (line 172)
    p_543360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 58), 'p', False)
    # Processing the call keyword arguments (line 172)
    kwargs_543361 = {}
    # Getting the type of 'mpmath' (line 172)
    mpmath_543358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 43), 'mpmath', False)
    # Obtaining the member 'hyp2f1' of a type (line 172)
    hyp2f1_543359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 43), mpmath_543358, 'hyp2f1')
    # Calling hyp2f1(args, kwargs) (line 172)
    hyp2f1_call_result_543362 = invoke(stypy.reporting.localization.Localization(__file__, 172, 43), hyp2f1_543359, *[p_543360], **kwargs_543361)
    
    # Processing the call keyword arguments (line 172)
    kwargs_543363 = {}
    # Getting the type of 'float' (line 172)
    float_543357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 37), 'float', False)
    # Calling float(args, kwargs) (line 172)
    float_call_result_543364 = invoke(stypy.reporting.localization.Localization(__file__, 172, 37), float_543357, *[hyp2f1_call_result_543362], **kwargs_543363)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 172, 37), tuple_543356, float_call_result_543364)
    
    # Applying the binary operator '+' (line 172)
    result_add_543365 = python_operator(stypy.reporting.localization.Localization(__file__, 172, 15), '+', tuple_call_result_543355, tuple_543356)
    
    list_543368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 15), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 172, 15), list_543368, result_add_543365)
    # Assigning a type to the variable 'dataset' (line 172)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 4), 'dataset', list_543368)
    
    # Assigning a Call to a Name (line 173):
    
    # Assigning a Call to a Name (line 173):
    
    # Call to array(...): (line 173)
    # Processing the call arguments (line 173)
    # Getting the type of 'dataset' (line 173)
    dataset_543371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 23), 'dataset', False)
    # Processing the call keyword arguments (line 173)
    # Getting the type of 'np' (line 173)
    np_543372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 38), 'np', False)
    # Obtaining the member 'float_' of a type (line 173)
    float__543373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 38), np_543372, 'float_')
    keyword_543374 = float__543373
    kwargs_543375 = {'dtype': keyword_543374}
    # Getting the type of 'np' (line 173)
    np_543369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 173)
    array_543370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 14), np_543369, 'array')
    # Calling array(args, kwargs) (line 173)
    array_call_result_543376 = invoke(stypy.reporting.localization.Localization(__file__, 173, 14), array_543370, *[dataset_543371], **kwargs_543375)
    
    # Assigning a type to the variable 'dataset' (line 173)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 173, 4), 'dataset', array_call_result_543376)
    
    # Call to check(...): (line 175)
    # Processing the call keyword arguments (line 175)
    kwargs_543392 = {}
    
    # Call to FuncData(...): (line 175)
    # Processing the call arguments (line 175)
    # Getting the type of 'sc' (line 175)
    sc_543378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 13), 'sc', False)
    # Obtaining the member 'hyp2f1' of a type (line 175)
    hyp2f1_543379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 175, 13), sc_543378, 'hyp2f1')
    # Getting the type of 'dataset' (line 175)
    dataset_543380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 24), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 175)
    tuple_543381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 34), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 175)
    # Adding element type (line 175)
    int_543382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 34), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 175, 34), tuple_543381, int_543382)
    # Adding element type (line 175)
    int_543383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 36), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 175, 34), tuple_543381, int_543383)
    # Adding element type (line 175)
    int_543384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 38), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 175, 34), tuple_543381, int_543384)
    # Adding element type (line 175)
    int_543385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 40), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 175, 34), tuple_543381, int_543385)
    
    int_543386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 44), 'int')
    # Processing the call keyword arguments (line 175)
    float_543387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 52), 'float')
    keyword_543388 = float_543387
    kwargs_543389 = {'rtol': keyword_543388}
    # Getting the type of 'FuncData' (line 175)
    FuncData_543377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 175)
    FuncData_call_result_543390 = invoke(stypy.reporting.localization.Localization(__file__, 175, 4), FuncData_543377, *[hyp2f1_543379, dataset_543380, tuple_543381, int_543386], **kwargs_543389)
    
    # Obtaining the member 'check' of a type (line 175)
    check_543391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 175, 4), FuncData_call_result_543390, 'check')
    # Calling check(args, kwargs) (line 175)
    check_call_result_543393 = invoke(stypy.reporting.localization.Localization(__file__, 175, 4), check_543391, *[], **kwargs_543392)
    
    
    # ################# End of 'test_hyp2f1_some_points_2(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_hyp2f1_some_points_2' in the type store
    # Getting the type of 'stypy_return_type' (line 156)
    stypy_return_type_543394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_543394)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_hyp2f1_some_points_2'
    return stypy_return_type_543394

# Assigning a type to the variable 'test_hyp2f1_some_points_2' (line 156)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 0), 'test_hyp2f1_some_points_2', test_hyp2f1_some_points_2)

@norecursion
def test_hyp2f1_real_some(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_hyp2f1_real_some'
    module_type_store = module_type_store.open_function_context('test_hyp2f1_real_some', 178, 0, False)
    
    # Passed parameters checking function
    test_hyp2f1_real_some.stypy_localization = localization
    test_hyp2f1_real_some.stypy_type_of_self = None
    test_hyp2f1_real_some.stypy_type_store = module_type_store
    test_hyp2f1_real_some.stypy_function_name = 'test_hyp2f1_real_some'
    test_hyp2f1_real_some.stypy_param_names_list = []
    test_hyp2f1_real_some.stypy_varargs_param_name = None
    test_hyp2f1_real_some.stypy_kwargs_param_name = None
    test_hyp2f1_real_some.stypy_call_defaults = defaults
    test_hyp2f1_real_some.stypy_call_varargs = varargs
    test_hyp2f1_real_some.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_hyp2f1_real_some', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_hyp2f1_real_some', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_hyp2f1_real_some(...)' code ##################

    
    # Assigning a List to a Name (line 180):
    
    # Assigning a List to a Name (line 180):
    
    # Obtaining an instance of the builtin type 'list' (line 180)
    list_543395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 180)
    
    # Assigning a type to the variable 'dataset' (line 180)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 4), 'dataset', list_543395)
    
    
    # Obtaining an instance of the builtin type 'list' (line 181)
    list_543396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 181)
    # Adding element type (line 181)
    int_543397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 14), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 13), list_543396, int_543397)
    # Adding element type (line 181)
    int_543398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 13), list_543396, int_543398)
    # Adding element type (line 181)
    float_543399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 23), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 13), list_543396, float_543399)
    # Adding element type (line 181)
    float_543400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 29), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 13), list_543396, float_543400)
    # Adding element type (line 181)
    int_543401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 34), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 13), list_543396, int_543401)
    # Adding element type (line 181)
    int_543402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 37), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 181, 13), list_543396, int_543402)
    
    # Testing the type of a for loop iterable (line 181)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 181, 4), list_543396)
    # Getting the type of the for loop variable (line 181)
    for_loop_var_543403 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 181, 4), list_543396)
    # Assigning a type to the variable 'a' (line 181)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 181, 4), 'a', for_loop_var_543403)
    # SSA begins for a for statement (line 181)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Obtaining an instance of the builtin type 'list' (line 182)
    list_543404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 182)
    # Adding element type (line 182)
    float_543405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 18), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 182, 17), list_543404, float_543405)
    # Adding element type (line 182)
    int_543406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 24), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 182, 17), list_543404, int_543406)
    # Adding element type (line 182)
    int_543407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 182, 17), list_543404, int_543407)
    # Adding element type (line 182)
    float_543408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 31), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 182, 17), list_543404, float_543408)
    
    # Testing the type of a for loop iterable (line 182)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 182, 8), list_543404)
    # Getting the type of the for loop variable (line 182)
    for_loop_var_543409 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 182, 8), list_543404)
    # Assigning a type to the variable 'b' (line 182)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 182, 8), 'b', for_loop_var_543409)
    # SSA begins for a for statement (line 182)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Obtaining an instance of the builtin type 'list' (line 183)
    list_543410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 183, 21), 'list')
    # Adding type elements to the builtin type 'list' instance (line 183)
    # Adding element type (line 183)
    int_543411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 183, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 183, 21), list_543410, int_543411)
    # Adding element type (line 183)
    float_543412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 183, 26), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 183, 21), list_543410, float_543412)
    # Adding element type (line 183)
    int_543413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 183, 32), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 183, 21), list_543410, int_543413)
    # Adding element type (line 183)
    float_543414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 183, 35), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 183, 21), list_543410, float_543414)
    
    # Testing the type of a for loop iterable (line 183)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 183, 12), list_543410)
    # Getting the type of the for loop variable (line 183)
    for_loop_var_543415 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 183, 12), list_543410)
    # Assigning a type to the variable 'c' (line 183)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 183, 12), 'c', for_loop_var_543415)
    # SSA begins for a for statement (line 183)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Obtaining an instance of the builtin type 'list' (line 184)
    list_543416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 25), 'list')
    # Adding type elements to the builtin type 'list' instance (line 184)
    # Adding element type (line 184)
    int_543417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 26), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 25), list_543416, int_543417)
    # Adding element type (line 184)
    float_543418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 31), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 25), list_543416, float_543418)
    # Adding element type (line 184)
    float_543419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 38), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 25), list_543416, float_543419)
    # Adding element type (line 184)
    int_543420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 45), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 25), list_543416, int_543420)
    # Adding element type (line 184)
    float_543421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 48), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 25), list_543416, float_543421)
    # Adding element type (line 184)
    float_543422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 53), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 25), list_543416, float_543422)
    # Adding element type (line 184)
    float_543423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 59), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 25), list_543416, float_543423)
    # Adding element type (line 184)
    int_543424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 64), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 25), list_543416, int_543424)
    
    # Testing the type of a for loop iterable (line 184)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 184, 16), list_543416)
    # Getting the type of the for loop variable (line 184)
    for_loop_var_543425 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 184, 16), list_543416)
    # Assigning a type to the variable 'z' (line 184)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 16), 'z', for_loop_var_543425)
    # SSA begins for a for statement (line 184)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # SSA begins for try-except statement (line 185)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 186):
    
    # Assigning a Call to a Name (line 186):
    
    # Call to float(...): (line 186)
    # Processing the call arguments (line 186)
    
    # Call to hyp2f1(...): (line 186)
    # Processing the call arguments (line 186)
    # Getting the type of 'a' (line 186)
    a_543429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 48), 'a', False)
    # Getting the type of 'b' (line 186)
    b_543430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 51), 'b', False)
    # Getting the type of 'c' (line 186)
    c_543431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 54), 'c', False)
    # Getting the type of 'z' (line 186)
    z_543432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 57), 'z', False)
    # Processing the call keyword arguments (line 186)
    kwargs_543433 = {}
    # Getting the type of 'mpmath' (line 186)
    mpmath_543427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 34), 'mpmath', False)
    # Obtaining the member 'hyp2f1' of a type (line 186)
    hyp2f1_543428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 34), mpmath_543427, 'hyp2f1')
    # Calling hyp2f1(args, kwargs) (line 186)
    hyp2f1_call_result_543434 = invoke(stypy.reporting.localization.Localization(__file__, 186, 34), hyp2f1_543428, *[a_543429, b_543430, c_543431, z_543432], **kwargs_543433)
    
    # Processing the call keyword arguments (line 186)
    kwargs_543435 = {}
    # Getting the type of 'float' (line 186)
    float_543426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 28), 'float', False)
    # Calling float(args, kwargs) (line 186)
    float_call_result_543436 = invoke(stypy.reporting.localization.Localization(__file__, 186, 28), float_543426, *[hyp2f1_call_result_543434], **kwargs_543435)
    
    # Assigning a type to the variable 'v' (line 186)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 24), 'v', float_call_result_543436)
    # SSA branch for the except part of a try statement (line 185)
    # SSA branch for the except '<any exception>' branch of a try statement (line 185)
    module_type_store.open_ssa_branch('except')
    # SSA join for try-except statement (line 185)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to append(...): (line 189)
    # Processing the call arguments (line 189)
    
    # Obtaining an instance of the builtin type 'tuple' (line 189)
    tuple_543439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 189)
    # Adding element type (line 189)
    # Getting the type of 'a' (line 189)
    a_543440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 36), 'a', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 36), tuple_543439, a_543440)
    # Adding element type (line 189)
    # Getting the type of 'b' (line 189)
    b_543441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 39), 'b', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 36), tuple_543439, b_543441)
    # Adding element type (line 189)
    # Getting the type of 'c' (line 189)
    c_543442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 42), 'c', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 36), tuple_543439, c_543442)
    # Adding element type (line 189)
    # Getting the type of 'z' (line 189)
    z_543443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 45), 'z', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 36), tuple_543439, z_543443)
    # Adding element type (line 189)
    # Getting the type of 'v' (line 189)
    v_543444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 48), 'v', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 36), tuple_543439, v_543444)
    
    # Processing the call keyword arguments (line 189)
    kwargs_543445 = {}
    # Getting the type of 'dataset' (line 189)
    dataset_543437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 20), 'dataset', False)
    # Obtaining the member 'append' of a type (line 189)
    append_543438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 20), dataset_543437, 'append')
    # Calling append(args, kwargs) (line 189)
    append_call_result_543446 = invoke(stypy.reporting.localization.Localization(__file__, 189, 20), append_543438, *[tuple_543439], **kwargs_543445)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 190):
    
    # Assigning a Call to a Name (line 190):
    
    # Call to array(...): (line 190)
    # Processing the call arguments (line 190)
    # Getting the type of 'dataset' (line 190)
    dataset_543449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 23), 'dataset', False)
    # Processing the call keyword arguments (line 190)
    # Getting the type of 'np' (line 190)
    np_543450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 38), 'np', False)
    # Obtaining the member 'float_' of a type (line 190)
    float__543451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 38), np_543450, 'float_')
    keyword_543452 = float__543451
    kwargs_543453 = {'dtype': keyword_543452}
    # Getting the type of 'np' (line 190)
    np_543447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 190)
    array_543448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 14), np_543447, 'array')
    # Calling array(args, kwargs) (line 190)
    array_call_result_543454 = invoke(stypy.reporting.localization.Localization(__file__, 190, 14), array_543448, *[dataset_543449], **kwargs_543453)
    
    # Assigning a type to the variable 'dataset' (line 190)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 4), 'dataset', array_call_result_543454)
    
    # Assigning a Call to a Name (line 192):
    
    # Assigning a Call to a Name (line 192):
    
    # Call to seterr(...): (line 192)
    # Processing the call keyword arguments (line 192)
    str_543457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 31), 'str', 'ignore')
    keyword_543458 = str_543457
    kwargs_543459 = {'invalid': keyword_543458}
    # Getting the type of 'np' (line 192)
    np_543455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 13), 'np', False)
    # Obtaining the member 'seterr' of a type (line 192)
    seterr_543456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 13), np_543455, 'seterr')
    # Calling seterr(args, kwargs) (line 192)
    seterr_call_result_543460 = invoke(stypy.reporting.localization.Localization(__file__, 192, 13), seterr_543456, *[], **kwargs_543459)
    
    # Assigning a type to the variable 'olderr' (line 192)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 192, 4), 'olderr', seterr_call_result_543460)
    
    # Try-finally block (line 193)
    
    # Call to check(...): (line 194)
    # Processing the call keyword arguments (line 194)
    kwargs_543478 = {}
    
    # Call to FuncData(...): (line 194)
    # Processing the call arguments (line 194)
    # Getting the type of 'sc' (line 194)
    sc_543462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 17), 'sc', False)
    # Obtaining the member 'hyp2f1' of a type (line 194)
    hyp2f1_543463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 17), sc_543462, 'hyp2f1')
    # Getting the type of 'dataset' (line 194)
    dataset_543464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 28), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 194)
    tuple_543465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 38), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 194)
    # Adding element type (line 194)
    int_543466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 38), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 38), tuple_543465, int_543466)
    # Adding element type (line 194)
    int_543467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 40), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 38), tuple_543465, int_543467)
    # Adding element type (line 194)
    int_543468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 42), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 38), tuple_543465, int_543468)
    # Adding element type (line 194)
    int_543469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 44), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 38), tuple_543465, int_543469)
    
    int_543470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 48), 'int')
    # Processing the call keyword arguments (line 194)
    float_543471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 56), 'float')
    keyword_543472 = float_543471
    # Getting the type of 'True' (line 195)
    True_543473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 33), 'True', False)
    keyword_543474 = True_543473
    kwargs_543475 = {'rtol': keyword_543472, 'ignore_inf_sign': keyword_543474}
    # Getting the type of 'FuncData' (line 194)
    FuncData_543461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 8), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 194)
    FuncData_call_result_543476 = invoke(stypy.reporting.localization.Localization(__file__, 194, 8), FuncData_543461, *[hyp2f1_543463, dataset_543464, tuple_543465, int_543470], **kwargs_543475)
    
    # Obtaining the member 'check' of a type (line 194)
    check_543477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 8), FuncData_call_result_543476, 'check')
    # Calling check(args, kwargs) (line 194)
    check_call_result_543479 = invoke(stypy.reporting.localization.Localization(__file__, 194, 8), check_543477, *[], **kwargs_543478)
    
    
    # finally branch of the try-finally block (line 193)
    
    # Call to seterr(...): (line 197)
    # Processing the call keyword arguments (line 197)
    # Getting the type of 'olderr' (line 197)
    olderr_543482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 20), 'olderr', False)
    kwargs_543483 = {'olderr_543482': olderr_543482}
    # Getting the type of 'np' (line 197)
    np_543480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'np', False)
    # Obtaining the member 'seterr' of a type (line 197)
    seterr_543481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 8), np_543480, 'seterr')
    # Calling seterr(args, kwargs) (line 197)
    seterr_call_result_543484 = invoke(stypy.reporting.localization.Localization(__file__, 197, 8), seterr_543481, *[], **kwargs_543483)
    
    
    
    # ################# End of 'test_hyp2f1_real_some(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_hyp2f1_real_some' in the type store
    # Getting the type of 'stypy_return_type' (line 178)
    stypy_return_type_543485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_543485)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_hyp2f1_real_some'
    return stypy_return_type_543485

# Assigning a type to the variable 'test_hyp2f1_real_some' (line 178)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 0), 'test_hyp2f1_real_some', test_hyp2f1_real_some)

@norecursion
def test_hyp2f1_real_random(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_hyp2f1_real_random'
    module_type_store = module_type_store.open_function_context('test_hyp2f1_real_random', 200, 0, False)
    
    # Passed parameters checking function
    test_hyp2f1_real_random.stypy_localization = localization
    test_hyp2f1_real_random.stypy_type_of_self = None
    test_hyp2f1_real_random.stypy_type_store = module_type_store
    test_hyp2f1_real_random.stypy_function_name = 'test_hyp2f1_real_random'
    test_hyp2f1_real_random.stypy_param_names_list = []
    test_hyp2f1_real_random.stypy_varargs_param_name = None
    test_hyp2f1_real_random.stypy_kwargs_param_name = None
    test_hyp2f1_real_random.stypy_call_defaults = defaults
    test_hyp2f1_real_random.stypy_call_varargs = varargs
    test_hyp2f1_real_random.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_hyp2f1_real_random', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_hyp2f1_real_random', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_hyp2f1_real_random(...)' code ##################

    
    # Assigning a Num to a Name (line 203):
    
    # Assigning a Num to a Name (line 203):
    int_543486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 14), 'int')
    # Assigning a type to the variable 'npoints' (line 203)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 203, 4), 'npoints', int_543486)
    
    # Assigning a Call to a Name (line 204):
    
    # Assigning a Call to a Name (line 204):
    
    # Call to zeros(...): (line 204)
    # Processing the call arguments (line 204)
    
    # Obtaining an instance of the builtin type 'tuple' (line 204)
    tuple_543489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 204)
    # Adding element type (line 204)
    # Getting the type of 'npoints' (line 204)
    npoints_543490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 24), 'npoints', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 24), tuple_543489, npoints_543490)
    # Adding element type (line 204)
    int_543491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 33), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 24), tuple_543489, int_543491)
    
    # Getting the type of 'np' (line 204)
    np_543492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 37), 'np', False)
    # Obtaining the member 'float_' of a type (line 204)
    float__543493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 37), np_543492, 'float_')
    # Processing the call keyword arguments (line 204)
    kwargs_543494 = {}
    # Getting the type of 'np' (line 204)
    np_543487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 14), 'np', False)
    # Obtaining the member 'zeros' of a type (line 204)
    zeros_543488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 14), np_543487, 'zeros')
    # Calling zeros(args, kwargs) (line 204)
    zeros_call_result_543495 = invoke(stypy.reporting.localization.Localization(__file__, 204, 14), zeros_543488, *[tuple_543489, float__543493], **kwargs_543494)
    
    # Assigning a type to the variable 'dataset' (line 204)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 204, 4), 'dataset', zeros_call_result_543495)
    
    # Call to seed(...): (line 206)
    # Processing the call arguments (line 206)
    int_543499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 19), 'int')
    # Processing the call keyword arguments (line 206)
    kwargs_543500 = {}
    # Getting the type of 'np' (line 206)
    np_543496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 4), 'np', False)
    # Obtaining the member 'random' of a type (line 206)
    random_543497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 4), np_543496, 'random')
    # Obtaining the member 'seed' of a type (line 206)
    seed_543498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 4), random_543497, 'seed')
    # Calling seed(args, kwargs) (line 206)
    seed_call_result_543501 = invoke(stypy.reporting.localization.Localization(__file__, 206, 4), seed_543498, *[int_543499], **kwargs_543500)
    
    
    # Assigning a Call to a Subscript (line 207):
    
    # Assigning a Call to a Subscript (line 207):
    
    # Call to pareto(...): (line 207)
    # Processing the call arguments (line 207)
    float_543505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 37), 'float')
    # Getting the type of 'npoints' (line 207)
    npoints_543506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 42), 'npoints', False)
    # Processing the call keyword arguments (line 207)
    kwargs_543507 = {}
    # Getting the type of 'np' (line 207)
    np_543502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 20), 'np', False)
    # Obtaining the member 'random' of a type (line 207)
    random_543503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 20), np_543502, 'random')
    # Obtaining the member 'pareto' of a type (line 207)
    pareto_543504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 20), random_543503, 'pareto')
    # Calling pareto(args, kwargs) (line 207)
    pareto_call_result_543508 = invoke(stypy.reporting.localization.Localization(__file__, 207, 20), pareto_543504, *[float_543505, npoints_543506], **kwargs_543507)
    
    # Getting the type of 'dataset' (line 207)
    dataset_543509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 4), 'dataset')
    slice_543510 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 207, 4), None, None, None)
    int_543511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 15), 'int')
    # Storing an element on a container (line 207)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 207, 4), dataset_543509, ((slice_543510, int_543511), pareto_call_result_543508))
    
    # Assigning a Call to a Subscript (line 208):
    
    # Assigning a Call to a Subscript (line 208):
    
    # Call to pareto(...): (line 208)
    # Processing the call arguments (line 208)
    float_543515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 37), 'float')
    # Getting the type of 'npoints' (line 208)
    npoints_543516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 42), 'npoints', False)
    # Processing the call keyword arguments (line 208)
    kwargs_543517 = {}
    # Getting the type of 'np' (line 208)
    np_543512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 20), 'np', False)
    # Obtaining the member 'random' of a type (line 208)
    random_543513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 20), np_543512, 'random')
    # Obtaining the member 'pareto' of a type (line 208)
    pareto_543514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 20), random_543513, 'pareto')
    # Calling pareto(args, kwargs) (line 208)
    pareto_call_result_543518 = invoke(stypy.reporting.localization.Localization(__file__, 208, 20), pareto_543514, *[float_543515, npoints_543516], **kwargs_543517)
    
    # Getting the type of 'dataset' (line 208)
    dataset_543519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 4), 'dataset')
    slice_543520 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 208, 4), None, None, None)
    int_543521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 15), 'int')
    # Storing an element on a container (line 208)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 4), dataset_543519, ((slice_543520, int_543521), pareto_call_result_543518))
    
    # Assigning a Call to a Subscript (line 209):
    
    # Assigning a Call to a Subscript (line 209):
    
    # Call to pareto(...): (line 209)
    # Processing the call arguments (line 209)
    float_543525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 37), 'float')
    # Getting the type of 'npoints' (line 209)
    npoints_543526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 42), 'npoints', False)
    # Processing the call keyword arguments (line 209)
    kwargs_543527 = {}
    # Getting the type of 'np' (line 209)
    np_543522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 20), 'np', False)
    # Obtaining the member 'random' of a type (line 209)
    random_543523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 20), np_543522, 'random')
    # Obtaining the member 'pareto' of a type (line 209)
    pareto_543524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 20), random_543523, 'pareto')
    # Calling pareto(args, kwargs) (line 209)
    pareto_call_result_543528 = invoke(stypy.reporting.localization.Localization(__file__, 209, 20), pareto_543524, *[float_543525, npoints_543526], **kwargs_543527)
    
    # Getting the type of 'dataset' (line 209)
    dataset_543529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 4), 'dataset')
    slice_543530 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 209, 4), None, None, None)
    int_543531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 15), 'int')
    # Storing an element on a container (line 209)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 209, 4), dataset_543529, ((slice_543530, int_543531), pareto_call_result_543528))
    
    # Assigning a BinOp to a Subscript (line 210):
    
    # Assigning a BinOp to a Subscript (line 210):
    int_543532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 20), 'int')
    
    # Call to rand(...): (line 210)
    # Processing the call arguments (line 210)
    # Getting the type of 'npoints' (line 210)
    npoints_543536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 37), 'npoints', False)
    # Processing the call keyword arguments (line 210)
    kwargs_543537 = {}
    # Getting the type of 'np' (line 210)
    np_543533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 22), 'np', False)
    # Obtaining the member 'random' of a type (line 210)
    random_543534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 22), np_543533, 'random')
    # Obtaining the member 'rand' of a type (line 210)
    rand_543535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 22), random_543534, 'rand')
    # Calling rand(args, kwargs) (line 210)
    rand_call_result_543538 = invoke(stypy.reporting.localization.Localization(__file__, 210, 22), rand_543535, *[npoints_543536], **kwargs_543537)
    
    # Applying the binary operator '*' (line 210)
    result_mul_543539 = python_operator(stypy.reporting.localization.Localization(__file__, 210, 20), '*', int_543532, rand_call_result_543538)
    
    int_543540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 48), 'int')
    # Applying the binary operator '-' (line 210)
    result_sub_543541 = python_operator(stypy.reporting.localization.Localization(__file__, 210, 20), '-', result_mul_543539, int_543540)
    
    # Getting the type of 'dataset' (line 210)
    dataset_543542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 4), 'dataset')
    slice_543543 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 210, 4), None, None, None)
    int_543544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 15), 'int')
    # Storing an element on a container (line 210)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 210, 4), dataset_543542, ((slice_543543, int_543544), result_sub_543541))
    
    # Getting the type of 'dataset' (line 212)
    dataset_543545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 4), 'dataset')
    
    # Obtaining the type of the subscript
    slice_543546 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 212, 4), None, None, None)
    int_543547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 15), 'int')
    # Getting the type of 'dataset' (line 212)
    dataset_543548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 4), 'dataset')
    # Obtaining the member '__getitem__' of a type (line 212)
    getitem___543549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 4), dataset_543548, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 212)
    subscript_call_result_543550 = invoke(stypy.reporting.localization.Localization(__file__, 212, 4), getitem___543549, (slice_543546, int_543547))
    
    int_543551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 22), 'int')
    
    # Call to randint(...): (line 212)
    # Processing the call arguments (line 212)
    int_543555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 45), 'int')
    # Getting the type of 'npoints' (line 212)
    npoints_543556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 48), 'npoints', False)
    # Processing the call keyword arguments (line 212)
    kwargs_543557 = {}
    # Getting the type of 'np' (line 212)
    np_543552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 27), 'np', False)
    # Obtaining the member 'random' of a type (line 212)
    random_543553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 27), np_543552, 'random')
    # Obtaining the member 'randint' of a type (line 212)
    randint_543554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 27), random_543553, 'randint')
    # Calling randint(args, kwargs) (line 212)
    randint_call_result_543558 = invoke(stypy.reporting.localization.Localization(__file__, 212, 27), randint_543554, *[int_543555, npoints_543556], **kwargs_543557)
    
    # Applying the binary operator '**' (line 212)
    result_pow_543559 = python_operator(stypy.reporting.localization.Localization(__file__, 212, 21), '**', int_543551, randint_call_result_543558)
    
    # Applying the binary operator '*=' (line 212)
    result_imul_543560 = python_operator(stypy.reporting.localization.Localization(__file__, 212, 4), '*=', subscript_call_result_543550, result_pow_543559)
    # Getting the type of 'dataset' (line 212)
    dataset_543561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 4), 'dataset')
    slice_543562 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 212, 4), None, None, None)
    int_543563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 15), 'int')
    # Storing an element on a container (line 212)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 212, 4), dataset_543561, ((slice_543562, int_543563), result_imul_543560))
    
    
    # Getting the type of 'dataset' (line 213)
    dataset_543564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 4), 'dataset')
    
    # Obtaining the type of the subscript
    slice_543565 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 213, 4), None, None, None)
    int_543566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 15), 'int')
    # Getting the type of 'dataset' (line 213)
    dataset_543567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 4), 'dataset')
    # Obtaining the member '__getitem__' of a type (line 213)
    getitem___543568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 4), dataset_543567, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 213)
    subscript_call_result_543569 = invoke(stypy.reporting.localization.Localization(__file__, 213, 4), getitem___543568, (slice_543565, int_543566))
    
    int_543570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 22), 'int')
    
    # Call to randint(...): (line 213)
    # Processing the call arguments (line 213)
    int_543574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 45), 'int')
    # Getting the type of 'npoints' (line 213)
    npoints_543575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 48), 'npoints', False)
    # Processing the call keyword arguments (line 213)
    kwargs_543576 = {}
    # Getting the type of 'np' (line 213)
    np_543571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 27), 'np', False)
    # Obtaining the member 'random' of a type (line 213)
    random_543572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 27), np_543571, 'random')
    # Obtaining the member 'randint' of a type (line 213)
    randint_543573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 27), random_543572, 'randint')
    # Calling randint(args, kwargs) (line 213)
    randint_call_result_543577 = invoke(stypy.reporting.localization.Localization(__file__, 213, 27), randint_543573, *[int_543574, npoints_543575], **kwargs_543576)
    
    # Applying the binary operator '**' (line 213)
    result_pow_543578 = python_operator(stypy.reporting.localization.Localization(__file__, 213, 21), '**', int_543570, randint_call_result_543577)
    
    # Applying the binary operator '*=' (line 213)
    result_imul_543579 = python_operator(stypy.reporting.localization.Localization(__file__, 213, 4), '*=', subscript_call_result_543569, result_pow_543578)
    # Getting the type of 'dataset' (line 213)
    dataset_543580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 4), 'dataset')
    slice_543581 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 213, 4), None, None, None)
    int_543582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 15), 'int')
    # Storing an element on a container (line 213)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 4), dataset_543580, ((slice_543581, int_543582), result_imul_543579))
    
    
    # Getting the type of 'dataset' (line 214)
    dataset_543583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 4), 'dataset')
    
    # Obtaining the type of the subscript
    slice_543584 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 214, 4), None, None, None)
    int_543585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 15), 'int')
    # Getting the type of 'dataset' (line 214)
    dataset_543586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 4), 'dataset')
    # Obtaining the member '__getitem__' of a type (line 214)
    getitem___543587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 4), dataset_543586, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 214)
    subscript_call_result_543588 = invoke(stypy.reporting.localization.Localization(__file__, 214, 4), getitem___543587, (slice_543584, int_543585))
    
    int_543589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 22), 'int')
    
    # Call to randint(...): (line 214)
    # Processing the call arguments (line 214)
    int_543593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 45), 'int')
    # Getting the type of 'npoints' (line 214)
    npoints_543594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 48), 'npoints', False)
    # Processing the call keyword arguments (line 214)
    kwargs_543595 = {}
    # Getting the type of 'np' (line 214)
    np_543590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 27), 'np', False)
    # Obtaining the member 'random' of a type (line 214)
    random_543591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 27), np_543590, 'random')
    # Obtaining the member 'randint' of a type (line 214)
    randint_543592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 27), random_543591, 'randint')
    # Calling randint(args, kwargs) (line 214)
    randint_call_result_543596 = invoke(stypy.reporting.localization.Localization(__file__, 214, 27), randint_543592, *[int_543593, npoints_543594], **kwargs_543595)
    
    # Applying the binary operator '**' (line 214)
    result_pow_543597 = python_operator(stypy.reporting.localization.Localization(__file__, 214, 21), '**', int_543589, randint_call_result_543596)
    
    # Applying the binary operator '*=' (line 214)
    result_imul_543598 = python_operator(stypy.reporting.localization.Localization(__file__, 214, 4), '*=', subscript_call_result_543588, result_pow_543597)
    # Getting the type of 'dataset' (line 214)
    dataset_543599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 4), 'dataset')
    slice_543600 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 214, 4), None, None, None)
    int_543601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 15), 'int')
    # Storing an element on a container (line 214)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 214, 4), dataset_543599, ((slice_543600, int_543601), result_imul_543598))
    
    
    # Getting the type of 'dataset' (line 216)
    dataset_543602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 14), 'dataset')
    # Testing the type of a for loop iterable (line 216)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 216, 4), dataset_543602)
    # Getting the type of the for loop variable (line 216)
    for_loop_var_543603 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 216, 4), dataset_543602)
    # Assigning a type to the variable 'ds' (line 216)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 4), 'ds', for_loop_var_543603)
    # SSA begins for a for statement (line 216)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'mpmath' (line 217)
    mpmath_543604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 11), 'mpmath')
    # Obtaining the member '__version__' of a type (line 217)
    version___543605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 11), mpmath_543604, '__version__')
    str_543606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 32), 'str', '0.14')
    # Applying the binary operator '<' (line 217)
    result_lt_543607 = python_operator(stypy.reporting.localization.Localization(__file__, 217, 11), '<', version___543605, str_543606)
    
    # Testing the type of an if condition (line 217)
    if_condition_543608 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 217, 8), result_lt_543607)
    # Assigning a type to the variable 'if_condition_543608' (line 217)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 217, 8), 'if_condition_543608', if_condition_543608)
    # SSA begins for if statement (line 217)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to max(...): (line 219)
    # Processing the call keyword arguments (line 219)
    kwargs_543618 = {}
    
    # Call to abs(...): (line 219)
    # Processing the call arguments (line 219)
    
    # Obtaining the type of the subscript
    int_543610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 23), 'int')
    slice_543611 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 219, 19), None, int_543610, None)
    # Getting the type of 'ds' (line 219)
    ds_543612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 19), 'ds', False)
    # Obtaining the member '__getitem__' of a type (line 219)
    getitem___543613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 19), ds_543612, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 219)
    subscript_call_result_543614 = invoke(stypy.reporting.localization.Localization(__file__, 219, 19), getitem___543613, slice_543611)
    
    # Processing the call keyword arguments (line 219)
    kwargs_543615 = {}
    # Getting the type of 'abs' (line 219)
    abs_543609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 15), 'abs', False)
    # Calling abs(args, kwargs) (line 219)
    abs_call_result_543616 = invoke(stypy.reporting.localization.Localization(__file__, 219, 15), abs_543609, *[subscript_call_result_543614], **kwargs_543615)
    
    # Obtaining the member 'max' of a type (line 219)
    max_543617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 15), abs_call_result_543616, 'max')
    # Calling max(args, kwargs) (line 219)
    max_call_result_543619 = invoke(stypy.reporting.localization.Localization(__file__, 219, 15), max_543617, *[], **kwargs_543618)
    
    
    # Call to abs(...): (line 219)
    # Processing the call arguments (line 219)
    
    # Obtaining the type of the subscript
    int_543621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 42), 'int')
    # Getting the type of 'ds' (line 219)
    ds_543622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 39), 'ds', False)
    # Obtaining the member '__getitem__' of a type (line 219)
    getitem___543623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 39), ds_543622, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 219)
    subscript_call_result_543624 = invoke(stypy.reporting.localization.Localization(__file__, 219, 39), getitem___543623, int_543621)
    
    # Processing the call keyword arguments (line 219)
    kwargs_543625 = {}
    # Getting the type of 'abs' (line 219)
    abs_543620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 35), 'abs', False)
    # Calling abs(args, kwargs) (line 219)
    abs_call_result_543626 = invoke(stypy.reporting.localization.Localization(__file__, 219, 35), abs_543620, *[subscript_call_result_543624], **kwargs_543625)
    
    # Applying the binary operator '>' (line 219)
    result_gt_543627 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 15), '>', max_call_result_543619, abs_call_result_543626)
    
    # Testing the type of an if condition (line 219)
    if_condition_543628 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 219, 12), result_gt_543627)
    # Assigning a type to the variable 'if_condition_543628' (line 219)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 12), 'if_condition_543628', if_condition_543628)
    # SSA begins for if statement (line 219)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 220):
    
    # Assigning a Call to a Subscript (line 220):
    
    # Call to max(...): (line 220)
    # Processing the call keyword arguments (line 220)
    kwargs_543638 = {}
    
    # Call to abs(...): (line 220)
    # Processing the call arguments (line 220)
    
    # Obtaining the type of the subscript
    int_543630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 32), 'int')
    slice_543631 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 220, 28), None, int_543630, None)
    # Getting the type of 'ds' (line 220)
    ds_543632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 28), 'ds', False)
    # Obtaining the member '__getitem__' of a type (line 220)
    getitem___543633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 28), ds_543632, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 220)
    subscript_call_result_543634 = invoke(stypy.reporting.localization.Localization(__file__, 220, 28), getitem___543633, slice_543631)
    
    # Processing the call keyword arguments (line 220)
    kwargs_543635 = {}
    # Getting the type of 'abs' (line 220)
    abs_543629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 24), 'abs', False)
    # Calling abs(args, kwargs) (line 220)
    abs_call_result_543636 = invoke(stypy.reporting.localization.Localization(__file__, 220, 24), abs_543629, *[subscript_call_result_543634], **kwargs_543635)
    
    # Obtaining the member 'max' of a type (line 220)
    max_543637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 24), abs_call_result_543636, 'max')
    # Calling max(args, kwargs) (line 220)
    max_call_result_543639 = invoke(stypy.reporting.localization.Localization(__file__, 220, 24), max_543637, *[], **kwargs_543638)
    
    # Getting the type of 'ds' (line 220)
    ds_543640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 16), 'ds')
    int_543641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 19), 'int')
    # Storing an element on a container (line 220)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 220, 16), ds_543640, (int_543641, max_call_result_543639))
    # SSA join for if statement (line 219)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 217)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Subscript (line 221):
    
    # Assigning a Call to a Subscript (line 221):
    
    # Call to float(...): (line 221)
    # Processing the call arguments (line 221)
    
    # Call to hyp2f1(...): (line 221)
    
    # Call to tuple(...): (line 221)
    # Processing the call arguments (line 221)
    
    # Obtaining the type of the subscript
    int_543646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 47), 'int')
    slice_543647 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 221, 43), None, int_543646, None)
    # Getting the type of 'ds' (line 221)
    ds_543648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 43), 'ds', False)
    # Obtaining the member '__getitem__' of a type (line 221)
    getitem___543649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 43), ds_543648, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 221)
    subscript_call_result_543650 = invoke(stypy.reporting.localization.Localization(__file__, 221, 43), getitem___543649, slice_543647)
    
    # Processing the call keyword arguments (line 221)
    kwargs_543651 = {}
    # Getting the type of 'tuple' (line 221)
    tuple_543645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 37), 'tuple', False)
    # Calling tuple(args, kwargs) (line 221)
    tuple_call_result_543652 = invoke(stypy.reporting.localization.Localization(__file__, 221, 37), tuple_543645, *[subscript_call_result_543650], **kwargs_543651)
    
    # Processing the call keyword arguments (line 221)
    kwargs_543653 = {}
    # Getting the type of 'mpmath' (line 221)
    mpmath_543643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 22), 'mpmath', False)
    # Obtaining the member 'hyp2f1' of a type (line 221)
    hyp2f1_543644 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 22), mpmath_543643, 'hyp2f1')
    # Calling hyp2f1(args, kwargs) (line 221)
    hyp2f1_call_result_543654 = invoke(stypy.reporting.localization.Localization(__file__, 221, 22), hyp2f1_543644, *[tuple_call_result_543652], **kwargs_543653)
    
    # Processing the call keyword arguments (line 221)
    kwargs_543655 = {}
    # Getting the type of 'float' (line 221)
    float_543642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 16), 'float', False)
    # Calling float(args, kwargs) (line 221)
    float_call_result_543656 = invoke(stypy.reporting.localization.Localization(__file__, 221, 16), float_543642, *[hyp2f1_call_result_543654], **kwargs_543655)
    
    # Getting the type of 'ds' (line 221)
    ds_543657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 8), 'ds')
    int_543658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 11), 'int')
    # Storing an element on a container (line 221)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 8), ds_543657, (int_543658, float_call_result_543656))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to check(...): (line 223)
    # Processing the call keyword arguments (line 223)
    kwargs_543674 = {}
    
    # Call to FuncData(...): (line 223)
    # Processing the call arguments (line 223)
    # Getting the type of 'sc' (line 223)
    sc_543660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 13), 'sc', False)
    # Obtaining the member 'hyp2f1' of a type (line 223)
    hyp2f1_543661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 13), sc_543660, 'hyp2f1')
    # Getting the type of 'dataset' (line 223)
    dataset_543662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 24), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 223)
    tuple_543663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 34), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 223)
    # Adding element type (line 223)
    int_543664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 34), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 223, 34), tuple_543663, int_543664)
    # Adding element type (line 223)
    int_543665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 37), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 223, 34), tuple_543663, int_543665)
    # Adding element type (line 223)
    int_543666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 40), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 223, 34), tuple_543663, int_543666)
    # Adding element type (line 223)
    int_543667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 43), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 223, 34), tuple_543663, int_543667)
    
    int_543668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 47), 'int')
    # Processing the call keyword arguments (line 223)
    float_543669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 55), 'float')
    keyword_543670 = float_543669
    kwargs_543671 = {'rtol': keyword_543670}
    # Getting the type of 'FuncData' (line 223)
    FuncData_543659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 223)
    FuncData_call_result_543672 = invoke(stypy.reporting.localization.Localization(__file__, 223, 4), FuncData_543659, *[hyp2f1_543661, dataset_543662, tuple_543663, int_543668], **kwargs_543671)
    
    # Obtaining the member 'check' of a type (line 223)
    check_543673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 4), FuncData_call_result_543672, 'check')
    # Calling check(args, kwargs) (line 223)
    check_call_result_543675 = invoke(stypy.reporting.localization.Localization(__file__, 223, 4), check_543673, *[], **kwargs_543674)
    
    
    # ################# End of 'test_hyp2f1_real_random(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_hyp2f1_real_random' in the type store
    # Getting the type of 'stypy_return_type' (line 200)
    stypy_return_type_543676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_543676)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_hyp2f1_real_random'
    return stypy_return_type_543676

# Assigning a type to the variable 'test_hyp2f1_real_random' (line 200)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 200, 0), 'test_hyp2f1_real_random', test_hyp2f1_real_random)

@norecursion
def test_erf_complex(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_erf_complex'
    module_type_store = module_type_store.open_function_context('test_erf_complex', 229, 0, False)
    
    # Passed parameters checking function
    test_erf_complex.stypy_localization = localization
    test_erf_complex.stypy_type_of_self = None
    test_erf_complex.stypy_type_store = module_type_store
    test_erf_complex.stypy_function_name = 'test_erf_complex'
    test_erf_complex.stypy_param_names_list = []
    test_erf_complex.stypy_varargs_param_name = None
    test_erf_complex.stypy_kwargs_param_name = None
    test_erf_complex.stypy_call_defaults = defaults
    test_erf_complex.stypy_call_varargs = varargs
    test_erf_complex.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_erf_complex', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_erf_complex', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_erf_complex(...)' code ##################

    
    # Assigning a Tuple to a Tuple (line 232):
    
    # Assigning a Attribute to a Name (line 232):
    # Getting the type of 'mpmath' (line 232)
    mpmath_543677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 24), 'mpmath')
    # Obtaining the member 'mp' of a type (line 232)
    mp_543678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 24), mpmath_543677, 'mp')
    # Obtaining the member 'dps' of a type (line 232)
    dps_543679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 24), mp_543678, 'dps')
    # Assigning a type to the variable 'tuple_assignment_542758' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 4), 'tuple_assignment_542758', dps_543679)
    
    # Assigning a Attribute to a Name (line 232):
    # Getting the type of 'mpmath' (line 232)
    mpmath_543680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 39), 'mpmath')
    # Obtaining the member 'mp' of a type (line 232)
    mp_543681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 39), mpmath_543680, 'mp')
    # Obtaining the member 'prec' of a type (line 232)
    prec_543682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 39), mp_543681, 'prec')
    # Assigning a type to the variable 'tuple_assignment_542759' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 4), 'tuple_assignment_542759', prec_543682)
    
    # Assigning a Name to a Name (line 232):
    # Getting the type of 'tuple_assignment_542758' (line 232)
    tuple_assignment_542758_543683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 4), 'tuple_assignment_542758')
    # Assigning a type to the variable 'old_dps' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 4), 'old_dps', tuple_assignment_542758_543683)
    
    # Assigning a Name to a Name (line 232):
    # Getting the type of 'tuple_assignment_542759' (line 232)
    tuple_assignment_542759_543684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 4), 'tuple_assignment_542759')
    # Assigning a type to the variable 'old_prec' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 13), 'old_prec', tuple_assignment_542759_543684)
    
    # Try-finally block (line 233)
    
    # Assigning a Num to a Attribute (line 234):
    
    # Assigning a Num to a Attribute (line 234):
    int_543685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 24), 'int')
    # Getting the type of 'mpmath' (line 234)
    mpmath_543686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'mpmath')
    # Obtaining the member 'mp' of a type (line 234)
    mp_543687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 8), mpmath_543686, 'mp')
    # Setting the type of the member 'dps' of a type (line 234)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 8), mp_543687, 'dps', int_543685)
    
    # Assigning a Call to a Tuple (line 235):
    
    # Assigning a Subscript to a Name (line 235):
    
    # Obtaining the type of the subscript
    int_543688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 8), 'int')
    
    # Call to meshgrid(...): (line 235)
    # Processing the call arguments (line 235)
    
    # Call to linspace(...): (line 235)
    # Processing the call arguments (line 235)
    int_543693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 41), 'int')
    int_543694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 46), 'int')
    int_543695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 49), 'int')
    # Processing the call keyword arguments (line 235)
    kwargs_543696 = {}
    # Getting the type of 'np' (line 235)
    np_543691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 29), 'np', False)
    # Obtaining the member 'linspace' of a type (line 235)
    linspace_543692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 29), np_543691, 'linspace')
    # Calling linspace(args, kwargs) (line 235)
    linspace_call_result_543697 = invoke(stypy.reporting.localization.Localization(__file__, 235, 29), linspace_543692, *[int_543693, int_543694, int_543695], **kwargs_543696)
    
    
    # Call to linspace(...): (line 235)
    # Processing the call arguments (line 235)
    int_543700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 66), 'int')
    int_543701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 71), 'int')
    int_543702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 74), 'int')
    # Processing the call keyword arguments (line 235)
    kwargs_543703 = {}
    # Getting the type of 'np' (line 235)
    np_543698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 54), 'np', False)
    # Obtaining the member 'linspace' of a type (line 235)
    linspace_543699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 54), np_543698, 'linspace')
    # Calling linspace(args, kwargs) (line 235)
    linspace_call_result_543704 = invoke(stypy.reporting.localization.Localization(__file__, 235, 54), linspace_543699, *[int_543700, int_543701, int_543702], **kwargs_543703)
    
    # Processing the call keyword arguments (line 235)
    kwargs_543705 = {}
    # Getting the type of 'np' (line 235)
    np_543689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 17), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 235)
    meshgrid_543690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 17), np_543689, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 235)
    meshgrid_call_result_543706 = invoke(stypy.reporting.localization.Localization(__file__, 235, 17), meshgrid_543690, *[linspace_call_result_543697, linspace_call_result_543704], **kwargs_543705)
    
    # Obtaining the member '__getitem__' of a type (line 235)
    getitem___543707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 8), meshgrid_call_result_543706, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 235)
    subscript_call_result_543708 = invoke(stypy.reporting.localization.Localization(__file__, 235, 8), getitem___543707, int_543688)
    
    # Assigning a type to the variable 'tuple_var_assignment_542760' (line 235)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'tuple_var_assignment_542760', subscript_call_result_543708)
    
    # Assigning a Subscript to a Name (line 235):
    
    # Obtaining the type of the subscript
    int_543709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 8), 'int')
    
    # Call to meshgrid(...): (line 235)
    # Processing the call arguments (line 235)
    
    # Call to linspace(...): (line 235)
    # Processing the call arguments (line 235)
    int_543714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 41), 'int')
    int_543715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 46), 'int')
    int_543716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 49), 'int')
    # Processing the call keyword arguments (line 235)
    kwargs_543717 = {}
    # Getting the type of 'np' (line 235)
    np_543712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 29), 'np', False)
    # Obtaining the member 'linspace' of a type (line 235)
    linspace_543713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 29), np_543712, 'linspace')
    # Calling linspace(args, kwargs) (line 235)
    linspace_call_result_543718 = invoke(stypy.reporting.localization.Localization(__file__, 235, 29), linspace_543713, *[int_543714, int_543715, int_543716], **kwargs_543717)
    
    
    # Call to linspace(...): (line 235)
    # Processing the call arguments (line 235)
    int_543721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 66), 'int')
    int_543722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 71), 'int')
    int_543723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 74), 'int')
    # Processing the call keyword arguments (line 235)
    kwargs_543724 = {}
    # Getting the type of 'np' (line 235)
    np_543719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 54), 'np', False)
    # Obtaining the member 'linspace' of a type (line 235)
    linspace_543720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 54), np_543719, 'linspace')
    # Calling linspace(args, kwargs) (line 235)
    linspace_call_result_543725 = invoke(stypy.reporting.localization.Localization(__file__, 235, 54), linspace_543720, *[int_543721, int_543722, int_543723], **kwargs_543724)
    
    # Processing the call keyword arguments (line 235)
    kwargs_543726 = {}
    # Getting the type of 'np' (line 235)
    np_543710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 17), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 235)
    meshgrid_543711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 17), np_543710, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 235)
    meshgrid_call_result_543727 = invoke(stypy.reporting.localization.Localization(__file__, 235, 17), meshgrid_543711, *[linspace_call_result_543718, linspace_call_result_543725], **kwargs_543726)
    
    # Obtaining the member '__getitem__' of a type (line 235)
    getitem___543728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 8), meshgrid_call_result_543727, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 235)
    subscript_call_result_543729 = invoke(stypy.reporting.localization.Localization(__file__, 235, 8), getitem___543728, int_543709)
    
    # Assigning a type to the variable 'tuple_var_assignment_542761' (line 235)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'tuple_var_assignment_542761', subscript_call_result_543729)
    
    # Assigning a Name to a Name (line 235):
    # Getting the type of 'tuple_var_assignment_542760' (line 235)
    tuple_var_assignment_542760_543730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'tuple_var_assignment_542760')
    # Assigning a type to the variable 'x1' (line 235)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'x1', tuple_var_assignment_542760_543730)
    
    # Assigning a Name to a Name (line 235):
    # Getting the type of 'tuple_var_assignment_542761' (line 235)
    tuple_var_assignment_542761_543731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'tuple_var_assignment_542761')
    # Assigning a type to the variable 'y1' (line 235)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 12), 'y1', tuple_var_assignment_542761_543731)
    
    # Assigning a Call to a Tuple (line 236):
    
    # Assigning a Subscript to a Name (line 236):
    
    # Obtaining the type of the subscript
    int_543732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 8), 'int')
    
    # Call to meshgrid(...): (line 236)
    # Processing the call arguments (line 236)
    
    # Call to logspace(...): (line 236)
    # Processing the call arguments (line 236)
    int_543737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 41), 'int')
    float_543738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 46), 'float')
    int_543739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 50), 'int')
    # Processing the call keyword arguments (line 236)
    kwargs_543740 = {}
    # Getting the type of 'np' (line 236)
    np_543735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 29), 'np', False)
    # Obtaining the member 'logspace' of a type (line 236)
    logspace_543736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 29), np_543735, 'logspace')
    # Calling logspace(args, kwargs) (line 236)
    logspace_call_result_543741 = invoke(stypy.reporting.localization.Localization(__file__, 236, 29), logspace_543736, *[int_543737, float_543738, int_543739], **kwargs_543740)
    
    
    # Call to logspace(...): (line 236)
    # Processing the call arguments (line 236)
    int_543744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 67), 'int')
    float_543745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 72), 'float')
    int_543746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 76), 'int')
    # Processing the call keyword arguments (line 236)
    kwargs_543747 = {}
    # Getting the type of 'np' (line 236)
    np_543742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 55), 'np', False)
    # Obtaining the member 'logspace' of a type (line 236)
    logspace_543743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 55), np_543742, 'logspace')
    # Calling logspace(args, kwargs) (line 236)
    logspace_call_result_543748 = invoke(stypy.reporting.localization.Localization(__file__, 236, 55), logspace_543743, *[int_543744, float_543745, int_543746], **kwargs_543747)
    
    # Processing the call keyword arguments (line 236)
    kwargs_543749 = {}
    # Getting the type of 'np' (line 236)
    np_543733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 17), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 236)
    meshgrid_543734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 17), np_543733, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 236)
    meshgrid_call_result_543750 = invoke(stypy.reporting.localization.Localization(__file__, 236, 17), meshgrid_543734, *[logspace_call_result_543741, logspace_call_result_543748], **kwargs_543749)
    
    # Obtaining the member '__getitem__' of a type (line 236)
    getitem___543751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 8), meshgrid_call_result_543750, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 236)
    subscript_call_result_543752 = invoke(stypy.reporting.localization.Localization(__file__, 236, 8), getitem___543751, int_543732)
    
    # Assigning a type to the variable 'tuple_var_assignment_542762' (line 236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'tuple_var_assignment_542762', subscript_call_result_543752)
    
    # Assigning a Subscript to a Name (line 236):
    
    # Obtaining the type of the subscript
    int_543753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 8), 'int')
    
    # Call to meshgrid(...): (line 236)
    # Processing the call arguments (line 236)
    
    # Call to logspace(...): (line 236)
    # Processing the call arguments (line 236)
    int_543758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 41), 'int')
    float_543759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 46), 'float')
    int_543760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 50), 'int')
    # Processing the call keyword arguments (line 236)
    kwargs_543761 = {}
    # Getting the type of 'np' (line 236)
    np_543756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 29), 'np', False)
    # Obtaining the member 'logspace' of a type (line 236)
    logspace_543757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 29), np_543756, 'logspace')
    # Calling logspace(args, kwargs) (line 236)
    logspace_call_result_543762 = invoke(stypy.reporting.localization.Localization(__file__, 236, 29), logspace_543757, *[int_543758, float_543759, int_543760], **kwargs_543761)
    
    
    # Call to logspace(...): (line 236)
    # Processing the call arguments (line 236)
    int_543765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 67), 'int')
    float_543766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 72), 'float')
    int_543767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 76), 'int')
    # Processing the call keyword arguments (line 236)
    kwargs_543768 = {}
    # Getting the type of 'np' (line 236)
    np_543763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 55), 'np', False)
    # Obtaining the member 'logspace' of a type (line 236)
    logspace_543764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 55), np_543763, 'logspace')
    # Calling logspace(args, kwargs) (line 236)
    logspace_call_result_543769 = invoke(stypy.reporting.localization.Localization(__file__, 236, 55), logspace_543764, *[int_543765, float_543766, int_543767], **kwargs_543768)
    
    # Processing the call keyword arguments (line 236)
    kwargs_543770 = {}
    # Getting the type of 'np' (line 236)
    np_543754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 17), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 236)
    meshgrid_543755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 17), np_543754, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 236)
    meshgrid_call_result_543771 = invoke(stypy.reporting.localization.Localization(__file__, 236, 17), meshgrid_543755, *[logspace_call_result_543762, logspace_call_result_543769], **kwargs_543770)
    
    # Obtaining the member '__getitem__' of a type (line 236)
    getitem___543772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 8), meshgrid_call_result_543771, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 236)
    subscript_call_result_543773 = invoke(stypy.reporting.localization.Localization(__file__, 236, 8), getitem___543772, int_543753)
    
    # Assigning a type to the variable 'tuple_var_assignment_542763' (line 236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'tuple_var_assignment_542763', subscript_call_result_543773)
    
    # Assigning a Name to a Name (line 236):
    # Getting the type of 'tuple_var_assignment_542762' (line 236)
    tuple_var_assignment_542762_543774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'tuple_var_assignment_542762')
    # Assigning a type to the variable 'x2' (line 236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'x2', tuple_var_assignment_542762_543774)
    
    # Assigning a Name to a Name (line 236):
    # Getting the type of 'tuple_var_assignment_542763' (line 236)
    tuple_var_assignment_542763_543775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'tuple_var_assignment_542763')
    # Assigning a type to the variable 'y2' (line 236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 12), 'y2', tuple_var_assignment_542763_543775)
    
    # Assigning a BinOp to a Name (line 237):
    
    # Assigning a BinOp to a Name (line 237):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 237)
    tuple_543776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 23), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 237)
    # Adding element type (line 237)
    
    # Call to ravel(...): (line 237)
    # Processing the call keyword arguments (line 237)
    kwargs_543779 = {}
    # Getting the type of 'x1' (line 237)
    x1_543777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 23), 'x1', False)
    # Obtaining the member 'ravel' of a type (line 237)
    ravel_543778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 23), x1_543777, 'ravel')
    # Calling ravel(args, kwargs) (line 237)
    ravel_call_result_543780 = invoke(stypy.reporting.localization.Localization(__file__, 237, 23), ravel_543778, *[], **kwargs_543779)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 23), tuple_543776, ravel_call_result_543780)
    # Adding element type (line 237)
    
    # Call to ravel(...): (line 237)
    # Processing the call keyword arguments (line 237)
    kwargs_543783 = {}
    # Getting the type of 'x2' (line 237)
    x2_543781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 34), 'x2', False)
    # Obtaining the member 'ravel' of a type (line 237)
    ravel_543782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 34), x2_543781, 'ravel')
    # Calling ravel(args, kwargs) (line 237)
    ravel_call_result_543784 = invoke(stypy.reporting.localization.Localization(__file__, 237, 34), ravel_543782, *[], **kwargs_543783)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 23), tuple_543776, ravel_call_result_543784)
    
    # Getting the type of 'np' (line 237)
    np_543785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 17), 'np')
    # Obtaining the member 'r_' of a type (line 237)
    r__543786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 17), np_543785, 'r_')
    # Obtaining the member '__getitem__' of a type (line 237)
    getitem___543787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 17), r__543786, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 237)
    subscript_call_result_543788 = invoke(stypy.reporting.localization.Localization(__file__, 237, 17), getitem___543787, tuple_543776)
    
    complex_543789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 48), 'complex')
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 237)
    tuple_543790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 57), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 237)
    # Adding element type (line 237)
    
    # Call to ravel(...): (line 237)
    # Processing the call keyword arguments (line 237)
    kwargs_543793 = {}
    # Getting the type of 'y1' (line 237)
    y1_543791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 57), 'y1', False)
    # Obtaining the member 'ravel' of a type (line 237)
    ravel_543792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 57), y1_543791, 'ravel')
    # Calling ravel(args, kwargs) (line 237)
    ravel_call_result_543794 = invoke(stypy.reporting.localization.Localization(__file__, 237, 57), ravel_543792, *[], **kwargs_543793)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 57), tuple_543790, ravel_call_result_543794)
    # Adding element type (line 237)
    
    # Call to ravel(...): (line 237)
    # Processing the call keyword arguments (line 237)
    kwargs_543797 = {}
    # Getting the type of 'y2' (line 237)
    y2_543795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 69), 'y2', False)
    # Obtaining the member 'ravel' of a type (line 237)
    ravel_543796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 69), y2_543795, 'ravel')
    # Calling ravel(args, kwargs) (line 237)
    ravel_call_result_543798 = invoke(stypy.reporting.localization.Localization(__file__, 237, 69), ravel_543796, *[], **kwargs_543797)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 57), tuple_543790, ravel_call_result_543798)
    
    # Getting the type of 'np' (line 237)
    np_543799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 51), 'np')
    # Obtaining the member 'r_' of a type (line 237)
    r__543800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 51), np_543799, 'r_')
    # Obtaining the member '__getitem__' of a type (line 237)
    getitem___543801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 51), r__543800, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 237)
    subscript_call_result_543802 = invoke(stypy.reporting.localization.Localization(__file__, 237, 51), getitem___543801, tuple_543790)
    
    # Applying the binary operator '*' (line 237)
    result_mul_543803 = python_operator(stypy.reporting.localization.Localization(__file__, 237, 48), '*', complex_543789, subscript_call_result_543802)
    
    # Applying the binary operator '+' (line 237)
    result_add_543804 = python_operator(stypy.reporting.localization.Localization(__file__, 237, 17), '+', subscript_call_result_543788, result_mul_543803)
    
    # Assigning a type to the variable 'points' (line 237)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'points', result_add_543804)
    
    # Call to assert_func_equal(...): (line 239)
    # Processing the call arguments (line 239)
    # Getting the type of 'sc' (line 239)
    sc_543806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 26), 'sc', False)
    # Obtaining the member 'erf' of a type (line 239)
    erf_543807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 26), sc_543806, 'erf')

    @norecursion
    def _stypy_temp_lambda_335(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_335'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_335', 239, 34, True)
        # Passed parameters checking function
        _stypy_temp_lambda_335.stypy_localization = localization
        _stypy_temp_lambda_335.stypy_type_of_self = None
        _stypy_temp_lambda_335.stypy_type_store = module_type_store
        _stypy_temp_lambda_335.stypy_function_name = '_stypy_temp_lambda_335'
        _stypy_temp_lambda_335.stypy_param_names_list = ['x']
        _stypy_temp_lambda_335.stypy_varargs_param_name = None
        _stypy_temp_lambda_335.stypy_kwargs_param_name = None
        _stypy_temp_lambda_335.stypy_call_defaults = defaults
        _stypy_temp_lambda_335.stypy_call_varargs = varargs
        _stypy_temp_lambda_335.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_335', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_335', ['x'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to complex(...): (line 239)
        # Processing the call arguments (line 239)
        
        # Call to erf(...): (line 239)
        # Processing the call arguments (line 239)
        # Getting the type of 'x' (line 239)
        x_543811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 63), 'x', False)
        # Processing the call keyword arguments (line 239)
        kwargs_543812 = {}
        # Getting the type of 'mpmath' (line 239)
        mpmath_543809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 52), 'mpmath', False)
        # Obtaining the member 'erf' of a type (line 239)
        erf_543810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 52), mpmath_543809, 'erf')
        # Calling erf(args, kwargs) (line 239)
        erf_call_result_543813 = invoke(stypy.reporting.localization.Localization(__file__, 239, 52), erf_543810, *[x_543811], **kwargs_543812)
        
        # Processing the call keyword arguments (line 239)
        kwargs_543814 = {}
        # Getting the type of 'complex' (line 239)
        complex_543808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 44), 'complex', False)
        # Calling complex(args, kwargs) (line 239)
        complex_call_result_543815 = invoke(stypy.reporting.localization.Localization(__file__, 239, 44), complex_543808, *[erf_call_result_543813], **kwargs_543814)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 34), 'stypy_return_type', complex_call_result_543815)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_335' in the type store
        # Getting the type of 'stypy_return_type' (line 239)
        stypy_return_type_543816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 34), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_543816)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_335'
        return stypy_return_type_543816

    # Assigning a type to the variable '_stypy_temp_lambda_335' (line 239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 34), '_stypy_temp_lambda_335', _stypy_temp_lambda_335)
    # Getting the type of '_stypy_temp_lambda_335' (line 239)
    _stypy_temp_lambda_335_543817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 34), '_stypy_temp_lambda_335')
    # Getting the type of 'points' (line 239)
    points_543818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 68), 'points', False)
    # Processing the call keyword arguments (line 239)
    # Getting the type of 'False' (line 240)
    False_543819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 37), 'False', False)
    keyword_543820 = False_543819
    float_543821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 49), 'float')
    keyword_543822 = float_543821
    kwargs_543823 = {'vectorized': keyword_543820, 'rtol': keyword_543822}
    # Getting the type of 'assert_func_equal' (line 239)
    assert_func_equal_543805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'assert_func_equal', False)
    # Calling assert_func_equal(args, kwargs) (line 239)
    assert_func_equal_call_result_543824 = invoke(stypy.reporting.localization.Localization(__file__, 239, 8), assert_func_equal_543805, *[erf_543807, _stypy_temp_lambda_335_543817, points_543818], **kwargs_543823)
    
    
    # Call to assert_func_equal(...): (line 241)
    # Processing the call arguments (line 241)
    # Getting the type of 'sc' (line 241)
    sc_543826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 26), 'sc', False)
    # Obtaining the member 'erfc' of a type (line 241)
    erfc_543827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 26), sc_543826, 'erfc')

    @norecursion
    def _stypy_temp_lambda_336(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_336'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_336', 241, 35, True)
        # Passed parameters checking function
        _stypy_temp_lambda_336.stypy_localization = localization
        _stypy_temp_lambda_336.stypy_type_of_self = None
        _stypy_temp_lambda_336.stypy_type_store = module_type_store
        _stypy_temp_lambda_336.stypy_function_name = '_stypy_temp_lambda_336'
        _stypy_temp_lambda_336.stypy_param_names_list = ['x']
        _stypy_temp_lambda_336.stypy_varargs_param_name = None
        _stypy_temp_lambda_336.stypy_kwargs_param_name = None
        _stypy_temp_lambda_336.stypy_call_defaults = defaults
        _stypy_temp_lambda_336.stypy_call_varargs = varargs
        _stypy_temp_lambda_336.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_336', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_336', ['x'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to complex(...): (line 241)
        # Processing the call arguments (line 241)
        
        # Call to erfc(...): (line 241)
        # Processing the call arguments (line 241)
        # Getting the type of 'x' (line 241)
        x_543831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 65), 'x', False)
        # Processing the call keyword arguments (line 241)
        kwargs_543832 = {}
        # Getting the type of 'mpmath' (line 241)
        mpmath_543829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 53), 'mpmath', False)
        # Obtaining the member 'erfc' of a type (line 241)
        erfc_543830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 53), mpmath_543829, 'erfc')
        # Calling erfc(args, kwargs) (line 241)
        erfc_call_result_543833 = invoke(stypy.reporting.localization.Localization(__file__, 241, 53), erfc_543830, *[x_543831], **kwargs_543832)
        
        # Processing the call keyword arguments (line 241)
        kwargs_543834 = {}
        # Getting the type of 'complex' (line 241)
        complex_543828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 45), 'complex', False)
        # Calling complex(args, kwargs) (line 241)
        complex_call_result_543835 = invoke(stypy.reporting.localization.Localization(__file__, 241, 45), complex_543828, *[erfc_call_result_543833], **kwargs_543834)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 241)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 35), 'stypy_return_type', complex_call_result_543835)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_336' in the type store
        # Getting the type of 'stypy_return_type' (line 241)
        stypy_return_type_543836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 35), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_543836)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_336'
        return stypy_return_type_543836

    # Assigning a type to the variable '_stypy_temp_lambda_336' (line 241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 35), '_stypy_temp_lambda_336', _stypy_temp_lambda_336)
    # Getting the type of '_stypy_temp_lambda_336' (line 241)
    _stypy_temp_lambda_336_543837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 35), '_stypy_temp_lambda_336')
    # Getting the type of 'points' (line 241)
    points_543838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 70), 'points', False)
    # Processing the call keyword arguments (line 241)
    # Getting the type of 'False' (line 242)
    False_543839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 37), 'False', False)
    keyword_543840 = False_543839
    float_543841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 49), 'float')
    keyword_543842 = float_543841
    kwargs_543843 = {'vectorized': keyword_543840, 'rtol': keyword_543842}
    # Getting the type of 'assert_func_equal' (line 241)
    assert_func_equal_543825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 8), 'assert_func_equal', False)
    # Calling assert_func_equal(args, kwargs) (line 241)
    assert_func_equal_call_result_543844 = invoke(stypy.reporting.localization.Localization(__file__, 241, 8), assert_func_equal_543825, *[erfc_543827, _stypy_temp_lambda_336_543837, points_543838], **kwargs_543843)
    
    
    # finally branch of the try-finally block (line 233)
    
    # Assigning a Tuple to a Tuple (line 244):
    
    # Assigning a Name to a Name (line 244):
    # Getting the type of 'old_dps' (line 244)
    old_dps_543845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 40), 'old_dps')
    # Assigning a type to the variable 'tuple_assignment_542764' (line 244)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'tuple_assignment_542764', old_dps_543845)
    
    # Assigning a Name to a Name (line 244):
    # Getting the type of 'old_prec' (line 244)
    old_prec_543846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 49), 'old_prec')
    # Assigning a type to the variable 'tuple_assignment_542765' (line 244)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'tuple_assignment_542765', old_prec_543846)
    
    # Assigning a Name to a Attribute (line 244):
    # Getting the type of 'tuple_assignment_542764' (line 244)
    tuple_assignment_542764_543847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'tuple_assignment_542764')
    # Getting the type of 'mpmath' (line 244)
    mpmath_543848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'mpmath')
    # Obtaining the member 'mp' of a type (line 244)
    mp_543849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 8), mpmath_543848, 'mp')
    # Setting the type of the member 'dps' of a type (line 244)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 8), mp_543849, 'dps', tuple_assignment_542764_543847)
    
    # Assigning a Name to a Attribute (line 244):
    # Getting the type of 'tuple_assignment_542765' (line 244)
    tuple_assignment_542765_543850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'tuple_assignment_542765')
    # Getting the type of 'mpmath' (line 244)
    mpmath_543851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 23), 'mpmath')
    # Obtaining the member 'mp' of a type (line 244)
    mp_543852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 23), mpmath_543851, 'mp')
    # Setting the type of the member 'prec' of a type (line 244)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 23), mp_543852, 'prec', tuple_assignment_542765_543850)
    
    
    # ################# End of 'test_erf_complex(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_erf_complex' in the type store
    # Getting the type of 'stypy_return_type' (line 229)
    stypy_return_type_543853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_543853)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_erf_complex'
    return stypy_return_type_543853

# Assigning a type to the variable 'test_erf_complex' (line 229)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 0), 'test_erf_complex', test_erf_complex)

@norecursion
def test_lpmv(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_lpmv'
    module_type_store = module_type_store.open_function_context('test_lpmv', 251, 0, False)
    
    # Passed parameters checking function
    test_lpmv.stypy_localization = localization
    test_lpmv.stypy_type_of_self = None
    test_lpmv.stypy_type_store = module_type_store
    test_lpmv.stypy_function_name = 'test_lpmv'
    test_lpmv.stypy_param_names_list = []
    test_lpmv.stypy_varargs_param_name = None
    test_lpmv.stypy_kwargs_param_name = None
    test_lpmv.stypy_call_defaults = defaults
    test_lpmv.stypy_call_varargs = varargs
    test_lpmv.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_lpmv', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_lpmv', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_lpmv(...)' code ##################

    
    # Assigning a List to a Name (line 253):
    
    # Assigning a List to a Name (line 253):
    
    # Obtaining an instance of the builtin type 'list' (line 253)
    list_543854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 10), 'list')
    # Adding type elements to the builtin type 'list' instance (line 253)
    
    # Assigning a type to the variable 'pts' (line 253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 253, 4), 'pts', list_543854)
    
    
    # Obtaining an instance of the builtin type 'list' (line 254)
    list_543855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 254)
    # Adding element type (line 254)
    float_543856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 14), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 13), list_543855, float_543856)
    # Adding element type (line 254)
    float_543857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 21), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 13), list_543855, float_543857)
    # Adding element type (line 254)
    float_543858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 29), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 13), list_543855, float_543858)
    # Adding element type (line 254)
    float_543859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 35), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 13), list_543855, float_543859)
    # Adding element type (line 254)
    int_543860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 42), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 13), list_543855, int_543860)
    
    # Testing the type of a for loop iterable (line 254)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 254, 4), list_543855)
    # Getting the type of the for loop variable (line 254)
    for_loop_var_543861 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 254, 4), list_543855)
    # Assigning a type to the variable 'x' (line 254)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 4), 'x', for_loop_var_543861)
    # SSA begins for a for statement (line 254)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to extend(...): (line 255)
    # Processing the call arguments (line 255)
    
    # Obtaining an instance of the builtin type 'list' (line 255)
    list_543864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 255)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 256)
    tuple_543865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 256)
    # Adding element type (line 256)
    int_543866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 13), tuple_543865, int_543866)
    # Adding element type (line 256)
    int_543867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 13), tuple_543865, int_543867)
    # Adding element type (line 256)
    # Getting the type of 'x' (line 256)
    x_543868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 19), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 13), tuple_543865, x_543868)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543865)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 257)
    tuple_543869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 257)
    # Adding element type (line 257)
    int_543870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 13), tuple_543869, int_543870)
    # Adding element type (line 257)
    int_543871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 13), tuple_543869, int_543871)
    # Adding element type (line 257)
    # Getting the type of 'x' (line 257)
    x_543872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 20), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 13), tuple_543869, x_543872)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543869)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 258)
    tuple_543873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 258)
    # Adding element type (line 258)
    int_543874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 13), tuple_543873, int_543874)
    # Adding element type (line 258)
    int_543875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 13), tuple_543873, int_543875)
    # Adding element type (line 258)
    # Getting the type of 'x' (line 258)
    x_543876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 20), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 13), tuple_543873, x_543876)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543873)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 259)
    tuple_543877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 259)
    # Adding element type (line 259)
    int_543878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 13), tuple_543877, int_543878)
    # Adding element type (line 259)
    int_543879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 13), tuple_543877, int_543879)
    # Adding element type (line 259)
    # Getting the type of 'x' (line 259)
    x_543880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 21), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 13), tuple_543877, x_543880)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543877)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 260)
    tuple_543881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 260)
    # Adding element type (line 260)
    int_543882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 13), tuple_543881, int_543882)
    # Adding element type (line 260)
    float_543883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 16), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 13), tuple_543881, float_543883)
    # Adding element type (line 260)
    # Getting the type of 'x' (line 260)
    x_543884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 21), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 13), tuple_543881, x_543884)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543881)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 261)
    tuple_543885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 261)
    # Adding element type (line 261)
    int_543886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 13), tuple_543885, int_543886)
    # Adding element type (line 261)
    float_543887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 16), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 13), tuple_543885, float_543887)
    # Adding element type (line 261)
    # Getting the type of 'x' (line 261)
    x_543888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 22), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 13), tuple_543885, x_543888)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543885)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 262)
    tuple_543889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 262)
    # Adding element type (line 262)
    int_543890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 13), tuple_543889, int_543890)
    # Adding element type (line 262)
    float_543891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 13), tuple_543889, float_543891)
    # Adding element type (line 262)
    # Getting the type of 'x' (line 262)
    x_543892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 22), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 13), tuple_543889, x_543892)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543889)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 263)
    tuple_543893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 263)
    # Adding element type (line 263)
    int_543894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 13), tuple_543893, int_543894)
    # Adding element type (line 263)
    float_543895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 13), tuple_543893, float_543895)
    # Adding element type (line 263)
    # Getting the type of 'x' (line 263)
    x_543896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 23), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 13), tuple_543893, x_543896)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543893)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 264)
    tuple_543897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 264)
    # Adding element type (line 264)
    int_543898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 13), tuple_543897, int_543898)
    # Adding element type (line 264)
    int_543899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 13), tuple_543897, int_543899)
    # Adding element type (line 264)
    # Getting the type of 'x' (line 264)
    x_543900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 20), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 13), tuple_543897, x_543900)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543897)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 265)
    tuple_543901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 265)
    # Adding element type (line 265)
    int_543902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 13), tuple_543901, int_543902)
    # Adding element type (line 265)
    int_543903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 13), tuple_543901, int_543903)
    # Adding element type (line 265)
    # Getting the type of 'x' (line 265)
    x_543904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 20), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 13), tuple_543901, x_543904)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543901)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 266)
    tuple_543905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 266)
    # Adding element type (line 266)
    int_543906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 266, 13), tuple_543905, int_543906)
    # Adding element type (line 266)
    int_543907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 266, 13), tuple_543905, int_543907)
    # Adding element type (line 266)
    # Getting the type of 'x' (line 266)
    x_543908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 19), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 266, 13), tuple_543905, x_543908)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543905)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 267)
    tuple_543909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 267)
    # Adding element type (line 267)
    int_543910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 13), tuple_543909, int_543910)
    # Adding element type (line 267)
    int_543911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 13), tuple_543909, int_543911)
    # Adding element type (line 267)
    # Getting the type of 'x' (line 267)
    x_543912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 20), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 13), tuple_543909, x_543912)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543909)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 268)
    tuple_543913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 268)
    # Adding element type (line 268)
    int_543914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 13), tuple_543913, int_543914)
    # Adding element type (line 268)
    int_543915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 13), tuple_543913, int_543915)
    # Adding element type (line 268)
    # Getting the type of 'x' (line 268)
    x_543916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 20), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 13), tuple_543913, x_543916)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543913)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 269)
    tuple_543917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 269)
    # Adding element type (line 269)
    int_543918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 13), tuple_543917, int_543918)
    # Adding element type (line 269)
    int_543919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 13), tuple_543917, int_543919)
    # Adding element type (line 269)
    # Getting the type of 'x' (line 269)
    x_543920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 21), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 13), tuple_543917, x_543920)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543917)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 270)
    tuple_543921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 270)
    # Adding element type (line 270)
    int_543922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 13), tuple_543921, int_543922)
    # Adding element type (line 270)
    int_543923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 13), tuple_543921, int_543923)
    # Adding element type (line 270)
    # Getting the type of 'x' (line 270)
    x_543924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 20), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 13), tuple_543921, x_543924)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543921)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 271)
    tuple_543925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 271)
    # Adding element type (line 271)
    int_543926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 13), tuple_543925, int_543926)
    # Adding element type (line 271)
    int_543927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 13), tuple_543925, int_543927)
    # Adding element type (line 271)
    # Getting the type of 'x' (line 271)
    x_543928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 21), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 13), tuple_543925, x_543928)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543925)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 272)
    tuple_543929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 272)
    # Adding element type (line 272)
    int_543930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 13), tuple_543929, int_543930)
    # Adding element type (line 272)
    int_543931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 13), tuple_543929, int_543931)
    # Adding element type (line 272)
    # Getting the type of 'x' (line 272)
    x_543932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 21), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 13), tuple_543929, x_543932)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543929)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 273)
    tuple_543933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 273)
    # Adding element type (line 273)
    int_543934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 273, 13), tuple_543933, int_543934)
    # Adding element type (line 273)
    int_543935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 273, 13), tuple_543933, int_543935)
    # Adding element type (line 273)
    # Getting the type of 'x' (line 273)
    x_543936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 22), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 273, 13), tuple_543933, x_543936)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543933)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 274)
    tuple_543937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 274)
    # Adding element type (line 274)
    int_543938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 274, 13), tuple_543937, int_543938)
    # Adding element type (line 274)
    float_543939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 16), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 274, 13), tuple_543937, float_543939)
    # Adding element type (line 274)
    # Getting the type of 'x' (line 274)
    x_543940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 21), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 274, 13), tuple_543937, x_543940)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543937)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 275)
    tuple_543941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 275)
    # Adding element type (line 275)
    int_543942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 13), tuple_543941, int_543942)
    # Adding element type (line 275)
    float_543943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 16), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 13), tuple_543941, float_543943)
    # Adding element type (line 275)
    # Getting the type of 'x' (line 275)
    x_543944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 22), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 13), tuple_543941, x_543944)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543941)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 276)
    tuple_543945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 276)
    # Adding element type (line 276)
    int_543946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 276, 13), tuple_543945, int_543946)
    # Adding element type (line 276)
    float_543947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 276, 13), tuple_543945, float_543947)
    # Adding element type (line 276)
    # Getting the type of 'x' (line 276)
    x_543948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 22), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 276, 13), tuple_543945, x_543948)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543945)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 277)
    tuple_543949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 277)
    # Adding element type (line 277)
    int_543950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 277, 13), tuple_543949, int_543950)
    # Adding element type (line 277)
    float_543951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 277, 13), tuple_543949, float_543951)
    # Adding element type (line 277)
    # Getting the type of 'x' (line 277)
    x_543952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 23), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 277, 13), tuple_543949, x_543952)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543949)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 278)
    tuple_543953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 278)
    # Adding element type (line 278)
    int_543954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 278, 13), tuple_543953, int_543954)
    # Adding element type (line 278)
    float_543955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 16), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 278, 13), tuple_543953, float_543955)
    # Adding element type (line 278)
    # Getting the type of 'x' (line 278)
    x_543956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 22), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 278, 13), tuple_543953, x_543956)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543953)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 279)
    tuple_543957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 279)
    # Adding element type (line 279)
    int_543958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 13), tuple_543957, int_543958)
    # Adding element type (line 279)
    float_543959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 16), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 13), tuple_543957, float_543959)
    # Adding element type (line 279)
    # Getting the type of 'x' (line 279)
    x_543960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 23), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 13), tuple_543957, x_543960)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543957)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 280)
    tuple_543961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 280)
    # Adding element type (line 280)
    int_543962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 280, 13), tuple_543961, int_543962)
    # Adding element type (line 280)
    float_543963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 280, 13), tuple_543961, float_543963)
    # Adding element type (line 280)
    # Getting the type of 'x' (line 280)
    x_543964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 23), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 280, 13), tuple_543961, x_543964)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543961)
    # Adding element type (line 255)
    
    # Obtaining an instance of the builtin type 'tuple' (line 281)
    tuple_543965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 281, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 281)
    # Adding element type (line 281)
    int_543966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 281, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 281, 13), tuple_543965, int_543966)
    # Adding element type (line 281)
    float_543967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 281, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 281, 13), tuple_543965, float_543967)
    # Adding element type (line 281)
    # Getting the type of 'x' (line 281)
    x_543968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 24), 'x', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 281, 13), tuple_543965, x_543968)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 19), list_543864, tuple_543965)
    
    # Processing the call keyword arguments (line 255)
    kwargs_543969 = {}
    # Getting the type of 'pts' (line 255)
    pts_543862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 8), 'pts', False)
    # Obtaining the member 'extend' of a type (line 255)
    extend_543863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 8), pts_543862, 'extend')
    # Calling extend(args, kwargs) (line 255)
    extend_call_result_543970 = invoke(stypy.reporting.localization.Localization(__file__, 255, 8), extend_543863, *[list_543864], **kwargs_543969)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    

    @norecursion
    def mplegenp(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'mplegenp'
        module_type_store = module_type_store.open_function_context('mplegenp', 284, 4, False)
        
        # Passed parameters checking function
        mplegenp.stypy_localization = localization
        mplegenp.stypy_type_of_self = None
        mplegenp.stypy_type_store = module_type_store
        mplegenp.stypy_function_name = 'mplegenp'
        mplegenp.stypy_param_names_list = ['nu', 'mu', 'x']
        mplegenp.stypy_varargs_param_name = None
        mplegenp.stypy_kwargs_param_name = None
        mplegenp.stypy_call_defaults = defaults
        mplegenp.stypy_call_varargs = varargs
        mplegenp.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'mplegenp', ['nu', 'mu', 'x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'mplegenp', localization, ['nu', 'mu', 'x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'mplegenp(...)' code ##################

        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'mu' (line 285)
        mu_543971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 11), 'mu')
        
        # Call to int(...): (line 285)
        # Processing the call arguments (line 285)
        # Getting the type of 'mu' (line 285)
        mu_543973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 21), 'mu', False)
        # Processing the call keyword arguments (line 285)
        kwargs_543974 = {}
        # Getting the type of 'int' (line 285)
        int_543972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 17), 'int', False)
        # Calling int(args, kwargs) (line 285)
        int_call_result_543975 = invoke(stypy.reporting.localization.Localization(__file__, 285, 17), int_543972, *[mu_543973], **kwargs_543974)
        
        # Applying the binary operator '==' (line 285)
        result_eq_543976 = python_operator(stypy.reporting.localization.Localization(__file__, 285, 11), '==', mu_543971, int_call_result_543975)
        
        
        # Getting the type of 'x' (line 285)
        x_543977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 29), 'x')
        int_543978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 285, 34), 'int')
        # Applying the binary operator '==' (line 285)
        result_eq_543979 = python_operator(stypy.reporting.localization.Localization(__file__, 285, 29), '==', x_543977, int_543978)
        
        # Applying the binary operator 'and' (line 285)
        result_and_keyword_543980 = python_operator(stypy.reporting.localization.Localization(__file__, 285, 11), 'and', result_eq_543976, result_eq_543979)
        
        # Testing the type of an if condition (line 285)
        if_condition_543981 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 285, 8), result_and_keyword_543980)
        # Assigning a type to the variable 'if_condition_543981' (line 285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 8), 'if_condition_543981', if_condition_543981)
        # SSA begins for if statement (line 285)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'mu' (line 287)
        mu_543982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 15), 'mu')
        int_543983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 21), 'int')
        # Applying the binary operator '==' (line 287)
        result_eq_543984 = python_operator(stypy.reporting.localization.Localization(__file__, 287, 15), '==', mu_543982, int_543983)
        
        # Testing the type of an if condition (line 287)
        if_condition_543985 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 287, 12), result_eq_543984)
        # Assigning a type to the variable 'if_condition_543985' (line 287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 287, 12), 'if_condition_543985', if_condition_543985)
        # SSA begins for if statement (line 287)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        int_543986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 23), 'int')
        # Assigning a type to the variable 'stypy_return_type' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 16), 'stypy_return_type', int_543986)
        # SSA branch for the else part of an if statement (line 287)
        module_type_store.open_ssa_branch('else')
        int_543987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 290, 23), 'int')
        # Assigning a type to the variable 'stypy_return_type' (line 290)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 16), 'stypy_return_type', int_543987)
        # SSA join for if statement (line 287)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 285)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to legenp(...): (line 291)
        # Processing the call arguments (line 291)
        # Getting the type of 'nu' (line 291)
        nu_543990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 29), 'nu', False)
        # Getting the type of 'mu' (line 291)
        mu_543991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 33), 'mu', False)
        # Getting the type of 'x' (line 291)
        x_543992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 37), 'x', False)
        # Processing the call keyword arguments (line 291)
        kwargs_543993 = {}
        # Getting the type of 'mpmath' (line 291)
        mpmath_543988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 15), 'mpmath', False)
        # Obtaining the member 'legenp' of a type (line 291)
        legenp_543989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 291, 15), mpmath_543988, 'legenp')
        # Calling legenp(args, kwargs) (line 291)
        legenp_call_result_543994 = invoke(stypy.reporting.localization.Localization(__file__, 291, 15), legenp_543989, *[nu_543990, mu_543991, x_543992], **kwargs_543993)
        
        # Assigning a type to the variable 'stypy_return_type' (line 291)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 8), 'stypy_return_type', legenp_call_result_543994)
        
        # ################# End of 'mplegenp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'mplegenp' in the type store
        # Getting the type of 'stypy_return_type' (line 284)
        stypy_return_type_543995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_543995)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'mplegenp'
        return stypy_return_type_543995

    # Assigning a type to the variable 'mplegenp' (line 284)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 4), 'mplegenp', mplegenp)
    
    # Assigning a ListComp to a Name (line 293):
    
    # Assigning a ListComp to a Name (line 293):
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'pts' (line 293)
    pts_544014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 58), 'pts')
    comprehension_544015 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 293, 15), pts_544014)
    # Assigning a type to the variable 'p' (line 293)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 293, 15), 'p', comprehension_544015)
    # Getting the type of 'p' (line 293)
    p_543996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 15), 'p')
    
    # Obtaining an instance of the builtin type 'tuple' (line 293)
    tuple_543997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 293)
    # Adding element type (line 293)
    
    # Call to mplegenp(...): (line 293)
    # Processing the call arguments (line 293)
    
    # Obtaining the type of the subscript
    int_543999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 31), 'int')
    # Getting the type of 'p' (line 293)
    p_544000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 29), 'p', False)
    # Obtaining the member '__getitem__' of a type (line 293)
    getitem___544001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 29), p_544000, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 293)
    subscript_call_result_544002 = invoke(stypy.reporting.localization.Localization(__file__, 293, 29), getitem___544001, int_543999)
    
    
    # Obtaining the type of the subscript
    int_544003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 37), 'int')
    # Getting the type of 'p' (line 293)
    p_544004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 35), 'p', False)
    # Obtaining the member '__getitem__' of a type (line 293)
    getitem___544005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 35), p_544004, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 293)
    subscript_call_result_544006 = invoke(stypy.reporting.localization.Localization(__file__, 293, 35), getitem___544005, int_544003)
    
    
    # Obtaining the type of the subscript
    int_544007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 43), 'int')
    # Getting the type of 'p' (line 293)
    p_544008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 41), 'p', False)
    # Obtaining the member '__getitem__' of a type (line 293)
    getitem___544009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 41), p_544008, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 293)
    subscript_call_result_544010 = invoke(stypy.reporting.localization.Localization(__file__, 293, 41), getitem___544009, int_544007)
    
    # Processing the call keyword arguments (line 293)
    kwargs_544011 = {}
    # Getting the type of 'mplegenp' (line 293)
    mplegenp_543998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 20), 'mplegenp', False)
    # Calling mplegenp(args, kwargs) (line 293)
    mplegenp_call_result_544012 = invoke(stypy.reporting.localization.Localization(__file__, 293, 20), mplegenp_543998, *[subscript_call_result_544002, subscript_call_result_544006, subscript_call_result_544010], **kwargs_544011)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 293, 20), tuple_543997, mplegenp_call_result_544012)
    
    # Applying the binary operator '+' (line 293)
    result_add_544013 = python_operator(stypy.reporting.localization.Localization(__file__, 293, 15), '+', p_543996, tuple_543997)
    
    list_544016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 15), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 293, 15), list_544016, result_add_544013)
    # Assigning a type to the variable 'dataset' (line 293)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 293, 4), 'dataset', list_544016)
    
    # Assigning a Call to a Name (line 294):
    
    # Assigning a Call to a Name (line 294):
    
    # Call to array(...): (line 294)
    # Processing the call arguments (line 294)
    # Getting the type of 'dataset' (line 294)
    dataset_544019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 23), 'dataset', False)
    # Processing the call keyword arguments (line 294)
    # Getting the type of 'np' (line 294)
    np_544020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 38), 'np', False)
    # Obtaining the member 'float_' of a type (line 294)
    float__544021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 38), np_544020, 'float_')
    keyword_544022 = float__544021
    kwargs_544023 = {'dtype': keyword_544022}
    # Getting the type of 'np' (line 294)
    np_544017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 294)
    array_544018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 14), np_544017, 'array')
    # Calling array(args, kwargs) (line 294)
    array_call_result_544024 = invoke(stypy.reporting.localization.Localization(__file__, 294, 14), array_544018, *[dataset_544019], **kwargs_544023)
    
    # Assigning a type to the variable 'dataset' (line 294)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 4), 'dataset', array_call_result_544024)

    @norecursion
    def evf(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'evf'
        module_type_store = module_type_store.open_function_context('evf', 296, 4, False)
        
        # Passed parameters checking function
        evf.stypy_localization = localization
        evf.stypy_type_of_self = None
        evf.stypy_type_store = module_type_store
        evf.stypy_function_name = 'evf'
        evf.stypy_param_names_list = ['mu', 'nu', 'x']
        evf.stypy_varargs_param_name = None
        evf.stypy_kwargs_param_name = None
        evf.stypy_call_defaults = defaults
        evf.stypy_call_varargs = varargs
        evf.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'evf', ['mu', 'nu', 'x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'evf', localization, ['mu', 'nu', 'x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'evf(...)' code ##################

        
        # Call to lpmv(...): (line 297)
        # Processing the call arguments (line 297)
        
        # Call to astype(...): (line 297)
        # Processing the call arguments (line 297)
        # Getting the type of 'int' (line 297)
        int_544029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 33), 'int', False)
        # Processing the call keyword arguments (line 297)
        kwargs_544030 = {}
        # Getting the type of 'mu' (line 297)
        mu_544027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 23), 'mu', False)
        # Obtaining the member 'astype' of a type (line 297)
        astype_544028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 23), mu_544027, 'astype')
        # Calling astype(args, kwargs) (line 297)
        astype_call_result_544031 = invoke(stypy.reporting.localization.Localization(__file__, 297, 23), astype_544028, *[int_544029], **kwargs_544030)
        
        # Getting the type of 'nu' (line 297)
        nu_544032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 39), 'nu', False)
        # Getting the type of 'x' (line 297)
        x_544033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 43), 'x', False)
        # Processing the call keyword arguments (line 297)
        kwargs_544034 = {}
        # Getting the type of 'sc' (line 297)
        sc_544025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 15), 'sc', False)
        # Obtaining the member 'lpmv' of a type (line 297)
        lpmv_544026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 15), sc_544025, 'lpmv')
        # Calling lpmv(args, kwargs) (line 297)
        lpmv_call_result_544035 = invoke(stypy.reporting.localization.Localization(__file__, 297, 15), lpmv_544026, *[astype_call_result_544031, nu_544032, x_544033], **kwargs_544034)
        
        # Assigning a type to the variable 'stypy_return_type' (line 297)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 297, 8), 'stypy_return_type', lpmv_call_result_544035)
        
        # ################# End of 'evf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'evf' in the type store
        # Getting the type of 'stypy_return_type' (line 296)
        stypy_return_type_544036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_544036)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'evf'
        return stypy_return_type_544036

    # Assigning a type to the variable 'evf' (line 296)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 4), 'evf', evf)
    
    # Assigning a Call to a Name (line 299):
    
    # Assigning a Call to a Name (line 299):
    
    # Call to seterr(...): (line 299)
    # Processing the call keyword arguments (line 299)
    str_544039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 31), 'str', 'ignore')
    keyword_544040 = str_544039
    kwargs_544041 = {'invalid': keyword_544040}
    # Getting the type of 'np' (line 299)
    np_544037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 13), 'np', False)
    # Obtaining the member 'seterr' of a type (line 299)
    seterr_544038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 13), np_544037, 'seterr')
    # Calling seterr(args, kwargs) (line 299)
    seterr_call_result_544042 = invoke(stypy.reporting.localization.Localization(__file__, 299, 13), seterr_544038, *[], **kwargs_544041)
    
    # Assigning a type to the variable 'olderr' (line 299)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 4), 'olderr', seterr_call_result_544042)
    
    # Try-finally block (line 300)
    
    # Call to check(...): (line 301)
    # Processing the call keyword arguments (line 301)
    kwargs_544058 = {}
    
    # Call to FuncData(...): (line 301)
    # Processing the call arguments (line 301)
    # Getting the type of 'evf' (line 301)
    evf_544044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 17), 'evf', False)
    # Getting the type of 'dataset' (line 301)
    dataset_544045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 22), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 301)
    tuple_544046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 32), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 301)
    # Adding element type (line 301)
    int_544047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 32), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 32), tuple_544046, int_544047)
    # Adding element type (line 301)
    int_544048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 34), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 32), tuple_544046, int_544048)
    # Adding element type (line 301)
    int_544049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 36), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 32), tuple_544046, int_544049)
    
    int_544050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 40), 'int')
    # Processing the call keyword arguments (line 301)
    float_544051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 48), 'float')
    keyword_544052 = float_544051
    float_544053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 60), 'float')
    keyword_544054 = float_544053
    kwargs_544055 = {'rtol': keyword_544052, 'atol': keyword_544054}
    # Getting the type of 'FuncData' (line 301)
    FuncData_544043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 8), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 301)
    FuncData_call_result_544056 = invoke(stypy.reporting.localization.Localization(__file__, 301, 8), FuncData_544043, *[evf_544044, dataset_544045, tuple_544046, int_544050], **kwargs_544055)
    
    # Obtaining the member 'check' of a type (line 301)
    check_544057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 8), FuncData_call_result_544056, 'check')
    # Calling check(args, kwargs) (line 301)
    check_call_result_544059 = invoke(stypy.reporting.localization.Localization(__file__, 301, 8), check_544057, *[], **kwargs_544058)
    
    
    # finally branch of the try-finally block (line 300)
    
    # Call to seterr(...): (line 303)
    # Processing the call keyword arguments (line 303)
    # Getting the type of 'olderr' (line 303)
    olderr_544062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 20), 'olderr', False)
    kwargs_544063 = {'olderr_544062': olderr_544062}
    # Getting the type of 'np' (line 303)
    np_544060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'np', False)
    # Obtaining the member 'seterr' of a type (line 303)
    seterr_544061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 8), np_544060, 'seterr')
    # Calling seterr(args, kwargs) (line 303)
    seterr_call_result_544064 = invoke(stypy.reporting.localization.Localization(__file__, 303, 8), seterr_544061, *[], **kwargs_544063)
    
    
    
    # ################# End of 'test_lpmv(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_lpmv' in the type store
    # Getting the type of 'stypy_return_type' (line 251)
    stypy_return_type_544065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_544065)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_lpmv'
    return stypy_return_type_544065

# Assigning a type to the variable 'test_lpmv' (line 251)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 251, 0), 'test_lpmv', test_lpmv)

@norecursion
def test_beta(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_beta'
    module_type_store = module_type_store.open_function_context('test_beta', 310, 0, False)
    
    # Passed parameters checking function
    test_beta.stypy_localization = localization
    test_beta.stypy_type_of_self = None
    test_beta.stypy_type_store = module_type_store
    test_beta.stypy_function_name = 'test_beta'
    test_beta.stypy_param_names_list = []
    test_beta.stypy_varargs_param_name = None
    test_beta.stypy_kwargs_param_name = None
    test_beta.stypy_call_defaults = defaults
    test_beta.stypy_call_varargs = varargs
    test_beta.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_beta', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_beta', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_beta(...)' code ##################

    
    # Call to seed(...): (line 312)
    # Processing the call arguments (line 312)
    int_544069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 19), 'int')
    # Processing the call keyword arguments (line 312)
    kwargs_544070 = {}
    # Getting the type of 'np' (line 312)
    np_544066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 4), 'np', False)
    # Obtaining the member 'random' of a type (line 312)
    random_544067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 4), np_544066, 'random')
    # Obtaining the member 'seed' of a type (line 312)
    seed_544068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 4), random_544067, 'seed')
    # Calling seed(args, kwargs) (line 312)
    seed_call_result_544071 = invoke(stypy.reporting.localization.Localization(__file__, 312, 4), seed_544068, *[int_544069], **kwargs_544070)
    
    
    # Assigning a Subscript to a Name (line 314):
    
    # Assigning a Subscript to a Name (line 314):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 314)
    tuple_544072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 14), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 314)
    # Adding element type (line 314)
    
    # Call to logspace(...): (line 314)
    # Processing the call arguments (line 314)
    int_544075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 26), 'int')
    int_544076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 32), 'int')
    int_544077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 37), 'int')
    # Processing the call keyword arguments (line 314)
    kwargs_544078 = {}
    # Getting the type of 'np' (line 314)
    np_544073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 14), 'np', False)
    # Obtaining the member 'logspace' of a type (line 314)
    logspace_544074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 14), np_544073, 'logspace')
    # Calling logspace(args, kwargs) (line 314)
    logspace_call_result_544079 = invoke(stypy.reporting.localization.Localization(__file__, 314, 14), logspace_544074, *[int_544075, int_544076, int_544077], **kwargs_544078)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, logspace_call_result_544079)
    # Adding element type (line 314)
    
    # Call to logspace(...): (line 315)
    # Processing the call arguments (line 315)
    int_544082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 26), 'int')
    int_544083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 31), 'int')
    int_544084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 35), 'int')
    # Processing the call keyword arguments (line 315)
    kwargs_544085 = {}
    # Getting the type of 'np' (line 315)
    np_544080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 14), 'np', False)
    # Obtaining the member 'logspace' of a type (line 315)
    logspace_544081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 315, 14), np_544080, 'logspace')
    # Calling logspace(args, kwargs) (line 315)
    logspace_call_result_544086 = invoke(stypy.reporting.localization.Localization(__file__, 315, 14), logspace_544081, *[int_544082, int_544083, int_544084], **kwargs_544085)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, logspace_call_result_544086)
    # Adding element type (line 314)
    
    # Call to logspace(...): (line 316)
    # Processing the call arguments (line 316)
    int_544089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 26), 'int')
    int_544090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 30), 'int')
    int_544091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 33), 'int')
    # Processing the call keyword arguments (line 316)
    kwargs_544092 = {}
    # Getting the type of 'np' (line 316)
    np_544087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 14), 'np', False)
    # Obtaining the member 'logspace' of a type (line 316)
    logspace_544088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 14), np_544087, 'logspace')
    # Calling logspace(args, kwargs) (line 316)
    logspace_call_result_544093 = invoke(stypy.reporting.localization.Localization(__file__, 316, 14), logspace_544088, *[int_544089, int_544090, int_544091], **kwargs_544092)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, logspace_call_result_544093)
    # Adding element type (line 314)
    
    # Call to arange(...): (line 317)
    # Processing the call arguments (line 317)
    int_544096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 24), 'int')
    int_544097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 29), 'int')
    int_544098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 33), 'int')
    # Processing the call keyword arguments (line 317)
    kwargs_544099 = {}
    # Getting the type of 'np' (line 317)
    np_544094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 14), 'np', False)
    # Obtaining the member 'arange' of a type (line 317)
    arange_544095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 14), np_544094, 'arange')
    # Calling arange(args, kwargs) (line 317)
    arange_call_result_544100 = invoke(stypy.reporting.localization.Localization(__file__, 317, 14), arange_544095, *[int_544096, int_544097, int_544098], **kwargs_544099)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, arange_call_result_544100)
    # Adding element type (line 314)
    
    # Call to arange(...): (line 318)
    # Processing the call arguments (line 318)
    int_544103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 24), 'int')
    int_544104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 29), 'int')
    int_544105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 33), 'int')
    # Processing the call keyword arguments (line 318)
    kwargs_544106 = {}
    # Getting the type of 'np' (line 318)
    np_544101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 14), 'np', False)
    # Obtaining the member 'arange' of a type (line 318)
    arange_544102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 14), np_544101, 'arange')
    # Calling arange(args, kwargs) (line 318)
    arange_call_result_544107 = invoke(stypy.reporting.localization.Localization(__file__, 318, 14), arange_544102, *[int_544103, int_544104, int_544105], **kwargs_544106)
    
    float_544108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 38), 'float')
    # Applying the binary operator '+' (line 318)
    result_add_544109 = python_operator(stypy.reporting.localization.Localization(__file__, 318, 14), '+', arange_call_result_544107, float_544108)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, result_add_544109)
    # Adding element type (line 314)
    int_544110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 14), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, int_544110)
    # Adding element type (line 314)
    float_544111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 18), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, float_544111)
    # Adding element type (line 314)
    int_544112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 24), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, int_544112)
    # Adding element type (line 314)
    float_544113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 28), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, float_544113)
    # Adding element type (line 314)
    float_544114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 36), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 14), tuple_544072, float_544114)
    
    # Getting the type of 'np' (line 314)
    np_544115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'np')
    # Obtaining the member 'r_' of a type (line 314)
    r__544116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 8), np_544115, 'r_')
    # Obtaining the member '__getitem__' of a type (line 314)
    getitem___544117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 8), r__544116, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 314)
    subscript_call_result_544118 = invoke(stypy.reporting.localization.Localization(__file__, 314, 8), getitem___544117, tuple_544072)
    
    # Assigning a type to the variable 'b' (line 314)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 4), 'b', subscript_call_result_544118)
    
    # Assigning a Name to a Name (line 320):
    
    # Assigning a Name to a Name (line 320):
    # Getting the type of 'b' (line 320)
    b_544119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'b')
    # Assigning a type to the variable 'a' (line 320)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 4), 'a', b_544119)
    
    # Assigning a Attribute to a Name (line 322):
    
    # Assigning a Attribute to a Name (line 322):
    
    # Call to reshape(...): (line 322)
    # Processing the call arguments (line 322)
    int_544139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 69), 'int')
    int_544140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 72), 'int')
    # Processing the call keyword arguments (line 322)
    kwargs_544141 = {}
    
    # Call to array(...): (line 322)
    # Processing the call arguments (line 322)
    
    # Call to broadcast_arrays(...): (line 322)
    # Processing the call arguments (line 322)
    
    # Obtaining the type of the subscript
    slice_544124 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 322, 38), None, None, None)
    # Getting the type of 'None' (line 322)
    None_544125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 42), 'None', False)
    # Getting the type of 'a' (line 322)
    a_544126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 38), 'a', False)
    # Obtaining the member '__getitem__' of a type (line 322)
    getitem___544127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 38), a_544126, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 322)
    subscript_call_result_544128 = invoke(stypy.reporting.localization.Localization(__file__, 322, 38), getitem___544127, (slice_544124, None_544125))
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'None' (line 322)
    None_544129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 51), 'None', False)
    slice_544130 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 322, 49), None, None, None)
    # Getting the type of 'b' (line 322)
    b_544131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 49), 'b', False)
    # Obtaining the member '__getitem__' of a type (line 322)
    getitem___544132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 49), b_544131, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 322)
    subscript_call_result_544133 = invoke(stypy.reporting.localization.Localization(__file__, 322, 49), getitem___544132, (None_544129, slice_544130))
    
    # Processing the call keyword arguments (line 322)
    kwargs_544134 = {}
    # Getting the type of 'np' (line 322)
    np_544122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 18), 'np', False)
    # Obtaining the member 'broadcast_arrays' of a type (line 322)
    broadcast_arrays_544123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 18), np_544122, 'broadcast_arrays')
    # Calling broadcast_arrays(args, kwargs) (line 322)
    broadcast_arrays_call_result_544135 = invoke(stypy.reporting.localization.Localization(__file__, 322, 18), broadcast_arrays_544123, *[subscript_call_result_544128, subscript_call_result_544133], **kwargs_544134)
    
    # Processing the call keyword arguments (line 322)
    kwargs_544136 = {}
    # Getting the type of 'np' (line 322)
    np_544120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 9), 'np', False)
    # Obtaining the member 'array' of a type (line 322)
    array_544121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 9), np_544120, 'array')
    # Calling array(args, kwargs) (line 322)
    array_call_result_544137 = invoke(stypy.reporting.localization.Localization(__file__, 322, 9), array_544121, *[broadcast_arrays_call_result_544135], **kwargs_544136)
    
    # Obtaining the member 'reshape' of a type (line 322)
    reshape_544138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 9), array_call_result_544137, 'reshape')
    # Calling reshape(args, kwargs) (line 322)
    reshape_call_result_544142 = invoke(stypy.reporting.localization.Localization(__file__, 322, 9), reshape_544138, *[int_544139, int_544140], **kwargs_544141)
    
    # Obtaining the member 'T' of a type (line 322)
    T_544143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 9), reshape_call_result_544142, 'T')
    # Assigning a type to the variable 'ab' (line 322)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 4), 'ab', T_544143)
    
    # Assigning a Tuple to a Tuple (line 324):
    
    # Assigning a Attribute to a Name (line 324):
    # Getting the type of 'mpmath' (line 324)
    mpmath_544144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 24), 'mpmath')
    # Obtaining the member 'mp' of a type (line 324)
    mp_544145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 24), mpmath_544144, 'mp')
    # Obtaining the member 'dps' of a type (line 324)
    dps_544146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 24), mp_544145, 'dps')
    # Assigning a type to the variable 'tuple_assignment_542766' (line 324)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 4), 'tuple_assignment_542766', dps_544146)
    
    # Assigning a Attribute to a Name (line 324):
    # Getting the type of 'mpmath' (line 324)
    mpmath_544147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 39), 'mpmath')
    # Obtaining the member 'mp' of a type (line 324)
    mp_544148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 39), mpmath_544147, 'mp')
    # Obtaining the member 'prec' of a type (line 324)
    prec_544149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 39), mp_544148, 'prec')
    # Assigning a type to the variable 'tuple_assignment_542767' (line 324)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 4), 'tuple_assignment_542767', prec_544149)
    
    # Assigning a Name to a Name (line 324):
    # Getting the type of 'tuple_assignment_542766' (line 324)
    tuple_assignment_542766_544150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 4), 'tuple_assignment_542766')
    # Assigning a type to the variable 'old_dps' (line 324)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 4), 'old_dps', tuple_assignment_542766_544150)
    
    # Assigning a Name to a Name (line 324):
    # Getting the type of 'tuple_assignment_542767' (line 324)
    tuple_assignment_542767_544151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 4), 'tuple_assignment_542767')
    # Assigning a type to the variable 'old_prec' (line 324)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 13), 'old_prec', tuple_assignment_542767_544151)
    
    # Try-finally block (line 325)
    
    # Assigning a Num to a Attribute (line 326):
    
    # Assigning a Num to a Attribute (line 326):
    int_544152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 24), 'int')
    # Getting the type of 'mpmath' (line 326)
    mpmath_544153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 8), 'mpmath')
    # Obtaining the member 'mp' of a type (line 326)
    mp_544154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 8), mpmath_544153, 'mp')
    # Setting the type of the member 'dps' of a type (line 326)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 8), mp_544154, 'dps', int_544152)
    
    # Call to assert_func_equal(...): (line 328)
    # Processing the call arguments (line 328)
    # Getting the type of 'sc' (line 328)
    sc_544156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 26), 'sc', False)
    # Obtaining the member 'beta' of a type (line 328)
    beta_544157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 328, 26), sc_544156, 'beta')

    @norecursion
    def _stypy_temp_lambda_337(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_337'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_337', 329, 26, True)
        # Passed parameters checking function
        _stypy_temp_lambda_337.stypy_localization = localization
        _stypy_temp_lambda_337.stypy_type_of_self = None
        _stypy_temp_lambda_337.stypy_type_store = module_type_store
        _stypy_temp_lambda_337.stypy_function_name = '_stypy_temp_lambda_337'
        _stypy_temp_lambda_337.stypy_param_names_list = ['a', 'b']
        _stypy_temp_lambda_337.stypy_varargs_param_name = None
        _stypy_temp_lambda_337.stypy_kwargs_param_name = None
        _stypy_temp_lambda_337.stypy_call_defaults = defaults
        _stypy_temp_lambda_337.stypy_call_varargs = varargs
        _stypy_temp_lambda_337.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_337', ['a', 'b'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_337', ['a', 'b'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to float(...): (line 329)
        # Processing the call arguments (line 329)
        
        # Call to beta(...): (line 329)
        # Processing the call arguments (line 329)
        # Getting the type of 'a' (line 329)
        a_544161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 57), 'a', False)
        # Getting the type of 'b' (line 329)
        b_544162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 60), 'b', False)
        # Processing the call keyword arguments (line 329)
        kwargs_544163 = {}
        # Getting the type of 'mpmath' (line 329)
        mpmath_544159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 45), 'mpmath', False)
        # Obtaining the member 'beta' of a type (line 329)
        beta_544160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 45), mpmath_544159, 'beta')
        # Calling beta(args, kwargs) (line 329)
        beta_call_result_544164 = invoke(stypy.reporting.localization.Localization(__file__, 329, 45), beta_544160, *[a_544161, b_544162], **kwargs_544163)
        
        # Processing the call keyword arguments (line 329)
        kwargs_544165 = {}
        # Getting the type of 'float' (line 329)
        float_544158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 39), 'float', False)
        # Calling float(args, kwargs) (line 329)
        float_call_result_544166 = invoke(stypy.reporting.localization.Localization(__file__, 329, 39), float_544158, *[beta_call_result_544164], **kwargs_544165)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 329)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 26), 'stypy_return_type', float_call_result_544166)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_337' in the type store
        # Getting the type of 'stypy_return_type' (line 329)
        stypy_return_type_544167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 26), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_544167)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_337'
        return stypy_return_type_544167

    # Assigning a type to the variable '_stypy_temp_lambda_337' (line 329)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 26), '_stypy_temp_lambda_337', _stypy_temp_lambda_337)
    # Getting the type of '_stypy_temp_lambda_337' (line 329)
    _stypy_temp_lambda_337_544168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 26), '_stypy_temp_lambda_337')
    # Getting the type of 'ab' (line 330)
    ab_544169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 26), 'ab', False)
    # Processing the call keyword arguments (line 328)
    # Getting the type of 'False' (line 331)
    False_544170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 37), 'False', False)
    keyword_544171 = False_544170
    float_544172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, 31), 'float')
    keyword_544173 = float_544172
    # Getting the type of 'True' (line 333)
    True_544174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 42), 'True', False)
    keyword_544175 = True_544174
    kwargs_544176 = {'vectorized': keyword_544171, 'rtol': keyword_544173, 'ignore_inf_sign': keyword_544175}
    # Getting the type of 'assert_func_equal' (line 328)
    assert_func_equal_544155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 8), 'assert_func_equal', False)
    # Calling assert_func_equal(args, kwargs) (line 328)
    assert_func_equal_call_result_544177 = invoke(stypy.reporting.localization.Localization(__file__, 328, 8), assert_func_equal_544155, *[beta_544157, _stypy_temp_lambda_337_544168, ab_544169], **kwargs_544176)
    
    
    # Call to assert_func_equal(...): (line 335)
    # Processing the call arguments (line 335)
    # Getting the type of 'sc' (line 336)
    sc_544179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 12), 'sc', False)
    # Obtaining the member 'betaln' of a type (line 336)
    betaln_544180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 12), sc_544179, 'betaln')

    @norecursion
    def _stypy_temp_lambda_338(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_338'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_338', 337, 12, True)
        # Passed parameters checking function
        _stypy_temp_lambda_338.stypy_localization = localization
        _stypy_temp_lambda_338.stypy_type_of_self = None
        _stypy_temp_lambda_338.stypy_type_store = module_type_store
        _stypy_temp_lambda_338.stypy_function_name = '_stypy_temp_lambda_338'
        _stypy_temp_lambda_338.stypy_param_names_list = ['a', 'b']
        _stypy_temp_lambda_338.stypy_varargs_param_name = None
        _stypy_temp_lambda_338.stypy_kwargs_param_name = None
        _stypy_temp_lambda_338.stypy_call_defaults = defaults
        _stypy_temp_lambda_338.stypy_call_varargs = varargs
        _stypy_temp_lambda_338.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_338', ['a', 'b'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_338', ['a', 'b'], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to float(...): (line 337)
        # Processing the call arguments (line 337)
        
        # Call to log(...): (line 337)
        # Processing the call arguments (line 337)
        
        # Call to abs(...): (line 337)
        # Processing the call arguments (line 337)
        
        # Call to beta(...): (line 337)
        # Processing the call arguments (line 337)
        # Getting the type of 'a' (line 337)
        a_544187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 58), 'a', False)
        # Getting the type of 'b' (line 337)
        b_544188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 61), 'b', False)
        # Processing the call keyword arguments (line 337)
        kwargs_544189 = {}
        # Getting the type of 'mpmath' (line 337)
        mpmath_544185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 46), 'mpmath', False)
        # Obtaining the member 'beta' of a type (line 337)
        beta_544186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 46), mpmath_544185, 'beta')
        # Calling beta(args, kwargs) (line 337)
        beta_call_result_544190 = invoke(stypy.reporting.localization.Localization(__file__, 337, 46), beta_544186, *[a_544187, b_544188], **kwargs_544189)
        
        # Processing the call keyword arguments (line 337)
        kwargs_544191 = {}
        # Getting the type of 'abs' (line 337)
        abs_544184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 42), 'abs', False)
        # Calling abs(args, kwargs) (line 337)
        abs_call_result_544192 = invoke(stypy.reporting.localization.Localization(__file__, 337, 42), abs_544184, *[beta_call_result_544190], **kwargs_544191)
        
        # Processing the call keyword arguments (line 337)
        kwargs_544193 = {}
        # Getting the type of 'mpmath' (line 337)
        mpmath_544182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 31), 'mpmath', False)
        # Obtaining the member 'log' of a type (line 337)
        log_544183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 31), mpmath_544182, 'log')
        # Calling log(args, kwargs) (line 337)
        log_call_result_544194 = invoke(stypy.reporting.localization.Localization(__file__, 337, 31), log_544183, *[abs_call_result_544192], **kwargs_544193)
        
        # Processing the call keyword arguments (line 337)
        kwargs_544195 = {}
        # Getting the type of 'float' (line 337)
        float_544181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 25), 'float', False)
        # Calling float(args, kwargs) (line 337)
        float_call_result_544196 = invoke(stypy.reporting.localization.Localization(__file__, 337, 25), float_544181, *[log_call_result_544194], **kwargs_544195)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), 'stypy_return_type', float_call_result_544196)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_338' in the type store
        # Getting the type of 'stypy_return_type' (line 337)
        stypy_return_type_544197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_544197)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_338'
        return stypy_return_type_544197

    # Assigning a type to the variable '_stypy_temp_lambda_338' (line 337)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), '_stypy_temp_lambda_338', _stypy_temp_lambda_338)
    # Getting the type of '_stypy_temp_lambda_338' (line 337)
    _stypy_temp_lambda_338_544198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), '_stypy_temp_lambda_338')
    # Getting the type of 'ab' (line 338)
    ab_544199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 12), 'ab', False)
    # Processing the call keyword arguments (line 335)
    # Getting the type of 'False' (line 339)
    False_544200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 23), 'False', False)
    keyword_544201 = False_544200
    float_544202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 17), 'float')
    keyword_544203 = float_544202
    kwargs_544204 = {'vectorized': keyword_544201, 'rtol': keyword_544203}
    # Getting the type of 'assert_func_equal' (line 335)
    assert_func_equal_544178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 8), 'assert_func_equal', False)
    # Calling assert_func_equal(args, kwargs) (line 335)
    assert_func_equal_call_result_544205 = invoke(stypy.reporting.localization.Localization(__file__, 335, 8), assert_func_equal_544178, *[betaln_544180, _stypy_temp_lambda_338_544198, ab_544199], **kwargs_544204)
    
    
    # finally branch of the try-finally block (line 325)
    
    # Assigning a Tuple to a Tuple (line 342):
    
    # Assigning a Name to a Name (line 342):
    # Getting the type of 'old_dps' (line 342)
    old_dps_544206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 40), 'old_dps')
    # Assigning a type to the variable 'tuple_assignment_542768' (line 342)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'tuple_assignment_542768', old_dps_544206)
    
    # Assigning a Name to a Name (line 342):
    # Getting the type of 'old_prec' (line 342)
    old_prec_544207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 49), 'old_prec')
    # Assigning a type to the variable 'tuple_assignment_542769' (line 342)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'tuple_assignment_542769', old_prec_544207)
    
    # Assigning a Name to a Attribute (line 342):
    # Getting the type of 'tuple_assignment_542768' (line 342)
    tuple_assignment_542768_544208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'tuple_assignment_542768')
    # Getting the type of 'mpmath' (line 342)
    mpmath_544209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'mpmath')
    # Obtaining the member 'mp' of a type (line 342)
    mp_544210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 8), mpmath_544209, 'mp')
    # Setting the type of the member 'dps' of a type (line 342)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 8), mp_544210, 'dps', tuple_assignment_542768_544208)
    
    # Assigning a Name to a Attribute (line 342):
    # Getting the type of 'tuple_assignment_542769' (line 342)
    tuple_assignment_542769_544211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'tuple_assignment_542769')
    # Getting the type of 'mpmath' (line 342)
    mpmath_544212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 23), 'mpmath')
    # Obtaining the member 'mp' of a type (line 342)
    mp_544213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 23), mpmath_544212, 'mp')
    # Setting the type of the member 'prec' of a type (line 342)
    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 23), mp_544213, 'prec', tuple_assignment_542769_544211)
    
    
    # ################# End of 'test_beta(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_beta' in the type store
    # Getting the type of 'stypy_return_type' (line 310)
    stypy_return_type_544214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_544214)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_beta'
    return stypy_return_type_544214

# Assigning a type to the variable 'test_beta' (line 310)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 310, 0), 'test_beta', test_beta)

# Assigning a Num to a Name (line 349):

# Assigning a Num to a Name (line 349):
float_544215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 25), 'float')
# Assigning a type to the variable 'LOGGAMMA_TAYLOR_RADIUS' (line 349)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 0), 'LOGGAMMA_TAYLOR_RADIUS', float_544215)

@norecursion
def test_loggamma_taylor_transition(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_loggamma_taylor_transition'
    module_type_store = module_type_store.open_function_context('test_loggamma_taylor_transition', 352, 0, False)
    
    # Passed parameters checking function
    test_loggamma_taylor_transition.stypy_localization = localization
    test_loggamma_taylor_transition.stypy_type_of_self = None
    test_loggamma_taylor_transition.stypy_type_store = module_type_store
    test_loggamma_taylor_transition.stypy_function_name = 'test_loggamma_taylor_transition'
    test_loggamma_taylor_transition.stypy_param_names_list = []
    test_loggamma_taylor_transition.stypy_varargs_param_name = None
    test_loggamma_taylor_transition.stypy_kwargs_param_name = None
    test_loggamma_taylor_transition.stypy_call_defaults = defaults
    test_loggamma_taylor_transition.stypy_call_varargs = varargs
    test_loggamma_taylor_transition.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_loggamma_taylor_transition', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_loggamma_taylor_transition', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_loggamma_taylor_transition(...)' code ##################

    
    # Assigning a BinOp to a Name (line 357):
    
    # Assigning a BinOp to a Name (line 357):
    # Getting the type of 'LOGGAMMA_TAYLOR_RADIUS' (line 357)
    LOGGAMMA_TAYLOR_RADIUS_544216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 8), 'LOGGAMMA_TAYLOR_RADIUS')
    
    # Call to array(...): (line 357)
    # Processing the call arguments (line 357)
    
    # Obtaining an instance of the builtin type 'list' (line 357)
    list_544219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 42), 'list')
    # Adding type elements to the builtin type 'list' instance (line 357)
    # Adding element type (line 357)
    float_544220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 43), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 357, 42), list_544219, float_544220)
    # Adding element type (line 357)
    float_544221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 49), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 357, 42), list_544219, float_544221)
    # Adding element type (line 357)
    int_544222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 56), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 357, 42), list_544219, int_544222)
    # Adding element type (line 357)
    float_544223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 59), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 357, 42), list_544219, float_544223)
    # Adding element type (line 357)
    float_544224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 65), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 357, 42), list_544219, float_544224)
    
    # Processing the call keyword arguments (line 357)
    kwargs_544225 = {}
    # Getting the type of 'np' (line 357)
    np_544217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 33), 'np', False)
    # Obtaining the member 'array' of a type (line 357)
    array_544218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 33), np_544217, 'array')
    # Calling array(args, kwargs) (line 357)
    array_call_result_544226 = invoke(stypy.reporting.localization.Localization(__file__, 357, 33), array_544218, *[list_544219], **kwargs_544225)
    
    # Applying the binary operator '+' (line 357)
    result_add_544227 = python_operator(stypy.reporting.localization.Localization(__file__, 357, 8), '+', LOGGAMMA_TAYLOR_RADIUS_544216, array_call_result_544226)
    
    # Assigning a type to the variable 'r' (line 357)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 4), 'r', result_add_544227)
    
    # Assigning a Call to a Name (line 358):
    
    # Assigning a Call to a Name (line 358):
    
    # Call to linspace(...): (line 358)
    # Processing the call arguments (line 358)
    int_544230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 24), 'int')
    int_544231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 27), 'int')
    # Getting the type of 'np' (line 358)
    np_544232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 29), 'np', False)
    # Obtaining the member 'pi' of a type (line 358)
    pi_544233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 29), np_544232, 'pi')
    # Applying the binary operator '*' (line 358)
    result_mul_544234 = python_operator(stypy.reporting.localization.Localization(__file__, 358, 27), '*', int_544231, pi_544233)
    
    int_544235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 36), 'int')
    # Processing the call keyword arguments (line 358)
    kwargs_544236 = {}
    # Getting the type of 'np' (line 358)
    np_544228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'np', False)
    # Obtaining the member 'linspace' of a type (line 358)
    linspace_544229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 12), np_544228, 'linspace')
    # Calling linspace(args, kwargs) (line 358)
    linspace_call_result_544237 = invoke(stypy.reporting.localization.Localization(__file__, 358, 12), linspace_544229, *[int_544230, result_mul_544234, int_544235], **kwargs_544236)
    
    # Assigning a type to the variable 'theta' (line 358)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 4), 'theta', linspace_call_result_544237)
    
    # Assigning a Call to a Tuple (line 359):
    
    # Assigning a Subscript to a Name (line 359):
    
    # Obtaining the type of the subscript
    int_544238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 4), 'int')
    
    # Call to meshgrid(...): (line 359)
    # Processing the call arguments (line 359)
    # Getting the type of 'r' (line 359)
    r_544241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 27), 'r', False)
    # Getting the type of 'theta' (line 359)
    theta_544242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 30), 'theta', False)
    # Processing the call keyword arguments (line 359)
    kwargs_544243 = {}
    # Getting the type of 'np' (line 359)
    np_544239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 15), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 359)
    meshgrid_544240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 359, 15), np_544239, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 359)
    meshgrid_call_result_544244 = invoke(stypy.reporting.localization.Localization(__file__, 359, 15), meshgrid_544240, *[r_544241, theta_544242], **kwargs_544243)
    
    # Obtaining the member '__getitem__' of a type (line 359)
    getitem___544245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 359, 4), meshgrid_call_result_544244, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 359)
    subscript_call_result_544246 = invoke(stypy.reporting.localization.Localization(__file__, 359, 4), getitem___544245, int_544238)
    
    # Assigning a type to the variable 'tuple_var_assignment_542770' (line 359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'tuple_var_assignment_542770', subscript_call_result_544246)
    
    # Assigning a Subscript to a Name (line 359):
    
    # Obtaining the type of the subscript
    int_544247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 4), 'int')
    
    # Call to meshgrid(...): (line 359)
    # Processing the call arguments (line 359)
    # Getting the type of 'r' (line 359)
    r_544250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 27), 'r', False)
    # Getting the type of 'theta' (line 359)
    theta_544251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 30), 'theta', False)
    # Processing the call keyword arguments (line 359)
    kwargs_544252 = {}
    # Getting the type of 'np' (line 359)
    np_544248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 15), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 359)
    meshgrid_544249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 359, 15), np_544248, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 359)
    meshgrid_call_result_544253 = invoke(stypy.reporting.localization.Localization(__file__, 359, 15), meshgrid_544249, *[r_544250, theta_544251], **kwargs_544252)
    
    # Obtaining the member '__getitem__' of a type (line 359)
    getitem___544254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 359, 4), meshgrid_call_result_544253, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 359)
    subscript_call_result_544255 = invoke(stypy.reporting.localization.Localization(__file__, 359, 4), getitem___544254, int_544247)
    
    # Assigning a type to the variable 'tuple_var_assignment_542771' (line 359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'tuple_var_assignment_542771', subscript_call_result_544255)
    
    # Assigning a Name to a Name (line 359):
    # Getting the type of 'tuple_var_assignment_542770' (line 359)
    tuple_var_assignment_542770_544256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'tuple_var_assignment_542770')
    # Assigning a type to the variable 'r' (line 359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'r', tuple_var_assignment_542770_544256)
    
    # Assigning a Name to a Name (line 359):
    # Getting the type of 'tuple_var_assignment_542771' (line 359)
    tuple_var_assignment_542771_544257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 4), 'tuple_var_assignment_542771')
    # Assigning a type to the variable 'theta' (line 359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 7), 'theta', tuple_var_assignment_542771_544257)
    
    # Assigning a BinOp to a Name (line 360):
    
    # Assigning a BinOp to a Name (line 360):
    # Getting the type of 'r' (line 360)
    r_544258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 9), 'r')
    
    # Call to exp(...): (line 360)
    # Processing the call arguments (line 360)
    complex_544261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 18), 'complex')
    # Getting the type of 'theta' (line 360)
    theta_544262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 21), 'theta', False)
    # Applying the binary operator '*' (line 360)
    result_mul_544263 = python_operator(stypy.reporting.localization.Localization(__file__, 360, 18), '*', complex_544261, theta_544262)
    
    # Processing the call keyword arguments (line 360)
    kwargs_544264 = {}
    # Getting the type of 'np' (line 360)
    np_544259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 11), 'np', False)
    # Obtaining the member 'exp' of a type (line 360)
    exp_544260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 11), np_544259, 'exp')
    # Calling exp(args, kwargs) (line 360)
    exp_call_result_544265 = invoke(stypy.reporting.localization.Localization(__file__, 360, 11), exp_544260, *[result_mul_544263], **kwargs_544264)
    
    # Applying the binary operator '*' (line 360)
    result_mul_544266 = python_operator(stypy.reporting.localization.Localization(__file__, 360, 9), '*', r_544258, exp_call_result_544265)
    
    # Assigning a type to the variable 'dz' (line 360)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 4), 'dz', result_mul_544266)
    
    # Assigning a Call to a Name (line 361):
    
    # Assigning a Call to a Name (line 361):
    
    # Call to flatten(...): (line 361)
    # Processing the call keyword arguments (line 361)
    kwargs_544279 = {}
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 361)
    tuple_544267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 14), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 361)
    # Adding element type (line 361)
    int_544268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 14), 'int')
    # Getting the type of 'dz' (line 361)
    dz_544269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 18), 'dz', False)
    # Applying the binary operator '+' (line 361)
    result_add_544270 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 14), '+', int_544268, dz_544269)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 361, 14), tuple_544267, result_add_544270)
    # Adding element type (line 361)
    int_544271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 22), 'int')
    # Getting the type of 'dz' (line 361)
    dz_544272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 26), 'dz', False)
    # Applying the binary operator '+' (line 361)
    result_add_544273 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 22), '+', int_544271, dz_544272)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 361, 14), tuple_544267, result_add_544273)
    
    # Getting the type of 'np' (line 361)
    np_544274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 8), 'np', False)
    # Obtaining the member 'r_' of a type (line 361)
    r__544275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 361, 8), np_544274, 'r_')
    # Obtaining the member '__getitem__' of a type (line 361)
    getitem___544276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 361, 8), r__544275, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 361)
    subscript_call_result_544277 = invoke(stypy.reporting.localization.Localization(__file__, 361, 8), getitem___544276, tuple_544267)
    
    # Obtaining the member 'flatten' of a type (line 361)
    flatten_544278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 361, 8), subscript_call_result_544277, 'flatten')
    # Calling flatten(args, kwargs) (line 361)
    flatten_call_result_544280 = invoke(stypy.reporting.localization.Localization(__file__, 361, 8), flatten_544278, *[], **kwargs_544279)
    
    # Assigning a type to the variable 'z' (line 361)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 4), 'z', flatten_call_result_544280)
    
    # Assigning a List to a Name (line 363):
    
    # Assigning a List to a Name (line 363):
    
    # Obtaining an instance of the builtin type 'list' (line 363)
    list_544281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 363)
    
    # Assigning a type to the variable 'dataset' (line 363)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 4), 'dataset', list_544281)
    
    # Getting the type of 'z' (line 364)
    z_544282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 14), 'z')
    # Testing the type of a for loop iterable (line 364)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 364, 4), z_544282)
    # Getting the type of the for loop variable (line 364)
    for_loop_var_544283 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 364, 4), z_544282)
    # Assigning a type to the variable 'z0' (line 364)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 4), 'z0', for_loop_var_544283)
    # SSA begins for a for statement (line 364)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 365)
    # Processing the call arguments (line 365)
    
    # Obtaining an instance of the builtin type 'tuple' (line 365)
    tuple_544286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 365)
    # Adding element type (line 365)
    # Getting the type of 'z0' (line 365)
    z0_544287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 24), 'z0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 365, 24), tuple_544286, z0_544287)
    # Adding element type (line 365)
    
    # Call to complex(...): (line 365)
    # Processing the call arguments (line 365)
    
    # Call to loggamma(...): (line 365)
    # Processing the call arguments (line 365)
    # Getting the type of 'z0' (line 365)
    z0_544291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 52), 'z0', False)
    # Processing the call keyword arguments (line 365)
    kwargs_544292 = {}
    # Getting the type of 'mpmath' (line 365)
    mpmath_544289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 36), 'mpmath', False)
    # Obtaining the member 'loggamma' of a type (line 365)
    loggamma_544290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 36), mpmath_544289, 'loggamma')
    # Calling loggamma(args, kwargs) (line 365)
    loggamma_call_result_544293 = invoke(stypy.reporting.localization.Localization(__file__, 365, 36), loggamma_544290, *[z0_544291], **kwargs_544292)
    
    # Processing the call keyword arguments (line 365)
    kwargs_544294 = {}
    # Getting the type of 'complex' (line 365)
    complex_544288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 28), 'complex', False)
    # Calling complex(args, kwargs) (line 365)
    complex_call_result_544295 = invoke(stypy.reporting.localization.Localization(__file__, 365, 28), complex_544288, *[loggamma_call_result_544293], **kwargs_544294)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 365, 24), tuple_544286, complex_call_result_544295)
    
    # Processing the call keyword arguments (line 365)
    kwargs_544296 = {}
    # Getting the type of 'dataset' (line 365)
    dataset_544284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 8), 'dataset', False)
    # Obtaining the member 'append' of a type (line 365)
    append_544285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 8), dataset_544284, 'append')
    # Calling append(args, kwargs) (line 365)
    append_call_result_544297 = invoke(stypy.reporting.localization.Localization(__file__, 365, 8), append_544285, *[tuple_544286], **kwargs_544296)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 366):
    
    # Assigning a Call to a Name (line 366):
    
    # Call to array(...): (line 366)
    # Processing the call arguments (line 366)
    # Getting the type of 'dataset' (line 366)
    dataset_544300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 23), 'dataset', False)
    # Processing the call keyword arguments (line 366)
    kwargs_544301 = {}
    # Getting the type of 'np' (line 366)
    np_544298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 366)
    array_544299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 14), np_544298, 'array')
    # Calling array(args, kwargs) (line 366)
    array_call_result_544302 = invoke(stypy.reporting.localization.Localization(__file__, 366, 14), array_544299, *[dataset_544300], **kwargs_544301)
    
    # Assigning a type to the variable 'dataset' (line 366)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 4), 'dataset', array_call_result_544302)
    
    # Call to check(...): (line 368)
    # Processing the call keyword arguments (line 368)
    kwargs_544314 = {}
    
    # Call to FuncData(...): (line 368)
    # Processing the call arguments (line 368)
    # Getting the type of 'sc' (line 368)
    sc_544304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 13), 'sc', False)
    # Obtaining the member 'loggamma' of a type (line 368)
    loggamma_544305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 13), sc_544304, 'loggamma')
    # Getting the type of 'dataset' (line 368)
    dataset_544306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 26), 'dataset', False)
    int_544307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 35), 'int')
    int_544308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 38), 'int')
    # Processing the call keyword arguments (line 368)
    float_544309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 46), 'float')
    keyword_544310 = float_544309
    kwargs_544311 = {'rtol': keyword_544310}
    # Getting the type of 'FuncData' (line 368)
    FuncData_544303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 368)
    FuncData_call_result_544312 = invoke(stypy.reporting.localization.Localization(__file__, 368, 4), FuncData_544303, *[loggamma_544305, dataset_544306, int_544307, int_544308], **kwargs_544311)
    
    # Obtaining the member 'check' of a type (line 368)
    check_544313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 4), FuncData_call_result_544312, 'check')
    # Calling check(args, kwargs) (line 368)
    check_call_result_544315 = invoke(stypy.reporting.localization.Localization(__file__, 368, 4), check_544313, *[], **kwargs_544314)
    
    
    # ################# End of 'test_loggamma_taylor_transition(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_loggamma_taylor_transition' in the type store
    # Getting the type of 'stypy_return_type' (line 352)
    stypy_return_type_544316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_544316)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_loggamma_taylor_transition'
    return stypy_return_type_544316

# Assigning a type to the variable 'test_loggamma_taylor_transition' (line 352)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 0), 'test_loggamma_taylor_transition', test_loggamma_taylor_transition)

@norecursion
def test_loggamma_taylor(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_loggamma_taylor'
    module_type_store = module_type_store.open_function_context('test_loggamma_taylor', 371, 0, False)
    
    # Passed parameters checking function
    test_loggamma_taylor.stypy_localization = localization
    test_loggamma_taylor.stypy_type_of_self = None
    test_loggamma_taylor.stypy_type_store = module_type_store
    test_loggamma_taylor.stypy_function_name = 'test_loggamma_taylor'
    test_loggamma_taylor.stypy_param_names_list = []
    test_loggamma_taylor.stypy_varargs_param_name = None
    test_loggamma_taylor.stypy_kwargs_param_name = None
    test_loggamma_taylor.stypy_call_defaults = defaults
    test_loggamma_taylor.stypy_call_varargs = varargs
    test_loggamma_taylor.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_loggamma_taylor', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_loggamma_taylor', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_loggamma_taylor(...)' code ##################

    
    # Assigning a Call to a Name (line 375):
    
    # Assigning a Call to a Name (line 375):
    
    # Call to logspace(...): (line 375)
    # Processing the call arguments (line 375)
    int_544319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 375, 20), 'int')
    
    # Call to log10(...): (line 375)
    # Processing the call arguments (line 375)
    # Getting the type of 'LOGGAMMA_TAYLOR_RADIUS' (line 375)
    LOGGAMMA_TAYLOR_RADIUS_544322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 34), 'LOGGAMMA_TAYLOR_RADIUS', False)
    # Processing the call keyword arguments (line 375)
    kwargs_544323 = {}
    # Getting the type of 'np' (line 375)
    np_544320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 25), 'np', False)
    # Obtaining the member 'log10' of a type (line 375)
    log10_544321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 25), np_544320, 'log10')
    # Calling log10(args, kwargs) (line 375)
    log10_call_result_544324 = invoke(stypy.reporting.localization.Localization(__file__, 375, 25), log10_544321, *[LOGGAMMA_TAYLOR_RADIUS_544322], **kwargs_544323)
    
    int_544325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 375, 59), 'int')
    # Processing the call keyword arguments (line 375)
    kwargs_544326 = {}
    # Getting the type of 'np' (line 375)
    np_544317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 8), 'np', False)
    # Obtaining the member 'logspace' of a type (line 375)
    logspace_544318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 8), np_544317, 'logspace')
    # Calling logspace(args, kwargs) (line 375)
    logspace_call_result_544327 = invoke(stypy.reporting.localization.Localization(__file__, 375, 8), logspace_544318, *[int_544319, log10_call_result_544324, int_544325], **kwargs_544326)
    
    # Assigning a type to the variable 'r' (line 375)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 4), 'r', logspace_call_result_544327)
    
    # Assigning a Call to a Name (line 376):
    
    # Assigning a Call to a Name (line 376):
    
    # Call to linspace(...): (line 376)
    # Processing the call arguments (line 376)
    int_544330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 24), 'int')
    int_544331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 27), 'int')
    # Getting the type of 'np' (line 376)
    np_544332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 29), 'np', False)
    # Obtaining the member 'pi' of a type (line 376)
    pi_544333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 29), np_544332, 'pi')
    # Applying the binary operator '*' (line 376)
    result_mul_544334 = python_operator(stypy.reporting.localization.Localization(__file__, 376, 27), '*', int_544331, pi_544333)
    
    int_544335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 36), 'int')
    # Processing the call keyword arguments (line 376)
    kwargs_544336 = {}
    # Getting the type of 'np' (line 376)
    np_544328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'np', False)
    # Obtaining the member 'linspace' of a type (line 376)
    linspace_544329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 12), np_544328, 'linspace')
    # Calling linspace(args, kwargs) (line 376)
    linspace_call_result_544337 = invoke(stypy.reporting.localization.Localization(__file__, 376, 12), linspace_544329, *[int_544330, result_mul_544334, int_544335], **kwargs_544336)
    
    # Assigning a type to the variable 'theta' (line 376)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 4), 'theta', linspace_call_result_544337)
    
    # Assigning a Call to a Tuple (line 377):
    
    # Assigning a Subscript to a Name (line 377):
    
    # Obtaining the type of the subscript
    int_544338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 4), 'int')
    
    # Call to meshgrid(...): (line 377)
    # Processing the call arguments (line 377)
    # Getting the type of 'r' (line 377)
    r_544341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 27), 'r', False)
    # Getting the type of 'theta' (line 377)
    theta_544342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 30), 'theta', False)
    # Processing the call keyword arguments (line 377)
    kwargs_544343 = {}
    # Getting the type of 'np' (line 377)
    np_544339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 15), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 377)
    meshgrid_544340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 15), np_544339, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 377)
    meshgrid_call_result_544344 = invoke(stypy.reporting.localization.Localization(__file__, 377, 15), meshgrid_544340, *[r_544341, theta_544342], **kwargs_544343)
    
    # Obtaining the member '__getitem__' of a type (line 377)
    getitem___544345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 4), meshgrid_call_result_544344, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 377)
    subscript_call_result_544346 = invoke(stypy.reporting.localization.Localization(__file__, 377, 4), getitem___544345, int_544338)
    
    # Assigning a type to the variable 'tuple_var_assignment_542772' (line 377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 4), 'tuple_var_assignment_542772', subscript_call_result_544346)
    
    # Assigning a Subscript to a Name (line 377):
    
    # Obtaining the type of the subscript
    int_544347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 4), 'int')
    
    # Call to meshgrid(...): (line 377)
    # Processing the call arguments (line 377)
    # Getting the type of 'r' (line 377)
    r_544350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 27), 'r', False)
    # Getting the type of 'theta' (line 377)
    theta_544351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 30), 'theta', False)
    # Processing the call keyword arguments (line 377)
    kwargs_544352 = {}
    # Getting the type of 'np' (line 377)
    np_544348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 15), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 377)
    meshgrid_544349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 15), np_544348, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 377)
    meshgrid_call_result_544353 = invoke(stypy.reporting.localization.Localization(__file__, 377, 15), meshgrid_544349, *[r_544350, theta_544351], **kwargs_544352)
    
    # Obtaining the member '__getitem__' of a type (line 377)
    getitem___544354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 4), meshgrid_call_result_544353, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 377)
    subscript_call_result_544355 = invoke(stypy.reporting.localization.Localization(__file__, 377, 4), getitem___544354, int_544347)
    
    # Assigning a type to the variable 'tuple_var_assignment_542773' (line 377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 4), 'tuple_var_assignment_542773', subscript_call_result_544355)
    
    # Assigning a Name to a Name (line 377):
    # Getting the type of 'tuple_var_assignment_542772' (line 377)
    tuple_var_assignment_542772_544356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 4), 'tuple_var_assignment_542772')
    # Assigning a type to the variable 'r' (line 377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 4), 'r', tuple_var_assignment_542772_544356)
    
    # Assigning a Name to a Name (line 377):
    # Getting the type of 'tuple_var_assignment_542773' (line 377)
    tuple_var_assignment_542773_544357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 4), 'tuple_var_assignment_542773')
    # Assigning a type to the variable 'theta' (line 377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 7), 'theta', tuple_var_assignment_542773_544357)
    
    # Assigning a BinOp to a Name (line 378):
    
    # Assigning a BinOp to a Name (line 378):
    # Getting the type of 'r' (line 378)
    r_544358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 9), 'r')
    
    # Call to exp(...): (line 378)
    # Processing the call arguments (line 378)
    complex_544361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 18), 'complex')
    # Getting the type of 'theta' (line 378)
    theta_544362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 21), 'theta', False)
    # Applying the binary operator '*' (line 378)
    result_mul_544363 = python_operator(stypy.reporting.localization.Localization(__file__, 378, 18), '*', complex_544361, theta_544362)
    
    # Processing the call keyword arguments (line 378)
    kwargs_544364 = {}
    # Getting the type of 'np' (line 378)
    np_544359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 11), 'np', False)
    # Obtaining the member 'exp' of a type (line 378)
    exp_544360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 11), np_544359, 'exp')
    # Calling exp(args, kwargs) (line 378)
    exp_call_result_544365 = invoke(stypy.reporting.localization.Localization(__file__, 378, 11), exp_544360, *[result_mul_544363], **kwargs_544364)
    
    # Applying the binary operator '*' (line 378)
    result_mul_544366 = python_operator(stypy.reporting.localization.Localization(__file__, 378, 9), '*', r_544358, exp_call_result_544365)
    
    # Assigning a type to the variable 'dz' (line 378)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 4), 'dz', result_mul_544366)
    
    # Assigning a Call to a Name (line 379):
    
    # Assigning a Call to a Name (line 379):
    
    # Call to flatten(...): (line 379)
    # Processing the call keyword arguments (line 379)
    kwargs_544379 = {}
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 379)
    tuple_544367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 14), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 379)
    # Adding element type (line 379)
    int_544368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 14), 'int')
    # Getting the type of 'dz' (line 379)
    dz_544369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 18), 'dz', False)
    # Applying the binary operator '+' (line 379)
    result_add_544370 = python_operator(stypy.reporting.localization.Localization(__file__, 379, 14), '+', int_544368, dz_544369)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 379, 14), tuple_544367, result_add_544370)
    # Adding element type (line 379)
    int_544371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 22), 'int')
    # Getting the type of 'dz' (line 379)
    dz_544372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 26), 'dz', False)
    # Applying the binary operator '+' (line 379)
    result_add_544373 = python_operator(stypy.reporting.localization.Localization(__file__, 379, 22), '+', int_544371, dz_544372)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 379, 14), tuple_544367, result_add_544373)
    
    # Getting the type of 'np' (line 379)
    np_544374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 8), 'np', False)
    # Obtaining the member 'r_' of a type (line 379)
    r__544375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 8), np_544374, 'r_')
    # Obtaining the member '__getitem__' of a type (line 379)
    getitem___544376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 8), r__544375, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 379)
    subscript_call_result_544377 = invoke(stypy.reporting.localization.Localization(__file__, 379, 8), getitem___544376, tuple_544367)
    
    # Obtaining the member 'flatten' of a type (line 379)
    flatten_544378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 8), subscript_call_result_544377, 'flatten')
    # Calling flatten(args, kwargs) (line 379)
    flatten_call_result_544380 = invoke(stypy.reporting.localization.Localization(__file__, 379, 8), flatten_544378, *[], **kwargs_544379)
    
    # Assigning a type to the variable 'z' (line 379)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 4), 'z', flatten_call_result_544380)
    
    # Assigning a List to a Name (line 381):
    
    # Assigning a List to a Name (line 381):
    
    # Obtaining an instance of the builtin type 'list' (line 381)
    list_544381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 381)
    
    # Assigning a type to the variable 'dataset' (line 381)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 4), 'dataset', list_544381)
    
    # Getting the type of 'z' (line 382)
    z_544382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 14), 'z')
    # Testing the type of a for loop iterable (line 382)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 382, 4), z_544382)
    # Getting the type of the for loop variable (line 382)
    for_loop_var_544383 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 382, 4), z_544382)
    # Assigning a type to the variable 'z0' (line 382)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 382, 4), 'z0', for_loop_var_544383)
    # SSA begins for a for statement (line 382)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 383)
    # Processing the call arguments (line 383)
    
    # Obtaining an instance of the builtin type 'tuple' (line 383)
    tuple_544386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 383)
    # Adding element type (line 383)
    # Getting the type of 'z0' (line 383)
    z0_544387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 24), 'z0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 383, 24), tuple_544386, z0_544387)
    # Adding element type (line 383)
    
    # Call to complex(...): (line 383)
    # Processing the call arguments (line 383)
    
    # Call to loggamma(...): (line 383)
    # Processing the call arguments (line 383)
    # Getting the type of 'z0' (line 383)
    z0_544391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 52), 'z0', False)
    # Processing the call keyword arguments (line 383)
    kwargs_544392 = {}
    # Getting the type of 'mpmath' (line 383)
    mpmath_544389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 36), 'mpmath', False)
    # Obtaining the member 'loggamma' of a type (line 383)
    loggamma_544390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 36), mpmath_544389, 'loggamma')
    # Calling loggamma(args, kwargs) (line 383)
    loggamma_call_result_544393 = invoke(stypy.reporting.localization.Localization(__file__, 383, 36), loggamma_544390, *[z0_544391], **kwargs_544392)
    
    # Processing the call keyword arguments (line 383)
    kwargs_544394 = {}
    # Getting the type of 'complex' (line 383)
    complex_544388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 28), 'complex', False)
    # Calling complex(args, kwargs) (line 383)
    complex_call_result_544395 = invoke(stypy.reporting.localization.Localization(__file__, 383, 28), complex_544388, *[loggamma_call_result_544393], **kwargs_544394)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 383, 24), tuple_544386, complex_call_result_544395)
    
    # Processing the call keyword arguments (line 383)
    kwargs_544396 = {}
    # Getting the type of 'dataset' (line 383)
    dataset_544384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 8), 'dataset', False)
    # Obtaining the member 'append' of a type (line 383)
    append_544385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 8), dataset_544384, 'append')
    # Calling append(args, kwargs) (line 383)
    append_call_result_544397 = invoke(stypy.reporting.localization.Localization(__file__, 383, 8), append_544385, *[tuple_544386], **kwargs_544396)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 384):
    
    # Assigning a Call to a Name (line 384):
    
    # Call to array(...): (line 384)
    # Processing the call arguments (line 384)
    # Getting the type of 'dataset' (line 384)
    dataset_544400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 23), 'dataset', False)
    # Processing the call keyword arguments (line 384)
    kwargs_544401 = {}
    # Getting the type of 'np' (line 384)
    np_544398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 384)
    array_544399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 14), np_544398, 'array')
    # Calling array(args, kwargs) (line 384)
    array_call_result_544402 = invoke(stypy.reporting.localization.Localization(__file__, 384, 14), array_544399, *[dataset_544400], **kwargs_544401)
    
    # Assigning a type to the variable 'dataset' (line 384)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 384, 4), 'dataset', array_call_result_544402)
    
    # Call to check(...): (line 386)
    # Processing the call keyword arguments (line 386)
    kwargs_544414 = {}
    
    # Call to FuncData(...): (line 386)
    # Processing the call arguments (line 386)
    # Getting the type of 'sc' (line 386)
    sc_544404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 13), 'sc', False)
    # Obtaining the member 'loggamma' of a type (line 386)
    loggamma_544405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 13), sc_544404, 'loggamma')
    # Getting the type of 'dataset' (line 386)
    dataset_544406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 26), 'dataset', False)
    int_544407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 35), 'int')
    int_544408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 38), 'int')
    # Processing the call keyword arguments (line 386)
    float_544409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 46), 'float')
    keyword_544410 = float_544409
    kwargs_544411 = {'rtol': keyword_544410}
    # Getting the type of 'FuncData' (line 386)
    FuncData_544403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 386)
    FuncData_call_result_544412 = invoke(stypy.reporting.localization.Localization(__file__, 386, 4), FuncData_544403, *[loggamma_544405, dataset_544406, int_544407, int_544408], **kwargs_544411)
    
    # Obtaining the member 'check' of a type (line 386)
    check_544413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 4), FuncData_call_result_544412, 'check')
    # Calling check(args, kwargs) (line 386)
    check_call_result_544415 = invoke(stypy.reporting.localization.Localization(__file__, 386, 4), check_544413, *[], **kwargs_544414)
    
    
    # ################# End of 'test_loggamma_taylor(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_loggamma_taylor' in the type store
    # Getting the type of 'stypy_return_type' (line 371)
    stypy_return_type_544416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_544416)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_loggamma_taylor'
    return stypy_return_type_544416

# Assigning a type to the variable 'test_loggamma_taylor' (line 371)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 371, 0), 'test_loggamma_taylor', test_loggamma_taylor)

@norecursion
def test_rgamma_zeros(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_rgamma_zeros'
    module_type_store = module_type_store.open_function_context('test_rgamma_zeros', 393, 0, False)
    
    # Passed parameters checking function
    test_rgamma_zeros.stypy_localization = localization
    test_rgamma_zeros.stypy_type_of_self = None
    test_rgamma_zeros.stypy_type_store = module_type_store
    test_rgamma_zeros.stypy_function_name = 'test_rgamma_zeros'
    test_rgamma_zeros.stypy_param_names_list = []
    test_rgamma_zeros.stypy_varargs_param_name = None
    test_rgamma_zeros.stypy_kwargs_param_name = None
    test_rgamma_zeros.stypy_call_defaults = defaults
    test_rgamma_zeros.stypy_call_varargs = varargs
    test_rgamma_zeros.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_rgamma_zeros', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_rgamma_zeros', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_rgamma_zeros(...)' code ##################

    
    # Assigning a Subscript to a Name (line 401):
    
    # Assigning a Subscript to a Name (line 401):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 401)
    tuple_544417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 401)
    # Adding element type (line 401)
    
    
    # Call to logspace(...): (line 401)
    # Processing the call arguments (line 401)
    int_544420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 28), 'int')
    int_544421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 32), 'int')
    int_544422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 37), 'int')
    # Processing the call keyword arguments (line 401)
    kwargs_544423 = {}
    # Getting the type of 'np' (line 401)
    np_544418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 16), 'np', False)
    # Obtaining the member 'logspace' of a type (line 401)
    logspace_544419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 16), np_544418, 'logspace')
    # Calling logspace(args, kwargs) (line 401)
    logspace_call_result_544424 = invoke(stypy.reporting.localization.Localization(__file__, 401, 16), logspace_544419, *[int_544420, int_544421, int_544422], **kwargs_544423)
    
    # Applying the 'usub' unary operator (line 401)
    result___neg___544425 = python_operator(stypy.reporting.localization.Localization(__file__, 401, 15), 'usub', logspace_call_result_544424)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 401, 15), tuple_544417, result___neg___544425)
    # Adding element type (line 401)
    int_544426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 41), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 401, 15), tuple_544417, int_544426)
    # Adding element type (line 401)
    
    # Call to logspace(...): (line 401)
    # Processing the call arguments (line 401)
    int_544429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 56), 'int')
    int_544430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 61), 'int')
    int_544431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 65), 'int')
    # Processing the call keyword arguments (line 401)
    kwargs_544432 = {}
    # Getting the type of 'np' (line 401)
    np_544427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 44), 'np', False)
    # Obtaining the member 'logspace' of a type (line 401)
    logspace_544428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 44), np_544427, 'logspace')
    # Calling logspace(args, kwargs) (line 401)
    logspace_call_result_544433 = invoke(stypy.reporting.localization.Localization(__file__, 401, 44), logspace_544428, *[int_544429, int_544430, int_544431], **kwargs_544432)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 401, 15), tuple_544417, logspace_call_result_544433)
    
    # Getting the type of 'np' (line 401)
    np_544434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 9), 'np')
    # Obtaining the member 'r_' of a type (line 401)
    r__544435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 9), np_544434, 'r_')
    # Obtaining the member '__getitem__' of a type (line 401)
    getitem___544436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 9), r__544435, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 401)
    subscript_call_result_544437 = invoke(stypy.reporting.localization.Localization(__file__, 401, 9), getitem___544436, tuple_544417)
    
    # Assigning a type to the variable 'dx' (line 401)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 4), 'dx', subscript_call_result_544437)
    
    # Assigning a Call to a Name (line 402):
    
    # Assigning a Call to a Name (line 402):
    
    # Call to copy(...): (line 402)
    # Processing the call keyword arguments (line 402)
    kwargs_544440 = {}
    # Getting the type of 'dx' (line 402)
    dx_544438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 9), 'dx', False)
    # Obtaining the member 'copy' of a type (line 402)
    copy_544439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 402, 9), dx_544438, 'copy')
    # Calling copy(args, kwargs) (line 402)
    copy_call_result_544441 = invoke(stypy.reporting.localization.Localization(__file__, 402, 9), copy_544439, *[], **kwargs_544440)
    
    # Assigning a type to the variable 'dy' (line 402)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 402, 4), 'dy', copy_call_result_544441)
    
    # Assigning a Call to a Tuple (line 403):
    
    # Assigning a Subscript to a Name (line 403):
    
    # Obtaining the type of the subscript
    int_544442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 4), 'int')
    
    # Call to meshgrid(...): (line 403)
    # Processing the call arguments (line 403)
    # Getting the type of 'dx' (line 403)
    dx_544445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 25), 'dx', False)
    # Getting the type of 'dy' (line 403)
    dy_544446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 29), 'dy', False)
    # Processing the call keyword arguments (line 403)
    kwargs_544447 = {}
    # Getting the type of 'np' (line 403)
    np_544443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 13), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 403)
    meshgrid_544444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 13), np_544443, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 403)
    meshgrid_call_result_544448 = invoke(stypy.reporting.localization.Localization(__file__, 403, 13), meshgrid_544444, *[dx_544445, dy_544446], **kwargs_544447)
    
    # Obtaining the member '__getitem__' of a type (line 403)
    getitem___544449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 4), meshgrid_call_result_544448, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 403)
    subscript_call_result_544450 = invoke(stypy.reporting.localization.Localization(__file__, 403, 4), getitem___544449, int_544442)
    
    # Assigning a type to the variable 'tuple_var_assignment_542774' (line 403)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'tuple_var_assignment_542774', subscript_call_result_544450)
    
    # Assigning a Subscript to a Name (line 403):
    
    # Obtaining the type of the subscript
    int_544451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 4), 'int')
    
    # Call to meshgrid(...): (line 403)
    # Processing the call arguments (line 403)
    # Getting the type of 'dx' (line 403)
    dx_544454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 25), 'dx', False)
    # Getting the type of 'dy' (line 403)
    dy_544455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 29), 'dy', False)
    # Processing the call keyword arguments (line 403)
    kwargs_544456 = {}
    # Getting the type of 'np' (line 403)
    np_544452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 13), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 403)
    meshgrid_544453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 13), np_544452, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 403)
    meshgrid_call_result_544457 = invoke(stypy.reporting.localization.Localization(__file__, 403, 13), meshgrid_544453, *[dx_544454, dy_544455], **kwargs_544456)
    
    # Obtaining the member '__getitem__' of a type (line 403)
    getitem___544458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 4), meshgrid_call_result_544457, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 403)
    subscript_call_result_544459 = invoke(stypy.reporting.localization.Localization(__file__, 403, 4), getitem___544458, int_544451)
    
    # Assigning a type to the variable 'tuple_var_assignment_542775' (line 403)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'tuple_var_assignment_542775', subscript_call_result_544459)
    
    # Assigning a Name to a Name (line 403):
    # Getting the type of 'tuple_var_assignment_542774' (line 403)
    tuple_var_assignment_542774_544460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'tuple_var_assignment_542774')
    # Assigning a type to the variable 'dx' (line 403)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'dx', tuple_var_assignment_542774_544460)
    
    # Assigning a Name to a Name (line 403):
    # Getting the type of 'tuple_var_assignment_542775' (line 403)
    tuple_var_assignment_542775_544461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'tuple_var_assignment_542775')
    # Assigning a type to the variable 'dy' (line 403)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 8), 'dy', tuple_var_assignment_542775_544461)
    
    # Assigning a BinOp to a Name (line 404):
    
    # Assigning a BinOp to a Name (line 404):
    # Getting the type of 'dx' (line 404)
    dx_544462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 9), 'dx')
    complex_544463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 404, 14), 'complex')
    # Getting the type of 'dy' (line 404)
    dy_544464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 17), 'dy')
    # Applying the binary operator '*' (line 404)
    result_mul_544465 = python_operator(stypy.reporting.localization.Localization(__file__, 404, 14), '*', complex_544463, dy_544464)
    
    # Applying the binary operator '+' (line 404)
    result_add_544466 = python_operator(stypy.reporting.localization.Localization(__file__, 404, 9), '+', dx_544462, result_mul_544465)
    
    # Assigning a type to the variable 'dz' (line 404)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 4), 'dz', result_add_544466)
    
    # Assigning a Call to a Name (line 405):
    
    # Assigning a Call to a Name (line 405):
    
    # Call to reshape(...): (line 405)
    # Processing the call arguments (line 405)
    int_544475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 43), 'int')
    int_544476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 46), 'int')
    int_544477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 49), 'int')
    # Processing the call keyword arguments (line 405)
    kwargs_544478 = {}
    
    # Call to arange(...): (line 405)
    # Processing the call arguments (line 405)
    int_544469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 22), 'int')
    int_544470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 25), 'int')
    int_544471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 31), 'int')
    # Processing the call keyword arguments (line 405)
    kwargs_544472 = {}
    # Getting the type of 'np' (line 405)
    np_544467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 12), 'np', False)
    # Obtaining the member 'arange' of a type (line 405)
    arange_544468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 12), np_544467, 'arange')
    # Calling arange(args, kwargs) (line 405)
    arange_call_result_544473 = invoke(stypy.reporting.localization.Localization(__file__, 405, 12), arange_544468, *[int_544469, int_544470, int_544471], **kwargs_544472)
    
    # Obtaining the member 'reshape' of a type (line 405)
    reshape_544474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 12), arange_call_result_544473, 'reshape')
    # Calling reshape(args, kwargs) (line 405)
    reshape_call_result_544479 = invoke(stypy.reporting.localization.Localization(__file__, 405, 12), reshape_544474, *[int_544475, int_544476, int_544477], **kwargs_544478)
    
    # Assigning a type to the variable 'zeros' (line 405)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 405, 4), 'zeros', reshape_call_result_544479)
    
    # Assigning a Call to a Name (line 406):
    
    # Assigning a Call to a Name (line 406):
    
    # Call to flatten(...): (line 406)
    # Processing the call keyword arguments (line 406)
    kwargs_544492 = {}
    # Getting the type of 'zeros' (line 406)
    zeros_544480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 9), 'zeros', False)
    
    # Call to dstack(...): (line 406)
    # Processing the call arguments (line 406)
    
    # Obtaining an instance of the builtin type 'tuple' (line 406)
    tuple_544483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 406, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 406)
    # Adding element type (line 406)
    # Getting the type of 'dz' (line 406)
    dz_544484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 28), 'dz', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 406, 28), tuple_544483, dz_544484)
    
    # Getting the type of 'zeros' (line 406)
    zeros_544485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 33), 'zeros', False)
    # Obtaining the member 'size' of a type (line 406)
    size_544486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 33), zeros_544485, 'size')
    # Applying the binary operator '*' (line 406)
    result_mul_544487 = python_operator(stypy.reporting.localization.Localization(__file__, 406, 27), '*', tuple_544483, size_544486)
    
    # Processing the call keyword arguments (line 406)
    kwargs_544488 = {}
    # Getting the type of 'np' (line 406)
    np_544481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 17), 'np', False)
    # Obtaining the member 'dstack' of a type (line 406)
    dstack_544482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 17), np_544481, 'dstack')
    # Calling dstack(args, kwargs) (line 406)
    dstack_call_result_544489 = invoke(stypy.reporting.localization.Localization(__file__, 406, 17), dstack_544482, *[result_mul_544487], **kwargs_544488)
    
    # Applying the binary operator '+' (line 406)
    result_add_544490 = python_operator(stypy.reporting.localization.Localization(__file__, 406, 9), '+', zeros_544480, dstack_call_result_544489)
    
    # Obtaining the member 'flatten' of a type (line 406)
    flatten_544491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 9), result_add_544490, 'flatten')
    # Calling flatten(args, kwargs) (line 406)
    flatten_call_result_544493 = invoke(stypy.reporting.localization.Localization(__file__, 406, 9), flatten_544491, *[], **kwargs_544492)
    
    # Assigning a type to the variable 'z' (line 406)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 406, 4), 'z', flatten_call_result_544493)
    
    # Assigning a List to a Name (line 407):
    
    # Assigning a List to a Name (line 407):
    
    # Obtaining an instance of the builtin type 'list' (line 407)
    list_544494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 407)
    
    # Assigning a type to the variable 'dataset' (line 407)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 407, 4), 'dataset', list_544494)
    
    # Call to workdps(...): (line 408)
    # Processing the call arguments (line 408)
    int_544497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 24), 'int')
    # Processing the call keyword arguments (line 408)
    kwargs_544498 = {}
    # Getting the type of 'mpmath' (line 408)
    mpmath_544495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 9), 'mpmath', False)
    # Obtaining the member 'workdps' of a type (line 408)
    workdps_544496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 9), mpmath_544495, 'workdps')
    # Calling workdps(args, kwargs) (line 408)
    workdps_call_result_544499 = invoke(stypy.reporting.localization.Localization(__file__, 408, 9), workdps_544496, *[int_544497], **kwargs_544498)
    
    with_544500 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 408, 9), workdps_call_result_544499, 'with parameter', '__enter__', '__exit__')

    if with_544500:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 408)
        enter___544501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 9), workdps_call_result_544499, '__enter__')
        with_enter_544502 = invoke(stypy.reporting.localization.Localization(__file__, 408, 9), enter___544501)
        
        # Getting the type of 'z' (line 409)
        z_544503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 18), 'z')
        # Testing the type of a for loop iterable (line 409)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 409, 8), z_544503)
        # Getting the type of the for loop variable (line 409)
        for_loop_var_544504 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 409, 8), z_544503)
        # Assigning a type to the variable 'z0' (line 409)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 8), 'z0', for_loop_var_544504)
        # SSA begins for a for statement (line 409)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 410)
        # Processing the call arguments (line 410)
        
        # Obtaining an instance of the builtin type 'tuple' (line 410)
        tuple_544507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 410)
        # Adding element type (line 410)
        # Getting the type of 'z0' (line 410)
        z0_544508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 28), 'z0', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 28), tuple_544507, z0_544508)
        # Adding element type (line 410)
        
        # Call to complex(...): (line 410)
        # Processing the call arguments (line 410)
        
        # Call to rgamma(...): (line 410)
        # Processing the call arguments (line 410)
        # Getting the type of 'z0' (line 410)
        z0_544512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 54), 'z0', False)
        # Processing the call keyword arguments (line 410)
        kwargs_544513 = {}
        # Getting the type of 'mpmath' (line 410)
        mpmath_544510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 40), 'mpmath', False)
        # Obtaining the member 'rgamma' of a type (line 410)
        rgamma_544511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 40), mpmath_544510, 'rgamma')
        # Calling rgamma(args, kwargs) (line 410)
        rgamma_call_result_544514 = invoke(stypy.reporting.localization.Localization(__file__, 410, 40), rgamma_544511, *[z0_544512], **kwargs_544513)
        
        # Processing the call keyword arguments (line 410)
        kwargs_544515 = {}
        # Getting the type of 'complex' (line 410)
        complex_544509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 32), 'complex', False)
        # Calling complex(args, kwargs) (line 410)
        complex_call_result_544516 = invoke(stypy.reporting.localization.Localization(__file__, 410, 32), complex_544509, *[rgamma_call_result_544514], **kwargs_544515)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 28), tuple_544507, complex_call_result_544516)
        
        # Processing the call keyword arguments (line 410)
        kwargs_544517 = {}
        # Getting the type of 'dataset' (line 410)
        dataset_544505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'dataset', False)
        # Obtaining the member 'append' of a type (line 410)
        append_544506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 12), dataset_544505, 'append')
        # Calling append(args, kwargs) (line 410)
        append_call_result_544518 = invoke(stypy.reporting.localization.Localization(__file__, 410, 12), append_544506, *[tuple_544507], **kwargs_544517)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 408)
        exit___544519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 9), workdps_call_result_544499, '__exit__')
        with_exit_544520 = invoke(stypy.reporting.localization.Localization(__file__, 408, 9), exit___544519, None, None, None)

    
    # Assigning a Call to a Name (line 412):
    
    # Assigning a Call to a Name (line 412):
    
    # Call to array(...): (line 412)
    # Processing the call arguments (line 412)
    # Getting the type of 'dataset' (line 412)
    dataset_544523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 23), 'dataset', False)
    # Processing the call keyword arguments (line 412)
    kwargs_544524 = {}
    # Getting the type of 'np' (line 412)
    np_544521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 412)
    array_544522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 14), np_544521, 'array')
    # Calling array(args, kwargs) (line 412)
    array_call_result_544525 = invoke(stypy.reporting.localization.Localization(__file__, 412, 14), array_544522, *[dataset_544523], **kwargs_544524)
    
    # Assigning a type to the variable 'dataset' (line 412)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 4), 'dataset', array_call_result_544525)
    
    # Call to check(...): (line 413)
    # Processing the call keyword arguments (line 413)
    kwargs_544537 = {}
    
    # Call to FuncData(...): (line 413)
    # Processing the call arguments (line 413)
    # Getting the type of 'sc' (line 413)
    sc_544527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 13), 'sc', False)
    # Obtaining the member 'rgamma' of a type (line 413)
    rgamma_544528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 13), sc_544527, 'rgamma')
    # Getting the type of 'dataset' (line 413)
    dataset_544529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 24), 'dataset', False)
    int_544530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 33), 'int')
    int_544531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 36), 'int')
    # Processing the call keyword arguments (line 413)
    float_544532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 44), 'float')
    keyword_544533 = float_544532
    kwargs_544534 = {'rtol': keyword_544533}
    # Getting the type of 'FuncData' (line 413)
    FuncData_544526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 413)
    FuncData_call_result_544535 = invoke(stypy.reporting.localization.Localization(__file__, 413, 4), FuncData_544526, *[rgamma_544528, dataset_544529, int_544530, int_544531], **kwargs_544534)
    
    # Obtaining the member 'check' of a type (line 413)
    check_544536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 4), FuncData_call_result_544535, 'check')
    # Calling check(args, kwargs) (line 413)
    check_call_result_544538 = invoke(stypy.reporting.localization.Localization(__file__, 413, 4), check_544536, *[], **kwargs_544537)
    
    
    # ################# End of 'test_rgamma_zeros(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_rgamma_zeros' in the type store
    # Getting the type of 'stypy_return_type' (line 393)
    stypy_return_type_544539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_544539)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_rgamma_zeros'
    return stypy_return_type_544539

# Assigning a type to the variable 'test_rgamma_zeros' (line 393)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 0), 'test_rgamma_zeros', test_rgamma_zeros)

@norecursion
def test_digamma_roots(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_digamma_roots'
    module_type_store = module_type_store.open_function_context('test_digamma_roots', 420, 0, False)
    
    # Passed parameters checking function
    test_digamma_roots.stypy_localization = localization
    test_digamma_roots.stypy_type_of_self = None
    test_digamma_roots.stypy_type_store = module_type_store
    test_digamma_roots.stypy_function_name = 'test_digamma_roots'
    test_digamma_roots.stypy_param_names_list = []
    test_digamma_roots.stypy_varargs_param_name = None
    test_digamma_roots.stypy_kwargs_param_name = None
    test_digamma_roots.stypy_call_defaults = defaults
    test_digamma_roots.stypy_call_varargs = varargs
    test_digamma_roots.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_digamma_roots', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_digamma_roots', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_digamma_roots(...)' code ##################

    
    # Assigning a Call to a Name (line 424):
    
    # Assigning a Call to a Name (line 424):
    
    # Call to findroot(...): (line 424)
    # Processing the call arguments (line 424)
    # Getting the type of 'mpmath' (line 424)
    mpmath_544542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 27), 'mpmath', False)
    # Obtaining the member 'digamma' of a type (line 424)
    digamma_544543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 27), mpmath_544542, 'digamma')
    float_544544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 43), 'float')
    # Processing the call keyword arguments (line 424)
    kwargs_544545 = {}
    # Getting the type of 'mpmath' (line 424)
    mpmath_544540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 11), 'mpmath', False)
    # Obtaining the member 'findroot' of a type (line 424)
    findroot_544541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 11), mpmath_544540, 'findroot')
    # Calling findroot(args, kwargs) (line 424)
    findroot_call_result_544546 = invoke(stypy.reporting.localization.Localization(__file__, 424, 11), findroot_544541, *[digamma_544543, float_544544], **kwargs_544545)
    
    # Assigning a type to the variable 'root' (line 424)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 4), 'root', findroot_call_result_544546)
    
    # Assigning a List to a Name (line 425):
    
    # Assigning a List to a Name (line 425):
    
    # Obtaining an instance of the builtin type 'list' (line 425)
    list_544547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 12), 'list')
    # Adding type elements to the builtin type 'list' instance (line 425)
    # Adding element type (line 425)
    
    # Call to float(...): (line 425)
    # Processing the call arguments (line 425)
    # Getting the type of 'root' (line 425)
    root_544549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 19), 'root', False)
    # Processing the call keyword arguments (line 425)
    kwargs_544550 = {}
    # Getting the type of 'float' (line 425)
    float_544548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 13), 'float', False)
    # Calling float(args, kwargs) (line 425)
    float_call_result_544551 = invoke(stypy.reporting.localization.Localization(__file__, 425, 13), float_544548, *[root_544549], **kwargs_544550)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 12), list_544547, float_call_result_544551)
    
    # Assigning a type to the variable 'roots' (line 425)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 4), 'roots', list_544547)
    
    # Assigning a Call to a Name (line 426):
    
    # Assigning a Call to a Name (line 426):
    
    # Call to findroot(...): (line 426)
    # Processing the call arguments (line 426)
    # Getting the type of 'mpmath' (line 426)
    mpmath_544554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 27), 'mpmath', False)
    # Obtaining the member 'digamma' of a type (line 426)
    digamma_544555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 27), mpmath_544554, 'digamma')
    float_544556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 426, 43), 'float')
    # Processing the call keyword arguments (line 426)
    kwargs_544557 = {}
    # Getting the type of 'mpmath' (line 426)
    mpmath_544552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 11), 'mpmath', False)
    # Obtaining the member 'findroot' of a type (line 426)
    findroot_544553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 11), mpmath_544552, 'findroot')
    # Calling findroot(args, kwargs) (line 426)
    findroot_call_result_544558 = invoke(stypy.reporting.localization.Localization(__file__, 426, 11), findroot_544553, *[digamma_544555, float_544556], **kwargs_544557)
    
    # Assigning a type to the variable 'root' (line 426)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 426, 4), 'root', findroot_call_result_544558)
    
    # Call to append(...): (line 427)
    # Processing the call arguments (line 427)
    
    # Call to float(...): (line 427)
    # Processing the call arguments (line 427)
    # Getting the type of 'root' (line 427)
    root_544562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 23), 'root', False)
    # Processing the call keyword arguments (line 427)
    kwargs_544563 = {}
    # Getting the type of 'float' (line 427)
    float_544561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 17), 'float', False)
    # Calling float(args, kwargs) (line 427)
    float_call_result_544564 = invoke(stypy.reporting.localization.Localization(__file__, 427, 17), float_544561, *[root_544562], **kwargs_544563)
    
    # Processing the call keyword arguments (line 427)
    kwargs_544565 = {}
    # Getting the type of 'roots' (line 427)
    roots_544559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 4), 'roots', False)
    # Obtaining the member 'append' of a type (line 427)
    append_544560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 427, 4), roots_544559, 'append')
    # Calling append(args, kwargs) (line 427)
    append_call_result_544566 = invoke(stypy.reporting.localization.Localization(__file__, 427, 4), append_544560, *[float_call_result_544564], **kwargs_544565)
    
    
    # Assigning a Call to a Name (line 428):
    
    # Assigning a Call to a Name (line 428):
    
    # Call to array(...): (line 428)
    # Processing the call arguments (line 428)
    # Getting the type of 'roots' (line 428)
    roots_544569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 21), 'roots', False)
    # Processing the call keyword arguments (line 428)
    kwargs_544570 = {}
    # Getting the type of 'np' (line 428)
    np_544567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 12), 'np', False)
    # Obtaining the member 'array' of a type (line 428)
    array_544568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 12), np_544567, 'array')
    # Calling array(args, kwargs) (line 428)
    array_call_result_544571 = invoke(stypy.reporting.localization.Localization(__file__, 428, 12), array_544568, *[roots_544569], **kwargs_544570)
    
    # Assigning a type to the variable 'roots' (line 428)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 4), 'roots', array_call_result_544571)
    
    # Assigning a Subscript to a Name (line 431):
    
    # Assigning a Subscript to a Name (line 431):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 431)
    tuple_544572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 431)
    # Adding element type (line 431)
    float_544573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 15), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 15), tuple_544572, float_544573)
    # Adding element type (line 431)
    
    
    # Call to logspace(...): (line 431)
    # Processing the call arguments (line 431)
    int_544576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 35), 'int')
    int_544577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 39), 'int')
    int_544578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 44), 'int')
    # Processing the call keyword arguments (line 431)
    kwargs_544579 = {}
    # Getting the type of 'np' (line 431)
    np_544574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 23), 'np', False)
    # Obtaining the member 'logspace' of a type (line 431)
    logspace_544575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 23), np_544574, 'logspace')
    # Calling logspace(args, kwargs) (line 431)
    logspace_call_result_544580 = invoke(stypy.reporting.localization.Localization(__file__, 431, 23), logspace_544575, *[int_544576, int_544577, int_544578], **kwargs_544579)
    
    # Applying the 'usub' unary operator (line 431)
    result___neg___544581 = python_operator(stypy.reporting.localization.Localization(__file__, 431, 22), 'usub', logspace_call_result_544580)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 15), tuple_544572, result___neg___544581)
    # Adding element type (line 431)
    int_544582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 49), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 15), tuple_544572, int_544582)
    # Adding element type (line 431)
    
    # Call to logspace(...): (line 431)
    # Processing the call arguments (line 431)
    int_544585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 64), 'int')
    int_544586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 69), 'int')
    int_544587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 73), 'int')
    # Processing the call keyword arguments (line 431)
    kwargs_544588 = {}
    # Getting the type of 'np' (line 431)
    np_544583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 52), 'np', False)
    # Obtaining the member 'logspace' of a type (line 431)
    logspace_544584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 52), np_544583, 'logspace')
    # Calling logspace(args, kwargs) (line 431)
    logspace_call_result_544589 = invoke(stypy.reporting.localization.Localization(__file__, 431, 52), logspace_544584, *[int_544585, int_544586, int_544587], **kwargs_544588)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 15), tuple_544572, logspace_call_result_544589)
    # Adding element type (line 431)
    float_544590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 78), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 15), tuple_544572, float_544590)
    
    # Getting the type of 'np' (line 431)
    np_544591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 9), 'np')
    # Obtaining the member 'r_' of a type (line 431)
    r__544592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 9), np_544591, 'r_')
    # Obtaining the member '__getitem__' of a type (line 431)
    getitem___544593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 9), r__544592, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 431)
    subscript_call_result_544594 = invoke(stypy.reporting.localization.Localization(__file__, 431, 9), getitem___544593, tuple_544572)
    
    # Assigning a type to the variable 'dx' (line 431)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 431, 4), 'dx', subscript_call_result_544594)
    
    # Assigning a Call to a Name (line 432):
    
    # Assigning a Call to a Name (line 432):
    
    # Call to copy(...): (line 432)
    # Processing the call keyword arguments (line 432)
    kwargs_544597 = {}
    # Getting the type of 'dx' (line 432)
    dx_544595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 9), 'dx', False)
    # Obtaining the member 'copy' of a type (line 432)
    copy_544596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 432, 9), dx_544595, 'copy')
    # Calling copy(args, kwargs) (line 432)
    copy_call_result_544598 = invoke(stypy.reporting.localization.Localization(__file__, 432, 9), copy_544596, *[], **kwargs_544597)
    
    # Assigning a type to the variable 'dy' (line 432)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 4), 'dy', copy_call_result_544598)
    
    # Assigning a Call to a Tuple (line 433):
    
    # Assigning a Subscript to a Name (line 433):
    
    # Obtaining the type of the subscript
    int_544599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 4), 'int')
    
    # Call to meshgrid(...): (line 433)
    # Processing the call arguments (line 433)
    # Getting the type of 'dx' (line 433)
    dx_544602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 25), 'dx', False)
    # Getting the type of 'dy' (line 433)
    dy_544603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 29), 'dy', False)
    # Processing the call keyword arguments (line 433)
    kwargs_544604 = {}
    # Getting the type of 'np' (line 433)
    np_544600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 13), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 433)
    meshgrid_544601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 13), np_544600, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 433)
    meshgrid_call_result_544605 = invoke(stypy.reporting.localization.Localization(__file__, 433, 13), meshgrid_544601, *[dx_544602, dy_544603], **kwargs_544604)
    
    # Obtaining the member '__getitem__' of a type (line 433)
    getitem___544606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 4), meshgrid_call_result_544605, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 433)
    subscript_call_result_544607 = invoke(stypy.reporting.localization.Localization(__file__, 433, 4), getitem___544606, int_544599)
    
    # Assigning a type to the variable 'tuple_var_assignment_542776' (line 433)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 4), 'tuple_var_assignment_542776', subscript_call_result_544607)
    
    # Assigning a Subscript to a Name (line 433):
    
    # Obtaining the type of the subscript
    int_544608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 4), 'int')
    
    # Call to meshgrid(...): (line 433)
    # Processing the call arguments (line 433)
    # Getting the type of 'dx' (line 433)
    dx_544611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 25), 'dx', False)
    # Getting the type of 'dy' (line 433)
    dy_544612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 29), 'dy', False)
    # Processing the call keyword arguments (line 433)
    kwargs_544613 = {}
    # Getting the type of 'np' (line 433)
    np_544609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 13), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 433)
    meshgrid_544610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 13), np_544609, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 433)
    meshgrid_call_result_544614 = invoke(stypy.reporting.localization.Localization(__file__, 433, 13), meshgrid_544610, *[dx_544611, dy_544612], **kwargs_544613)
    
    # Obtaining the member '__getitem__' of a type (line 433)
    getitem___544615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 4), meshgrid_call_result_544614, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 433)
    subscript_call_result_544616 = invoke(stypy.reporting.localization.Localization(__file__, 433, 4), getitem___544615, int_544608)
    
    # Assigning a type to the variable 'tuple_var_assignment_542777' (line 433)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 4), 'tuple_var_assignment_542777', subscript_call_result_544616)
    
    # Assigning a Name to a Name (line 433):
    # Getting the type of 'tuple_var_assignment_542776' (line 433)
    tuple_var_assignment_542776_544617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 4), 'tuple_var_assignment_542776')
    # Assigning a type to the variable 'dx' (line 433)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 4), 'dx', tuple_var_assignment_542776_544617)
    
    # Assigning a Name to a Name (line 433):
    # Getting the type of 'tuple_var_assignment_542777' (line 433)
    tuple_var_assignment_542777_544618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 4), 'tuple_var_assignment_542777')
    # Assigning a type to the variable 'dy' (line 433)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 8), 'dy', tuple_var_assignment_542777_544618)
    
    # Assigning a BinOp to a Name (line 434):
    
    # Assigning a BinOp to a Name (line 434):
    # Getting the type of 'dx' (line 434)
    dx_544619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 9), 'dx')
    complex_544620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 14), 'complex')
    # Getting the type of 'dy' (line 434)
    dy_544621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 17), 'dy')
    # Applying the binary operator '*' (line 434)
    result_mul_544622 = python_operator(stypy.reporting.localization.Localization(__file__, 434, 14), '*', complex_544620, dy_544621)
    
    # Applying the binary operator '+' (line 434)
    result_add_544623 = python_operator(stypy.reporting.localization.Localization(__file__, 434, 9), '+', dx_544619, result_mul_544622)
    
    # Assigning a type to the variable 'dz' (line 434)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 4), 'dz', result_add_544623)
    
    # Assigning a Call to a Name (line 435):
    
    # Assigning a Call to a Name (line 435):
    
    # Call to flatten(...): (line 435)
    # Processing the call keyword arguments (line 435)
    kwargs_544636 = {}
    # Getting the type of 'roots' (line 435)
    roots_544624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 9), 'roots', False)
    
    # Call to dstack(...): (line 435)
    # Processing the call arguments (line 435)
    
    # Obtaining an instance of the builtin type 'tuple' (line 435)
    tuple_544627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 435)
    # Adding element type (line 435)
    # Getting the type of 'dz' (line 435)
    dz_544628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 28), 'dz', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 28), tuple_544627, dz_544628)
    
    # Getting the type of 'roots' (line 435)
    roots_544629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 33), 'roots', False)
    # Obtaining the member 'size' of a type (line 435)
    size_544630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 33), roots_544629, 'size')
    # Applying the binary operator '*' (line 435)
    result_mul_544631 = python_operator(stypy.reporting.localization.Localization(__file__, 435, 27), '*', tuple_544627, size_544630)
    
    # Processing the call keyword arguments (line 435)
    kwargs_544632 = {}
    # Getting the type of 'np' (line 435)
    np_544625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 17), 'np', False)
    # Obtaining the member 'dstack' of a type (line 435)
    dstack_544626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 17), np_544625, 'dstack')
    # Calling dstack(args, kwargs) (line 435)
    dstack_call_result_544633 = invoke(stypy.reporting.localization.Localization(__file__, 435, 17), dstack_544626, *[result_mul_544631], **kwargs_544632)
    
    # Applying the binary operator '+' (line 435)
    result_add_544634 = python_operator(stypy.reporting.localization.Localization(__file__, 435, 9), '+', roots_544624, dstack_call_result_544633)
    
    # Obtaining the member 'flatten' of a type (line 435)
    flatten_544635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 9), result_add_544634, 'flatten')
    # Calling flatten(args, kwargs) (line 435)
    flatten_call_result_544637 = invoke(stypy.reporting.localization.Localization(__file__, 435, 9), flatten_544635, *[], **kwargs_544636)
    
    # Assigning a type to the variable 'z' (line 435)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 4), 'z', flatten_call_result_544637)
    
    # Assigning a List to a Name (line 436):
    
    # Assigning a List to a Name (line 436):
    
    # Obtaining an instance of the builtin type 'list' (line 436)
    list_544638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 436)
    
    # Assigning a type to the variable 'dataset' (line 436)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 4), 'dataset', list_544638)
    
    # Call to workdps(...): (line 437)
    # Processing the call arguments (line 437)
    int_544641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 24), 'int')
    # Processing the call keyword arguments (line 437)
    kwargs_544642 = {}
    # Getting the type of 'mpmath' (line 437)
    mpmath_544639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 9), 'mpmath', False)
    # Obtaining the member 'workdps' of a type (line 437)
    workdps_544640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 9), mpmath_544639, 'workdps')
    # Calling workdps(args, kwargs) (line 437)
    workdps_call_result_544643 = invoke(stypy.reporting.localization.Localization(__file__, 437, 9), workdps_544640, *[int_544641], **kwargs_544642)
    
    with_544644 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 437, 9), workdps_call_result_544643, 'with parameter', '__enter__', '__exit__')

    if with_544644:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 437)
        enter___544645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 9), workdps_call_result_544643, '__enter__')
        with_enter_544646 = invoke(stypy.reporting.localization.Localization(__file__, 437, 9), enter___544645)
        
        # Getting the type of 'z' (line 438)
        z_544647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 18), 'z')
        # Testing the type of a for loop iterable (line 438)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 438, 8), z_544647)
        # Getting the type of the for loop variable (line 438)
        for_loop_var_544648 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 438, 8), z_544647)
        # Assigning a type to the variable 'z0' (line 438)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 438, 8), 'z0', for_loop_var_544648)
        # SSA begins for a for statement (line 438)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 439)
        # Processing the call arguments (line 439)
        
        # Obtaining an instance of the builtin type 'tuple' (line 439)
        tuple_544651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 439)
        # Adding element type (line 439)
        # Getting the type of 'z0' (line 439)
        z0_544652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 28), 'z0', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 439, 28), tuple_544651, z0_544652)
        # Adding element type (line 439)
        
        # Call to complex(...): (line 439)
        # Processing the call arguments (line 439)
        
        # Call to digamma(...): (line 439)
        # Processing the call arguments (line 439)
        # Getting the type of 'z0' (line 439)
        z0_544656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 55), 'z0', False)
        # Processing the call keyword arguments (line 439)
        kwargs_544657 = {}
        # Getting the type of 'mpmath' (line 439)
        mpmath_544654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 40), 'mpmath', False)
        # Obtaining the member 'digamma' of a type (line 439)
        digamma_544655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 40), mpmath_544654, 'digamma')
        # Calling digamma(args, kwargs) (line 439)
        digamma_call_result_544658 = invoke(stypy.reporting.localization.Localization(__file__, 439, 40), digamma_544655, *[z0_544656], **kwargs_544657)
        
        # Processing the call keyword arguments (line 439)
        kwargs_544659 = {}
        # Getting the type of 'complex' (line 439)
        complex_544653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 32), 'complex', False)
        # Calling complex(args, kwargs) (line 439)
        complex_call_result_544660 = invoke(stypy.reporting.localization.Localization(__file__, 439, 32), complex_544653, *[digamma_call_result_544658], **kwargs_544659)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 439, 28), tuple_544651, complex_call_result_544660)
        
        # Processing the call keyword arguments (line 439)
        kwargs_544661 = {}
        # Getting the type of 'dataset' (line 439)
        dataset_544649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 12), 'dataset', False)
        # Obtaining the member 'append' of a type (line 439)
        append_544650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 12), dataset_544649, 'append')
        # Calling append(args, kwargs) (line 439)
        append_call_result_544662 = invoke(stypy.reporting.localization.Localization(__file__, 439, 12), append_544650, *[tuple_544651], **kwargs_544661)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 437)
        exit___544663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 9), workdps_call_result_544643, '__exit__')
        with_exit_544664 = invoke(stypy.reporting.localization.Localization(__file__, 437, 9), exit___544663, None, None, None)

    
    # Assigning a Call to a Name (line 441):
    
    # Assigning a Call to a Name (line 441):
    
    # Call to array(...): (line 441)
    # Processing the call arguments (line 441)
    # Getting the type of 'dataset' (line 441)
    dataset_544667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 23), 'dataset', False)
    # Processing the call keyword arguments (line 441)
    kwargs_544668 = {}
    # Getting the type of 'np' (line 441)
    np_544665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 441)
    array_544666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 14), np_544665, 'array')
    # Calling array(args, kwargs) (line 441)
    array_call_result_544669 = invoke(stypy.reporting.localization.Localization(__file__, 441, 14), array_544666, *[dataset_544667], **kwargs_544668)
    
    # Assigning a type to the variable 'dataset' (line 441)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 4), 'dataset', array_call_result_544669)
    
    # Call to check(...): (line 442)
    # Processing the call keyword arguments (line 442)
    kwargs_544681 = {}
    
    # Call to FuncData(...): (line 442)
    # Processing the call arguments (line 442)
    # Getting the type of 'sc' (line 442)
    sc_544671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 13), 'sc', False)
    # Obtaining the member 'digamma' of a type (line 442)
    digamma_544672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 13), sc_544671, 'digamma')
    # Getting the type of 'dataset' (line 442)
    dataset_544673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 25), 'dataset', False)
    int_544674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 34), 'int')
    int_544675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 37), 'int')
    # Processing the call keyword arguments (line 442)
    float_544676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 45), 'float')
    keyword_544677 = float_544676
    kwargs_544678 = {'rtol': keyword_544677}
    # Getting the type of 'FuncData' (line 442)
    FuncData_544670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 442)
    FuncData_call_result_544679 = invoke(stypy.reporting.localization.Localization(__file__, 442, 4), FuncData_544670, *[digamma_544672, dataset_544673, int_544674, int_544675], **kwargs_544678)
    
    # Obtaining the member 'check' of a type (line 442)
    check_544680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 4), FuncData_call_result_544679, 'check')
    # Calling check(args, kwargs) (line 442)
    check_call_result_544682 = invoke(stypy.reporting.localization.Localization(__file__, 442, 4), check_544680, *[], **kwargs_544681)
    
    
    # ################# End of 'test_digamma_roots(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_digamma_roots' in the type store
    # Getting the type of 'stypy_return_type' (line 420)
    stypy_return_type_544683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_544683)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_digamma_roots'
    return stypy_return_type_544683

# Assigning a type to the variable 'test_digamma_roots' (line 420)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 0), 'test_digamma_roots', test_digamma_roots)

@norecursion
def test_digamma_negreal(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_digamma_negreal'
    module_type_store = module_type_store.open_function_context('test_digamma_negreal', 445, 0, False)
    
    # Passed parameters checking function
    test_digamma_negreal.stypy_localization = localization
    test_digamma_negreal.stypy_type_of_self = None
    test_digamma_negreal.stypy_type_store = module_type_store
    test_digamma_negreal.stypy_function_name = 'test_digamma_negreal'
    test_digamma_negreal.stypy_param_names_list = []
    test_digamma_negreal.stypy_varargs_param_name = None
    test_digamma_negreal.stypy_kwargs_param_name = None
    test_digamma_negreal.stypy_call_defaults = defaults
    test_digamma_negreal.stypy_call_varargs = varargs
    test_digamma_negreal.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_digamma_negreal', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_digamma_negreal', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_digamma_negreal(...)' code ##################

    
    # Assigning a Call to a Name (line 451):
    
    # Assigning a Call to a Name (line 451):
    
    # Call to exception_to_nan(...): (line 451)
    # Processing the call arguments (line 451)
    # Getting the type of 'mpmath' (line 451)
    mpmath_544685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 31), 'mpmath', False)
    # Obtaining the member 'digamma' of a type (line 451)
    digamma_544686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 31), mpmath_544685, 'digamma')
    # Processing the call keyword arguments (line 451)
    kwargs_544687 = {}
    # Getting the type of 'exception_to_nan' (line 451)
    exception_to_nan_544684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 14), 'exception_to_nan', False)
    # Calling exception_to_nan(args, kwargs) (line 451)
    exception_to_nan_call_result_544688 = invoke(stypy.reporting.localization.Localization(__file__, 451, 14), exception_to_nan_544684, *[digamma_544686], **kwargs_544687)
    
    # Assigning a type to the variable 'digamma' (line 451)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 451, 4), 'digamma', exception_to_nan_call_result_544688)
    
    # Assigning a UnaryOp to a Name (line 453):
    
    # Assigning a UnaryOp to a Name (line 453):
    
    
    # Call to logspace(...): (line 453)
    # Processing the call arguments (line 453)
    int_544691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 21), 'int')
    int_544692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 26), 'int')
    int_544693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 31), 'int')
    # Processing the call keyword arguments (line 453)
    kwargs_544694 = {}
    # Getting the type of 'np' (line 453)
    np_544689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 9), 'np', False)
    # Obtaining the member 'logspace' of a type (line 453)
    logspace_544690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 9), np_544689, 'logspace')
    # Calling logspace(args, kwargs) (line 453)
    logspace_call_result_544695 = invoke(stypy.reporting.localization.Localization(__file__, 453, 9), logspace_544690, *[int_544691, int_544692, int_544693], **kwargs_544694)
    
    # Applying the 'usub' unary operator (line 453)
    result___neg___544696 = python_operator(stypy.reporting.localization.Localization(__file__, 453, 8), 'usub', logspace_call_result_544695)
    
    # Assigning a type to the variable 'x' (line 453)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 4), 'x', result___neg___544696)
    
    # Assigning a Subscript to a Name (line 454):
    
    # Assigning a Subscript to a Name (line 454):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 454)
    tuple_544697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 14), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 454)
    # Adding element type (line 454)
    
    
    # Call to logspace(...): (line 454)
    # Processing the call arguments (line 454)
    int_544700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 27), 'int')
    int_544701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 30), 'int')
    int_544702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 34), 'int')
    # Processing the call keyword arguments (line 454)
    kwargs_544703 = {}
    # Getting the type of 'np' (line 454)
    np_544698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 15), 'np', False)
    # Obtaining the member 'logspace' of a type (line 454)
    logspace_544699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 454, 15), np_544698, 'logspace')
    # Calling logspace(args, kwargs) (line 454)
    logspace_call_result_544704 = invoke(stypy.reporting.localization.Localization(__file__, 454, 15), logspace_544699, *[int_544700, int_544701, int_544702], **kwargs_544703)
    
    # Applying the 'usub' unary operator (line 454)
    result___neg___544705 = python_operator(stypy.reporting.localization.Localization(__file__, 454, 14), 'usub', logspace_call_result_544704)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 454, 14), tuple_544697, result___neg___544705)
    # Adding element type (line 454)
    int_544706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 38), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 454, 14), tuple_544697, int_544706)
    # Adding element type (line 454)
    
    # Call to logspace(...): (line 454)
    # Processing the call arguments (line 454)
    int_544709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 53), 'int')
    int_544710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 57), 'int')
    int_544711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 60), 'int')
    # Processing the call keyword arguments (line 454)
    kwargs_544712 = {}
    # Getting the type of 'np' (line 454)
    np_544707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 41), 'np', False)
    # Obtaining the member 'logspace' of a type (line 454)
    logspace_544708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 454, 41), np_544707, 'logspace')
    # Calling logspace(args, kwargs) (line 454)
    logspace_call_result_544713 = invoke(stypy.reporting.localization.Localization(__file__, 454, 41), logspace_544708, *[int_544709, int_544710, int_544711], **kwargs_544712)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 454, 14), tuple_544697, logspace_call_result_544713)
    
    # Getting the type of 'np' (line 454)
    np_544714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 8), 'np')
    # Obtaining the member 'r_' of a type (line 454)
    r__544715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 454, 8), np_544714, 'r_')
    # Obtaining the member '__getitem__' of a type (line 454)
    getitem___544716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 454, 8), r__544715, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 454)
    subscript_call_result_544717 = invoke(stypy.reporting.localization.Localization(__file__, 454, 8), getitem___544716, tuple_544697)
    
    # Assigning a type to the variable 'y' (line 454)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 454, 4), 'y', subscript_call_result_544717)
    
    # Assigning a Call to a Tuple (line 455):
    
    # Assigning a Subscript to a Name (line 455):
    
    # Obtaining the type of the subscript
    int_544718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 4), 'int')
    
    # Call to meshgrid(...): (line 455)
    # Processing the call arguments (line 455)
    # Getting the type of 'x' (line 455)
    x_544721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 23), 'x', False)
    # Getting the type of 'y' (line 455)
    y_544722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 26), 'y', False)
    # Processing the call keyword arguments (line 455)
    kwargs_544723 = {}
    # Getting the type of 'np' (line 455)
    np_544719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 455)
    meshgrid_544720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 11), np_544719, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 455)
    meshgrid_call_result_544724 = invoke(stypy.reporting.localization.Localization(__file__, 455, 11), meshgrid_544720, *[x_544721, y_544722], **kwargs_544723)
    
    # Obtaining the member '__getitem__' of a type (line 455)
    getitem___544725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 4), meshgrid_call_result_544724, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 455)
    subscript_call_result_544726 = invoke(stypy.reporting.localization.Localization(__file__, 455, 4), getitem___544725, int_544718)
    
    # Assigning a type to the variable 'tuple_var_assignment_542778' (line 455)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 4), 'tuple_var_assignment_542778', subscript_call_result_544726)
    
    # Assigning a Subscript to a Name (line 455):
    
    # Obtaining the type of the subscript
    int_544727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 4), 'int')
    
    # Call to meshgrid(...): (line 455)
    # Processing the call arguments (line 455)
    # Getting the type of 'x' (line 455)
    x_544730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 23), 'x', False)
    # Getting the type of 'y' (line 455)
    y_544731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 26), 'y', False)
    # Processing the call keyword arguments (line 455)
    kwargs_544732 = {}
    # Getting the type of 'np' (line 455)
    np_544728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 455)
    meshgrid_544729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 11), np_544728, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 455)
    meshgrid_call_result_544733 = invoke(stypy.reporting.localization.Localization(__file__, 455, 11), meshgrid_544729, *[x_544730, y_544731], **kwargs_544732)
    
    # Obtaining the member '__getitem__' of a type (line 455)
    getitem___544734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 4), meshgrid_call_result_544733, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 455)
    subscript_call_result_544735 = invoke(stypy.reporting.localization.Localization(__file__, 455, 4), getitem___544734, int_544727)
    
    # Assigning a type to the variable 'tuple_var_assignment_542779' (line 455)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 4), 'tuple_var_assignment_542779', subscript_call_result_544735)
    
    # Assigning a Name to a Name (line 455):
    # Getting the type of 'tuple_var_assignment_542778' (line 455)
    tuple_var_assignment_542778_544736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 4), 'tuple_var_assignment_542778')
    # Assigning a type to the variable 'x' (line 455)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 4), 'x', tuple_var_assignment_542778_544736)
    
    # Assigning a Name to a Name (line 455):
    # Getting the type of 'tuple_var_assignment_542779' (line 455)
    tuple_var_assignment_542779_544737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 4), 'tuple_var_assignment_542779')
    # Assigning a type to the variable 'y' (line 455)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 7), 'y', tuple_var_assignment_542779_544737)
    
    # Assigning a Call to a Name (line 456):
    
    # Assigning a Call to a Name (line 456):
    
    # Call to flatten(...): (line 456)
    # Processing the call keyword arguments (line 456)
    kwargs_544744 = {}
    # Getting the type of 'x' (line 456)
    x_544738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 9), 'x', False)
    complex_544739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 13), 'complex')
    # Getting the type of 'y' (line 456)
    y_544740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 16), 'y', False)
    # Applying the binary operator '*' (line 456)
    result_mul_544741 = python_operator(stypy.reporting.localization.Localization(__file__, 456, 13), '*', complex_544739, y_544740)
    
    # Applying the binary operator '+' (line 456)
    result_add_544742 = python_operator(stypy.reporting.localization.Localization(__file__, 456, 9), '+', x_544738, result_mul_544741)
    
    # Obtaining the member 'flatten' of a type (line 456)
    flatten_544743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 9), result_add_544742, 'flatten')
    # Calling flatten(args, kwargs) (line 456)
    flatten_call_result_544745 = invoke(stypy.reporting.localization.Localization(__file__, 456, 9), flatten_544743, *[], **kwargs_544744)
    
    # Assigning a type to the variable 'z' (line 456)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 4), 'z', flatten_call_result_544745)
    
    # Assigning a List to a Name (line 458):
    
    # Assigning a List to a Name (line 458):
    
    # Obtaining an instance of the builtin type 'list' (line 458)
    list_544746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 458)
    
    # Assigning a type to the variable 'dataset' (line 458)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 4), 'dataset', list_544746)
    
    # Call to workdps(...): (line 459)
    # Processing the call arguments (line 459)
    int_544749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 24), 'int')
    # Processing the call keyword arguments (line 459)
    kwargs_544750 = {}
    # Getting the type of 'mpmath' (line 459)
    mpmath_544747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 9), 'mpmath', False)
    # Obtaining the member 'workdps' of a type (line 459)
    workdps_544748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 9), mpmath_544747, 'workdps')
    # Calling workdps(args, kwargs) (line 459)
    workdps_call_result_544751 = invoke(stypy.reporting.localization.Localization(__file__, 459, 9), workdps_544748, *[int_544749], **kwargs_544750)
    
    with_544752 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 459, 9), workdps_call_result_544751, 'with parameter', '__enter__', '__exit__')

    if with_544752:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 459)
        enter___544753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 9), workdps_call_result_544751, '__enter__')
        with_enter_544754 = invoke(stypy.reporting.localization.Localization(__file__, 459, 9), enter___544753)
        
        # Getting the type of 'z' (line 460)
        z_544755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 18), 'z')
        # Testing the type of a for loop iterable (line 460)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 460, 8), z_544755)
        # Getting the type of the for loop variable (line 460)
        for_loop_var_544756 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 460, 8), z_544755)
        # Assigning a type to the variable 'z0' (line 460)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 460, 8), 'z0', for_loop_var_544756)
        # SSA begins for a for statement (line 460)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 461):
        
        # Assigning a Call to a Name (line 461):
        
        # Call to digamma(...): (line 461)
        # Processing the call arguments (line 461)
        # Getting the type of 'z0' (line 461)
        z0_544758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 26), 'z0', False)
        # Processing the call keyword arguments (line 461)
        kwargs_544759 = {}
        # Getting the type of 'digamma' (line 461)
        digamma_544757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 18), 'digamma', False)
        # Calling digamma(args, kwargs) (line 461)
        digamma_call_result_544760 = invoke(stypy.reporting.localization.Localization(__file__, 461, 18), digamma_544757, *[z0_544758], **kwargs_544759)
        
        # Assigning a type to the variable 'res' (line 461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 12), 'res', digamma_call_result_544760)
        
        # Call to append(...): (line 462)
        # Processing the call arguments (line 462)
        
        # Obtaining an instance of the builtin type 'tuple' (line 462)
        tuple_544763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 462)
        # Adding element type (line 462)
        # Getting the type of 'z0' (line 462)
        z0_544764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 28), 'z0', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 462, 28), tuple_544763, z0_544764)
        # Adding element type (line 462)
        
        # Call to complex(...): (line 462)
        # Processing the call arguments (line 462)
        # Getting the type of 'res' (line 462)
        res_544766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 40), 'res', False)
        # Processing the call keyword arguments (line 462)
        kwargs_544767 = {}
        # Getting the type of 'complex' (line 462)
        complex_544765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 32), 'complex', False)
        # Calling complex(args, kwargs) (line 462)
        complex_call_result_544768 = invoke(stypy.reporting.localization.Localization(__file__, 462, 32), complex_544765, *[res_544766], **kwargs_544767)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 462, 28), tuple_544763, complex_call_result_544768)
        
        # Processing the call keyword arguments (line 462)
        kwargs_544769 = {}
        # Getting the type of 'dataset' (line 462)
        dataset_544761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 12), 'dataset', False)
        # Obtaining the member 'append' of a type (line 462)
        append_544762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 12), dataset_544761, 'append')
        # Calling append(args, kwargs) (line 462)
        append_call_result_544770 = invoke(stypy.reporting.localization.Localization(__file__, 462, 12), append_544762, *[tuple_544763], **kwargs_544769)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 459)
        exit___544771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 9), workdps_call_result_544751, '__exit__')
        with_exit_544772 = invoke(stypy.reporting.localization.Localization(__file__, 459, 9), exit___544771, None, None, None)

    
    # Assigning a Call to a Name (line 463):
    
    # Assigning a Call to a Name (line 463):
    
    # Call to asarray(...): (line 463)
    # Processing the call arguments (line 463)
    # Getting the type of 'dataset' (line 463)
    dataset_544775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 25), 'dataset', False)
    # Processing the call keyword arguments (line 463)
    kwargs_544776 = {}
    # Getting the type of 'np' (line 463)
    np_544773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 14), 'np', False)
    # Obtaining the member 'asarray' of a type (line 463)
    asarray_544774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 14), np_544773, 'asarray')
    # Calling asarray(args, kwargs) (line 463)
    asarray_call_result_544777 = invoke(stypy.reporting.localization.Localization(__file__, 463, 14), asarray_544774, *[dataset_544775], **kwargs_544776)
    
    # Assigning a type to the variable 'dataset' (line 463)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 463, 4), 'dataset', asarray_call_result_544777)
    
    # Call to check(...): (line 465)
    # Processing the call keyword arguments (line 465)
    kwargs_544789 = {}
    
    # Call to FuncData(...): (line 465)
    # Processing the call arguments (line 465)
    # Getting the type of 'sc' (line 465)
    sc_544779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 13), 'sc', False)
    # Obtaining the member 'digamma' of a type (line 465)
    digamma_544780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 13), sc_544779, 'digamma')
    # Getting the type of 'dataset' (line 465)
    dataset_544781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 25), 'dataset', False)
    int_544782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 34), 'int')
    int_544783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 37), 'int')
    # Processing the call keyword arguments (line 465)
    float_544784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 45), 'float')
    keyword_544785 = float_544784
    kwargs_544786 = {'rtol': keyword_544785}
    # Getting the type of 'FuncData' (line 465)
    FuncData_544778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 465)
    FuncData_call_result_544787 = invoke(stypy.reporting.localization.Localization(__file__, 465, 4), FuncData_544778, *[digamma_544780, dataset_544781, int_544782, int_544783], **kwargs_544786)
    
    # Obtaining the member 'check' of a type (line 465)
    check_544788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 4), FuncData_call_result_544787, 'check')
    # Calling check(args, kwargs) (line 465)
    check_call_result_544790 = invoke(stypy.reporting.localization.Localization(__file__, 465, 4), check_544788, *[], **kwargs_544789)
    
    
    # ################# End of 'test_digamma_negreal(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_digamma_negreal' in the type store
    # Getting the type of 'stypy_return_type' (line 445)
    stypy_return_type_544791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_544791)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_digamma_negreal'
    return stypy_return_type_544791

# Assigning a type to the variable 'test_digamma_negreal' (line 445)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 0), 'test_digamma_negreal', test_digamma_negreal)

@norecursion
def test_digamma_boundary(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_digamma_boundary'
    module_type_store = module_type_store.open_function_context('test_digamma_boundary', 468, 0, False)
    
    # Passed parameters checking function
    test_digamma_boundary.stypy_localization = localization
    test_digamma_boundary.stypy_type_of_self = None
    test_digamma_boundary.stypy_type_store = module_type_store
    test_digamma_boundary.stypy_function_name = 'test_digamma_boundary'
    test_digamma_boundary.stypy_param_names_list = []
    test_digamma_boundary.stypy_varargs_param_name = None
    test_digamma_boundary.stypy_kwargs_param_name = None
    test_digamma_boundary.stypy_call_defaults = defaults
    test_digamma_boundary.stypy_call_varargs = varargs
    test_digamma_boundary.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_digamma_boundary', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_digamma_boundary', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_digamma_boundary(...)' code ##################

    
    # Assigning a UnaryOp to a Name (line 473):
    
    # Assigning a UnaryOp to a Name (line 473):
    
    
    # Call to logspace(...): (line 473)
    # Processing the call arguments (line 473)
    int_544794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 21), 'int')
    int_544795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 26), 'int')
    int_544796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 31), 'int')
    # Processing the call keyword arguments (line 473)
    kwargs_544797 = {}
    # Getting the type of 'np' (line 473)
    np_544792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 9), 'np', False)
    # Obtaining the member 'logspace' of a type (line 473)
    logspace_544793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 9), np_544792, 'logspace')
    # Calling logspace(args, kwargs) (line 473)
    logspace_call_result_544798 = invoke(stypy.reporting.localization.Localization(__file__, 473, 9), logspace_544793, *[int_544794, int_544795, int_544796], **kwargs_544797)
    
    # Applying the 'usub' unary operator (line 473)
    result___neg___544799 = python_operator(stypy.reporting.localization.Localization(__file__, 473, 8), 'usub', logspace_call_result_544798)
    
    # Assigning a type to the variable 'x' (line 473)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 4), 'x', result___neg___544799)
    
    # Assigning a Call to a Name (line 474):
    
    # Assigning a Call to a Name (line 474):
    
    # Call to array(...): (line 474)
    # Processing the call arguments (line 474)
    
    # Obtaining an instance of the builtin type 'list' (line 474)
    list_544802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 474)
    # Adding element type (line 474)
    float_544803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 18), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 17), list_544802, float_544803)
    # Adding element type (line 474)
    float_544804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 24), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 17), list_544802, float_544804)
    # Adding element type (line 474)
    float_544805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 30), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 17), list_544802, float_544805)
    # Adding element type (line 474)
    float_544806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 35), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 474, 17), list_544802, float_544806)
    
    # Processing the call keyword arguments (line 474)
    kwargs_544807 = {}
    # Getting the type of 'np' (line 474)
    np_544800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 8), 'np', False)
    # Obtaining the member 'array' of a type (line 474)
    array_544801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 8), np_544800, 'array')
    # Calling array(args, kwargs) (line 474)
    array_call_result_544808 = invoke(stypy.reporting.localization.Localization(__file__, 474, 8), array_544801, *[list_544802], **kwargs_544807)
    
    # Assigning a type to the variable 'y' (line 474)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 474, 4), 'y', array_call_result_544808)
    
    # Assigning a Call to a Tuple (line 475):
    
    # Assigning a Subscript to a Name (line 475):
    
    # Obtaining the type of the subscript
    int_544809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 4), 'int')
    
    # Call to meshgrid(...): (line 475)
    # Processing the call arguments (line 475)
    # Getting the type of 'x' (line 475)
    x_544812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 23), 'x', False)
    # Getting the type of 'y' (line 475)
    y_544813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 26), 'y', False)
    # Processing the call keyword arguments (line 475)
    kwargs_544814 = {}
    # Getting the type of 'np' (line 475)
    np_544810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 475)
    meshgrid_544811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 475, 11), np_544810, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 475)
    meshgrid_call_result_544815 = invoke(stypy.reporting.localization.Localization(__file__, 475, 11), meshgrid_544811, *[x_544812, y_544813], **kwargs_544814)
    
    # Obtaining the member '__getitem__' of a type (line 475)
    getitem___544816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 475, 4), meshgrid_call_result_544815, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 475)
    subscript_call_result_544817 = invoke(stypy.reporting.localization.Localization(__file__, 475, 4), getitem___544816, int_544809)
    
    # Assigning a type to the variable 'tuple_var_assignment_542780' (line 475)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'tuple_var_assignment_542780', subscript_call_result_544817)
    
    # Assigning a Subscript to a Name (line 475):
    
    # Obtaining the type of the subscript
    int_544818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 4), 'int')
    
    # Call to meshgrid(...): (line 475)
    # Processing the call arguments (line 475)
    # Getting the type of 'x' (line 475)
    x_544821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 23), 'x', False)
    # Getting the type of 'y' (line 475)
    y_544822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 26), 'y', False)
    # Processing the call keyword arguments (line 475)
    kwargs_544823 = {}
    # Getting the type of 'np' (line 475)
    np_544819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 475)
    meshgrid_544820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 475, 11), np_544819, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 475)
    meshgrid_call_result_544824 = invoke(stypy.reporting.localization.Localization(__file__, 475, 11), meshgrid_544820, *[x_544821, y_544822], **kwargs_544823)
    
    # Obtaining the member '__getitem__' of a type (line 475)
    getitem___544825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 475, 4), meshgrid_call_result_544824, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 475)
    subscript_call_result_544826 = invoke(stypy.reporting.localization.Localization(__file__, 475, 4), getitem___544825, int_544818)
    
    # Assigning a type to the variable 'tuple_var_assignment_542781' (line 475)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'tuple_var_assignment_542781', subscript_call_result_544826)
    
    # Assigning a Name to a Name (line 475):
    # Getting the type of 'tuple_var_assignment_542780' (line 475)
    tuple_var_assignment_542780_544827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'tuple_var_assignment_542780')
    # Assigning a type to the variable 'x' (line 475)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'x', tuple_var_assignment_542780_544827)
    
    # Assigning a Name to a Name (line 475):
    # Getting the type of 'tuple_var_assignment_542781' (line 475)
    tuple_var_assignment_542781_544828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'tuple_var_assignment_542781')
    # Assigning a type to the variable 'y' (line 475)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 7), 'y', tuple_var_assignment_542781_544828)
    
    # Assigning a Call to a Name (line 476):
    
    # Assigning a Call to a Name (line 476):
    
    # Call to flatten(...): (line 476)
    # Processing the call keyword arguments (line 476)
    kwargs_544835 = {}
    # Getting the type of 'x' (line 476)
    x_544829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 9), 'x', False)
    complex_544830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 13), 'complex')
    # Getting the type of 'y' (line 476)
    y_544831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 16), 'y', False)
    # Applying the binary operator '*' (line 476)
    result_mul_544832 = python_operator(stypy.reporting.localization.Localization(__file__, 476, 13), '*', complex_544830, y_544831)
    
    # Applying the binary operator '+' (line 476)
    result_add_544833 = python_operator(stypy.reporting.localization.Localization(__file__, 476, 9), '+', x_544829, result_mul_544832)
    
    # Obtaining the member 'flatten' of a type (line 476)
    flatten_544834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 9), result_add_544833, 'flatten')
    # Calling flatten(args, kwargs) (line 476)
    flatten_call_result_544836 = invoke(stypy.reporting.localization.Localization(__file__, 476, 9), flatten_544834, *[], **kwargs_544835)
    
    # Assigning a type to the variable 'z' (line 476)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 4), 'z', flatten_call_result_544836)
    
    # Assigning a List to a Name (line 478):
    
    # Assigning a List to a Name (line 478):
    
    # Obtaining an instance of the builtin type 'list' (line 478)
    list_544837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 478)
    
    # Assigning a type to the variable 'dataset' (line 478)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 4), 'dataset', list_544837)
    
    # Call to workdps(...): (line 479)
    # Processing the call arguments (line 479)
    int_544840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 24), 'int')
    # Processing the call keyword arguments (line 479)
    kwargs_544841 = {}
    # Getting the type of 'mpmath' (line 479)
    mpmath_544838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 9), 'mpmath', False)
    # Obtaining the member 'workdps' of a type (line 479)
    workdps_544839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 9), mpmath_544838, 'workdps')
    # Calling workdps(args, kwargs) (line 479)
    workdps_call_result_544842 = invoke(stypy.reporting.localization.Localization(__file__, 479, 9), workdps_544839, *[int_544840], **kwargs_544841)
    
    with_544843 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 479, 9), workdps_call_result_544842, 'with parameter', '__enter__', '__exit__')

    if with_544843:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 479)
        enter___544844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 9), workdps_call_result_544842, '__enter__')
        with_enter_544845 = invoke(stypy.reporting.localization.Localization(__file__, 479, 9), enter___544844)
        
        # Getting the type of 'z' (line 480)
        z_544846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 18), 'z')
        # Testing the type of a for loop iterable (line 480)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 480, 8), z_544846)
        # Getting the type of the for loop variable (line 480)
        for_loop_var_544847 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 480, 8), z_544846)
        # Assigning a type to the variable 'z0' (line 480)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 8), 'z0', for_loop_var_544847)
        # SSA begins for a for statement (line 480)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 481):
        
        # Assigning a Call to a Name (line 481):
        
        # Call to digamma(...): (line 481)
        # Processing the call arguments (line 481)
        # Getting the type of 'z0' (line 481)
        z0_544850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 33), 'z0', False)
        # Processing the call keyword arguments (line 481)
        kwargs_544851 = {}
        # Getting the type of 'mpmath' (line 481)
        mpmath_544848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 18), 'mpmath', False)
        # Obtaining the member 'digamma' of a type (line 481)
        digamma_544849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 18), mpmath_544848, 'digamma')
        # Calling digamma(args, kwargs) (line 481)
        digamma_call_result_544852 = invoke(stypy.reporting.localization.Localization(__file__, 481, 18), digamma_544849, *[z0_544850], **kwargs_544851)
        
        # Assigning a type to the variable 'res' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 12), 'res', digamma_call_result_544852)
        
        # Call to append(...): (line 482)
        # Processing the call arguments (line 482)
        
        # Obtaining an instance of the builtin type 'tuple' (line 482)
        tuple_544855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 482)
        # Adding element type (line 482)
        # Getting the type of 'z0' (line 482)
        z0_544856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 28), 'z0', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 28), tuple_544855, z0_544856)
        # Adding element type (line 482)
        
        # Call to complex(...): (line 482)
        # Processing the call arguments (line 482)
        # Getting the type of 'res' (line 482)
        res_544858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 40), 'res', False)
        # Processing the call keyword arguments (line 482)
        kwargs_544859 = {}
        # Getting the type of 'complex' (line 482)
        complex_544857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 32), 'complex', False)
        # Calling complex(args, kwargs) (line 482)
        complex_call_result_544860 = invoke(stypy.reporting.localization.Localization(__file__, 482, 32), complex_544857, *[res_544858], **kwargs_544859)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 28), tuple_544855, complex_call_result_544860)
        
        # Processing the call keyword arguments (line 482)
        kwargs_544861 = {}
        # Getting the type of 'dataset' (line 482)
        dataset_544853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'dataset', False)
        # Obtaining the member 'append' of a type (line 482)
        append_544854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 482, 12), dataset_544853, 'append')
        # Calling append(args, kwargs) (line 482)
        append_call_result_544862 = invoke(stypy.reporting.localization.Localization(__file__, 482, 12), append_544854, *[tuple_544855], **kwargs_544861)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 479)
        exit___544863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 9), workdps_call_result_544842, '__exit__')
        with_exit_544864 = invoke(stypy.reporting.localization.Localization(__file__, 479, 9), exit___544863, None, None, None)

    
    # Assigning a Call to a Name (line 483):
    
    # Assigning a Call to a Name (line 483):
    
    # Call to asarray(...): (line 483)
    # Processing the call arguments (line 483)
    # Getting the type of 'dataset' (line 483)
    dataset_544867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 25), 'dataset', False)
    # Processing the call keyword arguments (line 483)
    kwargs_544868 = {}
    # Getting the type of 'np' (line 483)
    np_544865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 14), 'np', False)
    # Obtaining the member 'asarray' of a type (line 483)
    asarray_544866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 14), np_544865, 'asarray')
    # Calling asarray(args, kwargs) (line 483)
    asarray_call_result_544869 = invoke(stypy.reporting.localization.Localization(__file__, 483, 14), asarray_544866, *[dataset_544867], **kwargs_544868)
    
    # Assigning a type to the variable 'dataset' (line 483)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 4), 'dataset', asarray_call_result_544869)
    
    # Call to check(...): (line 485)
    # Processing the call keyword arguments (line 485)
    kwargs_544881 = {}
    
    # Call to FuncData(...): (line 485)
    # Processing the call arguments (line 485)
    # Getting the type of 'sc' (line 485)
    sc_544871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 13), 'sc', False)
    # Obtaining the member 'digamma' of a type (line 485)
    digamma_544872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 13), sc_544871, 'digamma')
    # Getting the type of 'dataset' (line 485)
    dataset_544873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 25), 'dataset', False)
    int_544874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 34), 'int')
    int_544875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 37), 'int')
    # Processing the call keyword arguments (line 485)
    float_544876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 45), 'float')
    keyword_544877 = float_544876
    kwargs_544878 = {'rtol': keyword_544877}
    # Getting the type of 'FuncData' (line 485)
    FuncData_544870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 485)
    FuncData_call_result_544879 = invoke(stypy.reporting.localization.Localization(__file__, 485, 4), FuncData_544870, *[digamma_544872, dataset_544873, int_544874, int_544875], **kwargs_544878)
    
    # Obtaining the member 'check' of a type (line 485)
    check_544880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 4), FuncData_call_result_544879, 'check')
    # Calling check(args, kwargs) (line 485)
    check_call_result_544882 = invoke(stypy.reporting.localization.Localization(__file__, 485, 4), check_544880, *[], **kwargs_544881)
    
    
    # ################# End of 'test_digamma_boundary(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_digamma_boundary' in the type store
    # Getting the type of 'stypy_return_type' (line 468)
    stypy_return_type_544883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_544883)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_digamma_boundary'
    return stypy_return_type_544883

# Assigning a type to the variable 'test_digamma_boundary' (line 468)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 0), 'test_digamma_boundary', test_digamma_boundary)

@norecursion
def test_gammainc_boundary(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_gammainc_boundary'
    module_type_store = module_type_store.open_function_context('test_gammainc_boundary', 492, 0, False)
    
    # Passed parameters checking function
    test_gammainc_boundary.stypy_localization = localization
    test_gammainc_boundary.stypy_type_of_self = None
    test_gammainc_boundary.stypy_type_store = module_type_store
    test_gammainc_boundary.stypy_function_name = 'test_gammainc_boundary'
    test_gammainc_boundary.stypy_param_names_list = []
    test_gammainc_boundary.stypy_varargs_param_name = None
    test_gammainc_boundary.stypy_kwargs_param_name = None
    test_gammainc_boundary.stypy_call_defaults = defaults
    test_gammainc_boundary.stypy_call_varargs = varargs
    test_gammainc_boundary.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_gammainc_boundary', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_gammainc_boundary', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_gammainc_boundary(...)' code ##################

    
    # Assigning a Num to a Name (line 496):
    
    # Assigning a Num to a Name (line 496):
    int_544884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 12), 'int')
    # Assigning a type to the variable 'small' (line 496)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 496, 4), 'small', int_544884)
    
    # Assigning a Call to a Name (line 497):
    
    # Assigning a Call to a Name (line 497):
    
    # Call to linspace(...): (line 497)
    # Processing the call arguments (line 497)
    float_544887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 20), 'float')
    # Getting the type of 'small' (line 497)
    small_544888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 24), 'small', False)
    # Applying the binary operator '*' (line 497)
    result_mul_544889 = python_operator(stypy.reporting.localization.Localization(__file__, 497, 20), '*', float_544887, small_544888)
    
    int_544890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 31), 'int')
    # Getting the type of 'small' (line 497)
    small_544891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 33), 'small', False)
    # Applying the binary operator '*' (line 497)
    result_mul_544892 = python_operator(stypy.reporting.localization.Localization(__file__, 497, 31), '*', int_544890, small_544891)
    
    int_544893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 40), 'int')
    # Processing the call keyword arguments (line 497)
    kwargs_544894 = {}
    # Getting the type of 'np' (line 497)
    np_544885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 8), 'np', False)
    # Obtaining the member 'linspace' of a type (line 497)
    linspace_544886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 8), np_544885, 'linspace')
    # Calling linspace(args, kwargs) (line 497)
    linspace_call_result_544895 = invoke(stypy.reporting.localization.Localization(__file__, 497, 8), linspace_544886, *[result_mul_544889, result_mul_544892, int_544893], **kwargs_544894)
    
    # Assigning a type to the variable 'a' (line 497)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 497, 4), 'a', linspace_call_result_544895)
    
    # Assigning a Call to a Name (line 498):
    
    # Assigning a Call to a Name (line 498):
    
    # Call to copy(...): (line 498)
    # Processing the call keyword arguments (line 498)
    kwargs_544898 = {}
    # Getting the type of 'a' (line 498)
    a_544896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 8), 'a', False)
    # Obtaining the member 'copy' of a type (line 498)
    copy_544897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 8), a_544896, 'copy')
    # Calling copy(args, kwargs) (line 498)
    copy_call_result_544899 = invoke(stypy.reporting.localization.Localization(__file__, 498, 8), copy_544897, *[], **kwargs_544898)
    
    # Assigning a type to the variable 'x' (line 498)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 4), 'x', copy_call_result_544899)
    
    # Assigning a Call to a Tuple (line 499):
    
    # Assigning a Subscript to a Name (line 499):
    
    # Obtaining the type of the subscript
    int_544900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 4), 'int')
    
    # Call to meshgrid(...): (line 499)
    # Processing the call arguments (line 499)
    # Getting the type of 'a' (line 499)
    a_544903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 23), 'a', False)
    # Getting the type of 'x' (line 499)
    x_544904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 26), 'x', False)
    # Processing the call keyword arguments (line 499)
    kwargs_544905 = {}
    # Getting the type of 'np' (line 499)
    np_544901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 499)
    meshgrid_544902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 11), np_544901, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 499)
    meshgrid_call_result_544906 = invoke(stypy.reporting.localization.Localization(__file__, 499, 11), meshgrid_544902, *[a_544903, x_544904], **kwargs_544905)
    
    # Obtaining the member '__getitem__' of a type (line 499)
    getitem___544907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 4), meshgrid_call_result_544906, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 499)
    subscript_call_result_544908 = invoke(stypy.reporting.localization.Localization(__file__, 499, 4), getitem___544907, int_544900)
    
    # Assigning a type to the variable 'tuple_var_assignment_542782' (line 499)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 4), 'tuple_var_assignment_542782', subscript_call_result_544908)
    
    # Assigning a Subscript to a Name (line 499):
    
    # Obtaining the type of the subscript
    int_544909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 4), 'int')
    
    # Call to meshgrid(...): (line 499)
    # Processing the call arguments (line 499)
    # Getting the type of 'a' (line 499)
    a_544912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 23), 'a', False)
    # Getting the type of 'x' (line 499)
    x_544913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 26), 'x', False)
    # Processing the call keyword arguments (line 499)
    kwargs_544914 = {}
    # Getting the type of 'np' (line 499)
    np_544910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 499)
    meshgrid_544911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 11), np_544910, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 499)
    meshgrid_call_result_544915 = invoke(stypy.reporting.localization.Localization(__file__, 499, 11), meshgrid_544911, *[a_544912, x_544913], **kwargs_544914)
    
    # Obtaining the member '__getitem__' of a type (line 499)
    getitem___544916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 4), meshgrid_call_result_544915, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 499)
    subscript_call_result_544917 = invoke(stypy.reporting.localization.Localization(__file__, 499, 4), getitem___544916, int_544909)
    
    # Assigning a type to the variable 'tuple_var_assignment_542783' (line 499)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 4), 'tuple_var_assignment_542783', subscript_call_result_544917)
    
    # Assigning a Name to a Name (line 499):
    # Getting the type of 'tuple_var_assignment_542782' (line 499)
    tuple_var_assignment_542782_544918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 4), 'tuple_var_assignment_542782')
    # Assigning a type to the variable 'a' (line 499)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 4), 'a', tuple_var_assignment_542782_544918)
    
    # Assigning a Name to a Name (line 499):
    # Getting the type of 'tuple_var_assignment_542783' (line 499)
    tuple_var_assignment_542783_544919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 4), 'tuple_var_assignment_542783')
    # Assigning a type to the variable 'x' (line 499)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 7), 'x', tuple_var_assignment_542783_544919)
    
    # Assigning a Tuple to a Tuple (line 500):
    
    # Assigning a Call to a Name (line 500):
    
    # Call to flatten(...): (line 500)
    # Processing the call keyword arguments (line 500)
    kwargs_544922 = {}
    # Getting the type of 'a' (line 500)
    a_544920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 11), 'a', False)
    # Obtaining the member 'flatten' of a type (line 500)
    flatten_544921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 11), a_544920, 'flatten')
    # Calling flatten(args, kwargs) (line 500)
    flatten_call_result_544923 = invoke(stypy.reporting.localization.Localization(__file__, 500, 11), flatten_544921, *[], **kwargs_544922)
    
    # Assigning a type to the variable 'tuple_assignment_542784' (line 500)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 4), 'tuple_assignment_542784', flatten_call_result_544923)
    
    # Assigning a Call to a Name (line 500):
    
    # Call to flatten(...): (line 500)
    # Processing the call keyword arguments (line 500)
    kwargs_544926 = {}
    # Getting the type of 'x' (line 500)
    x_544924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 24), 'x', False)
    # Obtaining the member 'flatten' of a type (line 500)
    flatten_544925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 24), x_544924, 'flatten')
    # Calling flatten(args, kwargs) (line 500)
    flatten_call_result_544927 = invoke(stypy.reporting.localization.Localization(__file__, 500, 24), flatten_544925, *[], **kwargs_544926)
    
    # Assigning a type to the variable 'tuple_assignment_542785' (line 500)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 4), 'tuple_assignment_542785', flatten_call_result_544927)
    
    # Assigning a Name to a Name (line 500):
    # Getting the type of 'tuple_assignment_542784' (line 500)
    tuple_assignment_542784_544928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 4), 'tuple_assignment_542784')
    # Assigning a type to the variable 'a' (line 500)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 4), 'a', tuple_assignment_542784_544928)
    
    # Assigning a Name to a Name (line 500):
    # Getting the type of 'tuple_assignment_542785' (line 500)
    tuple_assignment_542785_544929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 4), 'tuple_assignment_542785')
    # Assigning a type to the variable 'x' (line 500)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 7), 'x', tuple_assignment_542785_544929)
    
    # Assigning a List to a Name (line 501):
    
    # Assigning a List to a Name (line 501):
    
    # Obtaining an instance of the builtin type 'list' (line 501)
    list_544930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 501)
    
    # Assigning a type to the variable 'dataset' (line 501)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 501, 4), 'dataset', list_544930)
    
    # Call to workdps(...): (line 502)
    # Processing the call arguments (line 502)
    int_544933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 502, 24), 'int')
    # Processing the call keyword arguments (line 502)
    kwargs_544934 = {}
    # Getting the type of 'mpmath' (line 502)
    mpmath_544931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 9), 'mpmath', False)
    # Obtaining the member 'workdps' of a type (line 502)
    workdps_544932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 9), mpmath_544931, 'workdps')
    # Calling workdps(args, kwargs) (line 502)
    workdps_call_result_544935 = invoke(stypy.reporting.localization.Localization(__file__, 502, 9), workdps_544932, *[int_544933], **kwargs_544934)
    
    with_544936 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 502, 9), workdps_call_result_544935, 'with parameter', '__enter__', '__exit__')

    if with_544936:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 502)
        enter___544937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 9), workdps_call_result_544935, '__enter__')
        with_enter_544938 = invoke(stypy.reporting.localization.Localization(__file__, 502, 9), enter___544937)
        
        
        # Call to zip(...): (line 503)
        # Processing the call arguments (line 503)
        # Getting the type of 'a' (line 503)
        a_544940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 26), 'a', False)
        # Getting the type of 'x' (line 503)
        x_544941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 29), 'x', False)
        # Processing the call keyword arguments (line 503)
        kwargs_544942 = {}
        # Getting the type of 'zip' (line 503)
        zip_544939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 22), 'zip', False)
        # Calling zip(args, kwargs) (line 503)
        zip_call_result_544943 = invoke(stypy.reporting.localization.Localization(__file__, 503, 22), zip_544939, *[a_544940, x_544941], **kwargs_544942)
        
        # Testing the type of a for loop iterable (line 503)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 503, 8), zip_call_result_544943)
        # Getting the type of the for loop variable (line 503)
        for_loop_var_544944 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 503, 8), zip_call_result_544943)
        # Assigning a type to the variable 'a0' (line 503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 503, 8), 'a0', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 503, 8), for_loop_var_544944))
        # Assigning a type to the variable 'x0' (line 503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 503, 8), 'x0', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 503, 8), for_loop_var_544944))
        # SSA begins for a for statement (line 503)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to append(...): (line 504)
        # Processing the call arguments (line 504)
        
        # Obtaining an instance of the builtin type 'tuple' (line 504)
        tuple_544947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 504, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 504)
        # Adding element type (line 504)
        # Getting the type of 'a0' (line 504)
        a0_544948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 28), 'a0', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 28), tuple_544947, a0_544948)
        # Adding element type (line 504)
        # Getting the type of 'x0' (line 504)
        x0_544949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 32), 'x0', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 28), tuple_544947, x0_544949)
        # Adding element type (line 504)
        
        # Call to float(...): (line 504)
        # Processing the call arguments (line 504)
        
        # Call to gammainc(...): (line 504)
        # Processing the call arguments (line 504)
        # Getting the type of 'a0' (line 504)
        a0_544953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 58), 'a0', False)
        # Processing the call keyword arguments (line 504)
        # Getting the type of 'x0' (line 504)
        x0_544954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 64), 'x0', False)
        keyword_544955 = x0_544954
        # Getting the type of 'True' (line 504)
        True_544956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 80), 'True', False)
        keyword_544957 = True_544956
        kwargs_544958 = {'regularized': keyword_544957, 'b': keyword_544955}
        # Getting the type of 'mpmath' (line 504)
        mpmath_544951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 42), 'mpmath', False)
        # Obtaining the member 'gammainc' of a type (line 504)
        gammainc_544952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 504, 42), mpmath_544951, 'gammainc')
        # Calling gammainc(args, kwargs) (line 504)
        gammainc_call_result_544959 = invoke(stypy.reporting.localization.Localization(__file__, 504, 42), gammainc_544952, *[a0_544953], **kwargs_544958)
        
        # Processing the call keyword arguments (line 504)
        kwargs_544960 = {}
        # Getting the type of 'float' (line 504)
        float_544950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 36), 'float', False)
        # Calling float(args, kwargs) (line 504)
        float_call_result_544961 = invoke(stypy.reporting.localization.Localization(__file__, 504, 36), float_544950, *[gammainc_call_result_544959], **kwargs_544960)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 504, 28), tuple_544947, float_call_result_544961)
        
        # Processing the call keyword arguments (line 504)
        kwargs_544962 = {}
        # Getting the type of 'dataset' (line 504)
        dataset_544945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 12), 'dataset', False)
        # Obtaining the member 'append' of a type (line 504)
        append_544946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 504, 12), dataset_544945, 'append')
        # Calling append(args, kwargs) (line 504)
        append_call_result_544963 = invoke(stypy.reporting.localization.Localization(__file__, 504, 12), append_544946, *[tuple_544947], **kwargs_544962)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 502)
        exit___544964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 9), workdps_call_result_544935, '__exit__')
        with_exit_544965 = invoke(stypy.reporting.localization.Localization(__file__, 502, 9), exit___544964, None, None, None)

    
    # Assigning a Call to a Name (line 505):
    
    # Assigning a Call to a Name (line 505):
    
    # Call to array(...): (line 505)
    # Processing the call arguments (line 505)
    # Getting the type of 'dataset' (line 505)
    dataset_544968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 23), 'dataset', False)
    # Processing the call keyword arguments (line 505)
    kwargs_544969 = {}
    # Getting the type of 'np' (line 505)
    np_544966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 505)
    array_544967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 14), np_544966, 'array')
    # Calling array(args, kwargs) (line 505)
    array_call_result_544970 = invoke(stypy.reporting.localization.Localization(__file__, 505, 14), array_544967, *[dataset_544968], **kwargs_544969)
    
    # Assigning a type to the variable 'dataset' (line 505)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 505, 4), 'dataset', array_call_result_544970)
    
    # Call to check(...): (line 507)
    # Processing the call keyword arguments (line 507)
    kwargs_544984 = {}
    
    # Call to FuncData(...): (line 507)
    # Processing the call arguments (line 507)
    # Getting the type of 'sc' (line 507)
    sc_544972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 13), 'sc', False)
    # Obtaining the member 'gammainc' of a type (line 507)
    gammainc_544973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 507, 13), sc_544972, 'gammainc')
    # Getting the type of 'dataset' (line 507)
    dataset_544974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 26), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 507)
    tuple_544975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 507)
    # Adding element type (line 507)
    int_544976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 36), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 36), tuple_544975, int_544976)
    # Adding element type (line 507)
    int_544977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 39), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 36), tuple_544975, int_544977)
    
    int_544978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 43), 'int')
    # Processing the call keyword arguments (line 507)
    float_544979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 51), 'float')
    keyword_544980 = float_544979
    kwargs_544981 = {'rtol': keyword_544980}
    # Getting the type of 'FuncData' (line 507)
    FuncData_544971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 507)
    FuncData_call_result_544982 = invoke(stypy.reporting.localization.Localization(__file__, 507, 4), FuncData_544971, *[gammainc_544973, dataset_544974, tuple_544975, int_544978], **kwargs_544981)
    
    # Obtaining the member 'check' of a type (line 507)
    check_544983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 507, 4), FuncData_call_result_544982, 'check')
    # Calling check(args, kwargs) (line 507)
    check_call_result_544985 = invoke(stypy.reporting.localization.Localization(__file__, 507, 4), check_544983, *[], **kwargs_544984)
    
    
    # ################# End of 'test_gammainc_boundary(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_gammainc_boundary' in the type store
    # Getting the type of 'stypy_return_type' (line 492)
    stypy_return_type_544986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_544986)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_gammainc_boundary'
    return stypy_return_type_544986

# Assigning a type to the variable 'test_gammainc_boundary' (line 492)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 492, 0), 'test_gammainc_boundary', test_gammainc_boundary)

@norecursion
def test_spence_circle(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_spence_circle'
    module_type_store = module_type_store.open_function_context('test_spence_circle', 514, 0, False)
    
    # Passed parameters checking function
    test_spence_circle.stypy_localization = localization
    test_spence_circle.stypy_type_of_self = None
    test_spence_circle.stypy_type_store = module_type_store
    test_spence_circle.stypy_function_name = 'test_spence_circle'
    test_spence_circle.stypy_param_names_list = []
    test_spence_circle.stypy_varargs_param_name = None
    test_spence_circle.stypy_kwargs_param_name = None
    test_spence_circle.stypy_call_defaults = defaults
    test_spence_circle.stypy_call_varargs = varargs
    test_spence_circle.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_spence_circle', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_spence_circle', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_spence_circle(...)' code ##################


    @norecursion
    def spence(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'spence'
        module_type_store = module_type_store.open_function_context('spence', 520, 4, False)
        
        # Passed parameters checking function
        spence.stypy_localization = localization
        spence.stypy_type_of_self = None
        spence.stypy_type_store = module_type_store
        spence.stypy_function_name = 'spence'
        spence.stypy_param_names_list = ['z']
        spence.stypy_varargs_param_name = None
        spence.stypy_kwargs_param_name = None
        spence.stypy_call_defaults = defaults
        spence.stypy_call_varargs = varargs
        spence.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'spence', ['z'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'spence', localization, ['z'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'spence(...)' code ##################

        
        # Call to complex(...): (line 521)
        # Processing the call arguments (line 521)
        
        # Call to polylog(...): (line 521)
        # Processing the call arguments (line 521)
        int_544990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 521, 38), 'int')
        int_544991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 521, 41), 'int')
        # Getting the type of 'z' (line 521)
        z_544992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 45), 'z', False)
        # Applying the binary operator '-' (line 521)
        result_sub_544993 = python_operator(stypy.reporting.localization.Localization(__file__, 521, 41), '-', int_544991, z_544992)
        
        # Processing the call keyword arguments (line 521)
        kwargs_544994 = {}
        # Getting the type of 'mpmath' (line 521)
        mpmath_544988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 23), 'mpmath', False)
        # Obtaining the member 'polylog' of a type (line 521)
        polylog_544989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 23), mpmath_544988, 'polylog')
        # Calling polylog(args, kwargs) (line 521)
        polylog_call_result_544995 = invoke(stypy.reporting.localization.Localization(__file__, 521, 23), polylog_544989, *[int_544990, result_sub_544993], **kwargs_544994)
        
        # Processing the call keyword arguments (line 521)
        kwargs_544996 = {}
        # Getting the type of 'complex' (line 521)
        complex_544987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 15), 'complex', False)
        # Calling complex(args, kwargs) (line 521)
        complex_call_result_544997 = invoke(stypy.reporting.localization.Localization(__file__, 521, 15), complex_544987, *[polylog_call_result_544995], **kwargs_544996)
        
        # Assigning a type to the variable 'stypy_return_type' (line 521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'stypy_return_type', complex_call_result_544997)
        
        # ################# End of 'spence(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'spence' in the type store
        # Getting the type of 'stypy_return_type' (line 520)
        stypy_return_type_544998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_544998)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'spence'
        return stypy_return_type_544998

    # Assigning a type to the variable 'spence' (line 520)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 4), 'spence', spence)
    
    # Assigning a Call to a Name (line 523):
    
    # Assigning a Call to a Name (line 523):
    
    # Call to linspace(...): (line 523)
    # Processing the call arguments (line 523)
    float_545001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 20), 'float')
    float_545002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 25), 'float')
    # Processing the call keyword arguments (line 523)
    kwargs_545003 = {}
    # Getting the type of 'np' (line 523)
    np_544999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 8), 'np', False)
    # Obtaining the member 'linspace' of a type (line 523)
    linspace_545000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 8), np_544999, 'linspace')
    # Calling linspace(args, kwargs) (line 523)
    linspace_call_result_545004 = invoke(stypy.reporting.localization.Localization(__file__, 523, 8), linspace_545000, *[float_545001, float_545002], **kwargs_545003)
    
    # Assigning a type to the variable 'r' (line 523)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 523, 4), 'r', linspace_call_result_545004)
    
    # Assigning a Call to a Name (line 524):
    
    # Assigning a Call to a Name (line 524):
    
    # Call to linspace(...): (line 524)
    # Processing the call arguments (line 524)
    int_545007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 24), 'int')
    int_545008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 27), 'int')
    # Getting the type of 'pi' (line 524)
    pi_545009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 29), 'pi', False)
    # Applying the binary operator '*' (line 524)
    result_mul_545010 = python_operator(stypy.reporting.localization.Localization(__file__, 524, 27), '*', int_545008, pi_545009)
    
    # Processing the call keyword arguments (line 524)
    kwargs_545011 = {}
    # Getting the type of 'np' (line 524)
    np_545005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 12), 'np', False)
    # Obtaining the member 'linspace' of a type (line 524)
    linspace_545006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 12), np_545005, 'linspace')
    # Calling linspace(args, kwargs) (line 524)
    linspace_call_result_545012 = invoke(stypy.reporting.localization.Localization(__file__, 524, 12), linspace_545006, *[int_545007, result_mul_545010], **kwargs_545011)
    
    # Assigning a type to the variable 'theta' (line 524)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 4), 'theta', linspace_call_result_545012)
    
    # Assigning a Call to a Name (line 525):
    
    # Assigning a Call to a Name (line 525):
    
    # Call to flatten(...): (line 525)
    # Processing the call keyword arguments (line 525)
    kwargs_545028 = {}
    int_545013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 9), 'int')
    
    # Call to outer(...): (line 525)
    # Processing the call arguments (line 525)
    # Getting the type of 'r' (line 525)
    r_545016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 22), 'r', False)
    
    # Call to exp(...): (line 525)
    # Processing the call arguments (line 525)
    complex_545019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 32), 'complex')
    # Getting the type of 'theta' (line 525)
    theta_545020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 35), 'theta', False)
    # Applying the binary operator '*' (line 525)
    result_mul_545021 = python_operator(stypy.reporting.localization.Localization(__file__, 525, 32), '*', complex_545019, theta_545020)
    
    # Processing the call keyword arguments (line 525)
    kwargs_545022 = {}
    # Getting the type of 'np' (line 525)
    np_545017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 25), 'np', False)
    # Obtaining the member 'exp' of a type (line 525)
    exp_545018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 25), np_545017, 'exp')
    # Calling exp(args, kwargs) (line 525)
    exp_call_result_545023 = invoke(stypy.reporting.localization.Localization(__file__, 525, 25), exp_545018, *[result_mul_545021], **kwargs_545022)
    
    # Processing the call keyword arguments (line 525)
    kwargs_545024 = {}
    # Getting the type of 'np' (line 525)
    np_545014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 13), 'np', False)
    # Obtaining the member 'outer' of a type (line 525)
    outer_545015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 13), np_545014, 'outer')
    # Calling outer(args, kwargs) (line 525)
    outer_call_result_545025 = invoke(stypy.reporting.localization.Localization(__file__, 525, 13), outer_545015, *[r_545016, exp_call_result_545023], **kwargs_545024)
    
    # Applying the binary operator '+' (line 525)
    result_add_545026 = python_operator(stypy.reporting.localization.Localization(__file__, 525, 9), '+', int_545013, outer_call_result_545025)
    
    # Obtaining the member 'flatten' of a type (line 525)
    flatten_545027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 9), result_add_545026, 'flatten')
    # Calling flatten(args, kwargs) (line 525)
    flatten_call_result_545029 = invoke(stypy.reporting.localization.Localization(__file__, 525, 9), flatten_545027, *[], **kwargs_545028)
    
    # Assigning a type to the variable 'z' (line 525)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 525, 4), 'z', flatten_call_result_545029)
    
    # Assigning a List to a Name (line 526):
    
    # Assigning a List to a Name (line 526):
    
    # Obtaining an instance of the builtin type 'list' (line 526)
    list_545030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 526, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 526)
    
    # Assigning a type to the variable 'dataset' (line 526)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 526, 4), 'dataset', list_545030)
    
    # Getting the type of 'z' (line 527)
    z_545031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 14), 'z')
    # Testing the type of a for loop iterable (line 527)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 527, 4), z_545031)
    # Getting the type of the for loop variable (line 527)
    for_loop_var_545032 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 527, 4), z_545031)
    # Assigning a type to the variable 'z0' (line 527)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 4), 'z0', for_loop_var_545032)
    # SSA begins for a for statement (line 527)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 528)
    # Processing the call arguments (line 528)
    
    # Obtaining an instance of the builtin type 'tuple' (line 528)
    tuple_545035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 528)
    # Adding element type (line 528)
    # Getting the type of 'z0' (line 528)
    z0_545036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 24), 'z0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 528, 24), tuple_545035, z0_545036)
    # Adding element type (line 528)
    
    # Call to spence(...): (line 528)
    # Processing the call arguments (line 528)
    # Getting the type of 'z0' (line 528)
    z0_545038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 35), 'z0', False)
    # Processing the call keyword arguments (line 528)
    kwargs_545039 = {}
    # Getting the type of 'spence' (line 528)
    spence_545037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 28), 'spence', False)
    # Calling spence(args, kwargs) (line 528)
    spence_call_result_545040 = invoke(stypy.reporting.localization.Localization(__file__, 528, 28), spence_545037, *[z0_545038], **kwargs_545039)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 528, 24), tuple_545035, spence_call_result_545040)
    
    # Processing the call keyword arguments (line 528)
    kwargs_545041 = {}
    # Getting the type of 'dataset' (line 528)
    dataset_545033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 8), 'dataset', False)
    # Obtaining the member 'append' of a type (line 528)
    append_545034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 8), dataset_545033, 'append')
    # Calling append(args, kwargs) (line 528)
    append_call_result_545042 = invoke(stypy.reporting.localization.Localization(__file__, 528, 8), append_545034, *[tuple_545035], **kwargs_545041)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 530):
    
    # Assigning a Call to a Name (line 530):
    
    # Call to array(...): (line 530)
    # Processing the call arguments (line 530)
    # Getting the type of 'dataset' (line 530)
    dataset_545045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 23), 'dataset', False)
    # Processing the call keyword arguments (line 530)
    kwargs_545046 = {}
    # Getting the type of 'np' (line 530)
    np_545043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 530)
    array_545044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 14), np_545043, 'array')
    # Calling array(args, kwargs) (line 530)
    array_call_result_545047 = invoke(stypy.reporting.localization.Localization(__file__, 530, 14), array_545044, *[dataset_545045], **kwargs_545046)
    
    # Assigning a type to the variable 'dataset' (line 530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 530, 4), 'dataset', array_call_result_545047)
    
    # Call to check(...): (line 531)
    # Processing the call keyword arguments (line 531)
    kwargs_545059 = {}
    
    # Call to FuncData(...): (line 531)
    # Processing the call arguments (line 531)
    # Getting the type of 'sc' (line 531)
    sc_545049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 13), 'sc', False)
    # Obtaining the member 'spence' of a type (line 531)
    spence_545050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 13), sc_545049, 'spence')
    # Getting the type of 'dataset' (line 531)
    dataset_545051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 24), 'dataset', False)
    int_545052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 33), 'int')
    int_545053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 36), 'int')
    # Processing the call keyword arguments (line 531)
    float_545054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 44), 'float')
    keyword_545055 = float_545054
    kwargs_545056 = {'rtol': keyword_545055}
    # Getting the type of 'FuncData' (line 531)
    FuncData_545048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 531)
    FuncData_call_result_545057 = invoke(stypy.reporting.localization.Localization(__file__, 531, 4), FuncData_545048, *[spence_545050, dataset_545051, int_545052, int_545053], **kwargs_545056)
    
    # Obtaining the member 'check' of a type (line 531)
    check_545058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 4), FuncData_call_result_545057, 'check')
    # Calling check(args, kwargs) (line 531)
    check_call_result_545060 = invoke(stypy.reporting.localization.Localization(__file__, 531, 4), check_545058, *[], **kwargs_545059)
    
    
    # ################# End of 'test_spence_circle(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_spence_circle' in the type store
    # Getting the type of 'stypy_return_type' (line 514)
    stypy_return_type_545061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_545061)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_spence_circle'
    return stypy_return_type_545061

# Assigning a type to the variable 'test_spence_circle' (line 514)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 0), 'test_spence_circle', test_spence_circle)

@norecursion
def test_sinpi_zeros(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_sinpi_zeros'
    module_type_store = module_type_store.open_function_context('test_sinpi_zeros', 538, 0, False)
    
    # Passed parameters checking function
    test_sinpi_zeros.stypy_localization = localization
    test_sinpi_zeros.stypy_type_of_self = None
    test_sinpi_zeros.stypy_type_store = module_type_store
    test_sinpi_zeros.stypy_function_name = 'test_sinpi_zeros'
    test_sinpi_zeros.stypy_param_names_list = []
    test_sinpi_zeros.stypy_varargs_param_name = None
    test_sinpi_zeros.stypy_kwargs_param_name = None
    test_sinpi_zeros.stypy_call_defaults = defaults
    test_sinpi_zeros.stypy_call_varargs = varargs
    test_sinpi_zeros.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_sinpi_zeros', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_sinpi_zeros', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_sinpi_zeros(...)' code ##################

    
    # Assigning a Attribute to a Name (line 540):
    
    # Assigning a Attribute to a Name (line 540):
    
    # Call to finfo(...): (line 540)
    # Processing the call arguments (line 540)
    # Getting the type of 'float' (line 540)
    float_545064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 19), 'float', False)
    # Processing the call keyword arguments (line 540)
    kwargs_545065 = {}
    # Getting the type of 'np' (line 540)
    np_545062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 10), 'np', False)
    # Obtaining the member 'finfo' of a type (line 540)
    finfo_545063 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 10), np_545062, 'finfo')
    # Calling finfo(args, kwargs) (line 540)
    finfo_call_result_545066 = invoke(stypy.reporting.localization.Localization(__file__, 540, 10), finfo_545063, *[float_545064], **kwargs_545065)
    
    # Obtaining the member 'eps' of a type (line 540)
    eps_545067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 10), finfo_call_result_545066, 'eps')
    # Assigning a type to the variable 'eps' (line 540)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 4), 'eps', eps_545067)
    
    # Assigning a Subscript to a Name (line 541):
    
    # Assigning a Subscript to a Name (line 541):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 541)
    tuple_545068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 541)
    # Adding element type (line 541)
    
    
    # Call to logspace(...): (line 541)
    # Processing the call arguments (line 541)
    int_545071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 28), 'int')
    int_545072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 31), 'int')
    int_545073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 36), 'int')
    # Processing the call keyword arguments (line 541)
    kwargs_545074 = {}
    # Getting the type of 'np' (line 541)
    np_545069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 16), 'np', False)
    # Obtaining the member 'logspace' of a type (line 541)
    logspace_545070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 16), np_545069, 'logspace')
    # Calling logspace(args, kwargs) (line 541)
    logspace_call_result_545075 = invoke(stypy.reporting.localization.Localization(__file__, 541, 16), logspace_545070, *[int_545071, int_545072, int_545073], **kwargs_545074)
    
    # Applying the 'usub' unary operator (line 541)
    result___neg___545076 = python_operator(stypy.reporting.localization.Localization(__file__, 541, 15), 'usub', logspace_call_result_545075)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 15), tuple_545068, result___neg___545076)
    # Adding element type (line 541)
    int_545077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 40), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 15), tuple_545068, int_545077)
    # Adding element type (line 541)
    
    # Call to logspace(...): (line 541)
    # Processing the call arguments (line 541)
    int_545080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 55), 'int')
    int_545081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 60), 'int')
    int_545082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 63), 'int')
    # Processing the call keyword arguments (line 541)
    kwargs_545083 = {}
    # Getting the type of 'np' (line 541)
    np_545078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 43), 'np', False)
    # Obtaining the member 'logspace' of a type (line 541)
    logspace_545079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 43), np_545078, 'logspace')
    # Calling logspace(args, kwargs) (line 541)
    logspace_call_result_545084 = invoke(stypy.reporting.localization.Localization(__file__, 541, 43), logspace_545079, *[int_545080, int_545081, int_545082], **kwargs_545083)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 541, 15), tuple_545068, logspace_call_result_545084)
    
    # Getting the type of 'np' (line 541)
    np_545085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 9), 'np')
    # Obtaining the member 'r_' of a type (line 541)
    r__545086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 9), np_545085, 'r_')
    # Obtaining the member '__getitem__' of a type (line 541)
    getitem___545087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 9), r__545086, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 541)
    subscript_call_result_545088 = invoke(stypy.reporting.localization.Localization(__file__, 541, 9), getitem___545087, tuple_545068)
    
    # Assigning a type to the variable 'dx' (line 541)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 541, 4), 'dx', subscript_call_result_545088)
    
    # Assigning a Call to a Name (line 542):
    
    # Assigning a Call to a Name (line 542):
    
    # Call to copy(...): (line 542)
    # Processing the call keyword arguments (line 542)
    kwargs_545091 = {}
    # Getting the type of 'dx' (line 542)
    dx_545089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 9), 'dx', False)
    # Obtaining the member 'copy' of a type (line 542)
    copy_545090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 9), dx_545089, 'copy')
    # Calling copy(args, kwargs) (line 542)
    copy_call_result_545092 = invoke(stypy.reporting.localization.Localization(__file__, 542, 9), copy_545090, *[], **kwargs_545091)
    
    # Assigning a type to the variable 'dy' (line 542)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 4), 'dy', copy_call_result_545092)
    
    # Assigning a Call to a Tuple (line 543):
    
    # Assigning a Subscript to a Name (line 543):
    
    # Obtaining the type of the subscript
    int_545093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 543, 4), 'int')
    
    # Call to meshgrid(...): (line 543)
    # Processing the call arguments (line 543)
    # Getting the type of 'dx' (line 543)
    dx_545096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 25), 'dx', False)
    # Getting the type of 'dy' (line 543)
    dy_545097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 29), 'dy', False)
    # Processing the call keyword arguments (line 543)
    kwargs_545098 = {}
    # Getting the type of 'np' (line 543)
    np_545094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 13), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 543)
    meshgrid_545095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 13), np_545094, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 543)
    meshgrid_call_result_545099 = invoke(stypy.reporting.localization.Localization(__file__, 543, 13), meshgrid_545095, *[dx_545096, dy_545097], **kwargs_545098)
    
    # Obtaining the member '__getitem__' of a type (line 543)
    getitem___545100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 4), meshgrid_call_result_545099, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 543)
    subscript_call_result_545101 = invoke(stypy.reporting.localization.Localization(__file__, 543, 4), getitem___545100, int_545093)
    
    # Assigning a type to the variable 'tuple_var_assignment_542786' (line 543)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 543, 4), 'tuple_var_assignment_542786', subscript_call_result_545101)
    
    # Assigning a Subscript to a Name (line 543):
    
    # Obtaining the type of the subscript
    int_545102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 543, 4), 'int')
    
    # Call to meshgrid(...): (line 543)
    # Processing the call arguments (line 543)
    # Getting the type of 'dx' (line 543)
    dx_545105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 25), 'dx', False)
    # Getting the type of 'dy' (line 543)
    dy_545106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 29), 'dy', False)
    # Processing the call keyword arguments (line 543)
    kwargs_545107 = {}
    # Getting the type of 'np' (line 543)
    np_545103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 13), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 543)
    meshgrid_545104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 13), np_545103, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 543)
    meshgrid_call_result_545108 = invoke(stypy.reporting.localization.Localization(__file__, 543, 13), meshgrid_545104, *[dx_545105, dy_545106], **kwargs_545107)
    
    # Obtaining the member '__getitem__' of a type (line 543)
    getitem___545109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 4), meshgrid_call_result_545108, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 543)
    subscript_call_result_545110 = invoke(stypy.reporting.localization.Localization(__file__, 543, 4), getitem___545109, int_545102)
    
    # Assigning a type to the variable 'tuple_var_assignment_542787' (line 543)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 543, 4), 'tuple_var_assignment_542787', subscript_call_result_545110)
    
    # Assigning a Name to a Name (line 543):
    # Getting the type of 'tuple_var_assignment_542786' (line 543)
    tuple_var_assignment_542786_545111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 4), 'tuple_var_assignment_542786')
    # Assigning a type to the variable 'dx' (line 543)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 543, 4), 'dx', tuple_var_assignment_542786_545111)
    
    # Assigning a Name to a Name (line 543):
    # Getting the type of 'tuple_var_assignment_542787' (line 543)
    tuple_var_assignment_542787_545112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 4), 'tuple_var_assignment_542787')
    # Assigning a type to the variable 'dy' (line 543)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 543, 8), 'dy', tuple_var_assignment_542787_545112)
    
    # Assigning a BinOp to a Name (line 544):
    
    # Assigning a BinOp to a Name (line 544):
    # Getting the type of 'dx' (line 544)
    dx_545113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 9), 'dx')
    complex_545114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 14), 'complex')
    # Getting the type of 'dy' (line 544)
    dy_545115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 17), 'dy')
    # Applying the binary operator '*' (line 544)
    result_mul_545116 = python_operator(stypy.reporting.localization.Localization(__file__, 544, 14), '*', complex_545114, dy_545115)
    
    # Applying the binary operator '+' (line 544)
    result_add_545117 = python_operator(stypy.reporting.localization.Localization(__file__, 544, 9), '+', dx_545113, result_mul_545116)
    
    # Assigning a type to the variable 'dz' (line 544)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 4), 'dz', result_add_545117)
    
    # Assigning a Call to a Name (line 545):
    
    # Assigning a Call to a Name (line 545):
    
    # Call to reshape(...): (line 545)
    # Processing the call arguments (line 545)
    int_545126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 44), 'int')
    int_545127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 47), 'int')
    int_545128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 50), 'int')
    # Processing the call keyword arguments (line 545)
    kwargs_545129 = {}
    
    # Call to arange(...): (line 545)
    # Processing the call arguments (line 545)
    int_545120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 22), 'int')
    int_545121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 28), 'int')
    int_545122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 33), 'int')
    # Processing the call keyword arguments (line 545)
    kwargs_545123 = {}
    # Getting the type of 'np' (line 545)
    np_545118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 12), 'np', False)
    # Obtaining the member 'arange' of a type (line 545)
    arange_545119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 12), np_545118, 'arange')
    # Calling arange(args, kwargs) (line 545)
    arange_call_result_545124 = invoke(stypy.reporting.localization.Localization(__file__, 545, 12), arange_545119, *[int_545120, int_545121, int_545122], **kwargs_545123)
    
    # Obtaining the member 'reshape' of a type (line 545)
    reshape_545125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 12), arange_call_result_545124, 'reshape')
    # Calling reshape(args, kwargs) (line 545)
    reshape_call_result_545130 = invoke(stypy.reporting.localization.Localization(__file__, 545, 12), reshape_545125, *[int_545126, int_545127, int_545128], **kwargs_545129)
    
    # Assigning a type to the variable 'zeros' (line 545)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 4), 'zeros', reshape_call_result_545130)
    
    # Assigning a Call to a Name (line 546):
    
    # Assigning a Call to a Name (line 546):
    
    # Call to flatten(...): (line 546)
    # Processing the call keyword arguments (line 546)
    kwargs_545143 = {}
    # Getting the type of 'zeros' (line 546)
    zeros_545131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 9), 'zeros', False)
    
    # Call to dstack(...): (line 546)
    # Processing the call arguments (line 546)
    
    # Obtaining an instance of the builtin type 'tuple' (line 546)
    tuple_545134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 546)
    # Adding element type (line 546)
    # Getting the type of 'dz' (line 546)
    dz_545135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 28), 'dz', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 546, 28), tuple_545134, dz_545135)
    
    # Getting the type of 'zeros' (line 546)
    zeros_545136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 33), 'zeros', False)
    # Obtaining the member 'size' of a type (line 546)
    size_545137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 33), zeros_545136, 'size')
    # Applying the binary operator '*' (line 546)
    result_mul_545138 = python_operator(stypy.reporting.localization.Localization(__file__, 546, 27), '*', tuple_545134, size_545137)
    
    # Processing the call keyword arguments (line 546)
    kwargs_545139 = {}
    # Getting the type of 'np' (line 546)
    np_545132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 17), 'np', False)
    # Obtaining the member 'dstack' of a type (line 546)
    dstack_545133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 17), np_545132, 'dstack')
    # Calling dstack(args, kwargs) (line 546)
    dstack_call_result_545140 = invoke(stypy.reporting.localization.Localization(__file__, 546, 17), dstack_545133, *[result_mul_545138], **kwargs_545139)
    
    # Applying the binary operator '+' (line 546)
    result_add_545141 = python_operator(stypy.reporting.localization.Localization(__file__, 546, 9), '+', zeros_545131, dstack_call_result_545140)
    
    # Obtaining the member 'flatten' of a type (line 546)
    flatten_545142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 9), result_add_545141, 'flatten')
    # Calling flatten(args, kwargs) (line 546)
    flatten_call_result_545144 = invoke(stypy.reporting.localization.Localization(__file__, 546, 9), flatten_545142, *[], **kwargs_545143)
    
    # Assigning a type to the variable 'z' (line 546)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 4), 'z', flatten_call_result_545144)
    
    # Assigning a List to a Name (line 547):
    
    # Assigning a List to a Name (line 547):
    
    # Obtaining an instance of the builtin type 'list' (line 547)
    list_545145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 547)
    
    # Assigning a type to the variable 'dataset' (line 547)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 4), 'dataset', list_545145)
    
    # Getting the type of 'z' (line 548)
    z_545146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 14), 'z')
    # Testing the type of a for loop iterable (line 548)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 548, 4), z_545146)
    # Getting the type of the for loop variable (line 548)
    for_loop_var_545147 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 548, 4), z_545146)
    # Assigning a type to the variable 'z0' (line 548)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 4), 'z0', for_loop_var_545147)
    # SSA begins for a for statement (line 548)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 549)
    # Processing the call arguments (line 549)
    
    # Obtaining an instance of the builtin type 'tuple' (line 549)
    tuple_545150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 549)
    # Adding element type (line 549)
    # Getting the type of 'z0' (line 549)
    z0_545151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 24), 'z0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 24), tuple_545150, z0_545151)
    # Adding element type (line 549)
    
    # Call to complex(...): (line 549)
    # Processing the call arguments (line 549)
    
    # Call to sinpi(...): (line 549)
    # Processing the call arguments (line 549)
    # Getting the type of 'z0' (line 549)
    z0_545155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 49), 'z0', False)
    # Processing the call keyword arguments (line 549)
    kwargs_545156 = {}
    # Getting the type of 'mpmath' (line 549)
    mpmath_545153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 36), 'mpmath', False)
    # Obtaining the member 'sinpi' of a type (line 549)
    sinpi_545154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 36), mpmath_545153, 'sinpi')
    # Calling sinpi(args, kwargs) (line 549)
    sinpi_call_result_545157 = invoke(stypy.reporting.localization.Localization(__file__, 549, 36), sinpi_545154, *[z0_545155], **kwargs_545156)
    
    # Processing the call keyword arguments (line 549)
    kwargs_545158 = {}
    # Getting the type of 'complex' (line 549)
    complex_545152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 28), 'complex', False)
    # Calling complex(args, kwargs) (line 549)
    complex_call_result_545159 = invoke(stypy.reporting.localization.Localization(__file__, 549, 28), complex_545152, *[sinpi_call_result_545157], **kwargs_545158)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 24), tuple_545150, complex_call_result_545159)
    
    # Processing the call keyword arguments (line 549)
    kwargs_545160 = {}
    # Getting the type of 'dataset' (line 549)
    dataset_545148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 8), 'dataset', False)
    # Obtaining the member 'append' of a type (line 549)
    append_545149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 8), dataset_545148, 'append')
    # Calling append(args, kwargs) (line 549)
    append_call_result_545161 = invoke(stypy.reporting.localization.Localization(__file__, 549, 8), append_545149, *[tuple_545150], **kwargs_545160)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 551):
    
    # Assigning a Call to a Name (line 551):
    
    # Call to array(...): (line 551)
    # Processing the call arguments (line 551)
    # Getting the type of 'dataset' (line 551)
    dataset_545164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 23), 'dataset', False)
    # Processing the call keyword arguments (line 551)
    kwargs_545165 = {}
    # Getting the type of 'np' (line 551)
    np_545162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 551)
    array_545163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 14), np_545162, 'array')
    # Calling array(args, kwargs) (line 551)
    array_call_result_545166 = invoke(stypy.reporting.localization.Localization(__file__, 551, 14), array_545163, *[dataset_545164], **kwargs_545165)
    
    # Assigning a type to the variable 'dataset' (line 551)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 4), 'dataset', array_call_result_545166)
    
    # Call to check(...): (line 552)
    # Processing the call keyword arguments (line 552)
    kwargs_545179 = {}
    
    # Call to FuncData(...): (line 552)
    # Processing the call arguments (line 552)
    # Getting the type of '_sinpi' (line 552)
    _sinpi_545168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 13), '_sinpi', False)
    # Getting the type of 'dataset' (line 552)
    dataset_545169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 21), 'dataset', False)
    int_545170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 30), 'int')
    int_545171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 33), 'int')
    # Processing the call keyword arguments (line 552)
    int_545172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 41), 'int')
    # Getting the type of 'eps' (line 552)
    eps_545173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 43), 'eps', False)
    # Applying the binary operator '*' (line 552)
    result_mul_545174 = python_operator(stypy.reporting.localization.Localization(__file__, 552, 41), '*', int_545172, eps_545173)
    
    keyword_545175 = result_mul_545174
    kwargs_545176 = {'rtol': keyword_545175}
    # Getting the type of 'FuncData' (line 552)
    FuncData_545167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 552)
    FuncData_call_result_545177 = invoke(stypy.reporting.localization.Localization(__file__, 552, 4), FuncData_545167, *[_sinpi_545168, dataset_545169, int_545170, int_545171], **kwargs_545176)
    
    # Obtaining the member 'check' of a type (line 552)
    check_545178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 4), FuncData_call_result_545177, 'check')
    # Calling check(args, kwargs) (line 552)
    check_call_result_545180 = invoke(stypy.reporting.localization.Localization(__file__, 552, 4), check_545178, *[], **kwargs_545179)
    
    
    # ################# End of 'test_sinpi_zeros(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_sinpi_zeros' in the type store
    # Getting the type of 'stypy_return_type' (line 538)
    stypy_return_type_545181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_545181)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_sinpi_zeros'
    return stypy_return_type_545181

# Assigning a type to the variable 'test_sinpi_zeros' (line 538)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 0), 'test_sinpi_zeros', test_sinpi_zeros)

@norecursion
def test_cospi_zeros(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_cospi_zeros'
    module_type_store = module_type_store.open_function_context('test_cospi_zeros', 555, 0, False)
    
    # Passed parameters checking function
    test_cospi_zeros.stypy_localization = localization
    test_cospi_zeros.stypy_type_of_self = None
    test_cospi_zeros.stypy_type_store = module_type_store
    test_cospi_zeros.stypy_function_name = 'test_cospi_zeros'
    test_cospi_zeros.stypy_param_names_list = []
    test_cospi_zeros.stypy_varargs_param_name = None
    test_cospi_zeros.stypy_kwargs_param_name = None
    test_cospi_zeros.stypy_call_defaults = defaults
    test_cospi_zeros.stypy_call_varargs = varargs
    test_cospi_zeros.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_cospi_zeros', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_cospi_zeros', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_cospi_zeros(...)' code ##################

    
    # Assigning a Attribute to a Name (line 557):
    
    # Assigning a Attribute to a Name (line 557):
    
    # Call to finfo(...): (line 557)
    # Processing the call arguments (line 557)
    # Getting the type of 'float' (line 557)
    float_545184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 19), 'float', False)
    # Processing the call keyword arguments (line 557)
    kwargs_545185 = {}
    # Getting the type of 'np' (line 557)
    np_545182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 10), 'np', False)
    # Obtaining the member 'finfo' of a type (line 557)
    finfo_545183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 10), np_545182, 'finfo')
    # Calling finfo(args, kwargs) (line 557)
    finfo_call_result_545186 = invoke(stypy.reporting.localization.Localization(__file__, 557, 10), finfo_545183, *[float_545184], **kwargs_545185)
    
    # Obtaining the member 'eps' of a type (line 557)
    eps_545187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 10), finfo_call_result_545186, 'eps')
    # Assigning a type to the variable 'eps' (line 557)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 557, 4), 'eps', eps_545187)
    
    # Assigning a Subscript to a Name (line 558):
    
    # Assigning a Subscript to a Name (line 558):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 558)
    tuple_545188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 558)
    # Adding element type (line 558)
    
    
    # Call to logspace(...): (line 558)
    # Processing the call arguments (line 558)
    int_545191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 28), 'int')
    int_545192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 31), 'int')
    int_545193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 36), 'int')
    # Processing the call keyword arguments (line 558)
    kwargs_545194 = {}
    # Getting the type of 'np' (line 558)
    np_545189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 16), 'np', False)
    # Obtaining the member 'logspace' of a type (line 558)
    logspace_545190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 16), np_545189, 'logspace')
    # Calling logspace(args, kwargs) (line 558)
    logspace_call_result_545195 = invoke(stypy.reporting.localization.Localization(__file__, 558, 16), logspace_545190, *[int_545191, int_545192, int_545193], **kwargs_545194)
    
    # Applying the 'usub' unary operator (line 558)
    result___neg___545196 = python_operator(stypy.reporting.localization.Localization(__file__, 558, 15), 'usub', logspace_call_result_545195)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 15), tuple_545188, result___neg___545196)
    # Adding element type (line 558)
    int_545197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 40), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 15), tuple_545188, int_545197)
    # Adding element type (line 558)
    
    # Call to logspace(...): (line 558)
    # Processing the call arguments (line 558)
    int_545200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 55), 'int')
    int_545201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 60), 'int')
    int_545202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 63), 'int')
    # Processing the call keyword arguments (line 558)
    kwargs_545203 = {}
    # Getting the type of 'np' (line 558)
    np_545198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 43), 'np', False)
    # Obtaining the member 'logspace' of a type (line 558)
    logspace_545199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 43), np_545198, 'logspace')
    # Calling logspace(args, kwargs) (line 558)
    logspace_call_result_545204 = invoke(stypy.reporting.localization.Localization(__file__, 558, 43), logspace_545199, *[int_545200, int_545201, int_545202], **kwargs_545203)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 15), tuple_545188, logspace_call_result_545204)
    
    # Getting the type of 'np' (line 558)
    np_545205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 9), 'np')
    # Obtaining the member 'r_' of a type (line 558)
    r__545206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 9), np_545205, 'r_')
    # Obtaining the member '__getitem__' of a type (line 558)
    getitem___545207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 9), r__545206, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 558)
    subscript_call_result_545208 = invoke(stypy.reporting.localization.Localization(__file__, 558, 9), getitem___545207, tuple_545188)
    
    # Assigning a type to the variable 'dx' (line 558)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 558, 4), 'dx', subscript_call_result_545208)
    
    # Assigning a Call to a Name (line 559):
    
    # Assigning a Call to a Name (line 559):
    
    # Call to copy(...): (line 559)
    # Processing the call keyword arguments (line 559)
    kwargs_545211 = {}
    # Getting the type of 'dx' (line 559)
    dx_545209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 9), 'dx', False)
    # Obtaining the member 'copy' of a type (line 559)
    copy_545210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 9), dx_545209, 'copy')
    # Calling copy(args, kwargs) (line 559)
    copy_call_result_545212 = invoke(stypy.reporting.localization.Localization(__file__, 559, 9), copy_545210, *[], **kwargs_545211)
    
    # Assigning a type to the variable 'dy' (line 559)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 4), 'dy', copy_call_result_545212)
    
    # Assigning a Call to a Tuple (line 560):
    
    # Assigning a Subscript to a Name (line 560):
    
    # Obtaining the type of the subscript
    int_545213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 4), 'int')
    
    # Call to meshgrid(...): (line 560)
    # Processing the call arguments (line 560)
    # Getting the type of 'dx' (line 560)
    dx_545216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 25), 'dx', False)
    # Getting the type of 'dy' (line 560)
    dy_545217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 29), 'dy', False)
    # Processing the call keyword arguments (line 560)
    kwargs_545218 = {}
    # Getting the type of 'np' (line 560)
    np_545214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 13), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 560)
    meshgrid_545215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 13), np_545214, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 560)
    meshgrid_call_result_545219 = invoke(stypy.reporting.localization.Localization(__file__, 560, 13), meshgrid_545215, *[dx_545216, dy_545217], **kwargs_545218)
    
    # Obtaining the member '__getitem__' of a type (line 560)
    getitem___545220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 4), meshgrid_call_result_545219, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 560)
    subscript_call_result_545221 = invoke(stypy.reporting.localization.Localization(__file__, 560, 4), getitem___545220, int_545213)
    
    # Assigning a type to the variable 'tuple_var_assignment_542788' (line 560)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 4), 'tuple_var_assignment_542788', subscript_call_result_545221)
    
    # Assigning a Subscript to a Name (line 560):
    
    # Obtaining the type of the subscript
    int_545222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 4), 'int')
    
    # Call to meshgrid(...): (line 560)
    # Processing the call arguments (line 560)
    # Getting the type of 'dx' (line 560)
    dx_545225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 25), 'dx', False)
    # Getting the type of 'dy' (line 560)
    dy_545226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 29), 'dy', False)
    # Processing the call keyword arguments (line 560)
    kwargs_545227 = {}
    # Getting the type of 'np' (line 560)
    np_545223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 13), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 560)
    meshgrid_545224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 13), np_545223, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 560)
    meshgrid_call_result_545228 = invoke(stypy.reporting.localization.Localization(__file__, 560, 13), meshgrid_545224, *[dx_545225, dy_545226], **kwargs_545227)
    
    # Obtaining the member '__getitem__' of a type (line 560)
    getitem___545229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 4), meshgrid_call_result_545228, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 560)
    subscript_call_result_545230 = invoke(stypy.reporting.localization.Localization(__file__, 560, 4), getitem___545229, int_545222)
    
    # Assigning a type to the variable 'tuple_var_assignment_542789' (line 560)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 4), 'tuple_var_assignment_542789', subscript_call_result_545230)
    
    # Assigning a Name to a Name (line 560):
    # Getting the type of 'tuple_var_assignment_542788' (line 560)
    tuple_var_assignment_542788_545231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 4), 'tuple_var_assignment_542788')
    # Assigning a type to the variable 'dx' (line 560)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 4), 'dx', tuple_var_assignment_542788_545231)
    
    # Assigning a Name to a Name (line 560):
    # Getting the type of 'tuple_var_assignment_542789' (line 560)
    tuple_var_assignment_542789_545232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 4), 'tuple_var_assignment_542789')
    # Assigning a type to the variable 'dy' (line 560)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'dy', tuple_var_assignment_542789_545232)
    
    # Assigning a BinOp to a Name (line 561):
    
    # Assigning a BinOp to a Name (line 561):
    # Getting the type of 'dx' (line 561)
    dx_545233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 9), 'dx')
    complex_545234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 14), 'complex')
    # Getting the type of 'dy' (line 561)
    dy_545235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 17), 'dy')
    # Applying the binary operator '*' (line 561)
    result_mul_545236 = python_operator(stypy.reporting.localization.Localization(__file__, 561, 14), '*', complex_545234, dy_545235)
    
    # Applying the binary operator '+' (line 561)
    result_add_545237 = python_operator(stypy.reporting.localization.Localization(__file__, 561, 9), '+', dx_545233, result_mul_545236)
    
    # Assigning a type to the variable 'dz' (line 561)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 4), 'dz', result_add_545237)
    
    # Assigning a Call to a Name (line 562):
    
    # Assigning a Call to a Name (line 562):
    
    # Call to reshape(...): (line 562)
    # Processing the call arguments (line 562)
    int_545248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 52), 'int')
    int_545249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 55), 'int')
    int_545250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 58), 'int')
    # Processing the call keyword arguments (line 562)
    kwargs_545251 = {}
    
    # Call to arange(...): (line 562)
    # Processing the call arguments (line 562)
    int_545240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 23), 'int')
    int_545241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 29), 'int')
    int_545242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 34), 'int')
    # Processing the call keyword arguments (line 562)
    kwargs_545243 = {}
    # Getting the type of 'np' (line 562)
    np_545238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 13), 'np', False)
    # Obtaining the member 'arange' of a type (line 562)
    arange_545239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 13), np_545238, 'arange')
    # Calling arange(args, kwargs) (line 562)
    arange_call_result_545244 = invoke(stypy.reporting.localization.Localization(__file__, 562, 13), arange_545239, *[int_545240, int_545241, int_545242], **kwargs_545243)
    
    float_545245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 39), 'float')
    # Applying the binary operator '+' (line 562)
    result_add_545246 = python_operator(stypy.reporting.localization.Localization(__file__, 562, 13), '+', arange_call_result_545244, float_545245)
    
    # Obtaining the member 'reshape' of a type (line 562)
    reshape_545247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 13), result_add_545246, 'reshape')
    # Calling reshape(args, kwargs) (line 562)
    reshape_call_result_545252 = invoke(stypy.reporting.localization.Localization(__file__, 562, 13), reshape_545247, *[int_545248, int_545249, int_545250], **kwargs_545251)
    
    # Assigning a type to the variable 'zeros' (line 562)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 4), 'zeros', reshape_call_result_545252)
    
    # Assigning a Call to a Name (line 563):
    
    # Assigning a Call to a Name (line 563):
    
    # Call to flatten(...): (line 563)
    # Processing the call keyword arguments (line 563)
    kwargs_545265 = {}
    # Getting the type of 'zeros' (line 563)
    zeros_545253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 9), 'zeros', False)
    
    # Call to dstack(...): (line 563)
    # Processing the call arguments (line 563)
    
    # Obtaining an instance of the builtin type 'tuple' (line 563)
    tuple_545256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 563)
    # Adding element type (line 563)
    # Getting the type of 'dz' (line 563)
    dz_545257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 28), 'dz', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 28), tuple_545256, dz_545257)
    
    # Getting the type of 'zeros' (line 563)
    zeros_545258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 33), 'zeros', False)
    # Obtaining the member 'size' of a type (line 563)
    size_545259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 33), zeros_545258, 'size')
    # Applying the binary operator '*' (line 563)
    result_mul_545260 = python_operator(stypy.reporting.localization.Localization(__file__, 563, 27), '*', tuple_545256, size_545259)
    
    # Processing the call keyword arguments (line 563)
    kwargs_545261 = {}
    # Getting the type of 'np' (line 563)
    np_545254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 17), 'np', False)
    # Obtaining the member 'dstack' of a type (line 563)
    dstack_545255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 17), np_545254, 'dstack')
    # Calling dstack(args, kwargs) (line 563)
    dstack_call_result_545262 = invoke(stypy.reporting.localization.Localization(__file__, 563, 17), dstack_545255, *[result_mul_545260], **kwargs_545261)
    
    # Applying the binary operator '+' (line 563)
    result_add_545263 = python_operator(stypy.reporting.localization.Localization(__file__, 563, 9), '+', zeros_545253, dstack_call_result_545262)
    
    # Obtaining the member 'flatten' of a type (line 563)
    flatten_545264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 9), result_add_545263, 'flatten')
    # Calling flatten(args, kwargs) (line 563)
    flatten_call_result_545266 = invoke(stypy.reporting.localization.Localization(__file__, 563, 9), flatten_545264, *[], **kwargs_545265)
    
    # Assigning a type to the variable 'z' (line 563)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 4), 'z', flatten_call_result_545266)
    
    # Assigning a List to a Name (line 564):
    
    # Assigning a List to a Name (line 564):
    
    # Obtaining an instance of the builtin type 'list' (line 564)
    list_545267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 564)
    
    # Assigning a type to the variable 'dataset' (line 564)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 4), 'dataset', list_545267)
    
    # Getting the type of 'z' (line 565)
    z_545268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 14), 'z')
    # Testing the type of a for loop iterable (line 565)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 565, 4), z_545268)
    # Getting the type of the for loop variable (line 565)
    for_loop_var_545269 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 565, 4), z_545268)
    # Assigning a type to the variable 'z0' (line 565)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 4), 'z0', for_loop_var_545269)
    # SSA begins for a for statement (line 565)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 566)
    # Processing the call arguments (line 566)
    
    # Obtaining an instance of the builtin type 'tuple' (line 566)
    tuple_545272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 566)
    # Adding element type (line 566)
    # Getting the type of 'z0' (line 566)
    z0_545273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 24), 'z0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 24), tuple_545272, z0_545273)
    # Adding element type (line 566)
    
    # Call to complex(...): (line 566)
    # Processing the call arguments (line 566)
    
    # Call to cospi(...): (line 566)
    # Processing the call arguments (line 566)
    # Getting the type of 'z0' (line 566)
    z0_545277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 49), 'z0', False)
    # Processing the call keyword arguments (line 566)
    kwargs_545278 = {}
    # Getting the type of 'mpmath' (line 566)
    mpmath_545275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 36), 'mpmath', False)
    # Obtaining the member 'cospi' of a type (line 566)
    cospi_545276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 36), mpmath_545275, 'cospi')
    # Calling cospi(args, kwargs) (line 566)
    cospi_call_result_545279 = invoke(stypy.reporting.localization.Localization(__file__, 566, 36), cospi_545276, *[z0_545277], **kwargs_545278)
    
    # Processing the call keyword arguments (line 566)
    kwargs_545280 = {}
    # Getting the type of 'complex' (line 566)
    complex_545274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 28), 'complex', False)
    # Calling complex(args, kwargs) (line 566)
    complex_call_result_545281 = invoke(stypy.reporting.localization.Localization(__file__, 566, 28), complex_545274, *[cospi_call_result_545279], **kwargs_545280)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 24), tuple_545272, complex_call_result_545281)
    
    # Processing the call keyword arguments (line 566)
    kwargs_545282 = {}
    # Getting the type of 'dataset' (line 566)
    dataset_545270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'dataset', False)
    # Obtaining the member 'append' of a type (line 566)
    append_545271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 8), dataset_545270, 'append')
    # Calling append(args, kwargs) (line 566)
    append_call_result_545283 = invoke(stypy.reporting.localization.Localization(__file__, 566, 8), append_545271, *[tuple_545272], **kwargs_545282)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 568):
    
    # Assigning a Call to a Name (line 568):
    
    # Call to array(...): (line 568)
    # Processing the call arguments (line 568)
    # Getting the type of 'dataset' (line 568)
    dataset_545286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 23), 'dataset', False)
    # Processing the call keyword arguments (line 568)
    kwargs_545287 = {}
    # Getting the type of 'np' (line 568)
    np_545284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 568)
    array_545285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 14), np_545284, 'array')
    # Calling array(args, kwargs) (line 568)
    array_call_result_545288 = invoke(stypy.reporting.localization.Localization(__file__, 568, 14), array_545285, *[dataset_545286], **kwargs_545287)
    
    # Assigning a type to the variable 'dataset' (line 568)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 568, 4), 'dataset', array_call_result_545288)
    
    # Call to check(...): (line 569)
    # Processing the call keyword arguments (line 569)
    kwargs_545301 = {}
    
    # Call to FuncData(...): (line 569)
    # Processing the call arguments (line 569)
    # Getting the type of '_cospi' (line 569)
    _cospi_545290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 13), '_cospi', False)
    # Getting the type of 'dataset' (line 569)
    dataset_545291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 21), 'dataset', False)
    int_545292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 30), 'int')
    int_545293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 33), 'int')
    # Processing the call keyword arguments (line 569)
    int_545294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 41), 'int')
    # Getting the type of 'eps' (line 569)
    eps_545295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 43), 'eps', False)
    # Applying the binary operator '*' (line 569)
    result_mul_545296 = python_operator(stypy.reporting.localization.Localization(__file__, 569, 41), '*', int_545294, eps_545295)
    
    keyword_545297 = result_mul_545296
    kwargs_545298 = {'rtol': keyword_545297}
    # Getting the type of 'FuncData' (line 569)
    FuncData_545289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 569)
    FuncData_call_result_545299 = invoke(stypy.reporting.localization.Localization(__file__, 569, 4), FuncData_545289, *[_cospi_545290, dataset_545291, int_545292, int_545293], **kwargs_545298)
    
    # Obtaining the member 'check' of a type (line 569)
    check_545300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 4), FuncData_call_result_545299, 'check')
    # Calling check(args, kwargs) (line 569)
    check_call_result_545302 = invoke(stypy.reporting.localization.Localization(__file__, 569, 4), check_545300, *[], **kwargs_545301)
    
    
    # ################# End of 'test_cospi_zeros(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_cospi_zeros' in the type store
    # Getting the type of 'stypy_return_type' (line 555)
    stypy_return_type_545303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_545303)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_cospi_zeros'
    return stypy_return_type_545303

# Assigning a type to the variable 'test_cospi_zeros' (line 555)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 555, 0), 'test_cospi_zeros', test_cospi_zeros)

@norecursion
def test_dn_quarter_period(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_dn_quarter_period'
    module_type_store = module_type_store.open_function_context('test_dn_quarter_period', 576, 0, False)
    
    # Passed parameters checking function
    test_dn_quarter_period.stypy_localization = localization
    test_dn_quarter_period.stypy_type_of_self = None
    test_dn_quarter_period.stypy_type_store = module_type_store
    test_dn_quarter_period.stypy_function_name = 'test_dn_quarter_period'
    test_dn_quarter_period.stypy_param_names_list = []
    test_dn_quarter_period.stypy_varargs_param_name = None
    test_dn_quarter_period.stypy_kwargs_param_name = None
    test_dn_quarter_period.stypy_call_defaults = defaults
    test_dn_quarter_period.stypy_call_varargs = varargs
    test_dn_quarter_period.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_dn_quarter_period', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_dn_quarter_period', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_dn_quarter_period(...)' code ##################


    @norecursion
    def dn(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'dn'
        module_type_store = module_type_store.open_function_context('dn', 578, 4, False)
        
        # Passed parameters checking function
        dn.stypy_localization = localization
        dn.stypy_type_of_self = None
        dn.stypy_type_store = module_type_store
        dn.stypy_function_name = 'dn'
        dn.stypy_param_names_list = ['u', 'm']
        dn.stypy_varargs_param_name = None
        dn.stypy_kwargs_param_name = None
        dn.stypy_call_defaults = defaults
        dn.stypy_call_varargs = varargs
        dn.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'dn', ['u', 'm'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'dn', localization, ['u', 'm'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'dn(...)' code ##################

        
        # Obtaining the type of the subscript
        int_545304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 31), 'int')
        
        # Call to ellipj(...): (line 579)
        # Processing the call arguments (line 579)
        # Getting the type of 'u' (line 579)
        u_545307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 25), 'u', False)
        # Getting the type of 'm' (line 579)
        m_545308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 28), 'm', False)
        # Processing the call keyword arguments (line 579)
        kwargs_545309 = {}
        # Getting the type of 'sc' (line 579)
        sc_545305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 15), 'sc', False)
        # Obtaining the member 'ellipj' of a type (line 579)
        ellipj_545306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 15), sc_545305, 'ellipj')
        # Calling ellipj(args, kwargs) (line 579)
        ellipj_call_result_545310 = invoke(stypy.reporting.localization.Localization(__file__, 579, 15), ellipj_545306, *[u_545307, m_545308], **kwargs_545309)
        
        # Obtaining the member '__getitem__' of a type (line 579)
        getitem___545311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 15), ellipj_call_result_545310, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 579)
        subscript_call_result_545312 = invoke(stypy.reporting.localization.Localization(__file__, 579, 15), getitem___545311, int_545304)
        
        # Assigning a type to the variable 'stypy_return_type' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 8), 'stypy_return_type', subscript_call_result_545312)
        
        # ################# End of 'dn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'dn' in the type store
        # Getting the type of 'stypy_return_type' (line 578)
        stypy_return_type_545313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_545313)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'dn'
        return stypy_return_type_545313

    # Assigning a type to the variable 'dn' (line 578)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 4), 'dn', dn)

    @norecursion
    def mpmath_dn(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'mpmath_dn'
        module_type_store = module_type_store.open_function_context('mpmath_dn', 581, 4, False)
        
        # Passed parameters checking function
        mpmath_dn.stypy_localization = localization
        mpmath_dn.stypy_type_of_self = None
        mpmath_dn.stypy_type_store = module_type_store
        mpmath_dn.stypy_function_name = 'mpmath_dn'
        mpmath_dn.stypy_param_names_list = ['u', 'm']
        mpmath_dn.stypy_varargs_param_name = None
        mpmath_dn.stypy_kwargs_param_name = None
        mpmath_dn.stypy_call_defaults = defaults
        mpmath_dn.stypy_call_varargs = varargs
        mpmath_dn.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'mpmath_dn', ['u', 'm'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'mpmath_dn', localization, ['u', 'm'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'mpmath_dn(...)' code ##################

        
        # Call to float(...): (line 582)
        # Processing the call arguments (line 582)
        
        # Call to ellipfun(...): (line 582)
        # Processing the call arguments (line 582)
        str_545317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 37), 'str', 'dn')
        # Processing the call keyword arguments (line 582)
        # Getting the type of 'u' (line 582)
        u_545318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 45), 'u', False)
        keyword_545319 = u_545318
        # Getting the type of 'm' (line 582)
        m_545320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 50), 'm', False)
        keyword_545321 = m_545320
        kwargs_545322 = {'m': keyword_545321, 'u': keyword_545319}
        # Getting the type of 'mpmath' (line 582)
        mpmath_545315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 21), 'mpmath', False)
        # Obtaining the member 'ellipfun' of a type (line 582)
        ellipfun_545316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 21), mpmath_545315, 'ellipfun')
        # Calling ellipfun(args, kwargs) (line 582)
        ellipfun_call_result_545323 = invoke(stypy.reporting.localization.Localization(__file__, 582, 21), ellipfun_545316, *[str_545317], **kwargs_545322)
        
        # Processing the call keyword arguments (line 582)
        kwargs_545324 = {}
        # Getting the type of 'float' (line 582)
        float_545314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 15), 'float', False)
        # Calling float(args, kwargs) (line 582)
        float_call_result_545325 = invoke(stypy.reporting.localization.Localization(__file__, 582, 15), float_545314, *[ellipfun_call_result_545323], **kwargs_545324)
        
        # Assigning a type to the variable 'stypy_return_type' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 8), 'stypy_return_type', float_call_result_545325)
        
        # ################# End of 'mpmath_dn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'mpmath_dn' in the type store
        # Getting the type of 'stypy_return_type' (line 581)
        stypy_return_type_545326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_545326)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'mpmath_dn'
        return stypy_return_type_545326

    # Assigning a type to the variable 'mpmath_dn' (line 581)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 4), 'mpmath_dn', mpmath_dn)
    
    # Assigning a Call to a Name (line 584):
    
    # Assigning a Call to a Name (line 584):
    
    # Call to linspace(...): (line 584)
    # Processing the call arguments (line 584)
    int_545329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 20), 'int')
    int_545330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 23), 'int')
    int_545331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 26), 'int')
    # Processing the call keyword arguments (line 584)
    kwargs_545332 = {}
    # Getting the type of 'np' (line 584)
    np_545327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'np', False)
    # Obtaining the member 'linspace' of a type (line 584)
    linspace_545328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 8), np_545327, 'linspace')
    # Calling linspace(args, kwargs) (line 584)
    linspace_call_result_545333 = invoke(stypy.reporting.localization.Localization(__file__, 584, 8), linspace_545328, *[int_545329, int_545330, int_545331], **kwargs_545332)
    
    # Assigning a type to the variable 'm' (line 584)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 4), 'm', linspace_call_result_545333)
    
    # Assigning a Subscript to a Name (line 585):
    
    # Assigning a Subscript to a Name (line 585):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 585)
    tuple_545334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 15), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 585)
    # Adding element type (line 585)
    
    
    # Call to logspace(...): (line 585)
    # Processing the call arguments (line 585)
    int_545337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 28), 'int')
    int_545338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 32), 'int')
    int_545339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 37), 'int')
    # Processing the call keyword arguments (line 585)
    kwargs_545340 = {}
    # Getting the type of 'np' (line 585)
    np_545335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 16), 'np', False)
    # Obtaining the member 'logspace' of a type (line 585)
    logspace_545336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 16), np_545335, 'logspace')
    # Calling logspace(args, kwargs) (line 585)
    logspace_call_result_545341 = invoke(stypy.reporting.localization.Localization(__file__, 585, 16), logspace_545336, *[int_545337, int_545338, int_545339], **kwargs_545340)
    
    # Applying the 'usub' unary operator (line 585)
    result___neg___545342 = python_operator(stypy.reporting.localization.Localization(__file__, 585, 15), 'usub', logspace_call_result_545341)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 15), tuple_545334, result___neg___545342)
    # Adding element type (line 585)
    int_545343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 42), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 15), tuple_545334, int_545343)
    # Adding element type (line 585)
    
    # Call to logspace(...): (line 585)
    # Processing the call arguments (line 585)
    int_545346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 57), 'int')
    int_545347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 62), 'int')
    int_545348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 66), 'int')
    # Processing the call keyword arguments (line 585)
    kwargs_545349 = {}
    # Getting the type of 'np' (line 585)
    np_545344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 45), 'np', False)
    # Obtaining the member 'logspace' of a type (line 585)
    logspace_545345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 45), np_545344, 'logspace')
    # Calling logspace(args, kwargs) (line 585)
    logspace_call_result_545350 = invoke(stypy.reporting.localization.Localization(__file__, 585, 45), logspace_545345, *[int_545346, int_545347, int_545348], **kwargs_545349)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 15), tuple_545334, logspace_call_result_545350)
    
    # Getting the type of 'np' (line 585)
    np_545351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 9), 'np')
    # Obtaining the member 'r_' of a type (line 585)
    r__545352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 9), np_545351, 'r_')
    # Obtaining the member '__getitem__' of a type (line 585)
    getitem___545353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 9), r__545352, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 585)
    subscript_call_result_545354 = invoke(stypy.reporting.localization.Localization(__file__, 585, 9), getitem___545353, tuple_545334)
    
    # Assigning a type to the variable 'du' (line 585)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 4), 'du', subscript_call_result_545354)
    
    # Assigning a List to a Name (line 586):
    
    # Assigning a List to a Name (line 586):
    
    # Obtaining an instance of the builtin type 'list' (line 586)
    list_545355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 586)
    
    # Assigning a type to the variable 'dataset' (line 586)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 4), 'dataset', list_545355)
    
    # Getting the type of 'm' (line 587)
    m_545356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 14), 'm')
    # Testing the type of a for loop iterable (line 587)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 587, 4), m_545356)
    # Getting the type of the for loop variable (line 587)
    for_loop_var_545357 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 587, 4), m_545356)
    # Assigning a type to the variable 'm0' (line 587)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 4), 'm0', for_loop_var_545357)
    # SSA begins for a for statement (line 587)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 588):
    
    # Assigning a Call to a Name (line 588):
    
    # Call to float(...): (line 588)
    # Processing the call arguments (line 588)
    
    # Call to ellipk(...): (line 588)
    # Processing the call arguments (line 588)
    # Getting the type of 'm0' (line 588)
    m0_545361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 33), 'm0', False)
    # Processing the call keyword arguments (line 588)
    kwargs_545362 = {}
    # Getting the type of 'mpmath' (line 588)
    mpmath_545359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 19), 'mpmath', False)
    # Obtaining the member 'ellipk' of a type (line 588)
    ellipk_545360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 19), mpmath_545359, 'ellipk')
    # Calling ellipk(args, kwargs) (line 588)
    ellipk_call_result_545363 = invoke(stypy.reporting.localization.Localization(__file__, 588, 19), ellipk_545360, *[m0_545361], **kwargs_545362)
    
    # Processing the call keyword arguments (line 588)
    kwargs_545364 = {}
    # Getting the type of 'float' (line 588)
    float_545358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 13), 'float', False)
    # Calling float(args, kwargs) (line 588)
    float_call_result_545365 = invoke(stypy.reporting.localization.Localization(__file__, 588, 13), float_545358, *[ellipk_call_result_545363], **kwargs_545364)
    
    # Assigning a type to the variable 'u0' (line 588)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 588, 8), 'u0', float_call_result_545365)
    
    # Getting the type of 'du' (line 589)
    du_545366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 19), 'du')
    # Testing the type of a for loop iterable (line 589)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 589, 8), du_545366)
    # Getting the type of the for loop variable (line 589)
    for_loop_var_545367 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 589, 8), du_545366)
    # Assigning a type to the variable 'du0' (line 589)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'du0', for_loop_var_545367)
    # SSA begins for a for statement (line 589)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Name (line 590):
    
    # Assigning a BinOp to a Name (line 590):
    # Getting the type of 'u0' (line 590)
    u0_545368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 16), 'u0')
    # Getting the type of 'du0' (line 590)
    du0_545369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 21), 'du0')
    # Applying the binary operator '+' (line 590)
    result_add_545370 = python_operator(stypy.reporting.localization.Localization(__file__, 590, 16), '+', u0_545368, du0_545369)
    
    # Assigning a type to the variable 'p' (line 590)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'p', result_add_545370)
    
    # Call to append(...): (line 591)
    # Processing the call arguments (line 591)
    
    # Obtaining an instance of the builtin type 'tuple' (line 591)
    tuple_545373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 591)
    # Adding element type (line 591)
    # Getting the type of 'p' (line 591)
    p_545374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 28), 'p', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 28), tuple_545373, p_545374)
    # Adding element type (line 591)
    # Getting the type of 'm0' (line 591)
    m0_545375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 31), 'm0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 28), tuple_545373, m0_545375)
    # Adding element type (line 591)
    
    # Call to mpmath_dn(...): (line 591)
    # Processing the call arguments (line 591)
    # Getting the type of 'p' (line 591)
    p_545377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 45), 'p', False)
    # Getting the type of 'm0' (line 591)
    m0_545378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 48), 'm0', False)
    # Processing the call keyword arguments (line 591)
    kwargs_545379 = {}
    # Getting the type of 'mpmath_dn' (line 591)
    mpmath_dn_545376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 35), 'mpmath_dn', False)
    # Calling mpmath_dn(args, kwargs) (line 591)
    mpmath_dn_call_result_545380 = invoke(stypy.reporting.localization.Localization(__file__, 591, 35), mpmath_dn_545376, *[p_545377, m0_545378], **kwargs_545379)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 28), tuple_545373, mpmath_dn_call_result_545380)
    
    # Processing the call keyword arguments (line 591)
    kwargs_545381 = {}
    # Getting the type of 'dataset' (line 591)
    dataset_545371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 12), 'dataset', False)
    # Obtaining the member 'append' of a type (line 591)
    append_545372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 591, 12), dataset_545371, 'append')
    # Calling append(args, kwargs) (line 591)
    append_call_result_545382 = invoke(stypy.reporting.localization.Localization(__file__, 591, 12), append_545372, *[tuple_545373], **kwargs_545381)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 592):
    
    # Assigning a Call to a Name (line 592):
    
    # Call to asarray(...): (line 592)
    # Processing the call arguments (line 592)
    # Getting the type of 'dataset' (line 592)
    dataset_545385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 25), 'dataset', False)
    # Processing the call keyword arguments (line 592)
    kwargs_545386 = {}
    # Getting the type of 'np' (line 592)
    np_545383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 14), 'np', False)
    # Obtaining the member 'asarray' of a type (line 592)
    asarray_545384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 14), np_545383, 'asarray')
    # Calling asarray(args, kwargs) (line 592)
    asarray_call_result_545387 = invoke(stypy.reporting.localization.Localization(__file__, 592, 14), asarray_545384, *[dataset_545385], **kwargs_545386)
    
    # Assigning a type to the variable 'dataset' (line 592)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 4), 'dataset', asarray_call_result_545387)
    
    # Call to check(...): (line 594)
    # Processing the call keyword arguments (line 594)
    kwargs_545400 = {}
    
    # Call to FuncData(...): (line 594)
    # Processing the call arguments (line 594)
    # Getting the type of 'dn' (line 594)
    dn_545389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 13), 'dn', False)
    # Getting the type of 'dataset' (line 594)
    dataset_545390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 17), 'dataset', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 594)
    tuple_545391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 594)
    # Adding element type (line 594)
    int_545392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 27), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 27), tuple_545391, int_545392)
    # Adding element type (line 594)
    int_545393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 30), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 27), tuple_545391, int_545393)
    
    int_545394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 34), 'int')
    # Processing the call keyword arguments (line 594)
    float_545395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 42), 'float')
    keyword_545396 = float_545395
    kwargs_545397 = {'rtol': keyword_545396}
    # Getting the type of 'FuncData' (line 594)
    FuncData_545388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 594)
    FuncData_call_result_545398 = invoke(stypy.reporting.localization.Localization(__file__, 594, 4), FuncData_545388, *[dn_545389, dataset_545390, tuple_545391, int_545394], **kwargs_545397)
    
    # Obtaining the member 'check' of a type (line 594)
    check_545399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 4), FuncData_call_result_545398, 'check')
    # Calling check(args, kwargs) (line 594)
    check_call_result_545401 = invoke(stypy.reporting.localization.Localization(__file__, 594, 4), check_545399, *[], **kwargs_545400)
    
    
    # ################# End of 'test_dn_quarter_period(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_dn_quarter_period' in the type store
    # Getting the type of 'stypy_return_type' (line 576)
    stypy_return_type_545402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_545402)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_dn_quarter_period'
    return stypy_return_type_545402

# Assigning a type to the variable 'test_dn_quarter_period' (line 576)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 0), 'test_dn_quarter_period', test_dn_quarter_period)

@norecursion
def _mpmath_wrightomega(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_mpmath_wrightomega'
    module_type_store = module_type_store.open_function_context('_mpmath_wrightomega', 601, 0, False)
    
    # Passed parameters checking function
    _mpmath_wrightomega.stypy_localization = localization
    _mpmath_wrightomega.stypy_type_of_self = None
    _mpmath_wrightomega.stypy_type_store = module_type_store
    _mpmath_wrightomega.stypy_function_name = '_mpmath_wrightomega'
    _mpmath_wrightomega.stypy_param_names_list = ['z', 'dps']
    _mpmath_wrightomega.stypy_varargs_param_name = None
    _mpmath_wrightomega.stypy_kwargs_param_name = None
    _mpmath_wrightomega.stypy_call_defaults = defaults
    _mpmath_wrightomega.stypy_call_varargs = varargs
    _mpmath_wrightomega.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_mpmath_wrightomega', ['z', 'dps'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_mpmath_wrightomega', localization, ['z', 'dps'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_mpmath_wrightomega(...)' code ##################

    
    # Call to workdps(...): (line 602)
    # Processing the call arguments (line 602)
    # Getting the type of 'dps' (line 602)
    dps_545405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 24), 'dps', False)
    # Processing the call keyword arguments (line 602)
    kwargs_545406 = {}
    # Getting the type of 'mpmath' (line 602)
    mpmath_545403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 9), 'mpmath', False)
    # Obtaining the member 'workdps' of a type (line 602)
    workdps_545404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 9), mpmath_545403, 'workdps')
    # Calling workdps(args, kwargs) (line 602)
    workdps_call_result_545407 = invoke(stypy.reporting.localization.Localization(__file__, 602, 9), workdps_545404, *[dps_545405], **kwargs_545406)
    
    with_545408 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 602, 9), workdps_call_result_545407, 'with parameter', '__enter__', '__exit__')

    if with_545408:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 602)
        enter___545409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 9), workdps_call_result_545407, '__enter__')
        with_enter_545410 = invoke(stypy.reporting.localization.Localization(__file__, 602, 9), enter___545409)
        
        # Assigning a Call to a Name (line 603):
        
        # Assigning a Call to a Name (line 603):
        
        # Call to mpc(...): (line 603)
        # Processing the call arguments (line 603)
        # Getting the type of 'z' (line 603)
        z_545413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 23), 'z', False)
        # Processing the call keyword arguments (line 603)
        kwargs_545414 = {}
        # Getting the type of 'mpmath' (line 603)
        mpmath_545411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 12), 'mpmath', False)
        # Obtaining the member 'mpc' of a type (line 603)
        mpc_545412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 12), mpmath_545411, 'mpc')
        # Calling mpc(args, kwargs) (line 603)
        mpc_call_result_545415 = invoke(stypy.reporting.localization.Localization(__file__, 603, 12), mpc_545412, *[z_545413], **kwargs_545414)
        
        # Assigning a type to the variable 'z' (line 603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 8), 'z', mpc_call_result_545415)
        
        # Assigning a Call to a Name (line 604):
        
        # Assigning a Call to a Name (line 604):
        
        # Call to ceil(...): (line 604)
        # Processing the call arguments (line 604)
        # Getting the type of 'z' (line 604)
        z_545418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 30), 'z', False)
        # Obtaining the member 'imag' of a type (line 604)
        imag_545419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 30), z_545418, 'imag')
        # Getting the type of 'mpmath' (line 604)
        mpmath_545420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 39), 'mpmath', False)
        # Obtaining the member 'pi' of a type (line 604)
        pi_545421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 39), mpmath_545420, 'pi')
        # Applying the binary operator '-' (line 604)
        result_sub_545422 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 30), '-', imag_545419, pi_545421)
        
        int_545423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 51), 'int')
        # Getting the type of 'mpmath' (line 604)
        mpmath_545424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 53), 'mpmath', False)
        # Obtaining the member 'pi' of a type (line 604)
        pi_545425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 53), mpmath_545424, 'pi')
        # Applying the binary operator '*' (line 604)
        result_mul_545426 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 51), '*', int_545423, pi_545425)
        
        # Applying the binary operator 'div' (line 604)
        result_div_545427 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 29), 'div', result_sub_545422, result_mul_545426)
        
        # Processing the call keyword arguments (line 604)
        kwargs_545428 = {}
        # Getting the type of 'mpmath' (line 604)
        mpmath_545416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 17), 'mpmath', False)
        # Obtaining the member 'ceil' of a type (line 604)
        ceil_545417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 17), mpmath_545416, 'ceil')
        # Calling ceil(args, kwargs) (line 604)
        ceil_call_result_545429 = invoke(stypy.reporting.localization.Localization(__file__, 604, 17), ceil_545417, *[result_div_545427], **kwargs_545428)
        
        # Assigning a type to the variable 'unwind' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'unwind', ceil_call_result_545429)
        
        # Assigning a Call to a Name (line 605):
        
        # Assigning a Call to a Name (line 605):
        
        # Call to lambertw(...): (line 605)
        # Processing the call arguments (line 605)
        
        # Call to exp(...): (line 605)
        # Processing the call arguments (line 605)
        # Getting the type of 'z' (line 605)
        z_545434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 41), 'z', False)
        # Processing the call keyword arguments (line 605)
        kwargs_545435 = {}
        # Getting the type of 'mpmath' (line 605)
        mpmath_545432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 30), 'mpmath', False)
        # Obtaining the member 'exp' of a type (line 605)
        exp_545433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 30), mpmath_545432, 'exp')
        # Calling exp(args, kwargs) (line 605)
        exp_call_result_545436 = invoke(stypy.reporting.localization.Localization(__file__, 605, 30), exp_545433, *[z_545434], **kwargs_545435)
        
        # Getting the type of 'unwind' (line 605)
        unwind_545437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 45), 'unwind', False)
        # Processing the call keyword arguments (line 605)
        kwargs_545438 = {}
        # Getting the type of 'mpmath' (line 605)
        mpmath_545430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 14), 'mpmath', False)
        # Obtaining the member 'lambertw' of a type (line 605)
        lambertw_545431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 14), mpmath_545430, 'lambertw')
        # Calling lambertw(args, kwargs) (line 605)
        lambertw_call_result_545439 = invoke(stypy.reporting.localization.Localization(__file__, 605, 14), lambertw_545431, *[exp_call_result_545436, unwind_545437], **kwargs_545438)
        
        # Assigning a type to the variable 'res' (line 605)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 605, 8), 'res', lambertw_call_result_545439)
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 602)
        exit___545440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 9), workdps_call_result_545407, '__exit__')
        with_exit_545441 = invoke(stypy.reporting.localization.Localization(__file__, 602, 9), exit___545440, None, None, None)

    # Getting the type of 'res' (line 606)
    res_545442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 11), 'res')
    # Assigning a type to the variable 'stypy_return_type' (line 606)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 606, 4), 'stypy_return_type', res_545442)
    
    # ################# End of '_mpmath_wrightomega(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_mpmath_wrightomega' in the type store
    # Getting the type of 'stypy_return_type' (line 601)
    stypy_return_type_545443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_545443)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_mpmath_wrightomega'
    return stypy_return_type_545443

# Assigning a type to the variable '_mpmath_wrightomega' (line 601)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 0), '_mpmath_wrightomega', _mpmath_wrightomega)

@norecursion
def test_wrightomega_branch(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_wrightomega_branch'
    module_type_store = module_type_store.open_function_context('test_wrightomega_branch', 609, 0, False)
    
    # Passed parameters checking function
    test_wrightomega_branch.stypy_localization = localization
    test_wrightomega_branch.stypy_type_of_self = None
    test_wrightomega_branch.stypy_type_store = module_type_store
    test_wrightomega_branch.stypy_function_name = 'test_wrightomega_branch'
    test_wrightomega_branch.stypy_param_names_list = []
    test_wrightomega_branch.stypy_varargs_param_name = None
    test_wrightomega_branch.stypy_kwargs_param_name = None
    test_wrightomega_branch.stypy_call_defaults = defaults
    test_wrightomega_branch.stypy_call_varargs = varargs
    test_wrightomega_branch.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_wrightomega_branch', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_wrightomega_branch', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_wrightomega_branch(...)' code ##################

    
    # Assigning a UnaryOp to a Name (line 612):
    
    # Assigning a UnaryOp to a Name (line 612):
    
    
    # Call to logspace(...): (line 612)
    # Processing the call arguments (line 612)
    int_545446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 21), 'int')
    int_545447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 25), 'int')
    int_545448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 28), 'int')
    # Processing the call keyword arguments (line 612)
    kwargs_545449 = {}
    # Getting the type of 'np' (line 612)
    np_545444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 9), 'np', False)
    # Obtaining the member 'logspace' of a type (line 612)
    logspace_545445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 9), np_545444, 'logspace')
    # Calling logspace(args, kwargs) (line 612)
    logspace_call_result_545450 = invoke(stypy.reporting.localization.Localization(__file__, 612, 9), logspace_545445, *[int_545446, int_545447, int_545448], **kwargs_545449)
    
    # Applying the 'usub' unary operator (line 612)
    result___neg___545451 = python_operator(stypy.reporting.localization.Localization(__file__, 612, 8), 'usub', logspace_call_result_545450)
    
    # Assigning a type to the variable 'x' (line 612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'x', result___neg___545451)
    
    # Assigning a List to a Name (line 613):
    
    # Assigning a List to a Name (line 613):
    
    # Obtaining an instance of the builtin type 'list' (line 613)
    list_545452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 613)
    # Adding element type (line 613)
    
    # Call to nextafter(...): (line 613)
    # Processing the call arguments (line 613)
    # Getting the type of 'np' (line 613)
    np_545455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 32), 'np', False)
    # Obtaining the member 'pi' of a type (line 613)
    pi_545456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 32), np_545455, 'pi')
    # Getting the type of 'np' (line 613)
    np_545457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 39), 'np', False)
    # Obtaining the member 'inf' of a type (line 613)
    inf_545458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 39), np_545457, 'inf')
    # Processing the call keyword arguments (line 613)
    kwargs_545459 = {}
    # Getting the type of 'np' (line 613)
    np_545453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 19), 'np', False)
    # Obtaining the member 'nextafter' of a type (line 613)
    nextafter_545454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 19), np_545453, 'nextafter')
    # Calling nextafter(args, kwargs) (line 613)
    nextafter_call_result_545460 = invoke(stypy.reporting.localization.Localization(__file__, 613, 19), nextafter_545454, *[pi_545456, inf_545458], **kwargs_545459)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 18), list_545452, nextafter_call_result_545460)
    
    # Assigning a type to the variable 'picut_above' (line 613)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 4), 'picut_above', list_545452)
    
    # Assigning a List to a Name (line 614):
    
    # Assigning a List to a Name (line 614):
    
    # Obtaining an instance of the builtin type 'list' (line 614)
    list_545461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 614)
    # Adding element type (line 614)
    
    # Call to nextafter(...): (line 614)
    # Processing the call arguments (line 614)
    # Getting the type of 'np' (line 614)
    np_545464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 32), 'np', False)
    # Obtaining the member 'pi' of a type (line 614)
    pi_545465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 614, 32), np_545464, 'pi')
    
    # Getting the type of 'np' (line 614)
    np_545466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 40), 'np', False)
    # Obtaining the member 'inf' of a type (line 614)
    inf_545467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 614, 40), np_545466, 'inf')
    # Applying the 'usub' unary operator (line 614)
    result___neg___545468 = python_operator(stypy.reporting.localization.Localization(__file__, 614, 39), 'usub', inf_545467)
    
    # Processing the call keyword arguments (line 614)
    kwargs_545469 = {}
    # Getting the type of 'np' (line 614)
    np_545462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 19), 'np', False)
    # Obtaining the member 'nextafter' of a type (line 614)
    nextafter_545463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 614, 19), np_545462, 'nextafter')
    # Calling nextafter(args, kwargs) (line 614)
    nextafter_call_result_545470 = invoke(stypy.reporting.localization.Localization(__file__, 614, 19), nextafter_545463, *[pi_545465, result___neg___545468], **kwargs_545469)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 18), list_545461, nextafter_call_result_545470)
    
    # Assigning a type to the variable 'picut_below' (line 614)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 4), 'picut_below', list_545461)
    
    # Assigning a List to a Name (line 615):
    
    # Assigning a List to a Name (line 615):
    
    # Obtaining an instance of the builtin type 'list' (line 615)
    list_545471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 615)
    # Adding element type (line 615)
    
    # Call to nextafter(...): (line 615)
    # Processing the call arguments (line 615)
    
    # Getting the type of 'np' (line 615)
    np_545474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 34), 'np', False)
    # Obtaining the member 'pi' of a type (line 615)
    pi_545475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 34), np_545474, 'pi')
    # Applying the 'usub' unary operator (line 615)
    result___neg___545476 = python_operator(stypy.reporting.localization.Localization(__file__, 615, 33), 'usub', pi_545475)
    
    # Getting the type of 'np' (line 615)
    np_545477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 41), 'np', False)
    # Obtaining the member 'inf' of a type (line 615)
    inf_545478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 41), np_545477, 'inf')
    # Processing the call keyword arguments (line 615)
    kwargs_545479 = {}
    # Getting the type of 'np' (line 615)
    np_545472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 20), 'np', False)
    # Obtaining the member 'nextafter' of a type (line 615)
    nextafter_545473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 20), np_545472, 'nextafter')
    # Calling nextafter(args, kwargs) (line 615)
    nextafter_call_result_545480 = invoke(stypy.reporting.localization.Localization(__file__, 615, 20), nextafter_545473, *[result___neg___545476, inf_545478], **kwargs_545479)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 615, 19), list_545471, nextafter_call_result_545480)
    
    # Assigning a type to the variable 'npicut_above' (line 615)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 4), 'npicut_above', list_545471)
    
    # Assigning a List to a Name (line 616):
    
    # Assigning a List to a Name (line 616):
    
    # Obtaining an instance of the builtin type 'list' (line 616)
    list_545481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 19), 'list')
    # Adding type elements to the builtin type 'list' instance (line 616)
    # Adding element type (line 616)
    
    # Call to nextafter(...): (line 616)
    # Processing the call arguments (line 616)
    
    # Getting the type of 'np' (line 616)
    np_545484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 34), 'np', False)
    # Obtaining the member 'pi' of a type (line 616)
    pi_545485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 34), np_545484, 'pi')
    # Applying the 'usub' unary operator (line 616)
    result___neg___545486 = python_operator(stypy.reporting.localization.Localization(__file__, 616, 33), 'usub', pi_545485)
    
    
    # Getting the type of 'np' (line 616)
    np_545487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 42), 'np', False)
    # Obtaining the member 'inf' of a type (line 616)
    inf_545488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 42), np_545487, 'inf')
    # Applying the 'usub' unary operator (line 616)
    result___neg___545489 = python_operator(stypy.reporting.localization.Localization(__file__, 616, 41), 'usub', inf_545488)
    
    # Processing the call keyword arguments (line 616)
    kwargs_545490 = {}
    # Getting the type of 'np' (line 616)
    np_545482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 20), 'np', False)
    # Obtaining the member 'nextafter' of a type (line 616)
    nextafter_545483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 20), np_545482, 'nextafter')
    # Calling nextafter(args, kwargs) (line 616)
    nextafter_call_result_545491 = invoke(stypy.reporting.localization.Localization(__file__, 616, 20), nextafter_545483, *[result___neg___545486, result___neg___545489], **kwargs_545490)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 616, 19), list_545481, nextafter_call_result_545491)
    
    # Assigning a type to the variable 'npicut_below' (line 616)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 4), 'npicut_below', list_545481)
    
    
    # Call to range(...): (line 617)
    # Processing the call arguments (line 617)
    int_545493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 19), 'int')
    # Processing the call keyword arguments (line 617)
    kwargs_545494 = {}
    # Getting the type of 'range' (line 617)
    range_545492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 13), 'range', False)
    # Calling range(args, kwargs) (line 617)
    range_call_result_545495 = invoke(stypy.reporting.localization.Localization(__file__, 617, 13), range_545492, *[int_545493], **kwargs_545494)
    
    # Testing the type of a for loop iterable (line 617)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 617, 4), range_call_result_545495)
    # Getting the type of the for loop variable (line 617)
    for_loop_var_545496 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 617, 4), range_call_result_545495)
    # Assigning a type to the variable 'i' (line 617)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 617, 4), 'i', for_loop_var_545496)
    # SSA begins for a for statement (line 617)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 618)
    # Processing the call arguments (line 618)
    
    # Call to nextafter(...): (line 618)
    # Processing the call arguments (line 618)
    
    # Obtaining the type of the subscript
    int_545501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 52), 'int')
    # Getting the type of 'picut_above' (line 618)
    picut_above_545502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 40), 'picut_above', False)
    # Obtaining the member '__getitem__' of a type (line 618)
    getitem___545503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 40), picut_above_545502, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 618)
    subscript_call_result_545504 = invoke(stypy.reporting.localization.Localization(__file__, 618, 40), getitem___545503, int_545501)
    
    # Getting the type of 'np' (line 618)
    np_545505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 57), 'np', False)
    # Obtaining the member 'inf' of a type (line 618)
    inf_545506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 57), np_545505, 'inf')
    # Processing the call keyword arguments (line 618)
    kwargs_545507 = {}
    # Getting the type of 'np' (line 618)
    np_545499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 27), 'np', False)
    # Obtaining the member 'nextafter' of a type (line 618)
    nextafter_545500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 27), np_545499, 'nextafter')
    # Calling nextafter(args, kwargs) (line 618)
    nextafter_call_result_545508 = invoke(stypy.reporting.localization.Localization(__file__, 618, 27), nextafter_545500, *[subscript_call_result_545504, inf_545506], **kwargs_545507)
    
    # Processing the call keyword arguments (line 618)
    kwargs_545509 = {}
    # Getting the type of 'picut_above' (line 618)
    picut_above_545497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'picut_above', False)
    # Obtaining the member 'append' of a type (line 618)
    append_545498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 8), picut_above_545497, 'append')
    # Calling append(args, kwargs) (line 618)
    append_call_result_545510 = invoke(stypy.reporting.localization.Localization(__file__, 618, 8), append_545498, *[nextafter_call_result_545508], **kwargs_545509)
    
    
    # Call to append(...): (line 619)
    # Processing the call arguments (line 619)
    
    # Call to nextafter(...): (line 619)
    # Processing the call arguments (line 619)
    
    # Obtaining the type of the subscript
    int_545515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 52), 'int')
    # Getting the type of 'picut_below' (line 619)
    picut_below_545516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 40), 'picut_below', False)
    # Obtaining the member '__getitem__' of a type (line 619)
    getitem___545517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 40), picut_below_545516, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 619)
    subscript_call_result_545518 = invoke(stypy.reporting.localization.Localization(__file__, 619, 40), getitem___545517, int_545515)
    
    
    # Getting the type of 'np' (line 619)
    np_545519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 58), 'np', False)
    # Obtaining the member 'inf' of a type (line 619)
    inf_545520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 58), np_545519, 'inf')
    # Applying the 'usub' unary operator (line 619)
    result___neg___545521 = python_operator(stypy.reporting.localization.Localization(__file__, 619, 57), 'usub', inf_545520)
    
    # Processing the call keyword arguments (line 619)
    kwargs_545522 = {}
    # Getting the type of 'np' (line 619)
    np_545513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 27), 'np', False)
    # Obtaining the member 'nextafter' of a type (line 619)
    nextafter_545514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 27), np_545513, 'nextafter')
    # Calling nextafter(args, kwargs) (line 619)
    nextafter_call_result_545523 = invoke(stypy.reporting.localization.Localization(__file__, 619, 27), nextafter_545514, *[subscript_call_result_545518, result___neg___545521], **kwargs_545522)
    
    # Processing the call keyword arguments (line 619)
    kwargs_545524 = {}
    # Getting the type of 'picut_below' (line 619)
    picut_below_545511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 8), 'picut_below', False)
    # Obtaining the member 'append' of a type (line 619)
    append_545512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 8), picut_below_545511, 'append')
    # Calling append(args, kwargs) (line 619)
    append_call_result_545525 = invoke(stypy.reporting.localization.Localization(__file__, 619, 8), append_545512, *[nextafter_call_result_545523], **kwargs_545524)
    
    
    # Call to append(...): (line 620)
    # Processing the call arguments (line 620)
    
    # Call to nextafter(...): (line 620)
    # Processing the call arguments (line 620)
    
    # Obtaining the type of the subscript
    int_545530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 54), 'int')
    # Getting the type of 'npicut_above' (line 620)
    npicut_above_545531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 41), 'npicut_above', False)
    # Obtaining the member '__getitem__' of a type (line 620)
    getitem___545532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 41), npicut_above_545531, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 620)
    subscript_call_result_545533 = invoke(stypy.reporting.localization.Localization(__file__, 620, 41), getitem___545532, int_545530)
    
    # Getting the type of 'np' (line 620)
    np_545534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 59), 'np', False)
    # Obtaining the member 'inf' of a type (line 620)
    inf_545535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 59), np_545534, 'inf')
    # Processing the call keyword arguments (line 620)
    kwargs_545536 = {}
    # Getting the type of 'np' (line 620)
    np_545528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 28), 'np', False)
    # Obtaining the member 'nextafter' of a type (line 620)
    nextafter_545529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 28), np_545528, 'nextafter')
    # Calling nextafter(args, kwargs) (line 620)
    nextafter_call_result_545537 = invoke(stypy.reporting.localization.Localization(__file__, 620, 28), nextafter_545529, *[subscript_call_result_545533, inf_545535], **kwargs_545536)
    
    # Processing the call keyword arguments (line 620)
    kwargs_545538 = {}
    # Getting the type of 'npicut_above' (line 620)
    npicut_above_545526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 8), 'npicut_above', False)
    # Obtaining the member 'append' of a type (line 620)
    append_545527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 8), npicut_above_545526, 'append')
    # Calling append(args, kwargs) (line 620)
    append_call_result_545539 = invoke(stypy.reporting.localization.Localization(__file__, 620, 8), append_545527, *[nextafter_call_result_545537], **kwargs_545538)
    
    
    # Call to append(...): (line 621)
    # Processing the call arguments (line 621)
    
    # Call to nextafter(...): (line 621)
    # Processing the call arguments (line 621)
    
    # Obtaining the type of the subscript
    int_545544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 54), 'int')
    # Getting the type of 'npicut_below' (line 621)
    npicut_below_545545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 41), 'npicut_below', False)
    # Obtaining the member '__getitem__' of a type (line 621)
    getitem___545546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 41), npicut_below_545545, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 621)
    subscript_call_result_545547 = invoke(stypy.reporting.localization.Localization(__file__, 621, 41), getitem___545546, int_545544)
    
    
    # Getting the type of 'np' (line 621)
    np_545548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 60), 'np', False)
    # Obtaining the member 'inf' of a type (line 621)
    inf_545549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 60), np_545548, 'inf')
    # Applying the 'usub' unary operator (line 621)
    result___neg___545550 = python_operator(stypy.reporting.localization.Localization(__file__, 621, 59), 'usub', inf_545549)
    
    # Processing the call keyword arguments (line 621)
    kwargs_545551 = {}
    # Getting the type of 'np' (line 621)
    np_545542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 28), 'np', False)
    # Obtaining the member 'nextafter' of a type (line 621)
    nextafter_545543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 28), np_545542, 'nextafter')
    # Calling nextafter(args, kwargs) (line 621)
    nextafter_call_result_545552 = invoke(stypy.reporting.localization.Localization(__file__, 621, 28), nextafter_545543, *[subscript_call_result_545547, result___neg___545550], **kwargs_545551)
    
    # Processing the call keyword arguments (line 621)
    kwargs_545553 = {}
    # Getting the type of 'npicut_below' (line 621)
    npicut_below_545540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'npicut_below', False)
    # Obtaining the member 'append' of a type (line 621)
    append_545541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 8), npicut_below_545540, 'append')
    # Calling append(args, kwargs) (line 621)
    append_call_result_545554 = invoke(stypy.reporting.localization.Localization(__file__, 621, 8), append_545541, *[nextafter_call_result_545552], **kwargs_545553)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 622):
    
    # Assigning a Call to a Name (line 622):
    
    # Call to hstack(...): (line 622)
    # Processing the call arguments (line 622)
    
    # Obtaining an instance of the builtin type 'tuple' (line 622)
    tuple_545557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 622)
    # Adding element type (line 622)
    # Getting the type of 'picut_above' (line 622)
    picut_above_545558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 19), 'picut_above', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 622, 19), tuple_545557, picut_above_545558)
    # Adding element type (line 622)
    # Getting the type of 'picut_below' (line 622)
    picut_below_545559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 32), 'picut_below', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 622, 19), tuple_545557, picut_below_545559)
    # Adding element type (line 622)
    # Getting the type of 'npicut_above' (line 622)
    npicut_above_545560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 45), 'npicut_above', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 622, 19), tuple_545557, npicut_above_545560)
    # Adding element type (line 622)
    # Getting the type of 'npicut_below' (line 622)
    npicut_below_545561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 59), 'npicut_below', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 622, 19), tuple_545557, npicut_below_545561)
    
    # Processing the call keyword arguments (line 622)
    kwargs_545562 = {}
    # Getting the type of 'np' (line 622)
    np_545555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 8), 'np', False)
    # Obtaining the member 'hstack' of a type (line 622)
    hstack_545556 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 8), np_545555, 'hstack')
    # Calling hstack(args, kwargs) (line 622)
    hstack_call_result_545563 = invoke(stypy.reporting.localization.Localization(__file__, 622, 8), hstack_545556, *[tuple_545557], **kwargs_545562)
    
    # Assigning a type to the variable 'y' (line 622)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 622, 4), 'y', hstack_call_result_545563)
    
    # Assigning a Call to a Tuple (line 623):
    
    # Assigning a Subscript to a Name (line 623):
    
    # Obtaining the type of the subscript
    int_545564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 4), 'int')
    
    # Call to meshgrid(...): (line 623)
    # Processing the call arguments (line 623)
    # Getting the type of 'x' (line 623)
    x_545567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 23), 'x', False)
    # Getting the type of 'y' (line 623)
    y_545568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 26), 'y', False)
    # Processing the call keyword arguments (line 623)
    kwargs_545569 = {}
    # Getting the type of 'np' (line 623)
    np_545565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 623)
    meshgrid_545566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 11), np_545565, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 623)
    meshgrid_call_result_545570 = invoke(stypy.reporting.localization.Localization(__file__, 623, 11), meshgrid_545566, *[x_545567, y_545568], **kwargs_545569)
    
    # Obtaining the member '__getitem__' of a type (line 623)
    getitem___545571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 4), meshgrid_call_result_545570, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 623)
    subscript_call_result_545572 = invoke(stypy.reporting.localization.Localization(__file__, 623, 4), getitem___545571, int_545564)
    
    # Assigning a type to the variable 'tuple_var_assignment_542790' (line 623)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 4), 'tuple_var_assignment_542790', subscript_call_result_545572)
    
    # Assigning a Subscript to a Name (line 623):
    
    # Obtaining the type of the subscript
    int_545573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 4), 'int')
    
    # Call to meshgrid(...): (line 623)
    # Processing the call arguments (line 623)
    # Getting the type of 'x' (line 623)
    x_545576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 23), 'x', False)
    # Getting the type of 'y' (line 623)
    y_545577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 26), 'y', False)
    # Processing the call keyword arguments (line 623)
    kwargs_545578 = {}
    # Getting the type of 'np' (line 623)
    np_545574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 623)
    meshgrid_545575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 11), np_545574, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 623)
    meshgrid_call_result_545579 = invoke(stypy.reporting.localization.Localization(__file__, 623, 11), meshgrid_545575, *[x_545576, y_545577], **kwargs_545578)
    
    # Obtaining the member '__getitem__' of a type (line 623)
    getitem___545580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 4), meshgrid_call_result_545579, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 623)
    subscript_call_result_545581 = invoke(stypy.reporting.localization.Localization(__file__, 623, 4), getitem___545580, int_545573)
    
    # Assigning a type to the variable 'tuple_var_assignment_542791' (line 623)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 4), 'tuple_var_assignment_542791', subscript_call_result_545581)
    
    # Assigning a Name to a Name (line 623):
    # Getting the type of 'tuple_var_assignment_542790' (line 623)
    tuple_var_assignment_542790_545582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 4), 'tuple_var_assignment_542790')
    # Assigning a type to the variable 'x' (line 623)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 4), 'x', tuple_var_assignment_542790_545582)
    
    # Assigning a Name to a Name (line 623):
    # Getting the type of 'tuple_var_assignment_542791' (line 623)
    tuple_var_assignment_542791_545583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 4), 'tuple_var_assignment_542791')
    # Assigning a type to the variable 'y' (line 623)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 7), 'y', tuple_var_assignment_542791_545583)
    
    # Assigning a Call to a Name (line 624):
    
    # Assigning a Call to a Name (line 624):
    
    # Call to flatten(...): (line 624)
    # Processing the call keyword arguments (line 624)
    kwargs_545590 = {}
    # Getting the type of 'x' (line 624)
    x_545584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 9), 'x', False)
    complex_545585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 13), 'complex')
    # Getting the type of 'y' (line 624)
    y_545586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 16), 'y', False)
    # Applying the binary operator '*' (line 624)
    result_mul_545587 = python_operator(stypy.reporting.localization.Localization(__file__, 624, 13), '*', complex_545585, y_545586)
    
    # Applying the binary operator '+' (line 624)
    result_add_545588 = python_operator(stypy.reporting.localization.Localization(__file__, 624, 9), '+', x_545584, result_mul_545587)
    
    # Obtaining the member 'flatten' of a type (line 624)
    flatten_545589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 9), result_add_545588, 'flatten')
    # Calling flatten(args, kwargs) (line 624)
    flatten_call_result_545591 = invoke(stypy.reporting.localization.Localization(__file__, 624, 9), flatten_545589, *[], **kwargs_545590)
    
    # Assigning a type to the variable 'z' (line 624)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 624, 4), 'z', flatten_call_result_545591)
    
    # Assigning a List to a Name (line 626):
    
    # Assigning a List to a Name (line 626):
    
    # Obtaining an instance of the builtin type 'list' (line 626)
    list_545592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 626)
    
    # Assigning a type to the variable 'dataset' (line 626)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 4), 'dataset', list_545592)
    
    # Getting the type of 'z' (line 627)
    z_545593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 14), 'z')
    # Testing the type of a for loop iterable (line 627)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 627, 4), z_545593)
    # Getting the type of the for loop variable (line 627)
    for_loop_var_545594 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 627, 4), z_545593)
    # Assigning a type to the variable 'z0' (line 627)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 4), 'z0', for_loop_var_545594)
    # SSA begins for a for statement (line 627)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 628)
    # Processing the call arguments (line 628)
    
    # Obtaining an instance of the builtin type 'tuple' (line 628)
    tuple_545597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 628)
    # Adding element type (line 628)
    # Getting the type of 'z0' (line 628)
    z0_545598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 24), 'z0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 628, 24), tuple_545597, z0_545598)
    # Adding element type (line 628)
    
    # Call to complex(...): (line 628)
    # Processing the call arguments (line 628)
    
    # Call to _mpmath_wrightomega(...): (line 628)
    # Processing the call arguments (line 628)
    # Getting the type of 'z0' (line 628)
    z0_545601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 56), 'z0', False)
    int_545602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 60), 'int')
    # Processing the call keyword arguments (line 628)
    kwargs_545603 = {}
    # Getting the type of '_mpmath_wrightomega' (line 628)
    _mpmath_wrightomega_545600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 36), '_mpmath_wrightomega', False)
    # Calling _mpmath_wrightomega(args, kwargs) (line 628)
    _mpmath_wrightomega_call_result_545604 = invoke(stypy.reporting.localization.Localization(__file__, 628, 36), _mpmath_wrightomega_545600, *[z0_545601, int_545602], **kwargs_545603)
    
    # Processing the call keyword arguments (line 628)
    kwargs_545605 = {}
    # Getting the type of 'complex' (line 628)
    complex_545599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 28), 'complex', False)
    # Calling complex(args, kwargs) (line 628)
    complex_call_result_545606 = invoke(stypy.reporting.localization.Localization(__file__, 628, 28), complex_545599, *[_mpmath_wrightomega_call_result_545604], **kwargs_545605)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 628, 24), tuple_545597, complex_call_result_545606)
    
    # Processing the call keyword arguments (line 628)
    kwargs_545607 = {}
    # Getting the type of 'dataset' (line 628)
    dataset_545595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'dataset', False)
    # Obtaining the member 'append' of a type (line 628)
    append_545596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 8), dataset_545595, 'append')
    # Calling append(args, kwargs) (line 628)
    append_call_result_545608 = invoke(stypy.reporting.localization.Localization(__file__, 628, 8), append_545596, *[tuple_545597], **kwargs_545607)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 629):
    
    # Assigning a Call to a Name (line 629):
    
    # Call to asarray(...): (line 629)
    # Processing the call arguments (line 629)
    # Getting the type of 'dataset' (line 629)
    dataset_545611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 25), 'dataset', False)
    # Processing the call keyword arguments (line 629)
    kwargs_545612 = {}
    # Getting the type of 'np' (line 629)
    np_545609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 14), 'np', False)
    # Obtaining the member 'asarray' of a type (line 629)
    asarray_545610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 629, 14), np_545609, 'asarray')
    # Calling asarray(args, kwargs) (line 629)
    asarray_call_result_545613 = invoke(stypy.reporting.localization.Localization(__file__, 629, 14), asarray_545610, *[dataset_545611], **kwargs_545612)
    
    # Assigning a type to the variable 'dataset' (line 629)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 629, 4), 'dataset', asarray_call_result_545613)
    
    # Call to check(...): (line 631)
    # Processing the call keyword arguments (line 631)
    kwargs_545625 = {}
    
    # Call to FuncData(...): (line 631)
    # Processing the call arguments (line 631)
    # Getting the type of 'sc' (line 631)
    sc_545615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 13), 'sc', False)
    # Obtaining the member 'wrightomega' of a type (line 631)
    wrightomega_545616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 13), sc_545615, 'wrightomega')
    # Getting the type of 'dataset' (line 631)
    dataset_545617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 29), 'dataset', False)
    int_545618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 38), 'int')
    int_545619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 41), 'int')
    # Processing the call keyword arguments (line 631)
    float_545620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 49), 'float')
    keyword_545621 = float_545620
    kwargs_545622 = {'rtol': keyword_545621}
    # Getting the type of 'FuncData' (line 631)
    FuncData_545614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 631)
    FuncData_call_result_545623 = invoke(stypy.reporting.localization.Localization(__file__, 631, 4), FuncData_545614, *[wrightomega_545616, dataset_545617, int_545618, int_545619], **kwargs_545622)
    
    # Obtaining the member 'check' of a type (line 631)
    check_545624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 4), FuncData_call_result_545623, 'check')
    # Calling check(args, kwargs) (line 631)
    check_call_result_545626 = invoke(stypy.reporting.localization.Localization(__file__, 631, 4), check_545624, *[], **kwargs_545625)
    
    
    # ################# End of 'test_wrightomega_branch(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_wrightomega_branch' in the type store
    # Getting the type of 'stypy_return_type' (line 609)
    stypy_return_type_545627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_545627)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_wrightomega_branch'
    return stypy_return_type_545627

# Assigning a type to the variable 'test_wrightomega_branch' (line 609)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 0), 'test_wrightomega_branch', test_wrightomega_branch)

@norecursion
def test_wrightomega_region1(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_wrightomega_region1'
    module_type_store = module_type_store.open_function_context('test_wrightomega_region1', 634, 0, False)
    
    # Passed parameters checking function
    test_wrightomega_region1.stypy_localization = localization
    test_wrightomega_region1.stypy_type_of_self = None
    test_wrightomega_region1.stypy_type_store = module_type_store
    test_wrightomega_region1.stypy_function_name = 'test_wrightomega_region1'
    test_wrightomega_region1.stypy_param_names_list = []
    test_wrightomega_region1.stypy_varargs_param_name = None
    test_wrightomega_region1.stypy_kwargs_param_name = None
    test_wrightomega_region1.stypy_call_defaults = defaults
    test_wrightomega_region1.stypy_call_varargs = varargs
    test_wrightomega_region1.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_wrightomega_region1', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_wrightomega_region1', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_wrightomega_region1(...)' code ##################

    
    # Assigning a Call to a Name (line 638):
    
    # Assigning a Call to a Name (line 638):
    
    # Call to linspace(...): (line 638)
    # Processing the call arguments (line 638)
    int_545630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 20), 'int')
    int_545631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 24), 'int')
    # Processing the call keyword arguments (line 638)
    kwargs_545632 = {}
    # Getting the type of 'np' (line 638)
    np_545628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 8), 'np', False)
    # Obtaining the member 'linspace' of a type (line 638)
    linspace_545629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 8), np_545628, 'linspace')
    # Calling linspace(args, kwargs) (line 638)
    linspace_call_result_545633 = invoke(stypy.reporting.localization.Localization(__file__, 638, 8), linspace_545629, *[int_545630, int_545631], **kwargs_545632)
    
    # Assigning a type to the variable 'x' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'x', linspace_call_result_545633)
    
    # Assigning a Call to a Name (line 639):
    
    # Assigning a Call to a Name (line 639):
    
    # Call to linspace(...): (line 639)
    # Processing the call arguments (line 639)
    int_545636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 20), 'int')
    int_545637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 23), 'int')
    # Getting the type of 'np' (line 639)
    np_545638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 25), 'np', False)
    # Obtaining the member 'pi' of a type (line 639)
    pi_545639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 25), np_545638, 'pi')
    # Applying the binary operator '*' (line 639)
    result_mul_545640 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 23), '*', int_545637, pi_545639)
    
    # Processing the call keyword arguments (line 639)
    kwargs_545641 = {}
    # Getting the type of 'np' (line 639)
    np_545634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'np', False)
    # Obtaining the member 'linspace' of a type (line 639)
    linspace_545635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 8), np_545634, 'linspace')
    # Calling linspace(args, kwargs) (line 639)
    linspace_call_result_545642 = invoke(stypy.reporting.localization.Localization(__file__, 639, 8), linspace_545635, *[int_545636, result_mul_545640], **kwargs_545641)
    
    # Assigning a type to the variable 'y' (line 639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'y', linspace_call_result_545642)
    
    # Assigning a Call to a Tuple (line 640):
    
    # Assigning a Subscript to a Name (line 640):
    
    # Obtaining the type of the subscript
    int_545643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 4), 'int')
    
    # Call to meshgrid(...): (line 640)
    # Processing the call arguments (line 640)
    # Getting the type of 'x' (line 640)
    x_545646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 23), 'x', False)
    # Getting the type of 'y' (line 640)
    y_545647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 26), 'y', False)
    # Processing the call keyword arguments (line 640)
    kwargs_545648 = {}
    # Getting the type of 'np' (line 640)
    np_545644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 640)
    meshgrid_545645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 11), np_545644, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 640)
    meshgrid_call_result_545649 = invoke(stypy.reporting.localization.Localization(__file__, 640, 11), meshgrid_545645, *[x_545646, y_545647], **kwargs_545648)
    
    # Obtaining the member '__getitem__' of a type (line 640)
    getitem___545650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 4), meshgrid_call_result_545649, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 640)
    subscript_call_result_545651 = invoke(stypy.reporting.localization.Localization(__file__, 640, 4), getitem___545650, int_545643)
    
    # Assigning a type to the variable 'tuple_var_assignment_542792' (line 640)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 4), 'tuple_var_assignment_542792', subscript_call_result_545651)
    
    # Assigning a Subscript to a Name (line 640):
    
    # Obtaining the type of the subscript
    int_545652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 4), 'int')
    
    # Call to meshgrid(...): (line 640)
    # Processing the call arguments (line 640)
    # Getting the type of 'x' (line 640)
    x_545655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 23), 'x', False)
    # Getting the type of 'y' (line 640)
    y_545656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 26), 'y', False)
    # Processing the call keyword arguments (line 640)
    kwargs_545657 = {}
    # Getting the type of 'np' (line 640)
    np_545653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 640)
    meshgrid_545654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 11), np_545653, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 640)
    meshgrid_call_result_545658 = invoke(stypy.reporting.localization.Localization(__file__, 640, 11), meshgrid_545654, *[x_545655, y_545656], **kwargs_545657)
    
    # Obtaining the member '__getitem__' of a type (line 640)
    getitem___545659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 4), meshgrid_call_result_545658, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 640)
    subscript_call_result_545660 = invoke(stypy.reporting.localization.Localization(__file__, 640, 4), getitem___545659, int_545652)
    
    # Assigning a type to the variable 'tuple_var_assignment_542793' (line 640)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 4), 'tuple_var_assignment_542793', subscript_call_result_545660)
    
    # Assigning a Name to a Name (line 640):
    # Getting the type of 'tuple_var_assignment_542792' (line 640)
    tuple_var_assignment_542792_545661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 4), 'tuple_var_assignment_542792')
    # Assigning a type to the variable 'x' (line 640)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 4), 'x', tuple_var_assignment_542792_545661)
    
    # Assigning a Name to a Name (line 640):
    # Getting the type of 'tuple_var_assignment_542793' (line 640)
    tuple_var_assignment_542793_545662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 4), 'tuple_var_assignment_542793')
    # Assigning a type to the variable 'y' (line 640)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 7), 'y', tuple_var_assignment_542793_545662)
    
    # Assigning a Call to a Name (line 641):
    
    # Assigning a Call to a Name (line 641):
    
    # Call to flatten(...): (line 641)
    # Processing the call keyword arguments (line 641)
    kwargs_545669 = {}
    # Getting the type of 'x' (line 641)
    x_545663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 9), 'x', False)
    complex_545664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 13), 'complex')
    # Getting the type of 'y' (line 641)
    y_545665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 16), 'y', False)
    # Applying the binary operator '*' (line 641)
    result_mul_545666 = python_operator(stypy.reporting.localization.Localization(__file__, 641, 13), '*', complex_545664, y_545665)
    
    # Applying the binary operator '+' (line 641)
    result_add_545667 = python_operator(stypy.reporting.localization.Localization(__file__, 641, 9), '+', x_545663, result_mul_545666)
    
    # Obtaining the member 'flatten' of a type (line 641)
    flatten_545668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 641, 9), result_add_545667, 'flatten')
    # Calling flatten(args, kwargs) (line 641)
    flatten_call_result_545670 = invoke(stypy.reporting.localization.Localization(__file__, 641, 9), flatten_545668, *[], **kwargs_545669)
    
    # Assigning a type to the variable 'z' (line 641)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 4), 'z', flatten_call_result_545670)
    
    # Assigning a List to a Name (line 643):
    
    # Assigning a List to a Name (line 643):
    
    # Obtaining an instance of the builtin type 'list' (line 643)
    list_545671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 643)
    
    # Assigning a type to the variable 'dataset' (line 643)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 4), 'dataset', list_545671)
    
    # Getting the type of 'z' (line 644)
    z_545672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 14), 'z')
    # Testing the type of a for loop iterable (line 644)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 644, 4), z_545672)
    # Getting the type of the for loop variable (line 644)
    for_loop_var_545673 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 644, 4), z_545672)
    # Assigning a type to the variable 'z0' (line 644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 4), 'z0', for_loop_var_545673)
    # SSA begins for a for statement (line 644)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 645)
    # Processing the call arguments (line 645)
    
    # Obtaining an instance of the builtin type 'tuple' (line 645)
    tuple_545676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 645)
    # Adding element type (line 645)
    # Getting the type of 'z0' (line 645)
    z0_545677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 24), 'z0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 645, 24), tuple_545676, z0_545677)
    # Adding element type (line 645)
    
    # Call to complex(...): (line 645)
    # Processing the call arguments (line 645)
    
    # Call to _mpmath_wrightomega(...): (line 645)
    # Processing the call arguments (line 645)
    # Getting the type of 'z0' (line 645)
    z0_545680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 56), 'z0', False)
    int_545681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 60), 'int')
    # Processing the call keyword arguments (line 645)
    kwargs_545682 = {}
    # Getting the type of '_mpmath_wrightomega' (line 645)
    _mpmath_wrightomega_545679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 36), '_mpmath_wrightomega', False)
    # Calling _mpmath_wrightomega(args, kwargs) (line 645)
    _mpmath_wrightomega_call_result_545683 = invoke(stypy.reporting.localization.Localization(__file__, 645, 36), _mpmath_wrightomega_545679, *[z0_545680, int_545681], **kwargs_545682)
    
    # Processing the call keyword arguments (line 645)
    kwargs_545684 = {}
    # Getting the type of 'complex' (line 645)
    complex_545678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 28), 'complex', False)
    # Calling complex(args, kwargs) (line 645)
    complex_call_result_545685 = invoke(stypy.reporting.localization.Localization(__file__, 645, 28), complex_545678, *[_mpmath_wrightomega_call_result_545683], **kwargs_545684)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 645, 24), tuple_545676, complex_call_result_545685)
    
    # Processing the call keyword arguments (line 645)
    kwargs_545686 = {}
    # Getting the type of 'dataset' (line 645)
    dataset_545674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 8), 'dataset', False)
    # Obtaining the member 'append' of a type (line 645)
    append_545675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 645, 8), dataset_545674, 'append')
    # Calling append(args, kwargs) (line 645)
    append_call_result_545687 = invoke(stypy.reporting.localization.Localization(__file__, 645, 8), append_545675, *[tuple_545676], **kwargs_545686)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 646):
    
    # Assigning a Call to a Name (line 646):
    
    # Call to asarray(...): (line 646)
    # Processing the call arguments (line 646)
    # Getting the type of 'dataset' (line 646)
    dataset_545690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 25), 'dataset', False)
    # Processing the call keyword arguments (line 646)
    kwargs_545691 = {}
    # Getting the type of 'np' (line 646)
    np_545688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 14), 'np', False)
    # Obtaining the member 'asarray' of a type (line 646)
    asarray_545689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 646, 14), np_545688, 'asarray')
    # Calling asarray(args, kwargs) (line 646)
    asarray_call_result_545692 = invoke(stypy.reporting.localization.Localization(__file__, 646, 14), asarray_545689, *[dataset_545690], **kwargs_545691)
    
    # Assigning a type to the variable 'dataset' (line 646)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 4), 'dataset', asarray_call_result_545692)
    
    # Call to check(...): (line 648)
    # Processing the call keyword arguments (line 648)
    kwargs_545704 = {}
    
    # Call to FuncData(...): (line 648)
    # Processing the call arguments (line 648)
    # Getting the type of 'sc' (line 648)
    sc_545694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 13), 'sc', False)
    # Obtaining the member 'wrightomega' of a type (line 648)
    wrightomega_545695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 648, 13), sc_545694, 'wrightomega')
    # Getting the type of 'dataset' (line 648)
    dataset_545696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 29), 'dataset', False)
    int_545697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 38), 'int')
    int_545698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 41), 'int')
    # Processing the call keyword arguments (line 648)
    float_545699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 49), 'float')
    keyword_545700 = float_545699
    kwargs_545701 = {'rtol': keyword_545700}
    # Getting the type of 'FuncData' (line 648)
    FuncData_545693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 648)
    FuncData_call_result_545702 = invoke(stypy.reporting.localization.Localization(__file__, 648, 4), FuncData_545693, *[wrightomega_545695, dataset_545696, int_545697, int_545698], **kwargs_545701)
    
    # Obtaining the member 'check' of a type (line 648)
    check_545703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 648, 4), FuncData_call_result_545702, 'check')
    # Calling check(args, kwargs) (line 648)
    check_call_result_545705 = invoke(stypy.reporting.localization.Localization(__file__, 648, 4), check_545703, *[], **kwargs_545704)
    
    
    # ################# End of 'test_wrightomega_region1(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_wrightomega_region1' in the type store
    # Getting the type of 'stypy_return_type' (line 634)
    stypy_return_type_545706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_545706)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_wrightomega_region1'
    return stypy_return_type_545706

# Assigning a type to the variable 'test_wrightomega_region1' (line 634)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 0), 'test_wrightomega_region1', test_wrightomega_region1)

@norecursion
def test_wrightomega_region2(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_wrightomega_region2'
    module_type_store = module_type_store.open_function_context('test_wrightomega_region2', 651, 0, False)
    
    # Passed parameters checking function
    test_wrightomega_region2.stypy_localization = localization
    test_wrightomega_region2.stypy_type_of_self = None
    test_wrightomega_region2.stypy_type_store = module_type_store
    test_wrightomega_region2.stypy_function_name = 'test_wrightomega_region2'
    test_wrightomega_region2.stypy_param_names_list = []
    test_wrightomega_region2.stypy_varargs_param_name = None
    test_wrightomega_region2.stypy_kwargs_param_name = None
    test_wrightomega_region2.stypy_call_defaults = defaults
    test_wrightomega_region2.stypy_call_varargs = varargs
    test_wrightomega_region2.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_wrightomega_region2', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_wrightomega_region2', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_wrightomega_region2(...)' code ##################

    
    # Assigning a Call to a Name (line 655):
    
    # Assigning a Call to a Name (line 655):
    
    # Call to linspace(...): (line 655)
    # Processing the call arguments (line 655)
    int_545709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 20), 'int')
    int_545710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 24), 'int')
    # Processing the call keyword arguments (line 655)
    kwargs_545711 = {}
    # Getting the type of 'np' (line 655)
    np_545707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 8), 'np', False)
    # Obtaining the member 'linspace' of a type (line 655)
    linspace_545708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 655, 8), np_545707, 'linspace')
    # Calling linspace(args, kwargs) (line 655)
    linspace_call_result_545712 = invoke(stypy.reporting.localization.Localization(__file__, 655, 8), linspace_545708, *[int_545709, int_545710], **kwargs_545711)
    
    # Assigning a type to the variable 'x' (line 655)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 655, 4), 'x', linspace_call_result_545712)
    
    # Assigning a Call to a Name (line 656):
    
    # Assigning a Call to a Name (line 656):
    
    # Call to linspace(...): (line 656)
    # Processing the call arguments (line 656)
    int_545715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 20), 'int')
    # Getting the type of 'np' (line 656)
    np_545716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 23), 'np', False)
    # Obtaining the member 'pi' of a type (line 656)
    pi_545717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 656, 23), np_545716, 'pi')
    # Applying the binary operator '*' (line 656)
    result_mul_545718 = python_operator(stypy.reporting.localization.Localization(__file__, 656, 20), '*', int_545715, pi_545717)
    
    int_545719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 30), 'int')
    # Processing the call keyword arguments (line 656)
    kwargs_545720 = {}
    # Getting the type of 'np' (line 656)
    np_545713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 8), 'np', False)
    # Obtaining the member 'linspace' of a type (line 656)
    linspace_545714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 656, 8), np_545713, 'linspace')
    # Calling linspace(args, kwargs) (line 656)
    linspace_call_result_545721 = invoke(stypy.reporting.localization.Localization(__file__, 656, 8), linspace_545714, *[result_mul_545718, int_545719], **kwargs_545720)
    
    # Assigning a type to the variable 'y' (line 656)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 656, 4), 'y', linspace_call_result_545721)
    
    # Assigning a Call to a Tuple (line 657):
    
    # Assigning a Subscript to a Name (line 657):
    
    # Obtaining the type of the subscript
    int_545722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 4), 'int')
    
    # Call to meshgrid(...): (line 657)
    # Processing the call arguments (line 657)
    # Getting the type of 'x' (line 657)
    x_545725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 23), 'x', False)
    # Getting the type of 'y' (line 657)
    y_545726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 26), 'y', False)
    # Processing the call keyword arguments (line 657)
    kwargs_545727 = {}
    # Getting the type of 'np' (line 657)
    np_545723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 657)
    meshgrid_545724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 11), np_545723, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 657)
    meshgrid_call_result_545728 = invoke(stypy.reporting.localization.Localization(__file__, 657, 11), meshgrid_545724, *[x_545725, y_545726], **kwargs_545727)
    
    # Obtaining the member '__getitem__' of a type (line 657)
    getitem___545729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 4), meshgrid_call_result_545728, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 657)
    subscript_call_result_545730 = invoke(stypy.reporting.localization.Localization(__file__, 657, 4), getitem___545729, int_545722)
    
    # Assigning a type to the variable 'tuple_var_assignment_542794' (line 657)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 657, 4), 'tuple_var_assignment_542794', subscript_call_result_545730)
    
    # Assigning a Subscript to a Name (line 657):
    
    # Obtaining the type of the subscript
    int_545731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 4), 'int')
    
    # Call to meshgrid(...): (line 657)
    # Processing the call arguments (line 657)
    # Getting the type of 'x' (line 657)
    x_545734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 23), 'x', False)
    # Getting the type of 'y' (line 657)
    y_545735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 26), 'y', False)
    # Processing the call keyword arguments (line 657)
    kwargs_545736 = {}
    # Getting the type of 'np' (line 657)
    np_545732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 11), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 657)
    meshgrid_545733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 11), np_545732, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 657)
    meshgrid_call_result_545737 = invoke(stypy.reporting.localization.Localization(__file__, 657, 11), meshgrid_545733, *[x_545734, y_545735], **kwargs_545736)
    
    # Obtaining the member '__getitem__' of a type (line 657)
    getitem___545738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 4), meshgrid_call_result_545737, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 657)
    subscript_call_result_545739 = invoke(stypy.reporting.localization.Localization(__file__, 657, 4), getitem___545738, int_545731)
    
    # Assigning a type to the variable 'tuple_var_assignment_542795' (line 657)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 657, 4), 'tuple_var_assignment_542795', subscript_call_result_545739)
    
    # Assigning a Name to a Name (line 657):
    # Getting the type of 'tuple_var_assignment_542794' (line 657)
    tuple_var_assignment_542794_545740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 4), 'tuple_var_assignment_542794')
    # Assigning a type to the variable 'x' (line 657)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 657, 4), 'x', tuple_var_assignment_542794_545740)
    
    # Assigning a Name to a Name (line 657):
    # Getting the type of 'tuple_var_assignment_542795' (line 657)
    tuple_var_assignment_542795_545741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 4), 'tuple_var_assignment_542795')
    # Assigning a type to the variable 'y' (line 657)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 657, 7), 'y', tuple_var_assignment_542795_545741)
    
    # Assigning a Call to a Name (line 658):
    
    # Assigning a Call to a Name (line 658):
    
    # Call to flatten(...): (line 658)
    # Processing the call keyword arguments (line 658)
    kwargs_545748 = {}
    # Getting the type of 'x' (line 658)
    x_545742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 9), 'x', False)
    complex_545743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 13), 'complex')
    # Getting the type of 'y' (line 658)
    y_545744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 16), 'y', False)
    # Applying the binary operator '*' (line 658)
    result_mul_545745 = python_operator(stypy.reporting.localization.Localization(__file__, 658, 13), '*', complex_545743, y_545744)
    
    # Applying the binary operator '+' (line 658)
    result_add_545746 = python_operator(stypy.reporting.localization.Localization(__file__, 658, 9), '+', x_545742, result_mul_545745)
    
    # Obtaining the member 'flatten' of a type (line 658)
    flatten_545747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 9), result_add_545746, 'flatten')
    # Calling flatten(args, kwargs) (line 658)
    flatten_call_result_545749 = invoke(stypy.reporting.localization.Localization(__file__, 658, 9), flatten_545747, *[], **kwargs_545748)
    
    # Assigning a type to the variable 'z' (line 658)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 658, 4), 'z', flatten_call_result_545749)
    
    # Assigning a List to a Name (line 660):
    
    # Assigning a List to a Name (line 660):
    
    # Obtaining an instance of the builtin type 'list' (line 660)
    list_545750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 660)
    
    # Assigning a type to the variable 'dataset' (line 660)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 4), 'dataset', list_545750)
    
    # Getting the type of 'z' (line 661)
    z_545751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 14), 'z')
    # Testing the type of a for loop iterable (line 661)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 661, 4), z_545751)
    # Getting the type of the for loop variable (line 661)
    for_loop_var_545752 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 661, 4), z_545751)
    # Assigning a type to the variable 'z0' (line 661)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 661, 4), 'z0', for_loop_var_545752)
    # SSA begins for a for statement (line 661)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 662)
    # Processing the call arguments (line 662)
    
    # Obtaining an instance of the builtin type 'tuple' (line 662)
    tuple_545755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 24), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 662)
    # Adding element type (line 662)
    # Getting the type of 'z0' (line 662)
    z0_545756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 24), 'z0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 662, 24), tuple_545755, z0_545756)
    # Adding element type (line 662)
    
    # Call to complex(...): (line 662)
    # Processing the call arguments (line 662)
    
    # Call to _mpmath_wrightomega(...): (line 662)
    # Processing the call arguments (line 662)
    # Getting the type of 'z0' (line 662)
    z0_545759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 56), 'z0', False)
    int_545760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 60), 'int')
    # Processing the call keyword arguments (line 662)
    kwargs_545761 = {}
    # Getting the type of '_mpmath_wrightomega' (line 662)
    _mpmath_wrightomega_545758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 36), '_mpmath_wrightomega', False)
    # Calling _mpmath_wrightomega(args, kwargs) (line 662)
    _mpmath_wrightomega_call_result_545762 = invoke(stypy.reporting.localization.Localization(__file__, 662, 36), _mpmath_wrightomega_545758, *[z0_545759, int_545760], **kwargs_545761)
    
    # Processing the call keyword arguments (line 662)
    kwargs_545763 = {}
    # Getting the type of 'complex' (line 662)
    complex_545757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 28), 'complex', False)
    # Calling complex(args, kwargs) (line 662)
    complex_call_result_545764 = invoke(stypy.reporting.localization.Localization(__file__, 662, 28), complex_545757, *[_mpmath_wrightomega_call_result_545762], **kwargs_545763)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 662, 24), tuple_545755, complex_call_result_545764)
    
    # Processing the call keyword arguments (line 662)
    kwargs_545765 = {}
    # Getting the type of 'dataset' (line 662)
    dataset_545753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 8), 'dataset', False)
    # Obtaining the member 'append' of a type (line 662)
    append_545754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 662, 8), dataset_545753, 'append')
    # Calling append(args, kwargs) (line 662)
    append_call_result_545766 = invoke(stypy.reporting.localization.Localization(__file__, 662, 8), append_545754, *[tuple_545755], **kwargs_545765)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 663):
    
    # Assigning a Call to a Name (line 663):
    
    # Call to asarray(...): (line 663)
    # Processing the call arguments (line 663)
    # Getting the type of 'dataset' (line 663)
    dataset_545769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 25), 'dataset', False)
    # Processing the call keyword arguments (line 663)
    kwargs_545770 = {}
    # Getting the type of 'np' (line 663)
    np_545767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 14), 'np', False)
    # Obtaining the member 'asarray' of a type (line 663)
    asarray_545768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 663, 14), np_545767, 'asarray')
    # Calling asarray(args, kwargs) (line 663)
    asarray_call_result_545771 = invoke(stypy.reporting.localization.Localization(__file__, 663, 14), asarray_545768, *[dataset_545769], **kwargs_545770)
    
    # Assigning a type to the variable 'dataset' (line 663)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 663, 4), 'dataset', asarray_call_result_545771)
    
    # Call to check(...): (line 665)
    # Processing the call keyword arguments (line 665)
    kwargs_545783 = {}
    
    # Call to FuncData(...): (line 665)
    # Processing the call arguments (line 665)
    # Getting the type of 'sc' (line 665)
    sc_545773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 13), 'sc', False)
    # Obtaining the member 'wrightomega' of a type (line 665)
    wrightomega_545774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 13), sc_545773, 'wrightomega')
    # Getting the type of 'dataset' (line 665)
    dataset_545775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 29), 'dataset', False)
    int_545776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 38), 'int')
    int_545777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 41), 'int')
    # Processing the call keyword arguments (line 665)
    float_545778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 49), 'float')
    keyword_545779 = float_545778
    kwargs_545780 = {'rtol': keyword_545779}
    # Getting the type of 'FuncData' (line 665)
    FuncData_545772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 4), 'FuncData', False)
    # Calling FuncData(args, kwargs) (line 665)
    FuncData_call_result_545781 = invoke(stypy.reporting.localization.Localization(__file__, 665, 4), FuncData_545772, *[wrightomega_545774, dataset_545775, int_545776, int_545777], **kwargs_545780)
    
    # Obtaining the member 'check' of a type (line 665)
    check_545782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 4), FuncData_call_result_545781, 'check')
    # Calling check(args, kwargs) (line 665)
    check_call_result_545784 = invoke(stypy.reporting.localization.Localization(__file__, 665, 4), check_545782, *[], **kwargs_545783)
    
    
    # ################# End of 'test_wrightomega_region2(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_wrightomega_region2' in the type store
    # Getting the type of 'stypy_return_type' (line 651)
    stypy_return_type_545785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_545785)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_wrightomega_region2'
    return stypy_return_type_545785

# Assigning a type to the variable 'test_wrightomega_region2' (line 651)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 651, 0), 'test_wrightomega_region2', test_wrightomega_region2)

# Assigning a Call to a Name (line 672):

# Assigning a Call to a Name (line 672):

# Call to dict(...): (line 672)
# Processing the call keyword arguments (line 672)
int_545787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 23), 'int')
keyword_545788 = int_545787
int_545789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 37), 'int')
keyword_545790 = int_545789
kwargs_545791 = {'maxprec': keyword_545788, 'maxterms': keyword_545790}
# Getting the type of 'dict' (line 672)
dict_545786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 10), 'dict', False)
# Calling dict(args, kwargs) (line 672)
dict_call_result_545792 = invoke(stypy.reporting.localization.Localization(__file__, 672, 10), dict_545786, *[], **kwargs_545791)

# Assigning a type to the variable 'HYPERKW' (line 672)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 672, 0), 'HYPERKW', dict_call_result_545792)
# Declaration of the 'TestSystematic' class

class TestSystematic(object, ):

    @norecursion
    def test_airyai(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_airyai'
        module_type_store = module_type_store.open_function_context('test_airyai', 679, 4, False)
        # Assigning a type to the variable 'self' (line 680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_airyai')
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_airyai.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_airyai', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_airyai', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_airyai(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 681)
        # Processing the call arguments (line 681)

        @norecursion
        def _stypy_temp_lambda_339(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_339'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_339', 681, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_339.stypy_localization = localization
            _stypy_temp_lambda_339.stypy_type_of_self = None
            _stypy_temp_lambda_339.stypy_type_store = module_type_store
            _stypy_temp_lambda_339.stypy_function_name = '_stypy_temp_lambda_339'
            _stypy_temp_lambda_339.stypy_param_names_list = ['z']
            _stypy_temp_lambda_339.stypy_varargs_param_name = None
            _stypy_temp_lambda_339.stypy_kwargs_param_name = None
            _stypy_temp_lambda_339.stypy_call_defaults = defaults
            _stypy_temp_lambda_339.stypy_call_varargs = varargs
            _stypy_temp_lambda_339.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_339', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_339', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_545794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 49), 'int')
            
            # Call to airy(...): (line 681)
            # Processing the call arguments (line 681)
            # Getting the type of 'z' (line 681)
            z_545797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 46), 'z', False)
            # Processing the call keyword arguments (line 681)
            kwargs_545798 = {}
            # Getting the type of 'sc' (line 681)
            sc_545795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 681)
            airy_545796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 681, 38), sc_545795, 'airy')
            # Calling airy(args, kwargs) (line 681)
            airy_call_result_545799 = invoke(stypy.reporting.localization.Localization(__file__, 681, 38), airy_545796, *[z_545797], **kwargs_545798)
            
            # Obtaining the member '__getitem__' of a type (line 681)
            getitem___545800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 681, 38), airy_call_result_545799, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 681)
            subscript_call_result_545801 = invoke(stypy.reporting.localization.Localization(__file__, 681, 38), getitem___545800, int_545794)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 681)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 681, 28), 'stypy_return_type', subscript_call_result_545801)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_339' in the type store
            # Getting the type of 'stypy_return_type' (line 681)
            stypy_return_type_545802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545802)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_339'
            return stypy_return_type_545802

        # Assigning a type to the variable '_stypy_temp_lambda_339' (line 681)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 681, 28), '_stypy_temp_lambda_339', _stypy_temp_lambda_339)
        # Getting the type of '_stypy_temp_lambda_339' (line 681)
        _stypy_temp_lambda_339_545803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 28), '_stypy_temp_lambda_339')
        # Getting the type of 'mpmath' (line 682)
        mpmath_545804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 28), 'mpmath', False)
        # Obtaining the member 'airyai' of a type (line 682)
        airyai_545805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 28), mpmath_545804, 'airyai')
        
        # Obtaining an instance of the builtin type 'list' (line 683)
        list_545806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 683)
        # Adding element type (line 683)
        
        # Call to Arg(...): (line 683)
        # Processing the call arguments (line 683)
        float_545808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 33), 'float')
        float_545809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 39), 'float')
        # Processing the call keyword arguments (line 683)
        kwargs_545810 = {}
        # Getting the type of 'Arg' (line 683)
        Arg_545807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 683)
        Arg_call_result_545811 = invoke(stypy.reporting.localization.Localization(__file__, 683, 29), Arg_545807, *[float_545808, float_545809], **kwargs_545810)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 683, 28), list_545806, Arg_call_result_545811)
        
        # Processing the call keyword arguments (line 681)
        float_545812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 684, 33), 'float')
        keyword_545813 = float_545812
        kwargs_545814 = {'rtol': keyword_545813}
        # Getting the type of 'assert_mpmath_equal' (line 681)
        assert_mpmath_equal_545793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 681)
        assert_mpmath_equal_call_result_545815 = invoke(stypy.reporting.localization.Localization(__file__, 681, 8), assert_mpmath_equal_545793, *[_stypy_temp_lambda_339_545803, airyai_545805, list_545806], **kwargs_545814)
        
        
        # Call to assert_mpmath_equal(...): (line 685)
        # Processing the call arguments (line 685)

        @norecursion
        def _stypy_temp_lambda_340(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_340'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_340', 685, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_340.stypy_localization = localization
            _stypy_temp_lambda_340.stypy_type_of_self = None
            _stypy_temp_lambda_340.stypy_type_store = module_type_store
            _stypy_temp_lambda_340.stypy_function_name = '_stypy_temp_lambda_340'
            _stypy_temp_lambda_340.stypy_param_names_list = ['z']
            _stypy_temp_lambda_340.stypy_varargs_param_name = None
            _stypy_temp_lambda_340.stypy_kwargs_param_name = None
            _stypy_temp_lambda_340.stypy_call_defaults = defaults
            _stypy_temp_lambda_340.stypy_call_varargs = varargs
            _stypy_temp_lambda_340.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_340', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_340', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_545817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 49), 'int')
            
            # Call to airy(...): (line 685)
            # Processing the call arguments (line 685)
            # Getting the type of 'z' (line 685)
            z_545820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 46), 'z', False)
            # Processing the call keyword arguments (line 685)
            kwargs_545821 = {}
            # Getting the type of 'sc' (line 685)
            sc_545818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 685)
            airy_545819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 38), sc_545818, 'airy')
            # Calling airy(args, kwargs) (line 685)
            airy_call_result_545822 = invoke(stypy.reporting.localization.Localization(__file__, 685, 38), airy_545819, *[z_545820], **kwargs_545821)
            
            # Obtaining the member '__getitem__' of a type (line 685)
            getitem___545823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 38), airy_call_result_545822, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 685)
            subscript_call_result_545824 = invoke(stypy.reporting.localization.Localization(__file__, 685, 38), getitem___545823, int_545817)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 28), 'stypy_return_type', subscript_call_result_545824)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_340' in the type store
            # Getting the type of 'stypy_return_type' (line 685)
            stypy_return_type_545825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545825)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_340'
            return stypy_return_type_545825

        # Assigning a type to the variable '_stypy_temp_lambda_340' (line 685)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 28), '_stypy_temp_lambda_340', _stypy_temp_lambda_340)
        # Getting the type of '_stypy_temp_lambda_340' (line 685)
        _stypy_temp_lambda_340_545826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 28), '_stypy_temp_lambda_340')
        # Getting the type of 'mpmath' (line 686)
        mpmath_545827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 28), 'mpmath', False)
        # Obtaining the member 'airyai' of a type (line 686)
        airyai_545828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 28), mpmath_545827, 'airyai')
        
        # Obtaining an instance of the builtin type 'list' (line 687)
        list_545829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 687)
        # Adding element type (line 687)
        
        # Call to Arg(...): (line 687)
        # Processing the call arguments (line 687)
        float_545831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 33), 'float')
        float_545832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 39), 'float')
        # Processing the call keyword arguments (line 687)
        kwargs_545833 = {}
        # Getting the type of 'Arg' (line 687)
        Arg_545830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 687)
        Arg_call_result_545834 = invoke(stypy.reporting.localization.Localization(__file__, 687, 29), Arg_545830, *[float_545831, float_545832], **kwargs_545833)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 687, 28), list_545829, Arg_call_result_545834)
        
        # Processing the call keyword arguments (line 685)
        kwargs_545835 = {}
        # Getting the type of 'assert_mpmath_equal' (line 685)
        assert_mpmath_equal_545816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 685)
        assert_mpmath_equal_call_result_545836 = invoke(stypy.reporting.localization.Localization(__file__, 685, 8), assert_mpmath_equal_545816, *[_stypy_temp_lambda_340_545826, airyai_545828, list_545829], **kwargs_545835)
        
        
        # ################# End of 'test_airyai(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_airyai' in the type store
        # Getting the type of 'stypy_return_type' (line 679)
        stypy_return_type_545837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_545837)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_airyai'
        return stypy_return_type_545837


    @norecursion
    def test_airyai_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_airyai_complex'
        module_type_store = module_type_store.open_function_context('test_airyai_complex', 689, 4, False)
        # Assigning a type to the variable 'self' (line 690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_airyai_complex')
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_airyai_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_airyai_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_airyai_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_airyai_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 690)
        # Processing the call arguments (line 690)

        @norecursion
        def _stypy_temp_lambda_341(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_341'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_341', 690, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_341.stypy_localization = localization
            _stypy_temp_lambda_341.stypy_type_of_self = None
            _stypy_temp_lambda_341.stypy_type_store = module_type_store
            _stypy_temp_lambda_341.stypy_function_name = '_stypy_temp_lambda_341'
            _stypy_temp_lambda_341.stypy_param_names_list = ['z']
            _stypy_temp_lambda_341.stypy_varargs_param_name = None
            _stypy_temp_lambda_341.stypy_kwargs_param_name = None
            _stypy_temp_lambda_341.stypy_call_defaults = defaults
            _stypy_temp_lambda_341.stypy_call_varargs = varargs
            _stypy_temp_lambda_341.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_341', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_341', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_545839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 49), 'int')
            
            # Call to airy(...): (line 690)
            # Processing the call arguments (line 690)
            # Getting the type of 'z' (line 690)
            z_545842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 46), 'z', False)
            # Processing the call keyword arguments (line 690)
            kwargs_545843 = {}
            # Getting the type of 'sc' (line 690)
            sc_545840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 690)
            airy_545841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 38), sc_545840, 'airy')
            # Calling airy(args, kwargs) (line 690)
            airy_call_result_545844 = invoke(stypy.reporting.localization.Localization(__file__, 690, 38), airy_545841, *[z_545842], **kwargs_545843)
            
            # Obtaining the member '__getitem__' of a type (line 690)
            getitem___545845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 38), airy_call_result_545844, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 690)
            subscript_call_result_545846 = invoke(stypy.reporting.localization.Localization(__file__, 690, 38), getitem___545845, int_545839)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 690)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 28), 'stypy_return_type', subscript_call_result_545846)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_341' in the type store
            # Getting the type of 'stypy_return_type' (line 690)
            stypy_return_type_545847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545847)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_341'
            return stypy_return_type_545847

        # Assigning a type to the variable '_stypy_temp_lambda_341' (line 690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 28), '_stypy_temp_lambda_341', _stypy_temp_lambda_341)
        # Getting the type of '_stypy_temp_lambda_341' (line 690)
        _stypy_temp_lambda_341_545848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 28), '_stypy_temp_lambda_341')
        # Getting the type of 'mpmath' (line 691)
        mpmath_545849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 28), 'mpmath', False)
        # Obtaining the member 'airyai' of a type (line 691)
        airyai_545850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 28), mpmath_545849, 'airyai')
        
        # Obtaining an instance of the builtin type 'list' (line 692)
        list_545851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 692)
        # Adding element type (line 692)
        
        # Call to ComplexArg(...): (line 692)
        # Processing the call keyword arguments (line 692)
        kwargs_545853 = {}
        # Getting the type of 'ComplexArg' (line 692)
        ComplexArg_545852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 692)
        ComplexArg_call_result_545854 = invoke(stypy.reporting.localization.Localization(__file__, 692, 29), ComplexArg_545852, *[], **kwargs_545853)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 692, 28), list_545851, ComplexArg_call_result_545854)
        
        # Processing the call keyword arguments (line 690)
        kwargs_545855 = {}
        # Getting the type of 'assert_mpmath_equal' (line 690)
        assert_mpmath_equal_545838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 690)
        assert_mpmath_equal_call_result_545856 = invoke(stypy.reporting.localization.Localization(__file__, 690, 8), assert_mpmath_equal_545838, *[_stypy_temp_lambda_341_545848, airyai_545850, list_545851], **kwargs_545855)
        
        
        # ################# End of 'test_airyai_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_airyai_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 689)
        stypy_return_type_545857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_545857)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_airyai_complex'
        return stypy_return_type_545857


    @norecursion
    def test_airyai_prime(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_airyai_prime'
        module_type_store = module_type_store.open_function_context('test_airyai_prime', 694, 4, False)
        # Assigning a type to the variable 'self' (line 695)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 695, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_airyai_prime')
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_airyai_prime.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_airyai_prime', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_airyai_prime', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_airyai_prime(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 696)
        # Processing the call arguments (line 696)

        @norecursion
        def _stypy_temp_lambda_342(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_342'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_342', 696, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_342.stypy_localization = localization
            _stypy_temp_lambda_342.stypy_type_of_self = None
            _stypy_temp_lambda_342.stypy_type_store = module_type_store
            _stypy_temp_lambda_342.stypy_function_name = '_stypy_temp_lambda_342'
            _stypy_temp_lambda_342.stypy_param_names_list = ['z']
            _stypy_temp_lambda_342.stypy_varargs_param_name = None
            _stypy_temp_lambda_342.stypy_kwargs_param_name = None
            _stypy_temp_lambda_342.stypy_call_defaults = defaults
            _stypy_temp_lambda_342.stypy_call_varargs = varargs
            _stypy_temp_lambda_342.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_342', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_342', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_545859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 49), 'int')
            
            # Call to airy(...): (line 696)
            # Processing the call arguments (line 696)
            # Getting the type of 'z' (line 696)
            z_545862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 46), 'z', False)
            # Processing the call keyword arguments (line 696)
            kwargs_545863 = {}
            # Getting the type of 'sc' (line 696)
            sc_545860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 696)
            airy_545861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 38), sc_545860, 'airy')
            # Calling airy(args, kwargs) (line 696)
            airy_call_result_545864 = invoke(stypy.reporting.localization.Localization(__file__, 696, 38), airy_545861, *[z_545862], **kwargs_545863)
            
            # Obtaining the member '__getitem__' of a type (line 696)
            getitem___545865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 38), airy_call_result_545864, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 696)
            subscript_call_result_545866 = invoke(stypy.reporting.localization.Localization(__file__, 696, 38), getitem___545865, int_545859)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 696)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 28), 'stypy_return_type', subscript_call_result_545866)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_342' in the type store
            # Getting the type of 'stypy_return_type' (line 696)
            stypy_return_type_545867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545867)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_342'
            return stypy_return_type_545867

        # Assigning a type to the variable '_stypy_temp_lambda_342' (line 696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 28), '_stypy_temp_lambda_342', _stypy_temp_lambda_342)
        # Getting the type of '_stypy_temp_lambda_342' (line 696)
        _stypy_temp_lambda_342_545868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 28), '_stypy_temp_lambda_342')

        @norecursion
        def _stypy_temp_lambda_343(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_343'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_343', 696, 53, True)
            # Passed parameters checking function
            _stypy_temp_lambda_343.stypy_localization = localization
            _stypy_temp_lambda_343.stypy_type_of_self = None
            _stypy_temp_lambda_343.stypy_type_store = module_type_store
            _stypy_temp_lambda_343.stypy_function_name = '_stypy_temp_lambda_343'
            _stypy_temp_lambda_343.stypy_param_names_list = ['z']
            _stypy_temp_lambda_343.stypy_varargs_param_name = None
            _stypy_temp_lambda_343.stypy_kwargs_param_name = None
            _stypy_temp_lambda_343.stypy_call_defaults = defaults
            _stypy_temp_lambda_343.stypy_call_varargs = varargs
            _stypy_temp_lambda_343.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_343', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_343', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to airyai(...): (line 697)
            # Processing the call arguments (line 697)
            # Getting the type of 'z' (line 697)
            z_545871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 42), 'z', False)
            # Processing the call keyword arguments (line 697)
            int_545872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 56), 'int')
            keyword_545873 = int_545872
            kwargs_545874 = {'derivative': keyword_545873}
            # Getting the type of 'mpmath' (line 697)
            mpmath_545869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 28), 'mpmath', False)
            # Obtaining the member 'airyai' of a type (line 697)
            airyai_545870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 28), mpmath_545869, 'airyai')
            # Calling airyai(args, kwargs) (line 697)
            airyai_call_result_545875 = invoke(stypy.reporting.localization.Localization(__file__, 697, 28), airyai_545870, *[z_545871], **kwargs_545874)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 696)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 53), 'stypy_return_type', airyai_call_result_545875)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_343' in the type store
            # Getting the type of 'stypy_return_type' (line 696)
            stypy_return_type_545876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 53), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545876)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_343'
            return stypy_return_type_545876

        # Assigning a type to the variable '_stypy_temp_lambda_343' (line 696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 53), '_stypy_temp_lambda_343', _stypy_temp_lambda_343)
        # Getting the type of '_stypy_temp_lambda_343' (line 696)
        _stypy_temp_lambda_343_545877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 53), '_stypy_temp_lambda_343')
        
        # Obtaining an instance of the builtin type 'list' (line 698)
        list_545878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 698, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 698)
        # Adding element type (line 698)
        
        # Call to Arg(...): (line 698)
        # Processing the call arguments (line 698)
        float_545880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 698, 33), 'float')
        float_545881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 698, 39), 'float')
        # Processing the call keyword arguments (line 698)
        kwargs_545882 = {}
        # Getting the type of 'Arg' (line 698)
        Arg_545879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 698)
        Arg_call_result_545883 = invoke(stypy.reporting.localization.Localization(__file__, 698, 29), Arg_545879, *[float_545880, float_545881], **kwargs_545882)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 698, 28), list_545878, Arg_call_result_545883)
        
        # Processing the call keyword arguments (line 696)
        float_545884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 699, 33), 'float')
        keyword_545885 = float_545884
        kwargs_545886 = {'rtol': keyword_545885}
        # Getting the type of 'assert_mpmath_equal' (line 696)
        assert_mpmath_equal_545858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 696)
        assert_mpmath_equal_call_result_545887 = invoke(stypy.reporting.localization.Localization(__file__, 696, 8), assert_mpmath_equal_545858, *[_stypy_temp_lambda_342_545868, _stypy_temp_lambda_343_545877, list_545878], **kwargs_545886)
        
        
        # Call to assert_mpmath_equal(...): (line 700)
        # Processing the call arguments (line 700)

        @norecursion
        def _stypy_temp_lambda_344(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_344'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_344', 700, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_344.stypy_localization = localization
            _stypy_temp_lambda_344.stypy_type_of_self = None
            _stypy_temp_lambda_344.stypy_type_store = module_type_store
            _stypy_temp_lambda_344.stypy_function_name = '_stypy_temp_lambda_344'
            _stypy_temp_lambda_344.stypy_param_names_list = ['z']
            _stypy_temp_lambda_344.stypy_varargs_param_name = None
            _stypy_temp_lambda_344.stypy_kwargs_param_name = None
            _stypy_temp_lambda_344.stypy_call_defaults = defaults
            _stypy_temp_lambda_344.stypy_call_varargs = varargs
            _stypy_temp_lambda_344.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_344', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_344', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_545889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 49), 'int')
            
            # Call to airy(...): (line 700)
            # Processing the call arguments (line 700)
            # Getting the type of 'z' (line 700)
            z_545892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 46), 'z', False)
            # Processing the call keyword arguments (line 700)
            kwargs_545893 = {}
            # Getting the type of 'sc' (line 700)
            sc_545890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 700)
            airy_545891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 38), sc_545890, 'airy')
            # Calling airy(args, kwargs) (line 700)
            airy_call_result_545894 = invoke(stypy.reporting.localization.Localization(__file__, 700, 38), airy_545891, *[z_545892], **kwargs_545893)
            
            # Obtaining the member '__getitem__' of a type (line 700)
            getitem___545895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 38), airy_call_result_545894, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 700)
            subscript_call_result_545896 = invoke(stypy.reporting.localization.Localization(__file__, 700, 38), getitem___545895, int_545889)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 700)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 28), 'stypy_return_type', subscript_call_result_545896)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_344' in the type store
            # Getting the type of 'stypy_return_type' (line 700)
            stypy_return_type_545897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545897)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_344'
            return stypy_return_type_545897

        # Assigning a type to the variable '_stypy_temp_lambda_344' (line 700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 28), '_stypy_temp_lambda_344', _stypy_temp_lambda_344)
        # Getting the type of '_stypy_temp_lambda_344' (line 700)
        _stypy_temp_lambda_344_545898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 28), '_stypy_temp_lambda_344')

        @norecursion
        def _stypy_temp_lambda_345(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_345'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_345', 700, 53, True)
            # Passed parameters checking function
            _stypy_temp_lambda_345.stypy_localization = localization
            _stypy_temp_lambda_345.stypy_type_of_self = None
            _stypy_temp_lambda_345.stypy_type_store = module_type_store
            _stypy_temp_lambda_345.stypy_function_name = '_stypy_temp_lambda_345'
            _stypy_temp_lambda_345.stypy_param_names_list = ['z']
            _stypy_temp_lambda_345.stypy_varargs_param_name = None
            _stypy_temp_lambda_345.stypy_kwargs_param_name = None
            _stypy_temp_lambda_345.stypy_call_defaults = defaults
            _stypy_temp_lambda_345.stypy_call_varargs = varargs
            _stypy_temp_lambda_345.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_345', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_345', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to airyai(...): (line 701)
            # Processing the call arguments (line 701)
            # Getting the type of 'z' (line 701)
            z_545901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 42), 'z', False)
            # Processing the call keyword arguments (line 701)
            int_545902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 56), 'int')
            keyword_545903 = int_545902
            kwargs_545904 = {'derivative': keyword_545903}
            # Getting the type of 'mpmath' (line 701)
            mpmath_545899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 28), 'mpmath', False)
            # Obtaining the member 'airyai' of a type (line 701)
            airyai_545900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 28), mpmath_545899, 'airyai')
            # Calling airyai(args, kwargs) (line 701)
            airyai_call_result_545905 = invoke(stypy.reporting.localization.Localization(__file__, 701, 28), airyai_545900, *[z_545901], **kwargs_545904)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 700)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 53), 'stypy_return_type', airyai_call_result_545905)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_345' in the type store
            # Getting the type of 'stypy_return_type' (line 700)
            stypy_return_type_545906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 53), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545906)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_345'
            return stypy_return_type_545906

        # Assigning a type to the variable '_stypy_temp_lambda_345' (line 700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 53), '_stypy_temp_lambda_345', _stypy_temp_lambda_345)
        # Getting the type of '_stypy_temp_lambda_345' (line 700)
        _stypy_temp_lambda_345_545907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 53), '_stypy_temp_lambda_345')
        
        # Obtaining an instance of the builtin type 'list' (line 702)
        list_545908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 702)
        # Adding element type (line 702)
        
        # Call to Arg(...): (line 702)
        # Processing the call arguments (line 702)
        float_545910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 33), 'float')
        float_545911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 39), 'float')
        # Processing the call keyword arguments (line 702)
        kwargs_545912 = {}
        # Getting the type of 'Arg' (line 702)
        Arg_545909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 702)
        Arg_call_result_545913 = invoke(stypy.reporting.localization.Localization(__file__, 702, 29), Arg_545909, *[float_545910, float_545911], **kwargs_545912)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 702, 28), list_545908, Arg_call_result_545913)
        
        # Processing the call keyword arguments (line 700)
        kwargs_545914 = {}
        # Getting the type of 'assert_mpmath_equal' (line 700)
        assert_mpmath_equal_545888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 700)
        assert_mpmath_equal_call_result_545915 = invoke(stypy.reporting.localization.Localization(__file__, 700, 8), assert_mpmath_equal_545888, *[_stypy_temp_lambda_344_545898, _stypy_temp_lambda_345_545907, list_545908], **kwargs_545914)
        
        
        # ################# End of 'test_airyai_prime(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_airyai_prime' in the type store
        # Getting the type of 'stypy_return_type' (line 694)
        stypy_return_type_545916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_545916)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_airyai_prime'
        return stypy_return_type_545916


    @norecursion
    def test_airyai_prime_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_airyai_prime_complex'
        module_type_store = module_type_store.open_function_context('test_airyai_prime_complex', 704, 4, False)
        # Assigning a type to the variable 'self' (line 705)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_airyai_prime_complex')
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_airyai_prime_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_airyai_prime_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_airyai_prime_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_airyai_prime_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 705)
        # Processing the call arguments (line 705)

        @norecursion
        def _stypy_temp_lambda_346(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_346'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_346', 705, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_346.stypy_localization = localization
            _stypy_temp_lambda_346.stypy_type_of_self = None
            _stypy_temp_lambda_346.stypy_type_store = module_type_store
            _stypy_temp_lambda_346.stypy_function_name = '_stypy_temp_lambda_346'
            _stypy_temp_lambda_346.stypy_param_names_list = ['z']
            _stypy_temp_lambda_346.stypy_varargs_param_name = None
            _stypy_temp_lambda_346.stypy_kwargs_param_name = None
            _stypy_temp_lambda_346.stypy_call_defaults = defaults
            _stypy_temp_lambda_346.stypy_call_varargs = varargs
            _stypy_temp_lambda_346.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_346', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_346', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_545918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 49), 'int')
            
            # Call to airy(...): (line 705)
            # Processing the call arguments (line 705)
            # Getting the type of 'z' (line 705)
            z_545921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 46), 'z', False)
            # Processing the call keyword arguments (line 705)
            kwargs_545922 = {}
            # Getting the type of 'sc' (line 705)
            sc_545919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 705)
            airy_545920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 38), sc_545919, 'airy')
            # Calling airy(args, kwargs) (line 705)
            airy_call_result_545923 = invoke(stypy.reporting.localization.Localization(__file__, 705, 38), airy_545920, *[z_545921], **kwargs_545922)
            
            # Obtaining the member '__getitem__' of a type (line 705)
            getitem___545924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 38), airy_call_result_545923, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 705)
            subscript_call_result_545925 = invoke(stypy.reporting.localization.Localization(__file__, 705, 38), getitem___545924, int_545918)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 705)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 28), 'stypy_return_type', subscript_call_result_545925)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_346' in the type store
            # Getting the type of 'stypy_return_type' (line 705)
            stypy_return_type_545926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545926)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_346'
            return stypy_return_type_545926

        # Assigning a type to the variable '_stypy_temp_lambda_346' (line 705)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 28), '_stypy_temp_lambda_346', _stypy_temp_lambda_346)
        # Getting the type of '_stypy_temp_lambda_346' (line 705)
        _stypy_temp_lambda_346_545927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 28), '_stypy_temp_lambda_346')

        @norecursion
        def _stypy_temp_lambda_347(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_347'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_347', 705, 53, True)
            # Passed parameters checking function
            _stypy_temp_lambda_347.stypy_localization = localization
            _stypy_temp_lambda_347.stypy_type_of_self = None
            _stypy_temp_lambda_347.stypy_type_store = module_type_store
            _stypy_temp_lambda_347.stypy_function_name = '_stypy_temp_lambda_347'
            _stypy_temp_lambda_347.stypy_param_names_list = ['z']
            _stypy_temp_lambda_347.stypy_varargs_param_name = None
            _stypy_temp_lambda_347.stypy_kwargs_param_name = None
            _stypy_temp_lambda_347.stypy_call_defaults = defaults
            _stypy_temp_lambda_347.stypy_call_varargs = varargs
            _stypy_temp_lambda_347.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_347', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_347', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to airyai(...): (line 706)
            # Processing the call arguments (line 706)
            # Getting the type of 'z' (line 706)
            z_545930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 42), 'z', False)
            # Processing the call keyword arguments (line 706)
            int_545931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 56), 'int')
            keyword_545932 = int_545931
            kwargs_545933 = {'derivative': keyword_545932}
            # Getting the type of 'mpmath' (line 706)
            mpmath_545928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 28), 'mpmath', False)
            # Obtaining the member 'airyai' of a type (line 706)
            airyai_545929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 28), mpmath_545928, 'airyai')
            # Calling airyai(args, kwargs) (line 706)
            airyai_call_result_545934 = invoke(stypy.reporting.localization.Localization(__file__, 706, 28), airyai_545929, *[z_545930], **kwargs_545933)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 705)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 53), 'stypy_return_type', airyai_call_result_545934)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_347' in the type store
            # Getting the type of 'stypy_return_type' (line 705)
            stypy_return_type_545935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 53), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545935)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_347'
            return stypy_return_type_545935

        # Assigning a type to the variable '_stypy_temp_lambda_347' (line 705)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 53), '_stypy_temp_lambda_347', _stypy_temp_lambda_347)
        # Getting the type of '_stypy_temp_lambda_347' (line 705)
        _stypy_temp_lambda_347_545936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 53), '_stypy_temp_lambda_347')
        
        # Obtaining an instance of the builtin type 'list' (line 707)
        list_545937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 707)
        # Adding element type (line 707)
        
        # Call to ComplexArg(...): (line 707)
        # Processing the call keyword arguments (line 707)
        kwargs_545939 = {}
        # Getting the type of 'ComplexArg' (line 707)
        ComplexArg_545938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 707)
        ComplexArg_call_result_545940 = invoke(stypy.reporting.localization.Localization(__file__, 707, 29), ComplexArg_545938, *[], **kwargs_545939)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 707, 28), list_545937, ComplexArg_call_result_545940)
        
        # Processing the call keyword arguments (line 705)
        kwargs_545941 = {}
        # Getting the type of 'assert_mpmath_equal' (line 705)
        assert_mpmath_equal_545917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 705)
        assert_mpmath_equal_call_result_545942 = invoke(stypy.reporting.localization.Localization(__file__, 705, 8), assert_mpmath_equal_545917, *[_stypy_temp_lambda_346_545927, _stypy_temp_lambda_347_545936, list_545937], **kwargs_545941)
        
        
        # ################# End of 'test_airyai_prime_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_airyai_prime_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 704)
        stypy_return_type_545943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_545943)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_airyai_prime_complex'
        return stypy_return_type_545943


    @norecursion
    def test_airybi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_airybi'
        module_type_store = module_type_store.open_function_context('test_airybi', 709, 4, False)
        # Assigning a type to the variable 'self' (line 710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_airybi')
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_airybi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_airybi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_airybi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_airybi(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 711)
        # Processing the call arguments (line 711)

        @norecursion
        def _stypy_temp_lambda_348(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_348'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_348', 711, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_348.stypy_localization = localization
            _stypy_temp_lambda_348.stypy_type_of_self = None
            _stypy_temp_lambda_348.stypy_type_store = module_type_store
            _stypy_temp_lambda_348.stypy_function_name = '_stypy_temp_lambda_348'
            _stypy_temp_lambda_348.stypy_param_names_list = ['z']
            _stypy_temp_lambda_348.stypy_varargs_param_name = None
            _stypy_temp_lambda_348.stypy_kwargs_param_name = None
            _stypy_temp_lambda_348.stypy_call_defaults = defaults
            _stypy_temp_lambda_348.stypy_call_varargs = varargs
            _stypy_temp_lambda_348.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_348', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_348', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_545945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 49), 'int')
            
            # Call to airy(...): (line 711)
            # Processing the call arguments (line 711)
            # Getting the type of 'z' (line 711)
            z_545948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 46), 'z', False)
            # Processing the call keyword arguments (line 711)
            kwargs_545949 = {}
            # Getting the type of 'sc' (line 711)
            sc_545946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 711)
            airy_545947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 38), sc_545946, 'airy')
            # Calling airy(args, kwargs) (line 711)
            airy_call_result_545950 = invoke(stypy.reporting.localization.Localization(__file__, 711, 38), airy_545947, *[z_545948], **kwargs_545949)
            
            # Obtaining the member '__getitem__' of a type (line 711)
            getitem___545951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 38), airy_call_result_545950, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 711)
            subscript_call_result_545952 = invoke(stypy.reporting.localization.Localization(__file__, 711, 38), getitem___545951, int_545945)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 711)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 28), 'stypy_return_type', subscript_call_result_545952)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_348' in the type store
            # Getting the type of 'stypy_return_type' (line 711)
            stypy_return_type_545953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545953)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_348'
            return stypy_return_type_545953

        # Assigning a type to the variable '_stypy_temp_lambda_348' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 28), '_stypy_temp_lambda_348', _stypy_temp_lambda_348)
        # Getting the type of '_stypy_temp_lambda_348' (line 711)
        _stypy_temp_lambda_348_545954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 28), '_stypy_temp_lambda_348')

        @norecursion
        def _stypy_temp_lambda_349(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_349'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_349', 711, 53, True)
            # Passed parameters checking function
            _stypy_temp_lambda_349.stypy_localization = localization
            _stypy_temp_lambda_349.stypy_type_of_self = None
            _stypy_temp_lambda_349.stypy_type_store = module_type_store
            _stypy_temp_lambda_349.stypy_function_name = '_stypy_temp_lambda_349'
            _stypy_temp_lambda_349.stypy_param_names_list = ['z']
            _stypy_temp_lambda_349.stypy_varargs_param_name = None
            _stypy_temp_lambda_349.stypy_kwargs_param_name = None
            _stypy_temp_lambda_349.stypy_call_defaults = defaults
            _stypy_temp_lambda_349.stypy_call_varargs = varargs
            _stypy_temp_lambda_349.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_349', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_349', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to airybi(...): (line 712)
            # Processing the call arguments (line 712)
            # Getting the type of 'z' (line 712)
            z_545957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 42), 'z', False)
            # Processing the call keyword arguments (line 712)
            kwargs_545958 = {}
            # Getting the type of 'mpmath' (line 712)
            mpmath_545955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 28), 'mpmath', False)
            # Obtaining the member 'airybi' of a type (line 712)
            airybi_545956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 28), mpmath_545955, 'airybi')
            # Calling airybi(args, kwargs) (line 712)
            airybi_call_result_545959 = invoke(stypy.reporting.localization.Localization(__file__, 712, 28), airybi_545956, *[z_545957], **kwargs_545958)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 711)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 53), 'stypy_return_type', airybi_call_result_545959)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_349' in the type store
            # Getting the type of 'stypy_return_type' (line 711)
            stypy_return_type_545960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 53), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545960)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_349'
            return stypy_return_type_545960

        # Assigning a type to the variable '_stypy_temp_lambda_349' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 53), '_stypy_temp_lambda_349', _stypy_temp_lambda_349)
        # Getting the type of '_stypy_temp_lambda_349' (line 711)
        _stypy_temp_lambda_349_545961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 53), '_stypy_temp_lambda_349')
        
        # Obtaining an instance of the builtin type 'list' (line 713)
        list_545962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 713)
        # Adding element type (line 713)
        
        # Call to Arg(...): (line 713)
        # Processing the call arguments (line 713)
        float_545964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 33), 'float')
        float_545965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 39), 'float')
        # Processing the call keyword arguments (line 713)
        kwargs_545966 = {}
        # Getting the type of 'Arg' (line 713)
        Arg_545963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 713)
        Arg_call_result_545967 = invoke(stypy.reporting.localization.Localization(__file__, 713, 29), Arg_545963, *[float_545964, float_545965], **kwargs_545966)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 713, 28), list_545962, Arg_call_result_545967)
        
        # Processing the call keyword arguments (line 711)
        float_545968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 33), 'float')
        keyword_545969 = float_545968
        kwargs_545970 = {'rtol': keyword_545969}
        # Getting the type of 'assert_mpmath_equal' (line 711)
        assert_mpmath_equal_545944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 711)
        assert_mpmath_equal_call_result_545971 = invoke(stypy.reporting.localization.Localization(__file__, 711, 8), assert_mpmath_equal_545944, *[_stypy_temp_lambda_348_545954, _stypy_temp_lambda_349_545961, list_545962], **kwargs_545970)
        
        
        # Call to assert_mpmath_equal(...): (line 715)
        # Processing the call arguments (line 715)

        @norecursion
        def _stypy_temp_lambda_350(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_350'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_350', 715, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_350.stypy_localization = localization
            _stypy_temp_lambda_350.stypy_type_of_self = None
            _stypy_temp_lambda_350.stypy_type_store = module_type_store
            _stypy_temp_lambda_350.stypy_function_name = '_stypy_temp_lambda_350'
            _stypy_temp_lambda_350.stypy_param_names_list = ['z']
            _stypy_temp_lambda_350.stypy_varargs_param_name = None
            _stypy_temp_lambda_350.stypy_kwargs_param_name = None
            _stypy_temp_lambda_350.stypy_call_defaults = defaults
            _stypy_temp_lambda_350.stypy_call_varargs = varargs
            _stypy_temp_lambda_350.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_350', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_350', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_545973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 49), 'int')
            
            # Call to airy(...): (line 715)
            # Processing the call arguments (line 715)
            # Getting the type of 'z' (line 715)
            z_545976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 46), 'z', False)
            # Processing the call keyword arguments (line 715)
            kwargs_545977 = {}
            # Getting the type of 'sc' (line 715)
            sc_545974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 715)
            airy_545975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 38), sc_545974, 'airy')
            # Calling airy(args, kwargs) (line 715)
            airy_call_result_545978 = invoke(stypy.reporting.localization.Localization(__file__, 715, 38), airy_545975, *[z_545976], **kwargs_545977)
            
            # Obtaining the member '__getitem__' of a type (line 715)
            getitem___545979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 38), airy_call_result_545978, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 715)
            subscript_call_result_545980 = invoke(stypy.reporting.localization.Localization(__file__, 715, 38), getitem___545979, int_545973)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 715)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 28), 'stypy_return_type', subscript_call_result_545980)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_350' in the type store
            # Getting the type of 'stypy_return_type' (line 715)
            stypy_return_type_545981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545981)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_350'
            return stypy_return_type_545981

        # Assigning a type to the variable '_stypy_temp_lambda_350' (line 715)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 28), '_stypy_temp_lambda_350', _stypy_temp_lambda_350)
        # Getting the type of '_stypy_temp_lambda_350' (line 715)
        _stypy_temp_lambda_350_545982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 28), '_stypy_temp_lambda_350')

        @norecursion
        def _stypy_temp_lambda_351(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_351'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_351', 715, 53, True)
            # Passed parameters checking function
            _stypy_temp_lambda_351.stypy_localization = localization
            _stypy_temp_lambda_351.stypy_type_of_self = None
            _stypy_temp_lambda_351.stypy_type_store = module_type_store
            _stypy_temp_lambda_351.stypy_function_name = '_stypy_temp_lambda_351'
            _stypy_temp_lambda_351.stypy_param_names_list = ['z']
            _stypy_temp_lambda_351.stypy_varargs_param_name = None
            _stypy_temp_lambda_351.stypy_kwargs_param_name = None
            _stypy_temp_lambda_351.stypy_call_defaults = defaults
            _stypy_temp_lambda_351.stypy_call_varargs = varargs
            _stypy_temp_lambda_351.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_351', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_351', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to airybi(...): (line 716)
            # Processing the call arguments (line 716)
            # Getting the type of 'z' (line 716)
            z_545985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 42), 'z', False)
            # Processing the call keyword arguments (line 716)
            kwargs_545986 = {}
            # Getting the type of 'mpmath' (line 716)
            mpmath_545983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 28), 'mpmath', False)
            # Obtaining the member 'airybi' of a type (line 716)
            airybi_545984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 716, 28), mpmath_545983, 'airybi')
            # Calling airybi(args, kwargs) (line 716)
            airybi_call_result_545987 = invoke(stypy.reporting.localization.Localization(__file__, 716, 28), airybi_545984, *[z_545985], **kwargs_545986)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 715)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 53), 'stypy_return_type', airybi_call_result_545987)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_351' in the type store
            # Getting the type of 'stypy_return_type' (line 715)
            stypy_return_type_545988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 53), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_545988)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_351'
            return stypy_return_type_545988

        # Assigning a type to the variable '_stypy_temp_lambda_351' (line 715)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 53), '_stypy_temp_lambda_351', _stypy_temp_lambda_351)
        # Getting the type of '_stypy_temp_lambda_351' (line 715)
        _stypy_temp_lambda_351_545989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 53), '_stypy_temp_lambda_351')
        
        # Obtaining an instance of the builtin type 'list' (line 717)
        list_545990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 717)
        # Adding element type (line 717)
        
        # Call to Arg(...): (line 717)
        # Processing the call arguments (line 717)
        float_545992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 33), 'float')
        float_545993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 39), 'float')
        # Processing the call keyword arguments (line 717)
        kwargs_545994 = {}
        # Getting the type of 'Arg' (line 717)
        Arg_545991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 717)
        Arg_call_result_545995 = invoke(stypy.reporting.localization.Localization(__file__, 717, 29), Arg_545991, *[float_545992, float_545993], **kwargs_545994)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 717, 28), list_545990, Arg_call_result_545995)
        
        # Processing the call keyword arguments (line 715)
        kwargs_545996 = {}
        # Getting the type of 'assert_mpmath_equal' (line 715)
        assert_mpmath_equal_545972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 715)
        assert_mpmath_equal_call_result_545997 = invoke(stypy.reporting.localization.Localization(__file__, 715, 8), assert_mpmath_equal_545972, *[_stypy_temp_lambda_350_545982, _stypy_temp_lambda_351_545989, list_545990], **kwargs_545996)
        
        
        # ################# End of 'test_airybi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_airybi' in the type store
        # Getting the type of 'stypy_return_type' (line 709)
        stypy_return_type_545998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_545998)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_airybi'
        return stypy_return_type_545998


    @norecursion
    def test_airybi_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_airybi_complex'
        module_type_store = module_type_store.open_function_context('test_airybi_complex', 719, 4, False)
        # Assigning a type to the variable 'self' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_airybi_complex')
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_airybi_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_airybi_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_airybi_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_airybi_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 720)
        # Processing the call arguments (line 720)

        @norecursion
        def _stypy_temp_lambda_352(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_352'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_352', 720, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_352.stypy_localization = localization
            _stypy_temp_lambda_352.stypy_type_of_self = None
            _stypy_temp_lambda_352.stypy_type_store = module_type_store
            _stypy_temp_lambda_352.stypy_function_name = '_stypy_temp_lambda_352'
            _stypy_temp_lambda_352.stypy_param_names_list = ['z']
            _stypy_temp_lambda_352.stypy_varargs_param_name = None
            _stypy_temp_lambda_352.stypy_kwargs_param_name = None
            _stypy_temp_lambda_352.stypy_call_defaults = defaults
            _stypy_temp_lambda_352.stypy_call_varargs = varargs
            _stypy_temp_lambda_352.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_352', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_352', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_546000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 49), 'int')
            
            # Call to airy(...): (line 720)
            # Processing the call arguments (line 720)
            # Getting the type of 'z' (line 720)
            z_546003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 46), 'z', False)
            # Processing the call keyword arguments (line 720)
            kwargs_546004 = {}
            # Getting the type of 'sc' (line 720)
            sc_546001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 720)
            airy_546002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 38), sc_546001, 'airy')
            # Calling airy(args, kwargs) (line 720)
            airy_call_result_546005 = invoke(stypy.reporting.localization.Localization(__file__, 720, 38), airy_546002, *[z_546003], **kwargs_546004)
            
            # Obtaining the member '__getitem__' of a type (line 720)
            getitem___546006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 38), airy_call_result_546005, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 720)
            subscript_call_result_546007 = invoke(stypy.reporting.localization.Localization(__file__, 720, 38), getitem___546006, int_546000)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 720)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 28), 'stypy_return_type', subscript_call_result_546007)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_352' in the type store
            # Getting the type of 'stypy_return_type' (line 720)
            stypy_return_type_546008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546008)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_352'
            return stypy_return_type_546008

        # Assigning a type to the variable '_stypy_temp_lambda_352' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 28), '_stypy_temp_lambda_352', _stypy_temp_lambda_352)
        # Getting the type of '_stypy_temp_lambda_352' (line 720)
        _stypy_temp_lambda_352_546009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 28), '_stypy_temp_lambda_352')

        @norecursion
        def _stypy_temp_lambda_353(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_353'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_353', 720, 53, True)
            # Passed parameters checking function
            _stypy_temp_lambda_353.stypy_localization = localization
            _stypy_temp_lambda_353.stypy_type_of_self = None
            _stypy_temp_lambda_353.stypy_type_store = module_type_store
            _stypy_temp_lambda_353.stypy_function_name = '_stypy_temp_lambda_353'
            _stypy_temp_lambda_353.stypy_param_names_list = ['z']
            _stypy_temp_lambda_353.stypy_varargs_param_name = None
            _stypy_temp_lambda_353.stypy_kwargs_param_name = None
            _stypy_temp_lambda_353.stypy_call_defaults = defaults
            _stypy_temp_lambda_353.stypy_call_varargs = varargs
            _stypy_temp_lambda_353.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_353', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_353', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to airybi(...): (line 721)
            # Processing the call arguments (line 721)
            # Getting the type of 'z' (line 721)
            z_546012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 42), 'z', False)
            # Processing the call keyword arguments (line 721)
            kwargs_546013 = {}
            # Getting the type of 'mpmath' (line 721)
            mpmath_546010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 28), 'mpmath', False)
            # Obtaining the member 'airybi' of a type (line 721)
            airybi_546011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 28), mpmath_546010, 'airybi')
            # Calling airybi(args, kwargs) (line 721)
            airybi_call_result_546014 = invoke(stypy.reporting.localization.Localization(__file__, 721, 28), airybi_546011, *[z_546012], **kwargs_546013)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 720)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 53), 'stypy_return_type', airybi_call_result_546014)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_353' in the type store
            # Getting the type of 'stypy_return_type' (line 720)
            stypy_return_type_546015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 53), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546015)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_353'
            return stypy_return_type_546015

        # Assigning a type to the variable '_stypy_temp_lambda_353' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 53), '_stypy_temp_lambda_353', _stypy_temp_lambda_353)
        # Getting the type of '_stypy_temp_lambda_353' (line 720)
        _stypy_temp_lambda_353_546016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 53), '_stypy_temp_lambda_353')
        
        # Obtaining an instance of the builtin type 'list' (line 722)
        list_546017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 722)
        # Adding element type (line 722)
        
        # Call to ComplexArg(...): (line 722)
        # Processing the call keyword arguments (line 722)
        kwargs_546019 = {}
        # Getting the type of 'ComplexArg' (line 722)
        ComplexArg_546018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 722)
        ComplexArg_call_result_546020 = invoke(stypy.reporting.localization.Localization(__file__, 722, 29), ComplexArg_546018, *[], **kwargs_546019)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 28), list_546017, ComplexArg_call_result_546020)
        
        # Processing the call keyword arguments (line 720)
        kwargs_546021 = {}
        # Getting the type of 'assert_mpmath_equal' (line 720)
        assert_mpmath_equal_545999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 720)
        assert_mpmath_equal_call_result_546022 = invoke(stypy.reporting.localization.Localization(__file__, 720, 8), assert_mpmath_equal_545999, *[_stypy_temp_lambda_352_546009, _stypy_temp_lambda_353_546016, list_546017], **kwargs_546021)
        
        
        # ################# End of 'test_airybi_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_airybi_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 719)
        stypy_return_type_546023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546023)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_airybi_complex'
        return stypy_return_type_546023


    @norecursion
    def test_airybi_prime(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_airybi_prime'
        module_type_store = module_type_store.open_function_context('test_airybi_prime', 724, 4, False)
        # Assigning a type to the variable 'self' (line 725)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 725, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_airybi_prime')
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_airybi_prime.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_airybi_prime', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_airybi_prime', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_airybi_prime(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 726)
        # Processing the call arguments (line 726)

        @norecursion
        def _stypy_temp_lambda_354(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_354'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_354', 726, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_354.stypy_localization = localization
            _stypy_temp_lambda_354.stypy_type_of_self = None
            _stypy_temp_lambda_354.stypy_type_store = module_type_store
            _stypy_temp_lambda_354.stypy_function_name = '_stypy_temp_lambda_354'
            _stypy_temp_lambda_354.stypy_param_names_list = ['z']
            _stypy_temp_lambda_354.stypy_varargs_param_name = None
            _stypy_temp_lambda_354.stypy_kwargs_param_name = None
            _stypy_temp_lambda_354.stypy_call_defaults = defaults
            _stypy_temp_lambda_354.stypy_call_varargs = varargs
            _stypy_temp_lambda_354.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_354', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_354', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_546025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 49), 'int')
            
            # Call to airy(...): (line 726)
            # Processing the call arguments (line 726)
            # Getting the type of 'z' (line 726)
            z_546028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 46), 'z', False)
            # Processing the call keyword arguments (line 726)
            kwargs_546029 = {}
            # Getting the type of 'sc' (line 726)
            sc_546026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 726)
            airy_546027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 38), sc_546026, 'airy')
            # Calling airy(args, kwargs) (line 726)
            airy_call_result_546030 = invoke(stypy.reporting.localization.Localization(__file__, 726, 38), airy_546027, *[z_546028], **kwargs_546029)
            
            # Obtaining the member '__getitem__' of a type (line 726)
            getitem___546031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 38), airy_call_result_546030, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 726)
            subscript_call_result_546032 = invoke(stypy.reporting.localization.Localization(__file__, 726, 38), getitem___546031, int_546025)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 726)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 28), 'stypy_return_type', subscript_call_result_546032)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_354' in the type store
            # Getting the type of 'stypy_return_type' (line 726)
            stypy_return_type_546033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546033)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_354'
            return stypy_return_type_546033

        # Assigning a type to the variable '_stypy_temp_lambda_354' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 28), '_stypy_temp_lambda_354', _stypy_temp_lambda_354)
        # Getting the type of '_stypy_temp_lambda_354' (line 726)
        _stypy_temp_lambda_354_546034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 28), '_stypy_temp_lambda_354')

        @norecursion
        def _stypy_temp_lambda_355(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_355'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_355', 726, 53, True)
            # Passed parameters checking function
            _stypy_temp_lambda_355.stypy_localization = localization
            _stypy_temp_lambda_355.stypy_type_of_self = None
            _stypy_temp_lambda_355.stypy_type_store = module_type_store
            _stypy_temp_lambda_355.stypy_function_name = '_stypy_temp_lambda_355'
            _stypy_temp_lambda_355.stypy_param_names_list = ['z']
            _stypy_temp_lambda_355.stypy_varargs_param_name = None
            _stypy_temp_lambda_355.stypy_kwargs_param_name = None
            _stypy_temp_lambda_355.stypy_call_defaults = defaults
            _stypy_temp_lambda_355.stypy_call_varargs = varargs
            _stypy_temp_lambda_355.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_355', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_355', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to airybi(...): (line 727)
            # Processing the call arguments (line 727)
            # Getting the type of 'z' (line 727)
            z_546037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 42), 'z', False)
            # Processing the call keyword arguments (line 727)
            int_546038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 56), 'int')
            keyword_546039 = int_546038
            kwargs_546040 = {'derivative': keyword_546039}
            # Getting the type of 'mpmath' (line 727)
            mpmath_546035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 28), 'mpmath', False)
            # Obtaining the member 'airybi' of a type (line 727)
            airybi_546036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 28), mpmath_546035, 'airybi')
            # Calling airybi(args, kwargs) (line 727)
            airybi_call_result_546041 = invoke(stypy.reporting.localization.Localization(__file__, 727, 28), airybi_546036, *[z_546037], **kwargs_546040)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 726)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 53), 'stypy_return_type', airybi_call_result_546041)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_355' in the type store
            # Getting the type of 'stypy_return_type' (line 726)
            stypy_return_type_546042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 53), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546042)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_355'
            return stypy_return_type_546042

        # Assigning a type to the variable '_stypy_temp_lambda_355' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 53), '_stypy_temp_lambda_355', _stypy_temp_lambda_355)
        # Getting the type of '_stypy_temp_lambda_355' (line 726)
        _stypy_temp_lambda_355_546043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 53), '_stypy_temp_lambda_355')
        
        # Obtaining an instance of the builtin type 'list' (line 728)
        list_546044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 728)
        # Adding element type (line 728)
        
        # Call to Arg(...): (line 728)
        # Processing the call arguments (line 728)
        float_546046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 33), 'float')
        float_546047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 39), 'float')
        # Processing the call keyword arguments (line 728)
        kwargs_546048 = {}
        # Getting the type of 'Arg' (line 728)
        Arg_546045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 728)
        Arg_call_result_546049 = invoke(stypy.reporting.localization.Localization(__file__, 728, 29), Arg_546045, *[float_546046, float_546047], **kwargs_546048)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 28), list_546044, Arg_call_result_546049)
        
        # Processing the call keyword arguments (line 726)
        float_546050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 33), 'float')
        keyword_546051 = float_546050
        kwargs_546052 = {'rtol': keyword_546051}
        # Getting the type of 'assert_mpmath_equal' (line 726)
        assert_mpmath_equal_546024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 726)
        assert_mpmath_equal_call_result_546053 = invoke(stypy.reporting.localization.Localization(__file__, 726, 8), assert_mpmath_equal_546024, *[_stypy_temp_lambda_354_546034, _stypy_temp_lambda_355_546043, list_546044], **kwargs_546052)
        
        
        # Call to assert_mpmath_equal(...): (line 730)
        # Processing the call arguments (line 730)

        @norecursion
        def _stypy_temp_lambda_356(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_356'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_356', 730, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_356.stypy_localization = localization
            _stypy_temp_lambda_356.stypy_type_of_self = None
            _stypy_temp_lambda_356.stypy_type_store = module_type_store
            _stypy_temp_lambda_356.stypy_function_name = '_stypy_temp_lambda_356'
            _stypy_temp_lambda_356.stypy_param_names_list = ['z']
            _stypy_temp_lambda_356.stypy_varargs_param_name = None
            _stypy_temp_lambda_356.stypy_kwargs_param_name = None
            _stypy_temp_lambda_356.stypy_call_defaults = defaults
            _stypy_temp_lambda_356.stypy_call_varargs = varargs
            _stypy_temp_lambda_356.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_356', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_356', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_546055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 49), 'int')
            
            # Call to airy(...): (line 730)
            # Processing the call arguments (line 730)
            # Getting the type of 'z' (line 730)
            z_546058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 46), 'z', False)
            # Processing the call keyword arguments (line 730)
            kwargs_546059 = {}
            # Getting the type of 'sc' (line 730)
            sc_546056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 730)
            airy_546057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 38), sc_546056, 'airy')
            # Calling airy(args, kwargs) (line 730)
            airy_call_result_546060 = invoke(stypy.reporting.localization.Localization(__file__, 730, 38), airy_546057, *[z_546058], **kwargs_546059)
            
            # Obtaining the member '__getitem__' of a type (line 730)
            getitem___546061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 38), airy_call_result_546060, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 730)
            subscript_call_result_546062 = invoke(stypy.reporting.localization.Localization(__file__, 730, 38), getitem___546061, int_546055)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 730)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 28), 'stypy_return_type', subscript_call_result_546062)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_356' in the type store
            # Getting the type of 'stypy_return_type' (line 730)
            stypy_return_type_546063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546063)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_356'
            return stypy_return_type_546063

        # Assigning a type to the variable '_stypy_temp_lambda_356' (line 730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 28), '_stypy_temp_lambda_356', _stypy_temp_lambda_356)
        # Getting the type of '_stypy_temp_lambda_356' (line 730)
        _stypy_temp_lambda_356_546064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 28), '_stypy_temp_lambda_356')

        @norecursion
        def _stypy_temp_lambda_357(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_357'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_357', 730, 53, True)
            # Passed parameters checking function
            _stypy_temp_lambda_357.stypy_localization = localization
            _stypy_temp_lambda_357.stypy_type_of_self = None
            _stypy_temp_lambda_357.stypy_type_store = module_type_store
            _stypy_temp_lambda_357.stypy_function_name = '_stypy_temp_lambda_357'
            _stypy_temp_lambda_357.stypy_param_names_list = ['z']
            _stypy_temp_lambda_357.stypy_varargs_param_name = None
            _stypy_temp_lambda_357.stypy_kwargs_param_name = None
            _stypy_temp_lambda_357.stypy_call_defaults = defaults
            _stypy_temp_lambda_357.stypy_call_varargs = varargs
            _stypy_temp_lambda_357.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_357', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_357', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to airybi(...): (line 731)
            # Processing the call arguments (line 731)
            # Getting the type of 'z' (line 731)
            z_546067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 42), 'z', False)
            # Processing the call keyword arguments (line 731)
            int_546068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 56), 'int')
            keyword_546069 = int_546068
            kwargs_546070 = {'derivative': keyword_546069}
            # Getting the type of 'mpmath' (line 731)
            mpmath_546065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 28), 'mpmath', False)
            # Obtaining the member 'airybi' of a type (line 731)
            airybi_546066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 28), mpmath_546065, 'airybi')
            # Calling airybi(args, kwargs) (line 731)
            airybi_call_result_546071 = invoke(stypy.reporting.localization.Localization(__file__, 731, 28), airybi_546066, *[z_546067], **kwargs_546070)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 730)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 53), 'stypy_return_type', airybi_call_result_546071)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_357' in the type store
            # Getting the type of 'stypy_return_type' (line 730)
            stypy_return_type_546072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 53), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546072)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_357'
            return stypy_return_type_546072

        # Assigning a type to the variable '_stypy_temp_lambda_357' (line 730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 53), '_stypy_temp_lambda_357', _stypy_temp_lambda_357)
        # Getting the type of '_stypy_temp_lambda_357' (line 730)
        _stypy_temp_lambda_357_546073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 53), '_stypy_temp_lambda_357')
        
        # Obtaining an instance of the builtin type 'list' (line 732)
        list_546074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 732)
        # Adding element type (line 732)
        
        # Call to Arg(...): (line 732)
        # Processing the call arguments (line 732)
        float_546076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 33), 'float')
        float_546077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 39), 'float')
        # Processing the call keyword arguments (line 732)
        kwargs_546078 = {}
        # Getting the type of 'Arg' (line 732)
        Arg_546075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 732)
        Arg_call_result_546079 = invoke(stypy.reporting.localization.Localization(__file__, 732, 29), Arg_546075, *[float_546076, float_546077], **kwargs_546078)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 28), list_546074, Arg_call_result_546079)
        
        # Processing the call keyword arguments (line 730)
        kwargs_546080 = {}
        # Getting the type of 'assert_mpmath_equal' (line 730)
        assert_mpmath_equal_546054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 730)
        assert_mpmath_equal_call_result_546081 = invoke(stypy.reporting.localization.Localization(__file__, 730, 8), assert_mpmath_equal_546054, *[_stypy_temp_lambda_356_546064, _stypy_temp_lambda_357_546073, list_546074], **kwargs_546080)
        
        
        # ################# End of 'test_airybi_prime(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_airybi_prime' in the type store
        # Getting the type of 'stypy_return_type' (line 724)
        stypy_return_type_546082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546082)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_airybi_prime'
        return stypy_return_type_546082


    @norecursion
    def test_airybi_prime_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_airybi_prime_complex'
        module_type_store = module_type_store.open_function_context('test_airybi_prime_complex', 734, 4, False)
        # Assigning a type to the variable 'self' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_airybi_prime_complex')
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_airybi_prime_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_airybi_prime_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_airybi_prime_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_airybi_prime_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 735)
        # Processing the call arguments (line 735)

        @norecursion
        def _stypy_temp_lambda_358(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_358'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_358', 735, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_358.stypy_localization = localization
            _stypy_temp_lambda_358.stypy_type_of_self = None
            _stypy_temp_lambda_358.stypy_type_store = module_type_store
            _stypy_temp_lambda_358.stypy_function_name = '_stypy_temp_lambda_358'
            _stypy_temp_lambda_358.stypy_param_names_list = ['z']
            _stypy_temp_lambda_358.stypy_varargs_param_name = None
            _stypy_temp_lambda_358.stypy_kwargs_param_name = None
            _stypy_temp_lambda_358.stypy_call_defaults = defaults
            _stypy_temp_lambda_358.stypy_call_varargs = varargs
            _stypy_temp_lambda_358.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_358', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_358', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_546084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 49), 'int')
            
            # Call to airy(...): (line 735)
            # Processing the call arguments (line 735)
            # Getting the type of 'z' (line 735)
            z_546087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 46), 'z', False)
            # Processing the call keyword arguments (line 735)
            kwargs_546088 = {}
            # Getting the type of 'sc' (line 735)
            sc_546085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 38), 'sc', False)
            # Obtaining the member 'airy' of a type (line 735)
            airy_546086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 38), sc_546085, 'airy')
            # Calling airy(args, kwargs) (line 735)
            airy_call_result_546089 = invoke(stypy.reporting.localization.Localization(__file__, 735, 38), airy_546086, *[z_546087], **kwargs_546088)
            
            # Obtaining the member '__getitem__' of a type (line 735)
            getitem___546090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 38), airy_call_result_546089, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 735)
            subscript_call_result_546091 = invoke(stypy.reporting.localization.Localization(__file__, 735, 38), getitem___546090, int_546084)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 735)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 28), 'stypy_return_type', subscript_call_result_546091)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_358' in the type store
            # Getting the type of 'stypy_return_type' (line 735)
            stypy_return_type_546092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546092)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_358'
            return stypy_return_type_546092

        # Assigning a type to the variable '_stypy_temp_lambda_358' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 28), '_stypy_temp_lambda_358', _stypy_temp_lambda_358)
        # Getting the type of '_stypy_temp_lambda_358' (line 735)
        _stypy_temp_lambda_358_546093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 28), '_stypy_temp_lambda_358')

        @norecursion
        def _stypy_temp_lambda_359(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_359'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_359', 735, 53, True)
            # Passed parameters checking function
            _stypy_temp_lambda_359.stypy_localization = localization
            _stypy_temp_lambda_359.stypy_type_of_self = None
            _stypy_temp_lambda_359.stypy_type_store = module_type_store
            _stypy_temp_lambda_359.stypy_function_name = '_stypy_temp_lambda_359'
            _stypy_temp_lambda_359.stypy_param_names_list = ['z']
            _stypy_temp_lambda_359.stypy_varargs_param_name = None
            _stypy_temp_lambda_359.stypy_kwargs_param_name = None
            _stypy_temp_lambda_359.stypy_call_defaults = defaults
            _stypy_temp_lambda_359.stypy_call_varargs = varargs
            _stypy_temp_lambda_359.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_359', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_359', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to airybi(...): (line 736)
            # Processing the call arguments (line 736)
            # Getting the type of 'z' (line 736)
            z_546096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 42), 'z', False)
            # Processing the call keyword arguments (line 736)
            int_546097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 56), 'int')
            keyword_546098 = int_546097
            kwargs_546099 = {'derivative': keyword_546098}
            # Getting the type of 'mpmath' (line 736)
            mpmath_546094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 28), 'mpmath', False)
            # Obtaining the member 'airybi' of a type (line 736)
            airybi_546095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 28), mpmath_546094, 'airybi')
            # Calling airybi(args, kwargs) (line 736)
            airybi_call_result_546100 = invoke(stypy.reporting.localization.Localization(__file__, 736, 28), airybi_546095, *[z_546096], **kwargs_546099)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 735)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 53), 'stypy_return_type', airybi_call_result_546100)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_359' in the type store
            # Getting the type of 'stypy_return_type' (line 735)
            stypy_return_type_546101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 53), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546101)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_359'
            return stypy_return_type_546101

        # Assigning a type to the variable '_stypy_temp_lambda_359' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 53), '_stypy_temp_lambda_359', _stypy_temp_lambda_359)
        # Getting the type of '_stypy_temp_lambda_359' (line 735)
        _stypy_temp_lambda_359_546102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 53), '_stypy_temp_lambda_359')
        
        # Obtaining an instance of the builtin type 'list' (line 737)
        list_546103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 737, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 737)
        # Adding element type (line 737)
        
        # Call to ComplexArg(...): (line 737)
        # Processing the call keyword arguments (line 737)
        kwargs_546105 = {}
        # Getting the type of 'ComplexArg' (line 737)
        ComplexArg_546104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 737)
        ComplexArg_call_result_546106 = invoke(stypy.reporting.localization.Localization(__file__, 737, 29), ComplexArg_546104, *[], **kwargs_546105)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 737, 28), list_546103, ComplexArg_call_result_546106)
        
        # Processing the call keyword arguments (line 735)
        kwargs_546107 = {}
        # Getting the type of 'assert_mpmath_equal' (line 735)
        assert_mpmath_equal_546083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 735)
        assert_mpmath_equal_call_result_546108 = invoke(stypy.reporting.localization.Localization(__file__, 735, 8), assert_mpmath_equal_546083, *[_stypy_temp_lambda_358_546093, _stypy_temp_lambda_359_546102, list_546103], **kwargs_546107)
        
        
        # ################# End of 'test_airybi_prime_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_airybi_prime_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 734)
        stypy_return_type_546109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546109)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_airybi_prime_complex'
        return stypy_return_type_546109


    @norecursion
    def test_bei(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_bei'
        module_type_store = module_type_store.open_function_context('test_bei', 739, 4, False)
        # Assigning a type to the variable 'self' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_bei.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_bei.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_bei.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_bei.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_bei')
        TestSystematic.test_bei.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_bei.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_bei.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_bei.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_bei.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_bei.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_bei.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_bei', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_bei', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_bei(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 740)
        # Processing the call arguments (line 740)
        # Getting the type of 'sc' (line 740)
        sc_546111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 28), 'sc', False)
        # Obtaining the member 'bei' of a type (line 740)
        bei_546112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 740, 28), sc_546111, 'bei')
        
        # Call to exception_to_nan(...): (line 741)
        # Processing the call arguments (line 741)

        @norecursion
        def _stypy_temp_lambda_360(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_360'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_360', 741, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_360.stypy_localization = localization
            _stypy_temp_lambda_360.stypy_type_of_self = None
            _stypy_temp_lambda_360.stypy_type_store = module_type_store
            _stypy_temp_lambda_360.stypy_function_name = '_stypy_temp_lambda_360'
            _stypy_temp_lambda_360.stypy_param_names_list = ['z']
            _stypy_temp_lambda_360.stypy_varargs_param_name = None
            _stypy_temp_lambda_360.stypy_kwargs_param_name = None
            _stypy_temp_lambda_360.stypy_call_defaults = defaults
            _stypy_temp_lambda_360.stypy_call_varargs = varargs
            _stypy_temp_lambda_360.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_360', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_360', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to bei(...): (line 741)
            # Processing the call arguments (line 741)
            int_546116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 66), 'int')
            # Getting the type of 'z' (line 741)
            z_546117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 69), 'z', False)
            # Processing the call keyword arguments (line 741)
            # Getting the type of 'HYPERKW' (line 741)
            HYPERKW_546118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 74), 'HYPERKW', False)
            kwargs_546119 = {'HYPERKW_546118': HYPERKW_546118}
            # Getting the type of 'mpmath' (line 741)
            mpmath_546114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 55), 'mpmath', False)
            # Obtaining the member 'bei' of a type (line 741)
            bei_546115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 55), mpmath_546114, 'bei')
            # Calling bei(args, kwargs) (line 741)
            bei_call_result_546120 = invoke(stypy.reporting.localization.Localization(__file__, 741, 55), bei_546115, *[int_546116, z_546117], **kwargs_546119)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 741)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 741, 45), 'stypy_return_type', bei_call_result_546120)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_360' in the type store
            # Getting the type of 'stypy_return_type' (line 741)
            stypy_return_type_546121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546121)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_360'
            return stypy_return_type_546121

        # Assigning a type to the variable '_stypy_temp_lambda_360' (line 741)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 741, 45), '_stypy_temp_lambda_360', _stypy_temp_lambda_360)
        # Getting the type of '_stypy_temp_lambda_360' (line 741)
        _stypy_temp_lambda_360_546122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 45), '_stypy_temp_lambda_360')
        # Processing the call keyword arguments (line 741)
        kwargs_546123 = {}
        # Getting the type of 'exception_to_nan' (line 741)
        exception_to_nan_546113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 741)
        exception_to_nan_call_result_546124 = invoke(stypy.reporting.localization.Localization(__file__, 741, 28), exception_to_nan_546113, *[_stypy_temp_lambda_360_546122], **kwargs_546123)
        
        
        # Obtaining an instance of the builtin type 'list' (line 742)
        list_546125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 742)
        # Adding element type (line 742)
        
        # Call to Arg(...): (line 742)
        # Processing the call arguments (line 742)
        float_546127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 33), 'float')
        float_546128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 39), 'float')
        # Processing the call keyword arguments (line 742)
        kwargs_546129 = {}
        # Getting the type of 'Arg' (line 742)
        Arg_546126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 742)
        Arg_call_result_546130 = invoke(stypy.reporting.localization.Localization(__file__, 742, 29), Arg_546126, *[float_546127, float_546128], **kwargs_546129)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 742, 28), list_546125, Arg_call_result_546130)
        
        # Processing the call keyword arguments (line 740)
        kwargs_546131 = {}
        # Getting the type of 'assert_mpmath_equal' (line 740)
        assert_mpmath_equal_546110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 740)
        assert_mpmath_equal_call_result_546132 = invoke(stypy.reporting.localization.Localization(__file__, 740, 8), assert_mpmath_equal_546110, *[bei_546112, exception_to_nan_call_result_546124, list_546125], **kwargs_546131)
        
        
        # ################# End of 'test_bei(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_bei' in the type store
        # Getting the type of 'stypy_return_type' (line 739)
        stypy_return_type_546133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546133)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_bei'
        return stypy_return_type_546133


    @norecursion
    def test_ber(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ber'
        module_type_store = module_type_store.open_function_context('test_ber', 744, 4, False)
        # Assigning a type to the variable 'self' (line 745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ber.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ber.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ber.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ber.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ber')
        TestSystematic.test_ber.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ber.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ber.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ber.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ber.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ber.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ber.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ber', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ber', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ber(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 745)
        # Processing the call arguments (line 745)
        # Getting the type of 'sc' (line 745)
        sc_546135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 28), 'sc', False)
        # Obtaining the member 'ber' of a type (line 745)
        ber_546136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 28), sc_546135, 'ber')
        
        # Call to exception_to_nan(...): (line 746)
        # Processing the call arguments (line 746)

        @norecursion
        def _stypy_temp_lambda_361(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_361'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_361', 746, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_361.stypy_localization = localization
            _stypy_temp_lambda_361.stypy_type_of_self = None
            _stypy_temp_lambda_361.stypy_type_store = module_type_store
            _stypy_temp_lambda_361.stypy_function_name = '_stypy_temp_lambda_361'
            _stypy_temp_lambda_361.stypy_param_names_list = ['z']
            _stypy_temp_lambda_361.stypy_varargs_param_name = None
            _stypy_temp_lambda_361.stypy_kwargs_param_name = None
            _stypy_temp_lambda_361.stypy_call_defaults = defaults
            _stypy_temp_lambda_361.stypy_call_varargs = varargs
            _stypy_temp_lambda_361.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_361', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_361', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to ber(...): (line 746)
            # Processing the call arguments (line 746)
            int_546140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 66), 'int')
            # Getting the type of 'z' (line 746)
            z_546141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 69), 'z', False)
            # Processing the call keyword arguments (line 746)
            # Getting the type of 'HYPERKW' (line 746)
            HYPERKW_546142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 74), 'HYPERKW', False)
            kwargs_546143 = {'HYPERKW_546142': HYPERKW_546142}
            # Getting the type of 'mpmath' (line 746)
            mpmath_546138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 55), 'mpmath', False)
            # Obtaining the member 'ber' of a type (line 746)
            ber_546139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 55), mpmath_546138, 'ber')
            # Calling ber(args, kwargs) (line 746)
            ber_call_result_546144 = invoke(stypy.reporting.localization.Localization(__file__, 746, 55), ber_546139, *[int_546140, z_546141], **kwargs_546143)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 746)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 746, 45), 'stypy_return_type', ber_call_result_546144)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_361' in the type store
            # Getting the type of 'stypy_return_type' (line 746)
            stypy_return_type_546145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546145)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_361'
            return stypy_return_type_546145

        # Assigning a type to the variable '_stypy_temp_lambda_361' (line 746)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 746, 45), '_stypy_temp_lambda_361', _stypy_temp_lambda_361)
        # Getting the type of '_stypy_temp_lambda_361' (line 746)
        _stypy_temp_lambda_361_546146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 45), '_stypy_temp_lambda_361')
        # Processing the call keyword arguments (line 746)
        kwargs_546147 = {}
        # Getting the type of 'exception_to_nan' (line 746)
        exception_to_nan_546137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 746)
        exception_to_nan_call_result_546148 = invoke(stypy.reporting.localization.Localization(__file__, 746, 28), exception_to_nan_546137, *[_stypy_temp_lambda_361_546146], **kwargs_546147)
        
        
        # Obtaining an instance of the builtin type 'list' (line 747)
        list_546149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 747)
        # Adding element type (line 747)
        
        # Call to Arg(...): (line 747)
        # Processing the call arguments (line 747)
        float_546151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 33), 'float')
        float_546152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 39), 'float')
        # Processing the call keyword arguments (line 747)
        kwargs_546153 = {}
        # Getting the type of 'Arg' (line 747)
        Arg_546150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 747)
        Arg_call_result_546154 = invoke(stypy.reporting.localization.Localization(__file__, 747, 29), Arg_546150, *[float_546151, float_546152], **kwargs_546153)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 28), list_546149, Arg_call_result_546154)
        
        # Processing the call keyword arguments (line 745)
        kwargs_546155 = {}
        # Getting the type of 'assert_mpmath_equal' (line 745)
        assert_mpmath_equal_546134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 745)
        assert_mpmath_equal_call_result_546156 = invoke(stypy.reporting.localization.Localization(__file__, 745, 8), assert_mpmath_equal_546134, *[ber_546136, exception_to_nan_call_result_546148, list_546149], **kwargs_546155)
        
        
        # ################# End of 'test_ber(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ber' in the type store
        # Getting the type of 'stypy_return_type' (line 744)
        stypy_return_type_546157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546157)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ber'
        return stypy_return_type_546157


    @norecursion
    def test_bernoulli(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_bernoulli'
        module_type_store = module_type_store.open_function_context('test_bernoulli', 749, 4, False)
        # Assigning a type to the variable 'self' (line 750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_bernoulli')
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_bernoulli.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_bernoulli', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_bernoulli', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_bernoulli(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 750)
        # Processing the call arguments (line 750)

        @norecursion
        def _stypy_temp_lambda_362(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_362'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_362', 750, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_362.stypy_localization = localization
            _stypy_temp_lambda_362.stypy_type_of_self = None
            _stypy_temp_lambda_362.stypy_type_store = module_type_store
            _stypy_temp_lambda_362.stypy_function_name = '_stypy_temp_lambda_362'
            _stypy_temp_lambda_362.stypy_param_names_list = ['n']
            _stypy_temp_lambda_362.stypy_varargs_param_name = None
            _stypy_temp_lambda_362.stypy_kwargs_param_name = None
            _stypy_temp_lambda_362.stypy_call_defaults = defaults
            _stypy_temp_lambda_362.stypy_call_varargs = varargs
            _stypy_temp_lambda_362.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_362', ['n'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_362', ['n'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            
            # Call to int(...): (line 750)
            # Processing the call arguments (line 750)
            # Getting the type of 'n' (line 750)
            n_546160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 63), 'n', False)
            # Processing the call keyword arguments (line 750)
            kwargs_546161 = {}
            # Getting the type of 'int' (line 750)
            int_546159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 59), 'int', False)
            # Calling int(args, kwargs) (line 750)
            int_call_result_546162 = invoke(stypy.reporting.localization.Localization(__file__, 750, 59), int_546159, *[n_546160], **kwargs_546161)
            
            
            # Call to bernoulli(...): (line 750)
            # Processing the call arguments (line 750)
            
            # Call to int(...): (line 750)
            # Processing the call arguments (line 750)
            # Getting the type of 'n' (line 750)
            n_546166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 55), 'n', False)
            # Processing the call keyword arguments (line 750)
            kwargs_546167 = {}
            # Getting the type of 'int' (line 750)
            int_546165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 51), 'int', False)
            # Calling int(args, kwargs) (line 750)
            int_call_result_546168 = invoke(stypy.reporting.localization.Localization(__file__, 750, 51), int_546165, *[n_546166], **kwargs_546167)
            
            # Processing the call keyword arguments (line 750)
            kwargs_546169 = {}
            # Getting the type of 'sc' (line 750)
            sc_546163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 38), 'sc', False)
            # Obtaining the member 'bernoulli' of a type (line 750)
            bernoulli_546164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 38), sc_546163, 'bernoulli')
            # Calling bernoulli(args, kwargs) (line 750)
            bernoulli_call_result_546170 = invoke(stypy.reporting.localization.Localization(__file__, 750, 38), bernoulli_546164, *[int_call_result_546168], **kwargs_546169)
            
            # Obtaining the member '__getitem__' of a type (line 750)
            getitem___546171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 38), bernoulli_call_result_546170, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 750)
            subscript_call_result_546172 = invoke(stypy.reporting.localization.Localization(__file__, 750, 38), getitem___546171, int_call_result_546162)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 750)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 28), 'stypy_return_type', subscript_call_result_546172)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_362' in the type store
            # Getting the type of 'stypy_return_type' (line 750)
            stypy_return_type_546173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546173)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_362'
            return stypy_return_type_546173

        # Assigning a type to the variable '_stypy_temp_lambda_362' (line 750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 28), '_stypy_temp_lambda_362', _stypy_temp_lambda_362)
        # Getting the type of '_stypy_temp_lambda_362' (line 750)
        _stypy_temp_lambda_362_546174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 28), '_stypy_temp_lambda_362')

        @norecursion
        def _stypy_temp_lambda_363(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_363'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_363', 751, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_363.stypy_localization = localization
            _stypy_temp_lambda_363.stypy_type_of_self = None
            _stypy_temp_lambda_363.stypy_type_store = module_type_store
            _stypy_temp_lambda_363.stypy_function_name = '_stypy_temp_lambda_363'
            _stypy_temp_lambda_363.stypy_param_names_list = ['n']
            _stypy_temp_lambda_363.stypy_varargs_param_name = None
            _stypy_temp_lambda_363.stypy_kwargs_param_name = None
            _stypy_temp_lambda_363.stypy_call_defaults = defaults
            _stypy_temp_lambda_363.stypy_call_varargs = varargs
            _stypy_temp_lambda_363.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_363', ['n'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_363', ['n'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to float(...): (line 751)
            # Processing the call arguments (line 751)
            
            # Call to bernoulli(...): (line 751)
            # Processing the call arguments (line 751)
            
            # Call to int(...): (line 751)
            # Processing the call arguments (line 751)
            # Getting the type of 'n' (line 751)
            n_546179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 65), 'n', False)
            # Processing the call keyword arguments (line 751)
            kwargs_546180 = {}
            # Getting the type of 'int' (line 751)
            int_546178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 61), 'int', False)
            # Calling int(args, kwargs) (line 751)
            int_call_result_546181 = invoke(stypy.reporting.localization.Localization(__file__, 751, 61), int_546178, *[n_546179], **kwargs_546180)
            
            # Processing the call keyword arguments (line 751)
            kwargs_546182 = {}
            # Getting the type of 'mpmath' (line 751)
            mpmath_546176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 44), 'mpmath', False)
            # Obtaining the member 'bernoulli' of a type (line 751)
            bernoulli_546177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 44), mpmath_546176, 'bernoulli')
            # Calling bernoulli(args, kwargs) (line 751)
            bernoulli_call_result_546183 = invoke(stypy.reporting.localization.Localization(__file__, 751, 44), bernoulli_546177, *[int_call_result_546181], **kwargs_546182)
            
            # Processing the call keyword arguments (line 751)
            kwargs_546184 = {}
            # Getting the type of 'float' (line 751)
            float_546175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 38), 'float', False)
            # Calling float(args, kwargs) (line 751)
            float_call_result_546185 = invoke(stypy.reporting.localization.Localization(__file__, 751, 38), float_546175, *[bernoulli_call_result_546183], **kwargs_546184)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 751)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 751, 28), 'stypy_return_type', float_call_result_546185)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_363' in the type store
            # Getting the type of 'stypy_return_type' (line 751)
            stypy_return_type_546186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546186)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_363'
            return stypy_return_type_546186

        # Assigning a type to the variable '_stypy_temp_lambda_363' (line 751)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 751, 28), '_stypy_temp_lambda_363', _stypy_temp_lambda_363)
        # Getting the type of '_stypy_temp_lambda_363' (line 751)
        _stypy_temp_lambda_363_546187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 28), '_stypy_temp_lambda_363')
        
        # Obtaining an instance of the builtin type 'list' (line 752)
        list_546188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 752)
        # Adding element type (line 752)
        
        # Call to IntArg(...): (line 752)
        # Processing the call arguments (line 752)
        int_546190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 36), 'int')
        int_546191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 39), 'int')
        # Processing the call keyword arguments (line 752)
        kwargs_546192 = {}
        # Getting the type of 'IntArg' (line 752)
        IntArg_546189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 752)
        IntArg_call_result_546193 = invoke(stypy.reporting.localization.Localization(__file__, 752, 29), IntArg_546189, *[int_546190, int_546191], **kwargs_546192)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 28), list_546188, IntArg_call_result_546193)
        
        # Processing the call keyword arguments (line 750)
        float_546194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 33), 'float')
        keyword_546195 = float_546194
        int_546196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 41), 'int')
        keyword_546197 = int_546196
        kwargs_546198 = {'rtol': keyword_546195, 'n': keyword_546197}
        # Getting the type of 'assert_mpmath_equal' (line 750)
        assert_mpmath_equal_546158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 750)
        assert_mpmath_equal_call_result_546199 = invoke(stypy.reporting.localization.Localization(__file__, 750, 8), assert_mpmath_equal_546158, *[_stypy_temp_lambda_362_546174, _stypy_temp_lambda_363_546187, list_546188], **kwargs_546198)
        
        
        # ################# End of 'test_bernoulli(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_bernoulli' in the type store
        # Getting the type of 'stypy_return_type' (line 749)
        stypy_return_type_546200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546200)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_bernoulli'
        return stypy_return_type_546200


    @norecursion
    def test_besseli(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_besseli'
        module_type_store = module_type_store.open_function_context('test_besseli', 755, 4, False)
        # Assigning a type to the variable 'self' (line 756)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 756, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_besseli')
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_besseli.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_besseli', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_besseli', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_besseli(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 756)
        # Processing the call arguments (line 756)
        # Getting the type of 'sc' (line 756)
        sc_546202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 28), 'sc', False)
        # Obtaining the member 'iv' of a type (line 756)
        iv_546203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 756, 28), sc_546202, 'iv')
        
        # Call to exception_to_nan(...): (line 757)
        # Processing the call arguments (line 757)

        @norecursion
        def _stypy_temp_lambda_364(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_364'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_364', 757, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_364.stypy_localization = localization
            _stypy_temp_lambda_364.stypy_type_of_self = None
            _stypy_temp_lambda_364.stypy_type_store = module_type_store
            _stypy_temp_lambda_364.stypy_function_name = '_stypy_temp_lambda_364'
            _stypy_temp_lambda_364.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_364.stypy_varargs_param_name = None
            _stypy_temp_lambda_364.stypy_kwargs_param_name = None
            _stypy_temp_lambda_364.stypy_call_defaults = defaults
            _stypy_temp_lambda_364.stypy_call_varargs = varargs
            _stypy_temp_lambda_364.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_364', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_364', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to besseli(...): (line 757)
            # Processing the call arguments (line 757)
            # Getting the type of 'v' (line 757)
            v_546207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 73), 'v', False)
            # Getting the type of 'z' (line 757)
            z_546208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 76), 'z', False)
            # Processing the call keyword arguments (line 757)
            # Getting the type of 'HYPERKW' (line 757)
            HYPERKW_546209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 81), 'HYPERKW', False)
            kwargs_546210 = {'HYPERKW_546209': HYPERKW_546209}
            # Getting the type of 'mpmath' (line 757)
            mpmath_546205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 58), 'mpmath', False)
            # Obtaining the member 'besseli' of a type (line 757)
            besseli_546206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 58), mpmath_546205, 'besseli')
            # Calling besseli(args, kwargs) (line 757)
            besseli_call_result_546211 = invoke(stypy.reporting.localization.Localization(__file__, 757, 58), besseli_546206, *[v_546207, z_546208], **kwargs_546210)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 757)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 757, 45), 'stypy_return_type', besseli_call_result_546211)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_364' in the type store
            # Getting the type of 'stypy_return_type' (line 757)
            stypy_return_type_546212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546212)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_364'
            return stypy_return_type_546212

        # Assigning a type to the variable '_stypy_temp_lambda_364' (line 757)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 757, 45), '_stypy_temp_lambda_364', _stypy_temp_lambda_364)
        # Getting the type of '_stypy_temp_lambda_364' (line 757)
        _stypy_temp_lambda_364_546213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 45), '_stypy_temp_lambda_364')
        # Processing the call keyword arguments (line 757)
        kwargs_546214 = {}
        # Getting the type of 'exception_to_nan' (line 757)
        exception_to_nan_546204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 757)
        exception_to_nan_call_result_546215 = invoke(stypy.reporting.localization.Localization(__file__, 757, 28), exception_to_nan_546204, *[_stypy_temp_lambda_364_546213], **kwargs_546214)
        
        
        # Obtaining an instance of the builtin type 'list' (line 758)
        list_546216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 758)
        # Adding element type (line 758)
        
        # Call to Arg(...): (line 758)
        # Processing the call arguments (line 758)
        float_546218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 33), 'float')
        float_546219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 41), 'float')
        # Processing the call keyword arguments (line 758)
        kwargs_546220 = {}
        # Getting the type of 'Arg' (line 758)
        Arg_546217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 758)
        Arg_call_result_546221 = invoke(stypy.reporting.localization.Localization(__file__, 758, 29), Arg_546217, *[float_546218, float_546219], **kwargs_546220)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 758, 28), list_546216, Arg_call_result_546221)
        # Adding element type (line 758)
        
        # Call to Arg(...): (line 758)
        # Processing the call keyword arguments (line 758)
        kwargs_546223 = {}
        # Getting the type of 'Arg' (line 758)
        Arg_546222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 49), 'Arg', False)
        # Calling Arg(args, kwargs) (line 758)
        Arg_call_result_546224 = invoke(stypy.reporting.localization.Localization(__file__, 758, 49), Arg_546222, *[], **kwargs_546223)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 758, 28), list_546216, Arg_call_result_546224)
        
        # Processing the call keyword arguments (line 756)
        float_546225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 33), 'float')
        keyword_546226 = float_546225
        kwargs_546227 = {'atol': keyword_546226}
        # Getting the type of 'assert_mpmath_equal' (line 756)
        assert_mpmath_equal_546201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 756)
        assert_mpmath_equal_call_result_546228 = invoke(stypy.reporting.localization.Localization(__file__, 756, 8), assert_mpmath_equal_546201, *[iv_546203, exception_to_nan_call_result_546215, list_546216], **kwargs_546227)
        
        
        # ################# End of 'test_besseli(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_besseli' in the type store
        # Getting the type of 'stypy_return_type' (line 755)
        stypy_return_type_546229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546229)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_besseli'
        return stypy_return_type_546229


    @norecursion
    def test_besseli_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_besseli_complex'
        module_type_store = module_type_store.open_function_context('test_besseli_complex', 761, 4, False)
        # Assigning a type to the variable 'self' (line 762)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 762, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_besseli_complex')
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_besseli_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_besseli_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_besseli_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_besseli_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 762)
        # Processing the call arguments (line 762)

        @norecursion
        def _stypy_temp_lambda_365(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_365'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_365', 762, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_365.stypy_localization = localization
            _stypy_temp_lambda_365.stypy_type_of_self = None
            _stypy_temp_lambda_365.stypy_type_store = module_type_store
            _stypy_temp_lambda_365.stypy_function_name = '_stypy_temp_lambda_365'
            _stypy_temp_lambda_365.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_365.stypy_varargs_param_name = None
            _stypy_temp_lambda_365.stypy_kwargs_param_name = None
            _stypy_temp_lambda_365.stypy_call_defaults = defaults
            _stypy_temp_lambda_365.stypy_call_varargs = varargs
            _stypy_temp_lambda_365.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_365', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_365', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to iv(...): (line 762)
            # Processing the call arguments (line 762)
            # Getting the type of 'v' (line 762)
            v_546233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 47), 'v', False)
            # Obtaining the member 'real' of a type (line 762)
            real_546234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 762, 47), v_546233, 'real')
            # Getting the type of 'z' (line 762)
            z_546235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 55), 'z', False)
            # Processing the call keyword arguments (line 762)
            kwargs_546236 = {}
            # Getting the type of 'sc' (line 762)
            sc_546231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 41), 'sc', False)
            # Obtaining the member 'iv' of a type (line 762)
            iv_546232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 762, 41), sc_546231, 'iv')
            # Calling iv(args, kwargs) (line 762)
            iv_call_result_546237 = invoke(stypy.reporting.localization.Localization(__file__, 762, 41), iv_546232, *[real_546234, z_546235], **kwargs_546236)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 762)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 762, 28), 'stypy_return_type', iv_call_result_546237)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_365' in the type store
            # Getting the type of 'stypy_return_type' (line 762)
            stypy_return_type_546238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546238)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_365'
            return stypy_return_type_546238

        # Assigning a type to the variable '_stypy_temp_lambda_365' (line 762)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 762, 28), '_stypy_temp_lambda_365', _stypy_temp_lambda_365)
        # Getting the type of '_stypy_temp_lambda_365' (line 762)
        _stypy_temp_lambda_365_546239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 28), '_stypy_temp_lambda_365')
        
        # Call to exception_to_nan(...): (line 763)
        # Processing the call arguments (line 763)

        @norecursion
        def _stypy_temp_lambda_366(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_366'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_366', 763, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_366.stypy_localization = localization
            _stypy_temp_lambda_366.stypy_type_of_self = None
            _stypy_temp_lambda_366.stypy_type_store = module_type_store
            _stypy_temp_lambda_366.stypy_function_name = '_stypy_temp_lambda_366'
            _stypy_temp_lambda_366.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_366.stypy_varargs_param_name = None
            _stypy_temp_lambda_366.stypy_kwargs_param_name = None
            _stypy_temp_lambda_366.stypy_call_defaults = defaults
            _stypy_temp_lambda_366.stypy_call_varargs = varargs
            _stypy_temp_lambda_366.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_366', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_366', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to besseli(...): (line 763)
            # Processing the call arguments (line 763)
            # Getting the type of 'v' (line 763)
            v_546243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 73), 'v', False)
            # Getting the type of 'z' (line 763)
            z_546244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 76), 'z', False)
            # Processing the call keyword arguments (line 763)
            # Getting the type of 'HYPERKW' (line 763)
            HYPERKW_546245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 81), 'HYPERKW', False)
            kwargs_546246 = {'HYPERKW_546245': HYPERKW_546245}
            # Getting the type of 'mpmath' (line 763)
            mpmath_546241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 58), 'mpmath', False)
            # Obtaining the member 'besseli' of a type (line 763)
            besseli_546242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 58), mpmath_546241, 'besseli')
            # Calling besseli(args, kwargs) (line 763)
            besseli_call_result_546247 = invoke(stypy.reporting.localization.Localization(__file__, 763, 58), besseli_546242, *[v_546243, z_546244], **kwargs_546246)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 763)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 45), 'stypy_return_type', besseli_call_result_546247)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_366' in the type store
            # Getting the type of 'stypy_return_type' (line 763)
            stypy_return_type_546248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546248)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_366'
            return stypy_return_type_546248

        # Assigning a type to the variable '_stypy_temp_lambda_366' (line 763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 45), '_stypy_temp_lambda_366', _stypy_temp_lambda_366)
        # Getting the type of '_stypy_temp_lambda_366' (line 763)
        _stypy_temp_lambda_366_546249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 45), '_stypy_temp_lambda_366')
        # Processing the call keyword arguments (line 763)
        kwargs_546250 = {}
        # Getting the type of 'exception_to_nan' (line 763)
        exception_to_nan_546240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 763)
        exception_to_nan_call_result_546251 = invoke(stypy.reporting.localization.Localization(__file__, 763, 28), exception_to_nan_546240, *[_stypy_temp_lambda_366_546249], **kwargs_546250)
        
        
        # Obtaining an instance of the builtin type 'list' (line 764)
        list_546252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 764, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 764)
        # Adding element type (line 764)
        
        # Call to Arg(...): (line 764)
        # Processing the call arguments (line 764)
        float_546254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 764, 33), 'float')
        float_546255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 764, 41), 'float')
        # Processing the call keyword arguments (line 764)
        kwargs_546256 = {}
        # Getting the type of 'Arg' (line 764)
        Arg_546253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 764)
        Arg_call_result_546257 = invoke(stypy.reporting.localization.Localization(__file__, 764, 29), Arg_546253, *[float_546254, float_546255], **kwargs_546256)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 764, 28), list_546252, Arg_call_result_546257)
        # Adding element type (line 764)
        
        # Call to ComplexArg(...): (line 764)
        # Processing the call keyword arguments (line 764)
        kwargs_546259 = {}
        # Getting the type of 'ComplexArg' (line 764)
        ComplexArg_546258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 49), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 764)
        ComplexArg_call_result_546260 = invoke(stypy.reporting.localization.Localization(__file__, 764, 49), ComplexArg_546258, *[], **kwargs_546259)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 764, 28), list_546252, ComplexArg_call_result_546260)
        
        # Processing the call keyword arguments (line 762)
        kwargs_546261 = {}
        # Getting the type of 'assert_mpmath_equal' (line 762)
        assert_mpmath_equal_546230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 762)
        assert_mpmath_equal_call_result_546262 = invoke(stypy.reporting.localization.Localization(__file__, 762, 8), assert_mpmath_equal_546230, *[_stypy_temp_lambda_365_546239, exception_to_nan_call_result_546251, list_546252], **kwargs_546261)
        
        
        # ################# End of 'test_besseli_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_besseli_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 761)
        stypy_return_type_546263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546263)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_besseli_complex'
        return stypy_return_type_546263


    @norecursion
    def test_besselj(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_besselj'
        module_type_store = module_type_store.open_function_context('test_besselj', 766, 4, False)
        # Assigning a type to the variable 'self' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_besselj')
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_besselj.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_besselj', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_besselj', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_besselj(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 767)
        # Processing the call arguments (line 767)
        # Getting the type of 'sc' (line 767)
        sc_546265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 28), 'sc', False)
        # Obtaining the member 'jv' of a type (line 767)
        jv_546266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 28), sc_546265, 'jv')
        
        # Call to exception_to_nan(...): (line 768)
        # Processing the call arguments (line 768)

        @norecursion
        def _stypy_temp_lambda_367(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_367'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_367', 768, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_367.stypy_localization = localization
            _stypy_temp_lambda_367.stypy_type_of_self = None
            _stypy_temp_lambda_367.stypy_type_store = module_type_store
            _stypy_temp_lambda_367.stypy_function_name = '_stypy_temp_lambda_367'
            _stypy_temp_lambda_367.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_367.stypy_varargs_param_name = None
            _stypy_temp_lambda_367.stypy_kwargs_param_name = None
            _stypy_temp_lambda_367.stypy_call_defaults = defaults
            _stypy_temp_lambda_367.stypy_call_varargs = varargs
            _stypy_temp_lambda_367.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_367', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_367', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to besselj(...): (line 768)
            # Processing the call arguments (line 768)
            # Getting the type of 'v' (line 768)
            v_546270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 73), 'v', False)
            # Getting the type of 'z' (line 768)
            z_546271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 76), 'z', False)
            # Processing the call keyword arguments (line 768)
            # Getting the type of 'HYPERKW' (line 768)
            HYPERKW_546272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 81), 'HYPERKW', False)
            kwargs_546273 = {'HYPERKW_546272': HYPERKW_546272}
            # Getting the type of 'mpmath' (line 768)
            mpmath_546268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 58), 'mpmath', False)
            # Obtaining the member 'besselj' of a type (line 768)
            besselj_546269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 58), mpmath_546268, 'besselj')
            # Calling besselj(args, kwargs) (line 768)
            besselj_call_result_546274 = invoke(stypy.reporting.localization.Localization(__file__, 768, 58), besselj_546269, *[v_546270, z_546271], **kwargs_546273)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 768)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 45), 'stypy_return_type', besselj_call_result_546274)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_367' in the type store
            # Getting the type of 'stypy_return_type' (line 768)
            stypy_return_type_546275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546275)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_367'
            return stypy_return_type_546275

        # Assigning a type to the variable '_stypy_temp_lambda_367' (line 768)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 45), '_stypy_temp_lambda_367', _stypy_temp_lambda_367)
        # Getting the type of '_stypy_temp_lambda_367' (line 768)
        _stypy_temp_lambda_367_546276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 45), '_stypy_temp_lambda_367')
        # Processing the call keyword arguments (line 768)
        kwargs_546277 = {}
        # Getting the type of 'exception_to_nan' (line 768)
        exception_to_nan_546267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 768)
        exception_to_nan_call_result_546278 = invoke(stypy.reporting.localization.Localization(__file__, 768, 28), exception_to_nan_546267, *[_stypy_temp_lambda_367_546276], **kwargs_546277)
        
        
        # Obtaining an instance of the builtin type 'list' (line 769)
        list_546279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 769)
        # Adding element type (line 769)
        
        # Call to Arg(...): (line 769)
        # Processing the call arguments (line 769)
        float_546281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 33), 'float')
        float_546282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 41), 'float')
        # Processing the call keyword arguments (line 769)
        kwargs_546283 = {}
        # Getting the type of 'Arg' (line 769)
        Arg_546280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 769)
        Arg_call_result_546284 = invoke(stypy.reporting.localization.Localization(__file__, 769, 29), Arg_546280, *[float_546281, float_546282], **kwargs_546283)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 769, 28), list_546279, Arg_call_result_546284)
        # Adding element type (line 769)
        
        # Call to Arg(...): (line 769)
        # Processing the call arguments (line 769)
        float_546286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 53), 'float')
        float_546287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 59), 'float')
        # Processing the call keyword arguments (line 769)
        kwargs_546288 = {}
        # Getting the type of 'Arg' (line 769)
        Arg_546285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 49), 'Arg', False)
        # Calling Arg(args, kwargs) (line 769)
        Arg_call_result_546289 = invoke(stypy.reporting.localization.Localization(__file__, 769, 49), Arg_546285, *[float_546286, float_546287], **kwargs_546288)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 769, 28), list_546279, Arg_call_result_546289)
        
        # Processing the call keyword arguments (line 767)
        # Getting the type of 'True' (line 770)
        True_546290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 44), 'True', False)
        keyword_546291 = True_546290
        kwargs_546292 = {'ignore_inf_sign': keyword_546291}
        # Getting the type of 'assert_mpmath_equal' (line 767)
        assert_mpmath_equal_546264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 767)
        assert_mpmath_equal_call_result_546293 = invoke(stypy.reporting.localization.Localization(__file__, 767, 8), assert_mpmath_equal_546264, *[jv_546266, exception_to_nan_call_result_546278, list_546279], **kwargs_546292)
        
        
        # Call to assert_mpmath_equal(...): (line 773)
        # Processing the call arguments (line 773)
        # Getting the type of 'sc' (line 773)
        sc_546295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 28), 'sc', False)
        # Obtaining the member 'jv' of a type (line 773)
        jv_546296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 28), sc_546295, 'jv')
        
        # Call to exception_to_nan(...): (line 774)
        # Processing the call arguments (line 774)

        @norecursion
        def _stypy_temp_lambda_368(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_368'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_368', 774, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_368.stypy_localization = localization
            _stypy_temp_lambda_368.stypy_type_of_self = None
            _stypy_temp_lambda_368.stypy_type_store = module_type_store
            _stypy_temp_lambda_368.stypy_function_name = '_stypy_temp_lambda_368'
            _stypy_temp_lambda_368.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_368.stypy_varargs_param_name = None
            _stypy_temp_lambda_368.stypy_kwargs_param_name = None
            _stypy_temp_lambda_368.stypy_call_defaults = defaults
            _stypy_temp_lambda_368.stypy_call_varargs = varargs
            _stypy_temp_lambda_368.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_368', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_368', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to besselj(...): (line 774)
            # Processing the call arguments (line 774)
            # Getting the type of 'v' (line 774)
            v_546300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 73), 'v', False)
            # Getting the type of 'z' (line 774)
            z_546301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 76), 'z', False)
            # Processing the call keyword arguments (line 774)
            # Getting the type of 'HYPERKW' (line 774)
            HYPERKW_546302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 81), 'HYPERKW', False)
            kwargs_546303 = {'HYPERKW_546302': HYPERKW_546302}
            # Getting the type of 'mpmath' (line 774)
            mpmath_546298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 58), 'mpmath', False)
            # Obtaining the member 'besselj' of a type (line 774)
            besselj_546299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 58), mpmath_546298, 'besselj')
            # Calling besselj(args, kwargs) (line 774)
            besselj_call_result_546304 = invoke(stypy.reporting.localization.Localization(__file__, 774, 58), besselj_546299, *[v_546300, z_546301], **kwargs_546303)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 774)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 45), 'stypy_return_type', besselj_call_result_546304)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_368' in the type store
            # Getting the type of 'stypy_return_type' (line 774)
            stypy_return_type_546305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546305)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_368'
            return stypy_return_type_546305

        # Assigning a type to the variable '_stypy_temp_lambda_368' (line 774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 45), '_stypy_temp_lambda_368', _stypy_temp_lambda_368)
        # Getting the type of '_stypy_temp_lambda_368' (line 774)
        _stypy_temp_lambda_368_546306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 45), '_stypy_temp_lambda_368')
        # Processing the call keyword arguments (line 774)
        kwargs_546307 = {}
        # Getting the type of 'exception_to_nan' (line 774)
        exception_to_nan_546297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 774)
        exception_to_nan_call_result_546308 = invoke(stypy.reporting.localization.Localization(__file__, 774, 28), exception_to_nan_546297, *[_stypy_temp_lambda_368_546306], **kwargs_546307)
        
        
        # Obtaining an instance of the builtin type 'list' (line 775)
        list_546309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 775)
        # Adding element type (line 775)
        
        # Call to Arg(...): (line 775)
        # Processing the call arguments (line 775)
        float_546311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 33), 'float')
        float_546312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 41), 'float')
        # Processing the call keyword arguments (line 775)
        kwargs_546313 = {}
        # Getting the type of 'Arg' (line 775)
        Arg_546310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 775)
        Arg_call_result_546314 = invoke(stypy.reporting.localization.Localization(__file__, 775, 29), Arg_546310, *[float_546311, float_546312], **kwargs_546313)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 775, 28), list_546309, Arg_call_result_546314)
        # Adding element type (line 775)
        
        # Call to Arg(...): (line 775)
        # Processing the call arguments (line 775)
        float_546316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 53), 'float')
        float_546317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 59), 'float')
        # Processing the call keyword arguments (line 775)
        kwargs_546318 = {}
        # Getting the type of 'Arg' (line 775)
        Arg_546315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 49), 'Arg', False)
        # Calling Arg(args, kwargs) (line 775)
        Arg_call_result_546319 = invoke(stypy.reporting.localization.Localization(__file__, 775, 49), Arg_546315, *[float_546316, float_546317], **kwargs_546318)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 775, 28), list_546309, Arg_call_result_546319)
        
        # Processing the call keyword arguments (line 773)
        # Getting the type of 'True' (line 776)
        True_546320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 44), 'True', False)
        keyword_546321 = True_546320
        float_546322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 33), 'float')
        keyword_546323 = float_546322
        kwargs_546324 = {'rtol': keyword_546323, 'ignore_inf_sign': keyword_546321}
        # Getting the type of 'assert_mpmath_equal' (line 773)
        assert_mpmath_equal_546294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 773)
        assert_mpmath_equal_call_result_546325 = invoke(stypy.reporting.localization.Localization(__file__, 773, 8), assert_mpmath_equal_546294, *[jv_546296, exception_to_nan_call_result_546308, list_546309], **kwargs_546324)
        
        
        # ################# End of 'test_besselj(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_besselj' in the type store
        # Getting the type of 'stypy_return_type' (line 766)
        stypy_return_type_546326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546326)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_besselj'
        return stypy_return_type_546326


    @norecursion
    def test_besselj_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_besselj_complex'
        module_type_store = module_type_store.open_function_context('test_besselj_complex', 779, 4, False)
        # Assigning a type to the variable 'self' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_besselj_complex')
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_besselj_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_besselj_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_besselj_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_besselj_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 780)
        # Processing the call arguments (line 780)

        @norecursion
        def _stypy_temp_lambda_369(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_369'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_369', 780, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_369.stypy_localization = localization
            _stypy_temp_lambda_369.stypy_type_of_self = None
            _stypy_temp_lambda_369.stypy_type_store = module_type_store
            _stypy_temp_lambda_369.stypy_function_name = '_stypy_temp_lambda_369'
            _stypy_temp_lambda_369.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_369.stypy_varargs_param_name = None
            _stypy_temp_lambda_369.stypy_kwargs_param_name = None
            _stypy_temp_lambda_369.stypy_call_defaults = defaults
            _stypy_temp_lambda_369.stypy_call_varargs = varargs
            _stypy_temp_lambda_369.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_369', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_369', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to jv(...): (line 780)
            # Processing the call arguments (line 780)
            # Getting the type of 'v' (line 780)
            v_546330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 47), 'v', False)
            # Obtaining the member 'real' of a type (line 780)
            real_546331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 47), v_546330, 'real')
            # Getting the type of 'z' (line 780)
            z_546332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 55), 'z', False)
            # Processing the call keyword arguments (line 780)
            kwargs_546333 = {}
            # Getting the type of 'sc' (line 780)
            sc_546328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 41), 'sc', False)
            # Obtaining the member 'jv' of a type (line 780)
            jv_546329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 41), sc_546328, 'jv')
            # Calling jv(args, kwargs) (line 780)
            jv_call_result_546334 = invoke(stypy.reporting.localization.Localization(__file__, 780, 41), jv_546329, *[real_546331, z_546332], **kwargs_546333)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 780)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 28), 'stypy_return_type', jv_call_result_546334)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_369' in the type store
            # Getting the type of 'stypy_return_type' (line 780)
            stypy_return_type_546335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546335)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_369'
            return stypy_return_type_546335

        # Assigning a type to the variable '_stypy_temp_lambda_369' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 28), '_stypy_temp_lambda_369', _stypy_temp_lambda_369)
        # Getting the type of '_stypy_temp_lambda_369' (line 780)
        _stypy_temp_lambda_369_546336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 28), '_stypy_temp_lambda_369')
        
        # Call to exception_to_nan(...): (line 781)
        # Processing the call arguments (line 781)

        @norecursion
        def _stypy_temp_lambda_370(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_370'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_370', 781, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_370.stypy_localization = localization
            _stypy_temp_lambda_370.stypy_type_of_self = None
            _stypy_temp_lambda_370.stypy_type_store = module_type_store
            _stypy_temp_lambda_370.stypy_function_name = '_stypy_temp_lambda_370'
            _stypy_temp_lambda_370.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_370.stypy_varargs_param_name = None
            _stypy_temp_lambda_370.stypy_kwargs_param_name = None
            _stypy_temp_lambda_370.stypy_call_defaults = defaults
            _stypy_temp_lambda_370.stypy_call_varargs = varargs
            _stypy_temp_lambda_370.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_370', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_370', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to besselj(...): (line 781)
            # Processing the call arguments (line 781)
            # Getting the type of 'v' (line 781)
            v_546340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 73), 'v', False)
            # Getting the type of 'z' (line 781)
            z_546341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 76), 'z', False)
            # Processing the call keyword arguments (line 781)
            # Getting the type of 'HYPERKW' (line 781)
            HYPERKW_546342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 81), 'HYPERKW', False)
            kwargs_546343 = {'HYPERKW_546342': HYPERKW_546342}
            # Getting the type of 'mpmath' (line 781)
            mpmath_546338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 58), 'mpmath', False)
            # Obtaining the member 'besselj' of a type (line 781)
            besselj_546339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 58), mpmath_546338, 'besselj')
            # Calling besselj(args, kwargs) (line 781)
            besselj_call_result_546344 = invoke(stypy.reporting.localization.Localization(__file__, 781, 58), besselj_546339, *[v_546340, z_546341], **kwargs_546343)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 781)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 45), 'stypy_return_type', besselj_call_result_546344)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_370' in the type store
            # Getting the type of 'stypy_return_type' (line 781)
            stypy_return_type_546345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546345)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_370'
            return stypy_return_type_546345

        # Assigning a type to the variable '_stypy_temp_lambda_370' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 45), '_stypy_temp_lambda_370', _stypy_temp_lambda_370)
        # Getting the type of '_stypy_temp_lambda_370' (line 781)
        _stypy_temp_lambda_370_546346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 45), '_stypy_temp_lambda_370')
        # Processing the call keyword arguments (line 781)
        kwargs_546347 = {}
        # Getting the type of 'exception_to_nan' (line 781)
        exception_to_nan_546337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 781)
        exception_to_nan_call_result_546348 = invoke(stypy.reporting.localization.Localization(__file__, 781, 28), exception_to_nan_546337, *[_stypy_temp_lambda_370_546346], **kwargs_546347)
        
        
        # Obtaining an instance of the builtin type 'list' (line 782)
        list_546349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 782)
        # Adding element type (line 782)
        
        # Call to Arg(...): (line 782)
        # Processing the call keyword arguments (line 782)
        kwargs_546351 = {}
        # Getting the type of 'Arg' (line 782)
        Arg_546350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 782)
        Arg_call_result_546352 = invoke(stypy.reporting.localization.Localization(__file__, 782, 29), Arg_546350, *[], **kwargs_546351)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 28), list_546349, Arg_call_result_546352)
        # Adding element type (line 782)
        
        # Call to ComplexArg(...): (line 782)
        # Processing the call keyword arguments (line 782)
        kwargs_546354 = {}
        # Getting the type of 'ComplexArg' (line 782)
        ComplexArg_546353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 36), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 782)
        ComplexArg_call_result_546355 = invoke(stypy.reporting.localization.Localization(__file__, 782, 36), ComplexArg_546353, *[], **kwargs_546354)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 782, 28), list_546349, ComplexArg_call_result_546355)
        
        # Processing the call keyword arguments (line 780)
        kwargs_546356 = {}
        # Getting the type of 'assert_mpmath_equal' (line 780)
        assert_mpmath_equal_546327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 780)
        assert_mpmath_equal_call_result_546357 = invoke(stypy.reporting.localization.Localization(__file__, 780, 8), assert_mpmath_equal_546327, *[_stypy_temp_lambda_369_546336, exception_to_nan_call_result_546348, list_546349], **kwargs_546356)
        
        
        # ################# End of 'test_besselj_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_besselj_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 779)
        stypy_return_type_546358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546358)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_besselj_complex'
        return stypy_return_type_546358


    @norecursion
    def test_besselk(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_besselk'
        module_type_store = module_type_store.open_function_context('test_besselk', 784, 4, False)
        # Assigning a type to the variable 'self' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_besselk')
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_besselk.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_besselk', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_besselk', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_besselk(...)' code ##################


        @norecursion
        def mpbesselk(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mpbesselk'
            module_type_store = module_type_store.open_function_context('mpbesselk', 785, 8, False)
            
            # Passed parameters checking function
            mpbesselk.stypy_localization = localization
            mpbesselk.stypy_type_of_self = None
            mpbesselk.stypy_type_store = module_type_store
            mpbesselk.stypy_function_name = 'mpbesselk'
            mpbesselk.stypy_param_names_list = ['v', 'x']
            mpbesselk.stypy_varargs_param_name = None
            mpbesselk.stypy_kwargs_param_name = None
            mpbesselk.stypy_call_defaults = defaults
            mpbesselk.stypy_call_varargs = varargs
            mpbesselk.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mpbesselk', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mpbesselk', localization, ['v', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mpbesselk(...)' code ##################

            
            # Assigning a Call to a Name (line 786):
            
            # Assigning a Call to a Name (line 786):
            
            # Call to float(...): (line 786)
            # Processing the call arguments (line 786)
            
            # Call to besselk(...): (line 786)
            # Processing the call arguments (line 786)
            # Getting the type of 'v' (line 786)
            v_546362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 37), 'v', False)
            # Getting the type of 'x' (line 786)
            x_546363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 40), 'x', False)
            # Processing the call keyword arguments (line 786)
            # Getting the type of 'HYPERKW' (line 786)
            HYPERKW_546364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 45), 'HYPERKW', False)
            kwargs_546365 = {'HYPERKW_546364': HYPERKW_546364}
            # Getting the type of 'mpmath' (line 786)
            mpmath_546360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 22), 'mpmath', False)
            # Obtaining the member 'besselk' of a type (line 786)
            besselk_546361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 22), mpmath_546360, 'besselk')
            # Calling besselk(args, kwargs) (line 786)
            besselk_call_result_546366 = invoke(stypy.reporting.localization.Localization(__file__, 786, 22), besselk_546361, *[v_546362, x_546363], **kwargs_546365)
            
            # Processing the call keyword arguments (line 786)
            kwargs_546367 = {}
            # Getting the type of 'float' (line 786)
            float_546359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 16), 'float', False)
            # Calling float(args, kwargs) (line 786)
            float_call_result_546368 = invoke(stypy.reporting.localization.Localization(__file__, 786, 16), float_546359, *[besselk_call_result_546366], **kwargs_546367)
            
            # Assigning a type to the variable 'r' (line 786)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'r', float_call_result_546368)
            
            
            
            # Call to abs(...): (line 787)
            # Processing the call arguments (line 787)
            # Getting the type of 'r' (line 787)
            r_546370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 19), 'r', False)
            # Processing the call keyword arguments (line 787)
            kwargs_546371 = {}
            # Getting the type of 'abs' (line 787)
            abs_546369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 787)
            abs_call_result_546372 = invoke(stypy.reporting.localization.Localization(__file__, 787, 15), abs_546369, *[r_546370], **kwargs_546371)
            
            float_546373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 24), 'float')
            # Applying the binary operator '>' (line 787)
            result_gt_546374 = python_operator(stypy.reporting.localization.Localization(__file__, 787, 15), '>', abs_call_result_546372, float_546373)
            
            # Testing the type of an if condition (line 787)
            if_condition_546375 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 787, 12), result_gt_546374)
            # Assigning a type to the variable 'if_condition_546375' (line 787)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 12), 'if_condition_546375', if_condition_546375)
            # SSA begins for if statement (line 787)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 789):
            
            # Assigning a BinOp to a Name (line 789):
            # Getting the type of 'np' (line 789)
            np_546376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 20), 'np')
            # Obtaining the member 'inf' of a type (line 789)
            inf_546377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 789, 20), np_546376, 'inf')
            
            # Call to sign(...): (line 789)
            # Processing the call arguments (line 789)
            # Getting the type of 'r' (line 789)
            r_546380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 37), 'r', False)
            # Processing the call keyword arguments (line 789)
            kwargs_546381 = {}
            # Getting the type of 'np' (line 789)
            np_546378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 29), 'np', False)
            # Obtaining the member 'sign' of a type (line 789)
            sign_546379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 789, 29), np_546378, 'sign')
            # Calling sign(args, kwargs) (line 789)
            sign_call_result_546382 = invoke(stypy.reporting.localization.Localization(__file__, 789, 29), sign_546379, *[r_546380], **kwargs_546381)
            
            # Applying the binary operator '*' (line 789)
            result_mul_546383 = python_operator(stypy.reporting.localization.Localization(__file__, 789, 20), '*', inf_546377, sign_call_result_546382)
            
            # Assigning a type to the variable 'r' (line 789)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 789, 16), 'r', result_mul_546383)
            # SSA join for if statement (line 787)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Evaluating a boolean operation
            
            
            # Call to abs(...): (line 790)
            # Processing the call arguments (line 790)
            # Getting the type of 'v' (line 790)
            v_546385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 19), 'v', False)
            # Processing the call keyword arguments (line 790)
            kwargs_546386 = {}
            # Getting the type of 'abs' (line 790)
            abs_546384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 790)
            abs_call_result_546387 = invoke(stypy.reporting.localization.Localization(__file__, 790, 15), abs_546384, *[v_546385], **kwargs_546386)
            
            
            # Call to abs(...): (line 790)
            # Processing the call arguments (line 790)
            # Getting the type of 'x' (line 790)
            x_546389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 29), 'x', False)
            # Processing the call keyword arguments (line 790)
            kwargs_546390 = {}
            # Getting the type of 'abs' (line 790)
            abs_546388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 25), 'abs', False)
            # Calling abs(args, kwargs) (line 790)
            abs_call_result_546391 = invoke(stypy.reporting.localization.Localization(__file__, 790, 25), abs_546388, *[x_546389], **kwargs_546390)
            
            # Applying the binary operator '==' (line 790)
            result_eq_546392 = python_operator(stypy.reporting.localization.Localization(__file__, 790, 15), '==', abs_call_result_546387, abs_call_result_546391)
            
            
            
            # Call to abs(...): (line 790)
            # Processing the call arguments (line 790)
            # Getting the type of 'r' (line 790)
            r_546394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 40), 'r', False)
            # Processing the call keyword arguments (line 790)
            kwargs_546395 = {}
            # Getting the type of 'abs' (line 790)
            abs_546393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 36), 'abs', False)
            # Calling abs(args, kwargs) (line 790)
            abs_call_result_546396 = invoke(stypy.reporting.localization.Localization(__file__, 790, 36), abs_546393, *[r_546394], **kwargs_546395)
            
            # Getting the type of 'np' (line 790)
            np_546397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 46), 'np')
            # Obtaining the member 'inf' of a type (line 790)
            inf_546398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 46), np_546397, 'inf')
            # Applying the binary operator '==' (line 790)
            result_eq_546399 = python_operator(stypy.reporting.localization.Localization(__file__, 790, 36), '==', abs_call_result_546396, inf_546398)
            
            # Applying the binary operator 'and' (line 790)
            result_and_keyword_546400 = python_operator(stypy.reporting.localization.Localization(__file__, 790, 15), 'and', result_eq_546392, result_eq_546399)
            
            
            # Call to abs(...): (line 790)
            # Processing the call arguments (line 790)
            # Getting the type of 'x' (line 790)
            x_546402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 61), 'x', False)
            # Processing the call keyword arguments (line 790)
            kwargs_546403 = {}
            # Getting the type of 'abs' (line 790)
            abs_546401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 57), 'abs', False)
            # Calling abs(args, kwargs) (line 790)
            abs_call_result_546404 = invoke(stypy.reporting.localization.Localization(__file__, 790, 57), abs_546401, *[x_546402], **kwargs_546403)
            
            int_546405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 790, 66), 'int')
            # Applying the binary operator '>' (line 790)
            result_gt_546406 = python_operator(stypy.reporting.localization.Localization(__file__, 790, 57), '>', abs_call_result_546404, int_546405)
            
            # Applying the binary operator 'and' (line 790)
            result_and_keyword_546407 = python_operator(stypy.reporting.localization.Localization(__file__, 790, 15), 'and', result_and_keyword_546400, result_gt_546406)
            
            # Testing the type of an if condition (line 790)
            if_condition_546408 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 790, 12), result_and_keyword_546407)
            # Assigning a type to the variable 'if_condition_546408' (line 790)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 12), 'if_condition_546408', if_condition_546408)
            # SSA begins for if statement (line 790)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Attribute to a Name (line 793):
            
            # Assigning a Attribute to a Name (line 793):
            # Getting the type of 'mpmath' (line 793)
            mpmath_546409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 26), 'mpmath')
            # Obtaining the member 'mp' of a type (line 793)
            mp_546410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 26), mpmath_546409, 'mp')
            # Obtaining the member 'dps' of a type (line 793)
            dps_546411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 26), mp_546410, 'dps')
            # Assigning a type to the variable 'old_dps' (line 793)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 16), 'old_dps', dps_546411)
            
            # Assigning a Num to a Attribute (line 794):
            
            # Assigning a Num to a Attribute (line 794):
            int_546412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 32), 'int')
            # Getting the type of 'mpmath' (line 794)
            mpmath_546413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 16), 'mpmath')
            # Obtaining the member 'mp' of a type (line 794)
            mp_546414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 16), mpmath_546413, 'mp')
            # Setting the type of the member 'dps' of a type (line 794)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 16), mp_546414, 'dps', int_546412)
            
            # Try-finally block (line 795)
            
            # Assigning a Call to a Name (line 796):
            
            # Assigning a Call to a Name (line 796):
            
            # Call to float(...): (line 796)
            # Processing the call arguments (line 796)
            
            # Call to besselk(...): (line 796)
            # Processing the call arguments (line 796)
            # Getting the type of 'v' (line 796)
            v_546418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 45), 'v', False)
            # Getting the type of 'x' (line 796)
            x_546419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 48), 'x', False)
            # Processing the call keyword arguments (line 796)
            # Getting the type of 'HYPERKW' (line 796)
            HYPERKW_546420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 53), 'HYPERKW', False)
            kwargs_546421 = {'HYPERKW_546420': HYPERKW_546420}
            # Getting the type of 'mpmath' (line 796)
            mpmath_546416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 30), 'mpmath', False)
            # Obtaining the member 'besselk' of a type (line 796)
            besselk_546417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 30), mpmath_546416, 'besselk')
            # Calling besselk(args, kwargs) (line 796)
            besselk_call_result_546422 = invoke(stypy.reporting.localization.Localization(__file__, 796, 30), besselk_546417, *[v_546418, x_546419], **kwargs_546421)
            
            # Processing the call keyword arguments (line 796)
            kwargs_546423 = {}
            # Getting the type of 'float' (line 796)
            float_546415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 24), 'float', False)
            # Calling float(args, kwargs) (line 796)
            float_call_result_546424 = invoke(stypy.reporting.localization.Localization(__file__, 796, 24), float_546415, *[besselk_call_result_546422], **kwargs_546423)
            
            # Assigning a type to the variable 'r' (line 796)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 20), 'r', float_call_result_546424)
            
            # finally branch of the try-finally block (line 795)
            
            # Assigning a Name to a Attribute (line 798):
            
            # Assigning a Name to a Attribute (line 798):
            # Getting the type of 'old_dps' (line 798)
            old_dps_546425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 36), 'old_dps')
            # Getting the type of 'mpmath' (line 798)
            mpmath_546426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 20), 'mpmath')
            # Obtaining the member 'mp' of a type (line 798)
            mp_546427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 20), mpmath_546426, 'mp')
            # Setting the type of the member 'dps' of a type (line 798)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 20), mp_546427, 'dps', old_dps_546425)
            
            # SSA join for if statement (line 790)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'r' (line 799)
            r_546428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 19), 'r')
            # Assigning a type to the variable 'stypy_return_type' (line 799)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 12), 'stypy_return_type', r_546428)
            
            # ################# End of 'mpbesselk(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mpbesselk' in the type store
            # Getting the type of 'stypy_return_type' (line 785)
            stypy_return_type_546429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546429)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mpbesselk'
            return stypy_return_type_546429

        # Assigning a type to the variable 'mpbesselk' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'mpbesselk', mpbesselk)
        
        # Call to assert_mpmath_equal(...): (line 800)
        # Processing the call arguments (line 800)
        # Getting the type of 'sc' (line 800)
        sc_546431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 28), 'sc', False)
        # Obtaining the member 'kv' of a type (line 800)
        kv_546432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 28), sc_546431, 'kv')
        
        # Call to exception_to_nan(...): (line 801)
        # Processing the call arguments (line 801)
        # Getting the type of 'mpbesselk' (line 801)
        mpbesselk_546434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 45), 'mpbesselk', False)
        # Processing the call keyword arguments (line 801)
        kwargs_546435 = {}
        # Getting the type of 'exception_to_nan' (line 801)
        exception_to_nan_546433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 801)
        exception_to_nan_call_result_546436 = invoke(stypy.reporting.localization.Localization(__file__, 801, 28), exception_to_nan_546433, *[mpbesselk_546434], **kwargs_546435)
        
        
        # Obtaining an instance of the builtin type 'list' (line 802)
        list_546437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 802)
        # Adding element type (line 802)
        
        # Call to Arg(...): (line 802)
        # Processing the call arguments (line 802)
        float_546439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 33), 'float')
        float_546440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 41), 'float')
        # Processing the call keyword arguments (line 802)
        kwargs_546441 = {}
        # Getting the type of 'Arg' (line 802)
        Arg_546438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 802)
        Arg_call_result_546442 = invoke(stypy.reporting.localization.Localization(__file__, 802, 29), Arg_546438, *[float_546439, float_546440], **kwargs_546441)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 28), list_546437, Arg_call_result_546442)
        # Adding element type (line 802)
        
        # Call to Arg(...): (line 802)
        # Processing the call keyword arguments (line 802)
        kwargs_546444 = {}
        # Getting the type of 'Arg' (line 802)
        Arg_546443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 49), 'Arg', False)
        # Calling Arg(args, kwargs) (line 802)
        Arg_call_result_546445 = invoke(stypy.reporting.localization.Localization(__file__, 802, 49), Arg_546443, *[], **kwargs_546444)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 802, 28), list_546437, Arg_call_result_546445)
        
        # Processing the call keyword arguments (line 800)
        kwargs_546446 = {}
        # Getting the type of 'assert_mpmath_equal' (line 800)
        assert_mpmath_equal_546430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 800)
        assert_mpmath_equal_call_result_546447 = invoke(stypy.reporting.localization.Localization(__file__, 800, 8), assert_mpmath_equal_546430, *[kv_546432, exception_to_nan_call_result_546436, list_546437], **kwargs_546446)
        
        
        # ################# End of 'test_besselk(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_besselk' in the type store
        # Getting the type of 'stypy_return_type' (line 784)
        stypy_return_type_546448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546448)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_besselk'
        return stypy_return_type_546448


    @norecursion
    def test_besselk_int(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_besselk_int'
        module_type_store = module_type_store.open_function_context('test_besselk_int', 804, 4, False)
        # Assigning a type to the variable 'self' (line 805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_besselk_int')
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_besselk_int.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_besselk_int', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_besselk_int', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_besselk_int(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 805)
        # Processing the call arguments (line 805)
        # Getting the type of 'sc' (line 805)
        sc_546450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 28), 'sc', False)
        # Obtaining the member 'kn' of a type (line 805)
        kn_546451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 28), sc_546450, 'kn')
        
        # Call to exception_to_nan(...): (line 806)
        # Processing the call arguments (line 806)

        @norecursion
        def _stypy_temp_lambda_371(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_371'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_371', 806, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_371.stypy_localization = localization
            _stypy_temp_lambda_371.stypy_type_of_self = None
            _stypy_temp_lambda_371.stypy_type_store = module_type_store
            _stypy_temp_lambda_371.stypy_function_name = '_stypy_temp_lambda_371'
            _stypy_temp_lambda_371.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_371.stypy_varargs_param_name = None
            _stypy_temp_lambda_371.stypy_kwargs_param_name = None
            _stypy_temp_lambda_371.stypy_call_defaults = defaults
            _stypy_temp_lambda_371.stypy_call_varargs = varargs
            _stypy_temp_lambda_371.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_371', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_371', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to besselk(...): (line 806)
            # Processing the call arguments (line 806)
            # Getting the type of 'v' (line 806)
            v_546455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 73), 'v', False)
            # Getting the type of 'z' (line 806)
            z_546456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 76), 'z', False)
            # Processing the call keyword arguments (line 806)
            # Getting the type of 'HYPERKW' (line 806)
            HYPERKW_546457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 81), 'HYPERKW', False)
            kwargs_546458 = {'HYPERKW_546457': HYPERKW_546457}
            # Getting the type of 'mpmath' (line 806)
            mpmath_546453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 58), 'mpmath', False)
            # Obtaining the member 'besselk' of a type (line 806)
            besselk_546454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 58), mpmath_546453, 'besselk')
            # Calling besselk(args, kwargs) (line 806)
            besselk_call_result_546459 = invoke(stypy.reporting.localization.Localization(__file__, 806, 58), besselk_546454, *[v_546455, z_546456], **kwargs_546458)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 806)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 45), 'stypy_return_type', besselk_call_result_546459)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_371' in the type store
            # Getting the type of 'stypy_return_type' (line 806)
            stypy_return_type_546460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546460)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_371'
            return stypy_return_type_546460

        # Assigning a type to the variable '_stypy_temp_lambda_371' (line 806)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 45), '_stypy_temp_lambda_371', _stypy_temp_lambda_371)
        # Getting the type of '_stypy_temp_lambda_371' (line 806)
        _stypy_temp_lambda_371_546461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 45), '_stypy_temp_lambda_371')
        # Processing the call keyword arguments (line 806)
        kwargs_546462 = {}
        # Getting the type of 'exception_to_nan' (line 806)
        exception_to_nan_546452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 806)
        exception_to_nan_call_result_546463 = invoke(stypy.reporting.localization.Localization(__file__, 806, 28), exception_to_nan_546452, *[_stypy_temp_lambda_371_546461], **kwargs_546462)
        
        
        # Obtaining an instance of the builtin type 'list' (line 807)
        list_546464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 807)
        # Adding element type (line 807)
        
        # Call to IntArg(...): (line 807)
        # Processing the call arguments (line 807)
        int_546466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 36), 'int')
        int_546467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 43), 'int')
        # Processing the call keyword arguments (line 807)
        kwargs_546468 = {}
        # Getting the type of 'IntArg' (line 807)
        IntArg_546465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 807)
        IntArg_call_result_546469 = invoke(stypy.reporting.localization.Localization(__file__, 807, 29), IntArg_546465, *[int_546466, int_546467], **kwargs_546468)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 807, 28), list_546464, IntArg_call_result_546469)
        # Adding element type (line 807)
        
        # Call to Arg(...): (line 807)
        # Processing the call keyword arguments (line 807)
        kwargs_546471 = {}
        # Getting the type of 'Arg' (line 807)
        Arg_546470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 50), 'Arg', False)
        # Calling Arg(args, kwargs) (line 807)
        Arg_call_result_546472 = invoke(stypy.reporting.localization.Localization(__file__, 807, 50), Arg_546470, *[], **kwargs_546471)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 807, 28), list_546464, Arg_call_result_546472)
        
        # Processing the call keyword arguments (line 805)
        kwargs_546473 = {}
        # Getting the type of 'assert_mpmath_equal' (line 805)
        assert_mpmath_equal_546449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 805)
        assert_mpmath_equal_call_result_546474 = invoke(stypy.reporting.localization.Localization(__file__, 805, 8), assert_mpmath_equal_546449, *[kn_546451, exception_to_nan_call_result_546463, list_546464], **kwargs_546473)
        
        
        # ################# End of 'test_besselk_int(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_besselk_int' in the type store
        # Getting the type of 'stypy_return_type' (line 804)
        stypy_return_type_546475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546475)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_besselk_int'
        return stypy_return_type_546475


    @norecursion
    def test_besselk_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_besselk_complex'
        module_type_store = module_type_store.open_function_context('test_besselk_complex', 809, 4, False)
        # Assigning a type to the variable 'self' (line 810)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_besselk_complex')
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_besselk_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_besselk_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_besselk_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_besselk_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 810)
        # Processing the call arguments (line 810)

        @norecursion
        def _stypy_temp_lambda_372(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_372'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_372', 810, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_372.stypy_localization = localization
            _stypy_temp_lambda_372.stypy_type_of_self = None
            _stypy_temp_lambda_372.stypy_type_store = module_type_store
            _stypy_temp_lambda_372.stypy_function_name = '_stypy_temp_lambda_372'
            _stypy_temp_lambda_372.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_372.stypy_varargs_param_name = None
            _stypy_temp_lambda_372.stypy_kwargs_param_name = None
            _stypy_temp_lambda_372.stypy_call_defaults = defaults
            _stypy_temp_lambda_372.stypy_call_varargs = varargs
            _stypy_temp_lambda_372.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_372', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_372', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to kv(...): (line 810)
            # Processing the call arguments (line 810)
            # Getting the type of 'v' (line 810)
            v_546479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 47), 'v', False)
            # Obtaining the member 'real' of a type (line 810)
            real_546480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 47), v_546479, 'real')
            # Getting the type of 'z' (line 810)
            z_546481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 55), 'z', False)
            # Processing the call keyword arguments (line 810)
            kwargs_546482 = {}
            # Getting the type of 'sc' (line 810)
            sc_546477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 41), 'sc', False)
            # Obtaining the member 'kv' of a type (line 810)
            kv_546478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 41), sc_546477, 'kv')
            # Calling kv(args, kwargs) (line 810)
            kv_call_result_546483 = invoke(stypy.reporting.localization.Localization(__file__, 810, 41), kv_546478, *[real_546480, z_546481], **kwargs_546482)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 810)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 28), 'stypy_return_type', kv_call_result_546483)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_372' in the type store
            # Getting the type of 'stypy_return_type' (line 810)
            stypy_return_type_546484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546484)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_372'
            return stypy_return_type_546484

        # Assigning a type to the variable '_stypy_temp_lambda_372' (line 810)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 28), '_stypy_temp_lambda_372', _stypy_temp_lambda_372)
        # Getting the type of '_stypy_temp_lambda_372' (line 810)
        _stypy_temp_lambda_372_546485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 28), '_stypy_temp_lambda_372')
        
        # Call to exception_to_nan(...): (line 811)
        # Processing the call arguments (line 811)

        @norecursion
        def _stypy_temp_lambda_373(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_373'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_373', 811, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_373.stypy_localization = localization
            _stypy_temp_lambda_373.stypy_type_of_self = None
            _stypy_temp_lambda_373.stypy_type_store = module_type_store
            _stypy_temp_lambda_373.stypy_function_name = '_stypy_temp_lambda_373'
            _stypy_temp_lambda_373.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_373.stypy_varargs_param_name = None
            _stypy_temp_lambda_373.stypy_kwargs_param_name = None
            _stypy_temp_lambda_373.stypy_call_defaults = defaults
            _stypy_temp_lambda_373.stypy_call_varargs = varargs
            _stypy_temp_lambda_373.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_373', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_373', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to besselk(...): (line 811)
            # Processing the call arguments (line 811)
            # Getting the type of 'v' (line 811)
            v_546489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 73), 'v', False)
            # Getting the type of 'z' (line 811)
            z_546490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 76), 'z', False)
            # Processing the call keyword arguments (line 811)
            # Getting the type of 'HYPERKW' (line 811)
            HYPERKW_546491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 81), 'HYPERKW', False)
            kwargs_546492 = {'HYPERKW_546491': HYPERKW_546491}
            # Getting the type of 'mpmath' (line 811)
            mpmath_546487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 58), 'mpmath', False)
            # Obtaining the member 'besselk' of a type (line 811)
            besselk_546488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 58), mpmath_546487, 'besselk')
            # Calling besselk(args, kwargs) (line 811)
            besselk_call_result_546493 = invoke(stypy.reporting.localization.Localization(__file__, 811, 58), besselk_546488, *[v_546489, z_546490], **kwargs_546492)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 811)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 45), 'stypy_return_type', besselk_call_result_546493)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_373' in the type store
            # Getting the type of 'stypy_return_type' (line 811)
            stypy_return_type_546494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546494)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_373'
            return stypy_return_type_546494

        # Assigning a type to the variable '_stypy_temp_lambda_373' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 45), '_stypy_temp_lambda_373', _stypy_temp_lambda_373)
        # Getting the type of '_stypy_temp_lambda_373' (line 811)
        _stypy_temp_lambda_373_546495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 45), '_stypy_temp_lambda_373')
        # Processing the call keyword arguments (line 811)
        kwargs_546496 = {}
        # Getting the type of 'exception_to_nan' (line 811)
        exception_to_nan_546486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 811)
        exception_to_nan_call_result_546497 = invoke(stypy.reporting.localization.Localization(__file__, 811, 28), exception_to_nan_546486, *[_stypy_temp_lambda_373_546495], **kwargs_546496)
        
        
        # Obtaining an instance of the builtin type 'list' (line 812)
        list_546498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 812)
        # Adding element type (line 812)
        
        # Call to Arg(...): (line 812)
        # Processing the call arguments (line 812)
        float_546500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 33), 'float')
        float_546501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 41), 'float')
        # Processing the call keyword arguments (line 812)
        kwargs_546502 = {}
        # Getting the type of 'Arg' (line 812)
        Arg_546499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 812)
        Arg_call_result_546503 = invoke(stypy.reporting.localization.Localization(__file__, 812, 29), Arg_546499, *[float_546500, float_546501], **kwargs_546502)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 28), list_546498, Arg_call_result_546503)
        # Adding element type (line 812)
        
        # Call to ComplexArg(...): (line 812)
        # Processing the call keyword arguments (line 812)
        kwargs_546505 = {}
        # Getting the type of 'ComplexArg' (line 812)
        ComplexArg_546504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 49), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 812)
        ComplexArg_call_result_546506 = invoke(stypy.reporting.localization.Localization(__file__, 812, 49), ComplexArg_546504, *[], **kwargs_546505)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 28), list_546498, ComplexArg_call_result_546506)
        
        # Processing the call keyword arguments (line 810)
        kwargs_546507 = {}
        # Getting the type of 'assert_mpmath_equal' (line 810)
        assert_mpmath_equal_546476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 810)
        assert_mpmath_equal_call_result_546508 = invoke(stypy.reporting.localization.Localization(__file__, 810, 8), assert_mpmath_equal_546476, *[_stypy_temp_lambda_372_546485, exception_to_nan_call_result_546497, list_546498], **kwargs_546507)
        
        
        # ################# End of 'test_besselk_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_besselk_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 809)
        stypy_return_type_546509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546509)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_besselk_complex'
        return stypy_return_type_546509


    @norecursion
    def test_bessely(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_bessely'
        module_type_store = module_type_store.open_function_context('test_bessely', 814, 4, False)
        # Assigning a type to the variable 'self' (line 815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_bessely')
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_bessely.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_bessely', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_bessely', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_bessely(...)' code ##################


        @norecursion
        def mpbessely(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mpbessely'
            module_type_store = module_type_store.open_function_context('mpbessely', 815, 8, False)
            
            # Passed parameters checking function
            mpbessely.stypy_localization = localization
            mpbessely.stypy_type_of_self = None
            mpbessely.stypy_type_store = module_type_store
            mpbessely.stypy_function_name = 'mpbessely'
            mpbessely.stypy_param_names_list = ['v', 'x']
            mpbessely.stypy_varargs_param_name = None
            mpbessely.stypy_kwargs_param_name = None
            mpbessely.stypy_call_defaults = defaults
            mpbessely.stypy_call_varargs = varargs
            mpbessely.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mpbessely', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mpbessely', localization, ['v', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mpbessely(...)' code ##################

            
            # Assigning a Call to a Name (line 816):
            
            # Assigning a Call to a Name (line 816):
            
            # Call to float(...): (line 816)
            # Processing the call arguments (line 816)
            
            # Call to bessely(...): (line 816)
            # Processing the call arguments (line 816)
            # Getting the type of 'v' (line 816)
            v_546513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 37), 'v', False)
            # Getting the type of 'x' (line 816)
            x_546514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 40), 'x', False)
            # Processing the call keyword arguments (line 816)
            # Getting the type of 'HYPERKW' (line 816)
            HYPERKW_546515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 45), 'HYPERKW', False)
            kwargs_546516 = {'HYPERKW_546515': HYPERKW_546515}
            # Getting the type of 'mpmath' (line 816)
            mpmath_546511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 22), 'mpmath', False)
            # Obtaining the member 'bessely' of a type (line 816)
            bessely_546512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 22), mpmath_546511, 'bessely')
            # Calling bessely(args, kwargs) (line 816)
            bessely_call_result_546517 = invoke(stypy.reporting.localization.Localization(__file__, 816, 22), bessely_546512, *[v_546513, x_546514], **kwargs_546516)
            
            # Processing the call keyword arguments (line 816)
            kwargs_546518 = {}
            # Getting the type of 'float' (line 816)
            float_546510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 16), 'float', False)
            # Calling float(args, kwargs) (line 816)
            float_call_result_546519 = invoke(stypy.reporting.localization.Localization(__file__, 816, 16), float_546510, *[bessely_call_result_546517], **kwargs_546518)
            
            # Assigning a type to the variable 'r' (line 816)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'r', float_call_result_546519)
            
            
            
            # Call to abs(...): (line 817)
            # Processing the call arguments (line 817)
            # Getting the type of 'r' (line 817)
            r_546521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 19), 'r', False)
            # Processing the call keyword arguments (line 817)
            kwargs_546522 = {}
            # Getting the type of 'abs' (line 817)
            abs_546520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 817)
            abs_call_result_546523 = invoke(stypy.reporting.localization.Localization(__file__, 817, 15), abs_546520, *[r_546521], **kwargs_546522)
            
            float_546524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 24), 'float')
            # Applying the binary operator '>' (line 817)
            result_gt_546525 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 15), '>', abs_call_result_546523, float_546524)
            
            # Testing the type of an if condition (line 817)
            if_condition_546526 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 817, 12), result_gt_546525)
            # Assigning a type to the variable 'if_condition_546526' (line 817)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 817, 12), 'if_condition_546526', if_condition_546526)
            # SSA begins for if statement (line 817)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 819):
            
            # Assigning a BinOp to a Name (line 819):
            # Getting the type of 'np' (line 819)
            np_546527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 20), 'np')
            # Obtaining the member 'inf' of a type (line 819)
            inf_546528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 819, 20), np_546527, 'inf')
            
            # Call to sign(...): (line 819)
            # Processing the call arguments (line 819)
            # Getting the type of 'r' (line 819)
            r_546531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 37), 'r', False)
            # Processing the call keyword arguments (line 819)
            kwargs_546532 = {}
            # Getting the type of 'np' (line 819)
            np_546529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 29), 'np', False)
            # Obtaining the member 'sign' of a type (line 819)
            sign_546530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 819, 29), np_546529, 'sign')
            # Calling sign(args, kwargs) (line 819)
            sign_call_result_546533 = invoke(stypy.reporting.localization.Localization(__file__, 819, 29), sign_546530, *[r_546531], **kwargs_546532)
            
            # Applying the binary operator '*' (line 819)
            result_mul_546534 = python_operator(stypy.reporting.localization.Localization(__file__, 819, 20), '*', inf_546528, sign_call_result_546533)
            
            # Assigning a type to the variable 'r' (line 819)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 16), 'r', result_mul_546534)
            # SSA join for if statement (line 817)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Evaluating a boolean operation
            
            
            # Call to abs(...): (line 820)
            # Processing the call arguments (line 820)
            # Getting the type of 'r' (line 820)
            r_546536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 19), 'r', False)
            # Processing the call keyword arguments (line 820)
            kwargs_546537 = {}
            # Getting the type of 'abs' (line 820)
            abs_546535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 820)
            abs_call_result_546538 = invoke(stypy.reporting.localization.Localization(__file__, 820, 15), abs_546535, *[r_546536], **kwargs_546537)
            
            int_546539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 25), 'int')
            # Applying the binary operator '==' (line 820)
            result_eq_546540 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 15), '==', abs_call_result_546538, int_546539)
            
            
            # Getting the type of 'x' (line 820)
            x_546541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 31), 'x')
            int_546542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 36), 'int')
            # Applying the binary operator '==' (line 820)
            result_eq_546543 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 31), '==', x_546541, int_546542)
            
            # Applying the binary operator 'and' (line 820)
            result_and_keyword_546544 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 15), 'and', result_eq_546540, result_eq_546543)
            
            # Testing the type of an if condition (line 820)
            if_condition_546545 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 820, 12), result_and_keyword_546544)
            # Assigning a type to the variable 'if_condition_546545' (line 820)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 12), 'if_condition_546545', if_condition_546545)
            # SSA begins for if statement (line 820)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 822)
            np_546546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 23), 'np')
            # Obtaining the member 'nan' of a type (line 822)
            nan_546547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 23), np_546546, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 822)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 822, 16), 'stypy_return_type', nan_546547)
            # SSA join for if statement (line 820)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'r' (line 823)
            r_546548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 19), 'r')
            # Assigning a type to the variable 'stypy_return_type' (line 823)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 823, 12), 'stypy_return_type', r_546548)
            
            # ################# End of 'mpbessely(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mpbessely' in the type store
            # Getting the type of 'stypy_return_type' (line 815)
            stypy_return_type_546549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546549)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mpbessely'
            return stypy_return_type_546549

        # Assigning a type to the variable 'mpbessely' (line 815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 8), 'mpbessely', mpbessely)
        
        # Call to assert_mpmath_equal(...): (line 824)
        # Processing the call arguments (line 824)
        # Getting the type of 'sc' (line 824)
        sc_546551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 28), 'sc', False)
        # Obtaining the member 'yv' of a type (line 824)
        yv_546552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 824, 28), sc_546551, 'yv')
        
        # Call to exception_to_nan(...): (line 825)
        # Processing the call arguments (line 825)
        # Getting the type of 'mpbessely' (line 825)
        mpbessely_546554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 45), 'mpbessely', False)
        # Processing the call keyword arguments (line 825)
        kwargs_546555 = {}
        # Getting the type of 'exception_to_nan' (line 825)
        exception_to_nan_546553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 825)
        exception_to_nan_call_result_546556 = invoke(stypy.reporting.localization.Localization(__file__, 825, 28), exception_to_nan_546553, *[mpbessely_546554], **kwargs_546555)
        
        
        # Obtaining an instance of the builtin type 'list' (line 826)
        list_546557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 826)
        # Adding element type (line 826)
        
        # Call to Arg(...): (line 826)
        # Processing the call arguments (line 826)
        float_546559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 33), 'float')
        float_546560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 41), 'float')
        # Processing the call keyword arguments (line 826)
        kwargs_546561 = {}
        # Getting the type of 'Arg' (line 826)
        Arg_546558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 826)
        Arg_call_result_546562 = invoke(stypy.reporting.localization.Localization(__file__, 826, 29), Arg_546558, *[float_546559, float_546560], **kwargs_546561)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 28), list_546557, Arg_call_result_546562)
        # Adding element type (line 826)
        
        # Call to Arg(...): (line 826)
        # Processing the call arguments (line 826)
        float_546564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 53), 'float')
        float_546565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 59), 'float')
        # Processing the call keyword arguments (line 826)
        kwargs_546566 = {}
        # Getting the type of 'Arg' (line 826)
        Arg_546563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 49), 'Arg', False)
        # Calling Arg(args, kwargs) (line 826)
        Arg_call_result_546567 = invoke(stypy.reporting.localization.Localization(__file__, 826, 49), Arg_546563, *[float_546564, float_546565], **kwargs_546566)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 28), list_546557, Arg_call_result_546567)
        
        # Processing the call keyword arguments (line 824)
        int_546568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 30), 'int')
        keyword_546569 = int_546568
        kwargs_546570 = {'n': keyword_546569}
        # Getting the type of 'assert_mpmath_equal' (line 824)
        assert_mpmath_equal_546550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 824)
        assert_mpmath_equal_call_result_546571 = invoke(stypy.reporting.localization.Localization(__file__, 824, 8), assert_mpmath_equal_546550, *[yv_546552, exception_to_nan_call_result_546556, list_546557], **kwargs_546570)
        
        
        # ################# End of 'test_bessely(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_bessely' in the type store
        # Getting the type of 'stypy_return_type' (line 814)
        stypy_return_type_546572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546572)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_bessely'
        return stypy_return_type_546572


    @norecursion
    def test_bessely_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_bessely_complex'
        module_type_store = module_type_store.open_function_context('test_bessely_complex', 829, 4, False)
        # Assigning a type to the variable 'self' (line 830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 830, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_bessely_complex')
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_bessely_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_bessely_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_bessely_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_bessely_complex(...)' code ##################


        @norecursion
        def mpbessely(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mpbessely'
            module_type_store = module_type_store.open_function_context('mpbessely', 830, 8, False)
            
            # Passed parameters checking function
            mpbessely.stypy_localization = localization
            mpbessely.stypy_type_of_self = None
            mpbessely.stypy_type_store = module_type_store
            mpbessely.stypy_function_name = 'mpbessely'
            mpbessely.stypy_param_names_list = ['v', 'x']
            mpbessely.stypy_varargs_param_name = None
            mpbessely.stypy_kwargs_param_name = None
            mpbessely.stypy_call_defaults = defaults
            mpbessely.stypy_call_varargs = varargs
            mpbessely.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mpbessely', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mpbessely', localization, ['v', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mpbessely(...)' code ##################

            
            # Assigning a Call to a Name (line 831):
            
            # Assigning a Call to a Name (line 831):
            
            # Call to complex(...): (line 831)
            # Processing the call arguments (line 831)
            
            # Call to bessely(...): (line 831)
            # Processing the call arguments (line 831)
            # Getting the type of 'v' (line 831)
            v_546576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 39), 'v', False)
            # Getting the type of 'x' (line 831)
            x_546577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 42), 'x', False)
            # Processing the call keyword arguments (line 831)
            # Getting the type of 'HYPERKW' (line 831)
            HYPERKW_546578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 47), 'HYPERKW', False)
            kwargs_546579 = {'HYPERKW_546578': HYPERKW_546578}
            # Getting the type of 'mpmath' (line 831)
            mpmath_546574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 24), 'mpmath', False)
            # Obtaining the member 'bessely' of a type (line 831)
            bessely_546575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 24), mpmath_546574, 'bessely')
            # Calling bessely(args, kwargs) (line 831)
            bessely_call_result_546580 = invoke(stypy.reporting.localization.Localization(__file__, 831, 24), bessely_546575, *[v_546576, x_546577], **kwargs_546579)
            
            # Processing the call keyword arguments (line 831)
            kwargs_546581 = {}
            # Getting the type of 'complex' (line 831)
            complex_546573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 16), 'complex', False)
            # Calling complex(args, kwargs) (line 831)
            complex_call_result_546582 = invoke(stypy.reporting.localization.Localization(__file__, 831, 16), complex_546573, *[bessely_call_result_546580], **kwargs_546581)
            
            # Assigning a type to the variable 'r' (line 831)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 12), 'r', complex_call_result_546582)
            
            
            
            # Call to abs(...): (line 832)
            # Processing the call arguments (line 832)
            # Getting the type of 'r' (line 832)
            r_546584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 19), 'r', False)
            # Processing the call keyword arguments (line 832)
            kwargs_546585 = {}
            # Getting the type of 'abs' (line 832)
            abs_546583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 832)
            abs_call_result_546586 = invoke(stypy.reporting.localization.Localization(__file__, 832, 15), abs_546583, *[r_546584], **kwargs_546585)
            
            float_546587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 24), 'float')
            # Applying the binary operator '>' (line 832)
            result_gt_546588 = python_operator(stypy.reporting.localization.Localization(__file__, 832, 15), '>', abs_call_result_546586, float_546587)
            
            # Testing the type of an if condition (line 832)
            if_condition_546589 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 832, 12), result_gt_546588)
            # Assigning a type to the variable 'if_condition_546589' (line 832)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 12), 'if_condition_546589', if_condition_546589)
            # SSA begins for if statement (line 832)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 834):
            
            # Assigning a Call to a Name (line 834):
            
            # Call to seterr(...): (line 834)
            # Processing the call keyword arguments (line 834)
            str_546592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 43), 'str', 'ignore')
            keyword_546593 = str_546592
            kwargs_546594 = {'invalid': keyword_546593}
            # Getting the type of 'np' (line 834)
            np_546590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 25), 'np', False)
            # Obtaining the member 'seterr' of a type (line 834)
            seterr_546591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 25), np_546590, 'seterr')
            # Calling seterr(args, kwargs) (line 834)
            seterr_call_result_546595 = invoke(stypy.reporting.localization.Localization(__file__, 834, 25), seterr_546591, *[], **kwargs_546594)
            
            # Assigning a type to the variable 'olderr' (line 834)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 16), 'olderr', seterr_call_result_546595)
            
            # Try-finally block (line 835)
            
            # Assigning a BinOp to a Name (line 836):
            
            # Assigning a BinOp to a Name (line 836):
            # Getting the type of 'np' (line 836)
            np_546596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 24), 'np')
            # Obtaining the member 'inf' of a type (line 836)
            inf_546597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 24), np_546596, 'inf')
            
            # Call to sign(...): (line 836)
            # Processing the call arguments (line 836)
            # Getting the type of 'r' (line 836)
            r_546600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 41), 'r', False)
            # Processing the call keyword arguments (line 836)
            kwargs_546601 = {}
            # Getting the type of 'np' (line 836)
            np_546598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 33), 'np', False)
            # Obtaining the member 'sign' of a type (line 836)
            sign_546599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 33), np_546598, 'sign')
            # Calling sign(args, kwargs) (line 836)
            sign_call_result_546602 = invoke(stypy.reporting.localization.Localization(__file__, 836, 33), sign_546599, *[r_546600], **kwargs_546601)
            
            # Applying the binary operator '*' (line 836)
            result_mul_546603 = python_operator(stypy.reporting.localization.Localization(__file__, 836, 24), '*', inf_546597, sign_call_result_546602)
            
            # Assigning a type to the variable 'r' (line 836)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 20), 'r', result_mul_546603)
            
            # finally branch of the try-finally block (line 835)
            
            # Call to seterr(...): (line 838)
            # Processing the call keyword arguments (line 838)
            # Getting the type of 'olderr' (line 838)
            olderr_546606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 32), 'olderr', False)
            kwargs_546607 = {'olderr_546606': olderr_546606}
            # Getting the type of 'np' (line 838)
            np_546604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 20), 'np', False)
            # Obtaining the member 'seterr' of a type (line 838)
            seterr_546605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 20), np_546604, 'seterr')
            # Calling seterr(args, kwargs) (line 838)
            seterr_call_result_546608 = invoke(stypy.reporting.localization.Localization(__file__, 838, 20), seterr_546605, *[], **kwargs_546607)
            
            
            # SSA join for if statement (line 832)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'r' (line 839)
            r_546609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 19), 'r')
            # Assigning a type to the variable 'stypy_return_type' (line 839)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 12), 'stypy_return_type', r_546609)
            
            # ################# End of 'mpbessely(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mpbessely' in the type store
            # Getting the type of 'stypy_return_type' (line 830)
            stypy_return_type_546610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546610)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mpbessely'
            return stypy_return_type_546610

        # Assigning a type to the variable 'mpbessely' (line 830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 830, 8), 'mpbessely', mpbessely)
        
        # Call to assert_mpmath_equal(...): (line 840)
        # Processing the call arguments (line 840)

        @norecursion
        def _stypy_temp_lambda_374(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_374'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_374', 840, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_374.stypy_localization = localization
            _stypy_temp_lambda_374.stypy_type_of_self = None
            _stypy_temp_lambda_374.stypy_type_store = module_type_store
            _stypy_temp_lambda_374.stypy_function_name = '_stypy_temp_lambda_374'
            _stypy_temp_lambda_374.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_374.stypy_varargs_param_name = None
            _stypy_temp_lambda_374.stypy_kwargs_param_name = None
            _stypy_temp_lambda_374.stypy_call_defaults = defaults
            _stypy_temp_lambda_374.stypy_call_varargs = varargs
            _stypy_temp_lambda_374.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_374', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_374', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to yv(...): (line 840)
            # Processing the call arguments (line 840)
            # Getting the type of 'v' (line 840)
            v_546614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 47), 'v', False)
            # Obtaining the member 'real' of a type (line 840)
            real_546615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 840, 47), v_546614, 'real')
            # Getting the type of 'z' (line 840)
            z_546616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 55), 'z', False)
            # Processing the call keyword arguments (line 840)
            kwargs_546617 = {}
            # Getting the type of 'sc' (line 840)
            sc_546612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 41), 'sc', False)
            # Obtaining the member 'yv' of a type (line 840)
            yv_546613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 840, 41), sc_546612, 'yv')
            # Calling yv(args, kwargs) (line 840)
            yv_call_result_546618 = invoke(stypy.reporting.localization.Localization(__file__, 840, 41), yv_546613, *[real_546615, z_546616], **kwargs_546617)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 840)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 840, 28), 'stypy_return_type', yv_call_result_546618)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_374' in the type store
            # Getting the type of 'stypy_return_type' (line 840)
            stypy_return_type_546619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546619)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_374'
            return stypy_return_type_546619

        # Assigning a type to the variable '_stypy_temp_lambda_374' (line 840)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 840, 28), '_stypy_temp_lambda_374', _stypy_temp_lambda_374)
        # Getting the type of '_stypy_temp_lambda_374' (line 840)
        _stypy_temp_lambda_374_546620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 28), '_stypy_temp_lambda_374')
        
        # Call to exception_to_nan(...): (line 841)
        # Processing the call arguments (line 841)
        # Getting the type of 'mpbessely' (line 841)
        mpbessely_546622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 45), 'mpbessely', False)
        # Processing the call keyword arguments (line 841)
        kwargs_546623 = {}
        # Getting the type of 'exception_to_nan' (line 841)
        exception_to_nan_546621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 841)
        exception_to_nan_call_result_546624 = invoke(stypy.reporting.localization.Localization(__file__, 841, 28), exception_to_nan_546621, *[mpbessely_546622], **kwargs_546623)
        
        
        # Obtaining an instance of the builtin type 'list' (line 842)
        list_546625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 842)
        # Adding element type (line 842)
        
        # Call to Arg(...): (line 842)
        # Processing the call keyword arguments (line 842)
        kwargs_546627 = {}
        # Getting the type of 'Arg' (line 842)
        Arg_546626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 842)
        Arg_call_result_546628 = invoke(stypy.reporting.localization.Localization(__file__, 842, 29), Arg_546626, *[], **kwargs_546627)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 842, 28), list_546625, Arg_call_result_546628)
        # Adding element type (line 842)
        
        # Call to ComplexArg(...): (line 842)
        # Processing the call keyword arguments (line 842)
        kwargs_546630 = {}
        # Getting the type of 'ComplexArg' (line 842)
        ComplexArg_546629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 36), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 842)
        ComplexArg_call_result_546631 = invoke(stypy.reporting.localization.Localization(__file__, 842, 36), ComplexArg_546629, *[], **kwargs_546630)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 842, 28), list_546625, ComplexArg_call_result_546631)
        
        # Processing the call keyword arguments (line 840)
        int_546632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 30), 'int')
        keyword_546633 = int_546632
        kwargs_546634 = {'n': keyword_546633}
        # Getting the type of 'assert_mpmath_equal' (line 840)
        assert_mpmath_equal_546611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 840)
        assert_mpmath_equal_call_result_546635 = invoke(stypy.reporting.localization.Localization(__file__, 840, 8), assert_mpmath_equal_546611, *[_stypy_temp_lambda_374_546620, exception_to_nan_call_result_546624, list_546625], **kwargs_546634)
        
        
        # ################# End of 'test_bessely_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_bessely_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 829)
        stypy_return_type_546636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546636)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_bessely_complex'
        return stypy_return_type_546636


    @norecursion
    def test_bessely_int(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_bessely_int'
        module_type_store = module_type_store.open_function_context('test_bessely_int', 845, 4, False)
        # Assigning a type to the variable 'self' (line 846)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_bessely_int')
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_bessely_int.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_bessely_int', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_bessely_int', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_bessely_int(...)' code ##################


        @norecursion
        def mpbessely(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mpbessely'
            module_type_store = module_type_store.open_function_context('mpbessely', 846, 8, False)
            
            # Passed parameters checking function
            mpbessely.stypy_localization = localization
            mpbessely.stypy_type_of_self = None
            mpbessely.stypy_type_store = module_type_store
            mpbessely.stypy_function_name = 'mpbessely'
            mpbessely.stypy_param_names_list = ['v', 'x']
            mpbessely.stypy_varargs_param_name = None
            mpbessely.stypy_kwargs_param_name = None
            mpbessely.stypy_call_defaults = defaults
            mpbessely.stypy_call_varargs = varargs
            mpbessely.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mpbessely', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mpbessely', localization, ['v', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mpbessely(...)' code ##################

            
            # Assigning a Call to a Name (line 847):
            
            # Assigning a Call to a Name (line 847):
            
            # Call to float(...): (line 847)
            # Processing the call arguments (line 847)
            
            # Call to bessely(...): (line 847)
            # Processing the call arguments (line 847)
            # Getting the type of 'v' (line 847)
            v_546640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 37), 'v', False)
            # Getting the type of 'x' (line 847)
            x_546641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 40), 'x', False)
            # Processing the call keyword arguments (line 847)
            kwargs_546642 = {}
            # Getting the type of 'mpmath' (line 847)
            mpmath_546638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 22), 'mpmath', False)
            # Obtaining the member 'bessely' of a type (line 847)
            bessely_546639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 847, 22), mpmath_546638, 'bessely')
            # Calling bessely(args, kwargs) (line 847)
            bessely_call_result_546643 = invoke(stypy.reporting.localization.Localization(__file__, 847, 22), bessely_546639, *[v_546640, x_546641], **kwargs_546642)
            
            # Processing the call keyword arguments (line 847)
            kwargs_546644 = {}
            # Getting the type of 'float' (line 847)
            float_546637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 16), 'float', False)
            # Calling float(args, kwargs) (line 847)
            float_call_result_546645 = invoke(stypy.reporting.localization.Localization(__file__, 847, 16), float_546637, *[bessely_call_result_546643], **kwargs_546644)
            
            # Assigning a type to the variable 'r' (line 847)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 847, 12), 'r', float_call_result_546645)
            
            
            # Evaluating a boolean operation
            
            
            # Call to abs(...): (line 848)
            # Processing the call arguments (line 848)
            # Getting the type of 'r' (line 848)
            r_546647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 19), 'r', False)
            # Processing the call keyword arguments (line 848)
            kwargs_546648 = {}
            # Getting the type of 'abs' (line 848)
            abs_546646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 848)
            abs_call_result_546649 = invoke(stypy.reporting.localization.Localization(__file__, 848, 15), abs_546646, *[r_546647], **kwargs_546648)
            
            int_546650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 25), 'int')
            # Applying the binary operator '==' (line 848)
            result_eq_546651 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 15), '==', abs_call_result_546649, int_546650)
            
            
            # Getting the type of 'x' (line 848)
            x_546652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 31), 'x')
            int_546653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 36), 'int')
            # Applying the binary operator '==' (line 848)
            result_eq_546654 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 31), '==', x_546652, int_546653)
            
            # Applying the binary operator 'and' (line 848)
            result_and_keyword_546655 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 15), 'and', result_eq_546651, result_eq_546654)
            
            # Testing the type of an if condition (line 848)
            if_condition_546656 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 848, 12), result_and_keyword_546655)
            # Assigning a type to the variable 'if_condition_546656' (line 848)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'if_condition_546656', if_condition_546656)
            # SSA begins for if statement (line 848)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 850)
            np_546657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 23), 'np')
            # Obtaining the member 'nan' of a type (line 850)
            nan_546658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 23), np_546657, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 850)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 16), 'stypy_return_type', nan_546658)
            # SSA join for if statement (line 848)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'r' (line 851)
            r_546659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 19), 'r')
            # Assigning a type to the variable 'stypy_return_type' (line 851)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 12), 'stypy_return_type', r_546659)
            
            # ################# End of 'mpbessely(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mpbessely' in the type store
            # Getting the type of 'stypy_return_type' (line 846)
            stypy_return_type_546660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546660)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mpbessely'
            return stypy_return_type_546660

        # Assigning a type to the variable 'mpbessely' (line 846)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 8), 'mpbessely', mpbessely)
        
        # Call to assert_mpmath_equal(...): (line 852)
        # Processing the call arguments (line 852)

        @norecursion
        def _stypy_temp_lambda_375(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_375'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_375', 852, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_375.stypy_localization = localization
            _stypy_temp_lambda_375.stypy_type_of_self = None
            _stypy_temp_lambda_375.stypy_type_store = module_type_store
            _stypy_temp_lambda_375.stypy_function_name = '_stypy_temp_lambda_375'
            _stypy_temp_lambda_375.stypy_param_names_list = ['v', 'z']
            _stypy_temp_lambda_375.stypy_varargs_param_name = None
            _stypy_temp_lambda_375.stypy_kwargs_param_name = None
            _stypy_temp_lambda_375.stypy_call_defaults = defaults
            _stypy_temp_lambda_375.stypy_call_varargs = varargs
            _stypy_temp_lambda_375.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_375', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_375', ['v', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to yn(...): (line 852)
            # Processing the call arguments (line 852)
            
            # Call to int(...): (line 852)
            # Processing the call arguments (line 852)
            # Getting the type of 'v' (line 852)
            v_546665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 51), 'v', False)
            # Processing the call keyword arguments (line 852)
            kwargs_546666 = {}
            # Getting the type of 'int' (line 852)
            int_546664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 47), 'int', False)
            # Calling int(args, kwargs) (line 852)
            int_call_result_546667 = invoke(stypy.reporting.localization.Localization(__file__, 852, 47), int_546664, *[v_546665], **kwargs_546666)
            
            # Getting the type of 'z' (line 852)
            z_546668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 55), 'z', False)
            # Processing the call keyword arguments (line 852)
            kwargs_546669 = {}
            # Getting the type of 'sc' (line 852)
            sc_546662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 41), 'sc', False)
            # Obtaining the member 'yn' of a type (line 852)
            yn_546663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 41), sc_546662, 'yn')
            # Calling yn(args, kwargs) (line 852)
            yn_call_result_546670 = invoke(stypy.reporting.localization.Localization(__file__, 852, 41), yn_546663, *[int_call_result_546667, z_546668], **kwargs_546669)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 852)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 28), 'stypy_return_type', yn_call_result_546670)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_375' in the type store
            # Getting the type of 'stypy_return_type' (line 852)
            stypy_return_type_546671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546671)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_375'
            return stypy_return_type_546671

        # Assigning a type to the variable '_stypy_temp_lambda_375' (line 852)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 28), '_stypy_temp_lambda_375', _stypy_temp_lambda_375)
        # Getting the type of '_stypy_temp_lambda_375' (line 852)
        _stypy_temp_lambda_375_546672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 28), '_stypy_temp_lambda_375')
        
        # Call to exception_to_nan(...): (line 853)
        # Processing the call arguments (line 853)
        # Getting the type of 'mpbessely' (line 853)
        mpbessely_546674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 45), 'mpbessely', False)
        # Processing the call keyword arguments (line 853)
        kwargs_546675 = {}
        # Getting the type of 'exception_to_nan' (line 853)
        exception_to_nan_546673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 853)
        exception_to_nan_call_result_546676 = invoke(stypy.reporting.localization.Localization(__file__, 853, 28), exception_to_nan_546673, *[mpbessely_546674], **kwargs_546675)
        
        
        # Obtaining an instance of the builtin type 'list' (line 854)
        list_546677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 854)
        # Adding element type (line 854)
        
        # Call to IntArg(...): (line 854)
        # Processing the call arguments (line 854)
        int_546679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 36), 'int')
        int_546680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 43), 'int')
        # Processing the call keyword arguments (line 854)
        kwargs_546681 = {}
        # Getting the type of 'IntArg' (line 854)
        IntArg_546678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 854)
        IntArg_call_result_546682 = invoke(stypy.reporting.localization.Localization(__file__, 854, 29), IntArg_546678, *[int_546679, int_546680], **kwargs_546681)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 28), list_546677, IntArg_call_result_546682)
        # Adding element type (line 854)
        
        # Call to Arg(...): (line 854)
        # Processing the call arguments (line 854)
        float_546684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 54), 'float')
        float_546685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 60), 'float')
        # Processing the call keyword arguments (line 854)
        kwargs_546686 = {}
        # Getting the type of 'Arg' (line 854)
        Arg_546683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 50), 'Arg', False)
        # Calling Arg(args, kwargs) (line 854)
        Arg_call_result_546687 = invoke(stypy.reporting.localization.Localization(__file__, 854, 50), Arg_546683, *[float_546684, float_546685], **kwargs_546686)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 28), list_546677, Arg_call_result_546687)
        
        # Processing the call keyword arguments (line 852)
        kwargs_546688 = {}
        # Getting the type of 'assert_mpmath_equal' (line 852)
        assert_mpmath_equal_546661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 852)
        assert_mpmath_equal_call_result_546689 = invoke(stypy.reporting.localization.Localization(__file__, 852, 8), assert_mpmath_equal_546661, *[_stypy_temp_lambda_375_546672, exception_to_nan_call_result_546676, list_546677], **kwargs_546688)
        
        
        # ################# End of 'test_bessely_int(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_bessely_int' in the type store
        # Getting the type of 'stypy_return_type' (line 845)
        stypy_return_type_546690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546690)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_bessely_int'
        return stypy_return_type_546690


    @norecursion
    def test_beta(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_beta'
        module_type_store = module_type_store.open_function_context('test_beta', 856, 4, False)
        # Assigning a type to the variable 'self' (line 857)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 857, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_beta.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_beta.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_beta.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_beta.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_beta')
        TestSystematic.test_beta.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_beta.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_beta.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_beta.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_beta.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_beta.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_beta.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_beta', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_beta', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_beta(...)' code ##################

        
        # Assigning a List to a Name (line 857):
        
        # Assigning a List to a Name (line 857):
        
        # Obtaining an instance of the builtin type 'list' (line 857)
        list_546691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 857)
        
        # Assigning a type to the variable 'bad_points' (line 857)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 857, 8), 'bad_points', list_546691)

        @norecursion
        def beta(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            # Getting the type of 'False' (line 859)
            False_546692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 31), 'False')
            defaults = [False_546692]
            # Create a new context for function 'beta'
            module_type_store = module_type_store.open_function_context('beta', 859, 8, False)
            
            # Passed parameters checking function
            beta.stypy_localization = localization
            beta.stypy_type_of_self = None
            beta.stypy_type_store = module_type_store
            beta.stypy_function_name = 'beta'
            beta.stypy_param_names_list = ['a', 'b', 'nonzero']
            beta.stypy_varargs_param_name = None
            beta.stypy_kwargs_param_name = None
            beta.stypy_call_defaults = defaults
            beta.stypy_call_varargs = varargs
            beta.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'beta', ['a', 'b', 'nonzero'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'beta', localization, ['a', 'b', 'nonzero'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'beta(...)' code ##################

            
            
            # Evaluating a boolean operation
            
            # Getting the type of 'a' (line 860)
            a_546693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 15), 'a')
            float_546694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 19), 'float')
            # Applying the binary operator '<' (line 860)
            result_lt_546695 = python_operator(stypy.reporting.localization.Localization(__file__, 860, 15), '<', a_546693, float_546694)
            
            
            # Getting the type of 'b' (line 860)
            b_546696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 28), 'b')
            float_546697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 32), 'float')
            # Applying the binary operator '<' (line 860)
            result_lt_546698 = python_operator(stypy.reporting.localization.Localization(__file__, 860, 28), '<', b_546696, float_546697)
            
            # Applying the binary operator 'or' (line 860)
            result_or_keyword_546699 = python_operator(stypy.reporting.localization.Localization(__file__, 860, 15), 'or', result_lt_546695, result_lt_546698)
            
            # Testing the type of an if condition (line 860)
            if_condition_546700 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 860, 12), result_or_keyword_546699)
            # Assigning a type to the variable 'if_condition_546700' (line 860)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 860, 12), 'if_condition_546700', if_condition_546700)
            # SSA begins for if statement (line 860)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 864)
            np_546701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 23), 'np')
            # Obtaining the member 'nan' of a type (line 864)
            nan_546702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 23), np_546701, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 864)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 864, 16), 'stypy_return_type', nan_546702)
            # SSA join for if statement (line 860)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Evaluating a boolean operation
            
            # Evaluating a boolean operation
            
            # Getting the type of 'a' (line 865)
            a_546703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 16), 'a')
            int_546704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 20), 'int')
            # Applying the binary operator '<' (line 865)
            result_lt_546705 = python_operator(stypy.reporting.localization.Localization(__file__, 865, 16), '<', a_546703, int_546704)
            
            
            # Getting the type of 'b' (line 865)
            b_546706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 25), 'b')
            int_546707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 29), 'int')
            # Applying the binary operator '<' (line 865)
            result_lt_546708 = python_operator(stypy.reporting.localization.Localization(__file__, 865, 25), '<', b_546706, int_546707)
            
            # Applying the binary operator 'or' (line 865)
            result_or_keyword_546709 = python_operator(stypy.reporting.localization.Localization(__file__, 865, 16), 'or', result_lt_546705, result_lt_546708)
            
            
            
            # Call to abs(...): (line 865)
            # Processing the call arguments (line 865)
            
            # Call to float(...): (line 865)
            # Processing the call arguments (line 865)
            # Getting the type of 'a' (line 865)
            a_546712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 47), 'a', False)
            # Getting the type of 'b' (line 865)
            b_546713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 51), 'b', False)
            # Applying the binary operator '+' (line 865)
            result_add_546714 = python_operator(stypy.reporting.localization.Localization(__file__, 865, 47), '+', a_546712, b_546713)
            
            # Processing the call keyword arguments (line 865)
            kwargs_546715 = {}
            # Getting the type of 'float' (line 865)
            float_546711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 41), 'float', False)
            # Calling float(args, kwargs) (line 865)
            float_call_result_546716 = invoke(stypy.reporting.localization.Localization(__file__, 865, 41), float_546711, *[result_add_546714], **kwargs_546715)
            
            # Processing the call keyword arguments (line 865)
            kwargs_546717 = {}
            # Getting the type of 'abs' (line 865)
            abs_546710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 37), 'abs', False)
            # Calling abs(args, kwargs) (line 865)
            abs_call_result_546718 = invoke(stypy.reporting.localization.Localization(__file__, 865, 37), abs_546710, *[float_call_result_546716], **kwargs_546717)
            
            int_546719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 57), 'int')
            # Applying the binary operator '%' (line 865)
            result_mod_546720 = python_operator(stypy.reporting.localization.Localization(__file__, 865, 37), '%', abs_call_result_546718, int_546719)
            
            int_546721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 63), 'int')
            # Applying the binary operator '==' (line 865)
            result_eq_546722 = python_operator(stypy.reporting.localization.Localization(__file__, 865, 36), '==', result_mod_546720, int_546721)
            
            # Applying the binary operator 'and' (line 865)
            result_and_keyword_546723 = python_operator(stypy.reporting.localization.Localization(__file__, 865, 15), 'and', result_or_keyword_546709, result_eq_546722)
            
            # Testing the type of an if condition (line 865)
            if_condition_546724 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 865, 12), result_and_keyword_546723)
            # Assigning a type to the variable 'if_condition_546724' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'if_condition_546724', if_condition_546724)
            # SSA begins for if statement (line 865)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Getting the type of 'nonzero' (line 869)
            nonzero_546725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 19), 'nonzero')
            # Testing the type of an if condition (line 869)
            if_condition_546726 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 869, 16), nonzero_546725)
            # Assigning a type to the variable 'if_condition_546726' (line 869)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 869, 16), 'if_condition_546726', if_condition_546726)
            # SSA begins for if statement (line 869)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 870)
            # Processing the call arguments (line 870)
            
            # Obtaining an instance of the builtin type 'tuple' (line 870)
            tuple_546729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 39), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 870)
            # Adding element type (line 870)
            
            # Call to float(...): (line 870)
            # Processing the call arguments (line 870)
            # Getting the type of 'a' (line 870)
            a_546731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 45), 'a', False)
            # Processing the call keyword arguments (line 870)
            kwargs_546732 = {}
            # Getting the type of 'float' (line 870)
            float_546730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 39), 'float', False)
            # Calling float(args, kwargs) (line 870)
            float_call_result_546733 = invoke(stypy.reporting.localization.Localization(__file__, 870, 39), float_546730, *[a_546731], **kwargs_546732)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 39), tuple_546729, float_call_result_546733)
            # Adding element type (line 870)
            
            # Call to float(...): (line 870)
            # Processing the call arguments (line 870)
            # Getting the type of 'b' (line 870)
            b_546735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 55), 'b', False)
            # Processing the call keyword arguments (line 870)
            kwargs_546736 = {}
            # Getting the type of 'float' (line 870)
            float_546734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 49), 'float', False)
            # Calling float(args, kwargs) (line 870)
            float_call_result_546737 = invoke(stypy.reporting.localization.Localization(__file__, 870, 49), float_546734, *[b_546735], **kwargs_546736)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 870, 39), tuple_546729, float_call_result_546737)
            
            # Processing the call keyword arguments (line 870)
            kwargs_546738 = {}
            # Getting the type of 'bad_points' (line 870)
            bad_points_546727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 20), 'bad_points', False)
            # Obtaining the member 'append' of a type (line 870)
            append_546728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 20), bad_points_546727, 'append')
            # Calling append(args, kwargs) (line 870)
            append_call_result_546739 = invoke(stypy.reporting.localization.Localization(__file__, 870, 20), append_546728, *[tuple_546729], **kwargs_546738)
            
            # Getting the type of 'np' (line 871)
            np_546740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 27), 'np')
            # Obtaining the member 'nan' of a type (line 871)
            nan_546741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 27), np_546740, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 871)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 20), 'stypy_return_type', nan_546741)
            # SSA join for if statement (line 869)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 865)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to beta(...): (line 872)
            # Processing the call arguments (line 872)
            # Getting the type of 'a' (line 872)
            a_546744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 31), 'a', False)
            # Getting the type of 'b' (line 872)
            b_546745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 34), 'b', False)
            # Processing the call keyword arguments (line 872)
            kwargs_546746 = {}
            # Getting the type of 'mpmath' (line 872)
            mpmath_546742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 19), 'mpmath', False)
            # Obtaining the member 'beta' of a type (line 872)
            beta_546743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 19), mpmath_546742, 'beta')
            # Calling beta(args, kwargs) (line 872)
            beta_call_result_546747 = invoke(stypy.reporting.localization.Localization(__file__, 872, 19), beta_546743, *[a_546744, b_546745], **kwargs_546746)
            
            # Assigning a type to the variable 'stypy_return_type' (line 872)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'stypy_return_type', beta_call_result_546747)
            
            # ################# End of 'beta(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'beta' in the type store
            # Getting the type of 'stypy_return_type' (line 859)
            stypy_return_type_546748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546748)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'beta'
            return stypy_return_type_546748

        # Assigning a type to the variable 'beta' (line 859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 8), 'beta', beta)
        
        # Call to assert_mpmath_equal(...): (line 874)
        # Processing the call arguments (line 874)
        # Getting the type of 'sc' (line 874)
        sc_546750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 28), 'sc', False)
        # Obtaining the member 'beta' of a type (line 874)
        beta_546751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 28), sc_546750, 'beta')

        @norecursion
        def _stypy_temp_lambda_376(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_376'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_376', 875, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_376.stypy_localization = localization
            _stypy_temp_lambda_376.stypy_type_of_self = None
            _stypy_temp_lambda_376.stypy_type_store = module_type_store
            _stypy_temp_lambda_376.stypy_function_name = '_stypy_temp_lambda_376'
            _stypy_temp_lambda_376.stypy_param_names_list = ['a', 'b']
            _stypy_temp_lambda_376.stypy_varargs_param_name = None
            _stypy_temp_lambda_376.stypy_kwargs_param_name = None
            _stypy_temp_lambda_376.stypy_call_defaults = defaults
            _stypy_temp_lambda_376.stypy_call_varargs = varargs
            _stypy_temp_lambda_376.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_376', ['a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_376', ['a', 'b'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to beta(...): (line 875)
            # Processing the call arguments (line 875)
            # Getting the type of 'a' (line 875)
            a_546753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 46), 'a', False)
            # Getting the type of 'b' (line 875)
            b_546754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 49), 'b', False)
            # Processing the call keyword arguments (line 875)
            # Getting the type of 'True' (line 875)
            True_546755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 60), 'True', False)
            keyword_546756 = True_546755
            kwargs_546757 = {'nonzero': keyword_546756}
            # Getting the type of 'beta' (line 875)
            beta_546752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 41), 'beta', False)
            # Calling beta(args, kwargs) (line 875)
            beta_call_result_546758 = invoke(stypy.reporting.localization.Localization(__file__, 875, 41), beta_546752, *[a_546753, b_546754], **kwargs_546757)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 875)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 875, 28), 'stypy_return_type', beta_call_result_546758)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_376' in the type store
            # Getting the type of 'stypy_return_type' (line 875)
            stypy_return_type_546759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546759)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_376'
            return stypy_return_type_546759

        # Assigning a type to the variable '_stypy_temp_lambda_376' (line 875)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 875, 28), '_stypy_temp_lambda_376', _stypy_temp_lambda_376)
        # Getting the type of '_stypy_temp_lambda_376' (line 875)
        _stypy_temp_lambda_376_546760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 28), '_stypy_temp_lambda_376')
        
        # Obtaining an instance of the builtin type 'list' (line 876)
        list_546761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 876)
        # Adding element type (line 876)
        
        # Call to Arg(...): (line 876)
        # Processing the call keyword arguments (line 876)
        kwargs_546763 = {}
        # Getting the type of 'Arg' (line 876)
        Arg_546762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 876)
        Arg_call_result_546764 = invoke(stypy.reporting.localization.Localization(__file__, 876, 29), Arg_546762, *[], **kwargs_546763)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 876, 28), list_546761, Arg_call_result_546764)
        # Adding element type (line 876)
        
        # Call to Arg(...): (line 876)
        # Processing the call keyword arguments (line 876)
        kwargs_546766 = {}
        # Getting the type of 'Arg' (line 876)
        Arg_546765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 876)
        Arg_call_result_546767 = invoke(stypy.reporting.localization.Localization(__file__, 876, 36), Arg_546765, *[], **kwargs_546766)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 876, 28), list_546761, Arg_call_result_546767)
        
        # Processing the call keyword arguments (line 874)
        int_546768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 32), 'int')
        keyword_546769 = int_546768
        # Getting the type of 'True' (line 878)
        True_546770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 44), 'True', False)
        keyword_546771 = True_546770
        kwargs_546772 = {'dps': keyword_546769, 'ignore_inf_sign': keyword_546771}
        # Getting the type of 'assert_mpmath_equal' (line 874)
        assert_mpmath_equal_546749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 874)
        assert_mpmath_equal_call_result_546773 = invoke(stypy.reporting.localization.Localization(__file__, 874, 8), assert_mpmath_equal_546749, *[beta_546751, _stypy_temp_lambda_376_546760, list_546761], **kwargs_546772)
        
        
        # Call to assert_mpmath_equal(...): (line 880)
        # Processing the call arguments (line 880)
        # Getting the type of 'sc' (line 880)
        sc_546775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 28), 'sc', False)
        # Obtaining the member 'beta' of a type (line 880)
        beta_546776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 880, 28), sc_546775, 'beta')
        # Getting the type of 'beta' (line 881)
        beta_546777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 28), 'beta', False)
        
        # Call to array(...): (line 882)
        # Processing the call arguments (line 882)
        # Getting the type of 'bad_points' (line 882)
        bad_points_546780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 37), 'bad_points', False)
        # Processing the call keyword arguments (line 882)
        kwargs_546781 = {}
        # Getting the type of 'np' (line 882)
        np_546778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 28), 'np', False)
        # Obtaining the member 'array' of a type (line 882)
        array_546779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 28), np_546778, 'array')
        # Calling array(args, kwargs) (line 882)
        array_call_result_546782 = invoke(stypy.reporting.localization.Localization(__file__, 882, 28), array_546779, *[bad_points_546780], **kwargs_546781)
        
        # Processing the call keyword arguments (line 880)
        int_546783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 883, 32), 'int')
        keyword_546784 = int_546783
        # Getting the type of 'True' (line 884)
        True_546785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 44), 'True', False)
        keyword_546786 = True_546785
        float_546787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 885, 33), 'float')
        keyword_546788 = float_546787
        kwargs_546789 = {'dps': keyword_546784, 'ignore_inf_sign': keyword_546786, 'atol': keyword_546788}
        # Getting the type of 'assert_mpmath_equal' (line 880)
        assert_mpmath_equal_546774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 880)
        assert_mpmath_equal_call_result_546790 = invoke(stypy.reporting.localization.Localization(__file__, 880, 8), assert_mpmath_equal_546774, *[beta_546776, beta_546777, array_call_result_546782], **kwargs_546789)
        
        
        # ################# End of 'test_beta(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_beta' in the type store
        # Getting the type of 'stypy_return_type' (line 856)
        stypy_return_type_546791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546791)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_beta'
        return stypy_return_type_546791


    @norecursion
    def test_betainc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_betainc'
        module_type_store = module_type_store.open_function_context('test_betainc', 887, 4, False)
        # Assigning a type to the variable 'self' (line 888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_betainc')
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_betainc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_betainc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_betainc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_betainc(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 888)
        # Processing the call arguments (line 888)
        # Getting the type of 'sc' (line 888)
        sc_546793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 28), 'sc', False)
        # Obtaining the member 'betainc' of a type (line 888)
        betainc_546794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 28), sc_546793, 'betainc')
        
        # Call to (...): (line 889)
        # Processing the call arguments (line 889)
        
        # Call to exception_to_nan(...): (line 889)
        # Processing the call arguments (line 889)

        @norecursion
        def _stypy_temp_lambda_377(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_377'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_377', 889, 60, True)
            # Passed parameters checking function
            _stypy_temp_lambda_377.stypy_localization = localization
            _stypy_temp_lambda_377.stypy_type_of_self = None
            _stypy_temp_lambda_377.stypy_type_store = module_type_store
            _stypy_temp_lambda_377.stypy_function_name = '_stypy_temp_lambda_377'
            _stypy_temp_lambda_377.stypy_param_names_list = ['a', 'b', 'x']
            _stypy_temp_lambda_377.stypy_varargs_param_name = None
            _stypy_temp_lambda_377.stypy_kwargs_param_name = None
            _stypy_temp_lambda_377.stypy_call_defaults = defaults
            _stypy_temp_lambda_377.stypy_call_varargs = varargs
            _stypy_temp_lambda_377.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_377', ['a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_377', ['a', 'b', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to betainc(...): (line 889)
            # Processing the call arguments (line 889)
            # Getting the type of 'a' (line 889)
            a_546801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 91), 'a', False)
            # Getting the type of 'b' (line 889)
            b_546802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 94), 'b', False)
            int_546803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 97), 'int')
            # Getting the type of 'x' (line 889)
            x_546804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 100), 'x', False)
            # Processing the call keyword arguments (line 889)
            # Getting the type of 'True' (line 889)
            True_546805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 115), 'True', False)
            keyword_546806 = True_546805
            kwargs_546807 = {'regularized': keyword_546806}
            # Getting the type of 'mpmath' (line 889)
            mpmath_546799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 76), 'mpmath', False)
            # Obtaining the member 'betainc' of a type (line 889)
            betainc_546800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 76), mpmath_546799, 'betainc')
            # Calling betainc(args, kwargs) (line 889)
            betainc_call_result_546808 = invoke(stypy.reporting.localization.Localization(__file__, 889, 76), betainc_546800, *[a_546801, b_546802, int_546803, x_546804], **kwargs_546807)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 889)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 60), 'stypy_return_type', betainc_call_result_546808)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_377' in the type store
            # Getting the type of 'stypy_return_type' (line 889)
            stypy_return_type_546809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 60), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546809)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_377'
            return stypy_return_type_546809

        # Assigning a type to the variable '_stypy_temp_lambda_377' (line 889)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 60), '_stypy_temp_lambda_377', _stypy_temp_lambda_377)
        # Getting the type of '_stypy_temp_lambda_377' (line 889)
        _stypy_temp_lambda_377_546810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 60), '_stypy_temp_lambda_377')
        # Processing the call keyword arguments (line 889)
        kwargs_546811 = {}
        # Getting the type of 'exception_to_nan' (line 889)
        exception_to_nan_546798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 43), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 889)
        exception_to_nan_call_result_546812 = invoke(stypy.reporting.localization.Localization(__file__, 889, 43), exception_to_nan_546798, *[_stypy_temp_lambda_377_546810], **kwargs_546811)
        
        # Processing the call keyword arguments (line 889)
        kwargs_546813 = {}
        
        # Call to time_limited(...): (line 889)
        # Processing the call keyword arguments (line 889)
        kwargs_546796 = {}
        # Getting the type of 'time_limited' (line 889)
        time_limited_546795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 28), 'time_limited', False)
        # Calling time_limited(args, kwargs) (line 889)
        time_limited_call_result_546797 = invoke(stypy.reporting.localization.Localization(__file__, 889, 28), time_limited_546795, *[], **kwargs_546796)
        
        # Calling (args, kwargs) (line 889)
        _call_result_546814 = invoke(stypy.reporting.localization.Localization(__file__, 889, 28), time_limited_call_result_546797, *[exception_to_nan_call_result_546812], **kwargs_546813)
        
        
        # Obtaining an instance of the builtin type 'list' (line 890)
        list_546815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 890)
        # Adding element type (line 890)
        
        # Call to Arg(...): (line 890)
        # Processing the call keyword arguments (line 890)
        kwargs_546817 = {}
        # Getting the type of 'Arg' (line 890)
        Arg_546816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 890)
        Arg_call_result_546818 = invoke(stypy.reporting.localization.Localization(__file__, 890, 29), Arg_546816, *[], **kwargs_546817)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 28), list_546815, Arg_call_result_546818)
        # Adding element type (line 890)
        
        # Call to Arg(...): (line 890)
        # Processing the call keyword arguments (line 890)
        kwargs_546820 = {}
        # Getting the type of 'Arg' (line 890)
        Arg_546819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 890)
        Arg_call_result_546821 = invoke(stypy.reporting.localization.Localization(__file__, 890, 36), Arg_546819, *[], **kwargs_546820)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 28), list_546815, Arg_call_result_546821)
        # Adding element type (line 890)
        
        # Call to Arg(...): (line 890)
        # Processing the call keyword arguments (line 890)
        kwargs_546823 = {}
        # Getting the type of 'Arg' (line 890)
        Arg_546822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 43), 'Arg', False)
        # Calling Arg(args, kwargs) (line 890)
        Arg_call_result_546824 = invoke(stypy.reporting.localization.Localization(__file__, 890, 43), Arg_546822, *[], **kwargs_546823)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 28), list_546815, Arg_call_result_546824)
        
        # Processing the call keyword arguments (line 888)
        kwargs_546825 = {}
        # Getting the type of 'assert_mpmath_equal' (line 888)
        assert_mpmath_equal_546792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 888)
        assert_mpmath_equal_call_result_546826 = invoke(stypy.reporting.localization.Localization(__file__, 888, 8), assert_mpmath_equal_546792, *[betainc_546794, _call_result_546814, list_546815], **kwargs_546825)
        
        
        # ################# End of 'test_betainc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_betainc' in the type store
        # Getting the type of 'stypy_return_type' (line 887)
        stypy_return_type_546827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546827)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_betainc'
        return stypy_return_type_546827


    @norecursion
    def test_binom(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_binom'
        module_type_store = module_type_store.open_function_context('test_binom', 892, 4, False)
        # Assigning a type to the variable 'self' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_binom.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_binom.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_binom.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_binom.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_binom')
        TestSystematic.test_binom.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_binom.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_binom.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_binom.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_binom.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_binom.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_binom.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_binom', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_binom', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_binom(...)' code ##################

        
        # Assigning a List to a Name (line 893):
        
        # Assigning a List to a Name (line 893):
        
        # Obtaining an instance of the builtin type 'list' (line 893)
        list_546828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 893)
        
        # Assigning a type to the variable 'bad_points' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'bad_points', list_546828)

        @norecursion
        def binomial(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            # Getting the type of 'False' (line 895)
            False_546829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 35), 'False')
            defaults = [False_546829]
            # Create a new context for function 'binomial'
            module_type_store = module_type_store.open_function_context('binomial', 895, 8, False)
            
            # Passed parameters checking function
            binomial.stypy_localization = localization
            binomial.stypy_type_of_self = None
            binomial.stypy_type_store = module_type_store
            binomial.stypy_function_name = 'binomial'
            binomial.stypy_param_names_list = ['n', 'k', 'nonzero']
            binomial.stypy_varargs_param_name = None
            binomial.stypy_kwargs_param_name = None
            binomial.stypy_call_defaults = defaults
            binomial.stypy_call_varargs = varargs
            binomial.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'binomial', ['n', 'k', 'nonzero'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'binomial', localization, ['n', 'k', 'nonzero'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'binomial(...)' code ##################

            
            
            
            # Call to abs(...): (line 896)
            # Processing the call arguments (line 896)
            # Getting the type of 'k' (line 896)
            k_546831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 19), 'k', False)
            # Processing the call keyword arguments (line 896)
            kwargs_546832 = {}
            # Getting the type of 'abs' (line 896)
            abs_546830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 896)
            abs_call_result_546833 = invoke(stypy.reporting.localization.Localization(__file__, 896, 15), abs_546830, *[k_546831], **kwargs_546832)
            
            float_546834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 24), 'float')
            
            # Call to abs(...): (line 896)
            # Processing the call arguments (line 896)
            # Getting the type of 'n' (line 896)
            n_546836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 33), 'n', False)
            # Processing the call keyword arguments (line 896)
            kwargs_546837 = {}
            # Getting the type of 'abs' (line 896)
            abs_546835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 29), 'abs', False)
            # Calling abs(args, kwargs) (line 896)
            abs_call_result_546838 = invoke(stypy.reporting.localization.Localization(__file__, 896, 29), abs_546835, *[n_546836], **kwargs_546837)
            
            int_546839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 38), 'int')
            # Applying the binary operator '+' (line 896)
            result_add_546840 = python_operator(stypy.reporting.localization.Localization(__file__, 896, 29), '+', abs_call_result_546838, int_546839)
            
            # Applying the binary operator '*' (line 896)
            result_mul_546841 = python_operator(stypy.reporting.localization.Localization(__file__, 896, 24), '*', float_546834, result_add_546840)
            
            # Applying the binary operator '>' (line 896)
            result_gt_546842 = python_operator(stypy.reporting.localization.Localization(__file__, 896, 15), '>', abs_call_result_546833, result_mul_546841)
            
            # Testing the type of an if condition (line 896)
            if_condition_546843 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 896, 12), result_gt_546842)
            # Assigning a type to the variable 'if_condition_546843' (line 896)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 12), 'if_condition_546843', if_condition_546843)
            # SSA begins for if statement (line 896)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 900)
            np_546844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 23), 'np')
            # Obtaining the member 'nan' of a type (line 900)
            nan_546845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 900, 23), np_546844, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 900)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 900, 16), 'stypy_return_type', nan_546845)
            # SSA join for if statement (line 896)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Evaluating a boolean operation
            
            # Getting the type of 'n' (line 901)
            n_546846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 15), 'n')
            # Getting the type of 'k' (line 901)
            k_546847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 19), 'k')
            # Applying the binary operator '<' (line 901)
            result_lt_546848 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 15), '<', n_546846, k_546847)
            
            
            
            # Call to abs(...): (line 901)
            # Processing the call arguments (line 901)
            
            # Call to float(...): (line 901)
            # Processing the call arguments (line 901)
            # Getting the type of 'n' (line 901)
            n_546851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 35), 'n', False)
            # Getting the type of 'k' (line 901)
            k_546852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 37), 'k', False)
            # Applying the binary operator '-' (line 901)
            result_sub_546853 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 35), '-', n_546851, k_546852)
            
            # Processing the call keyword arguments (line 901)
            kwargs_546854 = {}
            # Getting the type of 'float' (line 901)
            float_546850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 29), 'float', False)
            # Calling float(args, kwargs) (line 901)
            float_call_result_546855 = invoke(stypy.reporting.localization.Localization(__file__, 901, 29), float_546850, *[result_sub_546853], **kwargs_546854)
            
            
            # Call to round(...): (line 901)
            # Processing the call arguments (line 901)
            
            # Call to float(...): (line 901)
            # Processing the call arguments (line 901)
            # Getting the type of 'n' (line 901)
            n_546859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 57), 'n', False)
            # Getting the type of 'k' (line 901)
            k_546860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 59), 'k', False)
            # Applying the binary operator '-' (line 901)
            result_sub_546861 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 57), '-', n_546859, k_546860)
            
            # Processing the call keyword arguments (line 901)
            kwargs_546862 = {}
            # Getting the type of 'float' (line 901)
            float_546858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 51), 'float', False)
            # Calling float(args, kwargs) (line 901)
            float_call_result_546863 = invoke(stypy.reporting.localization.Localization(__file__, 901, 51), float_546858, *[result_sub_546861], **kwargs_546862)
            
            # Processing the call keyword arguments (line 901)
            kwargs_546864 = {}
            # Getting the type of 'np' (line 901)
            np_546856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 42), 'np', False)
            # Obtaining the member 'round' of a type (line 901)
            round_546857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 901, 42), np_546856, 'round')
            # Calling round(args, kwargs) (line 901)
            round_call_result_546865 = invoke(stypy.reporting.localization.Localization(__file__, 901, 42), round_546857, *[float_call_result_546863], **kwargs_546864)
            
            # Applying the binary operator '-' (line 901)
            result_sub_546866 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 29), '-', float_call_result_546855, round_call_result_546865)
            
            # Processing the call keyword arguments (line 901)
            kwargs_546867 = {}
            # Getting the type of 'abs' (line 901)
            abs_546849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 25), 'abs', False)
            # Calling abs(args, kwargs) (line 901)
            abs_call_result_546868 = invoke(stypy.reporting.localization.Localization(__file__, 901, 25), abs_546849, *[result_sub_546866], **kwargs_546867)
            
            float_546869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 66), 'float')
            # Applying the binary operator '<' (line 901)
            result_lt_546870 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 25), '<', abs_call_result_546868, float_546869)
            
            # Applying the binary operator 'and' (line 901)
            result_and_keyword_546871 = python_operator(stypy.reporting.localization.Localization(__file__, 901, 15), 'and', result_lt_546848, result_lt_546870)
            
            # Testing the type of an if condition (line 901)
            if_condition_546872 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 901, 12), result_and_keyword_546871)
            # Assigning a type to the variable 'if_condition_546872' (line 901)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 12), 'if_condition_546872', if_condition_546872)
            # SSA begins for if statement (line 901)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Getting the type of 'nonzero' (line 905)
            nonzero_546873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 19), 'nonzero')
            # Testing the type of an if condition (line 905)
            if_condition_546874 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 905, 16), nonzero_546873)
            # Assigning a type to the variable 'if_condition_546874' (line 905)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 16), 'if_condition_546874', if_condition_546874)
            # SSA begins for if statement (line 905)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 906)
            # Processing the call arguments (line 906)
            
            # Obtaining an instance of the builtin type 'tuple' (line 906)
            tuple_546877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 39), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 906)
            # Adding element type (line 906)
            
            # Call to float(...): (line 906)
            # Processing the call arguments (line 906)
            # Getting the type of 'n' (line 906)
            n_546879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 45), 'n', False)
            # Processing the call keyword arguments (line 906)
            kwargs_546880 = {}
            # Getting the type of 'float' (line 906)
            float_546878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 39), 'float', False)
            # Calling float(args, kwargs) (line 906)
            float_call_result_546881 = invoke(stypy.reporting.localization.Localization(__file__, 906, 39), float_546878, *[n_546879], **kwargs_546880)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 39), tuple_546877, float_call_result_546881)
            # Adding element type (line 906)
            
            # Call to float(...): (line 906)
            # Processing the call arguments (line 906)
            # Getting the type of 'k' (line 906)
            k_546883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 55), 'k', False)
            # Processing the call keyword arguments (line 906)
            kwargs_546884 = {}
            # Getting the type of 'float' (line 906)
            float_546882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 49), 'float', False)
            # Calling float(args, kwargs) (line 906)
            float_call_result_546885 = invoke(stypy.reporting.localization.Localization(__file__, 906, 49), float_546882, *[k_546883], **kwargs_546884)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 39), tuple_546877, float_call_result_546885)
            
            # Processing the call keyword arguments (line 906)
            kwargs_546886 = {}
            # Getting the type of 'bad_points' (line 906)
            bad_points_546875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 20), 'bad_points', False)
            # Obtaining the member 'append' of a type (line 906)
            append_546876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 906, 20), bad_points_546875, 'append')
            # Calling append(args, kwargs) (line 906)
            append_call_result_546887 = invoke(stypy.reporting.localization.Localization(__file__, 906, 20), append_546876, *[tuple_546877], **kwargs_546886)
            
            # Getting the type of 'np' (line 907)
            np_546888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 27), 'np')
            # Obtaining the member 'nan' of a type (line 907)
            nan_546889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 27), np_546888, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 907)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 20), 'stypy_return_type', nan_546889)
            # SSA join for if statement (line 905)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 901)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to binomial(...): (line 908)
            # Processing the call arguments (line 908)
            # Getting the type of 'n' (line 908)
            n_546892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 35), 'n', False)
            # Getting the type of 'k' (line 908)
            k_546893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 38), 'k', False)
            # Processing the call keyword arguments (line 908)
            kwargs_546894 = {}
            # Getting the type of 'mpmath' (line 908)
            mpmath_546890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 19), 'mpmath', False)
            # Obtaining the member 'binomial' of a type (line 908)
            binomial_546891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 19), mpmath_546890, 'binomial')
            # Calling binomial(args, kwargs) (line 908)
            binomial_call_result_546895 = invoke(stypy.reporting.localization.Localization(__file__, 908, 19), binomial_546891, *[n_546892, k_546893], **kwargs_546894)
            
            # Assigning a type to the variable 'stypy_return_type' (line 908)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 12), 'stypy_return_type', binomial_call_result_546895)
            
            # ################# End of 'binomial(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'binomial' in the type store
            # Getting the type of 'stypy_return_type' (line 895)
            stypy_return_type_546896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546896)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'binomial'
            return stypy_return_type_546896

        # Assigning a type to the variable 'binomial' (line 895)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'binomial', binomial)
        
        # Call to assert_mpmath_equal(...): (line 910)
        # Processing the call arguments (line 910)
        # Getting the type of 'sc' (line 910)
        sc_546898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 28), 'sc', False)
        # Obtaining the member 'binom' of a type (line 910)
        binom_546899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 28), sc_546898, 'binom')

        @norecursion
        def _stypy_temp_lambda_378(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_378'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_378', 911, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_378.stypy_localization = localization
            _stypy_temp_lambda_378.stypy_type_of_self = None
            _stypy_temp_lambda_378.stypy_type_store = module_type_store
            _stypy_temp_lambda_378.stypy_function_name = '_stypy_temp_lambda_378'
            _stypy_temp_lambda_378.stypy_param_names_list = ['n', 'k']
            _stypy_temp_lambda_378.stypy_varargs_param_name = None
            _stypy_temp_lambda_378.stypy_kwargs_param_name = None
            _stypy_temp_lambda_378.stypy_call_defaults = defaults
            _stypy_temp_lambda_378.stypy_call_varargs = varargs
            _stypy_temp_lambda_378.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_378', ['n', 'k'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_378', ['n', 'k'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to binomial(...): (line 911)
            # Processing the call arguments (line 911)
            # Getting the type of 'n' (line 911)
            n_546901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 50), 'n', False)
            # Getting the type of 'k' (line 911)
            k_546902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 53), 'k', False)
            # Processing the call keyword arguments (line 911)
            # Getting the type of 'True' (line 911)
            True_546903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 64), 'True', False)
            keyword_546904 = True_546903
            kwargs_546905 = {'nonzero': keyword_546904}
            # Getting the type of 'binomial' (line 911)
            binomial_546900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 41), 'binomial', False)
            # Calling binomial(args, kwargs) (line 911)
            binomial_call_result_546906 = invoke(stypy.reporting.localization.Localization(__file__, 911, 41), binomial_546900, *[n_546901, k_546902], **kwargs_546905)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 911)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 911, 28), 'stypy_return_type', binomial_call_result_546906)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_378' in the type store
            # Getting the type of 'stypy_return_type' (line 911)
            stypy_return_type_546907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546907)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_378'
            return stypy_return_type_546907

        # Assigning a type to the variable '_stypy_temp_lambda_378' (line 911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 911, 28), '_stypy_temp_lambda_378', _stypy_temp_lambda_378)
        # Getting the type of '_stypy_temp_lambda_378' (line 911)
        _stypy_temp_lambda_378_546908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 28), '_stypy_temp_lambda_378')
        
        # Obtaining an instance of the builtin type 'list' (line 912)
        list_546909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 912)
        # Adding element type (line 912)
        
        # Call to Arg(...): (line 912)
        # Processing the call keyword arguments (line 912)
        kwargs_546911 = {}
        # Getting the type of 'Arg' (line 912)
        Arg_546910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 912)
        Arg_call_result_546912 = invoke(stypy.reporting.localization.Localization(__file__, 912, 29), Arg_546910, *[], **kwargs_546911)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 28), list_546909, Arg_call_result_546912)
        # Adding element type (line 912)
        
        # Call to Arg(...): (line 912)
        # Processing the call keyword arguments (line 912)
        kwargs_546914 = {}
        # Getting the type of 'Arg' (line 912)
        Arg_546913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 912)
        Arg_call_result_546915 = invoke(stypy.reporting.localization.Localization(__file__, 912, 36), Arg_546913, *[], **kwargs_546914)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 28), list_546909, Arg_call_result_546915)
        
        # Processing the call keyword arguments (line 910)
        int_546916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 32), 'int')
        keyword_546917 = int_546916
        kwargs_546918 = {'dps': keyword_546917}
        # Getting the type of 'assert_mpmath_equal' (line 910)
        assert_mpmath_equal_546897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 910)
        assert_mpmath_equal_call_result_546919 = invoke(stypy.reporting.localization.Localization(__file__, 910, 8), assert_mpmath_equal_546897, *[binom_546899, _stypy_temp_lambda_378_546908, list_546909], **kwargs_546918)
        
        
        # Call to assert_mpmath_equal(...): (line 915)
        # Processing the call arguments (line 915)
        # Getting the type of 'sc' (line 915)
        sc_546921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 28), 'sc', False)
        # Obtaining the member 'binom' of a type (line 915)
        binom_546922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 915, 28), sc_546921, 'binom')
        # Getting the type of 'binomial' (line 916)
        binomial_546923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 28), 'binomial', False)
        
        # Call to array(...): (line 917)
        # Processing the call arguments (line 917)
        # Getting the type of 'bad_points' (line 917)
        bad_points_546926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 37), 'bad_points', False)
        # Processing the call keyword arguments (line 917)
        kwargs_546927 = {}
        # Getting the type of 'np' (line 917)
        np_546924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 28), 'np', False)
        # Obtaining the member 'array' of a type (line 917)
        array_546925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 28), np_546924, 'array')
        # Calling array(args, kwargs) (line 917)
        array_call_result_546928 = invoke(stypy.reporting.localization.Localization(__file__, 917, 28), array_546925, *[bad_points_546926], **kwargs_546927)
        
        # Processing the call keyword arguments (line 915)
        int_546929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 32), 'int')
        keyword_546930 = int_546929
        float_546931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 33), 'float')
        keyword_546932 = float_546931
        kwargs_546933 = {'dps': keyword_546930, 'atol': keyword_546932}
        # Getting the type of 'assert_mpmath_equal' (line 915)
        assert_mpmath_equal_546920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 915)
        assert_mpmath_equal_call_result_546934 = invoke(stypy.reporting.localization.Localization(__file__, 915, 8), assert_mpmath_equal_546920, *[binom_546922, binomial_546923, array_call_result_546928], **kwargs_546933)
        
        
        # ################# End of 'test_binom(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_binom' in the type store
        # Getting the type of 'stypy_return_type' (line 892)
        stypy_return_type_546935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546935)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_binom'
        return stypy_return_type_546935


    @norecursion
    def test_chebyt_int(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_chebyt_int'
        module_type_store = module_type_store.open_function_context('test_chebyt_int', 921, 4, False)
        # Assigning a type to the variable 'self' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_chebyt_int')
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_chebyt_int.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_chebyt_int', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_chebyt_int', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_chebyt_int(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 922)
        # Processing the call arguments (line 922)

        @norecursion
        def _stypy_temp_lambda_379(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_379'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_379', 922, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_379.stypy_localization = localization
            _stypy_temp_lambda_379.stypy_type_of_self = None
            _stypy_temp_lambda_379.stypy_type_store = module_type_store
            _stypy_temp_lambda_379.stypy_function_name = '_stypy_temp_lambda_379'
            _stypy_temp_lambda_379.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_379.stypy_varargs_param_name = None
            _stypy_temp_lambda_379.stypy_kwargs_param_name = None
            _stypy_temp_lambda_379.stypy_call_defaults = defaults
            _stypy_temp_lambda_379.stypy_call_varargs = varargs
            _stypy_temp_lambda_379.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_379', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_379', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_chebyt(...): (line 922)
            # Processing the call arguments (line 922)
            
            # Call to int(...): (line 922)
            # Processing the call arguments (line 922)
            # Getting the type of 'n' (line 922)
            n_546940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 60), 'n', False)
            # Processing the call keyword arguments (line 922)
            kwargs_546941 = {}
            # Getting the type of 'int' (line 922)
            int_546939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 56), 'int', False)
            # Calling int(args, kwargs) (line 922)
            int_call_result_546942 = invoke(stypy.reporting.localization.Localization(__file__, 922, 56), int_546939, *[n_546940], **kwargs_546941)
            
            # Getting the type of 'x' (line 922)
            x_546943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 64), 'x', False)
            # Processing the call keyword arguments (line 922)
            kwargs_546944 = {}
            # Getting the type of 'sc' (line 922)
            sc_546937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 41), 'sc', False)
            # Obtaining the member 'eval_chebyt' of a type (line 922)
            eval_chebyt_546938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 41), sc_546937, 'eval_chebyt')
            # Calling eval_chebyt(args, kwargs) (line 922)
            eval_chebyt_call_result_546945 = invoke(stypy.reporting.localization.Localization(__file__, 922, 41), eval_chebyt_546938, *[int_call_result_546942, x_546943], **kwargs_546944)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 922)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 28), 'stypy_return_type', eval_chebyt_call_result_546945)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_379' in the type store
            # Getting the type of 'stypy_return_type' (line 922)
            stypy_return_type_546946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546946)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_379'
            return stypy_return_type_546946

        # Assigning a type to the variable '_stypy_temp_lambda_379' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 28), '_stypy_temp_lambda_379', _stypy_temp_lambda_379)
        # Getting the type of '_stypy_temp_lambda_379' (line 922)
        _stypy_temp_lambda_379_546947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 28), '_stypy_temp_lambda_379')
        
        # Call to exception_to_nan(...): (line 923)
        # Processing the call arguments (line 923)

        @norecursion
        def _stypy_temp_lambda_380(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_380'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_380', 923, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_380.stypy_localization = localization
            _stypy_temp_lambda_380.stypy_type_of_self = None
            _stypy_temp_lambda_380.stypy_type_store = module_type_store
            _stypy_temp_lambda_380.stypy_function_name = '_stypy_temp_lambda_380'
            _stypy_temp_lambda_380.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_380.stypy_varargs_param_name = None
            _stypy_temp_lambda_380.stypy_kwargs_param_name = None
            _stypy_temp_lambda_380.stypy_call_defaults = defaults
            _stypy_temp_lambda_380.stypy_call_varargs = varargs
            _stypy_temp_lambda_380.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_380', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_380', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to chebyt(...): (line 923)
            # Processing the call arguments (line 923)
            # Getting the type of 'n' (line 923)
            n_546951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 72), 'n', False)
            # Getting the type of 'x' (line 923)
            x_546952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 75), 'x', False)
            # Processing the call keyword arguments (line 923)
            # Getting the type of 'HYPERKW' (line 923)
            HYPERKW_546953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 80), 'HYPERKW', False)
            kwargs_546954 = {'HYPERKW_546953': HYPERKW_546953}
            # Getting the type of 'mpmath' (line 923)
            mpmath_546949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 58), 'mpmath', False)
            # Obtaining the member 'chebyt' of a type (line 923)
            chebyt_546950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 923, 58), mpmath_546949, 'chebyt')
            # Calling chebyt(args, kwargs) (line 923)
            chebyt_call_result_546955 = invoke(stypy.reporting.localization.Localization(__file__, 923, 58), chebyt_546950, *[n_546951, x_546952], **kwargs_546954)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 923)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 923, 45), 'stypy_return_type', chebyt_call_result_546955)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_380' in the type store
            # Getting the type of 'stypy_return_type' (line 923)
            stypy_return_type_546956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546956)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_380'
            return stypy_return_type_546956

        # Assigning a type to the variable '_stypy_temp_lambda_380' (line 923)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 923, 45), '_stypy_temp_lambda_380', _stypy_temp_lambda_380)
        # Getting the type of '_stypy_temp_lambda_380' (line 923)
        _stypy_temp_lambda_380_546957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 45), '_stypy_temp_lambda_380')
        # Processing the call keyword arguments (line 923)
        kwargs_546958 = {}
        # Getting the type of 'exception_to_nan' (line 923)
        exception_to_nan_546948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 923)
        exception_to_nan_call_result_546959 = invoke(stypy.reporting.localization.Localization(__file__, 923, 28), exception_to_nan_546948, *[_stypy_temp_lambda_380_546957], **kwargs_546958)
        
        
        # Obtaining an instance of the builtin type 'list' (line 924)
        list_546960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 924)
        # Adding element type (line 924)
        
        # Call to IntArg(...): (line 924)
        # Processing the call keyword arguments (line 924)
        kwargs_546962 = {}
        # Getting the type of 'IntArg' (line 924)
        IntArg_546961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 924)
        IntArg_call_result_546963 = invoke(stypy.reporting.localization.Localization(__file__, 924, 29), IntArg_546961, *[], **kwargs_546962)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 28), list_546960, IntArg_call_result_546963)
        # Adding element type (line 924)
        
        # Call to Arg(...): (line 924)
        # Processing the call keyword arguments (line 924)
        kwargs_546965 = {}
        # Getting the type of 'Arg' (line 924)
        Arg_546964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 39), 'Arg', False)
        # Calling Arg(args, kwargs) (line 924)
        Arg_call_result_546966 = invoke(stypy.reporting.localization.Localization(__file__, 924, 39), Arg_546964, *[], **kwargs_546965)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 924, 28), list_546960, Arg_call_result_546966)
        
        # Processing the call keyword arguments (line 922)
        int_546967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 51), 'int')
        keyword_546968 = int_546967
        kwargs_546969 = {'dps': keyword_546968}
        # Getting the type of 'assert_mpmath_equal' (line 922)
        assert_mpmath_equal_546936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 922)
        assert_mpmath_equal_call_result_546970 = invoke(stypy.reporting.localization.Localization(__file__, 922, 8), assert_mpmath_equal_546936, *[_stypy_temp_lambda_379_546947, exception_to_nan_call_result_546959, list_546960], **kwargs_546969)
        
        
        # ################# End of 'test_chebyt_int(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_chebyt_int' in the type store
        # Getting the type of 'stypy_return_type' (line 921)
        stypy_return_type_546971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_546971)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_chebyt_int'
        return stypy_return_type_546971


    @norecursion
    def test_chebyt(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_chebyt'
        module_type_store = module_type_store.open_function_context('test_chebyt', 926, 4, False)
        # Assigning a type to the variable 'self' (line 927)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 927, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_chebyt')
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_chebyt.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_chebyt', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_chebyt', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_chebyt(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 928)
        # Processing the call arguments (line 928)
        # Getting the type of 'sc' (line 928)
        sc_546973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 28), 'sc', False)
        # Obtaining the member 'eval_chebyt' of a type (line 928)
        eval_chebyt_546974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 28), sc_546973, 'eval_chebyt')

        @norecursion
        def _stypy_temp_lambda_381(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_381'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_381', 929, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_381.stypy_localization = localization
            _stypy_temp_lambda_381.stypy_type_of_self = None
            _stypy_temp_lambda_381.stypy_type_store = module_type_store
            _stypy_temp_lambda_381.stypy_function_name = '_stypy_temp_lambda_381'
            _stypy_temp_lambda_381.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_381.stypy_varargs_param_name = None
            _stypy_temp_lambda_381.stypy_kwargs_param_name = None
            _stypy_temp_lambda_381.stypy_call_defaults = defaults
            _stypy_temp_lambda_381.stypy_call_varargs = varargs
            _stypy_temp_lambda_381.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_381', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_381', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to (...): (line 929)
            # Processing the call arguments (line 929)
            # Getting the type of 'n' (line 929)
            n_546985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 89), 'n', False)
            # Getting the type of 'x' (line 929)
            x_546986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 92), 'x', False)
            # Processing the call keyword arguments (line 929)
            # Getting the type of 'HYPERKW' (line 929)
            HYPERKW_546987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 97), 'HYPERKW', False)
            kwargs_546988 = {'HYPERKW_546987': HYPERKW_546987}
            
            # Call to (...): (line 929)
            # Processing the call arguments (line 929)
            
            # Call to exception_to_nan(...): (line 929)
            # Processing the call arguments (line 929)
            # Getting the type of 'mpmath' (line 929)
            mpmath_546979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 73), 'mpmath', False)
            # Obtaining the member 'chebyt' of a type (line 929)
            chebyt_546980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 73), mpmath_546979, 'chebyt')
            # Processing the call keyword arguments (line 929)
            kwargs_546981 = {}
            # Getting the type of 'exception_to_nan' (line 929)
            exception_to_nan_546978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 56), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 929)
            exception_to_nan_call_result_546982 = invoke(stypy.reporting.localization.Localization(__file__, 929, 56), exception_to_nan_546978, *[chebyt_546980], **kwargs_546981)
            
            # Processing the call keyword arguments (line 929)
            kwargs_546983 = {}
            
            # Call to time_limited(...): (line 929)
            # Processing the call keyword arguments (line 929)
            kwargs_546976 = {}
            # Getting the type of 'time_limited' (line 929)
            time_limited_546975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 41), 'time_limited', False)
            # Calling time_limited(args, kwargs) (line 929)
            time_limited_call_result_546977 = invoke(stypy.reporting.localization.Localization(__file__, 929, 41), time_limited_546975, *[], **kwargs_546976)
            
            # Calling (args, kwargs) (line 929)
            _call_result_546984 = invoke(stypy.reporting.localization.Localization(__file__, 929, 41), time_limited_call_result_546977, *[exception_to_nan_call_result_546982], **kwargs_546983)
            
            # Calling (args, kwargs) (line 929)
            _call_result_546989 = invoke(stypy.reporting.localization.Localization(__file__, 929, 41), _call_result_546984, *[n_546985, x_546986], **kwargs_546988)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 929)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 929, 28), 'stypy_return_type', _call_result_546989)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_381' in the type store
            # Getting the type of 'stypy_return_type' (line 929)
            stypy_return_type_546990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_546990)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_381'
            return stypy_return_type_546990

        # Assigning a type to the variable '_stypy_temp_lambda_381' (line 929)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 929, 28), '_stypy_temp_lambda_381', _stypy_temp_lambda_381)
        # Getting the type of '_stypy_temp_lambda_381' (line 929)
        _stypy_temp_lambda_381_546991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 28), '_stypy_temp_lambda_381')
        
        # Obtaining an instance of the builtin type 'list' (line 930)
        list_546992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 930)
        # Adding element type (line 930)
        
        # Call to Arg(...): (line 930)
        # Processing the call arguments (line 930)
        int_546994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 33), 'int')
        int_546995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 39), 'int')
        # Processing the call keyword arguments (line 930)
        kwargs_546996 = {}
        # Getting the type of 'Arg' (line 930)
        Arg_546993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 930)
        Arg_call_result_546997 = invoke(stypy.reporting.localization.Localization(__file__, 930, 29), Arg_546993, *[int_546994, int_546995], **kwargs_546996)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 28), list_546992, Arg_call_result_546997)
        # Adding element type (line 930)
        
        # Call to Arg(...): (line 930)
        # Processing the call keyword arguments (line 930)
        kwargs_546999 = {}
        # Getting the type of 'Arg' (line 930)
        Arg_546998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 930)
        Arg_call_result_547000 = invoke(stypy.reporting.localization.Localization(__file__, 930, 45), Arg_546998, *[], **kwargs_546999)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 28), list_546992, Arg_call_result_547000)
        
        # Processing the call keyword arguments (line 928)
        int_547001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 55), 'int')
        keyword_547002 = int_547001
        kwargs_547003 = {'n': keyword_547002}
        # Getting the type of 'assert_mpmath_equal' (line 928)
        assert_mpmath_equal_546972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 928)
        assert_mpmath_equal_call_result_547004 = invoke(stypy.reporting.localization.Localization(__file__, 928, 8), assert_mpmath_equal_546972, *[eval_chebyt_546974, _stypy_temp_lambda_381_546991, list_546992], **kwargs_547003)
        
        
        # ################# End of 'test_chebyt(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_chebyt' in the type store
        # Getting the type of 'stypy_return_type' (line 926)
        stypy_return_type_547005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547005)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_chebyt'
        return stypy_return_type_547005


    @norecursion
    def test_chebyu_int(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_chebyu_int'
        module_type_store = module_type_store.open_function_context('test_chebyu_int', 932, 4, False)
        # Assigning a type to the variable 'self' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_chebyu_int')
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_chebyu_int.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_chebyu_int', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_chebyu_int', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_chebyu_int(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 933)
        # Processing the call arguments (line 933)

        @norecursion
        def _stypy_temp_lambda_382(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_382'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_382', 933, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_382.stypy_localization = localization
            _stypy_temp_lambda_382.stypy_type_of_self = None
            _stypy_temp_lambda_382.stypy_type_store = module_type_store
            _stypy_temp_lambda_382.stypy_function_name = '_stypy_temp_lambda_382'
            _stypy_temp_lambda_382.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_382.stypy_varargs_param_name = None
            _stypy_temp_lambda_382.stypy_kwargs_param_name = None
            _stypy_temp_lambda_382.stypy_call_defaults = defaults
            _stypy_temp_lambda_382.stypy_call_varargs = varargs
            _stypy_temp_lambda_382.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_382', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_382', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_chebyu(...): (line 933)
            # Processing the call arguments (line 933)
            
            # Call to int(...): (line 933)
            # Processing the call arguments (line 933)
            # Getting the type of 'n' (line 933)
            n_547010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 60), 'n', False)
            # Processing the call keyword arguments (line 933)
            kwargs_547011 = {}
            # Getting the type of 'int' (line 933)
            int_547009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 56), 'int', False)
            # Calling int(args, kwargs) (line 933)
            int_call_result_547012 = invoke(stypy.reporting.localization.Localization(__file__, 933, 56), int_547009, *[n_547010], **kwargs_547011)
            
            # Getting the type of 'x' (line 933)
            x_547013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 64), 'x', False)
            # Processing the call keyword arguments (line 933)
            kwargs_547014 = {}
            # Getting the type of 'sc' (line 933)
            sc_547007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 41), 'sc', False)
            # Obtaining the member 'eval_chebyu' of a type (line 933)
            eval_chebyu_547008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 41), sc_547007, 'eval_chebyu')
            # Calling eval_chebyu(args, kwargs) (line 933)
            eval_chebyu_call_result_547015 = invoke(stypy.reporting.localization.Localization(__file__, 933, 41), eval_chebyu_547008, *[int_call_result_547012, x_547013], **kwargs_547014)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 933)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 28), 'stypy_return_type', eval_chebyu_call_result_547015)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_382' in the type store
            # Getting the type of 'stypy_return_type' (line 933)
            stypy_return_type_547016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547016)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_382'
            return stypy_return_type_547016

        # Assigning a type to the variable '_stypy_temp_lambda_382' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 28), '_stypy_temp_lambda_382', _stypy_temp_lambda_382)
        # Getting the type of '_stypy_temp_lambda_382' (line 933)
        _stypy_temp_lambda_382_547017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 28), '_stypy_temp_lambda_382')
        
        # Call to exception_to_nan(...): (line 934)
        # Processing the call arguments (line 934)

        @norecursion
        def _stypy_temp_lambda_383(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_383'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_383', 934, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_383.stypy_localization = localization
            _stypy_temp_lambda_383.stypy_type_of_self = None
            _stypy_temp_lambda_383.stypy_type_store = module_type_store
            _stypy_temp_lambda_383.stypy_function_name = '_stypy_temp_lambda_383'
            _stypy_temp_lambda_383.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_383.stypy_varargs_param_name = None
            _stypy_temp_lambda_383.stypy_kwargs_param_name = None
            _stypy_temp_lambda_383.stypy_call_defaults = defaults
            _stypy_temp_lambda_383.stypy_call_varargs = varargs
            _stypy_temp_lambda_383.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_383', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_383', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to chebyu(...): (line 934)
            # Processing the call arguments (line 934)
            # Getting the type of 'n' (line 934)
            n_547021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 72), 'n', False)
            # Getting the type of 'x' (line 934)
            x_547022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 75), 'x', False)
            # Processing the call keyword arguments (line 934)
            # Getting the type of 'HYPERKW' (line 934)
            HYPERKW_547023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 80), 'HYPERKW', False)
            kwargs_547024 = {'HYPERKW_547023': HYPERKW_547023}
            # Getting the type of 'mpmath' (line 934)
            mpmath_547019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 58), 'mpmath', False)
            # Obtaining the member 'chebyu' of a type (line 934)
            chebyu_547020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 934, 58), mpmath_547019, 'chebyu')
            # Calling chebyu(args, kwargs) (line 934)
            chebyu_call_result_547025 = invoke(stypy.reporting.localization.Localization(__file__, 934, 58), chebyu_547020, *[n_547021, x_547022], **kwargs_547024)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 934)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 45), 'stypy_return_type', chebyu_call_result_547025)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_383' in the type store
            # Getting the type of 'stypy_return_type' (line 934)
            stypy_return_type_547026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547026)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_383'
            return stypy_return_type_547026

        # Assigning a type to the variable '_stypy_temp_lambda_383' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 45), '_stypy_temp_lambda_383', _stypy_temp_lambda_383)
        # Getting the type of '_stypy_temp_lambda_383' (line 934)
        _stypy_temp_lambda_383_547027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 45), '_stypy_temp_lambda_383')
        # Processing the call keyword arguments (line 934)
        kwargs_547028 = {}
        # Getting the type of 'exception_to_nan' (line 934)
        exception_to_nan_547018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 934)
        exception_to_nan_call_result_547029 = invoke(stypy.reporting.localization.Localization(__file__, 934, 28), exception_to_nan_547018, *[_stypy_temp_lambda_383_547027], **kwargs_547028)
        
        
        # Obtaining an instance of the builtin type 'list' (line 935)
        list_547030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 935)
        # Adding element type (line 935)
        
        # Call to IntArg(...): (line 935)
        # Processing the call keyword arguments (line 935)
        kwargs_547032 = {}
        # Getting the type of 'IntArg' (line 935)
        IntArg_547031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 935)
        IntArg_call_result_547033 = invoke(stypy.reporting.localization.Localization(__file__, 935, 29), IntArg_547031, *[], **kwargs_547032)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 935, 28), list_547030, IntArg_call_result_547033)
        # Adding element type (line 935)
        
        # Call to Arg(...): (line 935)
        # Processing the call keyword arguments (line 935)
        kwargs_547035 = {}
        # Getting the type of 'Arg' (line 935)
        Arg_547034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 39), 'Arg', False)
        # Calling Arg(args, kwargs) (line 935)
        Arg_call_result_547036 = invoke(stypy.reporting.localization.Localization(__file__, 935, 39), Arg_547034, *[], **kwargs_547035)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 935, 28), list_547030, Arg_call_result_547036)
        
        # Processing the call keyword arguments (line 933)
        int_547037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 51), 'int')
        keyword_547038 = int_547037
        kwargs_547039 = {'dps': keyword_547038}
        # Getting the type of 'assert_mpmath_equal' (line 933)
        assert_mpmath_equal_547006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 933)
        assert_mpmath_equal_call_result_547040 = invoke(stypy.reporting.localization.Localization(__file__, 933, 8), assert_mpmath_equal_547006, *[_stypy_temp_lambda_382_547017, exception_to_nan_call_result_547029, list_547030], **kwargs_547039)
        
        
        # ################# End of 'test_chebyu_int(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_chebyu_int' in the type store
        # Getting the type of 'stypy_return_type' (line 932)
        stypy_return_type_547041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547041)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_chebyu_int'
        return stypy_return_type_547041


    @norecursion
    def test_chebyu(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_chebyu'
        module_type_store = module_type_store.open_function_context('test_chebyu', 937, 4, False)
        # Assigning a type to the variable 'self' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_chebyu')
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_chebyu.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_chebyu', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_chebyu', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_chebyu(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 939)
        # Processing the call arguments (line 939)
        # Getting the type of 'sc' (line 939)
        sc_547043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 28), 'sc', False)
        # Obtaining the member 'eval_chebyu' of a type (line 939)
        eval_chebyu_547044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 939, 28), sc_547043, 'eval_chebyu')

        @norecursion
        def _stypy_temp_lambda_384(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_384'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_384', 940, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_384.stypy_localization = localization
            _stypy_temp_lambda_384.stypy_type_of_self = None
            _stypy_temp_lambda_384.stypy_type_store = module_type_store
            _stypy_temp_lambda_384.stypy_function_name = '_stypy_temp_lambda_384'
            _stypy_temp_lambda_384.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_384.stypy_varargs_param_name = None
            _stypy_temp_lambda_384.stypy_kwargs_param_name = None
            _stypy_temp_lambda_384.stypy_call_defaults = defaults
            _stypy_temp_lambda_384.stypy_call_varargs = varargs
            _stypy_temp_lambda_384.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_384', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_384', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to (...): (line 940)
            # Processing the call arguments (line 940)
            # Getting the type of 'n' (line 940)
            n_547055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 89), 'n', False)
            # Getting the type of 'x' (line 940)
            x_547056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 92), 'x', False)
            # Processing the call keyword arguments (line 940)
            # Getting the type of 'HYPERKW' (line 940)
            HYPERKW_547057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 97), 'HYPERKW', False)
            kwargs_547058 = {'HYPERKW_547057': HYPERKW_547057}
            
            # Call to (...): (line 940)
            # Processing the call arguments (line 940)
            
            # Call to exception_to_nan(...): (line 940)
            # Processing the call arguments (line 940)
            # Getting the type of 'mpmath' (line 940)
            mpmath_547049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 73), 'mpmath', False)
            # Obtaining the member 'chebyu' of a type (line 940)
            chebyu_547050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 940, 73), mpmath_547049, 'chebyu')
            # Processing the call keyword arguments (line 940)
            kwargs_547051 = {}
            # Getting the type of 'exception_to_nan' (line 940)
            exception_to_nan_547048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 56), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 940)
            exception_to_nan_call_result_547052 = invoke(stypy.reporting.localization.Localization(__file__, 940, 56), exception_to_nan_547048, *[chebyu_547050], **kwargs_547051)
            
            # Processing the call keyword arguments (line 940)
            kwargs_547053 = {}
            
            # Call to time_limited(...): (line 940)
            # Processing the call keyword arguments (line 940)
            kwargs_547046 = {}
            # Getting the type of 'time_limited' (line 940)
            time_limited_547045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 41), 'time_limited', False)
            # Calling time_limited(args, kwargs) (line 940)
            time_limited_call_result_547047 = invoke(stypy.reporting.localization.Localization(__file__, 940, 41), time_limited_547045, *[], **kwargs_547046)
            
            # Calling (args, kwargs) (line 940)
            _call_result_547054 = invoke(stypy.reporting.localization.Localization(__file__, 940, 41), time_limited_call_result_547047, *[exception_to_nan_call_result_547052], **kwargs_547053)
            
            # Calling (args, kwargs) (line 940)
            _call_result_547059 = invoke(stypy.reporting.localization.Localization(__file__, 940, 41), _call_result_547054, *[n_547055, x_547056], **kwargs_547058)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 940)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 28), 'stypy_return_type', _call_result_547059)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_384' in the type store
            # Getting the type of 'stypy_return_type' (line 940)
            stypy_return_type_547060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547060)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_384'
            return stypy_return_type_547060

        # Assigning a type to the variable '_stypy_temp_lambda_384' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 28), '_stypy_temp_lambda_384', _stypy_temp_lambda_384)
        # Getting the type of '_stypy_temp_lambda_384' (line 940)
        _stypy_temp_lambda_384_547061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 28), '_stypy_temp_lambda_384')
        
        # Obtaining an instance of the builtin type 'list' (line 941)
        list_547062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 941)
        # Adding element type (line 941)
        
        # Call to Arg(...): (line 941)
        # Processing the call arguments (line 941)
        int_547064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 33), 'int')
        int_547065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 39), 'int')
        # Processing the call keyword arguments (line 941)
        kwargs_547066 = {}
        # Getting the type of 'Arg' (line 941)
        Arg_547063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 941)
        Arg_call_result_547067 = invoke(stypy.reporting.localization.Localization(__file__, 941, 29), Arg_547063, *[int_547064, int_547065], **kwargs_547066)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 941, 28), list_547062, Arg_call_result_547067)
        # Adding element type (line 941)
        
        # Call to Arg(...): (line 941)
        # Processing the call keyword arguments (line 941)
        kwargs_547069 = {}
        # Getting the type of 'Arg' (line 941)
        Arg_547068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 941)
        Arg_call_result_547070 = invoke(stypy.reporting.localization.Localization(__file__, 941, 45), Arg_547068, *[], **kwargs_547069)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 941, 28), list_547062, Arg_call_result_547070)
        
        # Processing the call keyword arguments (line 939)
        kwargs_547071 = {}
        # Getting the type of 'assert_mpmath_equal' (line 939)
        assert_mpmath_equal_547042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 939)
        assert_mpmath_equal_call_result_547072 = invoke(stypy.reporting.localization.Localization(__file__, 939, 8), assert_mpmath_equal_547042, *[eval_chebyu_547044, _stypy_temp_lambda_384_547061, list_547062], **kwargs_547071)
        
        
        # ################# End of 'test_chebyu(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_chebyu' in the type store
        # Getting the type of 'stypy_return_type' (line 937)
        stypy_return_type_547073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547073)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_chebyu'
        return stypy_return_type_547073


    @norecursion
    def test_chi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_chi'
        module_type_store = module_type_store.open_function_context('test_chi', 943, 4, False)
        # Assigning a type to the variable 'self' (line 944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 944, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_chi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_chi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_chi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_chi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_chi')
        TestSystematic.test_chi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_chi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_chi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_chi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_chi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_chi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_chi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_chi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_chi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_chi(...)' code ##################


        @norecursion
        def chi(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'chi'
            module_type_store = module_type_store.open_function_context('chi', 944, 8, False)
            
            # Passed parameters checking function
            chi.stypy_localization = localization
            chi.stypy_type_of_self = None
            chi.stypy_type_store = module_type_store
            chi.stypy_function_name = 'chi'
            chi.stypy_param_names_list = ['x']
            chi.stypy_varargs_param_name = None
            chi.stypy_kwargs_param_name = None
            chi.stypy_call_defaults = defaults
            chi.stypy_call_varargs = varargs
            chi.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'chi', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'chi', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'chi(...)' code ##################

            
            # Obtaining the type of the subscript
            int_547074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 32), 'int')
            
            # Call to shichi(...): (line 945)
            # Processing the call arguments (line 945)
            # Getting the type of 'x' (line 945)
            x_547077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 29), 'x', False)
            # Processing the call keyword arguments (line 945)
            kwargs_547078 = {}
            # Getting the type of 'sc' (line 945)
            sc_547075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 19), 'sc', False)
            # Obtaining the member 'shichi' of a type (line 945)
            shichi_547076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 945, 19), sc_547075, 'shichi')
            # Calling shichi(args, kwargs) (line 945)
            shichi_call_result_547079 = invoke(stypy.reporting.localization.Localization(__file__, 945, 19), shichi_547076, *[x_547077], **kwargs_547078)
            
            # Obtaining the member '__getitem__' of a type (line 945)
            getitem___547080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 945, 19), shichi_call_result_547079, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 945)
            subscript_call_result_547081 = invoke(stypy.reporting.localization.Localization(__file__, 945, 19), getitem___547080, int_547074)
            
            # Assigning a type to the variable 'stypy_return_type' (line 945)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 12), 'stypy_return_type', subscript_call_result_547081)
            
            # ################# End of 'chi(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'chi' in the type store
            # Getting the type of 'stypy_return_type' (line 944)
            stypy_return_type_547082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547082)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'chi'
            return stypy_return_type_547082

        # Assigning a type to the variable 'chi' (line 944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 944, 8), 'chi', chi)
        
        # Call to assert_mpmath_equal(...): (line 946)
        # Processing the call arguments (line 946)
        # Getting the type of 'chi' (line 946)
        chi_547084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 28), 'chi', False)
        # Getting the type of 'mpmath' (line 946)
        mpmath_547085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 33), 'mpmath', False)
        # Obtaining the member 'chi' of a type (line 946)
        chi_547086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 946, 33), mpmath_547085, 'chi')
        
        # Obtaining an instance of the builtin type 'list' (line 946)
        list_547087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 946)
        # Adding element type (line 946)
        
        # Call to Arg(...): (line 946)
        # Processing the call keyword arguments (line 946)
        kwargs_547089 = {}
        # Getting the type of 'Arg' (line 946)
        Arg_547088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 46), 'Arg', False)
        # Calling Arg(args, kwargs) (line 946)
        Arg_call_result_547090 = invoke(stypy.reporting.localization.Localization(__file__, 946, 46), Arg_547088, *[], **kwargs_547089)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 946, 45), list_547087, Arg_call_result_547090)
        
        # Processing the call keyword arguments (line 946)
        kwargs_547091 = {}
        # Getting the type of 'assert_mpmath_equal' (line 946)
        assert_mpmath_equal_547083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 946)
        assert_mpmath_equal_call_result_547092 = invoke(stypy.reporting.localization.Localization(__file__, 946, 8), assert_mpmath_equal_547083, *[chi_547084, chi_547086, list_547087], **kwargs_547091)
        
        
        # Call to assert_mpmath_equal(...): (line 948)
        # Processing the call arguments (line 948)
        # Getting the type of 'chi' (line 948)
        chi_547094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 28), 'chi', False)
        # Getting the type of 'mpmath' (line 948)
        mpmath_547095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 33), 'mpmath', False)
        # Obtaining the member 'chi' of a type (line 948)
        chi_547096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 33), mpmath_547095, 'chi')
        
        # Obtaining an instance of the builtin type 'list' (line 948)
        list_547097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 948)
        # Adding element type (line 948)
        
        # Call to FixedArg(...): (line 948)
        # Processing the call arguments (line 948)
        
        # Obtaining an instance of the builtin type 'list' (line 948)
        list_547099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 948)
        # Adding element type (line 948)
        int_547100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 56), 'int')
        float_547101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 61), 'float')
        # Applying the binary operator '-' (line 948)
        result_sub_547102 = python_operator(stypy.reporting.localization.Localization(__file__, 948, 56), '-', int_547100, float_547101)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 948, 55), list_547099, result_sub_547102)
        # Adding element type (line 948)
        int_547103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 67), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 948, 55), list_547099, int_547103)
        # Adding element type (line 948)
        int_547104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 71), 'int')
        float_547105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 76), 'float')
        # Applying the binary operator '+' (line 948)
        result_add_547106 = python_operator(stypy.reporting.localization.Localization(__file__, 948, 71), '+', int_547104, float_547105)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 948, 55), list_547099, result_add_547106)
        
        # Processing the call keyword arguments (line 948)
        kwargs_547107 = {}
        # Getting the type of 'FixedArg' (line 948)
        FixedArg_547098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 46), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 948)
        FixedArg_call_result_547108 = invoke(stypy.reporting.localization.Localization(__file__, 948, 46), FixedArg_547098, *[list_547099], **kwargs_547107)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 948, 45), list_547097, FixedArg_call_result_547108)
        
        # Processing the call keyword arguments (line 948)
        kwargs_547109 = {}
        # Getting the type of 'assert_mpmath_equal' (line 948)
        assert_mpmath_equal_547093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 948)
        assert_mpmath_equal_call_result_547110 = invoke(stypy.reporting.localization.Localization(__file__, 948, 8), assert_mpmath_equal_547093, *[chi_547094, chi_547096, list_547097], **kwargs_547109)
        
        
        # ################# End of 'test_chi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_chi' in the type store
        # Getting the type of 'stypy_return_type' (line 943)
        stypy_return_type_547111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547111)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_chi'
        return stypy_return_type_547111


    @norecursion
    def test_chi_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_chi_complex'
        module_type_store = module_type_store.open_function_context('test_chi_complex', 950, 4, False)
        # Assigning a type to the variable 'self' (line 951)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 951, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_chi_complex')
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_chi_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_chi_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_chi_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_chi_complex(...)' code ##################


        @norecursion
        def chi(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'chi'
            module_type_store = module_type_store.open_function_context('chi', 951, 8, False)
            
            # Passed parameters checking function
            chi.stypy_localization = localization
            chi.stypy_type_of_self = None
            chi.stypy_type_store = module_type_store
            chi.stypy_function_name = 'chi'
            chi.stypy_param_names_list = ['z']
            chi.stypy_varargs_param_name = None
            chi.stypy_kwargs_param_name = None
            chi.stypy_call_defaults = defaults
            chi.stypy_call_varargs = varargs
            chi.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'chi', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'chi', localization, ['z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'chi(...)' code ##################

            
            # Obtaining the type of the subscript
            int_547112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 952, 32), 'int')
            
            # Call to shichi(...): (line 952)
            # Processing the call arguments (line 952)
            # Getting the type of 'z' (line 952)
            z_547115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 29), 'z', False)
            # Processing the call keyword arguments (line 952)
            kwargs_547116 = {}
            # Getting the type of 'sc' (line 952)
            sc_547113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 19), 'sc', False)
            # Obtaining the member 'shichi' of a type (line 952)
            shichi_547114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 952, 19), sc_547113, 'shichi')
            # Calling shichi(args, kwargs) (line 952)
            shichi_call_result_547117 = invoke(stypy.reporting.localization.Localization(__file__, 952, 19), shichi_547114, *[z_547115], **kwargs_547116)
            
            # Obtaining the member '__getitem__' of a type (line 952)
            getitem___547118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 952, 19), shichi_call_result_547117, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 952)
            subscript_call_result_547119 = invoke(stypy.reporting.localization.Localization(__file__, 952, 19), getitem___547118, int_547112)
            
            # Assigning a type to the variable 'stypy_return_type' (line 952)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 952, 12), 'stypy_return_type', subscript_call_result_547119)
            
            # ################# End of 'chi(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'chi' in the type store
            # Getting the type of 'stypy_return_type' (line 951)
            stypy_return_type_547120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547120)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'chi'
            return stypy_return_type_547120

        # Assigning a type to the variable 'chi' (line 951)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 951, 8), 'chi', chi)
        
        # Call to assert_mpmath_equal(...): (line 954)
        # Processing the call arguments (line 954)
        # Getting the type of 'chi' (line 954)
        chi_547122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 28), 'chi', False)
        # Getting the type of 'mpmath' (line 955)
        mpmath_547123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 28), 'mpmath', False)
        # Obtaining the member 'chi' of a type (line 955)
        chi_547124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 28), mpmath_547123, 'chi')
        
        # Obtaining an instance of the builtin type 'list' (line 956)
        list_547125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 956, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 956)
        # Adding element type (line 956)
        
        # Call to ComplexArg(...): (line 956)
        # Processing the call arguments (line 956)
        
        # Call to complex(...): (line 956)
        # Processing the call arguments (line 956)
        
        # Getting the type of 'np' (line 956)
        np_547128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 49), 'np', False)
        # Obtaining the member 'inf' of a type (line 956)
        inf_547129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 49), np_547128, 'inf')
        # Applying the 'usub' unary operator (line 956)
        result___neg___547130 = python_operator(stypy.reporting.localization.Localization(__file__, 956, 48), 'usub', inf_547129)
        
        float_547131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 956, 57), 'float')
        # Processing the call keyword arguments (line 956)
        kwargs_547132 = {}
        # Getting the type of 'complex' (line 956)
        complex_547127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 40), 'complex', False)
        # Calling complex(args, kwargs) (line 956)
        complex_call_result_547133 = invoke(stypy.reporting.localization.Localization(__file__, 956, 40), complex_547127, *[result___neg___547130, float_547131], **kwargs_547132)
        
        
        # Call to complex(...): (line 956)
        # Processing the call arguments (line 956)
        # Getting the type of 'np' (line 956)
        np_547135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 72), 'np', False)
        # Obtaining the member 'inf' of a type (line 956)
        inf_547136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 72), np_547135, 'inf')
        float_547137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 956, 80), 'float')
        # Processing the call keyword arguments (line 956)
        kwargs_547138 = {}
        # Getting the type of 'complex' (line 956)
        complex_547134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 64), 'complex', False)
        # Calling complex(args, kwargs) (line 956)
        complex_call_result_547139 = invoke(stypy.reporting.localization.Localization(__file__, 956, 64), complex_547134, *[inf_547136, float_547137], **kwargs_547138)
        
        # Processing the call keyword arguments (line 956)
        kwargs_547140 = {}
        # Getting the type of 'ComplexArg' (line 956)
        ComplexArg_547126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 956)
        ComplexArg_call_result_547141 = invoke(stypy.reporting.localization.Localization(__file__, 956, 29), ComplexArg_547126, *[complex_call_result_547133, complex_call_result_547139], **kwargs_547140)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 956, 28), list_547125, ComplexArg_call_result_547141)
        
        # Processing the call keyword arguments (line 954)
        float_547142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 33), 'float')
        keyword_547143 = float_547142
        kwargs_547144 = {'rtol': keyword_547143}
        # Getting the type of 'assert_mpmath_equal' (line 954)
        assert_mpmath_equal_547121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 954)
        assert_mpmath_equal_call_result_547145 = invoke(stypy.reporting.localization.Localization(__file__, 954, 8), assert_mpmath_equal_547121, *[chi_547122, chi_547124, list_547125], **kwargs_547144)
        
        
        # ################# End of 'test_chi_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_chi_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 950)
        stypy_return_type_547146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547146)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_chi_complex'
        return stypy_return_type_547146


    @norecursion
    def test_ci(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ci'
        module_type_store = module_type_store.open_function_context('test_ci', 959, 4, False)
        # Assigning a type to the variable 'self' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ci.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ci.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ci.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ci.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ci')
        TestSystematic.test_ci.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ci.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ci.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ci.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ci.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ci.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ci.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ci', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ci', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ci(...)' code ##################


        @norecursion
        def ci(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'ci'
            module_type_store = module_type_store.open_function_context('ci', 960, 8, False)
            
            # Passed parameters checking function
            ci.stypy_localization = localization
            ci.stypy_type_of_self = None
            ci.stypy_type_store = module_type_store
            ci.stypy_function_name = 'ci'
            ci.stypy_param_names_list = ['x']
            ci.stypy_varargs_param_name = None
            ci.stypy_kwargs_param_name = None
            ci.stypy_call_defaults = defaults
            ci.stypy_call_varargs = varargs
            ci.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'ci', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'ci', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'ci(...)' code ##################

            
            # Obtaining the type of the subscript
            int_547147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 30), 'int')
            
            # Call to sici(...): (line 961)
            # Processing the call arguments (line 961)
            # Getting the type of 'x' (line 961)
            x_547150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 27), 'x', False)
            # Processing the call keyword arguments (line 961)
            kwargs_547151 = {}
            # Getting the type of 'sc' (line 961)
            sc_547148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 19), 'sc', False)
            # Obtaining the member 'sici' of a type (line 961)
            sici_547149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 961, 19), sc_547148, 'sici')
            # Calling sici(args, kwargs) (line 961)
            sici_call_result_547152 = invoke(stypy.reporting.localization.Localization(__file__, 961, 19), sici_547149, *[x_547150], **kwargs_547151)
            
            # Obtaining the member '__getitem__' of a type (line 961)
            getitem___547153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 961, 19), sici_call_result_547152, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 961)
            subscript_call_result_547154 = invoke(stypy.reporting.localization.Localization(__file__, 961, 19), getitem___547153, int_547147)
            
            # Assigning a type to the variable 'stypy_return_type' (line 961)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 12), 'stypy_return_type', subscript_call_result_547154)
            
            # ################# End of 'ci(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'ci' in the type store
            # Getting the type of 'stypy_return_type' (line 960)
            stypy_return_type_547155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547155)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'ci'
            return stypy_return_type_547155

        # Assigning a type to the variable 'ci' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'ci', ci)
        
        # Call to assert_mpmath_equal(...): (line 963)
        # Processing the call arguments (line 963)
        # Getting the type of 'ci' (line 963)
        ci_547157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 28), 'ci', False)
        # Getting the type of 'mpmath' (line 964)
        mpmath_547158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 28), 'mpmath', False)
        # Obtaining the member 'ci' of a type (line 964)
        ci_547159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 964, 28), mpmath_547158, 'ci')
        
        # Obtaining an instance of the builtin type 'list' (line 965)
        list_547160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 965)
        # Adding element type (line 965)
        
        # Call to Arg(...): (line 965)
        # Processing the call arguments (line 965)
        float_547162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 33), 'float')
        float_547163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 39), 'float')
        # Processing the call keyword arguments (line 965)
        kwargs_547164 = {}
        # Getting the type of 'Arg' (line 965)
        Arg_547161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 965)
        Arg_call_result_547165 = invoke(stypy.reporting.localization.Localization(__file__, 965, 29), Arg_547161, *[float_547162, float_547163], **kwargs_547164)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 965, 28), list_547160, Arg_call_result_547165)
        
        # Processing the call keyword arguments (line 963)
        kwargs_547166 = {}
        # Getting the type of 'assert_mpmath_equal' (line 963)
        assert_mpmath_equal_547156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 963)
        assert_mpmath_equal_call_result_547167 = invoke(stypy.reporting.localization.Localization(__file__, 963, 8), assert_mpmath_equal_547156, *[ci_547157, ci_547159, list_547160], **kwargs_547166)
        
        
        # ################# End of 'test_ci(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ci' in the type store
        # Getting the type of 'stypy_return_type' (line 959)
        stypy_return_type_547168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547168)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ci'
        return stypy_return_type_547168


    @norecursion
    def test_ci_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ci_complex'
        module_type_store = module_type_store.open_function_context('test_ci_complex', 967, 4, False)
        # Assigning a type to the variable 'self' (line 968)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 968, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ci_complex')
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ci_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ci_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ci_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ci_complex(...)' code ##################


        @norecursion
        def ci(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'ci'
            module_type_store = module_type_store.open_function_context('ci', 968, 8, False)
            
            # Passed parameters checking function
            ci.stypy_localization = localization
            ci.stypy_type_of_self = None
            ci.stypy_type_store = module_type_store
            ci.stypy_function_name = 'ci'
            ci.stypy_param_names_list = ['z']
            ci.stypy_varargs_param_name = None
            ci.stypy_kwargs_param_name = None
            ci.stypy_call_defaults = defaults
            ci.stypy_call_varargs = varargs
            ci.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'ci', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'ci', localization, ['z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'ci(...)' code ##################

            
            # Obtaining the type of the subscript
            int_547169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 30), 'int')
            
            # Call to sici(...): (line 969)
            # Processing the call arguments (line 969)
            # Getting the type of 'z' (line 969)
            z_547172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 27), 'z', False)
            # Processing the call keyword arguments (line 969)
            kwargs_547173 = {}
            # Getting the type of 'sc' (line 969)
            sc_547170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 19), 'sc', False)
            # Obtaining the member 'sici' of a type (line 969)
            sici_547171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 969, 19), sc_547170, 'sici')
            # Calling sici(args, kwargs) (line 969)
            sici_call_result_547174 = invoke(stypy.reporting.localization.Localization(__file__, 969, 19), sici_547171, *[z_547172], **kwargs_547173)
            
            # Obtaining the member '__getitem__' of a type (line 969)
            getitem___547175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 969, 19), sici_call_result_547174, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 969)
            subscript_call_result_547176 = invoke(stypy.reporting.localization.Localization(__file__, 969, 19), getitem___547175, int_547169)
            
            # Assigning a type to the variable 'stypy_return_type' (line 969)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 969, 12), 'stypy_return_type', subscript_call_result_547176)
            
            # ################# End of 'ci(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'ci' in the type store
            # Getting the type of 'stypy_return_type' (line 968)
            stypy_return_type_547177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547177)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'ci'
            return stypy_return_type_547177

        # Assigning a type to the variable 'ci' (line 968)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 968, 8), 'ci', ci)
        
        # Call to assert_mpmath_equal(...): (line 971)
        # Processing the call arguments (line 971)
        # Getting the type of 'ci' (line 971)
        ci_547179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 28), 'ci', False)
        # Getting the type of 'mpmath' (line 972)
        mpmath_547180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 28), 'mpmath', False)
        # Obtaining the member 'ci' of a type (line 972)
        ci_547181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 972, 28), mpmath_547180, 'ci')
        
        # Obtaining an instance of the builtin type 'list' (line 973)
        list_547182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 973)
        # Adding element type (line 973)
        
        # Call to ComplexArg(...): (line 973)
        # Processing the call arguments (line 973)
        
        # Call to complex(...): (line 973)
        # Processing the call arguments (line 973)
        float_547185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 48), 'float')
        
        # Getting the type of 'np' (line 973)
        np_547186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 55), 'np', False)
        # Obtaining the member 'inf' of a type (line 973)
        inf_547187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 55), np_547186, 'inf')
        # Applying the 'usub' unary operator (line 973)
        result___neg___547188 = python_operator(stypy.reporting.localization.Localization(__file__, 973, 54), 'usub', inf_547187)
        
        # Processing the call keyword arguments (line 973)
        kwargs_547189 = {}
        # Getting the type of 'complex' (line 973)
        complex_547184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 40), 'complex', False)
        # Calling complex(args, kwargs) (line 973)
        complex_call_result_547190 = invoke(stypy.reporting.localization.Localization(__file__, 973, 40), complex_547184, *[float_547185, result___neg___547188], **kwargs_547189)
        
        
        # Call to complex(...): (line 973)
        # Processing the call arguments (line 973)
        float_547192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 72), 'float')
        # Getting the type of 'np' (line 973)
        np_547193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 77), 'np', False)
        # Obtaining the member 'inf' of a type (line 973)
        inf_547194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 77), np_547193, 'inf')
        # Processing the call keyword arguments (line 973)
        kwargs_547195 = {}
        # Getting the type of 'complex' (line 973)
        complex_547191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 64), 'complex', False)
        # Calling complex(args, kwargs) (line 973)
        complex_call_result_547196 = invoke(stypy.reporting.localization.Localization(__file__, 973, 64), complex_547191, *[float_547192, inf_547194], **kwargs_547195)
        
        # Processing the call keyword arguments (line 973)
        kwargs_547197 = {}
        # Getting the type of 'ComplexArg' (line 973)
        ComplexArg_547183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 973)
        ComplexArg_call_result_547198 = invoke(stypy.reporting.localization.Localization(__file__, 973, 29), ComplexArg_547183, *[complex_call_result_547190, complex_call_result_547196], **kwargs_547197)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 28), list_547182, ComplexArg_call_result_547198)
        
        # Processing the call keyword arguments (line 971)
        float_547199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 974, 33), 'float')
        keyword_547200 = float_547199
        kwargs_547201 = {'rtol': keyword_547200}
        # Getting the type of 'assert_mpmath_equal' (line 971)
        assert_mpmath_equal_547178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 971)
        assert_mpmath_equal_call_result_547202 = invoke(stypy.reporting.localization.Localization(__file__, 971, 8), assert_mpmath_equal_547178, *[ci_547179, ci_547181, list_547182], **kwargs_547201)
        
        
        # ################# End of 'test_ci_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ci_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 967)
        stypy_return_type_547203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547203)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ci_complex'
        return stypy_return_type_547203


    @norecursion
    def test_cospi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_cospi'
        module_type_store = module_type_store.open_function_context('test_cospi', 976, 4, False)
        # Assigning a type to the variable 'self' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_cospi')
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_cospi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_cospi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_cospi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_cospi(...)' code ##################

        
        # Assigning a Attribute to a Name (line 981):
        
        # Assigning a Attribute to a Name (line 981):
        
        # Call to finfo(...): (line 981)
        # Processing the call arguments (line 981)
        # Getting the type of 'float' (line 981)
        float_547206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 23), 'float', False)
        # Processing the call keyword arguments (line 981)
        kwargs_547207 = {}
        # Getting the type of 'np' (line 981)
        np_547204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 14), 'np', False)
        # Obtaining the member 'finfo' of a type (line 981)
        finfo_547205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 14), np_547204, 'finfo')
        # Calling finfo(args, kwargs) (line 981)
        finfo_call_result_547208 = invoke(stypy.reporting.localization.Localization(__file__, 981, 14), finfo_547205, *[float_547206], **kwargs_547207)
        
        # Obtaining the member 'eps' of a type (line 981)
        eps_547209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 14), finfo_call_result_547208, 'eps')
        # Assigning a type to the variable 'eps' (line 981)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 981, 8), 'eps', eps_547209)
        
        # Call to assert_mpmath_equal(...): (line 982)
        # Processing the call arguments (line 982)
        # Getting the type of '_cospi' (line 982)
        _cospi_547211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 28), '_cospi', False)
        # Getting the type of 'mpmath' (line 983)
        mpmath_547212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 28), 'mpmath', False)
        # Obtaining the member 'cospi' of a type (line 983)
        cospi_547213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 28), mpmath_547212, 'cospi')
        
        # Obtaining an instance of the builtin type 'list' (line 984)
        list_547214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 984, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 984)
        # Adding element type (line 984)
        
        # Call to Arg(...): (line 984)
        # Processing the call keyword arguments (line 984)
        kwargs_547216 = {}
        # Getting the type of 'Arg' (line 984)
        Arg_547215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 984)
        Arg_call_result_547217 = invoke(stypy.reporting.localization.Localization(__file__, 984, 29), Arg_547215, *[], **kwargs_547216)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 984, 28), list_547214, Arg_call_result_547217)
        
        # Processing the call keyword arguments (line 982)
        # Getting the type of 'False' (line 984)
        False_547218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 44), 'False', False)
        keyword_547219 = False_547218
        int_547220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 984, 56), 'int')
        # Getting the type of 'eps' (line 984)
        eps_547221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 58), 'eps', False)
        # Applying the binary operator '*' (line 984)
        result_mul_547222 = python_operator(stypy.reporting.localization.Localization(__file__, 984, 56), '*', int_547220, eps_547221)
        
        keyword_547223 = result_mul_547222
        kwargs_547224 = {'rtol': keyword_547223, 'nan_ok': keyword_547219}
        # Getting the type of 'assert_mpmath_equal' (line 982)
        assert_mpmath_equal_547210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 982)
        assert_mpmath_equal_call_result_547225 = invoke(stypy.reporting.localization.Localization(__file__, 982, 8), assert_mpmath_equal_547210, *[_cospi_547211, cospi_547213, list_547214], **kwargs_547224)
        
        
        # ################# End of 'test_cospi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_cospi' in the type store
        # Getting the type of 'stypy_return_type' (line 976)
        stypy_return_type_547226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547226)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_cospi'
        return stypy_return_type_547226


    @norecursion
    def test_cospi_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_cospi_complex'
        module_type_store = module_type_store.open_function_context('test_cospi_complex', 986, 4, False)
        # Assigning a type to the variable 'self' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_cospi_complex')
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_cospi_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_cospi_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_cospi_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_cospi_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 987)
        # Processing the call arguments (line 987)
        # Getting the type of '_cospi' (line 987)
        _cospi_547228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 28), '_cospi', False)
        # Getting the type of 'mpmath' (line 988)
        mpmath_547229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 28), 'mpmath', False)
        # Obtaining the member 'cospi' of a type (line 988)
        cospi_547230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 28), mpmath_547229, 'cospi')
        
        # Obtaining an instance of the builtin type 'list' (line 989)
        list_547231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 989)
        # Adding element type (line 989)
        
        # Call to ComplexArg(...): (line 989)
        # Processing the call keyword arguments (line 989)
        kwargs_547233 = {}
        # Getting the type of 'ComplexArg' (line 989)
        ComplexArg_547232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 989)
        ComplexArg_call_result_547234 = invoke(stypy.reporting.localization.Localization(__file__, 989, 29), ComplexArg_547232, *[], **kwargs_547233)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 28), list_547231, ComplexArg_call_result_547234)
        
        # Processing the call keyword arguments (line 987)
        # Getting the type of 'False' (line 989)
        False_547235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 51), 'False', False)
        keyword_547236 = False_547235
        float_547237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 63), 'float')
        keyword_547238 = float_547237
        kwargs_547239 = {'rtol': keyword_547238, 'nan_ok': keyword_547236}
        # Getting the type of 'assert_mpmath_equal' (line 987)
        assert_mpmath_equal_547227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 987)
        assert_mpmath_equal_call_result_547240 = invoke(stypy.reporting.localization.Localization(__file__, 987, 8), assert_mpmath_equal_547227, *[_cospi_547228, cospi_547230, list_547231], **kwargs_547239)
        
        
        # ################# End of 'test_cospi_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_cospi_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 986)
        stypy_return_type_547241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547241)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_cospi_complex'
        return stypy_return_type_547241


    @norecursion
    def test_digamma(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_digamma'
        module_type_store = module_type_store.open_function_context('test_digamma', 991, 4, False)
        # Assigning a type to the variable 'self' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_digamma')
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_digamma.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_digamma', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_digamma', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_digamma(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 992)
        # Processing the call arguments (line 992)
        # Getting the type of 'sc' (line 992)
        sc_547243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 28), 'sc', False)
        # Obtaining the member 'digamma' of a type (line 992)
        digamma_547244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 28), sc_547243, 'digamma')
        
        # Call to exception_to_nan(...): (line 993)
        # Processing the call arguments (line 993)
        # Getting the type of 'mpmath' (line 993)
        mpmath_547246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 45), 'mpmath', False)
        # Obtaining the member 'digamma' of a type (line 993)
        digamma_547247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 45), mpmath_547246, 'digamma')
        # Processing the call keyword arguments (line 993)
        kwargs_547248 = {}
        # Getting the type of 'exception_to_nan' (line 993)
        exception_to_nan_547245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 993)
        exception_to_nan_call_result_547249 = invoke(stypy.reporting.localization.Localization(__file__, 993, 28), exception_to_nan_547245, *[digamma_547247], **kwargs_547248)
        
        
        # Obtaining an instance of the builtin type 'list' (line 994)
        list_547250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 994)
        # Adding element type (line 994)
        
        # Call to Arg(...): (line 994)
        # Processing the call keyword arguments (line 994)
        kwargs_547252 = {}
        # Getting the type of 'Arg' (line 994)
        Arg_547251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 994)
        Arg_call_result_547253 = invoke(stypy.reporting.localization.Localization(__file__, 994, 29), Arg_547251, *[], **kwargs_547252)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 994, 28), list_547250, Arg_call_result_547253)
        
        # Processing the call keyword arguments (line 992)
        float_547254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 42), 'float')
        keyword_547255 = float_547254
        int_547256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 53), 'int')
        keyword_547257 = int_547256
        kwargs_547258 = {'rtol': keyword_547255, 'dps': keyword_547257}
        # Getting the type of 'assert_mpmath_equal' (line 992)
        assert_mpmath_equal_547242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 992)
        assert_mpmath_equal_call_result_547259 = invoke(stypy.reporting.localization.Localization(__file__, 992, 8), assert_mpmath_equal_547242, *[digamma_547244, exception_to_nan_call_result_547249, list_547250], **kwargs_547258)
        
        
        # ################# End of 'test_digamma(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_digamma' in the type store
        # Getting the type of 'stypy_return_type' (line 991)
        stypy_return_type_547260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547260)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_digamma'
        return stypy_return_type_547260


    @norecursion
    def test_digamma_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_digamma_complex'
        module_type_store = module_type_store.open_function_context('test_digamma_complex', 996, 4, False)
        # Assigning a type to the variable 'self' (line 997)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 997, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_digamma_complex')
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_digamma_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_digamma_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_digamma_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_digamma_complex(...)' code ##################


        @norecursion
        def param_filter(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'param_filter'
            module_type_store = module_type_store.open_function_context('param_filter', 999, 8, False)
            
            # Passed parameters checking function
            param_filter.stypy_localization = localization
            param_filter.stypy_type_of_self = None
            param_filter.stypy_type_store = module_type_store
            param_filter.stypy_function_name = 'param_filter'
            param_filter.stypy_param_names_list = ['z']
            param_filter.stypy_varargs_param_name = None
            param_filter.stypy_kwargs_param_name = None
            param_filter.stypy_call_defaults = defaults
            param_filter.stypy_call_varargs = varargs
            param_filter.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'param_filter', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'param_filter', localization, ['z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'param_filter(...)' code ##################

            
            # Call to where(...): (line 1000)
            # Processing the call arguments (line 1000)
            
            # Getting the type of 'z' (line 1000)
            z_547263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 29), 'z', False)
            # Obtaining the member 'real' of a type (line 1000)
            real_547264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 29), z_547263, 'real')
            int_547265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 38), 'int')
            # Applying the binary operator '<' (line 1000)
            result_lt_547266 = python_operator(stypy.reporting.localization.Localization(__file__, 1000, 29), '<', real_547264, int_547265)
            
            
            
            # Call to abs(...): (line 1000)
            # Processing the call arguments (line 1000)
            # Getting the type of 'z' (line 1000)
            z_547269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 51), 'z', False)
            # Obtaining the member 'imag' of a type (line 1000)
            imag_547270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 51), z_547269, 'imag')
            # Processing the call keyword arguments (line 1000)
            kwargs_547271 = {}
            # Getting the type of 'np' (line 1000)
            np_547267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 44), 'np', False)
            # Obtaining the member 'abs' of a type (line 1000)
            abs_547268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 44), np_547267, 'abs')
            # Calling abs(args, kwargs) (line 1000)
            abs_call_result_547272 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 44), abs_547268, *[imag_547270], **kwargs_547271)
            
            float_547273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 61), 'float')
            # Applying the binary operator '<' (line 1000)
            result_lt_547274 = python_operator(stypy.reporting.localization.Localization(__file__, 1000, 44), '<', abs_call_result_547272, float_547273)
            
            # Applying the binary operator '&' (line 1000)
            result_and__547275 = python_operator(stypy.reporting.localization.Localization(__file__, 1000, 28), '&', result_lt_547266, result_lt_547274)
            
            # Getting the type of 'False' (line 1000)
            False_547276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 68), 'False', False)
            # Getting the type of 'True' (line 1000)
            True_547277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 75), 'True', False)
            # Processing the call keyword arguments (line 1000)
            kwargs_547278 = {}
            # Getting the type of 'np' (line 1000)
            np_547261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 19), 'np', False)
            # Obtaining the member 'where' of a type (line 1000)
            where_547262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 19), np_547261, 'where')
            # Calling where(args, kwargs) (line 1000)
            where_call_result_547279 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 19), where_547262, *[result_and__547275, False_547276, True_547277], **kwargs_547278)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1000)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1000, 12), 'stypy_return_type', where_call_result_547279)
            
            # ################# End of 'param_filter(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'param_filter' in the type store
            # Getting the type of 'stypy_return_type' (line 999)
            stypy_return_type_547280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547280)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'param_filter'
            return stypy_return_type_547280

        # Assigning a type to the variable 'param_filter' (line 999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 999, 8), 'param_filter', param_filter)
        
        # Call to assert_mpmath_equal(...): (line 1002)
        # Processing the call arguments (line 1002)
        # Getting the type of 'sc' (line 1002)
        sc_547282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 28), 'sc', False)
        # Obtaining the member 'digamma' of a type (line 1002)
        digamma_547283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1002, 28), sc_547282, 'digamma')
        
        # Call to exception_to_nan(...): (line 1003)
        # Processing the call arguments (line 1003)
        # Getting the type of 'mpmath' (line 1003)
        mpmath_547285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 45), 'mpmath', False)
        # Obtaining the member 'digamma' of a type (line 1003)
        digamma_547286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1003, 45), mpmath_547285, 'digamma')
        # Processing the call keyword arguments (line 1003)
        kwargs_547287 = {}
        # Getting the type of 'exception_to_nan' (line 1003)
        exception_to_nan_547284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1003)
        exception_to_nan_call_result_547288 = invoke(stypy.reporting.localization.Localization(__file__, 1003, 28), exception_to_nan_547284, *[digamma_547286], **kwargs_547287)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1004)
        list_547289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1004)
        # Adding element type (line 1004)
        
        # Call to ComplexArg(...): (line 1004)
        # Processing the call keyword arguments (line 1004)
        kwargs_547291 = {}
        # Getting the type of 'ComplexArg' (line 1004)
        ComplexArg_547290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1004)
        ComplexArg_call_result_547292 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 29), ComplexArg_547290, *[], **kwargs_547291)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1004, 28), list_547289, ComplexArg_call_result_547292)
        
        # Processing the call keyword arguments (line 1002)
        float_547293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 49), 'float')
        keyword_547294 = float_547293
        int_547295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 60), 'int')
        keyword_547296 = int_547295
        # Getting the type of 'param_filter' (line 1005)
        param_filter_547297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 41), 'param_filter', False)
        keyword_547298 = param_filter_547297
        kwargs_547299 = {'param_filter': keyword_547298, 'rtol': keyword_547294, 'dps': keyword_547296}
        # Getting the type of 'assert_mpmath_equal' (line 1002)
        assert_mpmath_equal_547281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1002)
        assert_mpmath_equal_call_result_547300 = invoke(stypy.reporting.localization.Localization(__file__, 1002, 8), assert_mpmath_equal_547281, *[digamma_547283, exception_to_nan_call_result_547288, list_547289], **kwargs_547299)
        
        
        # ################# End of 'test_digamma_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_digamma_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 996)
        stypy_return_type_547301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547301)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_digamma_complex'
        return stypy_return_type_547301


    @norecursion
    def test_e1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_e1'
        module_type_store = module_type_store.open_function_context('test_e1', 1007, 4, False)
        # Assigning a type to the variable 'self' (line 1008)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1008, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_e1.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_e1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_e1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_e1.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_e1')
        TestSystematic.test_e1.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_e1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_e1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_e1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_e1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_e1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_e1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_e1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_e1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_e1(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1008)
        # Processing the call arguments (line 1008)
        # Getting the type of 'sc' (line 1008)
        sc_547303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 28), 'sc', False)
        # Obtaining the member 'exp1' of a type (line 1008)
        exp1_547304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1008, 28), sc_547303, 'exp1')
        # Getting the type of 'mpmath' (line 1009)
        mpmath_547305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 28), 'mpmath', False)
        # Obtaining the member 'e1' of a type (line 1009)
        e1_547306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 28), mpmath_547305, 'e1')
        
        # Obtaining an instance of the builtin type 'list' (line 1010)
        list_547307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1010)
        # Adding element type (line 1010)
        
        # Call to Arg(...): (line 1010)
        # Processing the call keyword arguments (line 1010)
        kwargs_547309 = {}
        # Getting the type of 'Arg' (line 1010)
        Arg_547308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1010)
        Arg_call_result_547310 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 29), Arg_547308, *[], **kwargs_547309)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1010, 28), list_547307, Arg_call_result_547310)
        
        # Processing the call keyword arguments (line 1008)
        float_547311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 42), 'float')
        keyword_547312 = float_547311
        kwargs_547313 = {'rtol': keyword_547312}
        # Getting the type of 'assert_mpmath_equal' (line 1008)
        assert_mpmath_equal_547302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1008)
        assert_mpmath_equal_call_result_547314 = invoke(stypy.reporting.localization.Localization(__file__, 1008, 8), assert_mpmath_equal_547302, *[exp1_547304, e1_547306, list_547307], **kwargs_547313)
        
        
        # ################# End of 'test_e1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_e1' in the type store
        # Getting the type of 'stypy_return_type' (line 1007)
        stypy_return_type_547315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547315)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_e1'
        return stypy_return_type_547315


    @norecursion
    def test_e1_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_e1_complex'
        module_type_store = module_type_store.open_function_context('test_e1_complex', 1012, 4, False)
        # Assigning a type to the variable 'self' (line 1013)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_e1_complex')
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_e1_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_e1_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_e1_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_e1_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1014)
        # Processing the call arguments (line 1014)
        # Getting the type of 'sc' (line 1014)
        sc_547317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 28), 'sc', False)
        # Obtaining the member 'exp1' of a type (line 1014)
        exp1_547318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1014, 28), sc_547317, 'exp1')
        # Getting the type of 'mpmath' (line 1015)
        mpmath_547319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 28), 'mpmath', False)
        # Obtaining the member 'e1' of a type (line 1015)
        e1_547320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 28), mpmath_547319, 'e1')
        
        # Obtaining an instance of the builtin type 'list' (line 1016)
        list_547321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1016)
        # Adding element type (line 1016)
        
        # Call to ComplexArg(...): (line 1016)
        # Processing the call arguments (line 1016)
        
        # Call to complex(...): (line 1016)
        # Processing the call arguments (line 1016)
        
        # Getting the type of 'np' (line 1016)
        np_547324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 49), 'np', False)
        # Obtaining the member 'inf' of a type (line 1016)
        inf_547325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 49), np_547324, 'inf')
        # Applying the 'usub' unary operator (line 1016)
        result___neg___547326 = python_operator(stypy.reporting.localization.Localization(__file__, 1016, 48), 'usub', inf_547325)
        
        float_547327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 57), 'float')
        # Processing the call keyword arguments (line 1016)
        kwargs_547328 = {}
        # Getting the type of 'complex' (line 1016)
        complex_547323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 40), 'complex', False)
        # Calling complex(args, kwargs) (line 1016)
        complex_call_result_547329 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 40), complex_547323, *[result___neg___547326, float_547327], **kwargs_547328)
        
        
        # Call to complex(...): (line 1016)
        # Processing the call arguments (line 1016)
        # Getting the type of 'np' (line 1016)
        np_547331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 72), 'np', False)
        # Obtaining the member 'inf' of a type (line 1016)
        inf_547332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 72), np_547331, 'inf')
        float_547333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 80), 'float')
        # Processing the call keyword arguments (line 1016)
        kwargs_547334 = {}
        # Getting the type of 'complex' (line 1016)
        complex_547330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 64), 'complex', False)
        # Calling complex(args, kwargs) (line 1016)
        complex_call_result_547335 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 64), complex_547330, *[inf_547332, float_547333], **kwargs_547334)
        
        # Processing the call keyword arguments (line 1016)
        kwargs_547336 = {}
        # Getting the type of 'ComplexArg' (line 1016)
        ComplexArg_547322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1016)
        ComplexArg_call_result_547337 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 29), ComplexArg_547322, *[complex_call_result_547329, complex_call_result_547335], **kwargs_547336)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 28), list_547321, ComplexArg_call_result_547337)
        
        # Processing the call keyword arguments (line 1014)
        float_547338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1017, 33), 'float')
        keyword_547339 = float_547338
        kwargs_547340 = {'rtol': keyword_547339}
        # Getting the type of 'assert_mpmath_equal' (line 1014)
        assert_mpmath_equal_547316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1014)
        assert_mpmath_equal_call_result_547341 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 8), assert_mpmath_equal_547316, *[exp1_547318, e1_547320, list_547321], **kwargs_547340)
        
        
        # Call to assert_mpmath_equal(...): (line 1020)
        # Processing the call arguments (line 1020)
        # Getting the type of 'sc' (line 1020)
        sc_547343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 28), 'sc', False)
        # Obtaining the member 'exp1' of a type (line 1020)
        exp1_547344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1020, 28), sc_547343, 'exp1')
        # Getting the type of 'mpmath' (line 1021)
        mpmath_547345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 28), 'mpmath', False)
        # Obtaining the member 'e1' of a type (line 1021)
        e1_547346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1021, 28), mpmath_547345, 'e1')
        
        # Call to ravel(...): (line 1022)
        # Processing the call keyword arguments (line 1022)
        kwargs_547383 = {}
        
        # Obtaining the type of the subscript
        slice_547347 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1022, 29), None, None, None)
        # Getting the type of 'None' (line 1022)
        None_547348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 58), 'None', False)
        
        # Call to linspace(...): (line 1022)
        # Processing the call arguments (line 1022)
        int_547351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 41), 'int')
        int_547352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 46), 'int')
        int_547353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1022, 50), 'int')
        # Processing the call keyword arguments (line 1022)
        kwargs_547354 = {}
        # Getting the type of 'np' (line 1022)
        np_547349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 29), 'np', False)
        # Obtaining the member 'linspace' of a type (line 1022)
        linspace_547350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 29), np_547349, 'linspace')
        # Calling linspace(args, kwargs) (line 1022)
        linspace_call_result_547355 = invoke(stypy.reporting.localization.Localization(__file__, 1022, 29), linspace_547350, *[int_547351, int_547352, int_547353], **kwargs_547354)
        
        # Obtaining the member '__getitem__' of a type (line 1022)
        getitem___547356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 29), linspace_call_result_547355, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1022)
        subscript_call_result_547357 = invoke(stypy.reporting.localization.Localization(__file__, 1022, 29), getitem___547356, (slice_547347, None_547348))
        
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1023)
        tuple_547358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1023)
        # Adding element type (line 1023)
        int_547359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1023, 35), tuple_547358, int_547359)
        # Adding element type (line 1023)
        
        # Call to logspace(...): (line 1023)
        # Processing the call arguments (line 1023)
        int_547362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 50), 'int')
        int_547363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 54), 'int')
        int_547364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 57), 'int')
        # Processing the call keyword arguments (line 1023)
        kwargs_547365 = {}
        # Getting the type of 'np' (line 1023)
        np_547360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 38), 'np', False)
        # Obtaining the member 'logspace' of a type (line 1023)
        logspace_547361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1023, 38), np_547360, 'logspace')
        # Calling logspace(args, kwargs) (line 1023)
        logspace_call_result_547366 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 38), logspace_547361, *[int_547362, int_547363, int_547364], **kwargs_547365)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1023, 35), tuple_547358, logspace_call_result_547366)
        # Adding element type (line 1023)
        
        
        # Call to logspace(...): (line 1024)
        # Processing the call arguments (line 1024)
        int_547369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 48), 'int')
        int_547370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 52), 'int')
        int_547371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 55), 'int')
        # Processing the call keyword arguments (line 1024)
        kwargs_547372 = {}
        # Getting the type of 'np' (line 1024)
        np_547367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 36), 'np', False)
        # Obtaining the member 'logspace' of a type (line 1024)
        logspace_547368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1024, 36), np_547367, 'logspace')
        # Calling logspace(args, kwargs) (line 1024)
        logspace_call_result_547373 = invoke(stypy.reporting.localization.Localization(__file__, 1024, 36), logspace_547368, *[int_547369, int_547370, int_547371], **kwargs_547372)
        
        # Applying the 'usub' unary operator (line 1024)
        result___neg___547374 = python_operator(stypy.reporting.localization.Localization(__file__, 1024, 35), 'usub', logspace_call_result_547373)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1023, 35), tuple_547358, result___neg___547374)
        
        # Getting the type of 'np' (line 1023)
        np_547375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 29), 'np', False)
        # Obtaining the member 'r_' of a type (line 1023)
        r__547376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1023, 29), np_547375, 'r_')
        # Obtaining the member '__getitem__' of a type (line 1023)
        getitem___547377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1023, 29), r__547376, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1023)
        subscript_call_result_547378 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 29), getitem___547377, tuple_547358)
        
        complex_547379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1024, 60), 'complex')
        # Applying the binary operator '*' (line 1023)
        result_mul_547380 = python_operator(stypy.reporting.localization.Localization(__file__, 1023, 29), '*', subscript_call_result_547378, complex_547379)
        
        # Applying the binary operator '+' (line 1022)
        result_add_547381 = python_operator(stypy.reporting.localization.Localization(__file__, 1022, 29), '+', subscript_call_result_547357, result_mul_547380)
        
        # Obtaining the member 'ravel' of a type (line 1022)
        ravel_547382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 29), result_add_547381, 'ravel')
        # Calling ravel(args, kwargs) (line 1022)
        ravel_call_result_547384 = invoke(stypy.reporting.localization.Localization(__file__, 1022, 29), ravel_547382, *[], **kwargs_547383)
        
        # Processing the call keyword arguments (line 1020)
        float_547385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 33), 'float')
        keyword_547386 = float_547385
        kwargs_547387 = {'rtol': keyword_547386}
        # Getting the type of 'assert_mpmath_equal' (line 1020)
        assert_mpmath_equal_547342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1020)
        assert_mpmath_equal_call_result_547388 = invoke(stypy.reporting.localization.Localization(__file__, 1020, 8), assert_mpmath_equal_547342, *[exp1_547344, e1_547346, ravel_call_result_547384], **kwargs_547387)
        
        
        # Call to assert_mpmath_equal(...): (line 1026)
        # Processing the call arguments (line 1026)
        # Getting the type of 'sc' (line 1026)
        sc_547390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 28), 'sc', False)
        # Obtaining the member 'exp1' of a type (line 1026)
        exp1_547391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 28), sc_547390, 'exp1')
        # Getting the type of 'mpmath' (line 1027)
        mpmath_547392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 28), 'mpmath', False)
        # Obtaining the member 'e1' of a type (line 1027)
        e1_547393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 28), mpmath_547392, 'e1')
        
        # Call to linspace(...): (line 1028)
        # Processing the call arguments (line 1028)
        int_547396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 41), 'int')
        int_547397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 46), 'int')
        int_547398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 51), 'int')
        # Processing the call keyword arguments (line 1028)
        kwargs_547399 = {}
        # Getting the type of 'np' (line 1028)
        np_547394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 29), 'np', False)
        # Obtaining the member 'linspace' of a type (line 1028)
        linspace_547395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1028, 29), np_547394, 'linspace')
        # Calling linspace(args, kwargs) (line 1028)
        linspace_call_result_547400 = invoke(stypy.reporting.localization.Localization(__file__, 1028, 29), linspace_547395, *[int_547396, int_547397, int_547398], **kwargs_547399)
        
        complex_547401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 60), 'complex')
        # Applying the binary operator '+' (line 1028)
        result_add_547402 = python_operator(stypy.reporting.localization.Localization(__file__, 1028, 29), '+', linspace_call_result_547400, complex_547401)
        
        # Processing the call keyword arguments (line 1026)
        float_547403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 33), 'float')
        keyword_547404 = float_547403
        kwargs_547405 = {'rtol': keyword_547404}
        # Getting the type of 'assert_mpmath_equal' (line 1026)
        assert_mpmath_equal_547389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1026)
        assert_mpmath_equal_call_result_547406 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 8), assert_mpmath_equal_547389, *[exp1_547391, e1_547393, result_add_547402], **kwargs_547405)
        
        
        # ################# End of 'test_e1_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_e1_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1012)
        stypy_return_type_547407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547407)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_e1_complex'
        return stypy_return_type_547407


    @norecursion
    def test_exprel(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_exprel'
        module_type_store = module_type_store.open_function_context('test_exprel', 1031, 4, False)
        # Assigning a type to the variable 'self' (line 1032)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1032, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_exprel')
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_exprel.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_exprel', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_exprel', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_exprel(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1032)
        # Processing the call arguments (line 1032)
        # Getting the type of 'sc' (line 1032)
        sc_547409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 28), 'sc', False)
        # Obtaining the member 'exprel' of a type (line 1032)
        exprel_547410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1032, 28), sc_547409, 'exprel')

        @norecursion
        def _stypy_temp_lambda_385(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_385'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_385', 1033, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_385.stypy_localization = localization
            _stypy_temp_lambda_385.stypy_type_of_self = None
            _stypy_temp_lambda_385.stypy_type_store = module_type_store
            _stypy_temp_lambda_385.stypy_function_name = '_stypy_temp_lambda_385'
            _stypy_temp_lambda_385.stypy_param_names_list = ['x']
            _stypy_temp_lambda_385.stypy_varargs_param_name = None
            _stypy_temp_lambda_385.stypy_kwargs_param_name = None
            _stypy_temp_lambda_385.stypy_call_defaults = defaults
            _stypy_temp_lambda_385.stypy_call_varargs = varargs
            _stypy_temp_lambda_385.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_385', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_385', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            
            # Getting the type of 'x' (line 1033)
            x_547411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 59), 'x', False)
            int_547412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 64), 'int')
            # Applying the binary operator '!=' (line 1033)
            result_ne_547413 = python_operator(stypy.reporting.localization.Localization(__file__, 1033, 59), '!=', x_547411, int_547412)
            
            # Testing the type of an if expression (line 1033)
            is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1033, 38), result_ne_547413)
            # SSA begins for if expression (line 1033)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
            
            # Call to expm1(...): (line 1033)
            # Processing the call arguments (line 1033)
            # Getting the type of 'x' (line 1033)
            x_547416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 51), 'x', False)
            # Processing the call keyword arguments (line 1033)
            kwargs_547417 = {}
            # Getting the type of 'mpmath' (line 1033)
            mpmath_547414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 38), 'mpmath', False)
            # Obtaining the member 'expm1' of a type (line 1033)
            expm1_547415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 38), mpmath_547414, 'expm1')
            # Calling expm1(args, kwargs) (line 1033)
            expm1_call_result_547418 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 38), expm1_547415, *[x_547416], **kwargs_547417)
            
            # Getting the type of 'x' (line 1033)
            x_547419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 54), 'x', False)
            # Applying the binary operator 'div' (line 1033)
            result_div_547420 = python_operator(stypy.reporting.localization.Localization(__file__, 1033, 38), 'div', expm1_call_result_547418, x_547419)
            
            # SSA branch for the else part of an if expression (line 1033)
            module_type_store.open_ssa_branch('if expression else')
            
            # Call to mpf(...): (line 1033)
            # Processing the call arguments (line 1033)
            str_547423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 82), 'str', '1.0')
            # Processing the call keyword arguments (line 1033)
            kwargs_547424 = {}
            # Getting the type of 'mpmath' (line 1033)
            mpmath_547421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 71), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1033)
            mpf_547422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 71), mpmath_547421, 'mpf')
            # Calling mpf(args, kwargs) (line 1033)
            mpf_call_result_547425 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 71), mpf_547422, *[str_547423], **kwargs_547424)
            
            # SSA join for if expression (line 1033)
            module_type_store = module_type_store.join_ssa_context()
            if_exp_547426 = union_type.UnionType.add(result_div_547420, mpf_call_result_547425)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1033)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1033, 28), 'stypy_return_type', if_exp_547426)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_385' in the type store
            # Getting the type of 'stypy_return_type' (line 1033)
            stypy_return_type_547427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547427)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_385'
            return stypy_return_type_547427

        # Assigning a type to the variable '_stypy_temp_lambda_385' (line 1033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1033, 28), '_stypy_temp_lambda_385', _stypy_temp_lambda_385)
        # Getting the type of '_stypy_temp_lambda_385' (line 1033)
        _stypy_temp_lambda_385_547428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 28), '_stypy_temp_lambda_385')
        
        # Obtaining an instance of the builtin type 'list' (line 1034)
        list_547429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1034)
        # Adding element type (line 1034)
        
        # Call to Arg(...): (line 1034)
        # Processing the call keyword arguments (line 1034)
        
        
        # Call to log(...): (line 1034)
        # Processing the call arguments (line 1034)
        
        # Call to finfo(...): (line 1034)
        # Processing the call arguments (line 1034)
        # Getting the type of 'np' (line 1034)
        np_547435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 52), 'np', False)
        # Obtaining the member 'double' of a type (line 1034)
        double_547436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 52), np_547435, 'double')
        # Processing the call keyword arguments (line 1034)
        kwargs_547437 = {}
        # Getting the type of 'np' (line 1034)
        np_547433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 43), 'np', False)
        # Obtaining the member 'finfo' of a type (line 1034)
        finfo_547434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 43), np_547433, 'finfo')
        # Calling finfo(args, kwargs) (line 1034)
        finfo_call_result_547438 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 43), finfo_547434, *[double_547436], **kwargs_547437)
        
        # Obtaining the member 'max' of a type (line 1034)
        max_547439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 43), finfo_call_result_547438, 'max')
        # Processing the call keyword arguments (line 1034)
        kwargs_547440 = {}
        # Getting the type of 'np' (line 1034)
        np_547431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 36), 'np', False)
        # Obtaining the member 'log' of a type (line 1034)
        log_547432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 36), np_547431, 'log')
        # Calling log(args, kwargs) (line 1034)
        log_call_result_547441 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 36), log_547432, *[max_547439], **kwargs_547440)
        
        # Applying the 'usub' unary operator (line 1034)
        result___neg___547442 = python_operator(stypy.reporting.localization.Localization(__file__, 1034, 35), 'usub', log_call_result_547441)
        
        keyword_547443 = result___neg___547442
        
        # Call to log(...): (line 1034)
        # Processing the call arguments (line 1034)
        
        # Call to finfo(...): (line 1034)
        # Processing the call arguments (line 1034)
        # Getting the type of 'np' (line 1034)
        np_547448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 87), 'np', False)
        # Obtaining the member 'double' of a type (line 1034)
        double_547449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 87), np_547448, 'double')
        # Processing the call keyword arguments (line 1034)
        kwargs_547450 = {}
        # Getting the type of 'np' (line 1034)
        np_547446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 78), 'np', False)
        # Obtaining the member 'finfo' of a type (line 1034)
        finfo_547447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 78), np_547446, 'finfo')
        # Calling finfo(args, kwargs) (line 1034)
        finfo_call_result_547451 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 78), finfo_547447, *[double_547449], **kwargs_547450)
        
        # Obtaining the member 'max' of a type (line 1034)
        max_547452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 78), finfo_call_result_547451, 'max')
        # Processing the call keyword arguments (line 1034)
        kwargs_547453 = {}
        # Getting the type of 'np' (line 1034)
        np_547444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 71), 'np', False)
        # Obtaining the member 'log' of a type (line 1034)
        log_547445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 71), np_547444, 'log')
        # Calling log(args, kwargs) (line 1034)
        log_call_result_547454 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 71), log_547445, *[max_547452], **kwargs_547453)
        
        keyword_547455 = log_call_result_547454
        kwargs_547456 = {'a': keyword_547443, 'b': keyword_547455}
        # Getting the type of 'Arg' (line 1034)
        Arg_547430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1034)
        Arg_call_result_547457 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 29), Arg_547430, *[], **kwargs_547456)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1034, 28), list_547429, Arg_call_result_547457)
        
        # Processing the call keyword arguments (line 1032)
        kwargs_547458 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1032)
        assert_mpmath_equal_547408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1032)
        assert_mpmath_equal_call_result_547459 = invoke(stypy.reporting.localization.Localization(__file__, 1032, 8), assert_mpmath_equal_547408, *[exprel_547410, _stypy_temp_lambda_385_547428, list_547429], **kwargs_547458)
        
        
        # Call to assert_mpmath_equal(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'sc' (line 1035)
        sc_547461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 28), 'sc', False)
        # Obtaining the member 'exprel' of a type (line 1035)
        exprel_547462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 28), sc_547461, 'exprel')

        @norecursion
        def _stypy_temp_lambda_386(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_386'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_386', 1036, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_386.stypy_localization = localization
            _stypy_temp_lambda_386.stypy_type_of_self = None
            _stypy_temp_lambda_386.stypy_type_store = module_type_store
            _stypy_temp_lambda_386.stypy_function_name = '_stypy_temp_lambda_386'
            _stypy_temp_lambda_386.stypy_param_names_list = ['x']
            _stypy_temp_lambda_386.stypy_varargs_param_name = None
            _stypy_temp_lambda_386.stypy_kwargs_param_name = None
            _stypy_temp_lambda_386.stypy_call_defaults = defaults
            _stypy_temp_lambda_386.stypy_call_varargs = varargs
            _stypy_temp_lambda_386.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_386', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_386', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            
            # Getting the type of 'x' (line 1036)
            x_547463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 59), 'x', False)
            int_547464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 64), 'int')
            # Applying the binary operator '!=' (line 1036)
            result_ne_547465 = python_operator(stypy.reporting.localization.Localization(__file__, 1036, 59), '!=', x_547463, int_547464)
            
            # Testing the type of an if expression (line 1036)
            is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1036, 38), result_ne_547465)
            # SSA begins for if expression (line 1036)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
            
            # Call to expm1(...): (line 1036)
            # Processing the call arguments (line 1036)
            # Getting the type of 'x' (line 1036)
            x_547468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 51), 'x', False)
            # Processing the call keyword arguments (line 1036)
            kwargs_547469 = {}
            # Getting the type of 'mpmath' (line 1036)
            mpmath_547466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 38), 'mpmath', False)
            # Obtaining the member 'expm1' of a type (line 1036)
            expm1_547467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 38), mpmath_547466, 'expm1')
            # Calling expm1(args, kwargs) (line 1036)
            expm1_call_result_547470 = invoke(stypy.reporting.localization.Localization(__file__, 1036, 38), expm1_547467, *[x_547468], **kwargs_547469)
            
            # Getting the type of 'x' (line 1036)
            x_547471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 54), 'x', False)
            # Applying the binary operator 'div' (line 1036)
            result_div_547472 = python_operator(stypy.reporting.localization.Localization(__file__, 1036, 38), 'div', expm1_call_result_547470, x_547471)
            
            # SSA branch for the else part of an if expression (line 1036)
            module_type_store.open_ssa_branch('if expression else')
            
            # Call to mpf(...): (line 1036)
            # Processing the call arguments (line 1036)
            str_547475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 82), 'str', '1.0')
            # Processing the call keyword arguments (line 1036)
            kwargs_547476 = {}
            # Getting the type of 'mpmath' (line 1036)
            mpmath_547473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 71), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1036)
            mpf_547474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 71), mpmath_547473, 'mpf')
            # Calling mpf(args, kwargs) (line 1036)
            mpf_call_result_547477 = invoke(stypy.reporting.localization.Localization(__file__, 1036, 71), mpf_547474, *[str_547475], **kwargs_547476)
            
            # SSA join for if expression (line 1036)
            module_type_store = module_type_store.join_ssa_context()
            if_exp_547478 = union_type.UnionType.add(result_div_547472, mpf_call_result_547477)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1036)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1036, 28), 'stypy_return_type', if_exp_547478)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_386' in the type store
            # Getting the type of 'stypy_return_type' (line 1036)
            stypy_return_type_547479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547479)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_386'
            return stypy_return_type_547479

        # Assigning a type to the variable '_stypy_temp_lambda_386' (line 1036)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1036, 28), '_stypy_temp_lambda_386', _stypy_temp_lambda_386)
        # Getting the type of '_stypy_temp_lambda_386' (line 1036)
        _stypy_temp_lambda_386_547480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 28), '_stypy_temp_lambda_386')
        
        # Call to array(...): (line 1037)
        # Processing the call arguments (line 1037)
        
        # Obtaining an instance of the builtin type 'list' (line 1037)
        list_547483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 37), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1037)
        # Adding element type (line 1037)
        float_547484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 37), list_547483, float_547484)
        # Adding element type (line 1037)
        float_547485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 45), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 37), list_547483, float_547485)
        # Adding element type (line 1037)
        int_547486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 37), list_547483, int_547486)
        # Adding element type (line 1037)
        float_547487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 55), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 37), list_547483, float_547487)
        # Adding element type (line 1037)
        float_547488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 61), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 37), list_547483, float_547488)
        # Adding element type (line 1037)
        # Getting the type of 'np' (line 1037)
        np_547489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 67), 'np', False)
        # Obtaining the member 'inf' of a type (line 1037)
        inf_547490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 67), np_547489, 'inf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1037, 37), list_547483, inf_547490)
        
        # Processing the call keyword arguments (line 1037)
        kwargs_547491 = {}
        # Getting the type of 'np' (line 1037)
        np_547481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 28), 'np', False)
        # Obtaining the member 'array' of a type (line 1037)
        array_547482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 28), np_547481, 'array')
        # Calling array(args, kwargs) (line 1037)
        array_call_result_547492 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 28), array_547482, *[list_547483], **kwargs_547491)
        
        # Processing the call keyword arguments (line 1035)
        float_547493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 82), 'float')
        keyword_547494 = float_547493
        kwargs_547495 = {'rtol': keyword_547494}
        # Getting the type of 'assert_mpmath_equal' (line 1035)
        assert_mpmath_equal_547460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1035)
        assert_mpmath_equal_call_result_547496 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), assert_mpmath_equal_547460, *[exprel_547462, _stypy_temp_lambda_386_547480, array_call_result_547492], **kwargs_547495)
        
        
        # Call to assert_(...): (line 1038)
        # Processing the call arguments (line 1038)
        
        # Call to isinf(...): (line 1038)
        # Processing the call arguments (line 1038)
        
        # Call to exprel(...): (line 1038)
        # Processing the call arguments (line 1038)
        # Getting the type of 'np' (line 1038)
        np_547502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 35), 'np', False)
        # Obtaining the member 'inf' of a type (line 1038)
        inf_547503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 35), np_547502, 'inf')
        # Processing the call keyword arguments (line 1038)
        kwargs_547504 = {}
        # Getting the type of 'sc' (line 1038)
        sc_547500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 25), 'sc', False)
        # Obtaining the member 'exprel' of a type (line 1038)
        exprel_547501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 25), sc_547500, 'exprel')
        # Calling exprel(args, kwargs) (line 1038)
        exprel_call_result_547505 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 25), exprel_547501, *[inf_547503], **kwargs_547504)
        
        # Processing the call keyword arguments (line 1038)
        kwargs_547506 = {}
        # Getting the type of 'np' (line 1038)
        np_547498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 16), 'np', False)
        # Obtaining the member 'isinf' of a type (line 1038)
        isinf_547499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 16), np_547498, 'isinf')
        # Calling isinf(args, kwargs) (line 1038)
        isinf_call_result_547507 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 16), isinf_547499, *[exprel_call_result_547505], **kwargs_547506)
        
        # Processing the call keyword arguments (line 1038)
        kwargs_547508 = {}
        # Getting the type of 'assert_' (line 1038)
        assert__547497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 1038)
        assert__call_result_547509 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 8), assert__547497, *[isinf_call_result_547507], **kwargs_547508)
        
        
        # Call to assert_(...): (line 1039)
        # Processing the call arguments (line 1039)
        
        
        # Call to exprel(...): (line 1039)
        # Processing the call arguments (line 1039)
        
        # Getting the type of 'np' (line 1039)
        np_547513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 27), 'np', False)
        # Obtaining the member 'inf' of a type (line 1039)
        inf_547514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1039, 27), np_547513, 'inf')
        # Applying the 'usub' unary operator (line 1039)
        result___neg___547515 = python_operator(stypy.reporting.localization.Localization(__file__, 1039, 26), 'usub', inf_547514)
        
        # Processing the call keyword arguments (line 1039)
        kwargs_547516 = {}
        # Getting the type of 'sc' (line 1039)
        sc_547511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 16), 'sc', False)
        # Obtaining the member 'exprel' of a type (line 1039)
        exprel_547512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1039, 16), sc_547511, 'exprel')
        # Calling exprel(args, kwargs) (line 1039)
        exprel_call_result_547517 = invoke(stypy.reporting.localization.Localization(__file__, 1039, 16), exprel_547512, *[result___neg___547515], **kwargs_547516)
        
        int_547518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1039, 38), 'int')
        # Applying the binary operator '==' (line 1039)
        result_eq_547519 = python_operator(stypy.reporting.localization.Localization(__file__, 1039, 16), '==', exprel_call_result_547517, int_547518)
        
        # Processing the call keyword arguments (line 1039)
        kwargs_547520 = {}
        # Getting the type of 'assert_' (line 1039)
        assert__547510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 1039)
        assert__call_result_547521 = invoke(stypy.reporting.localization.Localization(__file__, 1039, 8), assert__547510, *[result_eq_547519], **kwargs_547520)
        
        
        # ################# End of 'test_exprel(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_exprel' in the type store
        # Getting the type of 'stypy_return_type' (line 1031)
        stypy_return_type_547522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547522)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_exprel'
        return stypy_return_type_547522


    @norecursion
    def test_expm1_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_expm1_complex'
        module_type_store = module_type_store.open_function_context('test_expm1_complex', 1041, 4, False)
        # Assigning a type to the variable 'self' (line 1042)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1042, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_expm1_complex')
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_expm1_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_expm1_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_expm1_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_expm1_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1043)
        # Processing the call arguments (line 1043)
        # Getting the type of 'sc' (line 1043)
        sc_547524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 28), 'sc', False)
        # Obtaining the member 'expm1' of a type (line 1043)
        expm1_547525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 28), sc_547524, 'expm1')
        # Getting the type of 'mpmath' (line 1044)
        mpmath_547526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 28), 'mpmath', False)
        # Obtaining the member 'expm1' of a type (line 1044)
        expm1_547527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 28), mpmath_547526, 'expm1')
        
        # Obtaining an instance of the builtin type 'list' (line 1045)
        list_547528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1045)
        # Adding element type (line 1045)
        
        # Call to ComplexArg(...): (line 1045)
        # Processing the call arguments (line 1045)
        
        # Call to complex(...): (line 1045)
        # Processing the call arguments (line 1045)
        
        # Getting the type of 'np' (line 1045)
        np_547531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 49), 'np', False)
        # Obtaining the member 'inf' of a type (line 1045)
        inf_547532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1045, 49), np_547531, 'inf')
        # Applying the 'usub' unary operator (line 1045)
        result___neg___547533 = python_operator(stypy.reporting.localization.Localization(__file__, 1045, 48), 'usub', inf_547532)
        
        float_547534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 57), 'float')
        # Processing the call keyword arguments (line 1045)
        kwargs_547535 = {}
        # Getting the type of 'complex' (line 1045)
        complex_547530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 40), 'complex', False)
        # Calling complex(args, kwargs) (line 1045)
        complex_call_result_547536 = invoke(stypy.reporting.localization.Localization(__file__, 1045, 40), complex_547530, *[result___neg___547533, float_547534], **kwargs_547535)
        
        
        # Call to complex(...): (line 1045)
        # Processing the call arguments (line 1045)
        # Getting the type of 'np' (line 1045)
        np_547538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 72), 'np', False)
        # Obtaining the member 'inf' of a type (line 1045)
        inf_547539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1045, 72), np_547538, 'inf')
        float_547540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 80), 'float')
        # Processing the call keyword arguments (line 1045)
        kwargs_547541 = {}
        # Getting the type of 'complex' (line 1045)
        complex_547537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 64), 'complex', False)
        # Calling complex(args, kwargs) (line 1045)
        complex_call_result_547542 = invoke(stypy.reporting.localization.Localization(__file__, 1045, 64), complex_547537, *[inf_547539, float_547540], **kwargs_547541)
        
        # Processing the call keyword arguments (line 1045)
        kwargs_547543 = {}
        # Getting the type of 'ComplexArg' (line 1045)
        ComplexArg_547529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1045)
        ComplexArg_call_result_547544 = invoke(stypy.reporting.localization.Localization(__file__, 1045, 29), ComplexArg_547529, *[complex_call_result_547536, complex_call_result_547542], **kwargs_547543)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1045, 28), list_547528, ComplexArg_call_result_547544)
        
        # Processing the call keyword arguments (line 1043)
        kwargs_547545 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1043)
        assert_mpmath_equal_547523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1043)
        assert_mpmath_equal_call_result_547546 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 8), assert_mpmath_equal_547523, *[expm1_547525, expm1_547527, list_547528], **kwargs_547545)
        
        
        # ################# End of 'test_expm1_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_expm1_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1041)
        stypy_return_type_547547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547547)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_expm1_complex'
        return stypy_return_type_547547


    @norecursion
    def test_log1p_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_log1p_complex'
        module_type_store = module_type_store.open_function_context('test_log1p_complex', 1047, 4, False)
        # Assigning a type to the variable 'self' (line 1048)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1048, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_log1p_complex')
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_log1p_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_log1p_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_log1p_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_log1p_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1048)
        # Processing the call arguments (line 1048)
        # Getting the type of 'sc' (line 1048)
        sc_547549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 28), 'sc', False)
        # Obtaining the member 'log1p' of a type (line 1048)
        log1p_547550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1048, 28), sc_547549, 'log1p')

        @norecursion
        def _stypy_temp_lambda_387(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_387'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_387', 1049, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_387.stypy_localization = localization
            _stypy_temp_lambda_387.stypy_type_of_self = None
            _stypy_temp_lambda_387.stypy_type_store = module_type_store
            _stypy_temp_lambda_387.stypy_function_name = '_stypy_temp_lambda_387'
            _stypy_temp_lambda_387.stypy_param_names_list = ['x']
            _stypy_temp_lambda_387.stypy_varargs_param_name = None
            _stypy_temp_lambda_387.stypy_kwargs_param_name = None
            _stypy_temp_lambda_387.stypy_call_defaults = defaults
            _stypy_temp_lambda_387.stypy_call_varargs = varargs
            _stypy_temp_lambda_387.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_387', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_387', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to log(...): (line 1049)
            # Processing the call arguments (line 1049)
            # Getting the type of 'x' (line 1049)
            x_547553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 49), 'x', False)
            int_547554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1049, 51), 'int')
            # Applying the binary operator '+' (line 1049)
            result_add_547555 = python_operator(stypy.reporting.localization.Localization(__file__, 1049, 49), '+', x_547553, int_547554)
            
            # Processing the call keyword arguments (line 1049)
            kwargs_547556 = {}
            # Getting the type of 'mpmath' (line 1049)
            mpmath_547551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 38), 'mpmath', False)
            # Obtaining the member 'log' of a type (line 1049)
            log_547552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1049, 38), mpmath_547551, 'log')
            # Calling log(args, kwargs) (line 1049)
            log_call_result_547557 = invoke(stypy.reporting.localization.Localization(__file__, 1049, 38), log_547552, *[result_add_547555], **kwargs_547556)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1049)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1049, 28), 'stypy_return_type', log_call_result_547557)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_387' in the type store
            # Getting the type of 'stypy_return_type' (line 1049)
            stypy_return_type_547558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547558)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_387'
            return stypy_return_type_547558

        # Assigning a type to the variable '_stypy_temp_lambda_387' (line 1049)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1049, 28), '_stypy_temp_lambda_387', _stypy_temp_lambda_387)
        # Getting the type of '_stypy_temp_lambda_387' (line 1049)
        _stypy_temp_lambda_387_547559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 28), '_stypy_temp_lambda_387')
        
        # Obtaining an instance of the builtin type 'list' (line 1050)
        list_547560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1050, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1050)
        # Adding element type (line 1050)
        
        # Call to ComplexArg(...): (line 1050)
        # Processing the call keyword arguments (line 1050)
        kwargs_547562 = {}
        # Getting the type of 'ComplexArg' (line 1050)
        ComplexArg_547561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1050)
        ComplexArg_call_result_547563 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 29), ComplexArg_547561, *[], **kwargs_547562)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1050, 28), list_547560, ComplexArg_call_result_547563)
        
        # Processing the call keyword arguments (line 1048)
        int_547564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1050, 48), 'int')
        keyword_547565 = int_547564
        kwargs_547566 = {'dps': keyword_547565}
        # Getting the type of 'assert_mpmath_equal' (line 1048)
        assert_mpmath_equal_547548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1048)
        assert_mpmath_equal_call_result_547567 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 8), assert_mpmath_equal_547548, *[log1p_547550, _stypy_temp_lambda_387_547559, list_547560], **kwargs_547566)
        
        
        # ################# End of 'test_log1p_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_log1p_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1047)
        stypy_return_type_547568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547568)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_log1p_complex'
        return stypy_return_type_547568


    @norecursion
    def test_log1pmx(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_log1pmx'
        module_type_store = module_type_store.open_function_context('test_log1pmx', 1052, 4, False)
        # Assigning a type to the variable 'self' (line 1053)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1053, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_log1pmx')
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_log1pmx.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_log1pmx', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_log1pmx', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_log1pmx(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1053)
        # Processing the call arguments (line 1053)
        # Getting the type of '_log1pmx' (line 1053)
        _log1pmx_547570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 28), '_log1pmx', False)

        @norecursion
        def _stypy_temp_lambda_388(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_388'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_388', 1054, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_388.stypy_localization = localization
            _stypy_temp_lambda_388.stypy_type_of_self = None
            _stypy_temp_lambda_388.stypy_type_store = module_type_store
            _stypy_temp_lambda_388.stypy_function_name = '_stypy_temp_lambda_388'
            _stypy_temp_lambda_388.stypy_param_names_list = ['x']
            _stypy_temp_lambda_388.stypy_varargs_param_name = None
            _stypy_temp_lambda_388.stypy_kwargs_param_name = None
            _stypy_temp_lambda_388.stypy_call_defaults = defaults
            _stypy_temp_lambda_388.stypy_call_varargs = varargs
            _stypy_temp_lambda_388.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_388', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_388', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to log(...): (line 1054)
            # Processing the call arguments (line 1054)
            # Getting the type of 'x' (line 1054)
            x_547573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 49), 'x', False)
            int_547574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 53), 'int')
            # Applying the binary operator '+' (line 1054)
            result_add_547575 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 49), '+', x_547573, int_547574)
            
            # Processing the call keyword arguments (line 1054)
            kwargs_547576 = {}
            # Getting the type of 'mpmath' (line 1054)
            mpmath_547571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 38), 'mpmath', False)
            # Obtaining the member 'log' of a type (line 1054)
            log_547572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1054, 38), mpmath_547571, 'log')
            # Calling log(args, kwargs) (line 1054)
            log_call_result_547577 = invoke(stypy.reporting.localization.Localization(__file__, 1054, 38), log_547572, *[result_add_547575], **kwargs_547576)
            
            # Getting the type of 'x' (line 1054)
            x_547578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 58), 'x', False)
            # Applying the binary operator '-' (line 1054)
            result_sub_547579 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 38), '-', log_call_result_547577, x_547578)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1054)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1054, 28), 'stypy_return_type', result_sub_547579)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_388' in the type store
            # Getting the type of 'stypy_return_type' (line 1054)
            stypy_return_type_547580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547580)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_388'
            return stypy_return_type_547580

        # Assigning a type to the variable '_stypy_temp_lambda_388' (line 1054)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1054, 28), '_stypy_temp_lambda_388', _stypy_temp_lambda_388)
        # Getting the type of '_stypy_temp_lambda_388' (line 1054)
        _stypy_temp_lambda_388_547581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 28), '_stypy_temp_lambda_388')
        
        # Obtaining an instance of the builtin type 'list' (line 1055)
        list_547582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1055)
        # Adding element type (line 1055)
        
        # Call to Arg(...): (line 1055)
        # Processing the call keyword arguments (line 1055)
        kwargs_547584 = {}
        # Getting the type of 'Arg' (line 1055)
        Arg_547583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1055)
        Arg_call_result_547585 = invoke(stypy.reporting.localization.Localization(__file__, 1055, 29), Arg_547583, *[], **kwargs_547584)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1055, 28), list_547582, Arg_call_result_547585)
        
        # Processing the call keyword arguments (line 1053)
        int_547586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 41), 'int')
        keyword_547587 = int_547586
        float_547588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 50), 'float')
        keyword_547589 = float_547588
        kwargs_547590 = {'rtol': keyword_547589, 'dps': keyword_547587}
        # Getting the type of 'assert_mpmath_equal' (line 1053)
        assert_mpmath_equal_547569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1053)
        assert_mpmath_equal_call_result_547591 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 8), assert_mpmath_equal_547569, *[_log1pmx_547570, _stypy_temp_lambda_388_547581, list_547582], **kwargs_547590)
        
        
        # ################# End of 'test_log1pmx(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_log1pmx' in the type store
        # Getting the type of 'stypy_return_type' (line 1052)
        stypy_return_type_547592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547592)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_log1pmx'
        return stypy_return_type_547592


    @norecursion
    def test_ei(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ei'
        module_type_store = module_type_store.open_function_context('test_ei', 1057, 4, False)
        # Assigning a type to the variable 'self' (line 1058)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1058, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ei.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ei.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ei.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ei.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ei')
        TestSystematic.test_ei.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ei.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ei.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ei.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ei.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ei.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ei.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ei', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ei', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ei(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1058)
        # Processing the call arguments (line 1058)
        # Getting the type of 'sc' (line 1058)
        sc_547594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 28), 'sc', False)
        # Obtaining the member 'expi' of a type (line 1058)
        expi_547595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1058, 28), sc_547594, 'expi')
        # Getting the type of 'mpmath' (line 1059)
        mpmath_547596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 28), 'mpmath', False)
        # Obtaining the member 'ei' of a type (line 1059)
        ei_547597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1059, 28), mpmath_547596, 'ei')
        
        # Obtaining an instance of the builtin type 'list' (line 1060)
        list_547598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1060)
        # Adding element type (line 1060)
        
        # Call to Arg(...): (line 1060)
        # Processing the call keyword arguments (line 1060)
        kwargs_547600 = {}
        # Getting the type of 'Arg' (line 1060)
        Arg_547599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1060)
        Arg_call_result_547601 = invoke(stypy.reporting.localization.Localization(__file__, 1060, 29), Arg_547599, *[], **kwargs_547600)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1060, 28), list_547598, Arg_call_result_547601)
        
        # Processing the call keyword arguments (line 1058)
        float_547602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 33), 'float')
        keyword_547603 = float_547602
        kwargs_547604 = {'rtol': keyword_547603}
        # Getting the type of 'assert_mpmath_equal' (line 1058)
        assert_mpmath_equal_547593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1058)
        assert_mpmath_equal_call_result_547605 = invoke(stypy.reporting.localization.Localization(__file__, 1058, 8), assert_mpmath_equal_547593, *[expi_547595, ei_547597, list_547598], **kwargs_547604)
        
        
        # ################# End of 'test_ei(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ei' in the type store
        # Getting the type of 'stypy_return_type' (line 1057)
        stypy_return_type_547606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547606)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ei'
        return stypy_return_type_547606


    @norecursion
    def test_ei_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ei_complex'
        module_type_store = module_type_store.open_function_context('test_ei_complex', 1063, 4, False)
        # Assigning a type to the variable 'self' (line 1064)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1064, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ei_complex')
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ei_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ei_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ei_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ei_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1065)
        # Processing the call arguments (line 1065)
        # Getting the type of 'sc' (line 1065)
        sc_547608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 28), 'sc', False)
        # Obtaining the member 'expi' of a type (line 1065)
        expi_547609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1065, 28), sc_547608, 'expi')
        # Getting the type of 'mpmath' (line 1066)
        mpmath_547610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 28), 'mpmath', False)
        # Obtaining the member 'ei' of a type (line 1066)
        ei_547611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1066, 28), mpmath_547610, 'ei')
        
        # Obtaining an instance of the builtin type 'list' (line 1067)
        list_547612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1067)
        # Adding element type (line 1067)
        
        # Call to ComplexArg(...): (line 1067)
        # Processing the call arguments (line 1067)
        
        # Call to complex(...): (line 1067)
        # Processing the call arguments (line 1067)
        
        # Getting the type of 'np' (line 1067)
        np_547615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 49), 'np', False)
        # Obtaining the member 'inf' of a type (line 1067)
        inf_547616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 49), np_547615, 'inf')
        # Applying the 'usub' unary operator (line 1067)
        result___neg___547617 = python_operator(stypy.reporting.localization.Localization(__file__, 1067, 48), 'usub', inf_547616)
        
        float_547618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 57), 'float')
        # Processing the call keyword arguments (line 1067)
        kwargs_547619 = {}
        # Getting the type of 'complex' (line 1067)
        complex_547614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 40), 'complex', False)
        # Calling complex(args, kwargs) (line 1067)
        complex_call_result_547620 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 40), complex_547614, *[result___neg___547617, float_547618], **kwargs_547619)
        
        
        # Call to complex(...): (line 1067)
        # Processing the call arguments (line 1067)
        # Getting the type of 'np' (line 1067)
        np_547622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 72), 'np', False)
        # Obtaining the member 'inf' of a type (line 1067)
        inf_547623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 72), np_547622, 'inf')
        float_547624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 80), 'float')
        # Processing the call keyword arguments (line 1067)
        kwargs_547625 = {}
        # Getting the type of 'complex' (line 1067)
        complex_547621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 64), 'complex', False)
        # Calling complex(args, kwargs) (line 1067)
        complex_call_result_547626 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 64), complex_547621, *[inf_547623, float_547624], **kwargs_547625)
        
        # Processing the call keyword arguments (line 1067)
        kwargs_547627 = {}
        # Getting the type of 'ComplexArg' (line 1067)
        ComplexArg_547613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1067)
        ComplexArg_call_result_547628 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 29), ComplexArg_547613, *[complex_call_result_547620, complex_call_result_547626], **kwargs_547627)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1067, 28), list_547612, ComplexArg_call_result_547628)
        
        # Processing the call keyword arguments (line 1065)
        float_547629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1068, 33), 'float')
        keyword_547630 = float_547629
        kwargs_547631 = {'rtol': keyword_547630}
        # Getting the type of 'assert_mpmath_equal' (line 1065)
        assert_mpmath_equal_547607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1065)
        assert_mpmath_equal_call_result_547632 = invoke(stypy.reporting.localization.Localization(__file__, 1065, 8), assert_mpmath_equal_547607, *[expi_547609, ei_547611, list_547612], **kwargs_547631)
        
        
        # ################# End of 'test_ei_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ei_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1063)
        stypy_return_type_547633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547633)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ei_complex'
        return stypy_return_type_547633


    @norecursion
    def test_ellipe(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipe'
        module_type_store = module_type_store.open_function_context('test_ellipe', 1070, 4, False)
        # Assigning a type to the variable 'self' (line 1071)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1071, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipe')
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipe.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipe', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipe', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipe(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1071)
        # Processing the call arguments (line 1071)
        # Getting the type of 'sc' (line 1071)
        sc_547635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 28), 'sc', False)
        # Obtaining the member 'ellipe' of a type (line 1071)
        ellipe_547636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1071, 28), sc_547635, 'ellipe')
        # Getting the type of 'mpmath' (line 1072)
        mpmath_547637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 28), 'mpmath', False)
        # Obtaining the member 'ellipe' of a type (line 1072)
        ellipe_547638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1072, 28), mpmath_547637, 'ellipe')
        
        # Obtaining an instance of the builtin type 'list' (line 1073)
        list_547639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1073)
        # Adding element type (line 1073)
        
        # Call to Arg(...): (line 1073)
        # Processing the call keyword arguments (line 1073)
        float_547641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 35), 'float')
        keyword_547642 = float_547641
        kwargs_547643 = {'b': keyword_547642}
        # Getting the type of 'Arg' (line 1073)
        Arg_547640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1073)
        Arg_call_result_547644 = invoke(stypy.reporting.localization.Localization(__file__, 1073, 29), Arg_547640, *[], **kwargs_547643)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1073, 28), list_547639, Arg_call_result_547644)
        
        # Processing the call keyword arguments (line 1071)
        kwargs_547645 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1071)
        assert_mpmath_equal_547634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1071)
        assert_mpmath_equal_call_result_547646 = invoke(stypy.reporting.localization.Localization(__file__, 1071, 8), assert_mpmath_equal_547634, *[ellipe_547636, ellipe_547638, list_547639], **kwargs_547645)
        
        
        # ################# End of 'test_ellipe(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipe' in the type store
        # Getting the type of 'stypy_return_type' (line 1070)
        stypy_return_type_547647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547647)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipe'
        return stypy_return_type_547647


    @norecursion
    def test_ellipeinc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipeinc'
        module_type_store = module_type_store.open_function_context('test_ellipeinc', 1075, 4, False)
        # Assigning a type to the variable 'self' (line 1076)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1076, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipeinc')
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipeinc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipeinc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipeinc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipeinc(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1076)
        # Processing the call arguments (line 1076)
        # Getting the type of 'sc' (line 1076)
        sc_547649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 28), 'sc', False)
        # Obtaining the member 'ellipeinc' of a type (line 1076)
        ellipeinc_547650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1076, 28), sc_547649, 'ellipeinc')
        # Getting the type of 'mpmath' (line 1077)
        mpmath_547651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 28), 'mpmath', False)
        # Obtaining the member 'ellipe' of a type (line 1077)
        ellipe_547652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1077, 28), mpmath_547651, 'ellipe')
        
        # Obtaining an instance of the builtin type 'list' (line 1078)
        list_547653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1078)
        # Adding element type (line 1078)
        
        # Call to Arg(...): (line 1078)
        # Processing the call arguments (line 1078)
        float_547655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 33), 'float')
        float_547656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 39), 'float')
        # Processing the call keyword arguments (line 1078)
        kwargs_547657 = {}
        # Getting the type of 'Arg' (line 1078)
        Arg_547654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1078)
        Arg_call_result_547658 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 29), Arg_547654, *[float_547655, float_547656], **kwargs_547657)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 28), list_547653, Arg_call_result_547658)
        # Adding element type (line 1078)
        
        # Call to Arg(...): (line 1078)
        # Processing the call keyword arguments (line 1078)
        float_547660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1078, 51), 'float')
        keyword_547661 = float_547660
        kwargs_547662 = {'b': keyword_547661}
        # Getting the type of 'Arg' (line 1078)
        Arg_547659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1078)
        Arg_call_result_547663 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 45), Arg_547659, *[], **kwargs_547662)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1078, 28), list_547653, Arg_call_result_547663)
        
        # Processing the call keyword arguments (line 1076)
        kwargs_547664 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1076)
        assert_mpmath_equal_547648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1076)
        assert_mpmath_equal_call_result_547665 = invoke(stypy.reporting.localization.Localization(__file__, 1076, 8), assert_mpmath_equal_547648, *[ellipeinc_547650, ellipe_547652, list_547653], **kwargs_547664)
        
        
        # ################# End of 'test_ellipeinc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipeinc' in the type store
        # Getting the type of 'stypy_return_type' (line 1075)
        stypy_return_type_547666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547666)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipeinc'
        return stypy_return_type_547666


    @norecursion
    def test_ellipeinc_largephi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipeinc_largephi'
        module_type_store = module_type_store.open_function_context('test_ellipeinc_largephi', 1080, 4, False)
        # Assigning a type to the variable 'self' (line 1081)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1081, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipeinc_largephi')
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipeinc_largephi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipeinc_largephi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipeinc_largephi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipeinc_largephi(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1081)
        # Processing the call arguments (line 1081)
        # Getting the type of 'sc' (line 1081)
        sc_547668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 28), 'sc', False)
        # Obtaining the member 'ellipeinc' of a type (line 1081)
        ellipeinc_547669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1081, 28), sc_547668, 'ellipeinc')
        # Getting the type of 'mpmath' (line 1082)
        mpmath_547670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 28), 'mpmath', False)
        # Obtaining the member 'ellipe' of a type (line 1082)
        ellipe_547671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1082, 28), mpmath_547670, 'ellipe')
        
        # Obtaining an instance of the builtin type 'list' (line 1083)
        list_547672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1083, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1083)
        # Adding element type (line 1083)
        
        # Call to Arg(...): (line 1083)
        # Processing the call keyword arguments (line 1083)
        kwargs_547674 = {}
        # Getting the type of 'Arg' (line 1083)
        Arg_547673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1083)
        Arg_call_result_547675 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 29), Arg_547673, *[], **kwargs_547674)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1083, 28), list_547672, Arg_call_result_547675)
        # Adding element type (line 1083)
        
        # Call to Arg(...): (line 1083)
        # Processing the call keyword arguments (line 1083)
        kwargs_547677 = {}
        # Getting the type of 'Arg' (line 1083)
        Arg_547676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1083)
        Arg_call_result_547678 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 36), Arg_547676, *[], **kwargs_547677)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1083, 28), list_547672, Arg_call_result_547678)
        
        # Processing the call keyword arguments (line 1081)
        kwargs_547679 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1081)
        assert_mpmath_equal_547667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1081)
        assert_mpmath_equal_call_result_547680 = invoke(stypy.reporting.localization.Localization(__file__, 1081, 8), assert_mpmath_equal_547667, *[ellipeinc_547669, ellipe_547671, list_547672], **kwargs_547679)
        
        
        # ################# End of 'test_ellipeinc_largephi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipeinc_largephi' in the type store
        # Getting the type of 'stypy_return_type' (line 1080)
        stypy_return_type_547681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1080, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547681)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipeinc_largephi'
        return stypy_return_type_547681


    @norecursion
    def test_ellipf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipf'
        module_type_store = module_type_store.open_function_context('test_ellipf', 1085, 4, False)
        # Assigning a type to the variable 'self' (line 1086)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1086, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipf')
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipf.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipf', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipf', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipf(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1086)
        # Processing the call arguments (line 1086)
        # Getting the type of 'sc' (line 1086)
        sc_547683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 28), 'sc', False)
        # Obtaining the member 'ellipkinc' of a type (line 1086)
        ellipkinc_547684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1086, 28), sc_547683, 'ellipkinc')
        # Getting the type of 'mpmath' (line 1087)
        mpmath_547685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 28), 'mpmath', False)
        # Obtaining the member 'ellipf' of a type (line 1087)
        ellipf_547686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1087, 28), mpmath_547685, 'ellipf')
        
        # Obtaining an instance of the builtin type 'list' (line 1088)
        list_547687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1088, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1088)
        # Adding element type (line 1088)
        
        # Call to Arg(...): (line 1088)
        # Processing the call arguments (line 1088)
        float_547689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1088, 33), 'float')
        float_547690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1088, 39), 'float')
        # Processing the call keyword arguments (line 1088)
        kwargs_547691 = {}
        # Getting the type of 'Arg' (line 1088)
        Arg_547688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1088)
        Arg_call_result_547692 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 29), Arg_547688, *[float_547689, float_547690], **kwargs_547691)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1088, 28), list_547687, Arg_call_result_547692)
        # Adding element type (line 1088)
        
        # Call to Arg(...): (line 1088)
        # Processing the call keyword arguments (line 1088)
        kwargs_547694 = {}
        # Getting the type of 'Arg' (line 1088)
        Arg_547693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1088)
        Arg_call_result_547695 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 45), Arg_547693, *[], **kwargs_547694)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1088, 28), list_547687, Arg_call_result_547695)
        
        # Processing the call keyword arguments (line 1086)
        kwargs_547696 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1086)
        assert_mpmath_equal_547682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1086)
        assert_mpmath_equal_call_result_547697 = invoke(stypy.reporting.localization.Localization(__file__, 1086, 8), assert_mpmath_equal_547682, *[ellipkinc_547684, ellipf_547686, list_547687], **kwargs_547696)
        
        
        # ################# End of 'test_ellipf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipf' in the type store
        # Getting the type of 'stypy_return_type' (line 1085)
        stypy_return_type_547698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1085, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547698)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipf'
        return stypy_return_type_547698


    @norecursion
    def test_ellipf_largephi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipf_largephi'
        module_type_store = module_type_store.open_function_context('test_ellipf_largephi', 1090, 4, False)
        # Assigning a type to the variable 'self' (line 1091)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1091, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipf_largephi')
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipf_largephi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipf_largephi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipf_largephi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipf_largephi(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1091)
        # Processing the call arguments (line 1091)
        # Getting the type of 'sc' (line 1091)
        sc_547700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 28), 'sc', False)
        # Obtaining the member 'ellipkinc' of a type (line 1091)
        ellipkinc_547701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1091, 28), sc_547700, 'ellipkinc')
        # Getting the type of 'mpmath' (line 1092)
        mpmath_547702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 28), 'mpmath', False)
        # Obtaining the member 'ellipf' of a type (line 1092)
        ellipf_547703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1092, 28), mpmath_547702, 'ellipf')
        
        # Obtaining an instance of the builtin type 'list' (line 1093)
        list_547704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1093, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1093)
        # Adding element type (line 1093)
        
        # Call to Arg(...): (line 1093)
        # Processing the call keyword arguments (line 1093)
        kwargs_547706 = {}
        # Getting the type of 'Arg' (line 1093)
        Arg_547705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1093)
        Arg_call_result_547707 = invoke(stypy.reporting.localization.Localization(__file__, 1093, 29), Arg_547705, *[], **kwargs_547706)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1093, 28), list_547704, Arg_call_result_547707)
        # Adding element type (line 1093)
        
        # Call to Arg(...): (line 1093)
        # Processing the call keyword arguments (line 1093)
        kwargs_547709 = {}
        # Getting the type of 'Arg' (line 1093)
        Arg_547708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1093)
        Arg_call_result_547710 = invoke(stypy.reporting.localization.Localization(__file__, 1093, 36), Arg_547708, *[], **kwargs_547709)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1093, 28), list_547704, Arg_call_result_547710)
        
        # Processing the call keyword arguments (line 1091)
        kwargs_547711 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1091)
        assert_mpmath_equal_547699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1091)
        assert_mpmath_equal_call_result_547712 = invoke(stypy.reporting.localization.Localization(__file__, 1091, 8), assert_mpmath_equal_547699, *[ellipkinc_547701, ellipf_547703, list_547704], **kwargs_547711)
        
        
        # ################# End of 'test_ellipf_largephi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipf_largephi' in the type store
        # Getting the type of 'stypy_return_type' (line 1090)
        stypy_return_type_547713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547713)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipf_largephi'
        return stypy_return_type_547713


    @norecursion
    def test_ellipk(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipk'
        module_type_store = module_type_store.open_function_context('test_ellipk', 1095, 4, False)
        # Assigning a type to the variable 'self' (line 1096)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1096, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipk')
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipk.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipk', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipk', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipk(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1096)
        # Processing the call arguments (line 1096)
        # Getting the type of 'sc' (line 1096)
        sc_547715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 28), 'sc', False)
        # Obtaining the member 'ellipk' of a type (line 1096)
        ellipk_547716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1096, 28), sc_547715, 'ellipk')
        # Getting the type of 'mpmath' (line 1097)
        mpmath_547717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 28), 'mpmath', False)
        # Obtaining the member 'ellipk' of a type (line 1097)
        ellipk_547718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1097, 28), mpmath_547717, 'ellipk')
        
        # Obtaining an instance of the builtin type 'list' (line 1098)
        list_547719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1098)
        # Adding element type (line 1098)
        
        # Call to Arg(...): (line 1098)
        # Processing the call keyword arguments (line 1098)
        float_547721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, 35), 'float')
        keyword_547722 = float_547721
        kwargs_547723 = {'b': keyword_547722}
        # Getting the type of 'Arg' (line 1098)
        Arg_547720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1098)
        Arg_call_result_547724 = invoke(stypy.reporting.localization.Localization(__file__, 1098, 29), Arg_547720, *[], **kwargs_547723)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1098, 28), list_547719, Arg_call_result_547724)
        
        # Processing the call keyword arguments (line 1096)
        kwargs_547725 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1096)
        assert_mpmath_equal_547714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1096)
        assert_mpmath_equal_call_result_547726 = invoke(stypy.reporting.localization.Localization(__file__, 1096, 8), assert_mpmath_equal_547714, *[ellipk_547716, ellipk_547718, list_547719], **kwargs_547725)
        
        
        # Call to assert_mpmath_equal(...): (line 1099)
        # Processing the call arguments (line 1099)
        # Getting the type of 'sc' (line 1099)
        sc_547728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 28), 'sc', False)
        # Obtaining the member 'ellipkm1' of a type (line 1099)
        ellipkm1_547729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1099, 28), sc_547728, 'ellipkm1')

        @norecursion
        def _stypy_temp_lambda_389(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_389'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_389', 1100, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_389.stypy_localization = localization
            _stypy_temp_lambda_389.stypy_type_of_self = None
            _stypy_temp_lambda_389.stypy_type_store = module_type_store
            _stypy_temp_lambda_389.stypy_function_name = '_stypy_temp_lambda_389'
            _stypy_temp_lambda_389.stypy_param_names_list = ['m']
            _stypy_temp_lambda_389.stypy_varargs_param_name = None
            _stypy_temp_lambda_389.stypy_kwargs_param_name = None
            _stypy_temp_lambda_389.stypy_call_defaults = defaults
            _stypy_temp_lambda_389.stypy_call_varargs = varargs
            _stypy_temp_lambda_389.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_389', ['m'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_389', ['m'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to ellipk(...): (line 1100)
            # Processing the call arguments (line 1100)
            int_547732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 52), 'int')
            # Getting the type of 'm' (line 1100)
            m_547733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 56), 'm', False)
            # Applying the binary operator '-' (line 1100)
            result_sub_547734 = python_operator(stypy.reporting.localization.Localization(__file__, 1100, 52), '-', int_547732, m_547733)
            
            # Processing the call keyword arguments (line 1100)
            kwargs_547735 = {}
            # Getting the type of 'mpmath' (line 1100)
            mpmath_547730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 38), 'mpmath', False)
            # Obtaining the member 'ellipk' of a type (line 1100)
            ellipk_547731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1100, 38), mpmath_547730, 'ellipk')
            # Calling ellipk(args, kwargs) (line 1100)
            ellipk_call_result_547736 = invoke(stypy.reporting.localization.Localization(__file__, 1100, 38), ellipk_547731, *[result_sub_547734], **kwargs_547735)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1100)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 28), 'stypy_return_type', ellipk_call_result_547736)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_389' in the type store
            # Getting the type of 'stypy_return_type' (line 1100)
            stypy_return_type_547737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547737)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_389'
            return stypy_return_type_547737

        # Assigning a type to the variable '_stypy_temp_lambda_389' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 28), '_stypy_temp_lambda_389', _stypy_temp_lambda_389)
        # Getting the type of '_stypy_temp_lambda_389' (line 1100)
        _stypy_temp_lambda_389_547738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 28), '_stypy_temp_lambda_389')
        
        # Obtaining an instance of the builtin type 'list' (line 1101)
        list_547739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1101)
        # Adding element type (line 1101)
        
        # Call to Arg(...): (line 1101)
        # Processing the call keyword arguments (line 1101)
        float_547741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 35), 'float')
        keyword_547742 = float_547741
        kwargs_547743 = {'a': keyword_547742}
        # Getting the type of 'Arg' (line 1101)
        Arg_547740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1101)
        Arg_call_result_547744 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 29), Arg_547740, *[], **kwargs_547743)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1101, 28), list_547739, Arg_call_result_547744)
        
        # Processing the call keyword arguments (line 1099)
        int_547745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1102, 32), 'int')
        keyword_547746 = int_547745
        kwargs_547747 = {'dps': keyword_547746}
        # Getting the type of 'assert_mpmath_equal' (line 1099)
        assert_mpmath_equal_547727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1099, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1099)
        assert_mpmath_equal_call_result_547748 = invoke(stypy.reporting.localization.Localization(__file__, 1099, 8), assert_mpmath_equal_547727, *[ellipkm1_547729, _stypy_temp_lambda_389_547738, list_547739], **kwargs_547747)
        
        
        # ################# End of 'test_ellipk(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipk' in the type store
        # Getting the type of 'stypy_return_type' (line 1095)
        stypy_return_type_547749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547749)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipk'
        return stypy_return_type_547749


    @norecursion
    def test_ellipkinc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipkinc'
        module_type_store = module_type_store.open_function_context('test_ellipkinc', 1104, 4, False)
        # Assigning a type to the variable 'self' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipkinc')
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipkinc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipkinc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipkinc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipkinc(...)' code ##################


        @norecursion
        def ellipkinc(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'ellipkinc'
            module_type_store = module_type_store.open_function_context('ellipkinc', 1105, 8, False)
            
            # Passed parameters checking function
            ellipkinc.stypy_localization = localization
            ellipkinc.stypy_type_of_self = None
            ellipkinc.stypy_type_store = module_type_store
            ellipkinc.stypy_function_name = 'ellipkinc'
            ellipkinc.stypy_param_names_list = ['phi', 'm']
            ellipkinc.stypy_varargs_param_name = None
            ellipkinc.stypy_kwargs_param_name = None
            ellipkinc.stypy_call_defaults = defaults
            ellipkinc.stypy_call_varargs = varargs
            ellipkinc.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'ellipkinc', ['phi', 'm'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'ellipkinc', localization, ['phi', 'm'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'ellipkinc(...)' code ##################

            
            # Call to ellippi(...): (line 1106)
            # Processing the call arguments (line 1106)
            int_547752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1106, 34), 'int')
            # Getting the type of 'phi' (line 1106)
            phi_547753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 37), 'phi', False)
            # Getting the type of 'm' (line 1106)
            m_547754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 42), 'm', False)
            # Processing the call keyword arguments (line 1106)
            kwargs_547755 = {}
            # Getting the type of 'mpmath' (line 1106)
            mpmath_547750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 19), 'mpmath', False)
            # Obtaining the member 'ellippi' of a type (line 1106)
            ellippi_547751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1106, 19), mpmath_547750, 'ellippi')
            # Calling ellippi(args, kwargs) (line 1106)
            ellippi_call_result_547756 = invoke(stypy.reporting.localization.Localization(__file__, 1106, 19), ellippi_547751, *[int_547752, phi_547753, m_547754], **kwargs_547755)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1106)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1106, 12), 'stypy_return_type', ellippi_call_result_547756)
            
            # ################# End of 'ellipkinc(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'ellipkinc' in the type store
            # Getting the type of 'stypy_return_type' (line 1105)
            stypy_return_type_547757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547757)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'ellipkinc'
            return stypy_return_type_547757

        # Assigning a type to the variable 'ellipkinc' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 8), 'ellipkinc', ellipkinc)
        
        # Call to assert_mpmath_equal(...): (line 1107)
        # Processing the call arguments (line 1107)
        # Getting the type of 'sc' (line 1107)
        sc_547759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 28), 'sc', False)
        # Obtaining the member 'ellipkinc' of a type (line 1107)
        ellipkinc_547760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1107, 28), sc_547759, 'ellipkinc')
        # Getting the type of 'ellipkinc' (line 1108)
        ellipkinc_547761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1108, 28), 'ellipkinc', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1109)
        list_547762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1109)
        # Adding element type (line 1109)
        
        # Call to Arg(...): (line 1109)
        # Processing the call arguments (line 1109)
        float_547764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 33), 'float')
        float_547765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 39), 'float')
        # Processing the call keyword arguments (line 1109)
        kwargs_547766 = {}
        # Getting the type of 'Arg' (line 1109)
        Arg_547763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1109)
        Arg_call_result_547767 = invoke(stypy.reporting.localization.Localization(__file__, 1109, 29), Arg_547763, *[float_547764, float_547765], **kwargs_547766)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1109, 28), list_547762, Arg_call_result_547767)
        # Adding element type (line 1109)
        
        # Call to Arg(...): (line 1109)
        # Processing the call keyword arguments (line 1109)
        float_547769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1109, 51), 'float')
        keyword_547770 = float_547769
        kwargs_547771 = {'b': keyword_547770}
        # Getting the type of 'Arg' (line 1109)
        Arg_547768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1109)
        Arg_call_result_547772 = invoke(stypy.reporting.localization.Localization(__file__, 1109, 45), Arg_547768, *[], **kwargs_547771)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1109, 28), list_547762, Arg_call_result_547772)
        
        # Processing the call keyword arguments (line 1107)
        # Getting the type of 'True' (line 1110)
        True_547773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1110, 44), 'True', False)
        keyword_547774 = True_547773
        kwargs_547775 = {'ignore_inf_sign': keyword_547774}
        # Getting the type of 'assert_mpmath_equal' (line 1107)
        assert_mpmath_equal_547758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1107)
        assert_mpmath_equal_call_result_547776 = invoke(stypy.reporting.localization.Localization(__file__, 1107, 8), assert_mpmath_equal_547758, *[ellipkinc_547760, ellipkinc_547761, list_547762], **kwargs_547775)
        
        
        # ################# End of 'test_ellipkinc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipkinc' in the type store
        # Getting the type of 'stypy_return_type' (line 1104)
        stypy_return_type_547777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1104, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547777)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipkinc'
        return stypy_return_type_547777


    @norecursion
    def test_ellipkinc_largephi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipkinc_largephi'
        module_type_store = module_type_store.open_function_context('test_ellipkinc_largephi', 1112, 4, False)
        # Assigning a type to the variable 'self' (line 1113)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1113, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipkinc_largephi')
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipkinc_largephi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipkinc_largephi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipkinc_largephi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipkinc_largephi(...)' code ##################


        @norecursion
        def ellipkinc(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'ellipkinc'
            module_type_store = module_type_store.open_function_context('ellipkinc', 1113, 8, False)
            
            # Passed parameters checking function
            ellipkinc.stypy_localization = localization
            ellipkinc.stypy_type_of_self = None
            ellipkinc.stypy_type_store = module_type_store
            ellipkinc.stypy_function_name = 'ellipkinc'
            ellipkinc.stypy_param_names_list = ['phi', 'm']
            ellipkinc.stypy_varargs_param_name = None
            ellipkinc.stypy_kwargs_param_name = None
            ellipkinc.stypy_call_defaults = defaults
            ellipkinc.stypy_call_varargs = varargs
            ellipkinc.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'ellipkinc', ['phi', 'm'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'ellipkinc', localization, ['phi', 'm'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'ellipkinc(...)' code ##################

            
            # Call to ellippi(...): (line 1114)
            # Processing the call arguments (line 1114)
            int_547780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1114, 34), 'int')
            # Getting the type of 'phi' (line 1114)
            phi_547781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 37), 'phi', False)
            # Getting the type of 'm' (line 1114)
            m_547782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 42), 'm', False)
            # Processing the call keyword arguments (line 1114)
            kwargs_547783 = {}
            # Getting the type of 'mpmath' (line 1114)
            mpmath_547778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 19), 'mpmath', False)
            # Obtaining the member 'ellippi' of a type (line 1114)
            ellippi_547779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1114, 19), mpmath_547778, 'ellippi')
            # Calling ellippi(args, kwargs) (line 1114)
            ellippi_call_result_547784 = invoke(stypy.reporting.localization.Localization(__file__, 1114, 19), ellippi_547779, *[int_547780, phi_547781, m_547782], **kwargs_547783)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1114)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1114, 12), 'stypy_return_type', ellippi_call_result_547784)
            
            # ################# End of 'ellipkinc(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'ellipkinc' in the type store
            # Getting the type of 'stypy_return_type' (line 1113)
            stypy_return_type_547785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547785)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'ellipkinc'
            return stypy_return_type_547785

        # Assigning a type to the variable 'ellipkinc' (line 1113)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1113, 8), 'ellipkinc', ellipkinc)
        
        # Call to assert_mpmath_equal(...): (line 1115)
        # Processing the call arguments (line 1115)
        # Getting the type of 'sc' (line 1115)
        sc_547787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 28), 'sc', False)
        # Obtaining the member 'ellipkinc' of a type (line 1115)
        ellipkinc_547788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1115, 28), sc_547787, 'ellipkinc')
        # Getting the type of 'ellipkinc' (line 1116)
        ellipkinc_547789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 28), 'ellipkinc', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1117)
        list_547790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1117, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1117)
        # Adding element type (line 1117)
        
        # Call to Arg(...): (line 1117)
        # Processing the call keyword arguments (line 1117)
        kwargs_547792 = {}
        # Getting the type of 'Arg' (line 1117)
        Arg_547791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1117)
        Arg_call_result_547793 = invoke(stypy.reporting.localization.Localization(__file__, 1117, 29), Arg_547791, *[], **kwargs_547792)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 28), list_547790, Arg_call_result_547793)
        # Adding element type (line 1117)
        
        # Call to Arg(...): (line 1117)
        # Processing the call keyword arguments (line 1117)
        float_547795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1117, 42), 'float')
        keyword_547796 = float_547795
        kwargs_547797 = {'b': keyword_547796}
        # Getting the type of 'Arg' (line 1117)
        Arg_547794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1117)
        Arg_call_result_547798 = invoke(stypy.reporting.localization.Localization(__file__, 1117, 36), Arg_547794, *[], **kwargs_547797)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1117, 28), list_547790, Arg_call_result_547798)
        
        # Processing the call keyword arguments (line 1115)
        # Getting the type of 'True' (line 1118)
        True_547799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 44), 'True', False)
        keyword_547800 = True_547799
        kwargs_547801 = {'ignore_inf_sign': keyword_547800}
        # Getting the type of 'assert_mpmath_equal' (line 1115)
        assert_mpmath_equal_547786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1115)
        assert_mpmath_equal_call_result_547802 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 8), assert_mpmath_equal_547786, *[ellipkinc_547788, ellipkinc_547789, list_547790], **kwargs_547801)
        
        
        # ################# End of 'test_ellipkinc_largephi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipkinc_largephi' in the type store
        # Getting the type of 'stypy_return_type' (line 1112)
        stypy_return_type_547803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547803)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipkinc_largephi'
        return stypy_return_type_547803


    @norecursion
    def test_ellipfun_sn(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipfun_sn'
        module_type_store = module_type_store.open_function_context('test_ellipfun_sn', 1120, 4, False)
        # Assigning a type to the variable 'self' (line 1121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1121, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipfun_sn')
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipfun_sn.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipfun_sn', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipfun_sn', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipfun_sn(...)' code ##################


        @norecursion
        def sn(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'sn'
            module_type_store = module_type_store.open_function_context('sn', 1121, 8, False)
            
            # Passed parameters checking function
            sn.stypy_localization = localization
            sn.stypy_type_of_self = None
            sn.stypy_type_store = module_type_store
            sn.stypy_function_name = 'sn'
            sn.stypy_param_names_list = ['u', 'm']
            sn.stypy_varargs_param_name = None
            sn.stypy_kwargs_param_name = None
            sn.stypy_call_defaults = defaults
            sn.stypy_call_varargs = varargs
            sn.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'sn', ['u', 'm'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'sn', localization, ['u', 'm'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'sn(...)' code ##################

            
            
            # Getting the type of 'u' (line 1123)
            u_547804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 15), 'u')
            int_547805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1123, 20), 'int')
            # Applying the binary operator '==' (line 1123)
            result_eq_547806 = python_operator(stypy.reporting.localization.Localization(__file__, 1123, 15), '==', u_547804, int_547805)
            
            # Testing the type of an if condition (line 1123)
            if_condition_547807 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1123, 12), result_eq_547806)
            # Assigning a type to the variable 'if_condition_547807' (line 1123)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1123, 12), 'if_condition_547807', if_condition_547807)
            # SSA begins for if statement (line 1123)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            int_547808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1124, 23), 'int')
            # Assigning a type to the variable 'stypy_return_type' (line 1124)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1124, 16), 'stypy_return_type', int_547808)
            # SSA branch for the else part of an if statement (line 1123)
            module_type_store.open_ssa_branch('else')
            
            # Call to ellipfun(...): (line 1126)
            # Processing the call arguments (line 1126)
            str_547811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 39), 'str', 'sn')
            # Processing the call keyword arguments (line 1126)
            # Getting the type of 'u' (line 1126)
            u_547812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 47), 'u', False)
            keyword_547813 = u_547812
            # Getting the type of 'm' (line 1126)
            m_547814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 52), 'm', False)
            keyword_547815 = m_547814
            kwargs_547816 = {'m': keyword_547815, 'u': keyword_547813}
            # Getting the type of 'mpmath' (line 1126)
            mpmath_547809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 23), 'mpmath', False)
            # Obtaining the member 'ellipfun' of a type (line 1126)
            ellipfun_547810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1126, 23), mpmath_547809, 'ellipfun')
            # Calling ellipfun(args, kwargs) (line 1126)
            ellipfun_call_result_547817 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 23), ellipfun_547810, *[str_547811], **kwargs_547816)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1126)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 16), 'stypy_return_type', ellipfun_call_result_547817)
            # SSA join for if statement (line 1123)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'sn(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'sn' in the type store
            # Getting the type of 'stypy_return_type' (line 1121)
            stypy_return_type_547818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547818)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'sn'
            return stypy_return_type_547818

        # Assigning a type to the variable 'sn' (line 1121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1121, 8), 'sn', sn)
        
        # Call to assert_mpmath_equal(...): (line 1131)
        # Processing the call arguments (line 1131)

        @norecursion
        def _stypy_temp_lambda_390(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_390'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_390', 1131, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_390.stypy_localization = localization
            _stypy_temp_lambda_390.stypy_type_of_self = None
            _stypy_temp_lambda_390.stypy_type_store = module_type_store
            _stypy_temp_lambda_390.stypy_function_name = '_stypy_temp_lambda_390'
            _stypy_temp_lambda_390.stypy_param_names_list = ['u', 'm']
            _stypy_temp_lambda_390.stypy_varargs_param_name = None
            _stypy_temp_lambda_390.stypy_kwargs_param_name = None
            _stypy_temp_lambda_390.stypy_call_defaults = defaults
            _stypy_temp_lambda_390.stypy_call_varargs = varargs
            _stypy_temp_lambda_390.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_390', ['u', 'm'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_390', ['u', 'm'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_547820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1131, 57), 'int')
            
            # Call to ellipj(...): (line 1131)
            # Processing the call arguments (line 1131)
            # Getting the type of 'u' (line 1131)
            u_547823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 51), 'u', False)
            # Getting the type of 'm' (line 1131)
            m_547824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 54), 'm', False)
            # Processing the call keyword arguments (line 1131)
            kwargs_547825 = {}
            # Getting the type of 'sc' (line 1131)
            sc_547821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 41), 'sc', False)
            # Obtaining the member 'ellipj' of a type (line 1131)
            ellipj_547822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1131, 41), sc_547821, 'ellipj')
            # Calling ellipj(args, kwargs) (line 1131)
            ellipj_call_result_547826 = invoke(stypy.reporting.localization.Localization(__file__, 1131, 41), ellipj_547822, *[u_547823, m_547824], **kwargs_547825)
            
            # Obtaining the member '__getitem__' of a type (line 1131)
            getitem___547827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1131, 41), ellipj_call_result_547826, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1131)
            subscript_call_result_547828 = invoke(stypy.reporting.localization.Localization(__file__, 1131, 41), getitem___547827, int_547820)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1131)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1131, 28), 'stypy_return_type', subscript_call_result_547828)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_390' in the type store
            # Getting the type of 'stypy_return_type' (line 1131)
            stypy_return_type_547829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547829)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_390'
            return stypy_return_type_547829

        # Assigning a type to the variable '_stypy_temp_lambda_390' (line 1131)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1131, 28), '_stypy_temp_lambda_390', _stypy_temp_lambda_390)
        # Getting the type of '_stypy_temp_lambda_390' (line 1131)
        _stypy_temp_lambda_390_547830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 28), '_stypy_temp_lambda_390')
        # Getting the type of 'sn' (line 1132)
        sn_547831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1132, 28), 'sn', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1133)
        list_547832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1133)
        # Adding element type (line 1133)
        
        # Call to Arg(...): (line 1133)
        # Processing the call arguments (line 1133)
        float_547834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 33), 'float')
        float_547835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 39), 'float')
        # Processing the call keyword arguments (line 1133)
        kwargs_547836 = {}
        # Getting the type of 'Arg' (line 1133)
        Arg_547833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1133)
        Arg_call_result_547837 = invoke(stypy.reporting.localization.Localization(__file__, 1133, 29), Arg_547833, *[float_547834, float_547835], **kwargs_547836)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1133, 28), list_547832, Arg_call_result_547837)
        # Adding element type (line 1133)
        
        # Call to Arg(...): (line 1133)
        # Processing the call keyword arguments (line 1133)
        int_547839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 51), 'int')
        keyword_547840 = int_547839
        int_547841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1133, 56), 'int')
        keyword_547842 = int_547841
        kwargs_547843 = {'a': keyword_547840, 'b': keyword_547842}
        # Getting the type of 'Arg' (line 1133)
        Arg_547838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1133, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1133)
        Arg_call_result_547844 = invoke(stypy.reporting.localization.Localization(__file__, 1133, 45), Arg_547838, *[], **kwargs_547843)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1133, 28), list_547832, Arg_call_result_547844)
        
        # Processing the call keyword arguments (line 1131)
        float_547845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1134, 33), 'float')
        keyword_547846 = float_547845
        kwargs_547847 = {'rtol': keyword_547846}
        # Getting the type of 'assert_mpmath_equal' (line 1131)
        assert_mpmath_equal_547819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1131)
        assert_mpmath_equal_call_result_547848 = invoke(stypy.reporting.localization.Localization(__file__, 1131, 8), assert_mpmath_equal_547819, *[_stypy_temp_lambda_390_547830, sn_547831, list_547832], **kwargs_547847)
        
        
        # ################# End of 'test_ellipfun_sn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipfun_sn' in the type store
        # Getting the type of 'stypy_return_type' (line 1120)
        stypy_return_type_547849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547849)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipfun_sn'
        return stypy_return_type_547849


    @norecursion
    def test_ellipfun_cn(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipfun_cn'
        module_type_store = module_type_store.open_function_context('test_ellipfun_cn', 1136, 4, False)
        # Assigning a type to the variable 'self' (line 1137)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1137, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipfun_cn')
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipfun_cn.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipfun_cn', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipfun_cn', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipfun_cn(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1138)
        # Processing the call arguments (line 1138)

        @norecursion
        def _stypy_temp_lambda_391(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_391'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_391', 1138, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_391.stypy_localization = localization
            _stypy_temp_lambda_391.stypy_type_of_self = None
            _stypy_temp_lambda_391.stypy_type_store = module_type_store
            _stypy_temp_lambda_391.stypy_function_name = '_stypy_temp_lambda_391'
            _stypy_temp_lambda_391.stypy_param_names_list = ['u', 'm']
            _stypy_temp_lambda_391.stypy_varargs_param_name = None
            _stypy_temp_lambda_391.stypy_kwargs_param_name = None
            _stypy_temp_lambda_391.stypy_call_defaults = defaults
            _stypy_temp_lambda_391.stypy_call_varargs = varargs
            _stypy_temp_lambda_391.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_391', ['u', 'm'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_391', ['u', 'm'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_547851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1138, 57), 'int')
            
            # Call to ellipj(...): (line 1138)
            # Processing the call arguments (line 1138)
            # Getting the type of 'u' (line 1138)
            u_547854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 51), 'u', False)
            # Getting the type of 'm' (line 1138)
            m_547855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 54), 'm', False)
            # Processing the call keyword arguments (line 1138)
            kwargs_547856 = {}
            # Getting the type of 'sc' (line 1138)
            sc_547852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 41), 'sc', False)
            # Obtaining the member 'ellipj' of a type (line 1138)
            ellipj_547853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1138, 41), sc_547852, 'ellipj')
            # Calling ellipj(args, kwargs) (line 1138)
            ellipj_call_result_547857 = invoke(stypy.reporting.localization.Localization(__file__, 1138, 41), ellipj_547853, *[u_547854, m_547855], **kwargs_547856)
            
            # Obtaining the member '__getitem__' of a type (line 1138)
            getitem___547858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1138, 41), ellipj_call_result_547857, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1138)
            subscript_call_result_547859 = invoke(stypy.reporting.localization.Localization(__file__, 1138, 41), getitem___547858, int_547851)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1138)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1138, 28), 'stypy_return_type', subscript_call_result_547859)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_391' in the type store
            # Getting the type of 'stypy_return_type' (line 1138)
            stypy_return_type_547860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547860)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_391'
            return stypy_return_type_547860

        # Assigning a type to the variable '_stypy_temp_lambda_391' (line 1138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1138, 28), '_stypy_temp_lambda_391', _stypy_temp_lambda_391)
        # Getting the type of '_stypy_temp_lambda_391' (line 1138)
        _stypy_temp_lambda_391_547861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 28), '_stypy_temp_lambda_391')

        @norecursion
        def _stypy_temp_lambda_392(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_392'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_392', 1139, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_392.stypy_localization = localization
            _stypy_temp_lambda_392.stypy_type_of_self = None
            _stypy_temp_lambda_392.stypy_type_store = module_type_store
            _stypy_temp_lambda_392.stypy_function_name = '_stypy_temp_lambda_392'
            _stypy_temp_lambda_392.stypy_param_names_list = ['u', 'm']
            _stypy_temp_lambda_392.stypy_varargs_param_name = None
            _stypy_temp_lambda_392.stypy_kwargs_param_name = None
            _stypy_temp_lambda_392.stypy_call_defaults = defaults
            _stypy_temp_lambda_392.stypy_call_varargs = varargs
            _stypy_temp_lambda_392.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_392', ['u', 'm'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_392', ['u', 'm'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to ellipfun(...): (line 1139)
            # Processing the call arguments (line 1139)
            str_547864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 57), 'str', 'cn')
            # Processing the call keyword arguments (line 1139)
            # Getting the type of 'u' (line 1139)
            u_547865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 65), 'u', False)
            keyword_547866 = u_547865
            # Getting the type of 'm' (line 1139)
            m_547867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 70), 'm', False)
            keyword_547868 = m_547867
            kwargs_547869 = {'m': keyword_547868, 'u': keyword_547866}
            # Getting the type of 'mpmath' (line 1139)
            mpmath_547862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 41), 'mpmath', False)
            # Obtaining the member 'ellipfun' of a type (line 1139)
            ellipfun_547863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 41), mpmath_547862, 'ellipfun')
            # Calling ellipfun(args, kwargs) (line 1139)
            ellipfun_call_result_547870 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 41), ellipfun_547863, *[str_547864], **kwargs_547869)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1139)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 28), 'stypy_return_type', ellipfun_call_result_547870)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_392' in the type store
            # Getting the type of 'stypy_return_type' (line 1139)
            stypy_return_type_547871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547871)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_392'
            return stypy_return_type_547871

        # Assigning a type to the variable '_stypy_temp_lambda_392' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 28), '_stypy_temp_lambda_392', _stypy_temp_lambda_392)
        # Getting the type of '_stypy_temp_lambda_392' (line 1139)
        _stypy_temp_lambda_392_547872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 28), '_stypy_temp_lambda_392')
        
        # Obtaining an instance of the builtin type 'list' (line 1140)
        list_547873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1140)
        # Adding element type (line 1140)
        
        # Call to Arg(...): (line 1140)
        # Processing the call arguments (line 1140)
        float_547875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 33), 'float')
        float_547876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 39), 'float')
        # Processing the call keyword arguments (line 1140)
        kwargs_547877 = {}
        # Getting the type of 'Arg' (line 1140)
        Arg_547874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1140)
        Arg_call_result_547878 = invoke(stypy.reporting.localization.Localization(__file__, 1140, 29), Arg_547874, *[float_547875, float_547876], **kwargs_547877)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1140, 28), list_547873, Arg_call_result_547878)
        # Adding element type (line 1140)
        
        # Call to Arg(...): (line 1140)
        # Processing the call keyword arguments (line 1140)
        int_547880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 51), 'int')
        keyword_547881 = int_547880
        int_547882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 56), 'int')
        keyword_547883 = int_547882
        kwargs_547884 = {'a': keyword_547881, 'b': keyword_547883}
        # Getting the type of 'Arg' (line 1140)
        Arg_547879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1140)
        Arg_call_result_547885 = invoke(stypy.reporting.localization.Localization(__file__, 1140, 45), Arg_547879, *[], **kwargs_547884)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1140, 28), list_547873, Arg_call_result_547885)
        
        # Processing the call keyword arguments (line 1138)
        float_547886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1141, 33), 'float')
        keyword_547887 = float_547886
        kwargs_547888 = {'rtol': keyword_547887}
        # Getting the type of 'assert_mpmath_equal' (line 1138)
        assert_mpmath_equal_547850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1138)
        assert_mpmath_equal_call_result_547889 = invoke(stypy.reporting.localization.Localization(__file__, 1138, 8), assert_mpmath_equal_547850, *[_stypy_temp_lambda_391_547861, _stypy_temp_lambda_392_547872, list_547873], **kwargs_547888)
        
        
        # ################# End of 'test_ellipfun_cn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipfun_cn' in the type store
        # Getting the type of 'stypy_return_type' (line 1136)
        stypy_return_type_547890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1136, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547890)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipfun_cn'
        return stypy_return_type_547890


    @norecursion
    def test_ellipfun_dn(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ellipfun_dn'
        module_type_store = module_type_store.open_function_context('test_ellipfun_dn', 1143, 4, False)
        # Assigning a type to the variable 'self' (line 1144)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1144, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ellipfun_dn')
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ellipfun_dn.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ellipfun_dn', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ellipfun_dn', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ellipfun_dn(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1145)
        # Processing the call arguments (line 1145)

        @norecursion
        def _stypy_temp_lambda_393(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_393'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_393', 1145, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_393.stypy_localization = localization
            _stypy_temp_lambda_393.stypy_type_of_self = None
            _stypy_temp_lambda_393.stypy_type_store = module_type_store
            _stypy_temp_lambda_393.stypy_function_name = '_stypy_temp_lambda_393'
            _stypy_temp_lambda_393.stypy_param_names_list = ['u', 'm']
            _stypy_temp_lambda_393.stypy_varargs_param_name = None
            _stypy_temp_lambda_393.stypy_kwargs_param_name = None
            _stypy_temp_lambda_393.stypy_call_defaults = defaults
            _stypy_temp_lambda_393.stypy_call_varargs = varargs
            _stypy_temp_lambda_393.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_393', ['u', 'm'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_393', ['u', 'm'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_547892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1145, 57), 'int')
            
            # Call to ellipj(...): (line 1145)
            # Processing the call arguments (line 1145)
            # Getting the type of 'u' (line 1145)
            u_547895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 51), 'u', False)
            # Getting the type of 'm' (line 1145)
            m_547896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 54), 'm', False)
            # Processing the call keyword arguments (line 1145)
            kwargs_547897 = {}
            # Getting the type of 'sc' (line 1145)
            sc_547893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 41), 'sc', False)
            # Obtaining the member 'ellipj' of a type (line 1145)
            ellipj_547894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1145, 41), sc_547893, 'ellipj')
            # Calling ellipj(args, kwargs) (line 1145)
            ellipj_call_result_547898 = invoke(stypy.reporting.localization.Localization(__file__, 1145, 41), ellipj_547894, *[u_547895, m_547896], **kwargs_547897)
            
            # Obtaining the member '__getitem__' of a type (line 1145)
            getitem___547899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1145, 41), ellipj_call_result_547898, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1145)
            subscript_call_result_547900 = invoke(stypy.reporting.localization.Localization(__file__, 1145, 41), getitem___547899, int_547892)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1145)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1145, 28), 'stypy_return_type', subscript_call_result_547900)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_393' in the type store
            # Getting the type of 'stypy_return_type' (line 1145)
            stypy_return_type_547901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547901)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_393'
            return stypy_return_type_547901

        # Assigning a type to the variable '_stypy_temp_lambda_393' (line 1145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1145, 28), '_stypy_temp_lambda_393', _stypy_temp_lambda_393)
        # Getting the type of '_stypy_temp_lambda_393' (line 1145)
        _stypy_temp_lambda_393_547902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 28), '_stypy_temp_lambda_393')

        @norecursion
        def _stypy_temp_lambda_394(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_394'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_394', 1146, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_394.stypy_localization = localization
            _stypy_temp_lambda_394.stypy_type_of_self = None
            _stypy_temp_lambda_394.stypy_type_store = module_type_store
            _stypy_temp_lambda_394.stypy_function_name = '_stypy_temp_lambda_394'
            _stypy_temp_lambda_394.stypy_param_names_list = ['u', 'm']
            _stypy_temp_lambda_394.stypy_varargs_param_name = None
            _stypy_temp_lambda_394.stypy_kwargs_param_name = None
            _stypy_temp_lambda_394.stypy_call_defaults = defaults
            _stypy_temp_lambda_394.stypy_call_varargs = varargs
            _stypy_temp_lambda_394.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_394', ['u', 'm'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_394', ['u', 'm'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to ellipfun(...): (line 1146)
            # Processing the call arguments (line 1146)
            str_547905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1146, 57), 'str', 'dn')
            # Processing the call keyword arguments (line 1146)
            # Getting the type of 'u' (line 1146)
            u_547906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 65), 'u', False)
            keyword_547907 = u_547906
            # Getting the type of 'm' (line 1146)
            m_547908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 70), 'm', False)
            keyword_547909 = m_547908
            kwargs_547910 = {'m': keyword_547909, 'u': keyword_547907}
            # Getting the type of 'mpmath' (line 1146)
            mpmath_547903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 41), 'mpmath', False)
            # Obtaining the member 'ellipfun' of a type (line 1146)
            ellipfun_547904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1146, 41), mpmath_547903, 'ellipfun')
            # Calling ellipfun(args, kwargs) (line 1146)
            ellipfun_call_result_547911 = invoke(stypy.reporting.localization.Localization(__file__, 1146, 41), ellipfun_547904, *[str_547905], **kwargs_547910)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1146)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 28), 'stypy_return_type', ellipfun_call_result_547911)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_394' in the type store
            # Getting the type of 'stypy_return_type' (line 1146)
            stypy_return_type_547912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547912)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_394'
            return stypy_return_type_547912

        # Assigning a type to the variable '_stypy_temp_lambda_394' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 28), '_stypy_temp_lambda_394', _stypy_temp_lambda_394)
        # Getting the type of '_stypy_temp_lambda_394' (line 1146)
        _stypy_temp_lambda_394_547913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 28), '_stypy_temp_lambda_394')
        
        # Obtaining an instance of the builtin type 'list' (line 1147)
        list_547914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1147)
        # Adding element type (line 1147)
        
        # Call to Arg(...): (line 1147)
        # Processing the call arguments (line 1147)
        float_547916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 33), 'float')
        float_547917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 39), 'float')
        # Processing the call keyword arguments (line 1147)
        kwargs_547918 = {}
        # Getting the type of 'Arg' (line 1147)
        Arg_547915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1147)
        Arg_call_result_547919 = invoke(stypy.reporting.localization.Localization(__file__, 1147, 29), Arg_547915, *[float_547916, float_547917], **kwargs_547918)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1147, 28), list_547914, Arg_call_result_547919)
        # Adding element type (line 1147)
        
        # Call to Arg(...): (line 1147)
        # Processing the call keyword arguments (line 1147)
        int_547921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 51), 'int')
        keyword_547922 = int_547921
        int_547923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 56), 'int')
        keyword_547924 = int_547923
        kwargs_547925 = {'a': keyword_547922, 'b': keyword_547924}
        # Getting the type of 'Arg' (line 1147)
        Arg_547920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1147)
        Arg_call_result_547926 = invoke(stypy.reporting.localization.Localization(__file__, 1147, 45), Arg_547920, *[], **kwargs_547925)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1147, 28), list_547914, Arg_call_result_547926)
        
        # Processing the call keyword arguments (line 1145)
        float_547927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1148, 33), 'float')
        keyword_547928 = float_547927
        kwargs_547929 = {'rtol': keyword_547928}
        # Getting the type of 'assert_mpmath_equal' (line 1145)
        assert_mpmath_equal_547891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1145)
        assert_mpmath_equal_call_result_547930 = invoke(stypy.reporting.localization.Localization(__file__, 1145, 8), assert_mpmath_equal_547891, *[_stypy_temp_lambda_393_547902, _stypy_temp_lambda_394_547913, list_547914], **kwargs_547929)
        
        
        # ################# End of 'test_ellipfun_dn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ellipfun_dn' in the type store
        # Getting the type of 'stypy_return_type' (line 1143)
        stypy_return_type_547931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547931)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ellipfun_dn'
        return stypy_return_type_547931


    @norecursion
    def test_erf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_erf'
        module_type_store = module_type_store.open_function_context('test_erf', 1150, 4, False)
        # Assigning a type to the variable 'self' (line 1151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1151, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_erf.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_erf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_erf.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_erf.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_erf')
        TestSystematic.test_erf.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_erf.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_erf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_erf.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_erf.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_erf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_erf.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_erf', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_erf', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_erf(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1151)
        # Processing the call arguments (line 1151)
        # Getting the type of 'sc' (line 1151)
        sc_547933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 28), 'sc', False)
        # Obtaining the member 'erf' of a type (line 1151)
        erf_547934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1151, 28), sc_547933, 'erf')

        @norecursion
        def _stypy_temp_lambda_395(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_395'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_395', 1152, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_395.stypy_localization = localization
            _stypy_temp_lambda_395.stypy_type_of_self = None
            _stypy_temp_lambda_395.stypy_type_store = module_type_store
            _stypy_temp_lambda_395.stypy_function_name = '_stypy_temp_lambda_395'
            _stypy_temp_lambda_395.stypy_param_names_list = ['z']
            _stypy_temp_lambda_395.stypy_varargs_param_name = None
            _stypy_temp_lambda_395.stypy_kwargs_param_name = None
            _stypy_temp_lambda_395.stypy_call_defaults = defaults
            _stypy_temp_lambda_395.stypy_call_varargs = varargs
            _stypy_temp_lambda_395.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_395', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_395', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to erf(...): (line 1152)
            # Processing the call arguments (line 1152)
            # Getting the type of 'z' (line 1152)
            z_547937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 49), 'z', False)
            # Processing the call keyword arguments (line 1152)
            kwargs_547938 = {}
            # Getting the type of 'mpmath' (line 1152)
            mpmath_547935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 38), 'mpmath', False)
            # Obtaining the member 'erf' of a type (line 1152)
            erf_547936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 38), mpmath_547935, 'erf')
            # Calling erf(args, kwargs) (line 1152)
            erf_call_result_547939 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 38), erf_547936, *[z_547937], **kwargs_547938)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1152)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 28), 'stypy_return_type', erf_call_result_547939)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_395' in the type store
            # Getting the type of 'stypy_return_type' (line 1152)
            stypy_return_type_547940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547940)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_395'
            return stypy_return_type_547940

        # Assigning a type to the variable '_stypy_temp_lambda_395' (line 1152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 28), '_stypy_temp_lambda_395', _stypy_temp_lambda_395)
        # Getting the type of '_stypy_temp_lambda_395' (line 1152)
        _stypy_temp_lambda_395_547941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 28), '_stypy_temp_lambda_395')
        
        # Obtaining an instance of the builtin type 'list' (line 1153)
        list_547942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1153)
        # Adding element type (line 1153)
        
        # Call to Arg(...): (line 1153)
        # Processing the call keyword arguments (line 1153)
        kwargs_547944 = {}
        # Getting the type of 'Arg' (line 1153)
        Arg_547943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1153)
        Arg_call_result_547945 = invoke(stypy.reporting.localization.Localization(__file__, 1153, 29), Arg_547943, *[], **kwargs_547944)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1153, 28), list_547942, Arg_call_result_547945)
        
        # Processing the call keyword arguments (line 1151)
        kwargs_547946 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1151)
        assert_mpmath_equal_547932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1151)
        assert_mpmath_equal_call_result_547947 = invoke(stypy.reporting.localization.Localization(__file__, 1151, 8), assert_mpmath_equal_547932, *[erf_547934, _stypy_temp_lambda_395_547941, list_547942], **kwargs_547946)
        
        
        # ################# End of 'test_erf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_erf' in the type store
        # Getting the type of 'stypy_return_type' (line 1150)
        stypy_return_type_547948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547948)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_erf'
        return stypy_return_type_547948


    @norecursion
    def test_erf_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_erf_complex'
        module_type_store = module_type_store.open_function_context('test_erf_complex', 1155, 4, False)
        # Assigning a type to the variable 'self' (line 1156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1156, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_erf_complex')
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_erf_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_erf_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_erf_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_erf_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1156)
        # Processing the call arguments (line 1156)
        # Getting the type of 'sc' (line 1156)
        sc_547950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 28), 'sc', False)
        # Obtaining the member 'erf' of a type (line 1156)
        erf_547951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1156, 28), sc_547950, 'erf')

        @norecursion
        def _stypy_temp_lambda_396(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_396'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_396', 1157, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_396.stypy_localization = localization
            _stypy_temp_lambda_396.stypy_type_of_self = None
            _stypy_temp_lambda_396.stypy_type_store = module_type_store
            _stypy_temp_lambda_396.stypy_function_name = '_stypy_temp_lambda_396'
            _stypy_temp_lambda_396.stypy_param_names_list = ['z']
            _stypy_temp_lambda_396.stypy_varargs_param_name = None
            _stypy_temp_lambda_396.stypy_kwargs_param_name = None
            _stypy_temp_lambda_396.stypy_call_defaults = defaults
            _stypy_temp_lambda_396.stypy_call_varargs = varargs
            _stypy_temp_lambda_396.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_396', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_396', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to erf(...): (line 1157)
            # Processing the call arguments (line 1157)
            # Getting the type of 'z' (line 1157)
            z_547954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 49), 'z', False)
            # Processing the call keyword arguments (line 1157)
            kwargs_547955 = {}
            # Getting the type of 'mpmath' (line 1157)
            mpmath_547952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 38), 'mpmath', False)
            # Obtaining the member 'erf' of a type (line 1157)
            erf_547953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1157, 38), mpmath_547952, 'erf')
            # Calling erf(args, kwargs) (line 1157)
            erf_call_result_547956 = invoke(stypy.reporting.localization.Localization(__file__, 1157, 38), erf_547953, *[z_547954], **kwargs_547955)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1157)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1157, 28), 'stypy_return_type', erf_call_result_547956)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_396' in the type store
            # Getting the type of 'stypy_return_type' (line 1157)
            stypy_return_type_547957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547957)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_396'
            return stypy_return_type_547957

        # Assigning a type to the variable '_stypy_temp_lambda_396' (line 1157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1157, 28), '_stypy_temp_lambda_396', _stypy_temp_lambda_396)
        # Getting the type of '_stypy_temp_lambda_396' (line 1157)
        _stypy_temp_lambda_396_547958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 28), '_stypy_temp_lambda_396')
        
        # Obtaining an instance of the builtin type 'list' (line 1158)
        list_547959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1158)
        # Adding element type (line 1158)
        
        # Call to ComplexArg(...): (line 1158)
        # Processing the call keyword arguments (line 1158)
        kwargs_547961 = {}
        # Getting the type of 'ComplexArg' (line 1158)
        ComplexArg_547960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1158)
        ComplexArg_call_result_547962 = invoke(stypy.reporting.localization.Localization(__file__, 1158, 29), ComplexArg_547960, *[], **kwargs_547961)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1158, 28), list_547959, ComplexArg_call_result_547962)
        
        # Processing the call keyword arguments (line 1156)
        int_547963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 46), 'int')
        keyword_547964 = int_547963
        kwargs_547965 = {'n': keyword_547964}
        # Getting the type of 'assert_mpmath_equal' (line 1156)
        assert_mpmath_equal_547949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1156)
        assert_mpmath_equal_call_result_547966 = invoke(stypy.reporting.localization.Localization(__file__, 1156, 8), assert_mpmath_equal_547949, *[erf_547951, _stypy_temp_lambda_396_547958, list_547959], **kwargs_547965)
        
        
        # ################# End of 'test_erf_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_erf_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1155)
        stypy_return_type_547967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547967)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_erf_complex'
        return stypy_return_type_547967


    @norecursion
    def test_erfc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_erfc'
        module_type_store = module_type_store.open_function_context('test_erfc', 1160, 4, False)
        # Assigning a type to the variable 'self' (line 1161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1161, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_erfc')
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_erfc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_erfc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_erfc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_erfc(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1161)
        # Processing the call arguments (line 1161)
        # Getting the type of 'sc' (line 1161)
        sc_547969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 28), 'sc', False)
        # Obtaining the member 'erfc' of a type (line 1161)
        erfc_547970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 28), sc_547969, 'erfc')
        
        # Call to exception_to_nan(...): (line 1162)
        # Processing the call arguments (line 1162)

        @norecursion
        def _stypy_temp_lambda_397(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_397'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_397', 1162, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_397.stypy_localization = localization
            _stypy_temp_lambda_397.stypy_type_of_self = None
            _stypy_temp_lambda_397.stypy_type_store = module_type_store
            _stypy_temp_lambda_397.stypy_function_name = '_stypy_temp_lambda_397'
            _stypy_temp_lambda_397.stypy_param_names_list = ['z']
            _stypy_temp_lambda_397.stypy_varargs_param_name = None
            _stypy_temp_lambda_397.stypy_kwargs_param_name = None
            _stypy_temp_lambda_397.stypy_call_defaults = defaults
            _stypy_temp_lambda_397.stypy_call_varargs = varargs
            _stypy_temp_lambda_397.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_397', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_397', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to erfc(...): (line 1162)
            # Processing the call arguments (line 1162)
            # Getting the type of 'z' (line 1162)
            z_547974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 67), 'z', False)
            # Processing the call keyword arguments (line 1162)
            kwargs_547975 = {}
            # Getting the type of 'mpmath' (line 1162)
            mpmath_547972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 55), 'mpmath', False)
            # Obtaining the member 'erfc' of a type (line 1162)
            erfc_547973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1162, 55), mpmath_547972, 'erfc')
            # Calling erfc(args, kwargs) (line 1162)
            erfc_call_result_547976 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 55), erfc_547973, *[z_547974], **kwargs_547975)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1162)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1162, 45), 'stypy_return_type', erfc_call_result_547976)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_397' in the type store
            # Getting the type of 'stypy_return_type' (line 1162)
            stypy_return_type_547977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547977)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_397'
            return stypy_return_type_547977

        # Assigning a type to the variable '_stypy_temp_lambda_397' (line 1162)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1162, 45), '_stypy_temp_lambda_397', _stypy_temp_lambda_397)
        # Getting the type of '_stypy_temp_lambda_397' (line 1162)
        _stypy_temp_lambda_397_547978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 45), '_stypy_temp_lambda_397')
        # Processing the call keyword arguments (line 1162)
        kwargs_547979 = {}
        # Getting the type of 'exception_to_nan' (line 1162)
        exception_to_nan_547971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1162)
        exception_to_nan_call_result_547980 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 28), exception_to_nan_547971, *[_stypy_temp_lambda_397_547978], **kwargs_547979)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1163)
        list_547981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1163, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1163)
        # Adding element type (line 1163)
        
        # Call to Arg(...): (line 1163)
        # Processing the call keyword arguments (line 1163)
        kwargs_547983 = {}
        # Getting the type of 'Arg' (line 1163)
        Arg_547982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1163)
        Arg_call_result_547984 = invoke(stypy.reporting.localization.Localization(__file__, 1163, 29), Arg_547982, *[], **kwargs_547983)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1163, 28), list_547981, Arg_call_result_547984)
        
        # Processing the call keyword arguments (line 1161)
        float_547985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1163, 42), 'float')
        keyword_547986 = float_547985
        kwargs_547987 = {'rtol': keyword_547986}
        # Getting the type of 'assert_mpmath_equal' (line 1161)
        assert_mpmath_equal_547968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1161)
        assert_mpmath_equal_call_result_547988 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 8), assert_mpmath_equal_547968, *[erfc_547970, exception_to_nan_call_result_547980, list_547981], **kwargs_547987)
        
        
        # ################# End of 'test_erfc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_erfc' in the type store
        # Getting the type of 'stypy_return_type' (line 1160)
        stypy_return_type_547989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_547989)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_erfc'
        return stypy_return_type_547989


    @norecursion
    def test_erfc_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_erfc_complex'
        module_type_store = module_type_store.open_function_context('test_erfc_complex', 1165, 4, False)
        # Assigning a type to the variable 'self' (line 1166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_erfc_complex')
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_erfc_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_erfc_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_erfc_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_erfc_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1166)
        # Processing the call arguments (line 1166)
        # Getting the type of 'sc' (line 1166)
        sc_547991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 28), 'sc', False)
        # Obtaining the member 'erfc' of a type (line 1166)
        erfc_547992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 28), sc_547991, 'erfc')
        
        # Call to exception_to_nan(...): (line 1167)
        # Processing the call arguments (line 1167)

        @norecursion
        def _stypy_temp_lambda_398(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_398'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_398', 1167, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_398.stypy_localization = localization
            _stypy_temp_lambda_398.stypy_type_of_self = None
            _stypy_temp_lambda_398.stypy_type_store = module_type_store
            _stypy_temp_lambda_398.stypy_function_name = '_stypy_temp_lambda_398'
            _stypy_temp_lambda_398.stypy_param_names_list = ['z']
            _stypy_temp_lambda_398.stypy_varargs_param_name = None
            _stypy_temp_lambda_398.stypy_kwargs_param_name = None
            _stypy_temp_lambda_398.stypy_call_defaults = defaults
            _stypy_temp_lambda_398.stypy_call_varargs = varargs
            _stypy_temp_lambda_398.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_398', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_398', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to erfc(...): (line 1167)
            # Processing the call arguments (line 1167)
            # Getting the type of 'z' (line 1167)
            z_547996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 67), 'z', False)
            # Processing the call keyword arguments (line 1167)
            kwargs_547997 = {}
            # Getting the type of 'mpmath' (line 1167)
            mpmath_547994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 55), 'mpmath', False)
            # Obtaining the member 'erfc' of a type (line 1167)
            erfc_547995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 55), mpmath_547994, 'erfc')
            # Calling erfc(args, kwargs) (line 1167)
            erfc_call_result_547998 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 55), erfc_547995, *[z_547996], **kwargs_547997)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1167)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1167, 45), 'stypy_return_type', erfc_call_result_547998)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_398' in the type store
            # Getting the type of 'stypy_return_type' (line 1167)
            stypy_return_type_547999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_547999)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_398'
            return stypy_return_type_547999

        # Assigning a type to the variable '_stypy_temp_lambda_398' (line 1167)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1167, 45), '_stypy_temp_lambda_398', _stypy_temp_lambda_398)
        # Getting the type of '_stypy_temp_lambda_398' (line 1167)
        _stypy_temp_lambda_398_548000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 45), '_stypy_temp_lambda_398')
        # Processing the call keyword arguments (line 1167)
        kwargs_548001 = {}
        # Getting the type of 'exception_to_nan' (line 1167)
        exception_to_nan_547993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1167)
        exception_to_nan_call_result_548002 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 28), exception_to_nan_547993, *[_stypy_temp_lambda_398_548000], **kwargs_548001)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1168)
        list_548003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1168, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1168)
        # Adding element type (line 1168)
        
        # Call to ComplexArg(...): (line 1168)
        # Processing the call keyword arguments (line 1168)
        kwargs_548005 = {}
        # Getting the type of 'ComplexArg' (line 1168)
        ComplexArg_548004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1168)
        ComplexArg_call_result_548006 = invoke(stypy.reporting.localization.Localization(__file__, 1168, 29), ComplexArg_548004, *[], **kwargs_548005)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1168, 28), list_548003, ComplexArg_call_result_548006)
        
        # Processing the call keyword arguments (line 1166)
        int_548007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1168, 46), 'int')
        keyword_548008 = int_548007
        kwargs_548009 = {'n': keyword_548008}
        # Getting the type of 'assert_mpmath_equal' (line 1166)
        assert_mpmath_equal_547990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1166)
        assert_mpmath_equal_call_result_548010 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 8), assert_mpmath_equal_547990, *[erfc_547992, exception_to_nan_call_result_548002, list_548003], **kwargs_548009)
        
        
        # ################# End of 'test_erfc_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_erfc_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1165)
        stypy_return_type_548011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548011)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_erfc_complex'
        return stypy_return_type_548011


    @norecursion
    def test_erfi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_erfi'
        module_type_store = module_type_store.open_function_context('test_erfi', 1170, 4, False)
        # Assigning a type to the variable 'self' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_erfi')
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_erfi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_erfi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_erfi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_erfi(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1171)
        # Processing the call arguments (line 1171)
        # Getting the type of 'sc' (line 1171)
        sc_548013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 28), 'sc', False)
        # Obtaining the member 'erfi' of a type (line 1171)
        erfi_548014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 28), sc_548013, 'erfi')
        # Getting the type of 'mpmath' (line 1172)
        mpmath_548015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 28), 'mpmath', False)
        # Obtaining the member 'erfi' of a type (line 1172)
        erfi_548016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 28), mpmath_548015, 'erfi')
        
        # Obtaining an instance of the builtin type 'list' (line 1173)
        list_548017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1173, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1173)
        # Adding element type (line 1173)
        
        # Call to Arg(...): (line 1173)
        # Processing the call keyword arguments (line 1173)
        kwargs_548019 = {}
        # Getting the type of 'Arg' (line 1173)
        Arg_548018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1173)
        Arg_call_result_548020 = invoke(stypy.reporting.localization.Localization(__file__, 1173, 29), Arg_548018, *[], **kwargs_548019)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1173, 28), list_548017, Arg_call_result_548020)
        
        # Processing the call keyword arguments (line 1171)
        int_548021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1173, 39), 'int')
        keyword_548022 = int_548021
        kwargs_548023 = {'n': keyword_548022}
        # Getting the type of 'assert_mpmath_equal' (line 1171)
        assert_mpmath_equal_548012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1171)
        assert_mpmath_equal_call_result_548024 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 8), assert_mpmath_equal_548012, *[erfi_548014, erfi_548016, list_548017], **kwargs_548023)
        
        
        # ################# End of 'test_erfi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_erfi' in the type store
        # Getting the type of 'stypy_return_type' (line 1170)
        stypy_return_type_548025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548025)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_erfi'
        return stypy_return_type_548025


    @norecursion
    def test_erfi_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_erfi_complex'
        module_type_store = module_type_store.open_function_context('test_erfi_complex', 1175, 4, False)
        # Assigning a type to the variable 'self' (line 1176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_erfi_complex')
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_erfi_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_erfi_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_erfi_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_erfi_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1176)
        # Processing the call arguments (line 1176)
        # Getting the type of 'sc' (line 1176)
        sc_548027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 28), 'sc', False)
        # Obtaining the member 'erfi' of a type (line 1176)
        erfi_548028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 28), sc_548027, 'erfi')
        # Getting the type of 'mpmath' (line 1177)
        mpmath_548029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1177, 28), 'mpmath', False)
        # Obtaining the member 'erfi' of a type (line 1177)
        erfi_548030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1177, 28), mpmath_548029, 'erfi')
        
        # Obtaining an instance of the builtin type 'list' (line 1178)
        list_548031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1178, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1178)
        # Adding element type (line 1178)
        
        # Call to ComplexArg(...): (line 1178)
        # Processing the call keyword arguments (line 1178)
        kwargs_548033 = {}
        # Getting the type of 'ComplexArg' (line 1178)
        ComplexArg_548032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1178, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1178)
        ComplexArg_call_result_548034 = invoke(stypy.reporting.localization.Localization(__file__, 1178, 29), ComplexArg_548032, *[], **kwargs_548033)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1178, 28), list_548031, ComplexArg_call_result_548034)
        
        # Processing the call keyword arguments (line 1176)
        int_548035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1178, 46), 'int')
        keyword_548036 = int_548035
        kwargs_548037 = {'n': keyword_548036}
        # Getting the type of 'assert_mpmath_equal' (line 1176)
        assert_mpmath_equal_548026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1176)
        assert_mpmath_equal_call_result_548038 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 8), assert_mpmath_equal_548026, *[erfi_548028, erfi_548030, list_548031], **kwargs_548037)
        
        
        # ################# End of 'test_erfi_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_erfi_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1175)
        stypy_return_type_548039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548039)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_erfi_complex'
        return stypy_return_type_548039


    @norecursion
    def test_ndtr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ndtr'
        module_type_store = module_type_store.open_function_context('test_ndtr', 1180, 4, False)
        # Assigning a type to the variable 'self' (line 1181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1181, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ndtr')
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ndtr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ndtr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ndtr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ndtr(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1181)
        # Processing the call arguments (line 1181)
        # Getting the type of 'sc' (line 1181)
        sc_548041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 28), 'sc', False)
        # Obtaining the member 'ndtr' of a type (line 1181)
        ndtr_548042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1181, 28), sc_548041, 'ndtr')
        
        # Call to exception_to_nan(...): (line 1182)
        # Processing the call arguments (line 1182)

        @norecursion
        def _stypy_temp_lambda_399(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_399'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_399', 1182, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_399.stypy_localization = localization
            _stypy_temp_lambda_399.stypy_type_of_self = None
            _stypy_temp_lambda_399.stypy_type_store = module_type_store
            _stypy_temp_lambda_399.stypy_function_name = '_stypy_temp_lambda_399'
            _stypy_temp_lambda_399.stypy_param_names_list = ['z']
            _stypy_temp_lambda_399.stypy_varargs_param_name = None
            _stypy_temp_lambda_399.stypy_kwargs_param_name = None
            _stypy_temp_lambda_399.stypy_call_defaults = defaults
            _stypy_temp_lambda_399.stypy_call_varargs = varargs
            _stypy_temp_lambda_399.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_399', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_399', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to ncdf(...): (line 1182)
            # Processing the call arguments (line 1182)
            # Getting the type of 'z' (line 1182)
            z_548046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 67), 'z', False)
            # Processing the call keyword arguments (line 1182)
            kwargs_548047 = {}
            # Getting the type of 'mpmath' (line 1182)
            mpmath_548044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 55), 'mpmath', False)
            # Obtaining the member 'ncdf' of a type (line 1182)
            ncdf_548045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1182, 55), mpmath_548044, 'ncdf')
            # Calling ncdf(args, kwargs) (line 1182)
            ncdf_call_result_548048 = invoke(stypy.reporting.localization.Localization(__file__, 1182, 55), ncdf_548045, *[z_548046], **kwargs_548047)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1182)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1182, 45), 'stypy_return_type', ncdf_call_result_548048)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_399' in the type store
            # Getting the type of 'stypy_return_type' (line 1182)
            stypy_return_type_548049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548049)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_399'
            return stypy_return_type_548049

        # Assigning a type to the variable '_stypy_temp_lambda_399' (line 1182)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1182, 45), '_stypy_temp_lambda_399', _stypy_temp_lambda_399)
        # Getting the type of '_stypy_temp_lambda_399' (line 1182)
        _stypy_temp_lambda_399_548050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 45), '_stypy_temp_lambda_399')
        # Processing the call keyword arguments (line 1182)
        kwargs_548051 = {}
        # Getting the type of 'exception_to_nan' (line 1182)
        exception_to_nan_548043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1182, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1182)
        exception_to_nan_call_result_548052 = invoke(stypy.reporting.localization.Localization(__file__, 1182, 28), exception_to_nan_548043, *[_stypy_temp_lambda_399_548050], **kwargs_548051)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1183)
        list_548053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1183, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1183)
        # Adding element type (line 1183)
        
        # Call to Arg(...): (line 1183)
        # Processing the call keyword arguments (line 1183)
        kwargs_548055 = {}
        # Getting the type of 'Arg' (line 1183)
        Arg_548054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1183, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1183)
        Arg_call_result_548056 = invoke(stypy.reporting.localization.Localization(__file__, 1183, 29), Arg_548054, *[], **kwargs_548055)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1183, 28), list_548053, Arg_call_result_548056)
        
        # Processing the call keyword arguments (line 1181)
        int_548057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1183, 39), 'int')
        keyword_548058 = int_548057
        kwargs_548059 = {'n': keyword_548058}
        # Getting the type of 'assert_mpmath_equal' (line 1181)
        assert_mpmath_equal_548040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1181)
        assert_mpmath_equal_call_result_548060 = invoke(stypy.reporting.localization.Localization(__file__, 1181, 8), assert_mpmath_equal_548040, *[ndtr_548042, exception_to_nan_call_result_548052, list_548053], **kwargs_548059)
        
        
        # ################# End of 'test_ndtr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ndtr' in the type store
        # Getting the type of 'stypy_return_type' (line 1180)
        stypy_return_type_548061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548061)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ndtr'
        return stypy_return_type_548061


    @norecursion
    def test_ndtr_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ndtr_complex'
        module_type_store = module_type_store.open_function_context('test_ndtr_complex', 1185, 4, False)
        # Assigning a type to the variable 'self' (line 1186)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1186, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ndtr_complex')
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ndtr_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ndtr_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ndtr_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ndtr_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1186)
        # Processing the call arguments (line 1186)
        # Getting the type of 'sc' (line 1186)
        sc_548063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 28), 'sc', False)
        # Obtaining the member 'ndtr' of a type (line 1186)
        ndtr_548064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1186, 28), sc_548063, 'ndtr')

        @norecursion
        def _stypy_temp_lambda_400(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_400'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_400', 1187, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_400.stypy_localization = localization
            _stypy_temp_lambda_400.stypy_type_of_self = None
            _stypy_temp_lambda_400.stypy_type_store = module_type_store
            _stypy_temp_lambda_400.stypy_function_name = '_stypy_temp_lambda_400'
            _stypy_temp_lambda_400.stypy_param_names_list = ['z']
            _stypy_temp_lambda_400.stypy_varargs_param_name = None
            _stypy_temp_lambda_400.stypy_kwargs_param_name = None
            _stypy_temp_lambda_400.stypy_call_defaults = defaults
            _stypy_temp_lambda_400.stypy_call_varargs = varargs
            _stypy_temp_lambda_400.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_400', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_400', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to erfc(...): (line 1187)
            # Processing the call arguments (line 1187)
            
            # Getting the type of 'z' (line 1187)
            z_548067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 51), 'z', False)
            # Applying the 'usub' unary operator (line 1187)
            result___neg___548068 = python_operator(stypy.reporting.localization.Localization(__file__, 1187, 50), 'usub', z_548067)
            
            
            # Call to sqrt(...): (line 1187)
            # Processing the call arguments (line 1187)
            float_548071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 61), 'float')
            # Processing the call keyword arguments (line 1187)
            kwargs_548072 = {}
            # Getting the type of 'np' (line 1187)
            np_548069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 53), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 1187)
            sqrt_548070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1187, 53), np_548069, 'sqrt')
            # Calling sqrt(args, kwargs) (line 1187)
            sqrt_call_result_548073 = invoke(stypy.reporting.localization.Localization(__file__, 1187, 53), sqrt_548070, *[float_548071], **kwargs_548072)
            
            # Applying the binary operator 'div' (line 1187)
            result_div_548074 = python_operator(stypy.reporting.localization.Localization(__file__, 1187, 50), 'div', result___neg___548068, sqrt_call_result_548073)
            
            # Processing the call keyword arguments (line 1187)
            kwargs_548075 = {}
            # Getting the type of 'mpmath' (line 1187)
            mpmath_548065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 38), 'mpmath', False)
            # Obtaining the member 'erfc' of a type (line 1187)
            erfc_548066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1187, 38), mpmath_548065, 'erfc')
            # Calling erfc(args, kwargs) (line 1187)
            erfc_call_result_548076 = invoke(stypy.reporting.localization.Localization(__file__, 1187, 38), erfc_548066, *[result_div_548074], **kwargs_548075)
            
            float_548077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1187, 66), 'float')
            # Applying the binary operator 'div' (line 1187)
            result_div_548078 = python_operator(stypy.reporting.localization.Localization(__file__, 1187, 38), 'div', erfc_call_result_548076, float_548077)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1187)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1187, 28), 'stypy_return_type', result_div_548078)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_400' in the type store
            # Getting the type of 'stypy_return_type' (line 1187)
            stypy_return_type_548079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548079)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_400'
            return stypy_return_type_548079

        # Assigning a type to the variable '_stypy_temp_lambda_400' (line 1187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1187, 28), '_stypy_temp_lambda_400', _stypy_temp_lambda_400)
        # Getting the type of '_stypy_temp_lambda_400' (line 1187)
        _stypy_temp_lambda_400_548080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1187, 28), '_stypy_temp_lambda_400')
        
        # Obtaining an instance of the builtin type 'list' (line 1188)
        list_548081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1188)
        # Adding element type (line 1188)
        
        # Call to ComplexArg(...): (line 1188)
        # Processing the call keyword arguments (line 1188)
        
        # Call to complex(...): (line 1188)
        # Processing the call arguments (line 1188)
        int_548084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 50), 'int')
        int_548085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 58), 'int')
        # Processing the call keyword arguments (line 1188)
        kwargs_548086 = {}
        # Getting the type of 'complex' (line 1188)
        complex_548083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 42), 'complex', False)
        # Calling complex(args, kwargs) (line 1188)
        complex_call_result_548087 = invoke(stypy.reporting.localization.Localization(__file__, 1188, 42), complex_548083, *[int_548084, int_548085], **kwargs_548086)
        
        keyword_548088 = complex_call_result_548087
        
        # Call to complex(...): (line 1188)
        # Processing the call arguments (line 1188)
        int_548090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 77), 'int')
        int_548091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 84), 'int')
        # Processing the call keyword arguments (line 1188)
        kwargs_548092 = {}
        # Getting the type of 'complex' (line 1188)
        complex_548089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 69), 'complex', False)
        # Calling complex(args, kwargs) (line 1188)
        complex_call_result_548093 = invoke(stypy.reporting.localization.Localization(__file__, 1188, 69), complex_548089, *[int_548090, int_548091], **kwargs_548092)
        
        keyword_548094 = complex_call_result_548093
        kwargs_548095 = {'a': keyword_548088, 'b': keyword_548094}
        # Getting the type of 'ComplexArg' (line 1188)
        ComplexArg_548082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1188, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1188)
        ComplexArg_call_result_548096 = invoke(stypy.reporting.localization.Localization(__file__, 1188, 29), ComplexArg_548082, *[], **kwargs_548095)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1188, 28), list_548081, ComplexArg_call_result_548096)
        
        # Processing the call keyword arguments (line 1186)
        int_548097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1188, 96), 'int')
        keyword_548098 = int_548097
        kwargs_548099 = {'n': keyword_548098}
        # Getting the type of 'assert_mpmath_equal' (line 1186)
        assert_mpmath_equal_548062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1186, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1186)
        assert_mpmath_equal_call_result_548100 = invoke(stypy.reporting.localization.Localization(__file__, 1186, 8), assert_mpmath_equal_548062, *[ndtr_548064, _stypy_temp_lambda_400_548080, list_548081], **kwargs_548099)
        
        
        # ################# End of 'test_ndtr_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ndtr_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1185)
        stypy_return_type_548101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548101)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ndtr_complex'
        return stypy_return_type_548101


    @norecursion
    def test_log_ndtr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_log_ndtr'
        module_type_store = module_type_store.open_function_context('test_log_ndtr', 1190, 4, False)
        # Assigning a type to the variable 'self' (line 1191)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1191, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_log_ndtr')
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_log_ndtr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_log_ndtr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_log_ndtr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_log_ndtr(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1191)
        # Processing the call arguments (line 1191)
        # Getting the type of 'sc' (line 1191)
        sc_548103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 28), 'sc', False)
        # Obtaining the member 'log_ndtr' of a type (line 1191)
        log_ndtr_548104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1191, 28), sc_548103, 'log_ndtr')
        
        # Call to exception_to_nan(...): (line 1192)
        # Processing the call arguments (line 1192)

        @norecursion
        def _stypy_temp_lambda_401(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_401'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_401', 1192, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_401.stypy_localization = localization
            _stypy_temp_lambda_401.stypy_type_of_self = None
            _stypy_temp_lambda_401.stypy_type_store = module_type_store
            _stypy_temp_lambda_401.stypy_function_name = '_stypy_temp_lambda_401'
            _stypy_temp_lambda_401.stypy_param_names_list = ['z']
            _stypy_temp_lambda_401.stypy_varargs_param_name = None
            _stypy_temp_lambda_401.stypy_kwargs_param_name = None
            _stypy_temp_lambda_401.stypy_call_defaults = defaults
            _stypy_temp_lambda_401.stypy_call_varargs = varargs
            _stypy_temp_lambda_401.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_401', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_401', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to log(...): (line 1192)
            # Processing the call arguments (line 1192)
            
            # Call to ncdf(...): (line 1192)
            # Processing the call arguments (line 1192)
            # Getting the type of 'z' (line 1192)
            z_548110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 78), 'z', False)
            # Processing the call keyword arguments (line 1192)
            kwargs_548111 = {}
            # Getting the type of 'mpmath' (line 1192)
            mpmath_548108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 66), 'mpmath', False)
            # Obtaining the member 'ncdf' of a type (line 1192)
            ncdf_548109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1192, 66), mpmath_548108, 'ncdf')
            # Calling ncdf(args, kwargs) (line 1192)
            ncdf_call_result_548112 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 66), ncdf_548109, *[z_548110], **kwargs_548111)
            
            # Processing the call keyword arguments (line 1192)
            kwargs_548113 = {}
            # Getting the type of 'mpmath' (line 1192)
            mpmath_548106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 55), 'mpmath', False)
            # Obtaining the member 'log' of a type (line 1192)
            log_548107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1192, 55), mpmath_548106, 'log')
            # Calling log(args, kwargs) (line 1192)
            log_call_result_548114 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 55), log_548107, *[ncdf_call_result_548112], **kwargs_548113)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1192)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1192, 45), 'stypy_return_type', log_call_result_548114)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_401' in the type store
            # Getting the type of 'stypy_return_type' (line 1192)
            stypy_return_type_548115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548115)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_401'
            return stypy_return_type_548115

        # Assigning a type to the variable '_stypy_temp_lambda_401' (line 1192)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1192, 45), '_stypy_temp_lambda_401', _stypy_temp_lambda_401)
        # Getting the type of '_stypy_temp_lambda_401' (line 1192)
        _stypy_temp_lambda_401_548116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 45), '_stypy_temp_lambda_401')
        # Processing the call keyword arguments (line 1192)
        kwargs_548117 = {}
        # Getting the type of 'exception_to_nan' (line 1192)
        exception_to_nan_548105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1192, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1192)
        exception_to_nan_call_result_548118 = invoke(stypy.reporting.localization.Localization(__file__, 1192, 28), exception_to_nan_548105, *[_stypy_temp_lambda_401_548116], **kwargs_548117)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1193)
        list_548119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1193, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1193)
        # Adding element type (line 1193)
        
        # Call to Arg(...): (line 1193)
        # Processing the call keyword arguments (line 1193)
        kwargs_548121 = {}
        # Getting the type of 'Arg' (line 1193)
        Arg_548120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1193)
        Arg_call_result_548122 = invoke(stypy.reporting.localization.Localization(__file__, 1193, 29), Arg_548120, *[], **kwargs_548121)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1193, 28), list_548119, Arg_call_result_548122)
        
        # Processing the call keyword arguments (line 1191)
        int_548123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1193, 39), 'int')
        keyword_548124 = int_548123
        int_548125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1193, 48), 'int')
        keyword_548126 = int_548125
        kwargs_548127 = {'dps': keyword_548126, 'n': keyword_548124}
        # Getting the type of 'assert_mpmath_equal' (line 1191)
        assert_mpmath_equal_548102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1191, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1191)
        assert_mpmath_equal_call_result_548128 = invoke(stypy.reporting.localization.Localization(__file__, 1191, 8), assert_mpmath_equal_548102, *[log_ndtr_548104, exception_to_nan_call_result_548118, list_548119], **kwargs_548127)
        
        
        # ################# End of 'test_log_ndtr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_log_ndtr' in the type store
        # Getting the type of 'stypy_return_type' (line 1190)
        stypy_return_type_548129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1190, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548129)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_log_ndtr'
        return stypy_return_type_548129


    @norecursion
    def test_log_ndtr_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_log_ndtr_complex'
        module_type_store = module_type_store.open_function_context('test_log_ndtr_complex', 1195, 4, False)
        # Assigning a type to the variable 'self' (line 1196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_log_ndtr_complex')
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_log_ndtr_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_log_ndtr_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_log_ndtr_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_log_ndtr_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1196)
        # Processing the call arguments (line 1196)
        # Getting the type of 'sc' (line 1196)
        sc_548131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 28), 'sc', False)
        # Obtaining the member 'log_ndtr' of a type (line 1196)
        log_ndtr_548132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1196, 28), sc_548131, 'log_ndtr')
        
        # Call to exception_to_nan(...): (line 1197)
        # Processing the call arguments (line 1197)

        @norecursion
        def _stypy_temp_lambda_402(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_402'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_402', 1197, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_402.stypy_localization = localization
            _stypy_temp_lambda_402.stypy_type_of_self = None
            _stypy_temp_lambda_402.stypy_type_store = module_type_store
            _stypy_temp_lambda_402.stypy_function_name = '_stypy_temp_lambda_402'
            _stypy_temp_lambda_402.stypy_param_names_list = ['z']
            _stypy_temp_lambda_402.stypy_varargs_param_name = None
            _stypy_temp_lambda_402.stypy_kwargs_param_name = None
            _stypy_temp_lambda_402.stypy_call_defaults = defaults
            _stypy_temp_lambda_402.stypy_call_varargs = varargs
            _stypy_temp_lambda_402.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_402', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_402', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to log(...): (line 1197)
            # Processing the call arguments (line 1197)
            
            # Call to erfc(...): (line 1197)
            # Processing the call arguments (line 1197)
            
            # Getting the type of 'z' (line 1197)
            z_548138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 79), 'z', False)
            # Applying the 'usub' unary operator (line 1197)
            result___neg___548139 = python_operator(stypy.reporting.localization.Localization(__file__, 1197, 78), 'usub', z_548138)
            
            
            # Call to sqrt(...): (line 1197)
            # Processing the call arguments (line 1197)
            float_548142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1197, 89), 'float')
            # Processing the call keyword arguments (line 1197)
            kwargs_548143 = {}
            # Getting the type of 'np' (line 1197)
            np_548140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 81), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 1197)
            sqrt_548141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1197, 81), np_548140, 'sqrt')
            # Calling sqrt(args, kwargs) (line 1197)
            sqrt_call_result_548144 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 81), sqrt_548141, *[float_548142], **kwargs_548143)
            
            # Applying the binary operator 'div' (line 1197)
            result_div_548145 = python_operator(stypy.reporting.localization.Localization(__file__, 1197, 78), 'div', result___neg___548139, sqrt_call_result_548144)
            
            # Processing the call keyword arguments (line 1197)
            kwargs_548146 = {}
            # Getting the type of 'mpmath' (line 1197)
            mpmath_548136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 66), 'mpmath', False)
            # Obtaining the member 'erfc' of a type (line 1197)
            erfc_548137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1197, 66), mpmath_548136, 'erfc')
            # Calling erfc(args, kwargs) (line 1197)
            erfc_call_result_548147 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 66), erfc_548137, *[result_div_548145], **kwargs_548146)
            
            float_548148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1197, 94), 'float')
            # Applying the binary operator 'div' (line 1197)
            result_div_548149 = python_operator(stypy.reporting.localization.Localization(__file__, 1197, 66), 'div', erfc_call_result_548147, float_548148)
            
            # Processing the call keyword arguments (line 1197)
            kwargs_548150 = {}
            # Getting the type of 'mpmath' (line 1197)
            mpmath_548134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 55), 'mpmath', False)
            # Obtaining the member 'log' of a type (line 1197)
            log_548135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1197, 55), mpmath_548134, 'log')
            # Calling log(args, kwargs) (line 1197)
            log_call_result_548151 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 55), log_548135, *[result_div_548149], **kwargs_548150)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1197)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1197, 45), 'stypy_return_type', log_call_result_548151)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_402' in the type store
            # Getting the type of 'stypy_return_type' (line 1197)
            stypy_return_type_548152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548152)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_402'
            return stypy_return_type_548152

        # Assigning a type to the variable '_stypy_temp_lambda_402' (line 1197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1197, 45), '_stypy_temp_lambda_402', _stypy_temp_lambda_402)
        # Getting the type of '_stypy_temp_lambda_402' (line 1197)
        _stypy_temp_lambda_402_548153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 45), '_stypy_temp_lambda_402')
        # Processing the call keyword arguments (line 1197)
        kwargs_548154 = {}
        # Getting the type of 'exception_to_nan' (line 1197)
        exception_to_nan_548133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1197, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1197)
        exception_to_nan_call_result_548155 = invoke(stypy.reporting.localization.Localization(__file__, 1197, 28), exception_to_nan_548133, *[_stypy_temp_lambda_402_548153], **kwargs_548154)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1198)
        list_548156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1198, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1198)
        # Adding element type (line 1198)
        
        # Call to ComplexArg(...): (line 1198)
        # Processing the call keyword arguments (line 1198)
        
        # Call to complex(...): (line 1198)
        # Processing the call arguments (line 1198)
        int_548159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1198, 50), 'int')
        int_548160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1198, 58), 'int')
        # Processing the call keyword arguments (line 1198)
        kwargs_548161 = {}
        # Getting the type of 'complex' (line 1198)
        complex_548158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1198, 42), 'complex', False)
        # Calling complex(args, kwargs) (line 1198)
        complex_call_result_548162 = invoke(stypy.reporting.localization.Localization(__file__, 1198, 42), complex_548158, *[int_548159, int_548160], **kwargs_548161)
        
        keyword_548163 = complex_call_result_548162
        
        # Call to complex(...): (line 1199)
        # Processing the call arguments (line 1199)
        int_548165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 50), 'int')
        int_548166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 57), 'int')
        # Processing the call keyword arguments (line 1199)
        kwargs_548167 = {}
        # Getting the type of 'complex' (line 1199)
        complex_548164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1199, 42), 'complex', False)
        # Calling complex(args, kwargs) (line 1199)
        complex_call_result_548168 = invoke(stypy.reporting.localization.Localization(__file__, 1199, 42), complex_548164, *[int_548165, int_548166], **kwargs_548167)
        
        keyword_548169 = complex_call_result_548168
        kwargs_548170 = {'a': keyword_548163, 'b': keyword_548169}
        # Getting the type of 'ComplexArg' (line 1198)
        ComplexArg_548157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1198, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1198)
        ComplexArg_call_result_548171 = invoke(stypy.reporting.localization.Localization(__file__, 1198, 29), ComplexArg_548157, *[], **kwargs_548170)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1198, 28), list_548156, ComplexArg_call_result_548171)
        
        # Processing the call keyword arguments (line 1196)
        int_548172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 67), 'int')
        keyword_548173 = int_548172
        int_548174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 76), 'int')
        keyword_548175 = int_548174
        kwargs_548176 = {'dps': keyword_548175, 'n': keyword_548173}
        # Getting the type of 'assert_mpmath_equal' (line 1196)
        assert_mpmath_equal_548130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1196, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1196)
        assert_mpmath_equal_call_result_548177 = invoke(stypy.reporting.localization.Localization(__file__, 1196, 8), assert_mpmath_equal_548130, *[log_ndtr_548132, exception_to_nan_call_result_548155, list_548156], **kwargs_548176)
        
        
        # ################# End of 'test_log_ndtr_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_log_ndtr_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1195)
        stypy_return_type_548178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1195, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548178)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_log_ndtr_complex'
        return stypy_return_type_548178


    @norecursion
    def test_eulernum(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_eulernum'
        module_type_store = module_type_store.open_function_context('test_eulernum', 1201, 4, False)
        # Assigning a type to the variable 'self' (line 1202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1202, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_eulernum')
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_eulernum.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_eulernum', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_eulernum', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_eulernum(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1202)
        # Processing the call arguments (line 1202)

        @norecursion
        def _stypy_temp_lambda_403(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_403'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_403', 1202, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_403.stypy_localization = localization
            _stypy_temp_lambda_403.stypy_type_of_self = None
            _stypy_temp_lambda_403.stypy_type_store = module_type_store
            _stypy_temp_lambda_403.stypy_function_name = '_stypy_temp_lambda_403'
            _stypy_temp_lambda_403.stypy_param_names_list = ['n']
            _stypy_temp_lambda_403.stypy_varargs_param_name = None
            _stypy_temp_lambda_403.stypy_kwargs_param_name = None
            _stypy_temp_lambda_403.stypy_call_defaults = defaults
            _stypy_temp_lambda_403.stypy_call_varargs = varargs
            _stypy_temp_lambda_403.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_403', ['n'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_403', ['n'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Obtaining the type of the subscript
            int_548180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1202, 50), 'int')
            
            # Call to euler(...): (line 1202)
            # Processing the call arguments (line 1202)
            # Getting the type of 'n' (line 1202)
            n_548183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 47), 'n', False)
            # Processing the call keyword arguments (line 1202)
            kwargs_548184 = {}
            # Getting the type of 'sc' (line 1202)
            sc_548181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 38), 'sc', False)
            # Obtaining the member 'euler' of a type (line 1202)
            euler_548182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1202, 38), sc_548181, 'euler')
            # Calling euler(args, kwargs) (line 1202)
            euler_call_result_548185 = invoke(stypy.reporting.localization.Localization(__file__, 1202, 38), euler_548182, *[n_548183], **kwargs_548184)
            
            # Obtaining the member '__getitem__' of a type (line 1202)
            getitem___548186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1202, 38), euler_call_result_548185, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1202)
            subscript_call_result_548187 = invoke(stypy.reporting.localization.Localization(__file__, 1202, 38), getitem___548186, int_548180)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1202)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1202, 28), 'stypy_return_type', subscript_call_result_548187)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_403' in the type store
            # Getting the type of 'stypy_return_type' (line 1202)
            stypy_return_type_548188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548188)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_403'
            return stypy_return_type_548188

        # Assigning a type to the variable '_stypy_temp_lambda_403' (line 1202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1202, 28), '_stypy_temp_lambda_403', _stypy_temp_lambda_403)
        # Getting the type of '_stypy_temp_lambda_403' (line 1202)
        _stypy_temp_lambda_403_548189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 28), '_stypy_temp_lambda_403')
        # Getting the type of 'mpmath' (line 1203)
        mpmath_548190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 28), 'mpmath', False)
        # Obtaining the member 'eulernum' of a type (line 1203)
        eulernum_548191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1203, 28), mpmath_548190, 'eulernum')
        
        # Obtaining an instance of the builtin type 'list' (line 1204)
        list_548192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1204, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1204)
        # Adding element type (line 1204)
        
        # Call to IntArg(...): (line 1204)
        # Processing the call arguments (line 1204)
        int_548194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1204, 36), 'int')
        int_548195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1204, 39), 'int')
        # Processing the call keyword arguments (line 1204)
        kwargs_548196 = {}
        # Getting the type of 'IntArg' (line 1204)
        IntArg_548193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1204)
        IntArg_call_result_548197 = invoke(stypy.reporting.localization.Localization(__file__, 1204, 29), IntArg_548193, *[int_548194, int_548195], **kwargs_548196)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1204, 28), list_548192, IntArg_call_result_548197)
        
        # Processing the call keyword arguments (line 1202)
        int_548198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1204, 50), 'int')
        keyword_548199 = int_548198
        kwargs_548200 = {'n': keyword_548199}
        # Getting the type of 'assert_mpmath_equal' (line 1202)
        assert_mpmath_equal_548179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1202)
        assert_mpmath_equal_call_result_548201 = invoke(stypy.reporting.localization.Localization(__file__, 1202, 8), assert_mpmath_equal_548179, *[_stypy_temp_lambda_403_548189, eulernum_548191, list_548192], **kwargs_548200)
        
        
        # ################# End of 'test_eulernum(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_eulernum' in the type store
        # Getting the type of 'stypy_return_type' (line 1201)
        stypy_return_type_548202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1201, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548202)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_eulernum'
        return stypy_return_type_548202


    @norecursion
    def test_expint(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_expint'
        module_type_store = module_type_store.open_function_context('test_expint', 1206, 4, False)
        # Assigning a type to the variable 'self' (line 1207)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1207, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_expint.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_expint.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_expint.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_expint.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_expint')
        TestSystematic.test_expint.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_expint.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_expint.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_expint.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_expint.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_expint.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_expint.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_expint', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_expint', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_expint(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1207)
        # Processing the call arguments (line 1207)
        # Getting the type of 'sc' (line 1207)
        sc_548204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 28), 'sc', False)
        # Obtaining the member 'expn' of a type (line 1207)
        expn_548205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1207, 28), sc_548204, 'expn')
        # Getting the type of 'mpmath' (line 1208)
        mpmath_548206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 28), 'mpmath', False)
        # Obtaining the member 'expint' of a type (line 1208)
        expint_548207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1208, 28), mpmath_548206, 'expint')
        
        # Obtaining an instance of the builtin type 'list' (line 1209)
        list_548208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1209)
        # Adding element type (line 1209)
        
        # Call to IntArg(...): (line 1209)
        # Processing the call arguments (line 1209)
        int_548210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 36), 'int')
        int_548211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 39), 'int')
        # Processing the call keyword arguments (line 1209)
        kwargs_548212 = {}
        # Getting the type of 'IntArg' (line 1209)
        IntArg_548209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1209)
        IntArg_call_result_548213 = invoke(stypy.reporting.localization.Localization(__file__, 1209, 29), IntArg_548209, *[int_548210, int_548211], **kwargs_548212)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1209, 28), list_548208, IntArg_call_result_548213)
        # Adding element type (line 1209)
        
        # Call to Arg(...): (line 1209)
        # Processing the call arguments (line 1209)
        int_548215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1209, 49), 'int')
        # Getting the type of 'np' (line 1209)
        np_548216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 52), 'np', False)
        # Obtaining the member 'inf' of a type (line 1209)
        inf_548217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1209, 52), np_548216, 'inf')
        # Processing the call keyword arguments (line 1209)
        kwargs_548218 = {}
        # Getting the type of 'Arg' (line 1209)
        Arg_548214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1209)
        Arg_call_result_548219 = invoke(stypy.reporting.localization.Localization(__file__, 1209, 45), Arg_548214, *[int_548215, inf_548217], **kwargs_548218)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1209, 28), list_548208, Arg_call_result_548219)
        
        # Processing the call keyword arguments (line 1207)
        float_548220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1210, 33), 'float')
        keyword_548221 = float_548220
        int_548222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1210, 44), 'int')
        keyword_548223 = int_548222
        kwargs_548224 = {'rtol': keyword_548221, 'dps': keyword_548223}
        # Getting the type of 'assert_mpmath_equal' (line 1207)
        assert_mpmath_equal_548203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1207)
        assert_mpmath_equal_call_result_548225 = invoke(stypy.reporting.localization.Localization(__file__, 1207, 8), assert_mpmath_equal_548203, *[expn_548205, expint_548207, list_548208], **kwargs_548224)
        
        
        # ################# End of 'test_expint(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_expint' in the type store
        # Getting the type of 'stypy_return_type' (line 1206)
        stypy_return_type_548226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548226)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_expint'
        return stypy_return_type_548226


    @norecursion
    def test_fresnels(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_fresnels'
        module_type_store = module_type_store.open_function_context('test_fresnels', 1212, 4, False)
        # Assigning a type to the variable 'self' (line 1213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_fresnels')
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_fresnels.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_fresnels', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_fresnels', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_fresnels(...)' code ##################


        @norecursion
        def fresnels(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'fresnels'
            module_type_store = module_type_store.open_function_context('fresnels', 1213, 8, False)
            
            # Passed parameters checking function
            fresnels.stypy_localization = localization
            fresnels.stypy_type_of_self = None
            fresnels.stypy_type_store = module_type_store
            fresnels.stypy_function_name = 'fresnels'
            fresnels.stypy_param_names_list = ['x']
            fresnels.stypy_varargs_param_name = None
            fresnels.stypy_kwargs_param_name = None
            fresnels.stypy_call_defaults = defaults
            fresnels.stypy_call_varargs = varargs
            fresnels.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'fresnels', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'fresnels', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'fresnels(...)' code ##################

            
            # Obtaining the type of the subscript
            int_548227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1214, 33), 'int')
            
            # Call to fresnel(...): (line 1214)
            # Processing the call arguments (line 1214)
            # Getting the type of 'x' (line 1214)
            x_548230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 30), 'x', False)
            # Processing the call keyword arguments (line 1214)
            kwargs_548231 = {}
            # Getting the type of 'sc' (line 1214)
            sc_548228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 19), 'sc', False)
            # Obtaining the member 'fresnel' of a type (line 1214)
            fresnel_548229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1214, 19), sc_548228, 'fresnel')
            # Calling fresnel(args, kwargs) (line 1214)
            fresnel_call_result_548232 = invoke(stypy.reporting.localization.Localization(__file__, 1214, 19), fresnel_548229, *[x_548230], **kwargs_548231)
            
            # Obtaining the member '__getitem__' of a type (line 1214)
            getitem___548233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1214, 19), fresnel_call_result_548232, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1214)
            subscript_call_result_548234 = invoke(stypy.reporting.localization.Localization(__file__, 1214, 19), getitem___548233, int_548227)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1214)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1214, 12), 'stypy_return_type', subscript_call_result_548234)
            
            # ################# End of 'fresnels(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'fresnels' in the type store
            # Getting the type of 'stypy_return_type' (line 1213)
            stypy_return_type_548235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548235)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'fresnels'
            return stypy_return_type_548235

        # Assigning a type to the variable 'fresnels' (line 1213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 8), 'fresnels', fresnels)
        
        # Call to assert_mpmath_equal(...): (line 1215)
        # Processing the call arguments (line 1215)
        # Getting the type of 'fresnels' (line 1215)
        fresnels_548237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 28), 'fresnels', False)
        # Getting the type of 'mpmath' (line 1216)
        mpmath_548238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 28), 'mpmath', False)
        # Obtaining the member 'fresnels' of a type (line 1216)
        fresnels_548239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1216, 28), mpmath_548238, 'fresnels')
        
        # Obtaining an instance of the builtin type 'list' (line 1217)
        list_548240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1217, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1217)
        # Adding element type (line 1217)
        
        # Call to Arg(...): (line 1217)
        # Processing the call keyword arguments (line 1217)
        kwargs_548242 = {}
        # Getting the type of 'Arg' (line 1217)
        Arg_548241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1217)
        Arg_call_result_548243 = invoke(stypy.reporting.localization.Localization(__file__, 1217, 29), Arg_548241, *[], **kwargs_548242)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1217, 28), list_548240, Arg_call_result_548243)
        
        # Processing the call keyword arguments (line 1215)
        kwargs_548244 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1215)
        assert_mpmath_equal_548236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1215)
        assert_mpmath_equal_call_result_548245 = invoke(stypy.reporting.localization.Localization(__file__, 1215, 8), assert_mpmath_equal_548236, *[fresnels_548237, fresnels_548239, list_548240], **kwargs_548244)
        
        
        # ################# End of 'test_fresnels(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_fresnels' in the type store
        # Getting the type of 'stypy_return_type' (line 1212)
        stypy_return_type_548246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548246)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_fresnels'
        return stypy_return_type_548246


    @norecursion
    def test_fresnelc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_fresnelc'
        module_type_store = module_type_store.open_function_context('test_fresnelc', 1219, 4, False)
        # Assigning a type to the variable 'self' (line 1220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1220, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_fresnelc')
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_fresnelc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_fresnelc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_fresnelc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_fresnelc(...)' code ##################


        @norecursion
        def fresnelc(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'fresnelc'
            module_type_store = module_type_store.open_function_context('fresnelc', 1220, 8, False)
            
            # Passed parameters checking function
            fresnelc.stypy_localization = localization
            fresnelc.stypy_type_of_self = None
            fresnelc.stypy_type_store = module_type_store
            fresnelc.stypy_function_name = 'fresnelc'
            fresnelc.stypy_param_names_list = ['x']
            fresnelc.stypy_varargs_param_name = None
            fresnelc.stypy_kwargs_param_name = None
            fresnelc.stypy_call_defaults = defaults
            fresnelc.stypy_call_varargs = varargs
            fresnelc.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'fresnelc', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'fresnelc', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'fresnelc(...)' code ##################

            
            # Obtaining the type of the subscript
            int_548247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1221, 33), 'int')
            
            # Call to fresnel(...): (line 1221)
            # Processing the call arguments (line 1221)
            # Getting the type of 'x' (line 1221)
            x_548250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 30), 'x', False)
            # Processing the call keyword arguments (line 1221)
            kwargs_548251 = {}
            # Getting the type of 'sc' (line 1221)
            sc_548248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 19), 'sc', False)
            # Obtaining the member 'fresnel' of a type (line 1221)
            fresnel_548249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1221, 19), sc_548248, 'fresnel')
            # Calling fresnel(args, kwargs) (line 1221)
            fresnel_call_result_548252 = invoke(stypy.reporting.localization.Localization(__file__, 1221, 19), fresnel_548249, *[x_548250], **kwargs_548251)
            
            # Obtaining the member '__getitem__' of a type (line 1221)
            getitem___548253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1221, 19), fresnel_call_result_548252, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1221)
            subscript_call_result_548254 = invoke(stypy.reporting.localization.Localization(__file__, 1221, 19), getitem___548253, int_548247)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1221)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1221, 12), 'stypy_return_type', subscript_call_result_548254)
            
            # ################# End of 'fresnelc(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'fresnelc' in the type store
            # Getting the type of 'stypy_return_type' (line 1220)
            stypy_return_type_548255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1220, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548255)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'fresnelc'
            return stypy_return_type_548255

        # Assigning a type to the variable 'fresnelc' (line 1220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1220, 8), 'fresnelc', fresnelc)
        
        # Call to assert_mpmath_equal(...): (line 1222)
        # Processing the call arguments (line 1222)
        # Getting the type of 'fresnelc' (line 1222)
        fresnelc_548257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1222, 28), 'fresnelc', False)
        # Getting the type of 'mpmath' (line 1223)
        mpmath_548258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1223, 28), 'mpmath', False)
        # Obtaining the member 'fresnelc' of a type (line 1223)
        fresnelc_548259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1223, 28), mpmath_548258, 'fresnelc')
        
        # Obtaining an instance of the builtin type 'list' (line 1224)
        list_548260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1224, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1224)
        # Adding element type (line 1224)
        
        # Call to Arg(...): (line 1224)
        # Processing the call keyword arguments (line 1224)
        kwargs_548262 = {}
        # Getting the type of 'Arg' (line 1224)
        Arg_548261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1224)
        Arg_call_result_548263 = invoke(stypy.reporting.localization.Localization(__file__, 1224, 29), Arg_548261, *[], **kwargs_548262)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1224, 28), list_548260, Arg_call_result_548263)
        
        # Processing the call keyword arguments (line 1222)
        kwargs_548264 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1222)
        assert_mpmath_equal_548256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1222, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1222)
        assert_mpmath_equal_call_result_548265 = invoke(stypy.reporting.localization.Localization(__file__, 1222, 8), assert_mpmath_equal_548256, *[fresnelc_548257, fresnelc_548259, list_548260], **kwargs_548264)
        
        
        # ################# End of 'test_fresnelc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_fresnelc' in the type store
        # Getting the type of 'stypy_return_type' (line 1219)
        stypy_return_type_548266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548266)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_fresnelc'
        return stypy_return_type_548266


    @norecursion
    def test_gamma(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gamma'
        module_type_store = module_type_store.open_function_context('test_gamma', 1226, 4, False)
        # Assigning a type to the variable 'self' (line 1227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1227, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_gamma')
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_gamma.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_gamma', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gamma', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gamma(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1227)
        # Processing the call arguments (line 1227)
        # Getting the type of 'sc' (line 1227)
        sc_548268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 28), 'sc', False)
        # Obtaining the member 'gamma' of a type (line 1227)
        gamma_548269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1227, 28), sc_548268, 'gamma')
        
        # Call to exception_to_nan(...): (line 1228)
        # Processing the call arguments (line 1228)
        # Getting the type of 'mpmath' (line 1228)
        mpmath_548271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 45), 'mpmath', False)
        # Obtaining the member 'gamma' of a type (line 1228)
        gamma_548272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1228, 45), mpmath_548271, 'gamma')
        # Processing the call keyword arguments (line 1228)
        kwargs_548273 = {}
        # Getting the type of 'exception_to_nan' (line 1228)
        exception_to_nan_548270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1228)
        exception_to_nan_call_result_548274 = invoke(stypy.reporting.localization.Localization(__file__, 1228, 28), exception_to_nan_548270, *[gamma_548272], **kwargs_548273)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1229)
        list_548275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1229, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1229)
        # Adding element type (line 1229)
        
        # Call to Arg(...): (line 1229)
        # Processing the call keyword arguments (line 1229)
        kwargs_548277 = {}
        # Getting the type of 'Arg' (line 1229)
        Arg_548276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1229)
        Arg_call_result_548278 = invoke(stypy.reporting.localization.Localization(__file__, 1229, 29), Arg_548276, *[], **kwargs_548277)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1229, 28), list_548275, Arg_call_result_548278)
        
        # Processing the call keyword arguments (line 1227)
        kwargs_548279 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1227)
        assert_mpmath_equal_548267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1227)
        assert_mpmath_equal_call_result_548280 = invoke(stypy.reporting.localization.Localization(__file__, 1227, 8), assert_mpmath_equal_548267, *[gamma_548269, exception_to_nan_call_result_548274, list_548275], **kwargs_548279)
        
        
        # ################# End of 'test_gamma(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gamma' in the type store
        # Getting the type of 'stypy_return_type' (line 1226)
        stypy_return_type_548281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548281)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gamma'
        return stypy_return_type_548281


    @norecursion
    def test_gamma_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gamma_complex'
        module_type_store = module_type_store.open_function_context('test_gamma_complex', 1231, 4, False)
        # Assigning a type to the variable 'self' (line 1232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1232, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_gamma_complex')
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_gamma_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_gamma_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gamma_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gamma_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1232)
        # Processing the call arguments (line 1232)
        # Getting the type of 'sc' (line 1232)
        sc_548283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 28), 'sc', False)
        # Obtaining the member 'gamma' of a type (line 1232)
        gamma_548284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1232, 28), sc_548283, 'gamma')
        
        # Call to exception_to_nan(...): (line 1233)
        # Processing the call arguments (line 1233)
        # Getting the type of 'mpmath' (line 1233)
        mpmath_548286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 45), 'mpmath', False)
        # Obtaining the member 'gamma' of a type (line 1233)
        gamma_548287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1233, 45), mpmath_548286, 'gamma')
        # Processing the call keyword arguments (line 1233)
        kwargs_548288 = {}
        # Getting the type of 'exception_to_nan' (line 1233)
        exception_to_nan_548285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1233, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1233)
        exception_to_nan_call_result_548289 = invoke(stypy.reporting.localization.Localization(__file__, 1233, 28), exception_to_nan_548285, *[gamma_548287], **kwargs_548288)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1234)
        list_548290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1234, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1234)
        # Adding element type (line 1234)
        
        # Call to ComplexArg(...): (line 1234)
        # Processing the call keyword arguments (line 1234)
        kwargs_548292 = {}
        # Getting the type of 'ComplexArg' (line 1234)
        ComplexArg_548291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1234)
        ComplexArg_call_result_548293 = invoke(stypy.reporting.localization.Localization(__file__, 1234, 29), ComplexArg_548291, *[], **kwargs_548292)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1234, 28), list_548290, ComplexArg_call_result_548293)
        
        # Processing the call keyword arguments (line 1232)
        float_548294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1234, 49), 'float')
        keyword_548295 = float_548294
        kwargs_548296 = {'rtol': keyword_548295}
        # Getting the type of 'assert_mpmath_equal' (line 1232)
        assert_mpmath_equal_548282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1232)
        assert_mpmath_equal_call_result_548297 = invoke(stypy.reporting.localization.Localization(__file__, 1232, 8), assert_mpmath_equal_548282, *[gamma_548284, exception_to_nan_call_result_548289, list_548290], **kwargs_548296)
        
        
        # ################# End of 'test_gamma_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gamma_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1231)
        stypy_return_type_548298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1231, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548298)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gamma_complex'
        return stypy_return_type_548298


    @norecursion
    def test_gammainc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gammainc'
        module_type_store = module_type_store.open_function_context('test_gammainc', 1236, 4, False)
        # Assigning a type to the variable 'self' (line 1237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1237, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_gammainc')
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_gammainc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_gammainc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gammainc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gammainc(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1238)
        # Processing the call arguments (line 1238)
        # Getting the type of 'sc' (line 1238)
        sc_548300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 28), 'sc', False)
        # Obtaining the member 'gammainc' of a type (line 1238)
        gammainc_548301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1238, 28), sc_548300, 'gammainc')

        @norecursion
        def _stypy_temp_lambda_404(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_404'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_404', 1239, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_404.stypy_localization = localization
            _stypy_temp_lambda_404.stypy_type_of_self = None
            _stypy_temp_lambda_404.stypy_type_store = module_type_store
            _stypy_temp_lambda_404.stypy_function_name = '_stypy_temp_lambda_404'
            _stypy_temp_lambda_404.stypy_param_names_list = ['z', 'b']
            _stypy_temp_lambda_404.stypy_varargs_param_name = None
            _stypy_temp_lambda_404.stypy_kwargs_param_name = None
            _stypy_temp_lambda_404.stypy_call_defaults = defaults
            _stypy_temp_lambda_404.stypy_call_varargs = varargs
            _stypy_temp_lambda_404.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_404', ['z', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_404', ['z', 'b'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to gammainc(...): (line 1239)
            # Processing the call arguments (line 1239)
            # Getting the type of 'z' (line 1239)
            z_548304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 57), 'z', False)
            # Processing the call keyword arguments (line 1239)
            # Getting the type of 'b' (line 1239)
            b_548305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 62), 'b', False)
            keyword_548306 = b_548305
            # Getting the type of 'True' (line 1239)
            True_548307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 77), 'True', False)
            keyword_548308 = True_548307
            kwargs_548309 = {'regularized': keyword_548308, 'b': keyword_548306}
            # Getting the type of 'mpmath' (line 1239)
            mpmath_548302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 41), 'mpmath', False)
            # Obtaining the member 'gammainc' of a type (line 1239)
            gammainc_548303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1239, 41), mpmath_548302, 'gammainc')
            # Calling gammainc(args, kwargs) (line 1239)
            gammainc_call_result_548310 = invoke(stypy.reporting.localization.Localization(__file__, 1239, 41), gammainc_548303, *[z_548304], **kwargs_548309)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1239)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 28), 'stypy_return_type', gammainc_call_result_548310)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_404' in the type store
            # Getting the type of 'stypy_return_type' (line 1239)
            stypy_return_type_548311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548311)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_404'
            return stypy_return_type_548311

        # Assigning a type to the variable '_stypy_temp_lambda_404' (line 1239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1239, 28), '_stypy_temp_lambda_404', _stypy_temp_lambda_404)
        # Getting the type of '_stypy_temp_lambda_404' (line 1239)
        _stypy_temp_lambda_404_548312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1239, 28), '_stypy_temp_lambda_404')
        
        # Obtaining an instance of the builtin type 'list' (line 1240)
        list_548313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1240)
        # Adding element type (line 1240)
        
        # Call to Arg(...): (line 1240)
        # Processing the call arguments (line 1240)
        int_548315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 33), 'int')
        float_548316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 36), 'float')
        # Processing the call keyword arguments (line 1240)
        # Getting the type of 'False' (line 1240)
        False_548317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 53), 'False', False)
        keyword_548318 = False_548317
        kwargs_548319 = {'inclusive_a': keyword_548318}
        # Getting the type of 'Arg' (line 1240)
        Arg_548314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1240)
        Arg_call_result_548320 = invoke(stypy.reporting.localization.Localization(__file__, 1240, 29), Arg_548314, *[int_548315, float_548316], **kwargs_548319)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1240, 28), list_548313, Arg_call_result_548320)
        # Adding element type (line 1240)
        
        # Call to Arg(...): (line 1240)
        # Processing the call arguments (line 1240)
        int_548322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 65), 'int')
        float_548323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, 68), 'float')
        # Processing the call keyword arguments (line 1240)
        kwargs_548324 = {}
        # Getting the type of 'Arg' (line 1240)
        Arg_548321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 61), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1240)
        Arg_call_result_548325 = invoke(stypy.reporting.localization.Localization(__file__, 1240, 61), Arg_548321, *[int_548322, float_548323], **kwargs_548324)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1240, 28), list_548313, Arg_call_result_548325)
        
        # Processing the call keyword arguments (line 1238)
        # Getting the type of 'False' (line 1241)
        False_548326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 35), 'False', False)
        keyword_548327 = False_548326
        float_548328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 47), 'float')
        keyword_548329 = float_548328
        kwargs_548330 = {'rtol': keyword_548329, 'nan_ok': keyword_548327}
        # Getting the type of 'assert_mpmath_equal' (line 1238)
        assert_mpmath_equal_548299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1238)
        assert_mpmath_equal_call_result_548331 = invoke(stypy.reporting.localization.Localization(__file__, 1238, 8), assert_mpmath_equal_548299, *[gammainc_548301, _stypy_temp_lambda_404_548312, list_548313], **kwargs_548330)
        
        
        # ################# End of 'test_gammainc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gammainc' in the type store
        # Getting the type of 'stypy_return_type' (line 1236)
        stypy_return_type_548332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548332)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gammainc'
        return stypy_return_type_548332


    @norecursion
    def test_gammaincc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gammaincc'
        module_type_store = module_type_store.open_function_context('test_gammaincc', 1243, 4, False)
        # Assigning a type to the variable 'self' (line 1244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1244, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_gammaincc')
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_gammaincc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_gammaincc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gammaincc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gammaincc(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1245)
        # Processing the call arguments (line 1245)
        # Getting the type of 'sc' (line 1245)
        sc_548334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 28), 'sc', False)
        # Obtaining the member 'gammaincc' of a type (line 1245)
        gammaincc_548335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1245, 28), sc_548334, 'gammaincc')

        @norecursion
        def _stypy_temp_lambda_405(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_405'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_405', 1246, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_405.stypy_localization = localization
            _stypy_temp_lambda_405.stypy_type_of_self = None
            _stypy_temp_lambda_405.stypy_type_store = module_type_store
            _stypy_temp_lambda_405.stypy_function_name = '_stypy_temp_lambda_405'
            _stypy_temp_lambda_405.stypy_param_names_list = ['z', 'a']
            _stypy_temp_lambda_405.stypy_varargs_param_name = None
            _stypy_temp_lambda_405.stypy_kwargs_param_name = None
            _stypy_temp_lambda_405.stypy_call_defaults = defaults
            _stypy_temp_lambda_405.stypy_call_varargs = varargs
            _stypy_temp_lambda_405.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_405', ['z', 'a'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_405', ['z', 'a'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to gammainc(...): (line 1246)
            # Processing the call arguments (line 1246)
            # Getting the type of 'z' (line 1246)
            z_548338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 57), 'z', False)
            # Processing the call keyword arguments (line 1246)
            # Getting the type of 'a' (line 1246)
            a_548339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 62), 'a', False)
            keyword_548340 = a_548339
            # Getting the type of 'True' (line 1246)
            True_548341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 77), 'True', False)
            keyword_548342 = True_548341
            kwargs_548343 = {'a': keyword_548340, 'regularized': keyword_548342}
            # Getting the type of 'mpmath' (line 1246)
            mpmath_548336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 41), 'mpmath', False)
            # Obtaining the member 'gammainc' of a type (line 1246)
            gammainc_548337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1246, 41), mpmath_548336, 'gammainc')
            # Calling gammainc(args, kwargs) (line 1246)
            gammainc_call_result_548344 = invoke(stypy.reporting.localization.Localization(__file__, 1246, 41), gammainc_548337, *[z_548338], **kwargs_548343)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1246)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1246, 28), 'stypy_return_type', gammainc_call_result_548344)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_405' in the type store
            # Getting the type of 'stypy_return_type' (line 1246)
            stypy_return_type_548345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548345)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_405'
            return stypy_return_type_548345

        # Assigning a type to the variable '_stypy_temp_lambda_405' (line 1246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1246, 28), '_stypy_temp_lambda_405', _stypy_temp_lambda_405)
        # Getting the type of '_stypy_temp_lambda_405' (line 1246)
        _stypy_temp_lambda_405_548346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 28), '_stypy_temp_lambda_405')
        
        # Obtaining an instance of the builtin type 'list' (line 1247)
        list_548347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1247)
        # Adding element type (line 1247)
        
        # Call to Arg(...): (line 1247)
        # Processing the call arguments (line 1247)
        int_548349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 33), 'int')
        float_548350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 36), 'float')
        # Processing the call keyword arguments (line 1247)
        # Getting the type of 'False' (line 1247)
        False_548351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 53), 'False', False)
        keyword_548352 = False_548351
        kwargs_548353 = {'inclusive_a': keyword_548352}
        # Getting the type of 'Arg' (line 1247)
        Arg_548348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1247)
        Arg_call_result_548354 = invoke(stypy.reporting.localization.Localization(__file__, 1247, 29), Arg_548348, *[int_548349, float_548350], **kwargs_548353)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1247, 28), list_548347, Arg_call_result_548354)
        # Adding element type (line 1247)
        
        # Call to Arg(...): (line 1247)
        # Processing the call arguments (line 1247)
        int_548356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 65), 'int')
        float_548357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 68), 'float')
        # Processing the call keyword arguments (line 1247)
        kwargs_548358 = {}
        # Getting the type of 'Arg' (line 1247)
        Arg_548355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 61), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1247)
        Arg_call_result_548359 = invoke(stypy.reporting.localization.Localization(__file__, 1247, 61), Arg_548355, *[int_548356, float_548357], **kwargs_548358)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1247, 28), list_548347, Arg_call_result_548359)
        
        # Processing the call keyword arguments (line 1245)
        # Getting the type of 'False' (line 1248)
        False_548360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1248, 35), 'False', False)
        keyword_548361 = False_548360
        float_548362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1248, 47), 'float')
        keyword_548363 = float_548362
        kwargs_548364 = {'rtol': keyword_548363, 'nan_ok': keyword_548361}
        # Getting the type of 'assert_mpmath_equal' (line 1245)
        assert_mpmath_equal_548333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1245)
        assert_mpmath_equal_call_result_548365 = invoke(stypy.reporting.localization.Localization(__file__, 1245, 8), assert_mpmath_equal_548333, *[gammaincc_548335, _stypy_temp_lambda_405_548346, list_548347], **kwargs_548364)
        
        
        # ################# End of 'test_gammaincc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gammaincc' in the type store
        # Getting the type of 'stypy_return_type' (line 1243)
        stypy_return_type_548366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548366)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gammaincc'
        return stypy_return_type_548366


    @norecursion
    def test_gammaln(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gammaln'
        module_type_store = module_type_store.open_function_context('test_gammaln', 1250, 4, False)
        # Assigning a type to the variable 'self' (line 1251)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1251, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_gammaln')
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_gammaln.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_gammaln', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gammaln', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gammaln(...)' code ##################


        @norecursion
        def f(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'f'
            module_type_store = module_type_store.open_function_context('f', 1252, 8, False)
            
            # Passed parameters checking function
            f.stypy_localization = localization
            f.stypy_type_of_self = None
            f.stypy_type_store = module_type_store
            f.stypy_function_name = 'f'
            f.stypy_param_names_list = ['z']
            f.stypy_varargs_param_name = None
            f.stypy_kwargs_param_name = None
            f.stypy_call_defaults = defaults
            f.stypy_call_varargs = varargs
            f.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'f', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'f', localization, ['z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'f(...)' code ##################

            
            # Call to loggamma(...): (line 1253)
            # Processing the call arguments (line 1253)
            # Getting the type of 'z' (line 1253)
            z_548369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 35), 'z', False)
            # Processing the call keyword arguments (line 1253)
            kwargs_548370 = {}
            # Getting the type of 'mpmath' (line 1253)
            mpmath_548367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 19), 'mpmath', False)
            # Obtaining the member 'loggamma' of a type (line 1253)
            loggamma_548368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 19), mpmath_548367, 'loggamma')
            # Calling loggamma(args, kwargs) (line 1253)
            loggamma_call_result_548371 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 19), loggamma_548368, *[z_548369], **kwargs_548370)
            
            # Obtaining the member 'real' of a type (line 1253)
            real_548372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 19), loggamma_call_result_548371, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 1253)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 12), 'stypy_return_type', real_548372)
            
            # ################# End of 'f(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'f' in the type store
            # Getting the type of 'stypy_return_type' (line 1252)
            stypy_return_type_548373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548373)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'f'
            return stypy_return_type_548373

        # Assigning a type to the variable 'f' (line 1252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 8), 'f', f)
        
        # Call to assert_mpmath_equal(...): (line 1255)
        # Processing the call arguments (line 1255)
        # Getting the type of 'sc' (line 1255)
        sc_548375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 28), 'sc', False)
        # Obtaining the member 'gammaln' of a type (line 1255)
        gammaln_548376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1255, 28), sc_548375, 'gammaln')
        
        # Call to exception_to_nan(...): (line 1255)
        # Processing the call arguments (line 1255)
        # Getting the type of 'f' (line 1255)
        f_548378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 57), 'f', False)
        # Processing the call keyword arguments (line 1255)
        kwargs_548379 = {}
        # Getting the type of 'exception_to_nan' (line 1255)
        exception_to_nan_548377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 40), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1255)
        exception_to_nan_call_result_548380 = invoke(stypy.reporting.localization.Localization(__file__, 1255, 40), exception_to_nan_548377, *[f_548378], **kwargs_548379)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1255)
        list_548381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1255, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1255)
        # Adding element type (line 1255)
        
        # Call to Arg(...): (line 1255)
        # Processing the call keyword arguments (line 1255)
        kwargs_548383 = {}
        # Getting the type of 'Arg' (line 1255)
        Arg_548382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 62), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1255)
        Arg_call_result_548384 = invoke(stypy.reporting.localization.Localization(__file__, 1255, 62), Arg_548382, *[], **kwargs_548383)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1255, 61), list_548381, Arg_call_result_548384)
        
        # Processing the call keyword arguments (line 1255)
        kwargs_548385 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1255)
        assert_mpmath_equal_548374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1255)
        assert_mpmath_equal_call_result_548386 = invoke(stypy.reporting.localization.Localization(__file__, 1255, 8), assert_mpmath_equal_548374, *[gammaln_548376, exception_to_nan_call_result_548380, list_548381], **kwargs_548385)
        
        
        # ################# End of 'test_gammaln(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gammaln' in the type store
        # Getting the type of 'stypy_return_type' (line 1250)
        stypy_return_type_548387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548387)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gammaln'
        return stypy_return_type_548387


    @norecursion
    def test_gegenbauer(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gegenbauer'
        module_type_store = module_type_store.open_function_context('test_gegenbauer', 1257, 4, False)
        # Assigning a type to the variable 'self' (line 1258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1258, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_gegenbauer')
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_gegenbauer.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_gegenbauer', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gegenbauer', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gegenbauer(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1259)
        # Processing the call arguments (line 1259)
        # Getting the type of 'sc' (line 1259)
        sc_548389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 28), 'sc', False)
        # Obtaining the member 'eval_gegenbauer' of a type (line 1259)
        eval_gegenbauer_548390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1259, 28), sc_548389, 'eval_gegenbauer')
        
        # Call to exception_to_nan(...): (line 1260)
        # Processing the call arguments (line 1260)
        # Getting the type of 'mpmath' (line 1260)
        mpmath_548392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 45), 'mpmath', False)
        # Obtaining the member 'gegenbauer' of a type (line 1260)
        gegenbauer_548393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 45), mpmath_548392, 'gegenbauer')
        # Processing the call keyword arguments (line 1260)
        kwargs_548394 = {}
        # Getting the type of 'exception_to_nan' (line 1260)
        exception_to_nan_548391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1260)
        exception_to_nan_call_result_548395 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 28), exception_to_nan_548391, *[gegenbauer_548393], **kwargs_548394)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1261)
        list_548396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1261)
        # Adding element type (line 1261)
        
        # Call to Arg(...): (line 1261)
        # Processing the call arguments (line 1261)
        float_548398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 33), 'float')
        float_548399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 39), 'float')
        # Processing the call keyword arguments (line 1261)
        kwargs_548400 = {}
        # Getting the type of 'Arg' (line 1261)
        Arg_548397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1261)
        Arg_call_result_548401 = invoke(stypy.reporting.localization.Localization(__file__, 1261, 29), Arg_548397, *[float_548398, float_548399], **kwargs_548400)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1261, 28), list_548396, Arg_call_result_548401)
        # Adding element type (line 1261)
        
        # Call to Arg(...): (line 1261)
        # Processing the call keyword arguments (line 1261)
        kwargs_548403 = {}
        # Getting the type of 'Arg' (line 1261)
        Arg_548402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1261)
        Arg_call_result_548404 = invoke(stypy.reporting.localization.Localization(__file__, 1261, 45), Arg_548402, *[], **kwargs_548403)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1261, 28), list_548396, Arg_call_result_548404)
        # Adding element type (line 1261)
        
        # Call to Arg(...): (line 1261)
        # Processing the call keyword arguments (line 1261)
        kwargs_548406 = {}
        # Getting the type of 'Arg' (line 1261)
        Arg_548405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 52), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1261)
        Arg_call_result_548407 = invoke(stypy.reporting.localization.Localization(__file__, 1261, 52), Arg_548405, *[], **kwargs_548406)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1261, 28), list_548396, Arg_call_result_548407)
        
        # Processing the call keyword arguments (line 1259)
        kwargs_548408 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1259)
        assert_mpmath_equal_548388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1259)
        assert_mpmath_equal_call_result_548409 = invoke(stypy.reporting.localization.Localization(__file__, 1259, 8), assert_mpmath_equal_548388, *[eval_gegenbauer_548390, exception_to_nan_call_result_548395, list_548396], **kwargs_548408)
        
        
        # ################# End of 'test_gegenbauer(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gegenbauer' in the type store
        # Getting the type of 'stypy_return_type' (line 1257)
        stypy_return_type_548410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548410)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gegenbauer'
        return stypy_return_type_548410


    @norecursion
    def test_gegenbauer_int(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gegenbauer_int'
        module_type_store = module_type_store.open_function_context('test_gegenbauer_int', 1263, 4, False)
        # Assigning a type to the variable 'self' (line 1264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1264, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_gegenbauer_int')
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_gegenbauer_int.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_gegenbauer_int', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gegenbauer_int', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gegenbauer_int(...)' code ##################


        @norecursion
        def gegenbauer(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'gegenbauer'
            module_type_store = module_type_store.open_function_context('gegenbauer', 1265, 8, False)
            
            # Passed parameters checking function
            gegenbauer.stypy_localization = localization
            gegenbauer.stypy_type_of_self = None
            gegenbauer.stypy_type_store = module_type_store
            gegenbauer.stypy_function_name = 'gegenbauer'
            gegenbauer.stypy_param_names_list = ['n', 'a', 'x']
            gegenbauer.stypy_varargs_param_name = None
            gegenbauer.stypy_kwargs_param_name = None
            gegenbauer.stypy_call_defaults = defaults
            gegenbauer.stypy_call_varargs = varargs
            gegenbauer.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'gegenbauer', ['n', 'a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'gegenbauer', localization, ['n', 'a', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'gegenbauer(...)' code ##################

            
            
            
            # Call to abs(...): (line 1268)
            # Processing the call arguments (line 1268)
            # Getting the type of 'a' (line 1268)
            a_548412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 19), 'a', False)
            # Processing the call keyword arguments (line 1268)
            kwargs_548413 = {}
            # Getting the type of 'abs' (line 1268)
            abs_548411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1268)
            abs_call_result_548414 = invoke(stypy.reporting.localization.Localization(__file__, 1268, 15), abs_548411, *[a_548412], **kwargs_548413)
            
            float_548415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1268, 24), 'float')
            # Applying the binary operator '>' (line 1268)
            result_gt_548416 = python_operator(stypy.reporting.localization.Localization(__file__, 1268, 15), '>', abs_call_result_548414, float_548415)
            
            # Testing the type of an if condition (line 1268)
            if_condition_548417 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1268, 12), result_gt_548416)
            # Assigning a type to the variable 'if_condition_548417' (line 1268)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1268, 12), 'if_condition_548417', if_condition_548417)
            # SSA begins for if statement (line 1268)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1269)
            np_548418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1269)
            nan_548419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1269, 23), np_548418, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1269, 16), 'stypy_return_type', nan_548419)
            # SSA join for if statement (line 1268)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Getting the type of 'n' (line 1273)
            n_548420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1273, 15), 'n')
            int_548421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1273, 20), 'int')
            # Applying the binary operator '==' (line 1273)
            result_eq_548422 = python_operator(stypy.reporting.localization.Localization(__file__, 1273, 15), '==', n_548420, int_548421)
            
            # Testing the type of an if condition (line 1273)
            if_condition_548423 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1273, 12), result_eq_548422)
            # Assigning a type to the variable 'if_condition_548423' (line 1273)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1273, 12), 'if_condition_548423', if_condition_548423)
            # SSA begins for if statement (line 1273)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Num to a Name (line 1274):
            
            # Assigning a Num to a Name (line 1274):
            float_548424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 20), 'float')
            # Assigning a type to the variable 'r' (line 1274)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1274, 16), 'r', float_548424)
            # SSA branch for the else part of an if statement (line 1273)
            module_type_store.open_ssa_branch('else')
            
            
            # Getting the type of 'n' (line 1275)
            n_548425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1275, 17), 'n')
            int_548426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1275, 22), 'int')
            # Applying the binary operator '==' (line 1275)
            result_eq_548427 = python_operator(stypy.reporting.localization.Localization(__file__, 1275, 17), '==', n_548425, int_548426)
            
            # Testing the type of an if condition (line 1275)
            if_condition_548428 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1275, 17), result_eq_548427)
            # Assigning a type to the variable 'if_condition_548428' (line 1275)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1275, 17), 'if_condition_548428', if_condition_548428)
            # SSA begins for if statement (line 1275)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 1276):
            
            # Assigning a BinOp to a Name (line 1276):
            int_548429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1276, 20), 'int')
            # Getting the type of 'a' (line 1276)
            a_548430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1276, 22), 'a')
            # Applying the binary operator '*' (line 1276)
            result_mul_548431 = python_operator(stypy.reporting.localization.Localization(__file__, 1276, 20), '*', int_548429, a_548430)
            
            # Getting the type of 'x' (line 1276)
            x_548432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1276, 24), 'x')
            # Applying the binary operator '*' (line 1276)
            result_mul_548433 = python_operator(stypy.reporting.localization.Localization(__file__, 1276, 23), '*', result_mul_548431, x_548432)
            
            # Assigning a type to the variable 'r' (line 1276)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1276, 16), 'r', result_mul_548433)
            # SSA branch for the else part of an if statement (line 1275)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Name (line 1278):
            
            # Assigning a Call to a Name (line 1278):
            
            # Call to gegenbauer(...): (line 1278)
            # Processing the call arguments (line 1278)
            # Getting the type of 'n' (line 1278)
            n_548436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 38), 'n', False)
            # Getting the type of 'a' (line 1278)
            a_548437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 41), 'a', False)
            # Getting the type of 'x' (line 1278)
            x_548438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 44), 'x', False)
            # Processing the call keyword arguments (line 1278)
            kwargs_548439 = {}
            # Getting the type of 'mpmath' (line 1278)
            mpmath_548434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 20), 'mpmath', False)
            # Obtaining the member 'gegenbauer' of a type (line 1278)
            gegenbauer_548435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1278, 20), mpmath_548434, 'gegenbauer')
            # Calling gegenbauer(args, kwargs) (line 1278)
            gegenbauer_call_result_548440 = invoke(stypy.reporting.localization.Localization(__file__, 1278, 20), gegenbauer_548435, *[n_548436, a_548437, x_548438], **kwargs_548439)
            
            # Assigning a type to the variable 'r' (line 1278)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1278, 16), 'r', gegenbauer_call_result_548440)
            # SSA join for if statement (line 1275)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 1273)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            # Evaluating a boolean operation
            
            
            # Call to float(...): (line 1282)
            # Processing the call arguments (line 1282)
            # Getting the type of 'r' (line 1282)
            r_548442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 21), 'r', False)
            # Processing the call keyword arguments (line 1282)
            kwargs_548443 = {}
            # Getting the type of 'float' (line 1282)
            float_548441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 15), 'float', False)
            # Calling float(args, kwargs) (line 1282)
            float_call_result_548444 = invoke(stypy.reporting.localization.Localization(__file__, 1282, 15), float_548441, *[r_548442], **kwargs_548443)
            
            int_548445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1282, 27), 'int')
            # Applying the binary operator '==' (line 1282)
            result_eq_548446 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 15), '==', float_call_result_548444, int_548445)
            
            
            # Getting the type of 'n' (line 1282)
            n_548447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 33), 'n')
            int_548448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1282, 38), 'int')
            # Getting the type of 'a' (line 1282)
            a_548449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 40), 'a')
            # Applying the binary operator '-' (line 1282)
            result_sub_548450 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 38), '-', int_548448, a_548449)
            
            # Applying the binary operator '<=' (line 1282)
            result_le_548451 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 33), '<=', n_548447, result_sub_548450)
            
            # Applying the binary operator 'and' (line 1282)
            result_and_keyword_548452 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 15), 'and', result_eq_548446, result_le_548451)
            
            # Getting the type of 'a' (line 1282)
            a_548453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 46), 'a')
            int_548454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1282, 50), 'int')
            # Applying the binary operator '<' (line 1282)
            result_lt_548455 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 46), '<', a_548453, int_548454)
            
            # Applying the binary operator 'and' (line 1282)
            result_and_keyword_548456 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 15), 'and', result_and_keyword_548452, result_lt_548455)
            
            
            # Call to float(...): (line 1282)
            # Processing the call arguments (line 1282)
            # Getting the type of 'a' (line 1282)
            a_548458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 63), 'a', False)
            # Processing the call keyword arguments (line 1282)
            kwargs_548459 = {}
            # Getting the type of 'float' (line 1282)
            float_548457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 57), 'float', False)
            # Calling float(args, kwargs) (line 1282)
            float_call_result_548460 = invoke(stypy.reporting.localization.Localization(__file__, 1282, 57), float_548457, *[a_548458], **kwargs_548459)
            
            
            # Call to int(...): (line 1282)
            # Processing the call arguments (line 1282)
            
            # Call to float(...): (line 1282)
            # Processing the call arguments (line 1282)
            # Getting the type of 'a' (line 1282)
            a_548463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 79), 'a', False)
            # Processing the call keyword arguments (line 1282)
            kwargs_548464 = {}
            # Getting the type of 'float' (line 1282)
            float_548462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 73), 'float', False)
            # Calling float(args, kwargs) (line 1282)
            float_call_result_548465 = invoke(stypy.reporting.localization.Localization(__file__, 1282, 73), float_548462, *[a_548463], **kwargs_548464)
            
            # Processing the call keyword arguments (line 1282)
            kwargs_548466 = {}
            # Getting the type of 'int' (line 1282)
            int_548461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1282, 69), 'int', False)
            # Calling int(args, kwargs) (line 1282)
            int_call_result_548467 = invoke(stypy.reporting.localization.Localization(__file__, 1282, 69), int_548461, *[float_call_result_548465], **kwargs_548466)
            
            # Applying the binary operator '==' (line 1282)
            result_eq_548468 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 57), '==', float_call_result_548460, int_call_result_548467)
            
            # Applying the binary operator 'and' (line 1282)
            result_and_keyword_548469 = python_operator(stypy.reporting.localization.Localization(__file__, 1282, 15), 'and', result_and_keyword_548456, result_eq_548468)
            
            # Testing the type of an if condition (line 1282)
            if_condition_548470 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1282, 12), result_and_keyword_548469)
            # Assigning a type to the variable 'if_condition_548470' (line 1282)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1282, 12), 'if_condition_548470', if_condition_548470)
            # SSA begins for if statement (line 1282)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 1283):
            
            # Assigning a Call to a Name (line 1283):
            
            # Call to gegenbauer(...): (line 1283)
            # Processing the call arguments (line 1283)
            # Getting the type of 'n' (line 1283)
            n_548473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 38), 'n', False)
            # Getting the type of 'a' (line 1283)
            a_548474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 41), 'a', False)
            
            # Call to mpf(...): (line 1283)
            # Processing the call arguments (line 1283)
            str_548477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1283, 56), 'str', '1e-50')
            # Processing the call keyword arguments (line 1283)
            kwargs_548478 = {}
            # Getting the type of 'mpmath' (line 1283)
            mpmath_548475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 45), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1283)
            mpf_548476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1283, 45), mpmath_548475, 'mpf')
            # Calling mpf(args, kwargs) (line 1283)
            mpf_call_result_548479 = invoke(stypy.reporting.localization.Localization(__file__, 1283, 45), mpf_548476, *[str_548477], **kwargs_548478)
            
            # Applying the binary operator '+' (line 1283)
            result_add_548480 = python_operator(stypy.reporting.localization.Localization(__file__, 1283, 41), '+', a_548474, mpf_call_result_548479)
            
            # Getting the type of 'x' (line 1283)
            x_548481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 66), 'x', False)
            # Processing the call keyword arguments (line 1283)
            kwargs_548482 = {}
            # Getting the type of 'mpmath' (line 1283)
            mpmath_548471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 20), 'mpmath', False)
            # Obtaining the member 'gegenbauer' of a type (line 1283)
            gegenbauer_548472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1283, 20), mpmath_548471, 'gegenbauer')
            # Calling gegenbauer(args, kwargs) (line 1283)
            gegenbauer_call_result_548483 = invoke(stypy.reporting.localization.Localization(__file__, 1283, 20), gegenbauer_548472, *[n_548473, result_add_548480, x_548481], **kwargs_548482)
            
            # Assigning a type to the variable 'r' (line 1283)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1283, 16), 'r', gegenbauer_call_result_548483)
            # SSA join for if statement (line 1282)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            
            # Call to abs(...): (line 1286)
            # Processing the call arguments (line 1286)
            # Getting the type of 'r' (line 1286)
            r_548485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 19), 'r', False)
            # Processing the call keyword arguments (line 1286)
            kwargs_548486 = {}
            # Getting the type of 'abs' (line 1286)
            abs_548484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1286)
            abs_call_result_548487 = invoke(stypy.reporting.localization.Localization(__file__, 1286, 15), abs_548484, *[r_548485], **kwargs_548486)
            
            float_548488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1286, 24), 'float')
            # Applying the binary operator '>' (line 1286)
            result_gt_548489 = python_operator(stypy.reporting.localization.Localization(__file__, 1286, 15), '>', abs_call_result_548487, float_548488)
            
            # Testing the type of an if condition (line 1286)
            if_condition_548490 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1286, 12), result_gt_548489)
            # Assigning a type to the variable 'if_condition_548490' (line 1286)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1286, 12), 'if_condition_548490', if_condition_548490)
            # SSA begins for if statement (line 1286)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1287)
            np_548491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 23), 'np')
            # Obtaining the member 'inf' of a type (line 1287)
            inf_548492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 23), np_548491, 'inf')
            # Assigning a type to the variable 'stypy_return_type' (line 1287)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 16), 'stypy_return_type', inf_548492)
            # SSA join for if statement (line 1286)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'r' (line 1288)
            r_548493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 19), 'r')
            # Assigning a type to the variable 'stypy_return_type' (line 1288)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1288, 12), 'stypy_return_type', r_548493)
            
            # ################# End of 'gegenbauer(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'gegenbauer' in the type store
            # Getting the type of 'stypy_return_type' (line 1265)
            stypy_return_type_548494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548494)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'gegenbauer'
            return stypy_return_type_548494

        # Assigning a type to the variable 'gegenbauer' (line 1265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1265, 8), 'gegenbauer', gegenbauer)

        @norecursion
        def sc_gegenbauer(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'sc_gegenbauer'
            module_type_store = module_type_store.open_function_context('sc_gegenbauer', 1290, 8, False)
            
            # Passed parameters checking function
            sc_gegenbauer.stypy_localization = localization
            sc_gegenbauer.stypy_type_of_self = None
            sc_gegenbauer.stypy_type_store = module_type_store
            sc_gegenbauer.stypy_function_name = 'sc_gegenbauer'
            sc_gegenbauer.stypy_param_names_list = ['n', 'a', 'x']
            sc_gegenbauer.stypy_varargs_param_name = None
            sc_gegenbauer.stypy_kwargs_param_name = None
            sc_gegenbauer.stypy_call_defaults = defaults
            sc_gegenbauer.stypy_call_varargs = varargs
            sc_gegenbauer.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'sc_gegenbauer', ['n', 'a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'sc_gegenbauer', localization, ['n', 'a', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'sc_gegenbauer(...)' code ##################

            
            # Assigning a Call to a Name (line 1291):
            
            # Assigning a Call to a Name (line 1291):
            
            # Call to eval_gegenbauer(...): (line 1291)
            # Processing the call arguments (line 1291)
            
            # Call to int(...): (line 1291)
            # Processing the call arguments (line 1291)
            # Getting the type of 'n' (line 1291)
            n_548498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 39), 'n', False)
            # Processing the call keyword arguments (line 1291)
            kwargs_548499 = {}
            # Getting the type of 'int' (line 1291)
            int_548497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 35), 'int', False)
            # Calling int(args, kwargs) (line 1291)
            int_call_result_548500 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 35), int_548497, *[n_548498], **kwargs_548499)
            
            # Getting the type of 'a' (line 1291)
            a_548501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 43), 'a', False)
            # Getting the type of 'x' (line 1291)
            x_548502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 46), 'x', False)
            # Processing the call keyword arguments (line 1291)
            kwargs_548503 = {}
            # Getting the type of 'sc' (line 1291)
            sc_548495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 16), 'sc', False)
            # Obtaining the member 'eval_gegenbauer' of a type (line 1291)
            eval_gegenbauer_548496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1291, 16), sc_548495, 'eval_gegenbauer')
            # Calling eval_gegenbauer(args, kwargs) (line 1291)
            eval_gegenbauer_call_result_548504 = invoke(stypy.reporting.localization.Localization(__file__, 1291, 16), eval_gegenbauer_548496, *[int_call_result_548500, a_548501, x_548502], **kwargs_548503)
            
            # Assigning a type to the variable 'r' (line 1291)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1291, 12), 'r', eval_gegenbauer_call_result_548504)
            
            
            
            # Call to abs(...): (line 1293)
            # Processing the call arguments (line 1293)
            # Getting the type of 'r' (line 1293)
            r_548506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 19), 'r', False)
            # Processing the call keyword arguments (line 1293)
            kwargs_548507 = {}
            # Getting the type of 'abs' (line 1293)
            abs_548505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1293)
            abs_call_result_548508 = invoke(stypy.reporting.localization.Localization(__file__, 1293, 15), abs_548505, *[r_548506], **kwargs_548507)
            
            float_548509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1293, 24), 'float')
            # Applying the binary operator '>' (line 1293)
            result_gt_548510 = python_operator(stypy.reporting.localization.Localization(__file__, 1293, 15), '>', abs_call_result_548508, float_548509)
            
            # Testing the type of an if condition (line 1293)
            if_condition_548511 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1293, 12), result_gt_548510)
            # Assigning a type to the variable 'if_condition_548511' (line 1293)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'if_condition_548511', if_condition_548511)
            # SSA begins for if statement (line 1293)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1294)
            np_548512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1294, 23), 'np')
            # Obtaining the member 'inf' of a type (line 1294)
            inf_548513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1294, 23), np_548512, 'inf')
            # Assigning a type to the variable 'stypy_return_type' (line 1294)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1294, 16), 'stypy_return_type', inf_548513)
            # SSA join for if statement (line 1293)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'r' (line 1295)
            r_548514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 19), 'r')
            # Assigning a type to the variable 'stypy_return_type' (line 1295)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1295, 12), 'stypy_return_type', r_548514)
            
            # ################# End of 'sc_gegenbauer(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'sc_gegenbauer' in the type store
            # Getting the type of 'stypy_return_type' (line 1290)
            stypy_return_type_548515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548515)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'sc_gegenbauer'
            return stypy_return_type_548515

        # Assigning a type to the variable 'sc_gegenbauer' (line 1290)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1290, 8), 'sc_gegenbauer', sc_gegenbauer)
        
        # Call to assert_mpmath_equal(...): (line 1296)
        # Processing the call arguments (line 1296)
        # Getting the type of 'sc_gegenbauer' (line 1296)
        sc_gegenbauer_548517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 28), 'sc_gegenbauer', False)
        
        # Call to exception_to_nan(...): (line 1297)
        # Processing the call arguments (line 1297)
        # Getting the type of 'gegenbauer' (line 1297)
        gegenbauer_548519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 45), 'gegenbauer', False)
        # Processing the call keyword arguments (line 1297)
        kwargs_548520 = {}
        # Getting the type of 'exception_to_nan' (line 1297)
        exception_to_nan_548518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1297)
        exception_to_nan_call_result_548521 = invoke(stypy.reporting.localization.Localization(__file__, 1297, 28), exception_to_nan_548518, *[gegenbauer_548519], **kwargs_548520)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1298)
        list_548522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1298, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1298)
        # Adding element type (line 1298)
        
        # Call to IntArg(...): (line 1298)
        # Processing the call arguments (line 1298)
        int_548524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1298, 36), 'int')
        int_548525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1298, 39), 'int')
        # Processing the call keyword arguments (line 1298)
        kwargs_548526 = {}
        # Getting the type of 'IntArg' (line 1298)
        IntArg_548523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1298)
        IntArg_call_result_548527 = invoke(stypy.reporting.localization.Localization(__file__, 1298, 29), IntArg_548523, *[int_548524, int_548525], **kwargs_548526)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 28), list_548522, IntArg_call_result_548527)
        # Adding element type (line 1298)
        
        # Call to Arg(...): (line 1298)
        # Processing the call keyword arguments (line 1298)
        kwargs_548529 = {}
        # Getting the type of 'Arg' (line 1298)
        Arg_548528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1298)
        Arg_call_result_548530 = invoke(stypy.reporting.localization.Localization(__file__, 1298, 45), Arg_548528, *[], **kwargs_548529)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 28), list_548522, Arg_call_result_548530)
        # Adding element type (line 1298)
        
        # Call to Arg(...): (line 1298)
        # Processing the call keyword arguments (line 1298)
        kwargs_548532 = {}
        # Getting the type of 'Arg' (line 1298)
        Arg_548531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 52), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1298)
        Arg_call_result_548533 = invoke(stypy.reporting.localization.Localization(__file__, 1298, 52), Arg_548531, *[], **kwargs_548532)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1298, 28), list_548522, Arg_call_result_548533)
        
        # Processing the call keyword arguments (line 1296)
        int_548534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 30), 'int')
        keyword_548535 = int_548534
        int_548536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 41), 'int')
        keyword_548537 = int_548536
        # Getting the type of 'True' (line 1300)
        True_548538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 44), 'True', False)
        keyword_548539 = True_548538
        kwargs_548540 = {'dps': keyword_548537, 'ignore_inf_sign': keyword_548539, 'n': keyword_548535}
        # Getting the type of 'assert_mpmath_equal' (line 1296)
        assert_mpmath_equal_548516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1296)
        assert_mpmath_equal_call_result_548541 = invoke(stypy.reporting.localization.Localization(__file__, 1296, 8), assert_mpmath_equal_548516, *[sc_gegenbauer_548517, exception_to_nan_call_result_548521, list_548522], **kwargs_548540)
        
        
        # Call to assert_mpmath_equal(...): (line 1303)
        # Processing the call arguments (line 1303)
        # Getting the type of 'sc_gegenbauer' (line 1303)
        sc_gegenbauer_548543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1303, 28), 'sc_gegenbauer', False)
        
        # Call to exception_to_nan(...): (line 1304)
        # Processing the call arguments (line 1304)
        # Getting the type of 'gegenbauer' (line 1304)
        gegenbauer_548545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 45), 'gegenbauer', False)
        # Processing the call keyword arguments (line 1304)
        kwargs_548546 = {}
        # Getting the type of 'exception_to_nan' (line 1304)
        exception_to_nan_548544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1304)
        exception_to_nan_call_result_548547 = invoke(stypy.reporting.localization.Localization(__file__, 1304, 28), exception_to_nan_548544, *[gegenbauer_548545], **kwargs_548546)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1305)
        list_548548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1305)
        # Adding element type (line 1305)
        
        # Call to IntArg(...): (line 1305)
        # Processing the call arguments (line 1305)
        int_548550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 36), 'int')
        int_548551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 39), 'int')
        # Processing the call keyword arguments (line 1305)
        kwargs_548552 = {}
        # Getting the type of 'IntArg' (line 1305)
        IntArg_548549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1305)
        IntArg_call_result_548553 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 29), IntArg_548549, *[int_548550, int_548551], **kwargs_548552)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1305, 28), list_548548, IntArg_call_result_548553)
        # Adding element type (line 1305)
        
        # Call to Arg(...): (line 1305)
        # Processing the call keyword arguments (line 1305)
        kwargs_548555 = {}
        # Getting the type of 'Arg' (line 1305)
        Arg_548554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1305)
        Arg_call_result_548556 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 45), Arg_548554, *[], **kwargs_548555)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1305, 28), list_548548, Arg_call_result_548556)
        # Adding element type (line 1305)
        
        # Call to FixedArg(...): (line 1305)
        # Processing the call arguments (line 1305)
        
        # Call to logspace(...): (line 1305)
        # Processing the call arguments (line 1305)
        int_548560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 73), 'int')
        int_548561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 78), 'int')
        int_548562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1305, 82), 'int')
        # Processing the call keyword arguments (line 1305)
        kwargs_548563 = {}
        # Getting the type of 'np' (line 1305)
        np_548558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 61), 'np', False)
        # Obtaining the member 'logspace' of a type (line 1305)
        logspace_548559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 61), np_548558, 'logspace')
        # Calling logspace(args, kwargs) (line 1305)
        logspace_call_result_548564 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 61), logspace_548559, *[int_548560, int_548561, int_548562], **kwargs_548563)
        
        # Processing the call keyword arguments (line 1305)
        kwargs_548565 = {}
        # Getting the type of 'FixedArg' (line 1305)
        FixedArg_548557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 52), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 1305)
        FixedArg_call_result_548566 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 52), FixedArg_548557, *[logspace_call_result_548564], **kwargs_548565)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1305, 28), list_548548, FixedArg_call_result_548566)
        
        # Processing the call keyword arguments (line 1303)
        int_548567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 32), 'int')
        keyword_548568 = int_548567
        # Getting the type of 'True' (line 1307)
        True_548569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 44), 'True', False)
        keyword_548570 = True_548569
        kwargs_548571 = {'dps': keyword_548568, 'ignore_inf_sign': keyword_548570}
        # Getting the type of 'assert_mpmath_equal' (line 1303)
        assert_mpmath_equal_548542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1303, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1303)
        assert_mpmath_equal_call_result_548572 = invoke(stypy.reporting.localization.Localization(__file__, 1303, 8), assert_mpmath_equal_548542, *[sc_gegenbauer_548543, exception_to_nan_call_result_548547, list_548548], **kwargs_548571)
        
        
        # ################# End of 'test_gegenbauer_int(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gegenbauer_int' in the type store
        # Getting the type of 'stypy_return_type' (line 1263)
        stypy_return_type_548573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548573)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gegenbauer_int'
        return stypy_return_type_548573


    @norecursion
    def test_gegenbauer_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gegenbauer_complex'
        module_type_store = module_type_store.open_function_context('test_gegenbauer_complex', 1309, 4, False)
        # Assigning a type to the variable 'self' (line 1310)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1310, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_gegenbauer_complex')
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_gegenbauer_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_gegenbauer_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gegenbauer_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gegenbauer_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1311)
        # Processing the call arguments (line 1311)

        @norecursion
        def _stypy_temp_lambda_406(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_406'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_406', 1311, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_406.stypy_localization = localization
            _stypy_temp_lambda_406.stypy_type_of_self = None
            _stypy_temp_lambda_406.stypy_type_store = module_type_store
            _stypy_temp_lambda_406.stypy_function_name = '_stypy_temp_lambda_406'
            _stypy_temp_lambda_406.stypy_param_names_list = ['n', 'a', 'x']
            _stypy_temp_lambda_406.stypy_varargs_param_name = None
            _stypy_temp_lambda_406.stypy_kwargs_param_name = None
            _stypy_temp_lambda_406.stypy_call_defaults = defaults
            _stypy_temp_lambda_406.stypy_call_varargs = varargs
            _stypy_temp_lambda_406.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_406', ['n', 'a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_406', ['n', 'a', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_gegenbauer(...): (line 1311)
            # Processing the call arguments (line 1311)
            
            # Call to int(...): (line 1311)
            # Processing the call arguments (line 1311)
            # Getting the type of 'n' (line 1311)
            n_548578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 67), 'n', False)
            # Processing the call keyword arguments (line 1311)
            kwargs_548579 = {}
            # Getting the type of 'int' (line 1311)
            int_548577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 63), 'int', False)
            # Calling int(args, kwargs) (line 1311)
            int_call_result_548580 = invoke(stypy.reporting.localization.Localization(__file__, 1311, 63), int_548577, *[n_548578], **kwargs_548579)
            
            # Getting the type of 'a' (line 1311)
            a_548581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 71), 'a', False)
            # Obtaining the member 'real' of a type (line 1311)
            real_548582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1311, 71), a_548581, 'real')
            # Getting the type of 'x' (line 1311)
            x_548583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 79), 'x', False)
            # Processing the call keyword arguments (line 1311)
            kwargs_548584 = {}
            # Getting the type of 'sc' (line 1311)
            sc_548575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 44), 'sc', False)
            # Obtaining the member 'eval_gegenbauer' of a type (line 1311)
            eval_gegenbauer_548576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1311, 44), sc_548575, 'eval_gegenbauer')
            # Calling eval_gegenbauer(args, kwargs) (line 1311)
            eval_gegenbauer_call_result_548585 = invoke(stypy.reporting.localization.Localization(__file__, 1311, 44), eval_gegenbauer_548576, *[int_call_result_548580, real_548582, x_548583], **kwargs_548584)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1311)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1311, 28), 'stypy_return_type', eval_gegenbauer_call_result_548585)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_406' in the type store
            # Getting the type of 'stypy_return_type' (line 1311)
            stypy_return_type_548586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548586)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_406'
            return stypy_return_type_548586

        # Assigning a type to the variable '_stypy_temp_lambda_406' (line 1311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1311, 28), '_stypy_temp_lambda_406', _stypy_temp_lambda_406)
        # Getting the type of '_stypy_temp_lambda_406' (line 1311)
        _stypy_temp_lambda_406_548587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 28), '_stypy_temp_lambda_406')
        
        # Call to exception_to_nan(...): (line 1312)
        # Processing the call arguments (line 1312)
        # Getting the type of 'mpmath' (line 1312)
        mpmath_548589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1312, 45), 'mpmath', False)
        # Obtaining the member 'gegenbauer' of a type (line 1312)
        gegenbauer_548590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1312, 45), mpmath_548589, 'gegenbauer')
        # Processing the call keyword arguments (line 1312)
        kwargs_548591 = {}
        # Getting the type of 'exception_to_nan' (line 1312)
        exception_to_nan_548588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1312, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1312)
        exception_to_nan_call_result_548592 = invoke(stypy.reporting.localization.Localization(__file__, 1312, 28), exception_to_nan_548588, *[gegenbauer_548590], **kwargs_548591)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1313)
        list_548593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1313)
        # Adding element type (line 1313)
        
        # Call to IntArg(...): (line 1313)
        # Processing the call arguments (line 1313)
        int_548595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 36), 'int')
        int_548596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1313, 39), 'int')
        # Processing the call keyword arguments (line 1313)
        kwargs_548597 = {}
        # Getting the type of 'IntArg' (line 1313)
        IntArg_548594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1313)
        IntArg_call_result_548598 = invoke(stypy.reporting.localization.Localization(__file__, 1313, 29), IntArg_548594, *[int_548595, int_548596], **kwargs_548597)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1313, 28), list_548593, IntArg_call_result_548598)
        # Adding element type (line 1313)
        
        # Call to Arg(...): (line 1313)
        # Processing the call keyword arguments (line 1313)
        kwargs_548600 = {}
        # Getting the type of 'Arg' (line 1313)
        Arg_548599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1313)
        Arg_call_result_548601 = invoke(stypy.reporting.localization.Localization(__file__, 1313, 45), Arg_548599, *[], **kwargs_548600)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1313, 28), list_548593, Arg_call_result_548601)
        # Adding element type (line 1313)
        
        # Call to ComplexArg(...): (line 1313)
        # Processing the call keyword arguments (line 1313)
        kwargs_548603 = {}
        # Getting the type of 'ComplexArg' (line 1313)
        ComplexArg_548602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 52), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1313)
        ComplexArg_call_result_548604 = invoke(stypy.reporting.localization.Localization(__file__, 1313, 52), ComplexArg_548602, *[], **kwargs_548603)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1313, 28), list_548593, ComplexArg_call_result_548604)
        
        # Processing the call keyword arguments (line 1311)
        kwargs_548605 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1311)
        assert_mpmath_equal_548574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1311)
        assert_mpmath_equal_call_result_548606 = invoke(stypy.reporting.localization.Localization(__file__, 1311, 8), assert_mpmath_equal_548574, *[_stypy_temp_lambda_406_548587, exception_to_nan_call_result_548592, list_548593], **kwargs_548605)
        
        
        # ################# End of 'test_gegenbauer_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gegenbauer_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1309)
        stypy_return_type_548607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548607)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gegenbauer_complex'
        return stypy_return_type_548607


    @norecursion
    def test_gegenbauer_complex_general(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gegenbauer_complex_general'
        module_type_store = module_type_store.open_function_context('test_gegenbauer_complex_general', 1315, 4, False)
        # Assigning a type to the variable 'self' (line 1316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1316, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_gegenbauer_complex_general')
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_gegenbauer_complex_general.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_gegenbauer_complex_general', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gegenbauer_complex_general', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gegenbauer_complex_general(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1317)
        # Processing the call arguments (line 1317)

        @norecursion
        def _stypy_temp_lambda_407(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_407'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_407', 1317, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_407.stypy_localization = localization
            _stypy_temp_lambda_407.stypy_type_of_self = None
            _stypy_temp_lambda_407.stypy_type_store = module_type_store
            _stypy_temp_lambda_407.stypy_function_name = '_stypy_temp_lambda_407'
            _stypy_temp_lambda_407.stypy_param_names_list = ['n', 'a', 'x']
            _stypy_temp_lambda_407.stypy_varargs_param_name = None
            _stypy_temp_lambda_407.stypy_kwargs_param_name = None
            _stypy_temp_lambda_407.stypy_call_defaults = defaults
            _stypy_temp_lambda_407.stypy_call_varargs = varargs
            _stypy_temp_lambda_407.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_407', ['n', 'a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_407', ['n', 'a', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_gegenbauer(...): (line 1317)
            # Processing the call arguments (line 1317)
            # Getting the type of 'n' (line 1317)
            n_548611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 63), 'n', False)
            # Obtaining the member 'real' of a type (line 1317)
            real_548612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1317, 63), n_548611, 'real')
            # Getting the type of 'a' (line 1317)
            a_548613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 71), 'a', False)
            # Obtaining the member 'real' of a type (line 1317)
            real_548614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1317, 71), a_548613, 'real')
            # Getting the type of 'x' (line 1317)
            x_548615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 79), 'x', False)
            # Processing the call keyword arguments (line 1317)
            kwargs_548616 = {}
            # Getting the type of 'sc' (line 1317)
            sc_548609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 44), 'sc', False)
            # Obtaining the member 'eval_gegenbauer' of a type (line 1317)
            eval_gegenbauer_548610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1317, 44), sc_548609, 'eval_gegenbauer')
            # Calling eval_gegenbauer(args, kwargs) (line 1317)
            eval_gegenbauer_call_result_548617 = invoke(stypy.reporting.localization.Localization(__file__, 1317, 44), eval_gegenbauer_548610, *[real_548612, real_548614, x_548615], **kwargs_548616)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1317)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1317, 28), 'stypy_return_type', eval_gegenbauer_call_result_548617)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_407' in the type store
            # Getting the type of 'stypy_return_type' (line 1317)
            stypy_return_type_548618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548618)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_407'
            return stypy_return_type_548618

        # Assigning a type to the variable '_stypy_temp_lambda_407' (line 1317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1317, 28), '_stypy_temp_lambda_407', _stypy_temp_lambda_407)
        # Getting the type of '_stypy_temp_lambda_407' (line 1317)
        _stypy_temp_lambda_407_548619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 28), '_stypy_temp_lambda_407')
        
        # Call to exception_to_nan(...): (line 1318)
        # Processing the call arguments (line 1318)
        # Getting the type of 'mpmath' (line 1318)
        mpmath_548621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 45), 'mpmath', False)
        # Obtaining the member 'gegenbauer' of a type (line 1318)
        gegenbauer_548622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1318, 45), mpmath_548621, 'gegenbauer')
        # Processing the call keyword arguments (line 1318)
        kwargs_548623 = {}
        # Getting the type of 'exception_to_nan' (line 1318)
        exception_to_nan_548620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1318)
        exception_to_nan_call_result_548624 = invoke(stypy.reporting.localization.Localization(__file__, 1318, 28), exception_to_nan_548620, *[gegenbauer_548622], **kwargs_548623)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1319)
        list_548625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1319, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1319)
        # Adding element type (line 1319)
        
        # Call to Arg(...): (line 1319)
        # Processing the call arguments (line 1319)
        float_548627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1319, 33), 'float')
        float_548628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1319, 39), 'float')
        # Processing the call keyword arguments (line 1319)
        kwargs_548629 = {}
        # Getting the type of 'Arg' (line 1319)
        Arg_548626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1319)
        Arg_call_result_548630 = invoke(stypy.reporting.localization.Localization(__file__, 1319, 29), Arg_548626, *[float_548627, float_548628], **kwargs_548629)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1319, 28), list_548625, Arg_call_result_548630)
        # Adding element type (line 1319)
        
        # Call to Arg(...): (line 1319)
        # Processing the call keyword arguments (line 1319)
        kwargs_548632 = {}
        # Getting the type of 'Arg' (line 1319)
        Arg_548631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1319)
        Arg_call_result_548633 = invoke(stypy.reporting.localization.Localization(__file__, 1319, 45), Arg_548631, *[], **kwargs_548632)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1319, 28), list_548625, Arg_call_result_548633)
        # Adding element type (line 1319)
        
        # Call to ComplexArg(...): (line 1319)
        # Processing the call keyword arguments (line 1319)
        kwargs_548635 = {}
        # Getting the type of 'ComplexArg' (line 1319)
        ComplexArg_548634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 52), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1319)
        ComplexArg_call_result_548636 = invoke(stypy.reporting.localization.Localization(__file__, 1319, 52), ComplexArg_548634, *[], **kwargs_548635)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1319, 28), list_548625, ComplexArg_call_result_548636)
        
        # Processing the call keyword arguments (line 1317)
        kwargs_548637 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1317)
        assert_mpmath_equal_548608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1317, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1317)
        assert_mpmath_equal_call_result_548638 = invoke(stypy.reporting.localization.Localization(__file__, 1317, 8), assert_mpmath_equal_548608, *[_stypy_temp_lambda_407_548619, exception_to_nan_call_result_548624, list_548625], **kwargs_548637)
        
        
        # ################# End of 'test_gegenbauer_complex_general(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gegenbauer_complex_general' in the type store
        # Getting the type of 'stypy_return_type' (line 1315)
        stypy_return_type_548639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548639)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gegenbauer_complex_general'
        return stypy_return_type_548639


    @norecursion
    def test_hankel1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hankel1'
        module_type_store = module_type_store.open_function_context('test_hankel1', 1321, 4, False)
        # Assigning a type to the variable 'self' (line 1322)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1322, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hankel1')
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hankel1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hankel1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hankel1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hankel1(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1322)
        # Processing the call arguments (line 1322)
        # Getting the type of 'sc' (line 1322)
        sc_548641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1322, 28), 'sc', False)
        # Obtaining the member 'hankel1' of a type (line 1322)
        hankel1_548642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1322, 28), sc_548641, 'hankel1')
        
        # Call to exception_to_nan(...): (line 1323)
        # Processing the call arguments (line 1323)

        @norecursion
        def _stypy_temp_lambda_408(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_408'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_408', 1323, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_408.stypy_localization = localization
            _stypy_temp_lambda_408.stypy_type_of_self = None
            _stypy_temp_lambda_408.stypy_type_store = module_type_store
            _stypy_temp_lambda_408.stypy_function_name = '_stypy_temp_lambda_408'
            _stypy_temp_lambda_408.stypy_param_names_list = ['v', 'x']
            _stypy_temp_lambda_408.stypy_varargs_param_name = None
            _stypy_temp_lambda_408.stypy_kwargs_param_name = None
            _stypy_temp_lambda_408.stypy_call_defaults = defaults
            _stypy_temp_lambda_408.stypy_call_varargs = varargs
            _stypy_temp_lambda_408.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_408', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_408', ['v', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hankel1(...): (line 1323)
            # Processing the call arguments (line 1323)
            # Getting the type of 'v' (line 1323)
            v_548646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 73), 'v', False)
            # Getting the type of 'x' (line 1323)
            x_548647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 76), 'x', False)
            # Processing the call keyword arguments (line 1323)
            # Getting the type of 'HYPERKW' (line 1324)
            HYPERKW_548648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1324, 76), 'HYPERKW', False)
            kwargs_548649 = {'HYPERKW_548648': HYPERKW_548648}
            # Getting the type of 'mpmath' (line 1323)
            mpmath_548644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 58), 'mpmath', False)
            # Obtaining the member 'hankel1' of a type (line 1323)
            hankel1_548645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1323, 58), mpmath_548644, 'hankel1')
            # Calling hankel1(args, kwargs) (line 1323)
            hankel1_call_result_548650 = invoke(stypy.reporting.localization.Localization(__file__, 1323, 58), hankel1_548645, *[v_548646, x_548647], **kwargs_548649)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1323)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 45), 'stypy_return_type', hankel1_call_result_548650)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_408' in the type store
            # Getting the type of 'stypy_return_type' (line 1323)
            stypy_return_type_548651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548651)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_408'
            return stypy_return_type_548651

        # Assigning a type to the variable '_stypy_temp_lambda_408' (line 1323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1323, 45), '_stypy_temp_lambda_408', _stypy_temp_lambda_408)
        # Getting the type of '_stypy_temp_lambda_408' (line 1323)
        _stypy_temp_lambda_408_548652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 45), '_stypy_temp_lambda_408')
        # Processing the call keyword arguments (line 1323)
        kwargs_548653 = {}
        # Getting the type of 'exception_to_nan' (line 1323)
        exception_to_nan_548643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1323, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1323)
        exception_to_nan_call_result_548654 = invoke(stypy.reporting.localization.Localization(__file__, 1323, 28), exception_to_nan_548643, *[_stypy_temp_lambda_408_548652], **kwargs_548653)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1325)
        list_548655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1325, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1325)
        # Adding element type (line 1325)
        
        # Call to Arg(...): (line 1325)
        # Processing the call arguments (line 1325)
        float_548657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1325, 33), 'float')
        float_548658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1325, 40), 'float')
        # Processing the call keyword arguments (line 1325)
        kwargs_548659 = {}
        # Getting the type of 'Arg' (line 1325)
        Arg_548656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1325)
        Arg_call_result_548660 = invoke(stypy.reporting.localization.Localization(__file__, 1325, 29), Arg_548656, *[float_548657, float_548658], **kwargs_548659)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1325, 28), list_548655, Arg_call_result_548660)
        # Adding element type (line 1325)
        
        # Call to Arg(...): (line 1325)
        # Processing the call keyword arguments (line 1325)
        kwargs_548662 = {}
        # Getting the type of 'Arg' (line 1325)
        Arg_548661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1325, 47), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1325)
        Arg_call_result_548663 = invoke(stypy.reporting.localization.Localization(__file__, 1325, 47), Arg_548661, *[], **kwargs_548662)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1325, 28), list_548655, Arg_call_result_548663)
        
        # Processing the call keyword arguments (line 1322)
        kwargs_548664 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1322)
        assert_mpmath_equal_548640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1322, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1322)
        assert_mpmath_equal_call_result_548665 = invoke(stypy.reporting.localization.Localization(__file__, 1322, 8), assert_mpmath_equal_548640, *[hankel1_548642, exception_to_nan_call_result_548654, list_548655], **kwargs_548664)
        
        
        # ################# End of 'test_hankel1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hankel1' in the type store
        # Getting the type of 'stypy_return_type' (line 1321)
        stypy_return_type_548666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1321, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548666)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hankel1'
        return stypy_return_type_548666


    @norecursion
    def test_hankel2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hankel2'
        module_type_store = module_type_store.open_function_context('test_hankel2', 1327, 4, False)
        # Assigning a type to the variable 'self' (line 1328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1328, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hankel2')
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hankel2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hankel2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hankel2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hankel2(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1328)
        # Processing the call arguments (line 1328)
        # Getting the type of 'sc' (line 1328)
        sc_548668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 28), 'sc', False)
        # Obtaining the member 'hankel2' of a type (line 1328)
        hankel2_548669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1328, 28), sc_548668, 'hankel2')
        
        # Call to exception_to_nan(...): (line 1329)
        # Processing the call arguments (line 1329)

        @norecursion
        def _stypy_temp_lambda_409(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_409'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_409', 1329, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_409.stypy_localization = localization
            _stypy_temp_lambda_409.stypy_type_of_self = None
            _stypy_temp_lambda_409.stypy_type_store = module_type_store
            _stypy_temp_lambda_409.stypy_function_name = '_stypy_temp_lambda_409'
            _stypy_temp_lambda_409.stypy_param_names_list = ['v', 'x']
            _stypy_temp_lambda_409.stypy_varargs_param_name = None
            _stypy_temp_lambda_409.stypy_kwargs_param_name = None
            _stypy_temp_lambda_409.stypy_call_defaults = defaults
            _stypy_temp_lambda_409.stypy_call_varargs = varargs
            _stypy_temp_lambda_409.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_409', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_409', ['v', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hankel2(...): (line 1329)
            # Processing the call arguments (line 1329)
            # Getting the type of 'v' (line 1329)
            v_548673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 73), 'v', False)
            # Getting the type of 'x' (line 1329)
            x_548674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 76), 'x', False)
            # Processing the call keyword arguments (line 1329)
            # Getting the type of 'HYPERKW' (line 1329)
            HYPERKW_548675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 81), 'HYPERKW', False)
            kwargs_548676 = {'HYPERKW_548675': HYPERKW_548675}
            # Getting the type of 'mpmath' (line 1329)
            mpmath_548671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 58), 'mpmath', False)
            # Obtaining the member 'hankel2' of a type (line 1329)
            hankel2_548672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1329, 58), mpmath_548671, 'hankel2')
            # Calling hankel2(args, kwargs) (line 1329)
            hankel2_call_result_548677 = invoke(stypy.reporting.localization.Localization(__file__, 1329, 58), hankel2_548672, *[v_548673, x_548674], **kwargs_548676)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1329)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1329, 45), 'stypy_return_type', hankel2_call_result_548677)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_409' in the type store
            # Getting the type of 'stypy_return_type' (line 1329)
            stypy_return_type_548678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548678)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_409'
            return stypy_return_type_548678

        # Assigning a type to the variable '_stypy_temp_lambda_409' (line 1329)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1329, 45), '_stypy_temp_lambda_409', _stypy_temp_lambda_409)
        # Getting the type of '_stypy_temp_lambda_409' (line 1329)
        _stypy_temp_lambda_409_548679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 45), '_stypy_temp_lambda_409')
        # Processing the call keyword arguments (line 1329)
        kwargs_548680 = {}
        # Getting the type of 'exception_to_nan' (line 1329)
        exception_to_nan_548670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1329, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1329)
        exception_to_nan_call_result_548681 = invoke(stypy.reporting.localization.Localization(__file__, 1329, 28), exception_to_nan_548670, *[_stypy_temp_lambda_409_548679], **kwargs_548680)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1330)
        list_548682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1330)
        # Adding element type (line 1330)
        
        # Call to Arg(...): (line 1330)
        # Processing the call arguments (line 1330)
        float_548684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 33), 'float')
        float_548685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1330, 40), 'float')
        # Processing the call keyword arguments (line 1330)
        kwargs_548686 = {}
        # Getting the type of 'Arg' (line 1330)
        Arg_548683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1330)
        Arg_call_result_548687 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 29), Arg_548683, *[float_548684, float_548685], **kwargs_548686)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1330, 28), list_548682, Arg_call_result_548687)
        # Adding element type (line 1330)
        
        # Call to Arg(...): (line 1330)
        # Processing the call keyword arguments (line 1330)
        kwargs_548689 = {}
        # Getting the type of 'Arg' (line 1330)
        Arg_548688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1330, 47), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1330)
        Arg_call_result_548690 = invoke(stypy.reporting.localization.Localization(__file__, 1330, 47), Arg_548688, *[], **kwargs_548689)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1330, 28), list_548682, Arg_call_result_548690)
        
        # Processing the call keyword arguments (line 1328)
        kwargs_548691 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1328)
        assert_mpmath_equal_548667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1328, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1328)
        assert_mpmath_equal_call_result_548692 = invoke(stypy.reporting.localization.Localization(__file__, 1328, 8), assert_mpmath_equal_548667, *[hankel2_548669, exception_to_nan_call_result_548681, list_548682], **kwargs_548691)
        
        
        # ################# End of 'test_hankel2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hankel2' in the type store
        # Getting the type of 'stypy_return_type' (line 1327)
        stypy_return_type_548693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1327, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548693)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hankel2'
        return stypy_return_type_548693


    @norecursion
    def test_hermite(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hermite'
        module_type_store = module_type_store.open_function_context('test_hermite', 1332, 4, False)
        # Assigning a type to the variable 'self' (line 1333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1333, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hermite')
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hermite.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hermite', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hermite', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hermite(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1334)
        # Processing the call arguments (line 1334)

        @norecursion
        def _stypy_temp_lambda_410(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_410'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_410', 1334, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_410.stypy_localization = localization
            _stypy_temp_lambda_410.stypy_type_of_self = None
            _stypy_temp_lambda_410.stypy_type_store = module_type_store
            _stypy_temp_lambda_410.stypy_function_name = '_stypy_temp_lambda_410'
            _stypy_temp_lambda_410.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_410.stypy_varargs_param_name = None
            _stypy_temp_lambda_410.stypy_kwargs_param_name = None
            _stypy_temp_lambda_410.stypy_call_defaults = defaults
            _stypy_temp_lambda_410.stypy_call_varargs = varargs
            _stypy_temp_lambda_410.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_410', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_410', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_hermite(...): (line 1334)
            # Processing the call arguments (line 1334)
            
            # Call to int(...): (line 1334)
            # Processing the call arguments (line 1334)
            # Getting the type of 'n' (line 1334)
            n_548698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 61), 'n', False)
            # Processing the call keyword arguments (line 1334)
            kwargs_548699 = {}
            # Getting the type of 'int' (line 1334)
            int_548697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 57), 'int', False)
            # Calling int(args, kwargs) (line 1334)
            int_call_result_548700 = invoke(stypy.reporting.localization.Localization(__file__, 1334, 57), int_548697, *[n_548698], **kwargs_548699)
            
            # Getting the type of 'x' (line 1334)
            x_548701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 65), 'x', False)
            # Processing the call keyword arguments (line 1334)
            kwargs_548702 = {}
            # Getting the type of 'sc' (line 1334)
            sc_548695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 41), 'sc', False)
            # Obtaining the member 'eval_hermite' of a type (line 1334)
            eval_hermite_548696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1334, 41), sc_548695, 'eval_hermite')
            # Calling eval_hermite(args, kwargs) (line 1334)
            eval_hermite_call_result_548703 = invoke(stypy.reporting.localization.Localization(__file__, 1334, 41), eval_hermite_548696, *[int_call_result_548700, x_548701], **kwargs_548702)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1334)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1334, 28), 'stypy_return_type', eval_hermite_call_result_548703)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_410' in the type store
            # Getting the type of 'stypy_return_type' (line 1334)
            stypy_return_type_548704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548704)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_410'
            return stypy_return_type_548704

        # Assigning a type to the variable '_stypy_temp_lambda_410' (line 1334)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1334, 28), '_stypy_temp_lambda_410', _stypy_temp_lambda_410)
        # Getting the type of '_stypy_temp_lambda_410' (line 1334)
        _stypy_temp_lambda_410_548705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 28), '_stypy_temp_lambda_410')
        
        # Call to exception_to_nan(...): (line 1335)
        # Processing the call arguments (line 1335)
        # Getting the type of 'mpmath' (line 1335)
        mpmath_548707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 45), 'mpmath', False)
        # Obtaining the member 'hermite' of a type (line 1335)
        hermite_548708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1335, 45), mpmath_548707, 'hermite')
        # Processing the call keyword arguments (line 1335)
        kwargs_548709 = {}
        # Getting the type of 'exception_to_nan' (line 1335)
        exception_to_nan_548706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1335, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1335)
        exception_to_nan_call_result_548710 = invoke(stypy.reporting.localization.Localization(__file__, 1335, 28), exception_to_nan_548706, *[hermite_548708], **kwargs_548709)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1336)
        list_548711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1336)
        # Adding element type (line 1336)
        
        # Call to IntArg(...): (line 1336)
        # Processing the call arguments (line 1336)
        int_548713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 36), 'int')
        int_548714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1336, 39), 'int')
        # Processing the call keyword arguments (line 1336)
        kwargs_548715 = {}
        # Getting the type of 'IntArg' (line 1336)
        IntArg_548712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1336)
        IntArg_call_result_548716 = invoke(stypy.reporting.localization.Localization(__file__, 1336, 29), IntArg_548712, *[int_548713, int_548714], **kwargs_548715)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1336, 28), list_548711, IntArg_call_result_548716)
        # Adding element type (line 1336)
        
        # Call to Arg(...): (line 1336)
        # Processing the call keyword arguments (line 1336)
        kwargs_548718 = {}
        # Getting the type of 'Arg' (line 1336)
        Arg_548717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1336, 47), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1336)
        Arg_call_result_548719 = invoke(stypy.reporting.localization.Localization(__file__, 1336, 47), Arg_548717, *[], **kwargs_548718)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1336, 28), list_548711, Arg_call_result_548719)
        
        # Processing the call keyword arguments (line 1334)
        kwargs_548720 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1334)
        assert_mpmath_equal_548694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1334, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1334)
        assert_mpmath_equal_call_result_548721 = invoke(stypy.reporting.localization.Localization(__file__, 1334, 8), assert_mpmath_equal_548694, *[_stypy_temp_lambda_410_548705, exception_to_nan_call_result_548710, list_548711], **kwargs_548720)
        
        
        # ################# End of 'test_hermite(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hermite' in the type store
        # Getting the type of 'stypy_return_type' (line 1332)
        stypy_return_type_548722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1332, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548722)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hermite'
        return stypy_return_type_548722


    @norecursion
    def test_hyp0f1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hyp0f1'
        module_type_store = module_type_store.open_function_context('test_hyp0f1', 1340, 4, False)
        # Assigning a type to the variable 'self' (line 1341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1341, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hyp0f1')
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hyp0f1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hyp0f1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hyp0f1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hyp0f1(...)' code ##################

        
        # Assigning a Call to a Name (line 1342):
        
        # Assigning a Call to a Name (line 1342):
        
        # Call to dict(...): (line 1342)
        # Processing the call keyword arguments (line 1342)
        int_548724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1342, 26), 'int')
        keyword_548725 = int_548724
        int_548726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1342, 40), 'int')
        keyword_548727 = int_548726
        kwargs_548728 = {'maxprec': keyword_548725, 'maxterms': keyword_548727}
        # Getting the type of 'dict' (line 1342)
        dict_548723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1342, 13), 'dict', False)
        # Calling dict(args, kwargs) (line 1342)
        dict_call_result_548729 = invoke(stypy.reporting.localization.Localization(__file__, 1342, 13), dict_548723, *[], **kwargs_548728)
        
        # Assigning a type to the variable 'KW' (line 1342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1342, 8), 'KW', dict_call_result_548729)
        
        # Call to assert_mpmath_equal(...): (line 1344)
        # Processing the call arguments (line 1344)
        # Getting the type of 'sc' (line 1344)
        sc_548731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 28), 'sc', False)
        # Obtaining the member 'hyp0f1' of a type (line 1344)
        hyp0f1_548732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1344, 28), sc_548731, 'hyp0f1')

        @norecursion
        def _stypy_temp_lambda_411(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_411'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_411', 1345, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_411.stypy_localization = localization
            _stypy_temp_lambda_411.stypy_type_of_self = None
            _stypy_temp_lambda_411.stypy_type_store = module_type_store
            _stypy_temp_lambda_411.stypy_function_name = '_stypy_temp_lambda_411'
            _stypy_temp_lambda_411.stypy_param_names_list = ['a', 'x']
            _stypy_temp_lambda_411.stypy_varargs_param_name = None
            _stypy_temp_lambda_411.stypy_kwargs_param_name = None
            _stypy_temp_lambda_411.stypy_call_defaults = defaults
            _stypy_temp_lambda_411.stypy_call_varargs = varargs
            _stypy_temp_lambda_411.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_411', ['a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_411', ['a', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp0f1(...): (line 1345)
            # Processing the call arguments (line 1345)
            # Getting the type of 'a' (line 1345)
            a_548735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 55), 'a', False)
            # Getting the type of 'x' (line 1345)
            x_548736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 58), 'x', False)
            # Processing the call keyword arguments (line 1345)
            # Getting the type of 'KW' (line 1345)
            KW_548737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 63), 'KW', False)
            kwargs_548738 = {'KW_548737': KW_548737}
            # Getting the type of 'mpmath' (line 1345)
            mpmath_548733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 41), 'mpmath', False)
            # Obtaining the member 'hyp0f1' of a type (line 1345)
            hyp0f1_548734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1345, 41), mpmath_548733, 'hyp0f1')
            # Calling hyp0f1(args, kwargs) (line 1345)
            hyp0f1_call_result_548739 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 41), hyp0f1_548734, *[a_548735, x_548736], **kwargs_548738)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1345)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1345, 28), 'stypy_return_type', hyp0f1_call_result_548739)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_411' in the type store
            # Getting the type of 'stypy_return_type' (line 1345)
            stypy_return_type_548740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548740)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_411'
            return stypy_return_type_548740

        # Assigning a type to the variable '_stypy_temp_lambda_411' (line 1345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1345, 28), '_stypy_temp_lambda_411', _stypy_temp_lambda_411)
        # Getting the type of '_stypy_temp_lambda_411' (line 1345)
        _stypy_temp_lambda_411_548741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 28), '_stypy_temp_lambda_411')
        
        # Obtaining an instance of the builtin type 'list' (line 1346)
        list_548742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1346)
        # Adding element type (line 1346)
        
        # Call to Arg(...): (line 1346)
        # Processing the call arguments (line 1346)
        float_548744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 33), 'float')
        float_548745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 39), 'float')
        # Processing the call keyword arguments (line 1346)
        kwargs_548746 = {}
        # Getting the type of 'Arg' (line 1346)
        Arg_548743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1346, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1346)
        Arg_call_result_548747 = invoke(stypy.reporting.localization.Localization(__file__, 1346, 29), Arg_548743, *[float_548744, float_548745], **kwargs_548746)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1346, 28), list_548742, Arg_call_result_548747)
        # Adding element type (line 1346)
        
        # Call to Arg(...): (line 1346)
        # Processing the call arguments (line 1346)
        int_548749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 49), 'int')
        float_548750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 52), 'float')
        # Processing the call keyword arguments (line 1346)
        kwargs_548751 = {}
        # Getting the type of 'Arg' (line 1346)
        Arg_548748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1346, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1346)
        Arg_call_result_548752 = invoke(stypy.reporting.localization.Localization(__file__, 1346, 45), Arg_548748, *[int_548749, float_548750], **kwargs_548751)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1346, 28), list_548742, Arg_call_result_548752)
        
        # Processing the call keyword arguments (line 1344)
        int_548753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 30), 'int')
        keyword_548754 = int_548753
        kwargs_548755 = {'n': keyword_548754}
        # Getting the type of 'assert_mpmath_equal' (line 1344)
        assert_mpmath_equal_548730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1344)
        assert_mpmath_equal_call_result_548756 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 8), assert_mpmath_equal_548730, *[hyp0f1_548732, _stypy_temp_lambda_411_548741, list_548742], **kwargs_548755)
        
        
        # ################# End of 'test_hyp0f1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hyp0f1' in the type store
        # Getting the type of 'stypy_return_type' (line 1340)
        stypy_return_type_548757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1340, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548757)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hyp0f1'
        return stypy_return_type_548757


    @norecursion
    def test_hyp0f1_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hyp0f1_complex'
        module_type_store = module_type_store.open_function_context('test_hyp0f1_complex', 1353, 4, False)
        # Assigning a type to the variable 'self' (line 1354)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1354, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hyp0f1_complex')
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hyp0f1_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hyp0f1_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hyp0f1_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hyp0f1_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1354)
        # Processing the call arguments (line 1354)

        @norecursion
        def _stypy_temp_lambda_412(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_412'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_412', 1354, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_412.stypy_localization = localization
            _stypy_temp_lambda_412.stypy_type_of_self = None
            _stypy_temp_lambda_412.stypy_type_store = module_type_store
            _stypy_temp_lambda_412.stypy_function_name = '_stypy_temp_lambda_412'
            _stypy_temp_lambda_412.stypy_param_names_list = ['a', 'z']
            _stypy_temp_lambda_412.stypy_varargs_param_name = None
            _stypy_temp_lambda_412.stypy_kwargs_param_name = None
            _stypy_temp_lambda_412.stypy_call_defaults = defaults
            _stypy_temp_lambda_412.stypy_call_varargs = varargs
            _stypy_temp_lambda_412.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_412', ['a', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_412', ['a', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp0f1(...): (line 1354)
            # Processing the call arguments (line 1354)
            # Getting the type of 'a' (line 1354)
            a_548761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 51), 'a', False)
            # Obtaining the member 'real' of a type (line 1354)
            real_548762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1354, 51), a_548761, 'real')
            # Getting the type of 'z' (line 1354)
            z_548763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 59), 'z', False)
            # Processing the call keyword arguments (line 1354)
            kwargs_548764 = {}
            # Getting the type of 'sc' (line 1354)
            sc_548759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 41), 'sc', False)
            # Obtaining the member 'hyp0f1' of a type (line 1354)
            hyp0f1_548760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1354, 41), sc_548759, 'hyp0f1')
            # Calling hyp0f1(args, kwargs) (line 1354)
            hyp0f1_call_result_548765 = invoke(stypy.reporting.localization.Localization(__file__, 1354, 41), hyp0f1_548760, *[real_548762, z_548763], **kwargs_548764)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1354)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1354, 28), 'stypy_return_type', hyp0f1_call_result_548765)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_412' in the type store
            # Getting the type of 'stypy_return_type' (line 1354)
            stypy_return_type_548766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548766)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_412'
            return stypy_return_type_548766

        # Assigning a type to the variable '_stypy_temp_lambda_412' (line 1354)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1354, 28), '_stypy_temp_lambda_412', _stypy_temp_lambda_412)
        # Getting the type of '_stypy_temp_lambda_412' (line 1354)
        _stypy_temp_lambda_412_548767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 28), '_stypy_temp_lambda_412')
        
        # Call to exception_to_nan(...): (line 1355)
        # Processing the call arguments (line 1355)

        @norecursion
        def _stypy_temp_lambda_413(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_413'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_413', 1355, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_413.stypy_localization = localization
            _stypy_temp_lambda_413.stypy_type_of_self = None
            _stypy_temp_lambda_413.stypy_type_store = module_type_store
            _stypy_temp_lambda_413.stypy_function_name = '_stypy_temp_lambda_413'
            _stypy_temp_lambda_413.stypy_param_names_list = ['a', 'x']
            _stypy_temp_lambda_413.stypy_varargs_param_name = None
            _stypy_temp_lambda_413.stypy_kwargs_param_name = None
            _stypy_temp_lambda_413.stypy_call_defaults = defaults
            _stypy_temp_lambda_413.stypy_call_varargs = varargs
            _stypy_temp_lambda_413.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_413', ['a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_413', ['a', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp0f1(...): (line 1355)
            # Processing the call arguments (line 1355)
            # Getting the type of 'a' (line 1355)
            a_548771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 72), 'a', False)
            # Getting the type of 'x' (line 1355)
            x_548772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 75), 'x', False)
            # Processing the call keyword arguments (line 1355)
            # Getting the type of 'HYPERKW' (line 1355)
            HYPERKW_548773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 80), 'HYPERKW', False)
            kwargs_548774 = {'HYPERKW_548773': HYPERKW_548773}
            # Getting the type of 'mpmath' (line 1355)
            mpmath_548769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 58), 'mpmath', False)
            # Obtaining the member 'hyp0f1' of a type (line 1355)
            hyp0f1_548770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1355, 58), mpmath_548769, 'hyp0f1')
            # Calling hyp0f1(args, kwargs) (line 1355)
            hyp0f1_call_result_548775 = invoke(stypy.reporting.localization.Localization(__file__, 1355, 58), hyp0f1_548770, *[a_548771, x_548772], **kwargs_548774)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1355)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1355, 45), 'stypy_return_type', hyp0f1_call_result_548775)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_413' in the type store
            # Getting the type of 'stypy_return_type' (line 1355)
            stypy_return_type_548776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548776)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_413'
            return stypy_return_type_548776

        # Assigning a type to the variable '_stypy_temp_lambda_413' (line 1355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1355, 45), '_stypy_temp_lambda_413', _stypy_temp_lambda_413)
        # Getting the type of '_stypy_temp_lambda_413' (line 1355)
        _stypy_temp_lambda_413_548777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 45), '_stypy_temp_lambda_413')
        # Processing the call keyword arguments (line 1355)
        kwargs_548778 = {}
        # Getting the type of 'exception_to_nan' (line 1355)
        exception_to_nan_548768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1355, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1355)
        exception_to_nan_call_result_548779 = invoke(stypy.reporting.localization.Localization(__file__, 1355, 28), exception_to_nan_548768, *[_stypy_temp_lambda_413_548777], **kwargs_548778)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1356)
        list_548780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1356)
        # Adding element type (line 1356)
        
        # Call to Arg(...): (line 1356)
        # Processing the call arguments (line 1356)
        int_548782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 33), 'int')
        int_548783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 38), 'int')
        # Processing the call keyword arguments (line 1356)
        kwargs_548784 = {}
        # Getting the type of 'Arg' (line 1356)
        Arg_548781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1356)
        Arg_call_result_548785 = invoke(stypy.reporting.localization.Localization(__file__, 1356, 29), Arg_548781, *[int_548782, int_548783], **kwargs_548784)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1356, 28), list_548780, Arg_call_result_548785)
        # Adding element type (line 1356)
        
        # Call to ComplexArg(...): (line 1356)
        # Processing the call arguments (line 1356)
        
        # Call to complex(...): (line 1356)
        # Processing the call arguments (line 1356)
        int_548788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 62), 'int')
        int_548789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 68), 'int')
        # Processing the call keyword arguments (line 1356)
        kwargs_548790 = {}
        # Getting the type of 'complex' (line 1356)
        complex_548787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 54), 'complex', False)
        # Calling complex(args, kwargs) (line 1356)
        complex_call_result_548791 = invoke(stypy.reporting.localization.Localization(__file__, 1356, 54), complex_548787, *[int_548788, int_548789], **kwargs_548790)
        
        
        # Call to complex(...): (line 1356)
        # Processing the call arguments (line 1356)
        int_548793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 83), 'int')
        int_548794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 88), 'int')
        # Processing the call keyword arguments (line 1356)
        kwargs_548795 = {}
        # Getting the type of 'complex' (line 1356)
        complex_548792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 75), 'complex', False)
        # Calling complex(args, kwargs) (line 1356)
        complex_call_result_548796 = invoke(stypy.reporting.localization.Localization(__file__, 1356, 75), complex_548792, *[int_548793, int_548794], **kwargs_548795)
        
        # Processing the call keyword arguments (line 1356)
        kwargs_548797 = {}
        # Getting the type of 'ComplexArg' (line 1356)
        ComplexArg_548786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 43), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1356)
        ComplexArg_call_result_548798 = invoke(stypy.reporting.localization.Localization(__file__, 1356, 43), ComplexArg_548786, *[complex_call_result_548791, complex_call_result_548796], **kwargs_548797)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1356, 28), list_548780, ComplexArg_call_result_548798)
        
        # Processing the call keyword arguments (line 1354)
        kwargs_548799 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1354)
        assert_mpmath_equal_548758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1354)
        assert_mpmath_equal_call_result_548800 = invoke(stypy.reporting.localization.Localization(__file__, 1354, 8), assert_mpmath_equal_548758, *[_stypy_temp_lambda_412_548767, exception_to_nan_call_result_548779, list_548780], **kwargs_548799)
        
        
        # ################# End of 'test_hyp0f1_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hyp0f1_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1353)
        stypy_return_type_548801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1353, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548801)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hyp0f1_complex'
        return stypy_return_type_548801


    @norecursion
    def test_hyp1f1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hyp1f1'
        module_type_store = module_type_store.open_function_context('test_hyp1f1', 1361, 4, False)
        # Assigning a type to the variable 'self' (line 1362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1362, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hyp1f1')
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hyp1f1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hyp1f1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hyp1f1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hyp1f1(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1363)
        # Processing the call arguments (line 1363)
        
        # Call to inf_to_nan(...): (line 1363)
        # Processing the call arguments (line 1363)
        # Getting the type of 'sc' (line 1363)
        sc_548804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 39), 'sc', False)
        # Obtaining the member 'hyp1f1' of a type (line 1363)
        hyp1f1_548805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1363, 39), sc_548804, 'hyp1f1')
        # Processing the call keyword arguments (line 1363)
        kwargs_548806 = {}
        # Getting the type of 'inf_to_nan' (line 1363)
        inf_to_nan_548803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 28), 'inf_to_nan', False)
        # Calling inf_to_nan(args, kwargs) (line 1363)
        inf_to_nan_call_result_548807 = invoke(stypy.reporting.localization.Localization(__file__, 1363, 28), inf_to_nan_548803, *[hyp1f1_548805], **kwargs_548806)
        
        
        # Call to exception_to_nan(...): (line 1364)
        # Processing the call arguments (line 1364)

        @norecursion
        def _stypy_temp_lambda_414(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_414'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_414', 1364, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_414.stypy_localization = localization
            _stypy_temp_lambda_414.stypy_type_of_self = None
            _stypy_temp_lambda_414.stypy_type_store = module_type_store
            _stypy_temp_lambda_414.stypy_function_name = '_stypy_temp_lambda_414'
            _stypy_temp_lambda_414.stypy_param_names_list = ['a', 'b', 'x']
            _stypy_temp_lambda_414.stypy_varargs_param_name = None
            _stypy_temp_lambda_414.stypy_kwargs_param_name = None
            _stypy_temp_lambda_414.stypy_call_defaults = defaults
            _stypy_temp_lambda_414.stypy_call_varargs = varargs
            _stypy_temp_lambda_414.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_414', ['a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_414', ['a', 'b', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp1f1(...): (line 1364)
            # Processing the call arguments (line 1364)
            # Getting the type of 'a' (line 1364)
            a_548811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 75), 'a', False)
            # Getting the type of 'b' (line 1364)
            b_548812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 78), 'b', False)
            # Getting the type of 'x' (line 1364)
            x_548813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 81), 'x', False)
            # Processing the call keyword arguments (line 1364)
            # Getting the type of 'HYPERKW' (line 1364)
            HYPERKW_548814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 86), 'HYPERKW', False)
            kwargs_548815 = {'HYPERKW_548814': HYPERKW_548814}
            # Getting the type of 'mpmath' (line 1364)
            mpmath_548809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 61), 'mpmath', False)
            # Obtaining the member 'hyp1f1' of a type (line 1364)
            hyp1f1_548810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1364, 61), mpmath_548809, 'hyp1f1')
            # Calling hyp1f1(args, kwargs) (line 1364)
            hyp1f1_call_result_548816 = invoke(stypy.reporting.localization.Localization(__file__, 1364, 61), hyp1f1_548810, *[a_548811, b_548812, x_548813], **kwargs_548815)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1364)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1364, 45), 'stypy_return_type', hyp1f1_call_result_548816)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_414' in the type store
            # Getting the type of 'stypy_return_type' (line 1364)
            stypy_return_type_548817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548817)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_414'
            return stypy_return_type_548817

        # Assigning a type to the variable '_stypy_temp_lambda_414' (line 1364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1364, 45), '_stypy_temp_lambda_414', _stypy_temp_lambda_414)
        # Getting the type of '_stypy_temp_lambda_414' (line 1364)
        _stypy_temp_lambda_414_548818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 45), '_stypy_temp_lambda_414')
        # Processing the call keyword arguments (line 1364)
        kwargs_548819 = {}
        # Getting the type of 'exception_to_nan' (line 1364)
        exception_to_nan_548808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1364)
        exception_to_nan_call_result_548820 = invoke(stypy.reporting.localization.Localization(__file__, 1364, 28), exception_to_nan_548808, *[_stypy_temp_lambda_414_548818], **kwargs_548819)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1365)
        list_548821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1365)
        # Adding element type (line 1365)
        
        # Call to Arg(...): (line 1365)
        # Processing the call arguments (line 1365)
        float_548823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 33), 'float')
        float_548824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 39), 'float')
        # Processing the call keyword arguments (line 1365)
        kwargs_548825 = {}
        # Getting the type of 'Arg' (line 1365)
        Arg_548822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1365, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1365)
        Arg_call_result_548826 = invoke(stypy.reporting.localization.Localization(__file__, 1365, 29), Arg_548822, *[float_548823, float_548824], **kwargs_548825)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 28), list_548821, Arg_call_result_548826)
        # Adding element type (line 1365)
        
        # Call to Arg(...): (line 1365)
        # Processing the call arguments (line 1365)
        float_548828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 49), 'float')
        float_548829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 55), 'float')
        # Processing the call keyword arguments (line 1365)
        kwargs_548830 = {}
        # Getting the type of 'Arg' (line 1365)
        Arg_548827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1365, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1365)
        Arg_call_result_548831 = invoke(stypy.reporting.localization.Localization(__file__, 1365, 45), Arg_548827, *[float_548828, float_548829], **kwargs_548830)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 28), list_548821, Arg_call_result_548831)
        # Adding element type (line 1365)
        
        # Call to Arg(...): (line 1365)
        # Processing the call keyword arguments (line 1365)
        kwargs_548833 = {}
        # Getting the type of 'Arg' (line 1365)
        Arg_548832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1365, 61), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1365)
        Arg_call_result_548834 = invoke(stypy.reporting.localization.Localization(__file__, 1365, 61), Arg_548832, *[], **kwargs_548833)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 28), list_548821, Arg_call_result_548834)
        
        # Processing the call keyword arguments (line 1363)
        int_548835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 30), 'int')
        keyword_548836 = int_548835
        kwargs_548837 = {'n': keyword_548836}
        # Getting the type of 'assert_mpmath_equal' (line 1363)
        assert_mpmath_equal_548802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1363)
        assert_mpmath_equal_call_result_548838 = invoke(stypy.reporting.localization.Localization(__file__, 1363, 8), assert_mpmath_equal_548802, *[inf_to_nan_call_result_548807, exception_to_nan_call_result_548820, list_548821], **kwargs_548837)
        
        
        # ################# End of 'test_hyp1f1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hyp1f1' in the type store
        # Getting the type of 'stypy_return_type' (line 1361)
        stypy_return_type_548839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1361, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548839)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hyp1f1'
        return stypy_return_type_548839


    @norecursion
    def test_hyp1f1_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hyp1f1_complex'
        module_type_store = module_type_store.open_function_context('test_hyp1f1_complex', 1368, 4, False)
        # Assigning a type to the variable 'self' (line 1369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1369, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hyp1f1_complex')
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hyp1f1_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hyp1f1_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hyp1f1_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hyp1f1_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1370)
        # Processing the call arguments (line 1370)
        
        # Call to inf_to_nan(...): (line 1370)
        # Processing the call arguments (line 1370)

        @norecursion
        def _stypy_temp_lambda_415(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_415'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_415', 1370, 39, True)
            # Passed parameters checking function
            _stypy_temp_lambda_415.stypy_localization = localization
            _stypy_temp_lambda_415.stypy_type_of_self = None
            _stypy_temp_lambda_415.stypy_type_store = module_type_store
            _stypy_temp_lambda_415.stypy_function_name = '_stypy_temp_lambda_415'
            _stypy_temp_lambda_415.stypy_param_names_list = ['a', 'b', 'x']
            _stypy_temp_lambda_415.stypy_varargs_param_name = None
            _stypy_temp_lambda_415.stypy_kwargs_param_name = None
            _stypy_temp_lambda_415.stypy_call_defaults = defaults
            _stypy_temp_lambda_415.stypy_call_varargs = varargs
            _stypy_temp_lambda_415.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_415', ['a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_415', ['a', 'b', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp1f1(...): (line 1370)
            # Processing the call arguments (line 1370)
            # Getting the type of 'a' (line 1370)
            a_548844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 65), 'a', False)
            # Obtaining the member 'real' of a type (line 1370)
            real_548845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 65), a_548844, 'real')
            # Getting the type of 'b' (line 1370)
            b_548846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 73), 'b', False)
            # Obtaining the member 'real' of a type (line 1370)
            real_548847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 73), b_548846, 'real')
            # Getting the type of 'x' (line 1370)
            x_548848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 81), 'x', False)
            # Processing the call keyword arguments (line 1370)
            kwargs_548849 = {}
            # Getting the type of 'sc' (line 1370)
            sc_548842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 55), 'sc', False)
            # Obtaining the member 'hyp1f1' of a type (line 1370)
            hyp1f1_548843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 55), sc_548842, 'hyp1f1')
            # Calling hyp1f1(args, kwargs) (line 1370)
            hyp1f1_call_result_548850 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 55), hyp1f1_548843, *[real_548845, real_548847, x_548848], **kwargs_548849)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1370)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 39), 'stypy_return_type', hyp1f1_call_result_548850)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_415' in the type store
            # Getting the type of 'stypy_return_type' (line 1370)
            stypy_return_type_548851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 39), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548851)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_415'
            return stypy_return_type_548851

        # Assigning a type to the variable '_stypy_temp_lambda_415' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 39), '_stypy_temp_lambda_415', _stypy_temp_lambda_415)
        # Getting the type of '_stypy_temp_lambda_415' (line 1370)
        _stypy_temp_lambda_415_548852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 39), '_stypy_temp_lambda_415')
        # Processing the call keyword arguments (line 1370)
        kwargs_548853 = {}
        # Getting the type of 'inf_to_nan' (line 1370)
        inf_to_nan_548841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 28), 'inf_to_nan', False)
        # Calling inf_to_nan(args, kwargs) (line 1370)
        inf_to_nan_call_result_548854 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 28), inf_to_nan_548841, *[_stypy_temp_lambda_415_548852], **kwargs_548853)
        
        
        # Call to exception_to_nan(...): (line 1371)
        # Processing the call arguments (line 1371)

        @norecursion
        def _stypy_temp_lambda_416(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_416'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_416', 1371, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_416.stypy_localization = localization
            _stypy_temp_lambda_416.stypy_type_of_self = None
            _stypy_temp_lambda_416.stypy_type_store = module_type_store
            _stypy_temp_lambda_416.stypy_function_name = '_stypy_temp_lambda_416'
            _stypy_temp_lambda_416.stypy_param_names_list = ['a', 'b', 'x']
            _stypy_temp_lambda_416.stypy_varargs_param_name = None
            _stypy_temp_lambda_416.stypy_kwargs_param_name = None
            _stypy_temp_lambda_416.stypy_call_defaults = defaults
            _stypy_temp_lambda_416.stypy_call_varargs = varargs
            _stypy_temp_lambda_416.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_416', ['a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_416', ['a', 'b', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp1f1(...): (line 1371)
            # Processing the call arguments (line 1371)
            # Getting the type of 'a' (line 1371)
            a_548858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 75), 'a', False)
            # Getting the type of 'b' (line 1371)
            b_548859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 78), 'b', False)
            # Getting the type of 'x' (line 1371)
            x_548860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 81), 'x', False)
            # Processing the call keyword arguments (line 1371)
            # Getting the type of 'HYPERKW' (line 1371)
            HYPERKW_548861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 86), 'HYPERKW', False)
            kwargs_548862 = {'HYPERKW_548861': HYPERKW_548861}
            # Getting the type of 'mpmath' (line 1371)
            mpmath_548856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 61), 'mpmath', False)
            # Obtaining the member 'hyp1f1' of a type (line 1371)
            hyp1f1_548857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1371, 61), mpmath_548856, 'hyp1f1')
            # Calling hyp1f1(args, kwargs) (line 1371)
            hyp1f1_call_result_548863 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 61), hyp1f1_548857, *[a_548858, b_548859, x_548860], **kwargs_548862)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1371)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1371, 45), 'stypy_return_type', hyp1f1_call_result_548863)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_416' in the type store
            # Getting the type of 'stypy_return_type' (line 1371)
            stypy_return_type_548864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548864)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_416'
            return stypy_return_type_548864

        # Assigning a type to the variable '_stypy_temp_lambda_416' (line 1371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1371, 45), '_stypy_temp_lambda_416', _stypy_temp_lambda_416)
        # Getting the type of '_stypy_temp_lambda_416' (line 1371)
        _stypy_temp_lambda_416_548865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 45), '_stypy_temp_lambda_416')
        # Processing the call keyword arguments (line 1371)
        kwargs_548866 = {}
        # Getting the type of 'exception_to_nan' (line 1371)
        exception_to_nan_548855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1371)
        exception_to_nan_call_result_548867 = invoke(stypy.reporting.localization.Localization(__file__, 1371, 28), exception_to_nan_548855, *[_stypy_temp_lambda_416_548865], **kwargs_548866)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1372)
        list_548868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1372)
        # Adding element type (line 1372)
        
        # Call to Arg(...): (line 1372)
        # Processing the call arguments (line 1372)
        float_548870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 33), 'float')
        float_548871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 39), 'float')
        # Processing the call keyword arguments (line 1372)
        kwargs_548872 = {}
        # Getting the type of 'Arg' (line 1372)
        Arg_548869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1372)
        Arg_call_result_548873 = invoke(stypy.reporting.localization.Localization(__file__, 1372, 29), Arg_548869, *[float_548870, float_548871], **kwargs_548872)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1372, 28), list_548868, Arg_call_result_548873)
        # Adding element type (line 1372)
        
        # Call to Arg(...): (line 1372)
        # Processing the call arguments (line 1372)
        float_548875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 49), 'float')
        float_548876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1372, 55), 'float')
        # Processing the call keyword arguments (line 1372)
        kwargs_548877 = {}
        # Getting the type of 'Arg' (line 1372)
        Arg_548874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1372)
        Arg_call_result_548878 = invoke(stypy.reporting.localization.Localization(__file__, 1372, 45), Arg_548874, *[float_548875, float_548876], **kwargs_548877)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1372, 28), list_548868, Arg_call_result_548878)
        # Adding element type (line 1372)
        
        # Call to ComplexArg(...): (line 1372)
        # Processing the call keyword arguments (line 1372)
        kwargs_548880 = {}
        # Getting the type of 'ComplexArg' (line 1372)
        ComplexArg_548879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 61), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1372)
        ComplexArg_call_result_548881 = invoke(stypy.reporting.localization.Localization(__file__, 1372, 61), ComplexArg_548879, *[], **kwargs_548880)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1372, 28), list_548868, ComplexArg_call_result_548881)
        
        # Processing the call keyword arguments (line 1370)
        int_548882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 30), 'int')
        keyword_548883 = int_548882
        kwargs_548884 = {'n': keyword_548883}
        # Getting the type of 'assert_mpmath_equal' (line 1370)
        assert_mpmath_equal_548840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1370)
        assert_mpmath_equal_call_result_548885 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 8), assert_mpmath_equal_548840, *[inf_to_nan_call_result_548854, exception_to_nan_call_result_548867, list_548868], **kwargs_548884)
        
        
        # ################# End of 'test_hyp1f1_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hyp1f1_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1368)
        stypy_return_type_548886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548886)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hyp1f1_complex'
        return stypy_return_type_548886


    @norecursion
    def test_hyp1f2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hyp1f2'
        module_type_store = module_type_store.open_function_context('test_hyp1f2', 1375, 4, False)
        # Assigning a type to the variable 'self' (line 1376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1376, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hyp1f2')
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hyp1f2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hyp1f2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hyp1f2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hyp1f2(...)' code ##################


        @norecursion
        def hyp1f2(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'hyp1f2'
            module_type_store = module_type_store.open_function_context('hyp1f2', 1377, 8, False)
            
            # Passed parameters checking function
            hyp1f2.stypy_localization = localization
            hyp1f2.stypy_type_of_self = None
            hyp1f2.stypy_type_store = module_type_store
            hyp1f2.stypy_function_name = 'hyp1f2'
            hyp1f2.stypy_param_names_list = ['a', 'b', 'c', 'x']
            hyp1f2.stypy_varargs_param_name = None
            hyp1f2.stypy_kwargs_param_name = None
            hyp1f2.stypy_call_defaults = defaults
            hyp1f2.stypy_call_varargs = varargs
            hyp1f2.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'hyp1f2', ['a', 'b', 'c', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'hyp1f2', localization, ['a', 'b', 'c', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'hyp1f2(...)' code ##################

            
            # Assigning a Call to a Tuple (line 1378):
            
            # Assigning a Subscript to a Name (line 1378):
            
            # Obtaining the type of the subscript
            int_548887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 12), 'int')
            
            # Call to hyp1f2(...): (line 1378)
            # Processing the call arguments (line 1378)
            # Getting the type of 'a' (line 1378)
            a_548890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 31), 'a', False)
            # Getting the type of 'b' (line 1378)
            b_548891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 34), 'b', False)
            # Getting the type of 'c' (line 1378)
            c_548892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 37), 'c', False)
            # Getting the type of 'x' (line 1378)
            x_548893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 40), 'x', False)
            # Processing the call keyword arguments (line 1378)
            kwargs_548894 = {}
            # Getting the type of 'sc' (line 1378)
            sc_548888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 21), 'sc', False)
            # Obtaining the member 'hyp1f2' of a type (line 1378)
            hyp1f2_548889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 21), sc_548888, 'hyp1f2')
            # Calling hyp1f2(args, kwargs) (line 1378)
            hyp1f2_call_result_548895 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 21), hyp1f2_548889, *[a_548890, b_548891, c_548892, x_548893], **kwargs_548894)
            
            # Obtaining the member '__getitem__' of a type (line 1378)
            getitem___548896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 12), hyp1f2_call_result_548895, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1378)
            subscript_call_result_548897 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 12), getitem___548896, int_548887)
            
            # Assigning a type to the variable 'tuple_var_assignment_542796' (line 1378)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1378, 12), 'tuple_var_assignment_542796', subscript_call_result_548897)
            
            # Assigning a Subscript to a Name (line 1378):
            
            # Obtaining the type of the subscript
            int_548898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 12), 'int')
            
            # Call to hyp1f2(...): (line 1378)
            # Processing the call arguments (line 1378)
            # Getting the type of 'a' (line 1378)
            a_548901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 31), 'a', False)
            # Getting the type of 'b' (line 1378)
            b_548902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 34), 'b', False)
            # Getting the type of 'c' (line 1378)
            c_548903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 37), 'c', False)
            # Getting the type of 'x' (line 1378)
            x_548904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 40), 'x', False)
            # Processing the call keyword arguments (line 1378)
            kwargs_548905 = {}
            # Getting the type of 'sc' (line 1378)
            sc_548899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 21), 'sc', False)
            # Obtaining the member 'hyp1f2' of a type (line 1378)
            hyp1f2_548900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 21), sc_548899, 'hyp1f2')
            # Calling hyp1f2(args, kwargs) (line 1378)
            hyp1f2_call_result_548906 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 21), hyp1f2_548900, *[a_548901, b_548902, c_548903, x_548904], **kwargs_548905)
            
            # Obtaining the member '__getitem__' of a type (line 1378)
            getitem___548907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 12), hyp1f2_call_result_548906, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1378)
            subscript_call_result_548908 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 12), getitem___548907, int_548898)
            
            # Assigning a type to the variable 'tuple_var_assignment_542797' (line 1378)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1378, 12), 'tuple_var_assignment_542797', subscript_call_result_548908)
            
            # Assigning a Name to a Name (line 1378):
            # Getting the type of 'tuple_var_assignment_542796' (line 1378)
            tuple_var_assignment_542796_548909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 12), 'tuple_var_assignment_542796')
            # Assigning a type to the variable 'v' (line 1378)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1378, 12), 'v', tuple_var_assignment_542796_548909)
            
            # Assigning a Name to a Name (line 1378):
            # Getting the type of 'tuple_var_assignment_542797' (line 1378)
            tuple_var_assignment_542797_548910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 12), 'tuple_var_assignment_542797')
            # Assigning a type to the variable 'err' (line 1378)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1378, 15), 'err', tuple_var_assignment_542797_548910)
            
            
            
            # Call to abs(...): (line 1379)
            # Processing the call arguments (line 1379)
            # Getting the type of 'err' (line 1379)
            err_548912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 19), 'err', False)
            # Processing the call keyword arguments (line 1379)
            kwargs_548913 = {}
            # Getting the type of 'abs' (line 1379)
            abs_548911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1379)
            abs_call_result_548914 = invoke(stypy.reporting.localization.Localization(__file__, 1379, 15), abs_548911, *[err_548912], **kwargs_548913)
            
            
            # Call to max(...): (line 1379)
            # Processing the call arguments (line 1379)
            int_548916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1379, 30), 'int')
            
            # Call to abs(...): (line 1379)
            # Processing the call arguments (line 1379)
            # Getting the type of 'v' (line 1379)
            v_548918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 37), 'v', False)
            # Processing the call keyword arguments (line 1379)
            kwargs_548919 = {}
            # Getting the type of 'abs' (line 1379)
            abs_548917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 33), 'abs', False)
            # Calling abs(args, kwargs) (line 1379)
            abs_call_result_548920 = invoke(stypy.reporting.localization.Localization(__file__, 1379, 33), abs_548917, *[v_548918], **kwargs_548919)
            
            # Processing the call keyword arguments (line 1379)
            kwargs_548921 = {}
            # Getting the type of 'max' (line 1379)
            max_548915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 26), 'max', False)
            # Calling max(args, kwargs) (line 1379)
            max_call_result_548922 = invoke(stypy.reporting.localization.Localization(__file__, 1379, 26), max_548915, *[int_548916, abs_call_result_548920], **kwargs_548921)
            
            float_548923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1379, 43), 'float')
            # Applying the binary operator '*' (line 1379)
            result_mul_548924 = python_operator(stypy.reporting.localization.Localization(__file__, 1379, 26), '*', max_call_result_548922, float_548923)
            
            # Applying the binary operator '>' (line 1379)
            result_gt_548925 = python_operator(stypy.reporting.localization.Localization(__file__, 1379, 15), '>', abs_call_result_548914, result_mul_548924)
            
            # Testing the type of an if condition (line 1379)
            if_condition_548926 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1379, 12), result_gt_548925)
            # Assigning a type to the variable 'if_condition_548926' (line 1379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1379, 12), 'if_condition_548926', if_condition_548926)
            # SSA begins for if statement (line 1379)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1380)
            np_548927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1380)
            nan_548928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1380, 23), np_548927, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1380)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1380, 16), 'stypy_return_type', nan_548928)
            # SSA join for if statement (line 1379)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'v' (line 1381)
            v_548929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1381, 19), 'v')
            # Assigning a type to the variable 'stypy_return_type' (line 1381)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1381, 12), 'stypy_return_type', v_548929)
            
            # ################# End of 'hyp1f2(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'hyp1f2' in the type store
            # Getting the type of 'stypy_return_type' (line 1377)
            stypy_return_type_548930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1377, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548930)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'hyp1f2'
            return stypy_return_type_548930

        # Assigning a type to the variable 'hyp1f2' (line 1377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1377, 8), 'hyp1f2', hyp1f2)
        
        # Call to assert_mpmath_equal(...): (line 1382)
        # Processing the call arguments (line 1382)
        # Getting the type of 'hyp1f2' (line 1382)
        hyp1f2_548932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1382, 28), 'hyp1f2', False)
        
        # Call to exception_to_nan(...): (line 1383)
        # Processing the call arguments (line 1383)

        @norecursion
        def _stypy_temp_lambda_417(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_417'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_417', 1383, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_417.stypy_localization = localization
            _stypy_temp_lambda_417.stypy_type_of_self = None
            _stypy_temp_lambda_417.stypy_type_store = module_type_store
            _stypy_temp_lambda_417.stypy_function_name = '_stypy_temp_lambda_417'
            _stypy_temp_lambda_417.stypy_param_names_list = ['a', 'b', 'c', 'x']
            _stypy_temp_lambda_417.stypy_varargs_param_name = None
            _stypy_temp_lambda_417.stypy_kwargs_param_name = None
            _stypy_temp_lambda_417.stypy_call_defaults = defaults
            _stypy_temp_lambda_417.stypy_call_varargs = varargs
            _stypy_temp_lambda_417.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_417', ['a', 'b', 'c', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_417', ['a', 'b', 'c', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp1f2(...): (line 1383)
            # Processing the call arguments (line 1383)
            # Getting the type of 'a' (line 1383)
            a_548936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 78), 'a', False)
            # Getting the type of 'b' (line 1383)
            b_548937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 81), 'b', False)
            # Getting the type of 'c' (line 1383)
            c_548938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 84), 'c', False)
            # Getting the type of 'x' (line 1383)
            x_548939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 87), 'x', False)
            # Processing the call keyword arguments (line 1383)
            # Getting the type of 'HYPERKW' (line 1383)
            HYPERKW_548940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 92), 'HYPERKW', False)
            kwargs_548941 = {'HYPERKW_548940': HYPERKW_548940}
            # Getting the type of 'mpmath' (line 1383)
            mpmath_548934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 64), 'mpmath', False)
            # Obtaining the member 'hyp1f2' of a type (line 1383)
            hyp1f2_548935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1383, 64), mpmath_548934, 'hyp1f2')
            # Calling hyp1f2(args, kwargs) (line 1383)
            hyp1f2_call_result_548942 = invoke(stypy.reporting.localization.Localization(__file__, 1383, 64), hyp1f2_548935, *[a_548936, b_548937, c_548938, x_548939], **kwargs_548941)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1383)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1383, 45), 'stypy_return_type', hyp1f2_call_result_548942)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_417' in the type store
            # Getting the type of 'stypy_return_type' (line 1383)
            stypy_return_type_548943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_548943)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_417'
            return stypy_return_type_548943

        # Assigning a type to the variable '_stypy_temp_lambda_417' (line 1383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1383, 45), '_stypy_temp_lambda_417', _stypy_temp_lambda_417)
        # Getting the type of '_stypy_temp_lambda_417' (line 1383)
        _stypy_temp_lambda_417_548944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 45), '_stypy_temp_lambda_417')
        # Processing the call keyword arguments (line 1383)
        kwargs_548945 = {}
        # Getting the type of 'exception_to_nan' (line 1383)
        exception_to_nan_548933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1383)
        exception_to_nan_call_result_548946 = invoke(stypy.reporting.localization.Localization(__file__, 1383, 28), exception_to_nan_548933, *[_stypy_temp_lambda_417_548944], **kwargs_548945)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1384)
        list_548947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1384, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1384)
        # Adding element type (line 1384)
        
        # Call to Arg(...): (line 1384)
        # Processing the call keyword arguments (line 1384)
        kwargs_548949 = {}
        # Getting the type of 'Arg' (line 1384)
        Arg_548948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1384)
        Arg_call_result_548950 = invoke(stypy.reporting.localization.Localization(__file__, 1384, 29), Arg_548948, *[], **kwargs_548949)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1384, 28), list_548947, Arg_call_result_548950)
        # Adding element type (line 1384)
        
        # Call to Arg(...): (line 1384)
        # Processing the call keyword arguments (line 1384)
        kwargs_548952 = {}
        # Getting the type of 'Arg' (line 1384)
        Arg_548951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1384)
        Arg_call_result_548953 = invoke(stypy.reporting.localization.Localization(__file__, 1384, 36), Arg_548951, *[], **kwargs_548952)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1384, 28), list_548947, Arg_call_result_548953)
        # Adding element type (line 1384)
        
        # Call to Arg(...): (line 1384)
        # Processing the call keyword arguments (line 1384)
        kwargs_548955 = {}
        # Getting the type of 'Arg' (line 1384)
        Arg_548954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 43), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1384)
        Arg_call_result_548956 = invoke(stypy.reporting.localization.Localization(__file__, 1384, 43), Arg_548954, *[], **kwargs_548955)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1384, 28), list_548947, Arg_call_result_548956)
        # Adding element type (line 1384)
        
        # Call to Arg(...): (line 1384)
        # Processing the call keyword arguments (line 1384)
        kwargs_548958 = {}
        # Getting the type of 'Arg' (line 1384)
        Arg_548957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1384, 50), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1384)
        Arg_call_result_548959 = invoke(stypy.reporting.localization.Localization(__file__, 1384, 50), Arg_548957, *[], **kwargs_548958)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1384, 28), list_548947, Arg_call_result_548959)
        
        # Processing the call keyword arguments (line 1382)
        int_548960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1385, 30), 'int')
        keyword_548961 = int_548960
        kwargs_548962 = {'n': keyword_548961}
        # Getting the type of 'assert_mpmath_equal' (line 1382)
        assert_mpmath_equal_548931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1382, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1382)
        assert_mpmath_equal_call_result_548963 = invoke(stypy.reporting.localization.Localization(__file__, 1382, 8), assert_mpmath_equal_548931, *[hyp1f2_548932, exception_to_nan_call_result_548946, list_548947], **kwargs_548962)
        
        
        # ################# End of 'test_hyp1f2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hyp1f2' in the type store
        # Getting the type of 'stypy_return_type' (line 1375)
        stypy_return_type_548964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_548964)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hyp1f2'
        return stypy_return_type_548964


    @norecursion
    def test_hyp2f0(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hyp2f0'
        module_type_store = module_type_store.open_function_context('test_hyp2f0', 1387, 4, False)
        # Assigning a type to the variable 'self' (line 1388)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1388, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hyp2f0')
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hyp2f0.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hyp2f0', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hyp2f0', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hyp2f0(...)' code ##################


        @norecursion
        def hyp2f0(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'hyp2f0'
            module_type_store = module_type_store.open_function_context('hyp2f0', 1389, 8, False)
            
            # Passed parameters checking function
            hyp2f0.stypy_localization = localization
            hyp2f0.stypy_type_of_self = None
            hyp2f0.stypy_type_store = module_type_store
            hyp2f0.stypy_function_name = 'hyp2f0'
            hyp2f0.stypy_param_names_list = ['a', 'b', 'x']
            hyp2f0.stypy_varargs_param_name = None
            hyp2f0.stypy_kwargs_param_name = None
            hyp2f0.stypy_call_defaults = defaults
            hyp2f0.stypy_call_varargs = varargs
            hyp2f0.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'hyp2f0', ['a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'hyp2f0', localization, ['a', 'b', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'hyp2f0(...)' code ##################

            
            # Assigning a Call to a Tuple (line 1390):
            
            # Assigning a Subscript to a Name (line 1390):
            
            # Obtaining the type of the subscript
            int_548965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 12), 'int')
            
            # Call to hyp2f0(...): (line 1390)
            # Processing the call arguments (line 1390)
            # Getting the type of 'a' (line 1390)
            a_548968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 31), 'a', False)
            # Getting the type of 'b' (line 1390)
            b_548969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 34), 'b', False)
            # Getting the type of 'x' (line 1390)
            x_548970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 37), 'x', False)
            int_548971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 40), 'int')
            # Processing the call keyword arguments (line 1390)
            kwargs_548972 = {}
            # Getting the type of 'sc' (line 1390)
            sc_548966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 21), 'sc', False)
            # Obtaining the member 'hyp2f0' of a type (line 1390)
            hyp2f0_548967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1390, 21), sc_548966, 'hyp2f0')
            # Calling hyp2f0(args, kwargs) (line 1390)
            hyp2f0_call_result_548973 = invoke(stypy.reporting.localization.Localization(__file__, 1390, 21), hyp2f0_548967, *[a_548968, b_548969, x_548970, int_548971], **kwargs_548972)
            
            # Obtaining the member '__getitem__' of a type (line 1390)
            getitem___548974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1390, 12), hyp2f0_call_result_548973, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1390)
            subscript_call_result_548975 = invoke(stypy.reporting.localization.Localization(__file__, 1390, 12), getitem___548974, int_548965)
            
            # Assigning a type to the variable 'tuple_var_assignment_542798' (line 1390)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1390, 12), 'tuple_var_assignment_542798', subscript_call_result_548975)
            
            # Assigning a Subscript to a Name (line 1390):
            
            # Obtaining the type of the subscript
            int_548976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 12), 'int')
            
            # Call to hyp2f0(...): (line 1390)
            # Processing the call arguments (line 1390)
            # Getting the type of 'a' (line 1390)
            a_548979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 31), 'a', False)
            # Getting the type of 'b' (line 1390)
            b_548980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 34), 'b', False)
            # Getting the type of 'x' (line 1390)
            x_548981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 37), 'x', False)
            int_548982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1390, 40), 'int')
            # Processing the call keyword arguments (line 1390)
            kwargs_548983 = {}
            # Getting the type of 'sc' (line 1390)
            sc_548977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 21), 'sc', False)
            # Obtaining the member 'hyp2f0' of a type (line 1390)
            hyp2f0_548978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1390, 21), sc_548977, 'hyp2f0')
            # Calling hyp2f0(args, kwargs) (line 1390)
            hyp2f0_call_result_548984 = invoke(stypy.reporting.localization.Localization(__file__, 1390, 21), hyp2f0_548978, *[a_548979, b_548980, x_548981, int_548982], **kwargs_548983)
            
            # Obtaining the member '__getitem__' of a type (line 1390)
            getitem___548985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1390, 12), hyp2f0_call_result_548984, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1390)
            subscript_call_result_548986 = invoke(stypy.reporting.localization.Localization(__file__, 1390, 12), getitem___548985, int_548976)
            
            # Assigning a type to the variable 'tuple_var_assignment_542799' (line 1390)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1390, 12), 'tuple_var_assignment_542799', subscript_call_result_548986)
            
            # Assigning a Name to a Name (line 1390):
            # Getting the type of 'tuple_var_assignment_542798' (line 1390)
            tuple_var_assignment_542798_548987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 12), 'tuple_var_assignment_542798')
            # Assigning a type to the variable 'v' (line 1390)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1390, 12), 'v', tuple_var_assignment_542798_548987)
            
            # Assigning a Name to a Name (line 1390):
            # Getting the type of 'tuple_var_assignment_542799' (line 1390)
            tuple_var_assignment_542799_548988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1390, 12), 'tuple_var_assignment_542799')
            # Assigning a type to the variable 'err' (line 1390)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1390, 15), 'err', tuple_var_assignment_542799_548988)
            
            
            
            # Call to abs(...): (line 1391)
            # Processing the call arguments (line 1391)
            # Getting the type of 'err' (line 1391)
            err_548990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 19), 'err', False)
            # Processing the call keyword arguments (line 1391)
            kwargs_548991 = {}
            # Getting the type of 'abs' (line 1391)
            abs_548989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1391)
            abs_call_result_548992 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 15), abs_548989, *[err_548990], **kwargs_548991)
            
            
            # Call to max(...): (line 1391)
            # Processing the call arguments (line 1391)
            int_548994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 30), 'int')
            
            # Call to abs(...): (line 1391)
            # Processing the call arguments (line 1391)
            # Getting the type of 'v' (line 1391)
            v_548996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 37), 'v', False)
            # Processing the call keyword arguments (line 1391)
            kwargs_548997 = {}
            # Getting the type of 'abs' (line 1391)
            abs_548995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 33), 'abs', False)
            # Calling abs(args, kwargs) (line 1391)
            abs_call_result_548998 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 33), abs_548995, *[v_548996], **kwargs_548997)
            
            # Processing the call keyword arguments (line 1391)
            kwargs_548999 = {}
            # Getting the type of 'max' (line 1391)
            max_548993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1391, 26), 'max', False)
            # Calling max(args, kwargs) (line 1391)
            max_call_result_549000 = invoke(stypy.reporting.localization.Localization(__file__, 1391, 26), max_548993, *[int_548994, abs_call_result_548998], **kwargs_548999)
            
            float_549001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1391, 43), 'float')
            # Applying the binary operator '*' (line 1391)
            result_mul_549002 = python_operator(stypy.reporting.localization.Localization(__file__, 1391, 26), '*', max_call_result_549000, float_549001)
            
            # Applying the binary operator '>' (line 1391)
            result_gt_549003 = python_operator(stypy.reporting.localization.Localization(__file__, 1391, 15), '>', abs_call_result_548992, result_mul_549002)
            
            # Testing the type of an if condition (line 1391)
            if_condition_549004 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1391, 12), result_gt_549003)
            # Assigning a type to the variable 'if_condition_549004' (line 1391)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1391, 12), 'if_condition_549004', if_condition_549004)
            # SSA begins for if statement (line 1391)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1392)
            np_549005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1392, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1392)
            nan_549006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1392, 23), np_549005, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1392)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1392, 16), 'stypy_return_type', nan_549006)
            # SSA join for if statement (line 1391)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'v' (line 1393)
            v_549007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1393, 19), 'v')
            # Assigning a type to the variable 'stypy_return_type' (line 1393)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1393, 12), 'stypy_return_type', v_549007)
            
            # ################# End of 'hyp2f0(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'hyp2f0' in the type store
            # Getting the type of 'stypy_return_type' (line 1389)
            stypy_return_type_549008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1389, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549008)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'hyp2f0'
            return stypy_return_type_549008

        # Assigning a type to the variable 'hyp2f0' (line 1389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1389, 8), 'hyp2f0', hyp2f0)
        
        # Call to assert_mpmath_equal(...): (line 1394)
        # Processing the call arguments (line 1394)
        # Getting the type of 'hyp2f0' (line 1394)
        hyp2f0_549010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 28), 'hyp2f0', False)

        @norecursion
        def _stypy_temp_lambda_418(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_418'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_418', 1395, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_418.stypy_localization = localization
            _stypy_temp_lambda_418.stypy_type_of_self = None
            _stypy_temp_lambda_418.stypy_type_store = module_type_store
            _stypy_temp_lambda_418.stypy_function_name = '_stypy_temp_lambda_418'
            _stypy_temp_lambda_418.stypy_param_names_list = ['a', 'b', 'x']
            _stypy_temp_lambda_418.stypy_varargs_param_name = None
            _stypy_temp_lambda_418.stypy_kwargs_param_name = None
            _stypy_temp_lambda_418.stypy_call_defaults = defaults
            _stypy_temp_lambda_418.stypy_call_varargs = varargs
            _stypy_temp_lambda_418.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_418', ['a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_418', ['a', 'b', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to (...): (line 1395)
            # Processing the call arguments (line 1395)
            # Getting the type of 'a' (line 1396)
            a_549025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1396, 32), 'a', False)
            # Getting the type of 'b' (line 1396)
            b_549026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1396, 35), 'b', False)
            # Getting the type of 'x' (line 1396)
            x_549027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1396, 38), 'x', False)
            # Processing the call keyword arguments (line 1395)
            # Getting the type of 'HYPERKW' (line 1396)
            HYPERKW_549028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1396, 43), 'HYPERKW', False)
            kwargs_549029 = {'HYPERKW_549028': HYPERKW_549028}
            
            # Call to (...): (line 1395)
            # Processing the call arguments (line 1395)
            
            # Call to exception_to_nan(...): (line 1395)
            # Processing the call arguments (line 1395)
            
            # Call to trace_args(...): (line 1395)
            # Processing the call arguments (line 1395)
            # Getting the type of 'mpmath' (line 1395)
            mpmath_549017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 90), 'mpmath', False)
            # Obtaining the member 'hyp2f0' of a type (line 1395)
            hyp2f0_549018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1395, 90), mpmath_549017, 'hyp2f0')
            # Processing the call keyword arguments (line 1395)
            kwargs_549019 = {}
            # Getting the type of 'trace_args' (line 1395)
            trace_args_549016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 79), 'trace_args', False)
            # Calling trace_args(args, kwargs) (line 1395)
            trace_args_call_result_549020 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 79), trace_args_549016, *[hyp2f0_549018], **kwargs_549019)
            
            # Processing the call keyword arguments (line 1395)
            kwargs_549021 = {}
            # Getting the type of 'exception_to_nan' (line 1395)
            exception_to_nan_549015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 62), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1395)
            exception_to_nan_call_result_549022 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 62), exception_to_nan_549015, *[trace_args_call_result_549020], **kwargs_549021)
            
            # Processing the call keyword arguments (line 1395)
            kwargs_549023 = {}
            
            # Call to time_limited(...): (line 1395)
            # Processing the call arguments (line 1395)
            float_549012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1395, 57), 'float')
            # Processing the call keyword arguments (line 1395)
            kwargs_549013 = {}
            # Getting the type of 'time_limited' (line 1395)
            time_limited_549011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 44), 'time_limited', False)
            # Calling time_limited(args, kwargs) (line 1395)
            time_limited_call_result_549014 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 44), time_limited_549011, *[float_549012], **kwargs_549013)
            
            # Calling (args, kwargs) (line 1395)
            _call_result_549024 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 44), time_limited_call_result_549014, *[exception_to_nan_call_result_549022], **kwargs_549023)
            
            # Calling (args, kwargs) (line 1395)
            _call_result_549030 = invoke(stypy.reporting.localization.Localization(__file__, 1395, 44), _call_result_549024, *[a_549025, b_549026, x_549027], **kwargs_549029)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1395)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1395, 28), 'stypy_return_type', _call_result_549030)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_418' in the type store
            # Getting the type of 'stypy_return_type' (line 1395)
            stypy_return_type_549031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549031)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_418'
            return stypy_return_type_549031

        # Assigning a type to the variable '_stypy_temp_lambda_418' (line 1395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1395, 28), '_stypy_temp_lambda_418', _stypy_temp_lambda_418)
        # Getting the type of '_stypy_temp_lambda_418' (line 1395)
        _stypy_temp_lambda_418_549032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1395, 28), '_stypy_temp_lambda_418')
        
        # Obtaining an instance of the builtin type 'list' (line 1397)
        list_549033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1397, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1397)
        # Adding element type (line 1397)
        
        # Call to Arg(...): (line 1397)
        # Processing the call keyword arguments (line 1397)
        kwargs_549035 = {}
        # Getting the type of 'Arg' (line 1397)
        Arg_549034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1397, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1397)
        Arg_call_result_549036 = invoke(stypy.reporting.localization.Localization(__file__, 1397, 29), Arg_549034, *[], **kwargs_549035)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1397, 28), list_549033, Arg_call_result_549036)
        # Adding element type (line 1397)
        
        # Call to Arg(...): (line 1397)
        # Processing the call keyword arguments (line 1397)
        kwargs_549038 = {}
        # Getting the type of 'Arg' (line 1397)
        Arg_549037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1397, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1397)
        Arg_call_result_549039 = invoke(stypy.reporting.localization.Localization(__file__, 1397, 36), Arg_549037, *[], **kwargs_549038)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1397, 28), list_549033, Arg_call_result_549039)
        # Adding element type (line 1397)
        
        # Call to Arg(...): (line 1397)
        # Processing the call keyword arguments (line 1397)
        kwargs_549041 = {}
        # Getting the type of 'Arg' (line 1397)
        Arg_549040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1397, 43), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1397)
        Arg_call_result_549042 = invoke(stypy.reporting.localization.Localization(__file__, 1397, 43), Arg_549040, *[], **kwargs_549041)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1397, 28), list_549033, Arg_call_result_549042)
        
        # Processing the call keyword arguments (line 1394)
        kwargs_549043 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1394)
        assert_mpmath_equal_549009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1394, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1394)
        assert_mpmath_equal_call_result_549044 = invoke(stypy.reporting.localization.Localization(__file__, 1394, 8), assert_mpmath_equal_549009, *[hyp2f0_549010, _stypy_temp_lambda_418_549032, list_549033], **kwargs_549043)
        
        
        # ################# End of 'test_hyp2f0(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hyp2f0' in the type store
        # Getting the type of 'stypy_return_type' (line 1387)
        stypy_return_type_549045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1387, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549045)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hyp2f0'
        return stypy_return_type_549045


    @norecursion
    def test_hyp2f1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hyp2f1'
        module_type_store = module_type_store.open_function_context('test_hyp2f1', 1399, 4, False)
        # Assigning a type to the variable 'self' (line 1400)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1400, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hyp2f1')
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hyp2f1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hyp2f1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hyp2f1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hyp2f1(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1401)
        # Processing the call arguments (line 1401)
        # Getting the type of 'sc' (line 1401)
        sc_549047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1401, 28), 'sc', False)
        # Obtaining the member 'hyp2f1' of a type (line 1401)
        hyp2f1_549048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1401, 28), sc_549047, 'hyp2f1')
        
        # Call to exception_to_nan(...): (line 1402)
        # Processing the call arguments (line 1402)

        @norecursion
        def _stypy_temp_lambda_419(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_419'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_419', 1402, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_419.stypy_localization = localization
            _stypy_temp_lambda_419.stypy_type_of_self = None
            _stypy_temp_lambda_419.stypy_type_store = module_type_store
            _stypy_temp_lambda_419.stypy_function_name = '_stypy_temp_lambda_419'
            _stypy_temp_lambda_419.stypy_param_names_list = ['a', 'b', 'c', 'x']
            _stypy_temp_lambda_419.stypy_varargs_param_name = None
            _stypy_temp_lambda_419.stypy_kwargs_param_name = None
            _stypy_temp_lambda_419.stypy_call_defaults = defaults
            _stypy_temp_lambda_419.stypy_call_varargs = varargs
            _stypy_temp_lambda_419.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_419', ['a', 'b', 'c', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_419', ['a', 'b', 'c', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp2f1(...): (line 1402)
            # Processing the call arguments (line 1402)
            # Getting the type of 'a' (line 1402)
            a_549052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 78), 'a', False)
            # Getting the type of 'b' (line 1402)
            b_549053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 81), 'b', False)
            # Getting the type of 'c' (line 1402)
            c_549054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 84), 'c', False)
            # Getting the type of 'x' (line 1402)
            x_549055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 87), 'x', False)
            # Processing the call keyword arguments (line 1402)
            # Getting the type of 'HYPERKW' (line 1402)
            HYPERKW_549056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 92), 'HYPERKW', False)
            kwargs_549057 = {'HYPERKW_549056': HYPERKW_549056}
            # Getting the type of 'mpmath' (line 1402)
            mpmath_549050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 64), 'mpmath', False)
            # Obtaining the member 'hyp2f1' of a type (line 1402)
            hyp2f1_549051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1402, 64), mpmath_549050, 'hyp2f1')
            # Calling hyp2f1(args, kwargs) (line 1402)
            hyp2f1_call_result_549058 = invoke(stypy.reporting.localization.Localization(__file__, 1402, 64), hyp2f1_549051, *[a_549052, b_549053, c_549054, x_549055], **kwargs_549057)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1402)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1402, 45), 'stypy_return_type', hyp2f1_call_result_549058)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_419' in the type store
            # Getting the type of 'stypy_return_type' (line 1402)
            stypy_return_type_549059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549059)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_419'
            return stypy_return_type_549059

        # Assigning a type to the variable '_stypy_temp_lambda_419' (line 1402)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1402, 45), '_stypy_temp_lambda_419', _stypy_temp_lambda_419)
        # Getting the type of '_stypy_temp_lambda_419' (line 1402)
        _stypy_temp_lambda_419_549060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 45), '_stypy_temp_lambda_419')
        # Processing the call keyword arguments (line 1402)
        kwargs_549061 = {}
        # Getting the type of 'exception_to_nan' (line 1402)
        exception_to_nan_549049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1402, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1402)
        exception_to_nan_call_result_549062 = invoke(stypy.reporting.localization.Localization(__file__, 1402, 28), exception_to_nan_549049, *[_stypy_temp_lambda_419_549060], **kwargs_549061)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1403)
        list_549063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1403, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1403)
        # Adding element type (line 1403)
        
        # Call to Arg(...): (line 1403)
        # Processing the call keyword arguments (line 1403)
        kwargs_549065 = {}
        # Getting the type of 'Arg' (line 1403)
        Arg_549064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1403)
        Arg_call_result_549066 = invoke(stypy.reporting.localization.Localization(__file__, 1403, 29), Arg_549064, *[], **kwargs_549065)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1403, 28), list_549063, Arg_call_result_549066)
        # Adding element type (line 1403)
        
        # Call to Arg(...): (line 1403)
        # Processing the call keyword arguments (line 1403)
        kwargs_549068 = {}
        # Getting the type of 'Arg' (line 1403)
        Arg_549067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1403)
        Arg_call_result_549069 = invoke(stypy.reporting.localization.Localization(__file__, 1403, 36), Arg_549067, *[], **kwargs_549068)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1403, 28), list_549063, Arg_call_result_549069)
        # Adding element type (line 1403)
        
        # Call to Arg(...): (line 1403)
        # Processing the call keyword arguments (line 1403)
        kwargs_549071 = {}
        # Getting the type of 'Arg' (line 1403)
        Arg_549070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 43), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1403)
        Arg_call_result_549072 = invoke(stypy.reporting.localization.Localization(__file__, 1403, 43), Arg_549070, *[], **kwargs_549071)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1403, 28), list_549063, Arg_call_result_549072)
        # Adding element type (line 1403)
        
        # Call to Arg(...): (line 1403)
        # Processing the call keyword arguments (line 1403)
        kwargs_549074 = {}
        # Getting the type of 'Arg' (line 1403)
        Arg_549073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1403, 50), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1403)
        Arg_call_result_549075 = invoke(stypy.reporting.localization.Localization(__file__, 1403, 50), Arg_549073, *[], **kwargs_549074)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1403, 28), list_549063, Arg_call_result_549075)
        
        # Processing the call keyword arguments (line 1401)
        kwargs_549076 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1401)
        assert_mpmath_equal_549046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1401, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1401)
        assert_mpmath_equal_call_result_549077 = invoke(stypy.reporting.localization.Localization(__file__, 1401, 8), assert_mpmath_equal_549046, *[hyp2f1_549048, exception_to_nan_call_result_549062, list_549063], **kwargs_549076)
        
        
        # ################# End of 'test_hyp2f1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hyp2f1' in the type store
        # Getting the type of 'stypy_return_type' (line 1399)
        stypy_return_type_549078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1399, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549078)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hyp2f1'
        return stypy_return_type_549078


    @norecursion
    def test_hyp2f1_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hyp2f1_complex'
        module_type_store = module_type_store.open_function_context('test_hyp2f1_complex', 1405, 4, False)
        # Assigning a type to the variable 'self' (line 1406)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1406, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hyp2f1_complex')
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hyp2f1_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hyp2f1_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hyp2f1_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hyp2f1_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1408)
        # Processing the call arguments (line 1408)

        @norecursion
        def _stypy_temp_lambda_420(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_420'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_420', 1408, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_420.stypy_localization = localization
            _stypy_temp_lambda_420.stypy_type_of_self = None
            _stypy_temp_lambda_420.stypy_type_store = module_type_store
            _stypy_temp_lambda_420.stypy_function_name = '_stypy_temp_lambda_420'
            _stypy_temp_lambda_420.stypy_param_names_list = ['a', 'b', 'c', 'x']
            _stypy_temp_lambda_420.stypy_varargs_param_name = None
            _stypy_temp_lambda_420.stypy_kwargs_param_name = None
            _stypy_temp_lambda_420.stypy_call_defaults = defaults
            _stypy_temp_lambda_420.stypy_call_varargs = varargs
            _stypy_temp_lambda_420.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_420', ['a', 'b', 'c', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_420', ['a', 'b', 'c', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp2f1(...): (line 1408)
            # Processing the call arguments (line 1408)
            # Getting the type of 'a' (line 1408)
            a_549082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 57), 'a', False)
            # Obtaining the member 'real' of a type (line 1408)
            real_549083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1408, 57), a_549082, 'real')
            # Getting the type of 'b' (line 1408)
            b_549084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 65), 'b', False)
            # Obtaining the member 'real' of a type (line 1408)
            real_549085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1408, 65), b_549084, 'real')
            # Getting the type of 'c' (line 1408)
            c_549086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 73), 'c', False)
            # Obtaining the member 'real' of a type (line 1408)
            real_549087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1408, 73), c_549086, 'real')
            # Getting the type of 'x' (line 1408)
            x_549088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 81), 'x', False)
            # Processing the call keyword arguments (line 1408)
            kwargs_549089 = {}
            # Getting the type of 'sc' (line 1408)
            sc_549080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 47), 'sc', False)
            # Obtaining the member 'hyp2f1' of a type (line 1408)
            hyp2f1_549081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1408, 47), sc_549080, 'hyp2f1')
            # Calling hyp2f1(args, kwargs) (line 1408)
            hyp2f1_call_result_549090 = invoke(stypy.reporting.localization.Localization(__file__, 1408, 47), hyp2f1_549081, *[real_549083, real_549085, real_549087, x_549088], **kwargs_549089)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1408)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1408, 28), 'stypy_return_type', hyp2f1_call_result_549090)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_420' in the type store
            # Getting the type of 'stypy_return_type' (line 1408)
            stypy_return_type_549091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549091)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_420'
            return stypy_return_type_549091

        # Assigning a type to the variable '_stypy_temp_lambda_420' (line 1408)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1408, 28), '_stypy_temp_lambda_420', _stypy_temp_lambda_420)
        # Getting the type of '_stypy_temp_lambda_420' (line 1408)
        _stypy_temp_lambda_420_549092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 28), '_stypy_temp_lambda_420')
        
        # Call to exception_to_nan(...): (line 1409)
        # Processing the call arguments (line 1409)

        @norecursion
        def _stypy_temp_lambda_421(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_421'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_421', 1409, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_421.stypy_localization = localization
            _stypy_temp_lambda_421.stypy_type_of_self = None
            _stypy_temp_lambda_421.stypy_type_store = module_type_store
            _stypy_temp_lambda_421.stypy_function_name = '_stypy_temp_lambda_421'
            _stypy_temp_lambda_421.stypy_param_names_list = ['a', 'b', 'c', 'x']
            _stypy_temp_lambda_421.stypy_varargs_param_name = None
            _stypy_temp_lambda_421.stypy_kwargs_param_name = None
            _stypy_temp_lambda_421.stypy_call_defaults = defaults
            _stypy_temp_lambda_421.stypy_call_varargs = varargs
            _stypy_temp_lambda_421.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_421', ['a', 'b', 'c', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_421', ['a', 'b', 'c', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyp2f1(...): (line 1409)
            # Processing the call arguments (line 1409)
            # Getting the type of 'a' (line 1409)
            a_549096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 78), 'a', False)
            # Getting the type of 'b' (line 1409)
            b_549097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 81), 'b', False)
            # Getting the type of 'c' (line 1409)
            c_549098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 84), 'c', False)
            # Getting the type of 'x' (line 1409)
            x_549099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 87), 'x', False)
            # Processing the call keyword arguments (line 1409)
            # Getting the type of 'HYPERKW' (line 1409)
            HYPERKW_549100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 92), 'HYPERKW', False)
            kwargs_549101 = {'HYPERKW_549100': HYPERKW_549100}
            # Getting the type of 'mpmath' (line 1409)
            mpmath_549094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 64), 'mpmath', False)
            # Obtaining the member 'hyp2f1' of a type (line 1409)
            hyp2f1_549095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1409, 64), mpmath_549094, 'hyp2f1')
            # Calling hyp2f1(args, kwargs) (line 1409)
            hyp2f1_call_result_549102 = invoke(stypy.reporting.localization.Localization(__file__, 1409, 64), hyp2f1_549095, *[a_549096, b_549097, c_549098, x_549099], **kwargs_549101)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1409)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1409, 45), 'stypy_return_type', hyp2f1_call_result_549102)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_421' in the type store
            # Getting the type of 'stypy_return_type' (line 1409)
            stypy_return_type_549103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549103)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_421'
            return stypy_return_type_549103

        # Assigning a type to the variable '_stypy_temp_lambda_421' (line 1409)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1409, 45), '_stypy_temp_lambda_421', _stypy_temp_lambda_421)
        # Getting the type of '_stypy_temp_lambda_421' (line 1409)
        _stypy_temp_lambda_421_549104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 45), '_stypy_temp_lambda_421')
        # Processing the call keyword arguments (line 1409)
        kwargs_549105 = {}
        # Getting the type of 'exception_to_nan' (line 1409)
        exception_to_nan_549093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1409, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1409)
        exception_to_nan_call_result_549106 = invoke(stypy.reporting.localization.Localization(__file__, 1409, 28), exception_to_nan_549093, *[_stypy_temp_lambda_421_549104], **kwargs_549105)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1410)
        list_549107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1410)
        # Adding element type (line 1410)
        
        # Call to Arg(...): (line 1410)
        # Processing the call arguments (line 1410)
        float_549109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 33), 'float')
        float_549110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 39), 'float')
        # Processing the call keyword arguments (line 1410)
        kwargs_549111 = {}
        # Getting the type of 'Arg' (line 1410)
        Arg_549108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1410)
        Arg_call_result_549112 = invoke(stypy.reporting.localization.Localization(__file__, 1410, 29), Arg_549108, *[float_549109, float_549110], **kwargs_549111)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1410, 28), list_549107, Arg_call_result_549112)
        # Adding element type (line 1410)
        
        # Call to Arg(...): (line 1410)
        # Processing the call arguments (line 1410)
        float_549114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 49), 'float')
        float_549115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 55), 'float')
        # Processing the call keyword arguments (line 1410)
        kwargs_549116 = {}
        # Getting the type of 'Arg' (line 1410)
        Arg_549113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1410)
        Arg_call_result_549117 = invoke(stypy.reporting.localization.Localization(__file__, 1410, 45), Arg_549113, *[float_549114, float_549115], **kwargs_549116)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1410, 28), list_549107, Arg_call_result_549117)
        # Adding element type (line 1410)
        
        # Call to Arg(...): (line 1410)
        # Processing the call arguments (line 1410)
        float_549119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 65), 'float')
        float_549120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1410, 71), 'float')
        # Processing the call keyword arguments (line 1410)
        kwargs_549121 = {}
        # Getting the type of 'Arg' (line 1410)
        Arg_549118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 61), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1410)
        Arg_call_result_549122 = invoke(stypy.reporting.localization.Localization(__file__, 1410, 61), Arg_549118, *[float_549119, float_549120], **kwargs_549121)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1410, 28), list_549107, Arg_call_result_549122)
        # Adding element type (line 1410)
        
        # Call to ComplexArg(...): (line 1410)
        # Processing the call keyword arguments (line 1410)
        kwargs_549124 = {}
        # Getting the type of 'ComplexArg' (line 1410)
        ComplexArg_549123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1410, 77), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1410)
        ComplexArg_call_result_549125 = invoke(stypy.reporting.localization.Localization(__file__, 1410, 77), ComplexArg_549123, *[], **kwargs_549124)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1410, 28), list_549107, ComplexArg_call_result_549125)
        
        # Processing the call keyword arguments (line 1408)
        int_549126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1411, 30), 'int')
        keyword_549127 = int_549126
        kwargs_549128 = {'n': keyword_549127}
        # Getting the type of 'assert_mpmath_equal' (line 1408)
        assert_mpmath_equal_549079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1408, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1408)
        assert_mpmath_equal_call_result_549129 = invoke(stypy.reporting.localization.Localization(__file__, 1408, 8), assert_mpmath_equal_549079, *[_stypy_temp_lambda_420_549092, exception_to_nan_call_result_549106, list_549107], **kwargs_549128)
        
        
        # ################# End of 'test_hyp2f1_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hyp2f1_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1405)
        stypy_return_type_549130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1405, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549130)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hyp2f1_complex'
        return stypy_return_type_549130


    @norecursion
    def test_hyperu(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hyperu'
        module_type_store = module_type_store.open_function_context('test_hyperu', 1413, 4, False)
        # Assigning a type to the variable 'self' (line 1414)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1414, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_hyperu')
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_hyperu.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_hyperu', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hyperu', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hyperu(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1415)
        # Processing the call arguments (line 1415)
        # Getting the type of 'sc' (line 1415)
        sc_549132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1415, 28), 'sc', False)
        # Obtaining the member 'hyperu' of a type (line 1415)
        hyperu_549133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1415, 28), sc_549132, 'hyperu')
        
        # Call to exception_to_nan(...): (line 1416)
        # Processing the call arguments (line 1416)

        @norecursion
        def _stypy_temp_lambda_422(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_422'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_422', 1416, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_422.stypy_localization = localization
            _stypy_temp_lambda_422.stypy_type_of_self = None
            _stypy_temp_lambda_422.stypy_type_store = module_type_store
            _stypy_temp_lambda_422.stypy_function_name = '_stypy_temp_lambda_422'
            _stypy_temp_lambda_422.stypy_param_names_list = ['a', 'b', 'x']
            _stypy_temp_lambda_422.stypy_varargs_param_name = None
            _stypy_temp_lambda_422.stypy_kwargs_param_name = None
            _stypy_temp_lambda_422.stypy_call_defaults = defaults
            _stypy_temp_lambda_422.stypy_call_varargs = varargs
            _stypy_temp_lambda_422.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_422', ['a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_422', ['a', 'b', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to hyperu(...): (line 1416)
            # Processing the call arguments (line 1416)
            # Getting the type of 'a' (line 1416)
            a_549137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 75), 'a', False)
            # Getting the type of 'b' (line 1416)
            b_549138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 78), 'b', False)
            # Getting the type of 'x' (line 1416)
            x_549139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 81), 'x', False)
            # Processing the call keyword arguments (line 1416)
            # Getting the type of 'HYPERKW' (line 1416)
            HYPERKW_549140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 86), 'HYPERKW', False)
            kwargs_549141 = {'HYPERKW_549140': HYPERKW_549140}
            # Getting the type of 'mpmath' (line 1416)
            mpmath_549135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 61), 'mpmath', False)
            # Obtaining the member 'hyperu' of a type (line 1416)
            hyperu_549136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1416, 61), mpmath_549135, 'hyperu')
            # Calling hyperu(args, kwargs) (line 1416)
            hyperu_call_result_549142 = invoke(stypy.reporting.localization.Localization(__file__, 1416, 61), hyperu_549136, *[a_549137, b_549138, x_549139], **kwargs_549141)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1416)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1416, 45), 'stypy_return_type', hyperu_call_result_549142)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_422' in the type store
            # Getting the type of 'stypy_return_type' (line 1416)
            stypy_return_type_549143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549143)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_422'
            return stypy_return_type_549143

        # Assigning a type to the variable '_stypy_temp_lambda_422' (line 1416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1416, 45), '_stypy_temp_lambda_422', _stypy_temp_lambda_422)
        # Getting the type of '_stypy_temp_lambda_422' (line 1416)
        _stypy_temp_lambda_422_549144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 45), '_stypy_temp_lambda_422')
        # Processing the call keyword arguments (line 1416)
        kwargs_549145 = {}
        # Getting the type of 'exception_to_nan' (line 1416)
        exception_to_nan_549134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1416, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1416)
        exception_to_nan_call_result_549146 = invoke(stypy.reporting.localization.Localization(__file__, 1416, 28), exception_to_nan_549134, *[_stypy_temp_lambda_422_549144], **kwargs_549145)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1417)
        list_549147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1417, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1417)
        # Adding element type (line 1417)
        
        # Call to Arg(...): (line 1417)
        # Processing the call keyword arguments (line 1417)
        kwargs_549149 = {}
        # Getting the type of 'Arg' (line 1417)
        Arg_549148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1417)
        Arg_call_result_549150 = invoke(stypy.reporting.localization.Localization(__file__, 1417, 29), Arg_549148, *[], **kwargs_549149)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 28), list_549147, Arg_call_result_549150)
        # Adding element type (line 1417)
        
        # Call to Arg(...): (line 1417)
        # Processing the call keyword arguments (line 1417)
        kwargs_549152 = {}
        # Getting the type of 'Arg' (line 1417)
        Arg_549151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1417)
        Arg_call_result_549153 = invoke(stypy.reporting.localization.Localization(__file__, 1417, 36), Arg_549151, *[], **kwargs_549152)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 28), list_549147, Arg_call_result_549153)
        # Adding element type (line 1417)
        
        # Call to Arg(...): (line 1417)
        # Processing the call keyword arguments (line 1417)
        kwargs_549155 = {}
        # Getting the type of 'Arg' (line 1417)
        Arg_549154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1417, 43), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1417)
        Arg_call_result_549156 = invoke(stypy.reporting.localization.Localization(__file__, 1417, 43), Arg_549154, *[], **kwargs_549155)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1417, 28), list_549147, Arg_call_result_549156)
        
        # Processing the call keyword arguments (line 1415)
        kwargs_549157 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1415)
        assert_mpmath_equal_549131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1415, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1415)
        assert_mpmath_equal_call_result_549158 = invoke(stypy.reporting.localization.Localization(__file__, 1415, 8), assert_mpmath_equal_549131, *[hyperu_549133, exception_to_nan_call_result_549146, list_549147], **kwargs_549157)
        
        
        # ################# End of 'test_hyperu(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hyperu' in the type store
        # Getting the type of 'stypy_return_type' (line 1413)
        stypy_return_type_549159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1413, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549159)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hyperu'
        return stypy_return_type_549159


    @norecursion
    def test_igam_fac(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_igam_fac'
        module_type_store = module_type_store.open_function_context('test_igam_fac', 1419, 4, False)
        # Assigning a type to the variable 'self' (line 1420)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1420, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_igam_fac')
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_igam_fac.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_igam_fac', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_igam_fac', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_igam_fac(...)' code ##################


        @norecursion
        def mp_igam_fac(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_igam_fac'
            module_type_store = module_type_store.open_function_context('mp_igam_fac', 1422, 8, False)
            
            # Passed parameters checking function
            mp_igam_fac.stypy_localization = localization
            mp_igam_fac.stypy_type_of_self = None
            mp_igam_fac.stypy_type_store = module_type_store
            mp_igam_fac.stypy_function_name = 'mp_igam_fac'
            mp_igam_fac.stypy_param_names_list = ['a', 'x']
            mp_igam_fac.stypy_varargs_param_name = None
            mp_igam_fac.stypy_kwargs_param_name = None
            mp_igam_fac.stypy_call_defaults = defaults
            mp_igam_fac.stypy_call_varargs = varargs
            mp_igam_fac.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_igam_fac', ['a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_igam_fac', localization, ['a', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_igam_fac(...)' code ##################

            
            # Call to power(...): (line 1423)
            # Processing the call arguments (line 1423)
            # Getting the type of 'x' (line 1423)
            x_549162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 32), 'x', False)
            # Getting the type of 'a' (line 1423)
            a_549163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 35), 'a', False)
            # Processing the call keyword arguments (line 1423)
            kwargs_549164 = {}
            # Getting the type of 'mpmath' (line 1423)
            mpmath_549160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 19), 'mpmath', False)
            # Obtaining the member 'power' of a type (line 1423)
            power_549161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1423, 19), mpmath_549160, 'power')
            # Calling power(args, kwargs) (line 1423)
            power_call_result_549165 = invoke(stypy.reporting.localization.Localization(__file__, 1423, 19), power_549161, *[x_549162, a_549163], **kwargs_549164)
            
            
            # Call to exp(...): (line 1423)
            # Processing the call arguments (line 1423)
            
            # Getting the type of 'x' (line 1423)
            x_549168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 50), 'x', False)
            # Applying the 'usub' unary operator (line 1423)
            result___neg___549169 = python_operator(stypy.reporting.localization.Localization(__file__, 1423, 49), 'usub', x_549168)
            
            # Processing the call keyword arguments (line 1423)
            kwargs_549170 = {}
            # Getting the type of 'mpmath' (line 1423)
            mpmath_549166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 38), 'mpmath', False)
            # Obtaining the member 'exp' of a type (line 1423)
            exp_549167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1423, 38), mpmath_549166, 'exp')
            # Calling exp(args, kwargs) (line 1423)
            exp_call_result_549171 = invoke(stypy.reporting.localization.Localization(__file__, 1423, 38), exp_549167, *[result___neg___549169], **kwargs_549170)
            
            # Applying the binary operator '*' (line 1423)
            result_mul_549172 = python_operator(stypy.reporting.localization.Localization(__file__, 1423, 19), '*', power_call_result_549165, exp_call_result_549171)
            
            
            # Call to gamma(...): (line 1423)
            # Processing the call arguments (line 1423)
            # Getting the type of 'a' (line 1423)
            a_549175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 66), 'a', False)
            # Processing the call keyword arguments (line 1423)
            kwargs_549176 = {}
            # Getting the type of 'mpmath' (line 1423)
            mpmath_549173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1423, 53), 'mpmath', False)
            # Obtaining the member 'gamma' of a type (line 1423)
            gamma_549174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1423, 53), mpmath_549173, 'gamma')
            # Calling gamma(args, kwargs) (line 1423)
            gamma_call_result_549177 = invoke(stypy.reporting.localization.Localization(__file__, 1423, 53), gamma_549174, *[a_549175], **kwargs_549176)
            
            # Applying the binary operator 'div' (line 1423)
            result_div_549178 = python_operator(stypy.reporting.localization.Localization(__file__, 1423, 52), 'div', result_mul_549172, gamma_call_result_549177)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1423)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1423, 12), 'stypy_return_type', result_div_549178)
            
            # ################# End of 'mp_igam_fac(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_igam_fac' in the type store
            # Getting the type of 'stypy_return_type' (line 1422)
            stypy_return_type_549179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1422, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549179)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_igam_fac'
            return stypy_return_type_549179

        # Assigning a type to the variable 'mp_igam_fac' (line 1422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1422, 8), 'mp_igam_fac', mp_igam_fac)
        
        # Call to assert_mpmath_equal(...): (line 1425)
        # Processing the call arguments (line 1425)
        # Getting the type of '_igam_fac' (line 1425)
        _igam_fac_549181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 28), '_igam_fac', False)
        # Getting the type of 'mp_igam_fac' (line 1426)
        mp_igam_fac_549182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1426, 28), 'mp_igam_fac', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1427)
        list_549183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1427, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1427)
        # Adding element type (line 1427)
        
        # Call to Arg(...): (line 1427)
        # Processing the call arguments (line 1427)
        int_549185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1427, 33), 'int')
        float_549186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1427, 36), 'float')
        # Processing the call keyword arguments (line 1427)
        # Getting the type of 'False' (line 1427)
        False_549187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 54), 'False', False)
        keyword_549188 = False_549187
        kwargs_549189 = {'inclusive_a': keyword_549188}
        # Getting the type of 'Arg' (line 1427)
        Arg_549184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1427)
        Arg_call_result_549190 = invoke(stypy.reporting.localization.Localization(__file__, 1427, 29), Arg_549184, *[int_549185, float_549186], **kwargs_549189)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1427, 28), list_549183, Arg_call_result_549190)
        # Adding element type (line 1427)
        
        # Call to Arg(...): (line 1427)
        # Processing the call arguments (line 1427)
        int_549192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1427, 66), 'int')
        float_549193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1427, 69), 'float')
        # Processing the call keyword arguments (line 1427)
        kwargs_549194 = {}
        # Getting the type of 'Arg' (line 1427)
        Arg_549191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1427, 62), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1427)
        Arg_call_result_549195 = invoke(stypy.reporting.localization.Localization(__file__, 1427, 62), Arg_549191, *[int_549192, float_549193], **kwargs_549194)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1427, 28), list_549183, Arg_call_result_549195)
        
        # Processing the call keyword arguments (line 1425)
        float_549196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1428, 33), 'float')
        keyword_549197 = float_549196
        kwargs_549198 = {'rtol': keyword_549197}
        # Getting the type of 'assert_mpmath_equal' (line 1425)
        assert_mpmath_equal_549180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1425, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1425)
        assert_mpmath_equal_call_result_549199 = invoke(stypy.reporting.localization.Localization(__file__, 1425, 8), assert_mpmath_equal_549180, *[_igam_fac_549181, mp_igam_fac_549182, list_549183], **kwargs_549198)
        
        
        # ################# End of 'test_igam_fac(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_igam_fac' in the type store
        # Getting the type of 'stypy_return_type' (line 1419)
        stypy_return_type_549200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1419, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549200)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_igam_fac'
        return stypy_return_type_549200


    @norecursion
    def test_j0(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_j0'
        module_type_store = module_type_store.open_function_context('test_j0', 1430, 4, False)
        # Assigning a type to the variable 'self' (line 1431)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1431, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_j0.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_j0.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_j0.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_j0.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_j0')
        TestSystematic.test_j0.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_j0.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_j0.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_j0.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_j0.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_j0.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_j0.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_j0', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_j0', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_j0(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1436)
        # Processing the call arguments (line 1436)
        # Getting the type of 'sc' (line 1436)
        sc_549202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1436, 28), 'sc', False)
        # Obtaining the member 'j0' of a type (line 1436)
        j0_549203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1436, 28), sc_549202, 'j0')
        # Getting the type of 'mpmath' (line 1437)
        mpmath_549204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1437, 28), 'mpmath', False)
        # Obtaining the member 'j0' of a type (line 1437)
        j0_549205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1437, 28), mpmath_549204, 'j0')
        
        # Obtaining an instance of the builtin type 'list' (line 1438)
        list_549206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1438, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1438)
        # Adding element type (line 1438)
        
        # Call to Arg(...): (line 1438)
        # Processing the call arguments (line 1438)
        float_549208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1438, 33), 'float')
        float_549209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1438, 39), 'float')
        # Processing the call keyword arguments (line 1438)
        kwargs_549210 = {}
        # Getting the type of 'Arg' (line 1438)
        Arg_549207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1438, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1438)
        Arg_call_result_549211 = invoke(stypy.reporting.localization.Localization(__file__, 1438, 29), Arg_549207, *[float_549208, float_549209], **kwargs_549210)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1438, 28), list_549206, Arg_call_result_549211)
        
        # Processing the call keyword arguments (line 1436)
        kwargs_549212 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1436)
        assert_mpmath_equal_549201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1436, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1436)
        assert_mpmath_equal_call_result_549213 = invoke(stypy.reporting.localization.Localization(__file__, 1436, 8), assert_mpmath_equal_549201, *[j0_549203, j0_549205, list_549206], **kwargs_549212)
        
        
        # Call to assert_mpmath_equal(...): (line 1439)
        # Processing the call arguments (line 1439)
        # Getting the type of 'sc' (line 1439)
        sc_549215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1439, 28), 'sc', False)
        # Obtaining the member 'j0' of a type (line 1439)
        j0_549216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1439, 28), sc_549215, 'j0')
        # Getting the type of 'mpmath' (line 1440)
        mpmath_549217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1440, 28), 'mpmath', False)
        # Obtaining the member 'j0' of a type (line 1440)
        j0_549218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1440, 28), mpmath_549217, 'j0')
        
        # Obtaining an instance of the builtin type 'list' (line 1441)
        list_549219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1441, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1441)
        # Adding element type (line 1441)
        
        # Call to Arg(...): (line 1441)
        # Processing the call arguments (line 1441)
        float_549221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1441, 33), 'float')
        float_549222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1441, 39), 'float')
        # Processing the call keyword arguments (line 1441)
        kwargs_549223 = {}
        # Getting the type of 'Arg' (line 1441)
        Arg_549220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1441, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1441)
        Arg_call_result_549224 = invoke(stypy.reporting.localization.Localization(__file__, 1441, 29), Arg_549220, *[float_549221, float_549222], **kwargs_549223)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1441, 28), list_549219, Arg_call_result_549224)
        
        # Processing the call keyword arguments (line 1439)
        float_549225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1442, 33), 'float')
        keyword_549226 = float_549225
        kwargs_549227 = {'rtol': keyword_549226}
        # Getting the type of 'assert_mpmath_equal' (line 1439)
        assert_mpmath_equal_549214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1439, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1439)
        assert_mpmath_equal_call_result_549228 = invoke(stypy.reporting.localization.Localization(__file__, 1439, 8), assert_mpmath_equal_549214, *[j0_549216, j0_549218, list_549219], **kwargs_549227)
        
        
        # ################# End of 'test_j0(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_j0' in the type store
        # Getting the type of 'stypy_return_type' (line 1430)
        stypy_return_type_549229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1430, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549229)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_j0'
        return stypy_return_type_549229


    @norecursion
    def test_j1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_j1'
        module_type_store = module_type_store.open_function_context('test_j1', 1444, 4, False)
        # Assigning a type to the variable 'self' (line 1445)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1445, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_j1.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_j1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_j1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_j1.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_j1')
        TestSystematic.test_j1.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_j1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_j1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_j1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_j1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_j1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_j1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_j1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_j1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_j1(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1446)
        # Processing the call arguments (line 1446)
        # Getting the type of 'sc' (line 1446)
        sc_549231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1446, 28), 'sc', False)
        # Obtaining the member 'j1' of a type (line 1446)
        j1_549232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1446, 28), sc_549231, 'j1')
        # Getting the type of 'mpmath' (line 1447)
        mpmath_549233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1447, 28), 'mpmath', False)
        # Obtaining the member 'j1' of a type (line 1447)
        j1_549234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1447, 28), mpmath_549233, 'j1')
        
        # Obtaining an instance of the builtin type 'list' (line 1448)
        list_549235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1448)
        # Adding element type (line 1448)
        
        # Call to Arg(...): (line 1448)
        # Processing the call arguments (line 1448)
        float_549237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 33), 'float')
        float_549238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1448, 39), 'float')
        # Processing the call keyword arguments (line 1448)
        kwargs_549239 = {}
        # Getting the type of 'Arg' (line 1448)
        Arg_549236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1448, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1448)
        Arg_call_result_549240 = invoke(stypy.reporting.localization.Localization(__file__, 1448, 29), Arg_549236, *[float_549237, float_549238], **kwargs_549239)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1448, 28), list_549235, Arg_call_result_549240)
        
        # Processing the call keyword arguments (line 1446)
        kwargs_549241 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1446)
        assert_mpmath_equal_549230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1446, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1446)
        assert_mpmath_equal_call_result_549242 = invoke(stypy.reporting.localization.Localization(__file__, 1446, 8), assert_mpmath_equal_549230, *[j1_549232, j1_549234, list_549235], **kwargs_549241)
        
        
        # Call to assert_mpmath_equal(...): (line 1449)
        # Processing the call arguments (line 1449)
        # Getting the type of 'sc' (line 1449)
        sc_549244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 28), 'sc', False)
        # Obtaining the member 'j1' of a type (line 1449)
        j1_549245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1449, 28), sc_549244, 'j1')
        # Getting the type of 'mpmath' (line 1450)
        mpmath_549246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1450, 28), 'mpmath', False)
        # Obtaining the member 'j1' of a type (line 1450)
        j1_549247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1450, 28), mpmath_549246, 'j1')
        
        # Obtaining an instance of the builtin type 'list' (line 1451)
        list_549248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1451, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1451)
        # Adding element type (line 1451)
        
        # Call to Arg(...): (line 1451)
        # Processing the call arguments (line 1451)
        float_549250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1451, 33), 'float')
        float_549251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1451, 39), 'float')
        # Processing the call keyword arguments (line 1451)
        kwargs_549252 = {}
        # Getting the type of 'Arg' (line 1451)
        Arg_549249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1451, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1451)
        Arg_call_result_549253 = invoke(stypy.reporting.localization.Localization(__file__, 1451, 29), Arg_549249, *[float_549250, float_549251], **kwargs_549252)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1451, 28), list_549248, Arg_call_result_549253)
        
        # Processing the call keyword arguments (line 1449)
        float_549254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1452, 33), 'float')
        keyword_549255 = float_549254
        kwargs_549256 = {'rtol': keyword_549255}
        # Getting the type of 'assert_mpmath_equal' (line 1449)
        assert_mpmath_equal_549243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1449, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1449)
        assert_mpmath_equal_call_result_549257 = invoke(stypy.reporting.localization.Localization(__file__, 1449, 8), assert_mpmath_equal_549243, *[j1_549245, j1_549247, list_549248], **kwargs_549256)
        
        
        # ################# End of 'test_j1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_j1' in the type store
        # Getting the type of 'stypy_return_type' (line 1444)
        stypy_return_type_549258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1444, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549258)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_j1'
        return stypy_return_type_549258


    @norecursion
    def test_jacobi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_jacobi'
        module_type_store = module_type_store.open_function_context('test_jacobi', 1454, 4, False)
        # Assigning a type to the variable 'self' (line 1455)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1455, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_jacobi')
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_jacobi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_jacobi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_jacobi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_jacobi(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1456)
        # Processing the call arguments (line 1456)
        # Getting the type of 'sc' (line 1456)
        sc_549260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1456, 28), 'sc', False)
        # Obtaining the member 'eval_jacobi' of a type (line 1456)
        eval_jacobi_549261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1456, 28), sc_549260, 'eval_jacobi')
        
        # Call to exception_to_nan(...): (line 1457)
        # Processing the call arguments (line 1457)

        @norecursion
        def _stypy_temp_lambda_423(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_423'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_423', 1457, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_423.stypy_localization = localization
            _stypy_temp_lambda_423.stypy_type_of_self = None
            _stypy_temp_lambda_423.stypy_type_store = module_type_store
            _stypy_temp_lambda_423.stypy_function_name = '_stypy_temp_lambda_423'
            _stypy_temp_lambda_423.stypy_param_names_list = ['a', 'b', 'c', 'x']
            _stypy_temp_lambda_423.stypy_varargs_param_name = None
            _stypy_temp_lambda_423.stypy_kwargs_param_name = None
            _stypy_temp_lambda_423.stypy_call_defaults = defaults
            _stypy_temp_lambda_423.stypy_call_varargs = varargs
            _stypy_temp_lambda_423.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_423', ['a', 'b', 'c', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_423', ['a', 'b', 'c', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to jacobi(...): (line 1457)
            # Processing the call arguments (line 1457)
            # Getting the type of 'a' (line 1457)
            a_549265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 78), 'a', False)
            # Getting the type of 'b' (line 1457)
            b_549266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 81), 'b', False)
            # Getting the type of 'c' (line 1457)
            c_549267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 84), 'c', False)
            # Getting the type of 'x' (line 1457)
            x_549268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 87), 'x', False)
            # Processing the call keyword arguments (line 1457)
            # Getting the type of 'HYPERKW' (line 1457)
            HYPERKW_549269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 92), 'HYPERKW', False)
            kwargs_549270 = {'HYPERKW_549269': HYPERKW_549269}
            # Getting the type of 'mpmath' (line 1457)
            mpmath_549263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 64), 'mpmath', False)
            # Obtaining the member 'jacobi' of a type (line 1457)
            jacobi_549264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1457, 64), mpmath_549263, 'jacobi')
            # Calling jacobi(args, kwargs) (line 1457)
            jacobi_call_result_549271 = invoke(stypy.reporting.localization.Localization(__file__, 1457, 64), jacobi_549264, *[a_549265, b_549266, c_549267, x_549268], **kwargs_549270)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1457)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1457, 45), 'stypy_return_type', jacobi_call_result_549271)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_423' in the type store
            # Getting the type of 'stypy_return_type' (line 1457)
            stypy_return_type_549272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549272)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_423'
            return stypy_return_type_549272

        # Assigning a type to the variable '_stypy_temp_lambda_423' (line 1457)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1457, 45), '_stypy_temp_lambda_423', _stypy_temp_lambda_423)
        # Getting the type of '_stypy_temp_lambda_423' (line 1457)
        _stypy_temp_lambda_423_549273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 45), '_stypy_temp_lambda_423')
        # Processing the call keyword arguments (line 1457)
        kwargs_549274 = {}
        # Getting the type of 'exception_to_nan' (line 1457)
        exception_to_nan_549262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1457, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1457)
        exception_to_nan_call_result_549275 = invoke(stypy.reporting.localization.Localization(__file__, 1457, 28), exception_to_nan_549262, *[_stypy_temp_lambda_423_549273], **kwargs_549274)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1458)
        list_549276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1458, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1458)
        # Adding element type (line 1458)
        
        # Call to Arg(...): (line 1458)
        # Processing the call keyword arguments (line 1458)
        kwargs_549278 = {}
        # Getting the type of 'Arg' (line 1458)
        Arg_549277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1458)
        Arg_call_result_549279 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 29), Arg_549277, *[], **kwargs_549278)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 28), list_549276, Arg_call_result_549279)
        # Adding element type (line 1458)
        
        # Call to Arg(...): (line 1458)
        # Processing the call keyword arguments (line 1458)
        kwargs_549281 = {}
        # Getting the type of 'Arg' (line 1458)
        Arg_549280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1458)
        Arg_call_result_549282 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 36), Arg_549280, *[], **kwargs_549281)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 28), list_549276, Arg_call_result_549282)
        # Adding element type (line 1458)
        
        # Call to Arg(...): (line 1458)
        # Processing the call keyword arguments (line 1458)
        kwargs_549284 = {}
        # Getting the type of 'Arg' (line 1458)
        Arg_549283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 43), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1458)
        Arg_call_result_549285 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 43), Arg_549283, *[], **kwargs_549284)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 28), list_549276, Arg_call_result_549285)
        # Adding element type (line 1458)
        
        # Call to Arg(...): (line 1458)
        # Processing the call keyword arguments (line 1458)
        kwargs_549287 = {}
        # Getting the type of 'Arg' (line 1458)
        Arg_549286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1458, 50), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1458)
        Arg_call_result_549288 = invoke(stypy.reporting.localization.Localization(__file__, 1458, 50), Arg_549286, *[], **kwargs_549287)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1458, 28), list_549276, Arg_call_result_549288)
        
        # Processing the call keyword arguments (line 1456)
        kwargs_549289 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1456)
        assert_mpmath_equal_549259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1456, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1456)
        assert_mpmath_equal_call_result_549290 = invoke(stypy.reporting.localization.Localization(__file__, 1456, 8), assert_mpmath_equal_549259, *[eval_jacobi_549261, exception_to_nan_call_result_549275, list_549276], **kwargs_549289)
        
        
        # Call to assert_mpmath_equal(...): (line 1459)
        # Processing the call arguments (line 1459)

        @norecursion
        def _stypy_temp_lambda_424(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_424'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_424', 1459, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_424.stypy_localization = localization
            _stypy_temp_lambda_424.stypy_type_of_self = None
            _stypy_temp_lambda_424.stypy_type_store = module_type_store
            _stypy_temp_lambda_424.stypy_function_name = '_stypy_temp_lambda_424'
            _stypy_temp_lambda_424.stypy_param_names_list = ['n', 'b', 'c', 'x']
            _stypy_temp_lambda_424.stypy_varargs_param_name = None
            _stypy_temp_lambda_424.stypy_kwargs_param_name = None
            _stypy_temp_lambda_424.stypy_call_defaults = defaults
            _stypy_temp_lambda_424.stypy_call_varargs = varargs
            _stypy_temp_lambda_424.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_424', ['n', 'b', 'c', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_424', ['n', 'b', 'c', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_jacobi(...): (line 1459)
            # Processing the call arguments (line 1459)
            
            # Call to int(...): (line 1459)
            # Processing the call arguments (line 1459)
            # Getting the type of 'n' (line 1459)
            n_549295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 66), 'n', False)
            # Processing the call keyword arguments (line 1459)
            kwargs_549296 = {}
            # Getting the type of 'int' (line 1459)
            int_549294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 62), 'int', False)
            # Calling int(args, kwargs) (line 1459)
            int_call_result_549297 = invoke(stypy.reporting.localization.Localization(__file__, 1459, 62), int_549294, *[n_549295], **kwargs_549296)
            
            # Getting the type of 'b' (line 1459)
            b_549298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 70), 'b', False)
            # Getting the type of 'c' (line 1459)
            c_549299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 73), 'c', False)
            # Getting the type of 'x' (line 1459)
            x_549300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 76), 'x', False)
            # Processing the call keyword arguments (line 1459)
            kwargs_549301 = {}
            # Getting the type of 'sc' (line 1459)
            sc_549292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 47), 'sc', False)
            # Obtaining the member 'eval_jacobi' of a type (line 1459)
            eval_jacobi_549293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1459, 47), sc_549292, 'eval_jacobi')
            # Calling eval_jacobi(args, kwargs) (line 1459)
            eval_jacobi_call_result_549302 = invoke(stypy.reporting.localization.Localization(__file__, 1459, 47), eval_jacobi_549293, *[int_call_result_549297, b_549298, c_549299, x_549300], **kwargs_549301)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1459)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1459, 28), 'stypy_return_type', eval_jacobi_call_result_549302)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_424' in the type store
            # Getting the type of 'stypy_return_type' (line 1459)
            stypy_return_type_549303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549303)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_424'
            return stypy_return_type_549303

        # Assigning a type to the variable '_stypy_temp_lambda_424' (line 1459)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1459, 28), '_stypy_temp_lambda_424', _stypy_temp_lambda_424)
        # Getting the type of '_stypy_temp_lambda_424' (line 1459)
        _stypy_temp_lambda_424_549304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 28), '_stypy_temp_lambda_424')
        
        # Call to exception_to_nan(...): (line 1460)
        # Processing the call arguments (line 1460)

        @norecursion
        def _stypy_temp_lambda_425(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_425'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_425', 1460, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_425.stypy_localization = localization
            _stypy_temp_lambda_425.stypy_type_of_self = None
            _stypy_temp_lambda_425.stypy_type_store = module_type_store
            _stypy_temp_lambda_425.stypy_function_name = '_stypy_temp_lambda_425'
            _stypy_temp_lambda_425.stypy_param_names_list = ['a', 'b', 'c', 'x']
            _stypy_temp_lambda_425.stypy_varargs_param_name = None
            _stypy_temp_lambda_425.stypy_kwargs_param_name = None
            _stypy_temp_lambda_425.stypy_call_defaults = defaults
            _stypy_temp_lambda_425.stypy_call_varargs = varargs
            _stypy_temp_lambda_425.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_425', ['a', 'b', 'c', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_425', ['a', 'b', 'c', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to jacobi(...): (line 1460)
            # Processing the call arguments (line 1460)
            # Getting the type of 'a' (line 1460)
            a_549308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 78), 'a', False)
            # Getting the type of 'b' (line 1460)
            b_549309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 81), 'b', False)
            # Getting the type of 'c' (line 1460)
            c_549310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 84), 'c', False)
            # Getting the type of 'x' (line 1460)
            x_549311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 87), 'x', False)
            # Processing the call keyword arguments (line 1460)
            # Getting the type of 'HYPERKW' (line 1460)
            HYPERKW_549312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 92), 'HYPERKW', False)
            kwargs_549313 = {'HYPERKW_549312': HYPERKW_549312}
            # Getting the type of 'mpmath' (line 1460)
            mpmath_549306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 64), 'mpmath', False)
            # Obtaining the member 'jacobi' of a type (line 1460)
            jacobi_549307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1460, 64), mpmath_549306, 'jacobi')
            # Calling jacobi(args, kwargs) (line 1460)
            jacobi_call_result_549314 = invoke(stypy.reporting.localization.Localization(__file__, 1460, 64), jacobi_549307, *[a_549308, b_549309, c_549310, x_549311], **kwargs_549313)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1460)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1460, 45), 'stypy_return_type', jacobi_call_result_549314)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_425' in the type store
            # Getting the type of 'stypy_return_type' (line 1460)
            stypy_return_type_549315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549315)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_425'
            return stypy_return_type_549315

        # Assigning a type to the variable '_stypy_temp_lambda_425' (line 1460)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1460, 45), '_stypy_temp_lambda_425', _stypy_temp_lambda_425)
        # Getting the type of '_stypy_temp_lambda_425' (line 1460)
        _stypy_temp_lambda_425_549316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 45), '_stypy_temp_lambda_425')
        # Processing the call keyword arguments (line 1460)
        kwargs_549317 = {}
        # Getting the type of 'exception_to_nan' (line 1460)
        exception_to_nan_549305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1460, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1460)
        exception_to_nan_call_result_549318 = invoke(stypy.reporting.localization.Localization(__file__, 1460, 28), exception_to_nan_549305, *[_stypy_temp_lambda_425_549316], **kwargs_549317)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1461)
        list_549319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1461, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1461)
        # Adding element type (line 1461)
        
        # Call to IntArg(...): (line 1461)
        # Processing the call keyword arguments (line 1461)
        kwargs_549321 = {}
        # Getting the type of 'IntArg' (line 1461)
        IntArg_549320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1461, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1461)
        IntArg_call_result_549322 = invoke(stypy.reporting.localization.Localization(__file__, 1461, 29), IntArg_549320, *[], **kwargs_549321)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1461, 28), list_549319, IntArg_call_result_549322)
        # Adding element type (line 1461)
        
        # Call to Arg(...): (line 1461)
        # Processing the call keyword arguments (line 1461)
        kwargs_549324 = {}
        # Getting the type of 'Arg' (line 1461)
        Arg_549323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1461, 39), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1461)
        Arg_call_result_549325 = invoke(stypy.reporting.localization.Localization(__file__, 1461, 39), Arg_549323, *[], **kwargs_549324)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1461, 28), list_549319, Arg_call_result_549325)
        # Adding element type (line 1461)
        
        # Call to Arg(...): (line 1461)
        # Processing the call keyword arguments (line 1461)
        kwargs_549327 = {}
        # Getting the type of 'Arg' (line 1461)
        Arg_549326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1461, 46), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1461)
        Arg_call_result_549328 = invoke(stypy.reporting.localization.Localization(__file__, 1461, 46), Arg_549326, *[], **kwargs_549327)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1461, 28), list_549319, Arg_call_result_549328)
        # Adding element type (line 1461)
        
        # Call to Arg(...): (line 1461)
        # Processing the call keyword arguments (line 1461)
        kwargs_549330 = {}
        # Getting the type of 'Arg' (line 1461)
        Arg_549329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1461, 53), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1461)
        Arg_call_result_549331 = invoke(stypy.reporting.localization.Localization(__file__, 1461, 53), Arg_549329, *[], **kwargs_549330)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1461, 28), list_549319, Arg_call_result_549331)
        
        # Processing the call keyword arguments (line 1459)
        kwargs_549332 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1459)
        assert_mpmath_equal_549291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1459, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1459)
        assert_mpmath_equal_call_result_549333 = invoke(stypy.reporting.localization.Localization(__file__, 1459, 8), assert_mpmath_equal_549291, *[_stypy_temp_lambda_424_549304, exception_to_nan_call_result_549318, list_549319], **kwargs_549332)
        
        
        # ################# End of 'test_jacobi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_jacobi' in the type store
        # Getting the type of 'stypy_return_type' (line 1454)
        stypy_return_type_549334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1454, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549334)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_jacobi'
        return stypy_return_type_549334


    @norecursion
    def test_jacobi_int(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_jacobi_int'
        module_type_store = module_type_store.open_function_context('test_jacobi_int', 1463, 4, False)
        # Assigning a type to the variable 'self' (line 1464)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1464, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_jacobi_int')
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_jacobi_int.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_jacobi_int', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_jacobi_int', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_jacobi_int(...)' code ##################


        @norecursion
        def jacobi(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'jacobi'
            module_type_store = module_type_store.open_function_context('jacobi', 1465, 8, False)
            
            # Passed parameters checking function
            jacobi.stypy_localization = localization
            jacobi.stypy_type_of_self = None
            jacobi.stypy_type_store = module_type_store
            jacobi.stypy_function_name = 'jacobi'
            jacobi.stypy_param_names_list = ['n', 'a', 'b', 'x']
            jacobi.stypy_varargs_param_name = None
            jacobi.stypy_kwargs_param_name = None
            jacobi.stypy_call_defaults = defaults
            jacobi.stypy_call_varargs = varargs
            jacobi.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'jacobi', ['n', 'a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'jacobi', localization, ['n', 'a', 'b', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'jacobi(...)' code ##################

            
            
            # Getting the type of 'n' (line 1467)
            n_549335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 15), 'n')
            int_549336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1467, 20), 'int')
            # Applying the binary operator '==' (line 1467)
            result_eq_549337 = python_operator(stypy.reporting.localization.Localization(__file__, 1467, 15), '==', n_549335, int_549336)
            
            # Testing the type of an if condition (line 1467)
            if_condition_549338 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1467, 12), result_eq_549337)
            # Assigning a type to the variable 'if_condition_549338' (line 1467)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1467, 12), 'if_condition_549338', if_condition_549338)
            # SSA begins for if statement (line 1467)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            float_549339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1468, 23), 'float')
            # Assigning a type to the variable 'stypy_return_type' (line 1468)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1468, 16), 'stypy_return_type', float_549339)
            # SSA join for if statement (line 1467)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to jacobi(...): (line 1469)
            # Processing the call arguments (line 1469)
            # Getting the type of 'n' (line 1469)
            n_549342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 33), 'n', False)
            # Getting the type of 'a' (line 1469)
            a_549343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 36), 'a', False)
            # Getting the type of 'b' (line 1469)
            b_549344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 39), 'b', False)
            # Getting the type of 'x' (line 1469)
            x_549345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 42), 'x', False)
            # Processing the call keyword arguments (line 1469)
            kwargs_549346 = {}
            # Getting the type of 'mpmath' (line 1469)
            mpmath_549340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 19), 'mpmath', False)
            # Obtaining the member 'jacobi' of a type (line 1469)
            jacobi_549341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1469, 19), mpmath_549340, 'jacobi')
            # Calling jacobi(args, kwargs) (line 1469)
            jacobi_call_result_549347 = invoke(stypy.reporting.localization.Localization(__file__, 1469, 19), jacobi_549341, *[n_549342, a_549343, b_549344, x_549345], **kwargs_549346)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1469)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1469, 12), 'stypy_return_type', jacobi_call_result_549347)
            
            # ################# End of 'jacobi(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'jacobi' in the type store
            # Getting the type of 'stypy_return_type' (line 1465)
            stypy_return_type_549348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549348)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'jacobi'
            return stypy_return_type_549348

        # Assigning a type to the variable 'jacobi' (line 1465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1465, 8), 'jacobi', jacobi)
        
        # Call to assert_mpmath_equal(...): (line 1470)
        # Processing the call arguments (line 1470)

        @norecursion
        def _stypy_temp_lambda_426(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_426'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_426', 1470, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_426.stypy_localization = localization
            _stypy_temp_lambda_426.stypy_type_of_self = None
            _stypy_temp_lambda_426.stypy_type_store = module_type_store
            _stypy_temp_lambda_426.stypy_function_name = '_stypy_temp_lambda_426'
            _stypy_temp_lambda_426.stypy_param_names_list = ['n', 'a', 'b', 'x']
            _stypy_temp_lambda_426.stypy_varargs_param_name = None
            _stypy_temp_lambda_426.stypy_kwargs_param_name = None
            _stypy_temp_lambda_426.stypy_call_defaults = defaults
            _stypy_temp_lambda_426.stypy_call_varargs = varargs
            _stypy_temp_lambda_426.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_426', ['n', 'a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_426', ['n', 'a', 'b', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_jacobi(...): (line 1470)
            # Processing the call arguments (line 1470)
            
            # Call to int(...): (line 1470)
            # Processing the call arguments (line 1470)
            # Getting the type of 'n' (line 1470)
            n_549353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 66), 'n', False)
            # Processing the call keyword arguments (line 1470)
            kwargs_549354 = {}
            # Getting the type of 'int' (line 1470)
            int_549352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 62), 'int', False)
            # Calling int(args, kwargs) (line 1470)
            int_call_result_549355 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 62), int_549352, *[n_549353], **kwargs_549354)
            
            # Getting the type of 'a' (line 1470)
            a_549356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 70), 'a', False)
            # Getting the type of 'b' (line 1470)
            b_549357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 73), 'b', False)
            # Getting the type of 'x' (line 1470)
            x_549358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 76), 'x', False)
            # Processing the call keyword arguments (line 1470)
            kwargs_549359 = {}
            # Getting the type of 'sc' (line 1470)
            sc_549350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 47), 'sc', False)
            # Obtaining the member 'eval_jacobi' of a type (line 1470)
            eval_jacobi_549351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1470, 47), sc_549350, 'eval_jacobi')
            # Calling eval_jacobi(args, kwargs) (line 1470)
            eval_jacobi_call_result_549360 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 47), eval_jacobi_549351, *[int_call_result_549355, a_549356, b_549357, x_549358], **kwargs_549359)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1470)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 28), 'stypy_return_type', eval_jacobi_call_result_549360)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_426' in the type store
            # Getting the type of 'stypy_return_type' (line 1470)
            stypy_return_type_549361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549361)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_426'
            return stypy_return_type_549361

        # Assigning a type to the variable '_stypy_temp_lambda_426' (line 1470)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 28), '_stypy_temp_lambda_426', _stypy_temp_lambda_426)
        # Getting the type of '_stypy_temp_lambda_426' (line 1470)
        _stypy_temp_lambda_426_549362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 28), '_stypy_temp_lambda_426')

        @norecursion
        def _stypy_temp_lambda_427(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_427'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_427', 1471, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_427.stypy_localization = localization
            _stypy_temp_lambda_427.stypy_type_of_self = None
            _stypy_temp_lambda_427.stypy_type_store = module_type_store
            _stypy_temp_lambda_427.stypy_function_name = '_stypy_temp_lambda_427'
            _stypy_temp_lambda_427.stypy_param_names_list = ['n', 'a', 'b', 'x']
            _stypy_temp_lambda_427.stypy_varargs_param_name = None
            _stypy_temp_lambda_427.stypy_kwargs_param_name = None
            _stypy_temp_lambda_427.stypy_call_defaults = defaults
            _stypy_temp_lambda_427.stypy_call_varargs = varargs
            _stypy_temp_lambda_427.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_427', ['n', 'a', 'b', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_427', ['n', 'a', 'b', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to (...): (line 1471)
            # Processing the call arguments (line 1471)
            # Getting the type of 'n' (line 1471)
            n_549367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 72), 'n', False)
            # Getting the type of 'a' (line 1471)
            a_549368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 75), 'a', False)
            # Getting the type of 'b' (line 1471)
            b_549369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 78), 'b', False)
            # Getting the type of 'x' (line 1471)
            x_549370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 81), 'x', False)
            # Processing the call keyword arguments (line 1471)
            # Getting the type of 'HYPERKW' (line 1471)
            HYPERKW_549371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 86), 'HYPERKW', False)
            kwargs_549372 = {'HYPERKW_549371': HYPERKW_549371}
            
            # Call to exception_to_nan(...): (line 1471)
            # Processing the call arguments (line 1471)
            # Getting the type of 'jacobi' (line 1471)
            jacobi_549364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 64), 'jacobi', False)
            # Processing the call keyword arguments (line 1471)
            kwargs_549365 = {}
            # Getting the type of 'exception_to_nan' (line 1471)
            exception_to_nan_549363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 47), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1471)
            exception_to_nan_call_result_549366 = invoke(stypy.reporting.localization.Localization(__file__, 1471, 47), exception_to_nan_549363, *[jacobi_549364], **kwargs_549365)
            
            # Calling (args, kwargs) (line 1471)
            _call_result_549373 = invoke(stypy.reporting.localization.Localization(__file__, 1471, 47), exception_to_nan_call_result_549366, *[n_549367, a_549368, b_549369, x_549370], **kwargs_549372)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1471)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1471, 28), 'stypy_return_type', _call_result_549373)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_427' in the type store
            # Getting the type of 'stypy_return_type' (line 1471)
            stypy_return_type_549374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549374)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_427'
            return stypy_return_type_549374

        # Assigning a type to the variable '_stypy_temp_lambda_427' (line 1471)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1471, 28), '_stypy_temp_lambda_427', _stypy_temp_lambda_427)
        # Getting the type of '_stypy_temp_lambda_427' (line 1471)
        _stypy_temp_lambda_427_549375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 28), '_stypy_temp_lambda_427')
        
        # Obtaining an instance of the builtin type 'list' (line 1472)
        list_549376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1472, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1472)
        # Adding element type (line 1472)
        
        # Call to IntArg(...): (line 1472)
        # Processing the call keyword arguments (line 1472)
        kwargs_549378 = {}
        # Getting the type of 'IntArg' (line 1472)
        IntArg_549377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1472)
        IntArg_call_result_549379 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 29), IntArg_549377, *[], **kwargs_549378)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1472, 28), list_549376, IntArg_call_result_549379)
        # Adding element type (line 1472)
        
        # Call to Arg(...): (line 1472)
        # Processing the call keyword arguments (line 1472)
        kwargs_549381 = {}
        # Getting the type of 'Arg' (line 1472)
        Arg_549380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 39), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1472)
        Arg_call_result_549382 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 39), Arg_549380, *[], **kwargs_549381)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1472, 28), list_549376, Arg_call_result_549382)
        # Adding element type (line 1472)
        
        # Call to Arg(...): (line 1472)
        # Processing the call keyword arguments (line 1472)
        kwargs_549384 = {}
        # Getting the type of 'Arg' (line 1472)
        Arg_549383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 46), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1472)
        Arg_call_result_549385 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 46), Arg_549383, *[], **kwargs_549384)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1472, 28), list_549376, Arg_call_result_549385)
        # Adding element type (line 1472)
        
        # Call to Arg(...): (line 1472)
        # Processing the call keyword arguments (line 1472)
        kwargs_549387 = {}
        # Getting the type of 'Arg' (line 1472)
        Arg_549386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 53), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1472)
        Arg_call_result_549388 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 53), Arg_549386, *[], **kwargs_549387)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1472, 28), list_549376, Arg_call_result_549388)
        
        # Processing the call keyword arguments (line 1470)
        int_549389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1473, 30), 'int')
        keyword_549390 = int_549389
        int_549391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1473, 41), 'int')
        keyword_549392 = int_549391
        kwargs_549393 = {'dps': keyword_549392, 'n': keyword_549390}
        # Getting the type of 'assert_mpmath_equal' (line 1470)
        assert_mpmath_equal_549349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1470)
        assert_mpmath_equal_call_result_549394 = invoke(stypy.reporting.localization.Localization(__file__, 1470, 8), assert_mpmath_equal_549349, *[_stypy_temp_lambda_426_549362, _stypy_temp_lambda_427_549375, list_549376], **kwargs_549393)
        
        
        # ################# End of 'test_jacobi_int(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_jacobi_int' in the type store
        # Getting the type of 'stypy_return_type' (line 1463)
        stypy_return_type_549395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1463, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549395)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_jacobi_int'
        return stypy_return_type_549395


    @norecursion
    def test_kei(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_kei'
        module_type_store = module_type_store.open_function_context('test_kei', 1475, 4, False)
        # Assigning a type to the variable 'self' (line 1476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1476, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_kei.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_kei.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_kei.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_kei.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_kei')
        TestSystematic.test_kei.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_kei.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_kei.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_kei.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_kei.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_kei.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_kei.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_kei', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_kei', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_kei(...)' code ##################


        @norecursion
        def kei(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'kei'
            module_type_store = module_type_store.open_function_context('kei', 1476, 8, False)
            
            # Passed parameters checking function
            kei.stypy_localization = localization
            kei.stypy_type_of_self = None
            kei.stypy_type_store = module_type_store
            kei.stypy_function_name = 'kei'
            kei.stypy_param_names_list = ['x']
            kei.stypy_varargs_param_name = None
            kei.stypy_kwargs_param_name = None
            kei.stypy_call_defaults = defaults
            kei.stypy_call_varargs = varargs
            kei.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'kei', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'kei', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'kei(...)' code ##################

            
            
            # Getting the type of 'x' (line 1477)
            x_549396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1477, 15), 'x')
            int_549397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1477, 20), 'int')
            # Applying the binary operator '==' (line 1477)
            result_eq_549398 = python_operator(stypy.reporting.localization.Localization(__file__, 1477, 15), '==', x_549396, int_549397)
            
            # Testing the type of an if condition (line 1477)
            if_condition_549399 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1477, 12), result_eq_549398)
            # Assigning a type to the variable 'if_condition_549399' (line 1477)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1477, 12), 'if_condition_549399', if_condition_549399)
            # SSA begins for if statement (line 1477)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Getting the type of 'pi' (line 1479)
            pi_549400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1479, 24), 'pi')
            # Applying the 'usub' unary operator (line 1479)
            result___neg___549401 = python_operator(stypy.reporting.localization.Localization(__file__, 1479, 23), 'usub', pi_549400)
            
            int_549402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1479, 27), 'int')
            # Applying the binary operator 'div' (line 1479)
            result_div_549403 = python_operator(stypy.reporting.localization.Localization(__file__, 1479, 23), 'div', result___neg___549401, int_549402)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1479)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1479, 16), 'stypy_return_type', result_div_549403)
            # SSA join for if statement (line 1477)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to (...): (line 1480)
            # Processing the call arguments (line 1480)
            int_549409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1480, 48), 'int')
            # Getting the type of 'x' (line 1480)
            x_549410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 51), 'x', False)
            # Processing the call keyword arguments (line 1480)
            # Getting the type of 'HYPERKW' (line 1480)
            HYPERKW_549411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 56), 'HYPERKW', False)
            kwargs_549412 = {'HYPERKW_549411': HYPERKW_549411}
            
            # Call to exception_to_nan(...): (line 1480)
            # Processing the call arguments (line 1480)
            # Getting the type of 'mpmath' (line 1480)
            mpmath_549405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 36), 'mpmath', False)
            # Obtaining the member 'kei' of a type (line 1480)
            kei_549406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1480, 36), mpmath_549405, 'kei')
            # Processing the call keyword arguments (line 1480)
            kwargs_549407 = {}
            # Getting the type of 'exception_to_nan' (line 1480)
            exception_to_nan_549404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 19), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1480)
            exception_to_nan_call_result_549408 = invoke(stypy.reporting.localization.Localization(__file__, 1480, 19), exception_to_nan_549404, *[kei_549406], **kwargs_549407)
            
            # Calling (args, kwargs) (line 1480)
            _call_result_549413 = invoke(stypy.reporting.localization.Localization(__file__, 1480, 19), exception_to_nan_call_result_549408, *[int_549409, x_549410], **kwargs_549412)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1480)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1480, 12), 'stypy_return_type', _call_result_549413)
            
            # ################# End of 'kei(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'kei' in the type store
            # Getting the type of 'stypy_return_type' (line 1476)
            stypy_return_type_549414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549414)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'kei'
            return stypy_return_type_549414

        # Assigning a type to the variable 'kei' (line 1476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1476, 8), 'kei', kei)
        
        # Call to assert_mpmath_equal(...): (line 1481)
        # Processing the call arguments (line 1481)
        # Getting the type of 'sc' (line 1481)
        sc_549416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1481, 28), 'sc', False)
        # Obtaining the member 'kei' of a type (line 1481)
        kei_549417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1481, 28), sc_549416, 'kei')
        # Getting the type of 'kei' (line 1482)
        kei_549418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1482, 28), 'kei', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1483)
        list_549419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1483)
        # Adding element type (line 1483)
        
        # Call to Arg(...): (line 1483)
        # Processing the call arguments (line 1483)
        float_549421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 33), 'float')
        float_549422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 40), 'float')
        # Processing the call keyword arguments (line 1483)
        kwargs_549423 = {}
        # Getting the type of 'Arg' (line 1483)
        Arg_549420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1483)
        Arg_call_result_549424 = invoke(stypy.reporting.localization.Localization(__file__, 1483, 29), Arg_549420, *[float_549421, float_549422], **kwargs_549423)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1483, 28), list_549419, Arg_call_result_549424)
        
        # Processing the call keyword arguments (line 1481)
        int_549425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 50), 'int')
        keyword_549426 = int_549425
        kwargs_549427 = {'n': keyword_549426}
        # Getting the type of 'assert_mpmath_equal' (line 1481)
        assert_mpmath_equal_549415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1481, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1481)
        assert_mpmath_equal_call_result_549428 = invoke(stypy.reporting.localization.Localization(__file__, 1481, 8), assert_mpmath_equal_549415, *[kei_549417, kei_549418, list_549419], **kwargs_549427)
        
        
        # ################# End of 'test_kei(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_kei' in the type store
        # Getting the type of 'stypy_return_type' (line 1475)
        stypy_return_type_549429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1475, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549429)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_kei'
        return stypy_return_type_549429


    @norecursion
    def test_ker(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ker'
        module_type_store = module_type_store.open_function_context('test_ker', 1485, 4, False)
        # Assigning a type to the variable 'self' (line 1486)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1486, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_ker.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_ker.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_ker.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_ker.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_ker')
        TestSystematic.test_ker.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_ker.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_ker.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_ker.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_ker.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_ker.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_ker.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_ker', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ker', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ker(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1486)
        # Processing the call arguments (line 1486)
        # Getting the type of 'sc' (line 1486)
        sc_549431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 28), 'sc', False)
        # Obtaining the member 'ker' of a type (line 1486)
        ker_549432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1486, 28), sc_549431, 'ker')
        
        # Call to exception_to_nan(...): (line 1487)
        # Processing the call arguments (line 1487)

        @norecursion
        def _stypy_temp_lambda_428(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_428'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_428', 1487, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_428.stypy_localization = localization
            _stypy_temp_lambda_428.stypy_type_of_self = None
            _stypy_temp_lambda_428.stypy_type_store = module_type_store
            _stypy_temp_lambda_428.stypy_function_name = '_stypy_temp_lambda_428'
            _stypy_temp_lambda_428.stypy_param_names_list = ['x']
            _stypy_temp_lambda_428.stypy_varargs_param_name = None
            _stypy_temp_lambda_428.stypy_kwargs_param_name = None
            _stypy_temp_lambda_428.stypy_call_defaults = defaults
            _stypy_temp_lambda_428.stypy_call_varargs = varargs
            _stypy_temp_lambda_428.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_428', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_428', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to ker(...): (line 1487)
            # Processing the call arguments (line 1487)
            int_549436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1487, 66), 'int')
            # Getting the type of 'x' (line 1487)
            x_549437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 69), 'x', False)
            # Processing the call keyword arguments (line 1487)
            # Getting the type of 'HYPERKW' (line 1487)
            HYPERKW_549438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 74), 'HYPERKW', False)
            kwargs_549439 = {'HYPERKW_549438': HYPERKW_549438}
            # Getting the type of 'mpmath' (line 1487)
            mpmath_549434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 55), 'mpmath', False)
            # Obtaining the member 'ker' of a type (line 1487)
            ker_549435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1487, 55), mpmath_549434, 'ker')
            # Calling ker(args, kwargs) (line 1487)
            ker_call_result_549440 = invoke(stypy.reporting.localization.Localization(__file__, 1487, 55), ker_549435, *[int_549436, x_549437], **kwargs_549439)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1487)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1487, 45), 'stypy_return_type', ker_call_result_549440)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_428' in the type store
            # Getting the type of 'stypy_return_type' (line 1487)
            stypy_return_type_549441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549441)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_428'
            return stypy_return_type_549441

        # Assigning a type to the variable '_stypy_temp_lambda_428' (line 1487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1487, 45), '_stypy_temp_lambda_428', _stypy_temp_lambda_428)
        # Getting the type of '_stypy_temp_lambda_428' (line 1487)
        _stypy_temp_lambda_428_549442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 45), '_stypy_temp_lambda_428')
        # Processing the call keyword arguments (line 1487)
        kwargs_549443 = {}
        # Getting the type of 'exception_to_nan' (line 1487)
        exception_to_nan_549433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1487)
        exception_to_nan_call_result_549444 = invoke(stypy.reporting.localization.Localization(__file__, 1487, 28), exception_to_nan_549433, *[_stypy_temp_lambda_428_549442], **kwargs_549443)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1488)
        list_549445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1488, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1488)
        # Adding element type (line 1488)
        
        # Call to Arg(...): (line 1488)
        # Processing the call arguments (line 1488)
        float_549447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1488, 33), 'float')
        float_549448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1488, 40), 'float')
        # Processing the call keyword arguments (line 1488)
        kwargs_549449 = {}
        # Getting the type of 'Arg' (line 1488)
        Arg_549446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1488)
        Arg_call_result_549450 = invoke(stypy.reporting.localization.Localization(__file__, 1488, 29), Arg_549446, *[float_549447, float_549448], **kwargs_549449)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1488, 28), list_549445, Arg_call_result_549450)
        
        # Processing the call keyword arguments (line 1486)
        int_549451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1488, 50), 'int')
        keyword_549452 = int_549451
        kwargs_549453 = {'n': keyword_549452}
        # Getting the type of 'assert_mpmath_equal' (line 1486)
        assert_mpmath_equal_549430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1486, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1486)
        assert_mpmath_equal_call_result_549454 = invoke(stypy.reporting.localization.Localization(__file__, 1486, 8), assert_mpmath_equal_549430, *[ker_549432, exception_to_nan_call_result_549444, list_549445], **kwargs_549453)
        
        
        # ################# End of 'test_ker(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ker' in the type store
        # Getting the type of 'stypy_return_type' (line 1485)
        stypy_return_type_549455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1485, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549455)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ker'
        return stypy_return_type_549455


    @norecursion
    def test_laguerre(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_laguerre'
        module_type_store = module_type_store.open_function_context('test_laguerre', 1490, 4, False)
        # Assigning a type to the variable 'self' (line 1491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1491, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_laguerre')
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_laguerre.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_laguerre', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_laguerre', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_laguerre(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1492)
        # Processing the call arguments (line 1492)
        
        # Call to trace_args(...): (line 1492)
        # Processing the call arguments (line 1492)
        # Getting the type of 'sc' (line 1492)
        sc_549458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 39), 'sc', False)
        # Obtaining the member 'eval_laguerre' of a type (line 1492)
        eval_laguerre_549459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1492, 39), sc_549458, 'eval_laguerre')
        # Processing the call keyword arguments (line 1492)
        kwargs_549460 = {}
        # Getting the type of 'trace_args' (line 1492)
        trace_args_549457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 28), 'trace_args', False)
        # Calling trace_args(args, kwargs) (line 1492)
        trace_args_call_result_549461 = invoke(stypy.reporting.localization.Localization(__file__, 1492, 28), trace_args_549457, *[eval_laguerre_549459], **kwargs_549460)
        

        @norecursion
        def _stypy_temp_lambda_429(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_429'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_429', 1493, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_429.stypy_localization = localization
            _stypy_temp_lambda_429.stypy_type_of_self = None
            _stypy_temp_lambda_429.stypy_type_store = module_type_store
            _stypy_temp_lambda_429.stypy_function_name = '_stypy_temp_lambda_429'
            _stypy_temp_lambda_429.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_429.stypy_varargs_param_name = None
            _stypy_temp_lambda_429.stypy_kwargs_param_name = None
            _stypy_temp_lambda_429.stypy_call_defaults = defaults
            _stypy_temp_lambda_429.stypy_call_varargs = varargs
            _stypy_temp_lambda_429.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_429', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_429', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to (...): (line 1493)
            # Processing the call arguments (line 1493)
            # Getting the type of 'n' (line 1493)
            n_549467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 75), 'n', False)
            # Getting the type of 'x' (line 1493)
            x_549468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 78), 'x', False)
            # Processing the call keyword arguments (line 1493)
            # Getting the type of 'HYPERKW' (line 1493)
            HYPERKW_549469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 83), 'HYPERKW', False)
            kwargs_549470 = {'HYPERKW_549469': HYPERKW_549469}
            
            # Call to exception_to_nan(...): (line 1493)
            # Processing the call arguments (line 1493)
            # Getting the type of 'mpmath' (line 1493)
            mpmath_549463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 58), 'mpmath', False)
            # Obtaining the member 'laguerre' of a type (line 1493)
            laguerre_549464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1493, 58), mpmath_549463, 'laguerre')
            # Processing the call keyword arguments (line 1493)
            kwargs_549465 = {}
            # Getting the type of 'exception_to_nan' (line 1493)
            exception_to_nan_549462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 41), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1493)
            exception_to_nan_call_result_549466 = invoke(stypy.reporting.localization.Localization(__file__, 1493, 41), exception_to_nan_549462, *[laguerre_549464], **kwargs_549465)
            
            # Calling (args, kwargs) (line 1493)
            _call_result_549471 = invoke(stypy.reporting.localization.Localization(__file__, 1493, 41), exception_to_nan_call_result_549466, *[n_549467, x_549468], **kwargs_549470)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1493)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1493, 28), 'stypy_return_type', _call_result_549471)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_429' in the type store
            # Getting the type of 'stypy_return_type' (line 1493)
            stypy_return_type_549472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549472)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_429'
            return stypy_return_type_549472

        # Assigning a type to the variable '_stypy_temp_lambda_429' (line 1493)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1493, 28), '_stypy_temp_lambda_429', _stypy_temp_lambda_429)
        # Getting the type of '_stypy_temp_lambda_429' (line 1493)
        _stypy_temp_lambda_429_549473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 28), '_stypy_temp_lambda_429')
        
        # Obtaining an instance of the builtin type 'list' (line 1494)
        list_549474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1494, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1494)
        # Adding element type (line 1494)
        
        # Call to Arg(...): (line 1494)
        # Processing the call keyword arguments (line 1494)
        kwargs_549476 = {}
        # Getting the type of 'Arg' (line 1494)
        Arg_549475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1494)
        Arg_call_result_549477 = invoke(stypy.reporting.localization.Localization(__file__, 1494, 29), Arg_549475, *[], **kwargs_549476)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1494, 28), list_549474, Arg_call_result_549477)
        # Adding element type (line 1494)
        
        # Call to Arg(...): (line 1494)
        # Processing the call keyword arguments (line 1494)
        kwargs_549479 = {}
        # Getting the type of 'Arg' (line 1494)
        Arg_549478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1494)
        Arg_call_result_549480 = invoke(stypy.reporting.localization.Localization(__file__, 1494, 36), Arg_549478, *[], **kwargs_549479)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1494, 28), list_549474, Arg_call_result_549480)
        
        # Processing the call keyword arguments (line 1492)
        kwargs_549481 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1492)
        assert_mpmath_equal_549456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1492)
        assert_mpmath_equal_call_result_549482 = invoke(stypy.reporting.localization.Localization(__file__, 1492, 8), assert_mpmath_equal_549456, *[trace_args_call_result_549461, _stypy_temp_lambda_429_549473, list_549474], **kwargs_549481)
        
        
        # ################# End of 'test_laguerre(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_laguerre' in the type store
        # Getting the type of 'stypy_return_type' (line 1490)
        stypy_return_type_549483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1490, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549483)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_laguerre'
        return stypy_return_type_549483


    @norecursion
    def test_laguerre_int(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_laguerre_int'
        module_type_store = module_type_store.open_function_context('test_laguerre_int', 1496, 4, False)
        # Assigning a type to the variable 'self' (line 1497)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1497, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_laguerre_int')
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_laguerre_int.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_laguerre_int', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_laguerre_int', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_laguerre_int(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1497)
        # Processing the call arguments (line 1497)

        @norecursion
        def _stypy_temp_lambda_430(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_430'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_430', 1497, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_430.stypy_localization = localization
            _stypy_temp_lambda_430.stypy_type_of_self = None
            _stypy_temp_lambda_430.stypy_type_store = module_type_store
            _stypy_temp_lambda_430.stypy_function_name = '_stypy_temp_lambda_430'
            _stypy_temp_lambda_430.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_430.stypy_varargs_param_name = None
            _stypy_temp_lambda_430.stypy_kwargs_param_name = None
            _stypy_temp_lambda_430.stypy_call_defaults = defaults
            _stypy_temp_lambda_430.stypy_call_varargs = varargs
            _stypy_temp_lambda_430.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_430', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_430', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_laguerre(...): (line 1497)
            # Processing the call arguments (line 1497)
            
            # Call to int(...): (line 1497)
            # Processing the call arguments (line 1497)
            # Getting the type of 'n' (line 1497)
            n_549488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 62), 'n', False)
            # Processing the call keyword arguments (line 1497)
            kwargs_549489 = {}
            # Getting the type of 'int' (line 1497)
            int_549487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 58), 'int', False)
            # Calling int(args, kwargs) (line 1497)
            int_call_result_549490 = invoke(stypy.reporting.localization.Localization(__file__, 1497, 58), int_549487, *[n_549488], **kwargs_549489)
            
            # Getting the type of 'x' (line 1497)
            x_549491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 66), 'x', False)
            # Processing the call keyword arguments (line 1497)
            kwargs_549492 = {}
            # Getting the type of 'sc' (line 1497)
            sc_549485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 41), 'sc', False)
            # Obtaining the member 'eval_laguerre' of a type (line 1497)
            eval_laguerre_549486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1497, 41), sc_549485, 'eval_laguerre')
            # Calling eval_laguerre(args, kwargs) (line 1497)
            eval_laguerre_call_result_549493 = invoke(stypy.reporting.localization.Localization(__file__, 1497, 41), eval_laguerre_549486, *[int_call_result_549490, x_549491], **kwargs_549492)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1497)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1497, 28), 'stypy_return_type', eval_laguerre_call_result_549493)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_430' in the type store
            # Getting the type of 'stypy_return_type' (line 1497)
            stypy_return_type_549494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549494)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_430'
            return stypy_return_type_549494

        # Assigning a type to the variable '_stypy_temp_lambda_430' (line 1497)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1497, 28), '_stypy_temp_lambda_430', _stypy_temp_lambda_430)
        # Getting the type of '_stypy_temp_lambda_430' (line 1497)
        _stypy_temp_lambda_430_549495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 28), '_stypy_temp_lambda_430')

        @norecursion
        def _stypy_temp_lambda_431(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_431'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_431', 1498, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_431.stypy_localization = localization
            _stypy_temp_lambda_431.stypy_type_of_self = None
            _stypy_temp_lambda_431.stypy_type_store = module_type_store
            _stypy_temp_lambda_431.stypy_function_name = '_stypy_temp_lambda_431'
            _stypy_temp_lambda_431.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_431.stypy_varargs_param_name = None
            _stypy_temp_lambda_431.stypy_kwargs_param_name = None
            _stypy_temp_lambda_431.stypy_call_defaults = defaults
            _stypy_temp_lambda_431.stypy_call_varargs = varargs
            _stypy_temp_lambda_431.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_431', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_431', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to (...): (line 1498)
            # Processing the call arguments (line 1498)
            # Getting the type of 'n' (line 1498)
            n_549501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 75), 'n', False)
            # Getting the type of 'x' (line 1498)
            x_549502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 78), 'x', False)
            # Processing the call keyword arguments (line 1498)
            # Getting the type of 'HYPERKW' (line 1498)
            HYPERKW_549503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 83), 'HYPERKW', False)
            kwargs_549504 = {'HYPERKW_549503': HYPERKW_549503}
            
            # Call to exception_to_nan(...): (line 1498)
            # Processing the call arguments (line 1498)
            # Getting the type of 'mpmath' (line 1498)
            mpmath_549497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 58), 'mpmath', False)
            # Obtaining the member 'laguerre' of a type (line 1498)
            laguerre_549498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1498, 58), mpmath_549497, 'laguerre')
            # Processing the call keyword arguments (line 1498)
            kwargs_549499 = {}
            # Getting the type of 'exception_to_nan' (line 1498)
            exception_to_nan_549496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 41), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1498)
            exception_to_nan_call_result_549500 = invoke(stypy.reporting.localization.Localization(__file__, 1498, 41), exception_to_nan_549496, *[laguerre_549498], **kwargs_549499)
            
            # Calling (args, kwargs) (line 1498)
            _call_result_549505 = invoke(stypy.reporting.localization.Localization(__file__, 1498, 41), exception_to_nan_call_result_549500, *[n_549501, x_549502], **kwargs_549504)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1498)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1498, 28), 'stypy_return_type', _call_result_549505)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_431' in the type store
            # Getting the type of 'stypy_return_type' (line 1498)
            stypy_return_type_549506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549506)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_431'
            return stypy_return_type_549506

        # Assigning a type to the variable '_stypy_temp_lambda_431' (line 1498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1498, 28), '_stypy_temp_lambda_431', _stypy_temp_lambda_431)
        # Getting the type of '_stypy_temp_lambda_431' (line 1498)
        _stypy_temp_lambda_431_549507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1498, 28), '_stypy_temp_lambda_431')
        
        # Obtaining an instance of the builtin type 'list' (line 1499)
        list_549508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1499, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1499)
        # Adding element type (line 1499)
        
        # Call to IntArg(...): (line 1499)
        # Processing the call keyword arguments (line 1499)
        kwargs_549510 = {}
        # Getting the type of 'IntArg' (line 1499)
        IntArg_549509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1499)
        IntArg_call_result_549511 = invoke(stypy.reporting.localization.Localization(__file__, 1499, 29), IntArg_549509, *[], **kwargs_549510)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1499, 28), list_549508, IntArg_call_result_549511)
        # Adding element type (line 1499)
        
        # Call to Arg(...): (line 1499)
        # Processing the call keyword arguments (line 1499)
        kwargs_549513 = {}
        # Getting the type of 'Arg' (line 1499)
        Arg_549512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 39), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1499)
        Arg_call_result_549514 = invoke(stypy.reporting.localization.Localization(__file__, 1499, 39), Arg_549512, *[], **kwargs_549513)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1499, 28), list_549508, Arg_call_result_549514)
        
        # Processing the call keyword arguments (line 1497)
        int_549515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1499, 49), 'int')
        keyword_549516 = int_549515
        kwargs_549517 = {'n': keyword_549516}
        # Getting the type of 'assert_mpmath_equal' (line 1497)
        assert_mpmath_equal_549484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1497)
        assert_mpmath_equal_call_result_549518 = invoke(stypy.reporting.localization.Localization(__file__, 1497, 8), assert_mpmath_equal_549484, *[_stypy_temp_lambda_430_549495, _stypy_temp_lambda_431_549507, list_549508], **kwargs_549517)
        
        
        # ################# End of 'test_laguerre_int(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_laguerre_int' in the type store
        # Getting the type of 'stypy_return_type' (line 1496)
        stypy_return_type_549519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549519)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_laguerre_int'
        return stypy_return_type_549519


    @norecursion
    def test_lambertw(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_lambertw'
        module_type_store = module_type_store.open_function_context('test_lambertw', 1501, 4, False)
        # Assigning a type to the variable 'self' (line 1502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1502, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_lambertw')
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_lambertw.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_lambertw', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_lambertw', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_lambertw(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1503)
        # Processing the call arguments (line 1503)

        @norecursion
        def _stypy_temp_lambda_432(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_432'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_432', 1503, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_432.stypy_localization = localization
            _stypy_temp_lambda_432.stypy_type_of_self = None
            _stypy_temp_lambda_432.stypy_type_store = module_type_store
            _stypy_temp_lambda_432.stypy_function_name = '_stypy_temp_lambda_432'
            _stypy_temp_lambda_432.stypy_param_names_list = ['x', 'k']
            _stypy_temp_lambda_432.stypy_varargs_param_name = None
            _stypy_temp_lambda_432.stypy_kwargs_param_name = None
            _stypy_temp_lambda_432.stypy_call_defaults = defaults
            _stypy_temp_lambda_432.stypy_call_varargs = varargs
            _stypy_temp_lambda_432.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_432', ['x', 'k'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_432', ['x', 'k'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to lambertw(...): (line 1503)
            # Processing the call arguments (line 1503)
            # Getting the type of 'x' (line 1503)
            x_549523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 53), 'x', False)
            
            # Call to int(...): (line 1503)
            # Processing the call arguments (line 1503)
            # Getting the type of 'k' (line 1503)
            k_549525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 60), 'k', False)
            # Processing the call keyword arguments (line 1503)
            kwargs_549526 = {}
            # Getting the type of 'int' (line 1503)
            int_549524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 56), 'int', False)
            # Calling int(args, kwargs) (line 1503)
            int_call_result_549527 = invoke(stypy.reporting.localization.Localization(__file__, 1503, 56), int_549524, *[k_549525], **kwargs_549526)
            
            # Processing the call keyword arguments (line 1503)
            kwargs_549528 = {}
            # Getting the type of 'sc' (line 1503)
            sc_549521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 41), 'sc', False)
            # Obtaining the member 'lambertw' of a type (line 1503)
            lambertw_549522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1503, 41), sc_549521, 'lambertw')
            # Calling lambertw(args, kwargs) (line 1503)
            lambertw_call_result_549529 = invoke(stypy.reporting.localization.Localization(__file__, 1503, 41), lambertw_549522, *[x_549523, int_call_result_549527], **kwargs_549528)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1503)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1503, 28), 'stypy_return_type', lambertw_call_result_549529)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_432' in the type store
            # Getting the type of 'stypy_return_type' (line 1503)
            stypy_return_type_549530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549530)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_432'
            return stypy_return_type_549530

        # Assigning a type to the variable '_stypy_temp_lambda_432' (line 1503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1503, 28), '_stypy_temp_lambda_432', _stypy_temp_lambda_432)
        # Getting the type of '_stypy_temp_lambda_432' (line 1503)
        _stypy_temp_lambda_432_549531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 28), '_stypy_temp_lambda_432')

        @norecursion
        def _stypy_temp_lambda_433(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_433'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_433', 1504, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_433.stypy_localization = localization
            _stypy_temp_lambda_433.stypy_type_of_self = None
            _stypy_temp_lambda_433.stypy_type_store = module_type_store
            _stypy_temp_lambda_433.stypy_function_name = '_stypy_temp_lambda_433'
            _stypy_temp_lambda_433.stypy_param_names_list = ['x', 'k']
            _stypy_temp_lambda_433.stypy_varargs_param_name = None
            _stypy_temp_lambda_433.stypy_kwargs_param_name = None
            _stypy_temp_lambda_433.stypy_call_defaults = defaults
            _stypy_temp_lambda_433.stypy_call_varargs = varargs
            _stypy_temp_lambda_433.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_433', ['x', 'k'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_433', ['x', 'k'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to lambertw(...): (line 1504)
            # Processing the call arguments (line 1504)
            # Getting the type of 'x' (line 1504)
            x_549534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 57), 'x', False)
            
            # Call to int(...): (line 1504)
            # Processing the call arguments (line 1504)
            # Getting the type of 'k' (line 1504)
            k_549536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 64), 'k', False)
            # Processing the call keyword arguments (line 1504)
            kwargs_549537 = {}
            # Getting the type of 'int' (line 1504)
            int_549535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 60), 'int', False)
            # Calling int(args, kwargs) (line 1504)
            int_call_result_549538 = invoke(stypy.reporting.localization.Localization(__file__, 1504, 60), int_549535, *[k_549536], **kwargs_549537)
            
            # Processing the call keyword arguments (line 1504)
            kwargs_549539 = {}
            # Getting the type of 'mpmath' (line 1504)
            mpmath_549532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 41), 'mpmath', False)
            # Obtaining the member 'lambertw' of a type (line 1504)
            lambertw_549533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1504, 41), mpmath_549532, 'lambertw')
            # Calling lambertw(args, kwargs) (line 1504)
            lambertw_call_result_549540 = invoke(stypy.reporting.localization.Localization(__file__, 1504, 41), lambertw_549533, *[x_549534, int_call_result_549538], **kwargs_549539)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1504)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1504, 28), 'stypy_return_type', lambertw_call_result_549540)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_433' in the type store
            # Getting the type of 'stypy_return_type' (line 1504)
            stypy_return_type_549541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549541)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_433'
            return stypy_return_type_549541

        # Assigning a type to the variable '_stypy_temp_lambda_433' (line 1504)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1504, 28), '_stypy_temp_lambda_433', _stypy_temp_lambda_433)
        # Getting the type of '_stypy_temp_lambda_433' (line 1504)
        _stypy_temp_lambda_433_549542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 28), '_stypy_temp_lambda_433')
        
        # Obtaining an instance of the builtin type 'list' (line 1505)
        list_549543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1505, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1505)
        # Adding element type (line 1505)
        
        # Call to Arg(...): (line 1505)
        # Processing the call keyword arguments (line 1505)
        kwargs_549545 = {}
        # Getting the type of 'Arg' (line 1505)
        Arg_549544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1505)
        Arg_call_result_549546 = invoke(stypy.reporting.localization.Localization(__file__, 1505, 29), Arg_549544, *[], **kwargs_549545)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1505, 28), list_549543, Arg_call_result_549546)
        # Adding element type (line 1505)
        
        # Call to IntArg(...): (line 1505)
        # Processing the call arguments (line 1505)
        int_549548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1505, 43), 'int')
        int_549549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1505, 46), 'int')
        # Processing the call keyword arguments (line 1505)
        kwargs_549550 = {}
        # Getting the type of 'IntArg' (line 1505)
        IntArg_549547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 36), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1505)
        IntArg_call_result_549551 = invoke(stypy.reporting.localization.Localization(__file__, 1505, 36), IntArg_549547, *[int_549548, int_549549], **kwargs_549550)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1505, 28), list_549543, IntArg_call_result_549551)
        
        # Processing the call keyword arguments (line 1503)
        kwargs_549552 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1503)
        assert_mpmath_equal_549520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1503)
        assert_mpmath_equal_call_result_549553 = invoke(stypy.reporting.localization.Localization(__file__, 1503, 8), assert_mpmath_equal_549520, *[_stypy_temp_lambda_432_549531, _stypy_temp_lambda_433_549542, list_549543], **kwargs_549552)
        
        
        # ################# End of 'test_lambertw(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_lambertw' in the type store
        # Getting the type of 'stypy_return_type' (line 1501)
        stypy_return_type_549554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549554)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_lambertw'
        return stypy_return_type_549554


    @norecursion
    def test_lanczos_sum_expg_scaled(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_lanczos_sum_expg_scaled'
        module_type_store = module_type_store.open_function_context('test_lanczos_sum_expg_scaled', 1507, 4, False)
        # Assigning a type to the variable 'self' (line 1508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1508, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_lanczos_sum_expg_scaled')
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_lanczos_sum_expg_scaled.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_lanczos_sum_expg_scaled', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_lanczos_sum_expg_scaled', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_lanczos_sum_expg_scaled(...)' code ##################

        
        # Assigning a Num to a Name (line 1508):
        
        # Assigning a Num to a Name (line 1508):
        float_549555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1508, 19), 'float')
        # Assigning a type to the variable 'maxgamma' (line 1508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1508, 8), 'maxgamma', float_549555)
        
        # Assigning a Call to a Name (line 1509):
        
        # Assigning a Call to a Name (line 1509):
        
        # Call to exp(...): (line 1509)
        # Processing the call arguments (line 1509)
        int_549558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1509, 19), 'int')
        # Processing the call keyword arguments (line 1509)
        kwargs_549559 = {}
        # Getting the type of 'np' (line 1509)
        np_549556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 12), 'np', False)
        # Obtaining the member 'exp' of a type (line 1509)
        exp_549557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 12), np_549556, 'exp')
        # Calling exp(args, kwargs) (line 1509)
        exp_call_result_549560 = invoke(stypy.reporting.localization.Localization(__file__, 1509, 12), exp_549557, *[int_549558], **kwargs_549559)
        
        # Assigning a type to the variable 'e' (line 1509)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1509, 8), 'e', exp_call_result_549560)
        
        # Assigning a Num to a Name (line 1510):
        
        # Assigning a Num to a Name (line 1510):
        float_549561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1510, 12), 'float')
        # Assigning a type to the variable 'g' (line 1510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1510, 8), 'g', float_549561)

        @norecursion
        def gamma(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'gamma'
            module_type_store = module_type_store.open_function_context('gamma', 1512, 8, False)
            
            # Passed parameters checking function
            gamma.stypy_localization = localization
            gamma.stypy_type_of_self = None
            gamma.stypy_type_store = module_type_store
            gamma.stypy_function_name = 'gamma'
            gamma.stypy_param_names_list = ['x']
            gamma.stypy_varargs_param_name = None
            gamma.stypy_kwargs_param_name = None
            gamma.stypy_call_defaults = defaults
            gamma.stypy_call_varargs = varargs
            gamma.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'gamma', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'gamma', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'gamma(...)' code ##################

            # Getting the type of 'x' (line 1513)
            x_549562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 21), 'x')
            # Getting the type of 'g' (line 1513)
            g_549563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 25), 'g')
            # Applying the binary operator '+' (line 1513)
            result_add_549564 = python_operator(stypy.reporting.localization.Localization(__file__, 1513, 21), '+', x_549562, g_549563)
            
            float_549565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1513, 29), 'float')
            # Applying the binary operator '-' (line 1513)
            result_sub_549566 = python_operator(stypy.reporting.localization.Localization(__file__, 1513, 27), '-', result_add_549564, float_549565)
            
            # Getting the type of 'e' (line 1513)
            e_549567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 34), 'e')
            # Applying the binary operator 'div' (line 1513)
            result_div_549568 = python_operator(stypy.reporting.localization.Localization(__file__, 1513, 20), 'div', result_sub_549566, e_549567)
            
            # Getting the type of 'x' (line 1513)
            x_549569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 39), 'x')
            float_549570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1513, 43), 'float')
            # Applying the binary operator '-' (line 1513)
            result_sub_549571 = python_operator(stypy.reporting.localization.Localization(__file__, 1513, 39), '-', x_549569, float_549570)
            
            # Applying the binary operator '**' (line 1513)
            result_pow_549572 = python_operator(stypy.reporting.localization.Localization(__file__, 1513, 19), '**', result_div_549568, result_sub_549571)
            
            
            # Call to _lanczos_sum_expg_scaled(...): (line 1513)
            # Processing the call arguments (line 1513)
            # Getting the type of 'x' (line 1513)
            x_549574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 73), 'x', False)
            # Processing the call keyword arguments (line 1513)
            kwargs_549575 = {}
            # Getting the type of '_lanczos_sum_expg_scaled' (line 1513)
            _lanczos_sum_expg_scaled_549573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 48), '_lanczos_sum_expg_scaled', False)
            # Calling _lanczos_sum_expg_scaled(args, kwargs) (line 1513)
            _lanczos_sum_expg_scaled_call_result_549576 = invoke(stypy.reporting.localization.Localization(__file__, 1513, 48), _lanczos_sum_expg_scaled_549573, *[x_549574], **kwargs_549575)
            
            # Applying the binary operator '*' (line 1513)
            result_mul_549577 = python_operator(stypy.reporting.localization.Localization(__file__, 1513, 19), '*', result_pow_549572, _lanczos_sum_expg_scaled_call_result_549576)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1513)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1513, 12), 'stypy_return_type', result_mul_549577)
            
            # ################# End of 'gamma(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'gamma' in the type store
            # Getting the type of 'stypy_return_type' (line 1512)
            stypy_return_type_549578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549578)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'gamma'
            return stypy_return_type_549578

        # Assigning a type to the variable 'gamma' (line 1512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1512, 8), 'gamma', gamma)
        
        # Call to assert_mpmath_equal(...): (line 1515)
        # Processing the call arguments (line 1515)
        # Getting the type of 'gamma' (line 1515)
        gamma_549580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 28), 'gamma', False)
        # Getting the type of 'mpmath' (line 1516)
        mpmath_549581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1516, 28), 'mpmath', False)
        # Obtaining the member 'gamma' of a type (line 1516)
        gamma_549582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1516, 28), mpmath_549581, 'gamma')
        
        # Obtaining an instance of the builtin type 'list' (line 1517)
        list_549583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1517, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1517)
        # Adding element type (line 1517)
        
        # Call to Arg(...): (line 1517)
        # Processing the call arguments (line 1517)
        int_549585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1517, 33), 'int')
        # Getting the type of 'maxgamma' (line 1517)
        maxgamma_549586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1517, 36), 'maxgamma', False)
        # Processing the call keyword arguments (line 1517)
        # Getting the type of 'False' (line 1517)
        False_549587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1517, 58), 'False', False)
        keyword_549588 = False_549587
        kwargs_549589 = {'inclusive_a': keyword_549588}
        # Getting the type of 'Arg' (line 1517)
        Arg_549584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1517, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1517)
        Arg_call_result_549590 = invoke(stypy.reporting.localization.Localization(__file__, 1517, 29), Arg_549584, *[int_549585, maxgamma_549586], **kwargs_549589)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1517, 28), list_549583, Arg_call_result_549590)
        
        # Processing the call keyword arguments (line 1515)
        float_549591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1518, 33), 'float')
        keyword_549592 = float_549591
        kwargs_549593 = {'rtol': keyword_549592}
        # Getting the type of 'assert_mpmath_equal' (line 1515)
        assert_mpmath_equal_549579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1515)
        assert_mpmath_equal_call_result_549594 = invoke(stypy.reporting.localization.Localization(__file__, 1515, 8), assert_mpmath_equal_549579, *[gamma_549580, gamma_549582, list_549583], **kwargs_549593)
        
        
        # ################# End of 'test_lanczos_sum_expg_scaled(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_lanczos_sum_expg_scaled' in the type store
        # Getting the type of 'stypy_return_type' (line 1507)
        stypy_return_type_549595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1507, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549595)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_lanczos_sum_expg_scaled'
        return stypy_return_type_549595


    @norecursion
    def test_legendre(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_legendre'
        module_type_store = module_type_store.open_function_context('test_legendre', 1520, 4, False)
        # Assigning a type to the variable 'self' (line 1521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1521, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_legendre')
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_legendre.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_legendre', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_legendre', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_legendre(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1522)
        # Processing the call arguments (line 1522)
        # Getting the type of 'sc' (line 1522)
        sc_549597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 28), 'sc', False)
        # Obtaining the member 'eval_legendre' of a type (line 1522)
        eval_legendre_549598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1522, 28), sc_549597, 'eval_legendre')
        # Getting the type of 'mpmath' (line 1523)
        mpmath_549599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1523, 28), 'mpmath', False)
        # Obtaining the member 'legendre' of a type (line 1523)
        legendre_549600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1523, 28), mpmath_549599, 'legendre')
        
        # Obtaining an instance of the builtin type 'list' (line 1524)
        list_549601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1524, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1524)
        # Adding element type (line 1524)
        
        # Call to Arg(...): (line 1524)
        # Processing the call keyword arguments (line 1524)
        kwargs_549603 = {}
        # Getting the type of 'Arg' (line 1524)
        Arg_549602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1524, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1524)
        Arg_call_result_549604 = invoke(stypy.reporting.localization.Localization(__file__, 1524, 29), Arg_549602, *[], **kwargs_549603)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1524, 28), list_549601, Arg_call_result_549604)
        # Adding element type (line 1524)
        
        # Call to Arg(...): (line 1524)
        # Processing the call keyword arguments (line 1524)
        kwargs_549606 = {}
        # Getting the type of 'Arg' (line 1524)
        Arg_549605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1524, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1524)
        Arg_call_result_549607 = invoke(stypy.reporting.localization.Localization(__file__, 1524, 36), Arg_549605, *[], **kwargs_549606)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1524, 28), list_549601, Arg_call_result_549607)
        
        # Processing the call keyword arguments (line 1522)
        kwargs_549608 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1522)
        assert_mpmath_equal_549596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1522)
        assert_mpmath_equal_call_result_549609 = invoke(stypy.reporting.localization.Localization(__file__, 1522, 8), assert_mpmath_equal_549596, *[eval_legendre_549598, legendre_549600, list_549601], **kwargs_549608)
        
        
        # ################# End of 'test_legendre(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_legendre' in the type store
        # Getting the type of 'stypy_return_type' (line 1520)
        stypy_return_type_549610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549610)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_legendre'
        return stypy_return_type_549610


    @norecursion
    def test_legendre_int(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_legendre_int'
        module_type_store = module_type_store.open_function_context('test_legendre_int', 1526, 4, False)
        # Assigning a type to the variable 'self' (line 1527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1527, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_legendre_int')
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_legendre_int.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_legendre_int', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_legendre_int', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_legendre_int(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1527)
        # Processing the call arguments (line 1527)

        @norecursion
        def _stypy_temp_lambda_434(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_434'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_434', 1527, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_434.stypy_localization = localization
            _stypy_temp_lambda_434.stypy_type_of_self = None
            _stypy_temp_lambda_434.stypy_type_store = module_type_store
            _stypy_temp_lambda_434.stypy_function_name = '_stypy_temp_lambda_434'
            _stypy_temp_lambda_434.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_434.stypy_varargs_param_name = None
            _stypy_temp_lambda_434.stypy_kwargs_param_name = None
            _stypy_temp_lambda_434.stypy_call_defaults = defaults
            _stypy_temp_lambda_434.stypy_call_varargs = varargs
            _stypy_temp_lambda_434.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_434', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_434', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_legendre(...): (line 1527)
            # Processing the call arguments (line 1527)
            
            # Call to int(...): (line 1527)
            # Processing the call arguments (line 1527)
            # Getting the type of 'n' (line 1527)
            n_549615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 62), 'n', False)
            # Processing the call keyword arguments (line 1527)
            kwargs_549616 = {}
            # Getting the type of 'int' (line 1527)
            int_549614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 58), 'int', False)
            # Calling int(args, kwargs) (line 1527)
            int_call_result_549617 = invoke(stypy.reporting.localization.Localization(__file__, 1527, 58), int_549614, *[n_549615], **kwargs_549616)
            
            # Getting the type of 'x' (line 1527)
            x_549618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 66), 'x', False)
            # Processing the call keyword arguments (line 1527)
            kwargs_549619 = {}
            # Getting the type of 'sc' (line 1527)
            sc_549612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 41), 'sc', False)
            # Obtaining the member 'eval_legendre' of a type (line 1527)
            eval_legendre_549613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1527, 41), sc_549612, 'eval_legendre')
            # Calling eval_legendre(args, kwargs) (line 1527)
            eval_legendre_call_result_549620 = invoke(stypy.reporting.localization.Localization(__file__, 1527, 41), eval_legendre_549613, *[int_call_result_549617, x_549618], **kwargs_549619)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1527)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1527, 28), 'stypy_return_type', eval_legendre_call_result_549620)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_434' in the type store
            # Getting the type of 'stypy_return_type' (line 1527)
            stypy_return_type_549621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549621)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_434'
            return stypy_return_type_549621

        # Assigning a type to the variable '_stypy_temp_lambda_434' (line 1527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1527, 28), '_stypy_temp_lambda_434', _stypy_temp_lambda_434)
        # Getting the type of '_stypy_temp_lambda_434' (line 1527)
        _stypy_temp_lambda_434_549622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 28), '_stypy_temp_lambda_434')

        @norecursion
        def _stypy_temp_lambda_435(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_435'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_435', 1528, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_435.stypy_localization = localization
            _stypy_temp_lambda_435.stypy_type_of_self = None
            _stypy_temp_lambda_435.stypy_type_store = module_type_store
            _stypy_temp_lambda_435.stypy_function_name = '_stypy_temp_lambda_435'
            _stypy_temp_lambda_435.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_435.stypy_varargs_param_name = None
            _stypy_temp_lambda_435.stypy_kwargs_param_name = None
            _stypy_temp_lambda_435.stypy_call_defaults = defaults
            _stypy_temp_lambda_435.stypy_call_varargs = varargs
            _stypy_temp_lambda_435.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_435', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_435', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to (...): (line 1528)
            # Processing the call arguments (line 1528)
            # Getting the type of 'n' (line 1528)
            n_549628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 75), 'n', False)
            # Getting the type of 'x' (line 1528)
            x_549629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 78), 'x', False)
            # Processing the call keyword arguments (line 1528)
            # Getting the type of 'HYPERKW' (line 1528)
            HYPERKW_549630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 83), 'HYPERKW', False)
            kwargs_549631 = {'HYPERKW_549630': HYPERKW_549630}
            
            # Call to exception_to_nan(...): (line 1528)
            # Processing the call arguments (line 1528)
            # Getting the type of 'mpmath' (line 1528)
            mpmath_549624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 58), 'mpmath', False)
            # Obtaining the member 'legendre' of a type (line 1528)
            legendre_549625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1528, 58), mpmath_549624, 'legendre')
            # Processing the call keyword arguments (line 1528)
            kwargs_549626 = {}
            # Getting the type of 'exception_to_nan' (line 1528)
            exception_to_nan_549623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 41), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1528)
            exception_to_nan_call_result_549627 = invoke(stypy.reporting.localization.Localization(__file__, 1528, 41), exception_to_nan_549623, *[legendre_549625], **kwargs_549626)
            
            # Calling (args, kwargs) (line 1528)
            _call_result_549632 = invoke(stypy.reporting.localization.Localization(__file__, 1528, 41), exception_to_nan_call_result_549627, *[n_549628, x_549629], **kwargs_549631)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1528)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1528, 28), 'stypy_return_type', _call_result_549632)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_435' in the type store
            # Getting the type of 'stypy_return_type' (line 1528)
            stypy_return_type_549633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549633)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_435'
            return stypy_return_type_549633

        # Assigning a type to the variable '_stypy_temp_lambda_435' (line 1528)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1528, 28), '_stypy_temp_lambda_435', _stypy_temp_lambda_435)
        # Getting the type of '_stypy_temp_lambda_435' (line 1528)
        _stypy_temp_lambda_435_549634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1528, 28), '_stypy_temp_lambda_435')
        
        # Obtaining an instance of the builtin type 'list' (line 1529)
        list_549635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1529, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1529)
        # Adding element type (line 1529)
        
        # Call to IntArg(...): (line 1529)
        # Processing the call keyword arguments (line 1529)
        kwargs_549637 = {}
        # Getting the type of 'IntArg' (line 1529)
        IntArg_549636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1529, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1529)
        IntArg_call_result_549638 = invoke(stypy.reporting.localization.Localization(__file__, 1529, 29), IntArg_549636, *[], **kwargs_549637)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1529, 28), list_549635, IntArg_call_result_549638)
        # Adding element type (line 1529)
        
        # Call to Arg(...): (line 1529)
        # Processing the call keyword arguments (line 1529)
        kwargs_549640 = {}
        # Getting the type of 'Arg' (line 1529)
        Arg_549639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1529, 39), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1529)
        Arg_call_result_549641 = invoke(stypy.reporting.localization.Localization(__file__, 1529, 39), Arg_549639, *[], **kwargs_549640)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1529, 28), list_549635, Arg_call_result_549641)
        
        # Processing the call keyword arguments (line 1527)
        int_549642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1530, 30), 'int')
        keyword_549643 = int_549642
        kwargs_549644 = {'n': keyword_549643}
        # Getting the type of 'assert_mpmath_equal' (line 1527)
        assert_mpmath_equal_549611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1527)
        assert_mpmath_equal_call_result_549645 = invoke(stypy.reporting.localization.Localization(__file__, 1527, 8), assert_mpmath_equal_549611, *[_stypy_temp_lambda_434_549622, _stypy_temp_lambda_435_549634, list_549635], **kwargs_549644)
        
        
        # Call to assert_mpmath_equal(...): (line 1533)
        # Processing the call arguments (line 1533)

        @norecursion
        def _stypy_temp_lambda_436(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_436'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_436', 1533, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_436.stypy_localization = localization
            _stypy_temp_lambda_436.stypy_type_of_self = None
            _stypy_temp_lambda_436.stypy_type_store = module_type_store
            _stypy_temp_lambda_436.stypy_function_name = '_stypy_temp_lambda_436'
            _stypy_temp_lambda_436.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_436.stypy_varargs_param_name = None
            _stypy_temp_lambda_436.stypy_kwargs_param_name = None
            _stypy_temp_lambda_436.stypy_call_defaults = defaults
            _stypy_temp_lambda_436.stypy_call_varargs = varargs
            _stypy_temp_lambda_436.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_436', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_436', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to eval_legendre(...): (line 1533)
            # Processing the call arguments (line 1533)
            
            # Call to int(...): (line 1533)
            # Processing the call arguments (line 1533)
            # Getting the type of 'n' (line 1533)
            n_549650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 62), 'n', False)
            # Processing the call keyword arguments (line 1533)
            kwargs_549651 = {}
            # Getting the type of 'int' (line 1533)
            int_549649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 58), 'int', False)
            # Calling int(args, kwargs) (line 1533)
            int_call_result_549652 = invoke(stypy.reporting.localization.Localization(__file__, 1533, 58), int_549649, *[n_549650], **kwargs_549651)
            
            # Getting the type of 'x' (line 1533)
            x_549653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 66), 'x', False)
            # Processing the call keyword arguments (line 1533)
            kwargs_549654 = {}
            # Getting the type of 'sc' (line 1533)
            sc_549647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 41), 'sc', False)
            # Obtaining the member 'eval_legendre' of a type (line 1533)
            eval_legendre_549648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1533, 41), sc_549647, 'eval_legendre')
            # Calling eval_legendre(args, kwargs) (line 1533)
            eval_legendre_call_result_549655 = invoke(stypy.reporting.localization.Localization(__file__, 1533, 41), eval_legendre_549648, *[int_call_result_549652, x_549653], **kwargs_549654)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1533)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1533, 28), 'stypy_return_type', eval_legendre_call_result_549655)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_436' in the type store
            # Getting the type of 'stypy_return_type' (line 1533)
            stypy_return_type_549656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549656)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_436'
            return stypy_return_type_549656

        # Assigning a type to the variable '_stypy_temp_lambda_436' (line 1533)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1533, 28), '_stypy_temp_lambda_436', _stypy_temp_lambda_436)
        # Getting the type of '_stypy_temp_lambda_436' (line 1533)
        _stypy_temp_lambda_436_549657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 28), '_stypy_temp_lambda_436')

        @norecursion
        def _stypy_temp_lambda_437(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_437'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_437', 1534, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_437.stypy_localization = localization
            _stypy_temp_lambda_437.stypy_type_of_self = None
            _stypy_temp_lambda_437.stypy_type_store = module_type_store
            _stypy_temp_lambda_437.stypy_function_name = '_stypy_temp_lambda_437'
            _stypy_temp_lambda_437.stypy_param_names_list = ['n', 'x']
            _stypy_temp_lambda_437.stypy_varargs_param_name = None
            _stypy_temp_lambda_437.stypy_kwargs_param_name = None
            _stypy_temp_lambda_437.stypy_call_defaults = defaults
            _stypy_temp_lambda_437.stypy_call_varargs = varargs
            _stypy_temp_lambda_437.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_437', ['n', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_437', ['n', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to (...): (line 1534)
            # Processing the call arguments (line 1534)
            # Getting the type of 'n' (line 1534)
            n_549663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 75), 'n', False)
            # Getting the type of 'x' (line 1534)
            x_549664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 78), 'x', False)
            # Processing the call keyword arguments (line 1534)
            # Getting the type of 'HYPERKW' (line 1534)
            HYPERKW_549665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 83), 'HYPERKW', False)
            kwargs_549666 = {'HYPERKW_549665': HYPERKW_549665}
            
            # Call to exception_to_nan(...): (line 1534)
            # Processing the call arguments (line 1534)
            # Getting the type of 'mpmath' (line 1534)
            mpmath_549659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 58), 'mpmath', False)
            # Obtaining the member 'legendre' of a type (line 1534)
            legendre_549660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1534, 58), mpmath_549659, 'legendre')
            # Processing the call keyword arguments (line 1534)
            kwargs_549661 = {}
            # Getting the type of 'exception_to_nan' (line 1534)
            exception_to_nan_549658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 41), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1534)
            exception_to_nan_call_result_549662 = invoke(stypy.reporting.localization.Localization(__file__, 1534, 41), exception_to_nan_549658, *[legendre_549660], **kwargs_549661)
            
            # Calling (args, kwargs) (line 1534)
            _call_result_549667 = invoke(stypy.reporting.localization.Localization(__file__, 1534, 41), exception_to_nan_call_result_549662, *[n_549663, x_549664], **kwargs_549666)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1534)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1534, 28), 'stypy_return_type', _call_result_549667)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_437' in the type store
            # Getting the type of 'stypy_return_type' (line 1534)
            stypy_return_type_549668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549668)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_437'
            return stypy_return_type_549668

        # Assigning a type to the variable '_stypy_temp_lambda_437' (line 1534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1534, 28), '_stypy_temp_lambda_437', _stypy_temp_lambda_437)
        # Getting the type of '_stypy_temp_lambda_437' (line 1534)
        _stypy_temp_lambda_437_549669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 28), '_stypy_temp_lambda_437')
        
        # Obtaining an instance of the builtin type 'list' (line 1535)
        list_549670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1535, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1535)
        # Adding element type (line 1535)
        
        # Call to IntArg(...): (line 1535)
        # Processing the call keyword arguments (line 1535)
        kwargs_549672 = {}
        # Getting the type of 'IntArg' (line 1535)
        IntArg_549671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1535, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1535)
        IntArg_call_result_549673 = invoke(stypy.reporting.localization.Localization(__file__, 1535, 29), IntArg_549671, *[], **kwargs_549672)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1535, 28), list_549670, IntArg_call_result_549673)
        # Adding element type (line 1535)
        
        # Call to FixedArg(...): (line 1535)
        # Processing the call arguments (line 1535)
        
        # Call to logspace(...): (line 1535)
        # Processing the call arguments (line 1535)
        int_549677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1535, 60), 'int')
        int_549678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1535, 65), 'int')
        int_549679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1535, 69), 'int')
        # Processing the call keyword arguments (line 1535)
        kwargs_549680 = {}
        # Getting the type of 'np' (line 1535)
        np_549675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1535, 48), 'np', False)
        # Obtaining the member 'logspace' of a type (line 1535)
        logspace_549676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1535, 48), np_549675, 'logspace')
        # Calling logspace(args, kwargs) (line 1535)
        logspace_call_result_549681 = invoke(stypy.reporting.localization.Localization(__file__, 1535, 48), logspace_549676, *[int_549677, int_549678, int_549679], **kwargs_549680)
        
        # Processing the call keyword arguments (line 1535)
        kwargs_549682 = {}
        # Getting the type of 'FixedArg' (line 1535)
        FixedArg_549674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1535, 39), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 1535)
        FixedArg_call_result_549683 = invoke(stypy.reporting.localization.Localization(__file__, 1535, 39), FixedArg_549674, *[logspace_call_result_549681], **kwargs_549682)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1535, 28), list_549670, FixedArg_call_result_549683)
        
        # Processing the call keyword arguments (line 1533)
        kwargs_549684 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1533)
        assert_mpmath_equal_549646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1533, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1533)
        assert_mpmath_equal_call_result_549685 = invoke(stypy.reporting.localization.Localization(__file__, 1533, 8), assert_mpmath_equal_549646, *[_stypy_temp_lambda_436_549657, _stypy_temp_lambda_437_549669, list_549670], **kwargs_549684)
        
        
        # ################# End of 'test_legendre_int(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_legendre_int' in the type store
        # Getting the type of 'stypy_return_type' (line 1526)
        stypy_return_type_549686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1526, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549686)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_legendre_int'
        return stypy_return_type_549686


    @norecursion
    def test_legenp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_legenp'
        module_type_store = module_type_store.open_function_context('test_legenp', 1537, 4, False)
        # Assigning a type to the variable 'self' (line 1538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1538, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_legenp')
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_legenp.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_legenp', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_legenp', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_legenp(...)' code ##################


        @norecursion
        def lpnm(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'lpnm'
            module_type_store = module_type_store.open_function_context('lpnm', 1538, 8, False)
            
            # Passed parameters checking function
            lpnm.stypy_localization = localization
            lpnm.stypy_type_of_self = None
            lpnm.stypy_type_store = module_type_store
            lpnm.stypy_function_name = 'lpnm'
            lpnm.stypy_param_names_list = ['n', 'm', 'z']
            lpnm.stypy_varargs_param_name = None
            lpnm.stypy_kwargs_param_name = None
            lpnm.stypy_call_defaults = defaults
            lpnm.stypy_call_varargs = varargs
            lpnm.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'lpnm', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'lpnm', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'lpnm(...)' code ##################

            
            
            # SSA begins for try-except statement (line 1539)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
            
            # Assigning a Subscript to a Name (line 1540):
            
            # Assigning a Subscript to a Name (line 1540):
            
            # Obtaining the type of the subscript
            
            # Obtaining an instance of the builtin type 'tuple' (line 1540)
            tuple_549687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1540, 40), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1540)
            # Adding element type (line 1540)
            int_549688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1540, 40), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1540, 40), tuple_549687, int_549688)
            # Adding element type (line 1540)
            int_549689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1540, 43), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1540, 40), tuple_549687, int_549689)
            
            
            # Obtaining the type of the subscript
            int_549690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1540, 37), 'int')
            
            # Call to lpmn(...): (line 1540)
            # Processing the call arguments (line 1540)
            # Getting the type of 'm' (line 1540)
            m_549693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 28), 'm', False)
            # Getting the type of 'n' (line 1540)
            n_549694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 31), 'n', False)
            # Getting the type of 'z' (line 1540)
            z_549695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 34), 'z', False)
            # Processing the call keyword arguments (line 1540)
            kwargs_549696 = {}
            # Getting the type of 'sc' (line 1540)
            sc_549691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1540, 20), 'sc', False)
            # Obtaining the member 'lpmn' of a type (line 1540)
            lpmn_549692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 20), sc_549691, 'lpmn')
            # Calling lpmn(args, kwargs) (line 1540)
            lpmn_call_result_549697 = invoke(stypy.reporting.localization.Localization(__file__, 1540, 20), lpmn_549692, *[m_549693, n_549694, z_549695], **kwargs_549696)
            
            # Obtaining the member '__getitem__' of a type (line 1540)
            getitem___549698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 20), lpmn_call_result_549697, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1540)
            subscript_call_result_549699 = invoke(stypy.reporting.localization.Localization(__file__, 1540, 20), getitem___549698, int_549690)
            
            # Obtaining the member '__getitem__' of a type (line 1540)
            getitem___549700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1540, 20), subscript_call_result_549699, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1540)
            subscript_call_result_549701 = invoke(stypy.reporting.localization.Localization(__file__, 1540, 20), getitem___549700, tuple_549687)
            
            # Assigning a type to the variable 'v' (line 1540)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1540, 16), 'v', subscript_call_result_549701)
            # SSA branch for the except part of a try statement (line 1539)
            # SSA branch for the except 'ValueError' branch of a try statement (line 1539)
            module_type_store.open_ssa_branch('except')
            # Getting the type of 'np' (line 1542)
            np_549702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1542, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1542)
            nan_549703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1542, 23), np_549702, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1542)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1542, 16), 'stypy_return_type', nan_549703)
            # SSA join for try-except statement (line 1539)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            
            # Call to abs(...): (line 1543)
            # Processing the call arguments (line 1543)
            # Getting the type of 'v' (line 1543)
            v_549705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 19), 'v', False)
            # Processing the call keyword arguments (line 1543)
            kwargs_549706 = {}
            # Getting the type of 'abs' (line 1543)
            abs_549704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1543)
            abs_call_result_549707 = invoke(stypy.reporting.localization.Localization(__file__, 1543, 15), abs_549704, *[v_549705], **kwargs_549706)
            
            float_549708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1543, 24), 'float')
            # Applying the binary operator '>' (line 1543)
            result_gt_549709 = python_operator(stypy.reporting.localization.Localization(__file__, 1543, 15), '>', abs_call_result_549707, float_549708)
            
            # Testing the type of an if condition (line 1543)
            if_condition_549710 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1543, 12), result_gt_549709)
            # Assigning a type to the variable 'if_condition_549710' (line 1543)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1543, 12), 'if_condition_549710', if_condition_549710)
            # SSA begins for if statement (line 1543)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 1545):
            
            # Assigning a BinOp to a Name (line 1545):
            # Getting the type of 'np' (line 1545)
            np_549711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1545, 20), 'np')
            # Obtaining the member 'inf' of a type (line 1545)
            inf_549712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1545, 20), np_549711, 'inf')
            
            # Call to sign(...): (line 1545)
            # Processing the call arguments (line 1545)
            # Getting the type of 'v' (line 1545)
            v_549715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1545, 37), 'v', False)
            # Obtaining the member 'real' of a type (line 1545)
            real_549716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1545, 37), v_549715, 'real')
            # Processing the call keyword arguments (line 1545)
            kwargs_549717 = {}
            # Getting the type of 'np' (line 1545)
            np_549713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1545, 29), 'np', False)
            # Obtaining the member 'sign' of a type (line 1545)
            sign_549714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1545, 29), np_549713, 'sign')
            # Calling sign(args, kwargs) (line 1545)
            sign_call_result_549718 = invoke(stypy.reporting.localization.Localization(__file__, 1545, 29), sign_549714, *[real_549716], **kwargs_549717)
            
            # Applying the binary operator '*' (line 1545)
            result_mul_549719 = python_operator(stypy.reporting.localization.Localization(__file__, 1545, 20), '*', inf_549712, sign_call_result_549718)
            
            # Assigning a type to the variable 'v' (line 1545)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1545, 16), 'v', result_mul_549719)
            # SSA join for if statement (line 1543)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'v' (line 1546)
            v_549720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 19), 'v')
            # Assigning a type to the variable 'stypy_return_type' (line 1546)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 12), 'stypy_return_type', v_549720)
            
            # ################# End of 'lpnm(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'lpnm' in the type store
            # Getting the type of 'stypy_return_type' (line 1538)
            stypy_return_type_549721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1538, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549721)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'lpnm'
            return stypy_return_type_549721

        # Assigning a type to the variable 'lpnm' (line 1538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1538, 8), 'lpnm', lpnm)

        @norecursion
        def lpnm_2(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'lpnm_2'
            module_type_store = module_type_store.open_function_context('lpnm_2', 1548, 8, False)
            
            # Passed parameters checking function
            lpnm_2.stypy_localization = localization
            lpnm_2.stypy_type_of_self = None
            lpnm_2.stypy_type_store = module_type_store
            lpnm_2.stypy_function_name = 'lpnm_2'
            lpnm_2.stypy_param_names_list = ['n', 'm', 'z']
            lpnm_2.stypy_varargs_param_name = None
            lpnm_2.stypy_kwargs_param_name = None
            lpnm_2.stypy_call_defaults = defaults
            lpnm_2.stypy_call_varargs = varargs
            lpnm_2.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'lpnm_2', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'lpnm_2', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'lpnm_2(...)' code ##################

            
            # Assigning a Call to a Name (line 1549):
            
            # Assigning a Call to a Name (line 1549):
            
            # Call to lpmv(...): (line 1549)
            # Processing the call arguments (line 1549)
            # Getting the type of 'm' (line 1549)
            m_549724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 24), 'm', False)
            # Getting the type of 'n' (line 1549)
            n_549725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 27), 'n', False)
            # Getting the type of 'z' (line 1549)
            z_549726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 30), 'z', False)
            # Processing the call keyword arguments (line 1549)
            kwargs_549727 = {}
            # Getting the type of 'sc' (line 1549)
            sc_549722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 16), 'sc', False)
            # Obtaining the member 'lpmv' of a type (line 1549)
            lpmv_549723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1549, 16), sc_549722, 'lpmv')
            # Calling lpmv(args, kwargs) (line 1549)
            lpmv_call_result_549728 = invoke(stypy.reporting.localization.Localization(__file__, 1549, 16), lpmv_549723, *[m_549724, n_549725, z_549726], **kwargs_549727)
            
            # Assigning a type to the variable 'v' (line 1549)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1549, 12), 'v', lpmv_call_result_549728)
            
            
            
            # Call to abs(...): (line 1550)
            # Processing the call arguments (line 1550)
            # Getting the type of 'v' (line 1550)
            v_549730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 19), 'v', False)
            # Processing the call keyword arguments (line 1550)
            kwargs_549731 = {}
            # Getting the type of 'abs' (line 1550)
            abs_549729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1550)
            abs_call_result_549732 = invoke(stypy.reporting.localization.Localization(__file__, 1550, 15), abs_549729, *[v_549730], **kwargs_549731)
            
            float_549733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1550, 24), 'float')
            # Applying the binary operator '>' (line 1550)
            result_gt_549734 = python_operator(stypy.reporting.localization.Localization(__file__, 1550, 15), '>', abs_call_result_549732, float_549733)
            
            # Testing the type of an if condition (line 1550)
            if_condition_549735 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1550, 12), result_gt_549734)
            # Assigning a type to the variable 'if_condition_549735' (line 1550)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1550, 12), 'if_condition_549735', if_condition_549735)
            # SSA begins for if statement (line 1550)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 1552):
            
            # Assigning a BinOp to a Name (line 1552):
            # Getting the type of 'np' (line 1552)
            np_549736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1552, 20), 'np')
            # Obtaining the member 'inf' of a type (line 1552)
            inf_549737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1552, 20), np_549736, 'inf')
            
            # Call to sign(...): (line 1552)
            # Processing the call arguments (line 1552)
            # Getting the type of 'v' (line 1552)
            v_549740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1552, 37), 'v', False)
            # Obtaining the member 'real' of a type (line 1552)
            real_549741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1552, 37), v_549740, 'real')
            # Processing the call keyword arguments (line 1552)
            kwargs_549742 = {}
            # Getting the type of 'np' (line 1552)
            np_549738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1552, 29), 'np', False)
            # Obtaining the member 'sign' of a type (line 1552)
            sign_549739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1552, 29), np_549738, 'sign')
            # Calling sign(args, kwargs) (line 1552)
            sign_call_result_549743 = invoke(stypy.reporting.localization.Localization(__file__, 1552, 29), sign_549739, *[real_549741], **kwargs_549742)
            
            # Applying the binary operator '*' (line 1552)
            result_mul_549744 = python_operator(stypy.reporting.localization.Localization(__file__, 1552, 20), '*', inf_549737, sign_call_result_549743)
            
            # Assigning a type to the variable 'v' (line 1552)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1552, 16), 'v', result_mul_549744)
            # SSA join for if statement (line 1550)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'v' (line 1553)
            v_549745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1553, 19), 'v')
            # Assigning a type to the variable 'stypy_return_type' (line 1553)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1553, 12), 'stypy_return_type', v_549745)
            
            # ################# End of 'lpnm_2(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'lpnm_2' in the type store
            # Getting the type of 'stypy_return_type' (line 1548)
            stypy_return_type_549746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1548, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549746)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'lpnm_2'
            return stypy_return_type_549746

        # Assigning a type to the variable 'lpnm_2' (line 1548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1548, 8), 'lpnm_2', lpnm_2)

        @norecursion
        def legenp(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'legenp'
            module_type_store = module_type_store.open_function_context('legenp', 1555, 8, False)
            
            # Passed parameters checking function
            legenp.stypy_localization = localization
            legenp.stypy_type_of_self = None
            legenp.stypy_type_store = module_type_store
            legenp.stypy_function_name = 'legenp'
            legenp.stypy_param_names_list = ['n', 'm', 'z']
            legenp.stypy_varargs_param_name = None
            legenp.stypy_kwargs_param_name = None
            legenp.stypy_call_defaults = defaults
            legenp.stypy_call_varargs = varargs
            legenp.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'legenp', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'legenp', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'legenp(...)' code ##################

            
            
            # Evaluating a boolean operation
            
            # Evaluating a boolean operation
            
            # Getting the type of 'z' (line 1556)
            z_549747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 16), 'z')
            int_549748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1556, 21), 'int')
            # Applying the binary operator '==' (line 1556)
            result_eq_549749 = python_operator(stypy.reporting.localization.Localization(__file__, 1556, 16), '==', z_549747, int_549748)
            
            
            # Getting the type of 'z' (line 1556)
            z_549750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 26), 'z')
            int_549751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1556, 31), 'int')
            # Applying the binary operator '==' (line 1556)
            result_eq_549752 = python_operator(stypy.reporting.localization.Localization(__file__, 1556, 26), '==', z_549750, int_549751)
            
            # Applying the binary operator 'or' (line 1556)
            result_or_keyword_549753 = python_operator(stypy.reporting.localization.Localization(__file__, 1556, 16), 'or', result_eq_549749, result_eq_549752)
            
            
            
            # Call to int(...): (line 1556)
            # Processing the call arguments (line 1556)
            # Getting the type of 'n' (line 1556)
            n_549755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 43), 'n', False)
            # Processing the call keyword arguments (line 1556)
            kwargs_549756 = {}
            # Getting the type of 'int' (line 1556)
            int_549754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 39), 'int', False)
            # Calling int(args, kwargs) (line 1556)
            int_call_result_549757 = invoke(stypy.reporting.localization.Localization(__file__, 1556, 39), int_549754, *[n_549755], **kwargs_549756)
            
            # Getting the type of 'n' (line 1556)
            n_549758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1556, 49), 'n')
            # Applying the binary operator '==' (line 1556)
            result_eq_549759 = python_operator(stypy.reporting.localization.Localization(__file__, 1556, 39), '==', int_call_result_549757, n_549758)
            
            # Applying the binary operator 'and' (line 1556)
            result_and_keyword_549760 = python_operator(stypy.reporting.localization.Localization(__file__, 1556, 15), 'and', result_or_keyword_549753, result_eq_549759)
            
            # Testing the type of an if condition (line 1556)
            if_condition_549761 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1556, 12), result_and_keyword_549760)
            # Assigning a type to the variable 'if_condition_549761' (line 1556)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1556, 12), 'if_condition_549761', if_condition_549761)
            # SSA begins for if statement (line 1556)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            
            # Getting the type of 'm' (line 1559)
            m_549762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 19), 'm')
            int_549763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1559, 24), 'int')
            # Applying the binary operator '==' (line 1559)
            result_eq_549764 = python_operator(stypy.reporting.localization.Localization(__file__, 1559, 19), '==', m_549762, int_549763)
            
            # Testing the type of an if condition (line 1559)
            if_condition_549765 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1559, 16), result_eq_549764)
            # Assigning a type to the variable 'if_condition_549765' (line 1559)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 16), 'if_condition_549765', if_condition_549765)
            # SSA begins for if statement (line 1559)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            
            # Getting the type of 'n' (line 1560)
            n_549766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 23), 'n')
            int_549767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1560, 27), 'int')
            # Applying the binary operator '<' (line 1560)
            result_lt_549768 = python_operator(stypy.reporting.localization.Localization(__file__, 1560, 23), '<', n_549766, int_549767)
            
            # Testing the type of an if condition (line 1560)
            if_condition_549769 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1560, 20), result_lt_549768)
            # Assigning a type to the variable 'if_condition_549769' (line 1560)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1560, 20), 'if_condition_549769', if_condition_549769)
            # SSA begins for if statement (line 1560)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 1561):
            
            # Assigning a BinOp to a Name (line 1561):
            
            # Getting the type of 'n' (line 1561)
            n_549770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 29), 'n')
            # Applying the 'usub' unary operator (line 1561)
            result___neg___549771 = python_operator(stypy.reporting.localization.Localization(__file__, 1561, 28), 'usub', n_549770)
            
            int_549772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1561, 33), 'int')
            # Applying the binary operator '-' (line 1561)
            result_sub_549773 = python_operator(stypy.reporting.localization.Localization(__file__, 1561, 28), '-', result___neg___549771, int_549772)
            
            # Assigning a type to the variable 'n' (line 1561)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1561, 24), 'n', result_sub_549773)
            # SSA join for if statement (line 1560)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to power(...): (line 1562)
            # Processing the call arguments (line 1562)
            
            # Call to sign(...): (line 1562)
            # Processing the call arguments (line 1562)
            # Getting the type of 'z' (line 1562)
            z_549778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 52), 'z', False)
            # Processing the call keyword arguments (line 1562)
            kwargs_549779 = {}
            # Getting the type of 'mpmath' (line 1562)
            mpmath_549776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 40), 'mpmath', False)
            # Obtaining the member 'sign' of a type (line 1562)
            sign_549777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1562, 40), mpmath_549776, 'sign')
            # Calling sign(args, kwargs) (line 1562)
            sign_call_result_549780 = invoke(stypy.reporting.localization.Localization(__file__, 1562, 40), sign_549777, *[z_549778], **kwargs_549779)
            
            # Getting the type of 'n' (line 1562)
            n_549781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 56), 'n', False)
            # Processing the call keyword arguments (line 1562)
            kwargs_549782 = {}
            # Getting the type of 'mpmath' (line 1562)
            mpmath_549774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 27), 'mpmath', False)
            # Obtaining the member 'power' of a type (line 1562)
            power_549775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1562, 27), mpmath_549774, 'power')
            # Calling power(args, kwargs) (line 1562)
            power_call_result_549783 = invoke(stypy.reporting.localization.Localization(__file__, 1562, 27), power_549775, *[sign_call_result_549780, n_549781], **kwargs_549782)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1562)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1562, 20), 'stypy_return_type', power_call_result_549783)
            # SSA branch for the else part of an if statement (line 1559)
            module_type_store.open_ssa_branch('else')
            int_549784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1564, 27), 'int')
            # Assigning a type to the variable 'stypy_return_type' (line 1564)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1564, 20), 'stypy_return_type', int_549784)
            # SSA join for if statement (line 1559)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 1556)
            module_type_store = module_type_store.join_ssa_context()
            
            
            
            
            # Call to abs(...): (line 1566)
            # Processing the call arguments (line 1566)
            # Getting the type of 'z' (line 1566)
            z_549786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1566, 19), 'z', False)
            # Processing the call keyword arguments (line 1566)
            kwargs_549787 = {}
            # Getting the type of 'abs' (line 1566)
            abs_549785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1566, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1566)
            abs_call_result_549788 = invoke(stypy.reporting.localization.Localization(__file__, 1566, 15), abs_549785, *[z_549786], **kwargs_549787)
            
            float_549789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1566, 24), 'float')
            # Applying the binary operator '<' (line 1566)
            result_lt_549790 = python_operator(stypy.reporting.localization.Localization(__file__, 1566, 15), '<', abs_call_result_549788, float_549789)
            
            # Testing the type of an if condition (line 1566)
            if_condition_549791 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1566, 12), result_lt_549790)
            # Assigning a type to the variable 'if_condition_549791' (line 1566)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1566, 12), 'if_condition_549791', if_condition_549791)
            # SSA begins for if statement (line 1566)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1568)
            np_549792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1568, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1568)
            nan_549793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1568, 23), np_549792, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1568)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1568, 16), 'stypy_return_type', nan_549793)
            # SSA join for if statement (line 1566)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a IfExp to a Name (line 1570):
            
            # Assigning a IfExp to a Name (line 1570):
            
            
            
            # Call to abs(...): (line 1570)
            # Processing the call arguments (line 1570)
            # Getting the type of 'z' (line 1570)
            z_549795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 27), 'z', False)
            # Processing the call keyword arguments (line 1570)
            kwargs_549796 = {}
            # Getting the type of 'abs' (line 1570)
            abs_549794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1570, 23), 'abs', False)
            # Calling abs(args, kwargs) (line 1570)
            abs_call_result_549797 = invoke(stypy.reporting.localization.Localization(__file__, 1570, 23), abs_549794, *[z_549795], **kwargs_549796)
            
            int_549798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1570, 32), 'int')
            # Applying the binary operator '<' (line 1570)
            result_lt_549799 = python_operator(stypy.reporting.localization.Localization(__file__, 1570, 23), '<', abs_call_result_549797, int_549798)
            
            # Testing the type of an if expression (line 1570)
            is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1570, 18), result_lt_549799)
            # SSA begins for if expression (line 1570)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
            int_549800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1570, 18), 'int')
            # SSA branch for the else part of an if expression (line 1570)
            module_type_store.open_ssa_branch('if expression else')
            int_549801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1570, 39), 'int')
            # SSA join for if expression (line 1570)
            module_type_store = module_type_store.join_ssa_context()
            if_exp_549802 = union_type.UnionType.add(int_549800, int_549801)
            
            # Assigning a type to the variable 'typ' (line 1570)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1570, 12), 'typ', if_exp_549802)
            
            # Assigning a Call to a Name (line 1571):
            
            # Assigning a Call to a Name (line 1571):
            
            # Call to (...): (line 1571)
            # Processing the call arguments (line 1571)
            # Getting the type of 'n' (line 1571)
            n_549808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 48), 'n', False)
            # Getting the type of 'm' (line 1571)
            m_549809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 51), 'm', False)
            # Getting the type of 'z' (line 1571)
            z_549810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 54), 'z', False)
            # Processing the call keyword arguments (line 1571)
            # Getting the type of 'typ' (line 1571)
            typ_549811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 62), 'typ', False)
            keyword_549812 = typ_549811
            kwargs_549813 = {'type': keyword_549812}
            
            # Call to exception_to_nan(...): (line 1571)
            # Processing the call arguments (line 1571)
            # Getting the type of 'mpmath' (line 1571)
            mpmath_549804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 33), 'mpmath', False)
            # Obtaining the member 'legenp' of a type (line 1571)
            legenp_549805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1571, 33), mpmath_549804, 'legenp')
            # Processing the call keyword arguments (line 1571)
            kwargs_549806 = {}
            # Getting the type of 'exception_to_nan' (line 1571)
            exception_to_nan_549803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 16), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1571)
            exception_to_nan_call_result_549807 = invoke(stypy.reporting.localization.Localization(__file__, 1571, 16), exception_to_nan_549803, *[legenp_549805], **kwargs_549806)
            
            # Calling (args, kwargs) (line 1571)
            _call_result_549814 = invoke(stypy.reporting.localization.Localization(__file__, 1571, 16), exception_to_nan_call_result_549807, *[n_549808, m_549809, z_549810], **kwargs_549813)
            
            # Assigning a type to the variable 'v' (line 1571)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1571, 12), 'v', _call_result_549814)
            
            
            
            # Call to abs(...): (line 1573)
            # Processing the call arguments (line 1573)
            # Getting the type of 'v' (line 1573)
            v_549816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1573, 19), 'v', False)
            # Processing the call keyword arguments (line 1573)
            kwargs_549817 = {}
            # Getting the type of 'abs' (line 1573)
            abs_549815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1573, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1573)
            abs_call_result_549818 = invoke(stypy.reporting.localization.Localization(__file__, 1573, 15), abs_549815, *[v_549816], **kwargs_549817)
            
            float_549819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1573, 24), 'float')
            # Applying the binary operator '>' (line 1573)
            result_gt_549820 = python_operator(stypy.reporting.localization.Localization(__file__, 1573, 15), '>', abs_call_result_549818, float_549819)
            
            # Testing the type of an if condition (line 1573)
            if_condition_549821 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1573, 12), result_gt_549820)
            # Assigning a type to the variable 'if_condition_549821' (line 1573)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1573, 12), 'if_condition_549821', if_condition_549821)
            # SSA begins for if statement (line 1573)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 1575):
            
            # Assigning a BinOp to a Name (line 1575):
            # Getting the type of 'mpmath' (line 1575)
            mpmath_549822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 20), 'mpmath')
            # Obtaining the member 'inf' of a type (line 1575)
            inf_549823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1575, 20), mpmath_549822, 'inf')
            
            # Call to sign(...): (line 1575)
            # Processing the call arguments (line 1575)
            # Getting the type of 'v' (line 1575)
            v_549826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 45), 'v', False)
            # Obtaining the member 'real' of a type (line 1575)
            real_549827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1575, 45), v_549826, 'real')
            # Processing the call keyword arguments (line 1575)
            kwargs_549828 = {}
            # Getting the type of 'mpmath' (line 1575)
            mpmath_549824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 33), 'mpmath', False)
            # Obtaining the member 'sign' of a type (line 1575)
            sign_549825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1575, 33), mpmath_549824, 'sign')
            # Calling sign(args, kwargs) (line 1575)
            sign_call_result_549829 = invoke(stypy.reporting.localization.Localization(__file__, 1575, 33), sign_549825, *[real_549827], **kwargs_549828)
            
            # Applying the binary operator '*' (line 1575)
            result_mul_549830 = python_operator(stypy.reporting.localization.Localization(__file__, 1575, 20), '*', inf_549823, sign_call_result_549829)
            
            # Assigning a type to the variable 'v' (line 1575)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1575, 16), 'v', result_mul_549830)
            # SSA join for if statement (line 1573)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'v' (line 1577)
            v_549831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 19), 'v')
            # Assigning a type to the variable 'stypy_return_type' (line 1577)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1577, 12), 'stypy_return_type', v_549831)
            
            # ################# End of 'legenp(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'legenp' in the type store
            # Getting the type of 'stypy_return_type' (line 1555)
            stypy_return_type_549832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1555, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549832)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'legenp'
            return stypy_return_type_549832

        # Assigning a type to the variable 'legenp' (line 1555)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1555, 8), 'legenp', legenp)
        
        # Call to assert_mpmath_equal(...): (line 1579)
        # Processing the call arguments (line 1579)
        # Getting the type of 'lpnm' (line 1579)
        lpnm_549834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 28), 'lpnm', False)
        # Getting the type of 'legenp' (line 1580)
        legenp_549835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 28), 'legenp', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1581)
        list_549836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1581, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1581)
        # Adding element type (line 1581)
        
        # Call to IntArg(...): (line 1581)
        # Processing the call arguments (line 1581)
        int_549838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1581, 36), 'int')
        int_549839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1581, 42), 'int')
        # Processing the call keyword arguments (line 1581)
        kwargs_549840 = {}
        # Getting the type of 'IntArg' (line 1581)
        IntArg_549837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1581)
        IntArg_call_result_549841 = invoke(stypy.reporting.localization.Localization(__file__, 1581, 29), IntArg_549837, *[int_549838, int_549839], **kwargs_549840)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1581, 28), list_549836, IntArg_call_result_549841)
        # Adding element type (line 1581)
        
        # Call to IntArg(...): (line 1581)
        # Processing the call arguments (line 1581)
        int_549843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1581, 55), 'int')
        int_549844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1581, 61), 'int')
        # Processing the call keyword arguments (line 1581)
        kwargs_549845 = {}
        # Getting the type of 'IntArg' (line 1581)
        IntArg_549842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 48), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1581)
        IntArg_call_result_549846 = invoke(stypy.reporting.localization.Localization(__file__, 1581, 48), IntArg_549842, *[int_549843, int_549844], **kwargs_549845)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1581, 28), list_549836, IntArg_call_result_549846)
        # Adding element type (line 1581)
        
        # Call to Arg(...): (line 1581)
        # Processing the call keyword arguments (line 1581)
        kwargs_549848 = {}
        # Getting the type of 'Arg' (line 1581)
        Arg_549847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 67), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1581)
        Arg_call_result_549849 = invoke(stypy.reporting.localization.Localization(__file__, 1581, 67), Arg_549847, *[], **kwargs_549848)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1581, 28), list_549836, Arg_call_result_549849)
        
        # Processing the call keyword arguments (line 1579)
        kwargs_549850 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1579)
        assert_mpmath_equal_549833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1579)
        assert_mpmath_equal_call_result_549851 = invoke(stypy.reporting.localization.Localization(__file__, 1579, 8), assert_mpmath_equal_549833, *[lpnm_549834, legenp_549835, list_549836], **kwargs_549850)
        
        
        # Call to assert_mpmath_equal(...): (line 1583)
        # Processing the call arguments (line 1583)
        # Getting the type of 'lpnm_2' (line 1583)
        lpnm_2_549853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 28), 'lpnm_2', False)
        # Getting the type of 'legenp' (line 1584)
        legenp_549854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1584, 28), 'legenp', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1585)
        list_549855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1585)
        # Adding element type (line 1585)
        
        # Call to IntArg(...): (line 1585)
        # Processing the call arguments (line 1585)
        int_549857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 36), 'int')
        int_549858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 42), 'int')
        # Processing the call keyword arguments (line 1585)
        kwargs_549859 = {}
        # Getting the type of 'IntArg' (line 1585)
        IntArg_549856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1585)
        IntArg_call_result_549860 = invoke(stypy.reporting.localization.Localization(__file__, 1585, 29), IntArg_549856, *[int_549857, int_549858], **kwargs_549859)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1585, 28), list_549855, IntArg_call_result_549860)
        # Adding element type (line 1585)
        
        # Call to Arg(...): (line 1585)
        # Processing the call arguments (line 1585)
        int_549862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 52), 'int')
        int_549863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 58), 'int')
        # Processing the call keyword arguments (line 1585)
        kwargs_549864 = {}
        # Getting the type of 'Arg' (line 1585)
        Arg_549861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 48), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1585)
        Arg_call_result_549865 = invoke(stypy.reporting.localization.Localization(__file__, 1585, 48), Arg_549861, *[int_549862, int_549863], **kwargs_549864)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1585, 28), list_549855, Arg_call_result_549865)
        # Adding element type (line 1585)
        
        # Call to Arg(...): (line 1585)
        # Processing the call arguments (line 1585)
        int_549867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 68), 'int')
        int_549868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1585, 72), 'int')
        # Processing the call keyword arguments (line 1585)
        kwargs_549869 = {}
        # Getting the type of 'Arg' (line 1585)
        Arg_549866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 64), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1585)
        Arg_call_result_549870 = invoke(stypy.reporting.localization.Localization(__file__, 1585, 64), Arg_549866, *[int_549867, int_549868], **kwargs_549869)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1585, 28), list_549855, Arg_call_result_549870)
        
        # Processing the call keyword arguments (line 1583)
        kwargs_549871 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1583)
        assert_mpmath_equal_549852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1583)
        assert_mpmath_equal_call_result_549872 = invoke(stypy.reporting.localization.Localization(__file__, 1583, 8), assert_mpmath_equal_549852, *[lpnm_2_549853, legenp_549854, list_549855], **kwargs_549871)
        
        
        # ################# End of 'test_legenp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_legenp' in the type store
        # Getting the type of 'stypy_return_type' (line 1537)
        stypy_return_type_549873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1537, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549873)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_legenp'
        return stypy_return_type_549873


    @norecursion
    def test_legenp_complex_2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_legenp_complex_2'
        module_type_store = module_type_store.open_function_context('test_legenp_complex_2', 1587, 4, False)
        # Assigning a type to the variable 'self' (line 1588)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1588, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_legenp_complex_2')
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_legenp_complex_2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_legenp_complex_2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_legenp_complex_2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_legenp_complex_2(...)' code ##################


        @norecursion
        def clpnm(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'clpnm'
            module_type_store = module_type_store.open_function_context('clpnm', 1588, 8, False)
            
            # Passed parameters checking function
            clpnm.stypy_localization = localization
            clpnm.stypy_type_of_self = None
            clpnm.stypy_type_store = module_type_store
            clpnm.stypy_function_name = 'clpnm'
            clpnm.stypy_param_names_list = ['n', 'm', 'z']
            clpnm.stypy_varargs_param_name = None
            clpnm.stypy_kwargs_param_name = None
            clpnm.stypy_call_defaults = defaults
            clpnm.stypy_call_varargs = varargs
            clpnm.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'clpnm', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'clpnm', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'clpnm(...)' code ##################

            
            
            # SSA begins for try-except statement (line 1589)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
            
            # Obtaining the type of the subscript
            
            # Obtaining an instance of the builtin type 'tuple' (line 1590)
            tuple_549874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1590, 62), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1590)
            # Adding element type (line 1590)
            int_549875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1590, 62), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1590, 62), tuple_549874, int_549875)
            # Adding element type (line 1590)
            int_549876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1590, 65), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1590, 62), tuple_549874, int_549876)
            
            
            # Obtaining the type of the subscript
            int_549877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1590, 59), 'int')
            
            # Call to clpmn(...): (line 1590)
            # Processing the call arguments (line 1590)
            # Getting the type of 'm' (line 1590)
            m_549880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 32), 'm', False)
            # Obtaining the member 'real' of a type (line 1590)
            real_549881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 32), m_549880, 'real')
            # Getting the type of 'n' (line 1590)
            n_549882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 40), 'n', False)
            # Obtaining the member 'real' of a type (line 1590)
            real_549883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 40), n_549882, 'real')
            # Getting the type of 'z' (line 1590)
            z_549884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 48), 'z', False)
            # Processing the call keyword arguments (line 1590)
            int_549885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1590, 56), 'int')
            keyword_549886 = int_549885
            kwargs_549887 = {'type': keyword_549886}
            # Getting the type of 'sc' (line 1590)
            sc_549878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 23), 'sc', False)
            # Obtaining the member 'clpmn' of a type (line 1590)
            clpmn_549879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 23), sc_549878, 'clpmn')
            # Calling clpmn(args, kwargs) (line 1590)
            clpmn_call_result_549888 = invoke(stypy.reporting.localization.Localization(__file__, 1590, 23), clpmn_549879, *[real_549881, real_549883, z_549884], **kwargs_549887)
            
            # Obtaining the member '__getitem__' of a type (line 1590)
            getitem___549889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 23), clpmn_call_result_549888, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1590)
            subscript_call_result_549890 = invoke(stypy.reporting.localization.Localization(__file__, 1590, 23), getitem___549889, int_549877)
            
            # Obtaining the member '__getitem__' of a type (line 1590)
            getitem___549891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1590, 23), subscript_call_result_549890, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1590)
            subscript_call_result_549892 = invoke(stypy.reporting.localization.Localization(__file__, 1590, 23), getitem___549891, tuple_549874)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1590)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1590, 16), 'stypy_return_type', subscript_call_result_549892)
            # SSA branch for the except part of a try statement (line 1589)
            # SSA branch for the except 'ValueError' branch of a try statement (line 1589)
            module_type_store.open_ssa_branch('except')
            # Getting the type of 'np' (line 1592)
            np_549893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1592, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1592)
            nan_549894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1592, 23), np_549893, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1592)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1592, 16), 'stypy_return_type', nan_549894)
            # SSA join for try-except statement (line 1589)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'clpnm(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'clpnm' in the type store
            # Getting the type of 'stypy_return_type' (line 1588)
            stypy_return_type_549895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1588, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549895)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'clpnm'
            return stypy_return_type_549895

        # Assigning a type to the variable 'clpnm' (line 1588)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1588, 8), 'clpnm', clpnm)

        @norecursion
        def legenp(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'legenp'
            module_type_store = module_type_store.open_function_context('legenp', 1594, 8, False)
            
            # Passed parameters checking function
            legenp.stypy_localization = localization
            legenp.stypy_type_of_self = None
            legenp.stypy_type_store = module_type_store
            legenp.stypy_function_name = 'legenp'
            legenp.stypy_param_names_list = ['n', 'm', 'z']
            legenp.stypy_varargs_param_name = None
            legenp.stypy_kwargs_param_name = None
            legenp.stypy_call_defaults = defaults
            legenp.stypy_call_varargs = varargs
            legenp.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'legenp', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'legenp', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'legenp(...)' code ##################

            
            
            
            # Call to abs(...): (line 1595)
            # Processing the call arguments (line 1595)
            # Getting the type of 'z' (line 1595)
            z_549897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1595, 19), 'z', False)
            # Processing the call keyword arguments (line 1595)
            kwargs_549898 = {}
            # Getting the type of 'abs' (line 1595)
            abs_549896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1595, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1595)
            abs_call_result_549899 = invoke(stypy.reporting.localization.Localization(__file__, 1595, 15), abs_549896, *[z_549897], **kwargs_549898)
            
            float_549900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1595, 24), 'float')
            # Applying the binary operator '<' (line 1595)
            result_lt_549901 = python_operator(stypy.reporting.localization.Localization(__file__, 1595, 15), '<', abs_call_result_549899, float_549900)
            
            # Testing the type of an if condition (line 1595)
            if_condition_549902 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1595, 12), result_lt_549901)
            # Assigning a type to the variable 'if_condition_549902' (line 1595)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1595, 12), 'if_condition_549902', if_condition_549902)
            # SSA begins for if statement (line 1595)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1597)
            np_549903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1597)
            nan_549904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1597, 23), np_549903, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1597)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1597, 16), 'stypy_return_type', nan_549904)
            # SSA join for if statement (line 1595)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to (...): (line 1598)
            # Processing the call arguments (line 1598)
            
            # Call to int(...): (line 1598)
            # Processing the call arguments (line 1598)
            # Getting the type of 'n' (line 1598)
            n_549911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 55), 'n', False)
            # Obtaining the member 'real' of a type (line 1598)
            real_549912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1598, 55), n_549911, 'real')
            # Processing the call keyword arguments (line 1598)
            kwargs_549913 = {}
            # Getting the type of 'int' (line 1598)
            int_549910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 51), 'int', False)
            # Calling int(args, kwargs) (line 1598)
            int_call_result_549914 = invoke(stypy.reporting.localization.Localization(__file__, 1598, 51), int_549910, *[real_549912], **kwargs_549913)
            
            
            # Call to int(...): (line 1598)
            # Processing the call arguments (line 1598)
            # Getting the type of 'm' (line 1598)
            m_549916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 68), 'm', False)
            # Obtaining the member 'real' of a type (line 1598)
            real_549917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1598, 68), m_549916, 'real')
            # Processing the call keyword arguments (line 1598)
            kwargs_549918 = {}
            # Getting the type of 'int' (line 1598)
            int_549915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 64), 'int', False)
            # Calling int(args, kwargs) (line 1598)
            int_call_result_549919 = invoke(stypy.reporting.localization.Localization(__file__, 1598, 64), int_549915, *[real_549917], **kwargs_549918)
            
            # Getting the type of 'z' (line 1598)
            z_549920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 77), 'z', False)
            # Processing the call keyword arguments (line 1598)
            int_549921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1598, 85), 'int')
            keyword_549922 = int_549921
            kwargs_549923 = {'type': keyword_549922}
            
            # Call to exception_to_nan(...): (line 1598)
            # Processing the call arguments (line 1598)
            # Getting the type of 'mpmath' (line 1598)
            mpmath_549906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 36), 'mpmath', False)
            # Obtaining the member 'legenp' of a type (line 1598)
            legenp_549907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1598, 36), mpmath_549906, 'legenp')
            # Processing the call keyword arguments (line 1598)
            kwargs_549908 = {}
            # Getting the type of 'exception_to_nan' (line 1598)
            exception_to_nan_549905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1598, 19), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1598)
            exception_to_nan_call_result_549909 = invoke(stypy.reporting.localization.Localization(__file__, 1598, 19), exception_to_nan_549905, *[legenp_549907], **kwargs_549908)
            
            # Calling (args, kwargs) (line 1598)
            _call_result_549924 = invoke(stypy.reporting.localization.Localization(__file__, 1598, 19), exception_to_nan_call_result_549909, *[int_call_result_549914, int_call_result_549919, z_549920], **kwargs_549923)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1598)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1598, 12), 'stypy_return_type', _call_result_549924)
            
            # ################# End of 'legenp(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'legenp' in the type store
            # Getting the type of 'stypy_return_type' (line 1594)
            stypy_return_type_549925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1594, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_549925)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'legenp'
            return stypy_return_type_549925

        # Assigning a type to the variable 'legenp' (line 1594)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1594, 8), 'legenp', legenp)
        
        # Assigning a Call to a Name (line 1601):
        
        # Assigning a Call to a Name (line 1601):
        
        # Call to array(...): (line 1601)
        # Processing the call arguments (line 1601)
        
        # Obtaining an instance of the builtin type 'list' (line 1601)
        list_549928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1601)
        # Adding element type (line 1601)
        int_549929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 21), list_549928, int_549929)
        # Adding element type (line 1601)
        float_549930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 26), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 21), list_549928, float_549930)
        # Adding element type (line 1601)
        float_549931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 21), list_549928, float_549931)
        # Adding element type (line 1601)
        int_549932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 21), list_549928, int_549932)
        # Adding element type (line 1601)
        float_549933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 21), list_549928, float_549933)
        # Adding element type (line 1601)
        float_549934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 21), list_549928, float_549934)
        # Adding element type (line 1601)
        float_549935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 21), list_549928, float_549935)
        # Adding element type (line 1601)
        int_549936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 21), list_549928, int_549936)
        # Adding element type (line 1601)
        float_549937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 63), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 21), list_549928, float_549937)
        
        # Processing the call keyword arguments (line 1601)
        kwargs_549938 = {}
        # Getting the type of 'np' (line 1601)
        np_549926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 1601)
        array_549927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1601, 12), np_549926, 'array')
        # Calling array(args, kwargs) (line 1601)
        array_call_result_549939 = invoke(stypy.reporting.localization.Localization(__file__, 1601, 12), array_549927, *[list_549928], **kwargs_549938)
        
        # Assigning a type to the variable 'x' (line 1601)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1601, 8), 'x', array_call_result_549939)
        
        # Assigning a Call to a Name (line 1602):
        
        # Assigning a Call to a Name (line 1602):
        
        # Call to array(...): (line 1602)
        # Processing the call arguments (line 1602)
        
        # Obtaining an instance of the builtin type 'list' (line 1602)
        list_549942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1602, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1602)
        # Adding element type (line 1602)
        float_549943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1602, 22), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1602, 21), list_549942, float_549943)
        # Adding element type (line 1602)
        float_549944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1602, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1602, 21), list_549942, float_549944)
        # Adding element type (line 1602)
        float_549945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1602, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1602, 21), list_549942, float_549945)
        # Adding element type (line 1602)
        float_549946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1602, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1602, 21), list_549942, float_549946)
        
        # Processing the call keyword arguments (line 1602)
        kwargs_549947 = {}
        # Getting the type of 'np' (line 1602)
        np_549940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1602, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 1602)
        array_549941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1602, 12), np_549940, 'array')
        # Calling array(args, kwargs) (line 1602)
        array_call_result_549948 = invoke(stypy.reporting.localization.Localization(__file__, 1602, 12), array_549941, *[list_549942], **kwargs_549947)
        
        # Assigning a type to the variable 'y' (line 1602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1602, 8), 'y', array_call_result_549948)
        
        # Assigning a Call to a Name (line 1603):
        
        # Assigning a Call to a Name (line 1603):
        
        # Call to ravel(...): (line 1603)
        # Processing the call keyword arguments (line 1603)
        kwargs_549963 = {}
        
        # Obtaining the type of the subscript
        slice_549949 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1603, 13), None, None, None)
        # Getting the type of 'None' (line 1603)
        None_549950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 17), 'None', False)
        # Getting the type of 'x' (line 1603)
        x_549951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 13), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 1603)
        getitem___549952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1603, 13), x_549951, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1603)
        subscript_call_result_549953 = invoke(stypy.reporting.localization.Localization(__file__, 1603, 13), getitem___549952, (slice_549949, None_549950))
        
        complex_549954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1603, 25), 'complex')
        
        # Obtaining the type of the subscript
        # Getting the type of 'None' (line 1603)
        None_549955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 30), 'None', False)
        slice_549956 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1603, 28), None, None, None)
        # Getting the type of 'y' (line 1603)
        y_549957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 28), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 1603)
        getitem___549958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1603, 28), y_549957, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1603)
        subscript_call_result_549959 = invoke(stypy.reporting.localization.Localization(__file__, 1603, 28), getitem___549958, (None_549955, slice_549956))
        
        # Applying the binary operator '*' (line 1603)
        result_mul_549960 = python_operator(stypy.reporting.localization.Localization(__file__, 1603, 25), '*', complex_549954, subscript_call_result_549959)
        
        # Applying the binary operator '+' (line 1603)
        result_add_549961 = python_operator(stypy.reporting.localization.Localization(__file__, 1603, 13), '+', subscript_call_result_549953, result_mul_549960)
        
        # Obtaining the member 'ravel' of a type (line 1603)
        ravel_549962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1603, 13), result_add_549961, 'ravel')
        # Calling ravel(args, kwargs) (line 1603)
        ravel_call_result_549964 = invoke(stypy.reporting.localization.Localization(__file__, 1603, 13), ravel_549962, *[], **kwargs_549963)
        
        # Assigning a type to the variable 'z' (line 1603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1603, 8), 'z', ravel_call_result_549964)
        
        # Call to assert_mpmath_equal(...): (line 1605)
        # Processing the call arguments (line 1605)
        # Getting the type of 'clpnm' (line 1605)
        clpnm_549966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 28), 'clpnm', False)
        # Getting the type of 'legenp' (line 1606)
        legenp_549967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1606, 28), 'legenp', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1607)
        list_549968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1607)
        # Adding element type (line 1607)
        
        # Call to FixedArg(...): (line 1607)
        # Processing the call arguments (line 1607)
        
        # Obtaining an instance of the builtin type 'list' (line 1607)
        list_549970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1607)
        # Adding element type (line 1607)
        int_549971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 38), list_549970, int_549971)
        # Adding element type (line 1607)
        int_549972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 38), list_549970, int_549972)
        # Adding element type (line 1607)
        int_549973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 38), list_549970, int_549973)
        # Adding element type (line 1607)
        int_549974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 38), list_549970, int_549974)
        # Adding element type (line 1607)
        int_549975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 38), list_549970, int_549975)
        # Adding element type (line 1607)
        int_549976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 38), list_549970, int_549976)
        
        # Processing the call keyword arguments (line 1607)
        kwargs_549977 = {}
        # Getting the type of 'FixedArg' (line 1607)
        FixedArg_549969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 29), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 1607)
        FixedArg_call_result_549978 = invoke(stypy.reporting.localization.Localization(__file__, 1607, 29), FixedArg_549969, *[list_549970], **kwargs_549977)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 28), list_549968, FixedArg_call_result_549978)
        # Adding element type (line 1607)
        
        # Call to FixedArg(...): (line 1607)
        # Processing the call arguments (line 1607)
        
        # Obtaining an instance of the builtin type 'list' (line 1607)
        list_549980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 71), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1607)
        # Adding element type (line 1607)
        int_549981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 72), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 71), list_549980, int_549981)
        # Adding element type (line 1607)
        int_549982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 76), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 71), list_549980, int_549982)
        # Adding element type (line 1607)
        int_549983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 80), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 71), list_549980, int_549983)
        # Adding element type (line 1607)
        int_549984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 83), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 71), list_549980, int_549984)
        # Adding element type (line 1607)
        int_549985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 86), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 71), list_549980, int_549985)
        # Adding element type (line 1607)
        int_549986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1607, 89), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 71), list_549980, int_549986)
        
        # Processing the call keyword arguments (line 1607)
        kwargs_549987 = {}
        # Getting the type of 'FixedArg' (line 1607)
        FixedArg_549979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 62), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 1607)
        FixedArg_call_result_549988 = invoke(stypy.reporting.localization.Localization(__file__, 1607, 62), FixedArg_549979, *[list_549980], **kwargs_549987)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 28), list_549968, FixedArg_call_result_549988)
        # Adding element type (line 1607)
        
        # Call to FixedArg(...): (line 1607)
        # Processing the call arguments (line 1607)
        # Getting the type of 'z' (line 1607)
        z_549990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 104), 'z', False)
        # Processing the call keyword arguments (line 1607)
        kwargs_549991 = {}
        # Getting the type of 'FixedArg' (line 1607)
        FixedArg_549989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 95), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 1607)
        FixedArg_call_result_549992 = invoke(stypy.reporting.localization.Localization(__file__, 1607, 95), FixedArg_549989, *[z_549990], **kwargs_549991)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1607, 28), list_549968, FixedArg_call_result_549992)
        
        # Processing the call keyword arguments (line 1605)
        float_549993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1608, 33), 'float')
        keyword_549994 = float_549993
        int_549995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1609, 30), 'int')
        keyword_549996 = int_549995
        kwargs_549997 = {'rtol': keyword_549994, 'n': keyword_549996}
        # Getting the type of 'assert_mpmath_equal' (line 1605)
        assert_mpmath_equal_549965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1605)
        assert_mpmath_equal_call_result_549998 = invoke(stypy.reporting.localization.Localization(__file__, 1605, 8), assert_mpmath_equal_549965, *[clpnm_549966, legenp_549967, list_549968], **kwargs_549997)
        
        
        # ################# End of 'test_legenp_complex_2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_legenp_complex_2' in the type store
        # Getting the type of 'stypy_return_type' (line 1587)
        stypy_return_type_549999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_549999)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_legenp_complex_2'
        return stypy_return_type_549999


    @norecursion
    def test_legenp_complex_3(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_legenp_complex_3'
        module_type_store = module_type_store.open_function_context('test_legenp_complex_3', 1611, 4, False)
        # Assigning a type to the variable 'self' (line 1612)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1612, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_legenp_complex_3')
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_legenp_complex_3.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_legenp_complex_3', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_legenp_complex_3', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_legenp_complex_3(...)' code ##################


        @norecursion
        def clpnm(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'clpnm'
            module_type_store = module_type_store.open_function_context('clpnm', 1612, 8, False)
            
            # Passed parameters checking function
            clpnm.stypy_localization = localization
            clpnm.stypy_type_of_self = None
            clpnm.stypy_type_store = module_type_store
            clpnm.stypy_function_name = 'clpnm'
            clpnm.stypy_param_names_list = ['n', 'm', 'z']
            clpnm.stypy_varargs_param_name = None
            clpnm.stypy_kwargs_param_name = None
            clpnm.stypy_call_defaults = defaults
            clpnm.stypy_call_varargs = varargs
            clpnm.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'clpnm', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'clpnm', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'clpnm(...)' code ##################

            
            
            # SSA begins for try-except statement (line 1613)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
            
            # Obtaining the type of the subscript
            
            # Obtaining an instance of the builtin type 'tuple' (line 1614)
            tuple_550000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1614, 62), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1614)
            # Adding element type (line 1614)
            int_550001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1614, 62), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1614, 62), tuple_550000, int_550001)
            # Adding element type (line 1614)
            int_550002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1614, 65), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1614, 62), tuple_550000, int_550002)
            
            
            # Obtaining the type of the subscript
            int_550003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1614, 59), 'int')
            
            # Call to clpmn(...): (line 1614)
            # Processing the call arguments (line 1614)
            # Getting the type of 'm' (line 1614)
            m_550006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 32), 'm', False)
            # Obtaining the member 'real' of a type (line 1614)
            real_550007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 32), m_550006, 'real')
            # Getting the type of 'n' (line 1614)
            n_550008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 40), 'n', False)
            # Obtaining the member 'real' of a type (line 1614)
            real_550009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 40), n_550008, 'real')
            # Getting the type of 'z' (line 1614)
            z_550010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 48), 'z', False)
            # Processing the call keyword arguments (line 1614)
            int_550011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1614, 56), 'int')
            keyword_550012 = int_550011
            kwargs_550013 = {'type': keyword_550012}
            # Getting the type of 'sc' (line 1614)
            sc_550004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 23), 'sc', False)
            # Obtaining the member 'clpmn' of a type (line 1614)
            clpmn_550005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 23), sc_550004, 'clpmn')
            # Calling clpmn(args, kwargs) (line 1614)
            clpmn_call_result_550014 = invoke(stypy.reporting.localization.Localization(__file__, 1614, 23), clpmn_550005, *[real_550007, real_550009, z_550010], **kwargs_550013)
            
            # Obtaining the member '__getitem__' of a type (line 1614)
            getitem___550015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 23), clpmn_call_result_550014, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1614)
            subscript_call_result_550016 = invoke(stypy.reporting.localization.Localization(__file__, 1614, 23), getitem___550015, int_550003)
            
            # Obtaining the member '__getitem__' of a type (line 1614)
            getitem___550017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 23), subscript_call_result_550016, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1614)
            subscript_call_result_550018 = invoke(stypy.reporting.localization.Localization(__file__, 1614, 23), getitem___550017, tuple_550000)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1614)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1614, 16), 'stypy_return_type', subscript_call_result_550018)
            # SSA branch for the except part of a try statement (line 1613)
            # SSA branch for the except 'ValueError' branch of a try statement (line 1613)
            module_type_store.open_ssa_branch('except')
            # Getting the type of 'np' (line 1616)
            np_550019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1616, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1616)
            nan_550020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1616, 23), np_550019, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1616)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1616, 16), 'stypy_return_type', nan_550020)
            # SSA join for try-except statement (line 1613)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'clpnm(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'clpnm' in the type store
            # Getting the type of 'stypy_return_type' (line 1612)
            stypy_return_type_550021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1612, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550021)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'clpnm'
            return stypy_return_type_550021

        # Assigning a type to the variable 'clpnm' (line 1612)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1612, 8), 'clpnm', clpnm)

        @norecursion
        def legenp(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'legenp'
            module_type_store = module_type_store.open_function_context('legenp', 1618, 8, False)
            
            # Passed parameters checking function
            legenp.stypy_localization = localization
            legenp.stypy_type_of_self = None
            legenp.stypy_type_store = module_type_store
            legenp.stypy_function_name = 'legenp'
            legenp.stypy_param_names_list = ['n', 'm', 'z']
            legenp.stypy_varargs_param_name = None
            legenp.stypy_kwargs_param_name = None
            legenp.stypy_call_defaults = defaults
            legenp.stypy_call_varargs = varargs
            legenp.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'legenp', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'legenp', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'legenp(...)' code ##################

            
            
            
            # Call to abs(...): (line 1619)
            # Processing the call arguments (line 1619)
            # Getting the type of 'z' (line 1619)
            z_550023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 19), 'z', False)
            # Processing the call keyword arguments (line 1619)
            kwargs_550024 = {}
            # Getting the type of 'abs' (line 1619)
            abs_550022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1619)
            abs_call_result_550025 = invoke(stypy.reporting.localization.Localization(__file__, 1619, 15), abs_550022, *[z_550023], **kwargs_550024)
            
            float_550026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1619, 24), 'float')
            # Applying the binary operator '<' (line 1619)
            result_lt_550027 = python_operator(stypy.reporting.localization.Localization(__file__, 1619, 15), '<', abs_call_result_550025, float_550026)
            
            # Testing the type of an if condition (line 1619)
            if_condition_550028 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1619, 12), result_lt_550027)
            # Assigning a type to the variable 'if_condition_550028' (line 1619)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1619, 12), 'if_condition_550028', if_condition_550028)
            # SSA begins for if statement (line 1619)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1621)
            np_550029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1621)
            nan_550030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1621, 23), np_550029, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1621)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1621, 16), 'stypy_return_type', nan_550030)
            # SSA join for if statement (line 1619)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to (...): (line 1622)
            # Processing the call arguments (line 1622)
            
            # Call to int(...): (line 1622)
            # Processing the call arguments (line 1622)
            # Getting the type of 'n' (line 1622)
            n_550037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1622, 55), 'n', False)
            # Obtaining the member 'real' of a type (line 1622)
            real_550038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1622, 55), n_550037, 'real')
            # Processing the call keyword arguments (line 1622)
            kwargs_550039 = {}
            # Getting the type of 'int' (line 1622)
            int_550036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1622, 51), 'int', False)
            # Calling int(args, kwargs) (line 1622)
            int_call_result_550040 = invoke(stypy.reporting.localization.Localization(__file__, 1622, 51), int_550036, *[real_550038], **kwargs_550039)
            
            
            # Call to int(...): (line 1622)
            # Processing the call arguments (line 1622)
            # Getting the type of 'm' (line 1622)
            m_550042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1622, 68), 'm', False)
            # Obtaining the member 'real' of a type (line 1622)
            real_550043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1622, 68), m_550042, 'real')
            # Processing the call keyword arguments (line 1622)
            kwargs_550044 = {}
            # Getting the type of 'int' (line 1622)
            int_550041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1622, 64), 'int', False)
            # Calling int(args, kwargs) (line 1622)
            int_call_result_550045 = invoke(stypy.reporting.localization.Localization(__file__, 1622, 64), int_550041, *[real_550043], **kwargs_550044)
            
            # Getting the type of 'z' (line 1622)
            z_550046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1622, 77), 'z', False)
            # Processing the call keyword arguments (line 1622)
            int_550047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1622, 85), 'int')
            keyword_550048 = int_550047
            kwargs_550049 = {'type': keyword_550048}
            
            # Call to exception_to_nan(...): (line 1622)
            # Processing the call arguments (line 1622)
            # Getting the type of 'mpmath' (line 1622)
            mpmath_550032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1622, 36), 'mpmath', False)
            # Obtaining the member 'legenp' of a type (line 1622)
            legenp_550033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1622, 36), mpmath_550032, 'legenp')
            # Processing the call keyword arguments (line 1622)
            kwargs_550034 = {}
            # Getting the type of 'exception_to_nan' (line 1622)
            exception_to_nan_550031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1622, 19), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1622)
            exception_to_nan_call_result_550035 = invoke(stypy.reporting.localization.Localization(__file__, 1622, 19), exception_to_nan_550031, *[legenp_550033], **kwargs_550034)
            
            # Calling (args, kwargs) (line 1622)
            _call_result_550050 = invoke(stypy.reporting.localization.Localization(__file__, 1622, 19), exception_to_nan_call_result_550035, *[int_call_result_550040, int_call_result_550045, z_550046], **kwargs_550049)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1622)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1622, 12), 'stypy_return_type', _call_result_550050)
            
            # ################# End of 'legenp(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'legenp' in the type store
            # Getting the type of 'stypy_return_type' (line 1618)
            stypy_return_type_550051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550051)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'legenp'
            return stypy_return_type_550051

        # Assigning a type to the variable 'legenp' (line 1618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1618, 8), 'legenp', legenp)
        
        # Assigning a Call to a Name (line 1625):
        
        # Assigning a Call to a Name (line 1625):
        
        # Call to array(...): (line 1625)
        # Processing the call arguments (line 1625)
        
        # Obtaining an instance of the builtin type 'list' (line 1625)
        list_550054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1625)
        # Adding element type (line 1625)
        int_550055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 21), list_550054, int_550055)
        # Adding element type (line 1625)
        float_550056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 26), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 21), list_550054, float_550056)
        # Adding element type (line 1625)
        float_550057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 21), list_550054, float_550057)
        # Adding element type (line 1625)
        int_550058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 21), list_550054, int_550058)
        # Adding element type (line 1625)
        float_550059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 21), list_550054, float_550059)
        # Adding element type (line 1625)
        float_550060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 21), list_550054, float_550060)
        # Adding element type (line 1625)
        float_550061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 21), list_550054, float_550061)
        # Adding element type (line 1625)
        int_550062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 21), list_550054, int_550062)
        # Adding element type (line 1625)
        float_550063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1625, 63), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1625, 21), list_550054, float_550063)
        
        # Processing the call keyword arguments (line 1625)
        kwargs_550064 = {}
        # Getting the type of 'np' (line 1625)
        np_550052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 1625)
        array_550053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1625, 12), np_550052, 'array')
        # Calling array(args, kwargs) (line 1625)
        array_call_result_550065 = invoke(stypy.reporting.localization.Localization(__file__, 1625, 12), array_550053, *[list_550054], **kwargs_550064)
        
        # Assigning a type to the variable 'x' (line 1625)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1625, 8), 'x', array_call_result_550065)
        
        # Assigning a Call to a Name (line 1626):
        
        # Assigning a Call to a Name (line 1626):
        
        # Call to array(...): (line 1626)
        # Processing the call arguments (line 1626)
        
        # Obtaining an instance of the builtin type 'list' (line 1626)
        list_550068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1626, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1626)
        # Adding element type (line 1626)
        float_550069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1626, 22), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1626, 21), list_550068, float_550069)
        # Adding element type (line 1626)
        float_550070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1626, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1626, 21), list_550068, float_550070)
        # Adding element type (line 1626)
        float_550071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1626, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1626, 21), list_550068, float_550071)
        # Adding element type (line 1626)
        float_550072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1626, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1626, 21), list_550068, float_550072)
        
        # Processing the call keyword arguments (line 1626)
        kwargs_550073 = {}
        # Getting the type of 'np' (line 1626)
        np_550066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 1626)
        array_550067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1626, 12), np_550066, 'array')
        # Calling array(args, kwargs) (line 1626)
        array_call_result_550074 = invoke(stypy.reporting.localization.Localization(__file__, 1626, 12), array_550067, *[list_550068], **kwargs_550073)
        
        # Assigning a type to the variable 'y' (line 1626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1626, 8), 'y', array_call_result_550074)
        
        # Assigning a Call to a Name (line 1627):
        
        # Assigning a Call to a Name (line 1627):
        
        # Call to ravel(...): (line 1627)
        # Processing the call keyword arguments (line 1627)
        kwargs_550089 = {}
        
        # Obtaining the type of the subscript
        slice_550075 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1627, 13), None, None, None)
        # Getting the type of 'None' (line 1627)
        None_550076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 17), 'None', False)
        # Getting the type of 'x' (line 1627)
        x_550077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 13), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 1627)
        getitem___550078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1627, 13), x_550077, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1627)
        subscript_call_result_550079 = invoke(stypy.reporting.localization.Localization(__file__, 1627, 13), getitem___550078, (slice_550075, None_550076))
        
        complex_550080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1627, 25), 'complex')
        
        # Obtaining the type of the subscript
        # Getting the type of 'None' (line 1627)
        None_550081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 30), 'None', False)
        slice_550082 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1627, 28), None, None, None)
        # Getting the type of 'y' (line 1627)
        y_550083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 28), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 1627)
        getitem___550084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1627, 28), y_550083, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1627)
        subscript_call_result_550085 = invoke(stypy.reporting.localization.Localization(__file__, 1627, 28), getitem___550084, (None_550081, slice_550082))
        
        # Applying the binary operator '*' (line 1627)
        result_mul_550086 = python_operator(stypy.reporting.localization.Localization(__file__, 1627, 25), '*', complex_550080, subscript_call_result_550085)
        
        # Applying the binary operator '+' (line 1627)
        result_add_550087 = python_operator(stypy.reporting.localization.Localization(__file__, 1627, 13), '+', subscript_call_result_550079, result_mul_550086)
        
        # Obtaining the member 'ravel' of a type (line 1627)
        ravel_550088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1627, 13), result_add_550087, 'ravel')
        # Calling ravel(args, kwargs) (line 1627)
        ravel_call_result_550090 = invoke(stypy.reporting.localization.Localization(__file__, 1627, 13), ravel_550088, *[], **kwargs_550089)
        
        # Assigning a type to the variable 'z' (line 1627)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1627, 8), 'z', ravel_call_result_550090)
        
        # Call to assert_mpmath_equal(...): (line 1629)
        # Processing the call arguments (line 1629)
        # Getting the type of 'clpnm' (line 1629)
        clpnm_550092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1629, 28), 'clpnm', False)
        # Getting the type of 'legenp' (line 1630)
        legenp_550093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1630, 28), 'legenp', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1631)
        list_550094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1631)
        # Adding element type (line 1631)
        
        # Call to FixedArg(...): (line 1631)
        # Processing the call arguments (line 1631)
        
        # Obtaining an instance of the builtin type 'list' (line 1631)
        list_550096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1631)
        # Adding element type (line 1631)
        int_550097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 38), list_550096, int_550097)
        # Adding element type (line 1631)
        int_550098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 38), list_550096, int_550098)
        # Adding element type (line 1631)
        int_550099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 38), list_550096, int_550099)
        # Adding element type (line 1631)
        int_550100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 38), list_550096, int_550100)
        # Adding element type (line 1631)
        int_550101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 38), list_550096, int_550101)
        # Adding element type (line 1631)
        int_550102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 38), list_550096, int_550102)
        
        # Processing the call keyword arguments (line 1631)
        kwargs_550103 = {}
        # Getting the type of 'FixedArg' (line 1631)
        FixedArg_550095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1631, 29), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 1631)
        FixedArg_call_result_550104 = invoke(stypy.reporting.localization.Localization(__file__, 1631, 29), FixedArg_550095, *[list_550096], **kwargs_550103)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 28), list_550094, FixedArg_call_result_550104)
        # Adding element type (line 1631)
        
        # Call to FixedArg(...): (line 1631)
        # Processing the call arguments (line 1631)
        
        # Obtaining an instance of the builtin type 'list' (line 1631)
        list_550106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 71), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1631)
        # Adding element type (line 1631)
        int_550107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 72), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 71), list_550106, int_550107)
        # Adding element type (line 1631)
        int_550108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 76), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 71), list_550106, int_550108)
        # Adding element type (line 1631)
        int_550109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 80), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 71), list_550106, int_550109)
        # Adding element type (line 1631)
        int_550110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 83), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 71), list_550106, int_550110)
        # Adding element type (line 1631)
        int_550111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 86), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 71), list_550106, int_550111)
        # Adding element type (line 1631)
        int_550112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, 89), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 71), list_550106, int_550112)
        
        # Processing the call keyword arguments (line 1631)
        kwargs_550113 = {}
        # Getting the type of 'FixedArg' (line 1631)
        FixedArg_550105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1631, 62), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 1631)
        FixedArg_call_result_550114 = invoke(stypy.reporting.localization.Localization(__file__, 1631, 62), FixedArg_550105, *[list_550106], **kwargs_550113)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 28), list_550094, FixedArg_call_result_550114)
        # Adding element type (line 1631)
        
        # Call to FixedArg(...): (line 1631)
        # Processing the call arguments (line 1631)
        # Getting the type of 'z' (line 1631)
        z_550116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1631, 104), 'z', False)
        # Processing the call keyword arguments (line 1631)
        kwargs_550117 = {}
        # Getting the type of 'FixedArg' (line 1631)
        FixedArg_550115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1631, 95), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 1631)
        FixedArg_call_result_550118 = invoke(stypy.reporting.localization.Localization(__file__, 1631, 95), FixedArg_550115, *[z_550116], **kwargs_550117)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1631, 28), list_550094, FixedArg_call_result_550118)
        
        # Processing the call keyword arguments (line 1629)
        float_550119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1632, 33), 'float')
        keyword_550120 = float_550119
        int_550121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1633, 30), 'int')
        keyword_550122 = int_550121
        kwargs_550123 = {'rtol': keyword_550120, 'n': keyword_550122}
        # Getting the type of 'assert_mpmath_equal' (line 1629)
        assert_mpmath_equal_550091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1629, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1629)
        assert_mpmath_equal_call_result_550124 = invoke(stypy.reporting.localization.Localization(__file__, 1629, 8), assert_mpmath_equal_550091, *[clpnm_550092, legenp_550093, list_550094], **kwargs_550123)
        
        
        # ################# End of 'test_legenp_complex_3(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_legenp_complex_3' in the type store
        # Getting the type of 'stypy_return_type' (line 1611)
        stypy_return_type_550125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550125)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_legenp_complex_3'
        return stypy_return_type_550125


    @norecursion
    def test_legenq(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_legenq'
        module_type_store = module_type_store.open_function_context('test_legenq', 1635, 4, False)
        # Assigning a type to the variable 'self' (line 1636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1636, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_legenq')
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_legenq.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_legenq', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_legenq', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_legenq(...)' code ##################


        @norecursion
        def lqnm(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'lqnm'
            module_type_store = module_type_store.open_function_context('lqnm', 1637, 8, False)
            
            # Passed parameters checking function
            lqnm.stypy_localization = localization
            lqnm.stypy_type_of_self = None
            lqnm.stypy_type_store = module_type_store
            lqnm.stypy_function_name = 'lqnm'
            lqnm.stypy_param_names_list = ['n', 'm', 'z']
            lqnm.stypy_varargs_param_name = None
            lqnm.stypy_kwargs_param_name = None
            lqnm.stypy_call_defaults = defaults
            lqnm.stypy_call_varargs = varargs
            lqnm.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'lqnm', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'lqnm', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'lqnm(...)' code ##################

            
            # Obtaining the type of the subscript
            
            # Obtaining an instance of the builtin type 'tuple' (line 1638)
            tuple_550126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1638, 39), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1638)
            # Adding element type (line 1638)
            int_550127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1638, 39), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1638, 39), tuple_550126, int_550127)
            # Adding element type (line 1638)
            int_550128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1638, 42), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1638, 39), tuple_550126, int_550128)
            
            
            # Obtaining the type of the subscript
            int_550129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1638, 36), 'int')
            
            # Call to lqmn(...): (line 1638)
            # Processing the call arguments (line 1638)
            # Getting the type of 'm' (line 1638)
            m_550132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 27), 'm', False)
            # Getting the type of 'n' (line 1638)
            n_550133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 30), 'n', False)
            # Getting the type of 'z' (line 1638)
            z_550134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 33), 'z', False)
            # Processing the call keyword arguments (line 1638)
            kwargs_550135 = {}
            # Getting the type of 'sc' (line 1638)
            sc_550130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 19), 'sc', False)
            # Obtaining the member 'lqmn' of a type (line 1638)
            lqmn_550131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1638, 19), sc_550130, 'lqmn')
            # Calling lqmn(args, kwargs) (line 1638)
            lqmn_call_result_550136 = invoke(stypy.reporting.localization.Localization(__file__, 1638, 19), lqmn_550131, *[m_550132, n_550133, z_550134], **kwargs_550135)
            
            # Obtaining the member '__getitem__' of a type (line 1638)
            getitem___550137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1638, 19), lqmn_call_result_550136, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1638)
            subscript_call_result_550138 = invoke(stypy.reporting.localization.Localization(__file__, 1638, 19), getitem___550137, int_550129)
            
            # Obtaining the member '__getitem__' of a type (line 1638)
            getitem___550139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1638, 19), subscript_call_result_550138, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1638)
            subscript_call_result_550140 = invoke(stypy.reporting.localization.Localization(__file__, 1638, 19), getitem___550139, tuple_550126)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1638)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1638, 12), 'stypy_return_type', subscript_call_result_550140)
            
            # ################# End of 'lqnm(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'lqnm' in the type store
            # Getting the type of 'stypy_return_type' (line 1637)
            stypy_return_type_550141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1637, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550141)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'lqnm'
            return stypy_return_type_550141

        # Assigning a type to the variable 'lqnm' (line 1637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1637, 8), 'lqnm', lqnm)

        @norecursion
        def legenq(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'legenq'
            module_type_store = module_type_store.open_function_context('legenq', 1640, 8, False)
            
            # Passed parameters checking function
            legenq.stypy_localization = localization
            legenq.stypy_type_of_self = None
            legenq.stypy_type_store = module_type_store
            legenq.stypy_function_name = 'legenq'
            legenq.stypy_param_names_list = ['n', 'm', 'z']
            legenq.stypy_varargs_param_name = None
            legenq.stypy_kwargs_param_name = None
            legenq.stypy_call_defaults = defaults
            legenq.stypy_call_varargs = varargs
            legenq.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'legenq', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'legenq', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'legenq(...)' code ##################

            
            
            
            # Call to abs(...): (line 1641)
            # Processing the call arguments (line 1641)
            # Getting the type of 'z' (line 1641)
            z_550143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1641, 19), 'z', False)
            # Processing the call keyword arguments (line 1641)
            kwargs_550144 = {}
            # Getting the type of 'abs' (line 1641)
            abs_550142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1641, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1641)
            abs_call_result_550145 = invoke(stypy.reporting.localization.Localization(__file__, 1641, 15), abs_550142, *[z_550143], **kwargs_550144)
            
            float_550146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1641, 24), 'float')
            # Applying the binary operator '<' (line 1641)
            result_lt_550147 = python_operator(stypy.reporting.localization.Localization(__file__, 1641, 15), '<', abs_call_result_550145, float_550146)
            
            # Testing the type of an if condition (line 1641)
            if_condition_550148 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1641, 12), result_lt_550147)
            # Assigning a type to the variable 'if_condition_550148' (line 1641)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1641, 12), 'if_condition_550148', if_condition_550148)
            # SSA begins for if statement (line 1641)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1643)
            np_550149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1643, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1643)
            nan_550150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1643, 23), np_550149, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1643)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1643, 16), 'stypy_return_type', nan_550150)
            # SSA join for if statement (line 1641)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to (...): (line 1644)
            # Processing the call arguments (line 1644)
            # Getting the type of 'n' (line 1644)
            n_550156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 51), 'n', False)
            # Getting the type of 'm' (line 1644)
            m_550157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 54), 'm', False)
            # Getting the type of 'z' (line 1644)
            z_550158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 57), 'z', False)
            # Processing the call keyword arguments (line 1644)
            int_550159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1644, 65), 'int')
            keyword_550160 = int_550159
            kwargs_550161 = {'type': keyword_550160}
            
            # Call to exception_to_nan(...): (line 1644)
            # Processing the call arguments (line 1644)
            # Getting the type of 'mpmath' (line 1644)
            mpmath_550152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 36), 'mpmath', False)
            # Obtaining the member 'legenq' of a type (line 1644)
            legenq_550153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1644, 36), mpmath_550152, 'legenq')
            # Processing the call keyword arguments (line 1644)
            kwargs_550154 = {}
            # Getting the type of 'exception_to_nan' (line 1644)
            exception_to_nan_550151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1644, 19), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1644)
            exception_to_nan_call_result_550155 = invoke(stypy.reporting.localization.Localization(__file__, 1644, 19), exception_to_nan_550151, *[legenq_550153], **kwargs_550154)
            
            # Calling (args, kwargs) (line 1644)
            _call_result_550162 = invoke(stypy.reporting.localization.Localization(__file__, 1644, 19), exception_to_nan_call_result_550155, *[n_550156, m_550157, z_550158], **kwargs_550161)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1644)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1644, 12), 'stypy_return_type', _call_result_550162)
            
            # ################# End of 'legenq(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'legenq' in the type store
            # Getting the type of 'stypy_return_type' (line 1640)
            stypy_return_type_550163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1640, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550163)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'legenq'
            return stypy_return_type_550163

        # Assigning a type to the variable 'legenq' (line 1640)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1640, 8), 'legenq', legenq)
        
        # Call to assert_mpmath_equal(...): (line 1646)
        # Processing the call arguments (line 1646)
        # Getting the type of 'lqnm' (line 1646)
        lqnm_550165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1646, 28), 'lqnm', False)
        # Getting the type of 'legenq' (line 1647)
        legenq_550166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1647, 28), 'legenq', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1648)
        list_550167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1648)
        # Adding element type (line 1648)
        
        # Call to IntArg(...): (line 1648)
        # Processing the call arguments (line 1648)
        int_550169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 36), 'int')
        int_550170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 39), 'int')
        # Processing the call keyword arguments (line 1648)
        kwargs_550171 = {}
        # Getting the type of 'IntArg' (line 1648)
        IntArg_550168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1648)
        IntArg_call_result_550172 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 29), IntArg_550168, *[int_550169, int_550170], **kwargs_550171)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1648, 28), list_550167, IntArg_call_result_550172)
        # Adding element type (line 1648)
        
        # Call to IntArg(...): (line 1648)
        # Processing the call arguments (line 1648)
        int_550174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 52), 'int')
        int_550175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 55), 'int')
        # Processing the call keyword arguments (line 1648)
        kwargs_550176 = {}
        # Getting the type of 'IntArg' (line 1648)
        IntArg_550173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 45), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1648)
        IntArg_call_result_550177 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 45), IntArg_550173, *[int_550174, int_550175], **kwargs_550176)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1648, 28), list_550167, IntArg_call_result_550177)
        # Adding element type (line 1648)
        
        # Call to Arg(...): (line 1648)
        # Processing the call keyword arguments (line 1648)
        kwargs_550179 = {}
        # Getting the type of 'Arg' (line 1648)
        Arg_550178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 61), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1648)
        Arg_call_result_550180 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 61), Arg_550178, *[], **kwargs_550179)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1648, 28), list_550167, Arg_call_result_550180)
        
        # Processing the call keyword arguments (line 1646)
        kwargs_550181 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1646)
        assert_mpmath_equal_550164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1646, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1646)
        assert_mpmath_equal_call_result_550182 = invoke(stypy.reporting.localization.Localization(__file__, 1646, 8), assert_mpmath_equal_550164, *[lqnm_550165, legenq_550166, list_550167], **kwargs_550181)
        
        
        # ################# End of 'test_legenq(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_legenq' in the type store
        # Getting the type of 'stypy_return_type' (line 1635)
        stypy_return_type_550183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550183)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_legenq'
        return stypy_return_type_550183


    @norecursion
    def test_legenq_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_legenq_complex'
        module_type_store = module_type_store.open_function_context('test_legenq_complex', 1650, 4, False)
        # Assigning a type to the variable 'self' (line 1651)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1651, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_legenq_complex')
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_legenq_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_legenq_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_legenq_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_legenq_complex(...)' code ##################


        @norecursion
        def lqnm(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'lqnm'
            module_type_store = module_type_store.open_function_context('lqnm', 1652, 8, False)
            
            # Passed parameters checking function
            lqnm.stypy_localization = localization
            lqnm.stypy_type_of_self = None
            lqnm.stypy_type_store = module_type_store
            lqnm.stypy_function_name = 'lqnm'
            lqnm.stypy_param_names_list = ['n', 'm', 'z']
            lqnm.stypy_varargs_param_name = None
            lqnm.stypy_kwargs_param_name = None
            lqnm.stypy_call_defaults = defaults
            lqnm.stypy_call_varargs = varargs
            lqnm.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'lqnm', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'lqnm', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'lqnm(...)' code ##################

            
            # Obtaining the type of the subscript
            
            # Obtaining an instance of the builtin type 'tuple' (line 1653)
            tuple_550184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1653, 59), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1653)
            # Adding element type (line 1653)
            int_550185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1653, 59), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1653, 59), tuple_550184, int_550185)
            # Adding element type (line 1653)
            int_550186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1653, 62), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1653, 59), tuple_550184, int_550186)
            
            
            # Obtaining the type of the subscript
            int_550187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1653, 56), 'int')
            
            # Call to lqmn(...): (line 1653)
            # Processing the call arguments (line 1653)
            
            # Call to int(...): (line 1653)
            # Processing the call arguments (line 1653)
            # Getting the type of 'm' (line 1653)
            m_550191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 31), 'm', False)
            # Obtaining the member 'real' of a type (line 1653)
            real_550192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1653, 31), m_550191, 'real')
            # Processing the call keyword arguments (line 1653)
            kwargs_550193 = {}
            # Getting the type of 'int' (line 1653)
            int_550190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 27), 'int', False)
            # Calling int(args, kwargs) (line 1653)
            int_call_result_550194 = invoke(stypy.reporting.localization.Localization(__file__, 1653, 27), int_550190, *[real_550192], **kwargs_550193)
            
            
            # Call to int(...): (line 1653)
            # Processing the call arguments (line 1653)
            # Getting the type of 'n' (line 1653)
            n_550196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 44), 'n', False)
            # Obtaining the member 'real' of a type (line 1653)
            real_550197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1653, 44), n_550196, 'real')
            # Processing the call keyword arguments (line 1653)
            kwargs_550198 = {}
            # Getting the type of 'int' (line 1653)
            int_550195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 40), 'int', False)
            # Calling int(args, kwargs) (line 1653)
            int_call_result_550199 = invoke(stypy.reporting.localization.Localization(__file__, 1653, 40), int_550195, *[real_550197], **kwargs_550198)
            
            # Getting the type of 'z' (line 1653)
            z_550200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 53), 'z', False)
            # Processing the call keyword arguments (line 1653)
            kwargs_550201 = {}
            # Getting the type of 'sc' (line 1653)
            sc_550188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 19), 'sc', False)
            # Obtaining the member 'lqmn' of a type (line 1653)
            lqmn_550189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1653, 19), sc_550188, 'lqmn')
            # Calling lqmn(args, kwargs) (line 1653)
            lqmn_call_result_550202 = invoke(stypy.reporting.localization.Localization(__file__, 1653, 19), lqmn_550189, *[int_call_result_550194, int_call_result_550199, z_550200], **kwargs_550201)
            
            # Obtaining the member '__getitem__' of a type (line 1653)
            getitem___550203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1653, 19), lqmn_call_result_550202, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1653)
            subscript_call_result_550204 = invoke(stypy.reporting.localization.Localization(__file__, 1653, 19), getitem___550203, int_550187)
            
            # Obtaining the member '__getitem__' of a type (line 1653)
            getitem___550205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1653, 19), subscript_call_result_550204, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1653)
            subscript_call_result_550206 = invoke(stypy.reporting.localization.Localization(__file__, 1653, 19), getitem___550205, tuple_550184)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1653)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1653, 12), 'stypy_return_type', subscript_call_result_550206)
            
            # ################# End of 'lqnm(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'lqnm' in the type store
            # Getting the type of 'stypy_return_type' (line 1652)
            stypy_return_type_550207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550207)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'lqnm'
            return stypy_return_type_550207

        # Assigning a type to the variable 'lqnm' (line 1652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1652, 8), 'lqnm', lqnm)

        @norecursion
        def legenq(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'legenq'
            module_type_store = module_type_store.open_function_context('legenq', 1655, 8, False)
            
            # Passed parameters checking function
            legenq.stypy_localization = localization
            legenq.stypy_type_of_self = None
            legenq.stypy_type_store = module_type_store
            legenq.stypy_function_name = 'legenq'
            legenq.stypy_param_names_list = ['n', 'm', 'z']
            legenq.stypy_varargs_param_name = None
            legenq.stypy_kwargs_param_name = None
            legenq.stypy_call_defaults = defaults
            legenq.stypy_call_varargs = varargs
            legenq.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'legenq', ['n', 'm', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'legenq', localization, ['n', 'm', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'legenq(...)' code ##################

            
            
            
            # Call to abs(...): (line 1656)
            # Processing the call arguments (line 1656)
            # Getting the type of 'z' (line 1656)
            z_550209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 19), 'z', False)
            # Processing the call keyword arguments (line 1656)
            kwargs_550210 = {}
            # Getting the type of 'abs' (line 1656)
            abs_550208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 15), 'abs', False)
            # Calling abs(args, kwargs) (line 1656)
            abs_call_result_550211 = invoke(stypy.reporting.localization.Localization(__file__, 1656, 15), abs_550208, *[z_550209], **kwargs_550210)
            
            float_550212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1656, 24), 'float')
            # Applying the binary operator '<' (line 1656)
            result_lt_550213 = python_operator(stypy.reporting.localization.Localization(__file__, 1656, 15), '<', abs_call_result_550211, float_550212)
            
            # Testing the type of an if condition (line 1656)
            if_condition_550214 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1656, 12), result_lt_550213)
            # Assigning a type to the variable 'if_condition_550214' (line 1656)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 12), 'if_condition_550214', if_condition_550214)
            # SSA begins for if statement (line 1656)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1658)
            np_550215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1658)
            nan_550216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1658, 23), np_550215, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1658)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1658, 16), 'stypy_return_type', nan_550216)
            # SSA join for if statement (line 1656)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to (...): (line 1659)
            # Processing the call arguments (line 1659)
            
            # Call to int(...): (line 1659)
            # Processing the call arguments (line 1659)
            # Getting the type of 'n' (line 1659)
            n_550223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 55), 'n', False)
            # Obtaining the member 'real' of a type (line 1659)
            real_550224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1659, 55), n_550223, 'real')
            # Processing the call keyword arguments (line 1659)
            kwargs_550225 = {}
            # Getting the type of 'int' (line 1659)
            int_550222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 51), 'int', False)
            # Calling int(args, kwargs) (line 1659)
            int_call_result_550226 = invoke(stypy.reporting.localization.Localization(__file__, 1659, 51), int_550222, *[real_550224], **kwargs_550225)
            
            
            # Call to int(...): (line 1659)
            # Processing the call arguments (line 1659)
            # Getting the type of 'm' (line 1659)
            m_550228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 68), 'm', False)
            # Obtaining the member 'real' of a type (line 1659)
            real_550229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1659, 68), m_550228, 'real')
            # Processing the call keyword arguments (line 1659)
            kwargs_550230 = {}
            # Getting the type of 'int' (line 1659)
            int_550227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 64), 'int', False)
            # Calling int(args, kwargs) (line 1659)
            int_call_result_550231 = invoke(stypy.reporting.localization.Localization(__file__, 1659, 64), int_550227, *[real_550229], **kwargs_550230)
            
            # Getting the type of 'z' (line 1659)
            z_550232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 77), 'z', False)
            # Processing the call keyword arguments (line 1659)
            int_550233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1659, 85), 'int')
            keyword_550234 = int_550233
            kwargs_550235 = {'type': keyword_550234}
            
            # Call to exception_to_nan(...): (line 1659)
            # Processing the call arguments (line 1659)
            # Getting the type of 'mpmath' (line 1659)
            mpmath_550218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 36), 'mpmath', False)
            # Obtaining the member 'legenq' of a type (line 1659)
            legenq_550219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1659, 36), mpmath_550218, 'legenq')
            # Processing the call keyword arguments (line 1659)
            kwargs_550220 = {}
            # Getting the type of 'exception_to_nan' (line 1659)
            exception_to_nan_550217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 19), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1659)
            exception_to_nan_call_result_550221 = invoke(stypy.reporting.localization.Localization(__file__, 1659, 19), exception_to_nan_550217, *[legenq_550219], **kwargs_550220)
            
            # Calling (args, kwargs) (line 1659)
            _call_result_550236 = invoke(stypy.reporting.localization.Localization(__file__, 1659, 19), exception_to_nan_call_result_550221, *[int_call_result_550226, int_call_result_550231, z_550232], **kwargs_550235)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1659)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1659, 12), 'stypy_return_type', _call_result_550236)
            
            # ################# End of 'legenq(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'legenq' in the type store
            # Getting the type of 'stypy_return_type' (line 1655)
            stypy_return_type_550237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550237)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'legenq'
            return stypy_return_type_550237

        # Assigning a type to the variable 'legenq' (line 1655)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1655, 8), 'legenq', legenq)
        
        # Call to assert_mpmath_equal(...): (line 1661)
        # Processing the call arguments (line 1661)
        # Getting the type of 'lqnm' (line 1661)
        lqnm_550239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 28), 'lqnm', False)
        # Getting the type of 'legenq' (line 1662)
        legenq_550240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 28), 'legenq', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1663)
        list_550241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1663)
        # Adding element type (line 1663)
        
        # Call to IntArg(...): (line 1663)
        # Processing the call arguments (line 1663)
        int_550243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 36), 'int')
        int_550244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 39), 'int')
        # Processing the call keyword arguments (line 1663)
        kwargs_550245 = {}
        # Getting the type of 'IntArg' (line 1663)
        IntArg_550242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1663)
        IntArg_call_result_550246 = invoke(stypy.reporting.localization.Localization(__file__, 1663, 29), IntArg_550242, *[int_550243, int_550244], **kwargs_550245)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1663, 28), list_550241, IntArg_call_result_550246)
        # Adding element type (line 1663)
        
        # Call to IntArg(...): (line 1663)
        # Processing the call arguments (line 1663)
        int_550248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 52), 'int')
        int_550249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 55), 'int')
        # Processing the call keyword arguments (line 1663)
        kwargs_550250 = {}
        # Getting the type of 'IntArg' (line 1663)
        IntArg_550247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 45), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1663)
        IntArg_call_result_550251 = invoke(stypy.reporting.localization.Localization(__file__, 1663, 45), IntArg_550247, *[int_550248, int_550249], **kwargs_550250)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1663, 28), list_550241, IntArg_call_result_550251)
        # Adding element type (line 1663)
        
        # Call to ComplexArg(...): (line 1663)
        # Processing the call keyword arguments (line 1663)
        kwargs_550253 = {}
        # Getting the type of 'ComplexArg' (line 1663)
        ComplexArg_550252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 61), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1663)
        ComplexArg_call_result_550254 = invoke(stypy.reporting.localization.Localization(__file__, 1663, 61), ComplexArg_550252, *[], **kwargs_550253)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1663, 28), list_550241, ComplexArg_call_result_550254)
        
        # Processing the call keyword arguments (line 1661)
        int_550255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1664, 30), 'int')
        keyword_550256 = int_550255
        kwargs_550257 = {'n': keyword_550256}
        # Getting the type of 'assert_mpmath_equal' (line 1661)
        assert_mpmath_equal_550238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1661)
        assert_mpmath_equal_call_result_550258 = invoke(stypy.reporting.localization.Localization(__file__, 1661, 8), assert_mpmath_equal_550238, *[lqnm_550239, legenq_550240, list_550241], **kwargs_550257)
        
        
        # ################# End of 'test_legenq_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_legenq_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1650)
        stypy_return_type_550259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550259)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_legenq_complex'
        return stypy_return_type_550259


    @norecursion
    def test_lgam1p(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_lgam1p'
        module_type_store = module_type_store.open_function_context('test_lgam1p', 1666, 4, False)
        # Assigning a type to the variable 'self' (line 1667)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1667, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_lgam1p')
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_lgam1p.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_lgam1p', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_lgam1p', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_lgam1p(...)' code ##################


        @norecursion
        def param_filter(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'param_filter'
            module_type_store = module_type_store.open_function_context('param_filter', 1667, 8, False)
            
            # Passed parameters checking function
            param_filter.stypy_localization = localization
            param_filter.stypy_type_of_self = None
            param_filter.stypy_type_store = module_type_store
            param_filter.stypy_function_name = 'param_filter'
            param_filter.stypy_param_names_list = ['x']
            param_filter.stypy_varargs_param_name = None
            param_filter.stypy_kwargs_param_name = None
            param_filter.stypy_call_defaults = defaults
            param_filter.stypy_call_varargs = varargs
            param_filter.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'param_filter', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'param_filter', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'param_filter(...)' code ##################

            
            # Call to where(...): (line 1669)
            # Processing the call arguments (line 1669)
            
            
            # Call to floor(...): (line 1669)
            # Processing the call arguments (line 1669)
            # Getting the type of 'x' (line 1669)
            x_550264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 38), 'x', False)
            # Processing the call keyword arguments (line 1669)
            kwargs_550265 = {}
            # Getting the type of 'np' (line 1669)
            np_550262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 29), 'np', False)
            # Obtaining the member 'floor' of a type (line 1669)
            floor_550263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1669, 29), np_550262, 'floor')
            # Calling floor(args, kwargs) (line 1669)
            floor_call_result_550266 = invoke(stypy.reporting.localization.Localization(__file__, 1669, 29), floor_550263, *[x_550264], **kwargs_550265)
            
            # Getting the type of 'x' (line 1669)
            x_550267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 44), 'x', False)
            # Applying the binary operator '==' (line 1669)
            result_eq_550268 = python_operator(stypy.reporting.localization.Localization(__file__, 1669, 29), '==', floor_call_result_550266, x_550267)
            
            
            # Getting the type of 'x' (line 1669)
            x_550269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 50), 'x', False)
            int_550270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1669, 55), 'int')
            # Applying the binary operator '<=' (line 1669)
            result_le_550271 = python_operator(stypy.reporting.localization.Localization(__file__, 1669, 50), '<=', x_550269, int_550270)
            
            # Applying the binary operator '&' (line 1669)
            result_and__550272 = python_operator(stypy.reporting.localization.Localization(__file__, 1669, 28), '&', result_eq_550268, result_le_550271)
            
            # Getting the type of 'False' (line 1669)
            False_550273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 59), 'False', False)
            # Getting the type of 'True' (line 1669)
            True_550274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 66), 'True', False)
            # Processing the call keyword arguments (line 1669)
            kwargs_550275 = {}
            # Getting the type of 'np' (line 1669)
            np_550260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 19), 'np', False)
            # Obtaining the member 'where' of a type (line 1669)
            where_550261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1669, 19), np_550260, 'where')
            # Calling where(args, kwargs) (line 1669)
            where_call_result_550276 = invoke(stypy.reporting.localization.Localization(__file__, 1669, 19), where_550261, *[result_and__550272, False_550273, True_550274], **kwargs_550275)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1669)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1669, 12), 'stypy_return_type', where_call_result_550276)
            
            # ################# End of 'param_filter(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'param_filter' in the type store
            # Getting the type of 'stypy_return_type' (line 1667)
            stypy_return_type_550277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1667, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550277)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'param_filter'
            return stypy_return_type_550277

        # Assigning a type to the variable 'param_filter' (line 1667)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1667, 8), 'param_filter', param_filter)

        @norecursion
        def mp_lgam1p(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_lgam1p'
            module_type_store = module_type_store.open_function_context('mp_lgam1p', 1671, 8, False)
            
            # Passed parameters checking function
            mp_lgam1p.stypy_localization = localization
            mp_lgam1p.stypy_type_of_self = None
            mp_lgam1p.stypy_type_store = module_type_store
            mp_lgam1p.stypy_function_name = 'mp_lgam1p'
            mp_lgam1p.stypy_param_names_list = ['z']
            mp_lgam1p.stypy_varargs_param_name = None
            mp_lgam1p.stypy_kwargs_param_name = None
            mp_lgam1p.stypy_call_defaults = defaults
            mp_lgam1p.stypy_call_varargs = varargs
            mp_lgam1p.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_lgam1p', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_lgam1p', localization, ['z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_lgam1p(...)' code ##################

            
            # Call to loggamma(...): (line 1673)
            # Processing the call arguments (line 1673)
            int_550280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1673, 35), 'int')
            # Getting the type of 'z' (line 1673)
            z_550281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1673, 39), 'z', False)
            # Applying the binary operator '+' (line 1673)
            result_add_550282 = python_operator(stypy.reporting.localization.Localization(__file__, 1673, 35), '+', int_550280, z_550281)
            
            # Processing the call keyword arguments (line 1673)
            kwargs_550283 = {}
            # Getting the type of 'mpmath' (line 1673)
            mpmath_550278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1673, 19), 'mpmath', False)
            # Obtaining the member 'loggamma' of a type (line 1673)
            loggamma_550279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1673, 19), mpmath_550278, 'loggamma')
            # Calling loggamma(args, kwargs) (line 1673)
            loggamma_call_result_550284 = invoke(stypy.reporting.localization.Localization(__file__, 1673, 19), loggamma_550279, *[result_add_550282], **kwargs_550283)
            
            # Obtaining the member 'real' of a type (line 1673)
            real_550285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1673, 19), loggamma_call_result_550284, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 1673)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1673, 12), 'stypy_return_type', real_550285)
            
            # ################# End of 'mp_lgam1p(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_lgam1p' in the type store
            # Getting the type of 'stypy_return_type' (line 1671)
            stypy_return_type_550286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1671, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550286)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_lgam1p'
            return stypy_return_type_550286

        # Assigning a type to the variable 'mp_lgam1p' (line 1671)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1671, 8), 'mp_lgam1p', mp_lgam1p)
        
        # Call to assert_mpmath_equal(...): (line 1675)
        # Processing the call arguments (line 1675)
        # Getting the type of '_lgam1p' (line 1675)
        _lgam1p_550288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1675, 28), '_lgam1p', False)
        # Getting the type of 'mp_lgam1p' (line 1676)
        mp_lgam1p_550289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1676, 28), 'mp_lgam1p', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1677)
        list_550290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1677, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1677)
        # Adding element type (line 1677)
        
        # Call to Arg(...): (line 1677)
        # Processing the call keyword arguments (line 1677)
        kwargs_550292 = {}
        # Getting the type of 'Arg' (line 1677)
        Arg_550291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1677)
        Arg_call_result_550293 = invoke(stypy.reporting.localization.Localization(__file__, 1677, 29), Arg_550291, *[], **kwargs_550292)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1677, 28), list_550290, Arg_call_result_550293)
        
        # Processing the call keyword arguments (line 1675)
        float_550294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1677, 42), 'float')
        keyword_550295 = float_550294
        int_550296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1677, 53), 'int')
        keyword_550297 = int_550296
        # Getting the type of 'param_filter' (line 1678)
        param_filter_550298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1678, 41), 'param_filter', False)
        keyword_550299 = param_filter_550298
        kwargs_550300 = {'param_filter': keyword_550299, 'rtol': keyword_550295, 'dps': keyword_550297}
        # Getting the type of 'assert_mpmath_equal' (line 1675)
        assert_mpmath_equal_550287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1675, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1675)
        assert_mpmath_equal_call_result_550301 = invoke(stypy.reporting.localization.Localization(__file__, 1675, 8), assert_mpmath_equal_550287, *[_lgam1p_550288, mp_lgam1p_550289, list_550290], **kwargs_550300)
        
        
        # ################# End of 'test_lgam1p(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_lgam1p' in the type store
        # Getting the type of 'stypy_return_type' (line 1666)
        stypy_return_type_550302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1666, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550302)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_lgam1p'
        return stypy_return_type_550302


    @norecursion
    def test_loggamma(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_loggamma'
        module_type_store = module_type_store.open_function_context('test_loggamma', 1680, 4, False)
        # Assigning a type to the variable 'self' (line 1681)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1681, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_loggamma')
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_loggamma.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_loggamma', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_loggamma', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_loggamma(...)' code ##################


        @norecursion
        def mpmath_loggamma(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mpmath_loggamma'
            module_type_store = module_type_store.open_function_context('mpmath_loggamma', 1681, 8, False)
            
            # Passed parameters checking function
            mpmath_loggamma.stypy_localization = localization
            mpmath_loggamma.stypy_type_of_self = None
            mpmath_loggamma.stypy_type_store = module_type_store
            mpmath_loggamma.stypy_function_name = 'mpmath_loggamma'
            mpmath_loggamma.stypy_param_names_list = ['z']
            mpmath_loggamma.stypy_varargs_param_name = None
            mpmath_loggamma.stypy_kwargs_param_name = None
            mpmath_loggamma.stypy_call_defaults = defaults
            mpmath_loggamma.stypy_call_varargs = varargs
            mpmath_loggamma.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mpmath_loggamma', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mpmath_loggamma', localization, ['z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mpmath_loggamma(...)' code ##################

            
            
            # SSA begins for try-except statement (line 1682)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
            
            # Assigning a Call to a Name (line 1683):
            
            # Assigning a Call to a Name (line 1683):
            
            # Call to loggamma(...): (line 1683)
            # Processing the call arguments (line 1683)
            # Getting the type of 'z' (line 1683)
            z_550305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 38), 'z', False)
            # Processing the call keyword arguments (line 1683)
            kwargs_550306 = {}
            # Getting the type of 'mpmath' (line 1683)
            mpmath_550303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 22), 'mpmath', False)
            # Obtaining the member 'loggamma' of a type (line 1683)
            loggamma_550304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1683, 22), mpmath_550303, 'loggamma')
            # Calling loggamma(args, kwargs) (line 1683)
            loggamma_call_result_550307 = invoke(stypy.reporting.localization.Localization(__file__, 1683, 22), loggamma_550304, *[z_550305], **kwargs_550306)
            
            # Assigning a type to the variable 'res' (line 1683)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1683, 16), 'res', loggamma_call_result_550307)
            # SSA branch for the except part of a try statement (line 1682)
            # SSA branch for the except 'ValueError' branch of a try statement (line 1682)
            module_type_store.open_ssa_branch('except')
            
            # Assigning a Call to a Name (line 1685):
            
            # Assigning a Call to a Name (line 1685):
            
            # Call to complex(...): (line 1685)
            # Processing the call arguments (line 1685)
            # Getting the type of 'np' (line 1685)
            np_550309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 30), 'np', False)
            # Obtaining the member 'nan' of a type (line 1685)
            nan_550310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1685, 30), np_550309, 'nan')
            # Getting the type of 'np' (line 1685)
            np_550311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 38), 'np', False)
            # Obtaining the member 'nan' of a type (line 1685)
            nan_550312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1685, 38), np_550311, 'nan')
            # Processing the call keyword arguments (line 1685)
            kwargs_550313 = {}
            # Getting the type of 'complex' (line 1685)
            complex_550308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 22), 'complex', False)
            # Calling complex(args, kwargs) (line 1685)
            complex_call_result_550314 = invoke(stypy.reporting.localization.Localization(__file__, 1685, 22), complex_550308, *[nan_550310, nan_550312], **kwargs_550313)
            
            # Assigning a type to the variable 'res' (line 1685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1685, 16), 'res', complex_call_result_550314)
            # SSA join for try-except statement (line 1682)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'res' (line 1686)
            res_550315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 19), 'res')
            # Assigning a type to the variable 'stypy_return_type' (line 1686)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1686, 12), 'stypy_return_type', res_550315)
            
            # ################# End of 'mpmath_loggamma(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mpmath_loggamma' in the type store
            # Getting the type of 'stypy_return_type' (line 1681)
            stypy_return_type_550316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550316)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mpmath_loggamma'
            return stypy_return_type_550316

        # Assigning a type to the variable 'mpmath_loggamma' (line 1681)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1681, 8), 'mpmath_loggamma', mpmath_loggamma)
        
        # Call to assert_mpmath_equal(...): (line 1688)
        # Processing the call arguments (line 1688)
        # Getting the type of 'sc' (line 1688)
        sc_550318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 28), 'sc', False)
        # Obtaining the member 'loggamma' of a type (line 1688)
        loggamma_550319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1688, 28), sc_550318, 'loggamma')
        # Getting the type of 'mpmath_loggamma' (line 1689)
        mpmath_loggamma_550320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 28), 'mpmath_loggamma', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1690)
        list_550321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1690, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1690)
        # Adding element type (line 1690)
        
        # Call to ComplexArg(...): (line 1690)
        # Processing the call keyword arguments (line 1690)
        kwargs_550323 = {}
        # Getting the type of 'ComplexArg' (line 1690)
        ComplexArg_550322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1690)
        ComplexArg_call_result_550324 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 29), ComplexArg_550322, *[], **kwargs_550323)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1690, 28), list_550321, ComplexArg_call_result_550324)
        
        # Processing the call keyword arguments (line 1688)
        # Getting the type of 'False' (line 1690)
        False_550325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 51), 'False', False)
        keyword_550326 = False_550325
        # Getting the type of 'False' (line 1691)
        False_550327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 52), 'False', False)
        keyword_550328 = False_550327
        float_550329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 64), 'float')
        keyword_550330 = float_550329
        kwargs_550331 = {'distinguish_nan_and_inf': keyword_550328, 'rtol': keyword_550330, 'nan_ok': keyword_550326}
        # Getting the type of 'assert_mpmath_equal' (line 1688)
        assert_mpmath_equal_550317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1688)
        assert_mpmath_equal_call_result_550332 = invoke(stypy.reporting.localization.Localization(__file__, 1688, 8), assert_mpmath_equal_550317, *[loggamma_550319, mpmath_loggamma_550320, list_550321], **kwargs_550331)
        
        
        # ################# End of 'test_loggamma(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_loggamma' in the type store
        # Getting the type of 'stypy_return_type' (line 1680)
        stypy_return_type_550333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1680, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550333)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_loggamma'
        return stypy_return_type_550333


    @norecursion
    def test_pcfd(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pcfd'
        module_type_store = module_type_store.open_function_context('test_pcfd', 1693, 4, False)
        # Assigning a type to the variable 'self' (line 1694)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1694, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_pcfd')
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_pcfd.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_pcfd', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pcfd', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pcfd(...)' code ##################


        @norecursion
        def pcfd(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'pcfd'
            module_type_store = module_type_store.open_function_context('pcfd', 1695, 8, False)
            
            # Passed parameters checking function
            pcfd.stypy_localization = localization
            pcfd.stypy_type_of_self = None
            pcfd.stypy_type_store = module_type_store
            pcfd.stypy_function_name = 'pcfd'
            pcfd.stypy_param_names_list = ['v', 'x']
            pcfd.stypy_varargs_param_name = None
            pcfd.stypy_kwargs_param_name = None
            pcfd.stypy_call_defaults = defaults
            pcfd.stypy_call_varargs = varargs
            pcfd.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'pcfd', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'pcfd', localization, ['v', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'pcfd(...)' code ##################

            
            # Obtaining the type of the subscript
            int_550334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1696, 33), 'int')
            
            # Call to pbdv(...): (line 1696)
            # Processing the call arguments (line 1696)
            # Getting the type of 'v' (line 1696)
            v_550337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 27), 'v', False)
            # Getting the type of 'x' (line 1696)
            x_550338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 30), 'x', False)
            # Processing the call keyword arguments (line 1696)
            kwargs_550339 = {}
            # Getting the type of 'sc' (line 1696)
            sc_550335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 19), 'sc', False)
            # Obtaining the member 'pbdv' of a type (line 1696)
            pbdv_550336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1696, 19), sc_550335, 'pbdv')
            # Calling pbdv(args, kwargs) (line 1696)
            pbdv_call_result_550340 = invoke(stypy.reporting.localization.Localization(__file__, 1696, 19), pbdv_550336, *[v_550337, x_550338], **kwargs_550339)
            
            # Obtaining the member '__getitem__' of a type (line 1696)
            getitem___550341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1696, 19), pbdv_call_result_550340, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1696)
            subscript_call_result_550342 = invoke(stypy.reporting.localization.Localization(__file__, 1696, 19), getitem___550341, int_550334)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1696)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1696, 12), 'stypy_return_type', subscript_call_result_550342)
            
            # ################# End of 'pcfd(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'pcfd' in the type store
            # Getting the type of 'stypy_return_type' (line 1695)
            stypy_return_type_550343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550343)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'pcfd'
            return stypy_return_type_550343

        # Assigning a type to the variable 'pcfd' (line 1695)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1695, 8), 'pcfd', pcfd)
        
        # Call to assert_mpmath_equal(...): (line 1697)
        # Processing the call arguments (line 1697)
        # Getting the type of 'pcfd' (line 1697)
        pcfd_550345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 28), 'pcfd', False)
        
        # Call to exception_to_nan(...): (line 1698)
        # Processing the call arguments (line 1698)

        @norecursion
        def _stypy_temp_lambda_438(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_438'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_438', 1698, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_438.stypy_localization = localization
            _stypy_temp_lambda_438.stypy_type_of_self = None
            _stypy_temp_lambda_438.stypy_type_store = module_type_store
            _stypy_temp_lambda_438.stypy_function_name = '_stypy_temp_lambda_438'
            _stypy_temp_lambda_438.stypy_param_names_list = ['v', 'x']
            _stypy_temp_lambda_438.stypy_varargs_param_name = None
            _stypy_temp_lambda_438.stypy_kwargs_param_name = None
            _stypy_temp_lambda_438.stypy_call_defaults = defaults
            _stypy_temp_lambda_438.stypy_call_varargs = varargs
            _stypy_temp_lambda_438.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_438', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_438', ['v', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to pcfd(...): (line 1698)
            # Processing the call arguments (line 1698)
            # Getting the type of 'v' (line 1698)
            v_550349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 70), 'v', False)
            # Getting the type of 'x' (line 1698)
            x_550350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 73), 'x', False)
            # Processing the call keyword arguments (line 1698)
            # Getting the type of 'HYPERKW' (line 1698)
            HYPERKW_550351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 78), 'HYPERKW', False)
            kwargs_550352 = {'HYPERKW_550351': HYPERKW_550351}
            # Getting the type of 'mpmath' (line 1698)
            mpmath_550347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 58), 'mpmath', False)
            # Obtaining the member 'pcfd' of a type (line 1698)
            pcfd_550348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 58), mpmath_550347, 'pcfd')
            # Calling pcfd(args, kwargs) (line 1698)
            pcfd_call_result_550353 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 58), pcfd_550348, *[v_550349, x_550350], **kwargs_550352)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1698)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 45), 'stypy_return_type', pcfd_call_result_550353)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_438' in the type store
            # Getting the type of 'stypy_return_type' (line 1698)
            stypy_return_type_550354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550354)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_438'
            return stypy_return_type_550354

        # Assigning a type to the variable '_stypy_temp_lambda_438' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 45), '_stypy_temp_lambda_438', _stypy_temp_lambda_438)
        # Getting the type of '_stypy_temp_lambda_438' (line 1698)
        _stypy_temp_lambda_438_550355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 45), '_stypy_temp_lambda_438')
        # Processing the call keyword arguments (line 1698)
        kwargs_550356 = {}
        # Getting the type of 'exception_to_nan' (line 1698)
        exception_to_nan_550346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1698)
        exception_to_nan_call_result_550357 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 28), exception_to_nan_550346, *[_stypy_temp_lambda_438_550355], **kwargs_550356)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1699)
        list_550358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1699, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1699)
        # Adding element type (line 1699)
        
        # Call to Arg(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_550360 = {}
        # Getting the type of 'Arg' (line 1699)
        Arg_550359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1699)
        Arg_call_result_550361 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 29), Arg_550359, *[], **kwargs_550360)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1699, 28), list_550358, Arg_call_result_550361)
        # Adding element type (line 1699)
        
        # Call to Arg(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_550363 = {}
        # Getting the type of 'Arg' (line 1699)
        Arg_550362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1699)
        Arg_call_result_550364 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 36), Arg_550362, *[], **kwargs_550363)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1699, 28), list_550358, Arg_call_result_550364)
        
        # Processing the call keyword arguments (line 1697)
        kwargs_550365 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1697)
        assert_mpmath_equal_550344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1697)
        assert_mpmath_equal_call_result_550366 = invoke(stypy.reporting.localization.Localization(__file__, 1697, 8), assert_mpmath_equal_550344, *[pcfd_550345, exception_to_nan_call_result_550357, list_550358], **kwargs_550365)
        
        
        # ################# End of 'test_pcfd(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pcfd' in the type store
        # Getting the type of 'stypy_return_type' (line 1693)
        stypy_return_type_550367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550367)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pcfd'
        return stypy_return_type_550367


    @norecursion
    def test_pcfv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pcfv'
        module_type_store = module_type_store.open_function_context('test_pcfv', 1701, 4, False)
        # Assigning a type to the variable 'self' (line 1702)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1702, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_pcfv')
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_pcfv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_pcfv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pcfv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pcfv(...)' code ##################


        @norecursion
        def pcfv(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'pcfv'
            module_type_store = module_type_store.open_function_context('pcfv', 1703, 8, False)
            
            # Passed parameters checking function
            pcfv.stypy_localization = localization
            pcfv.stypy_type_of_self = None
            pcfv.stypy_type_store = module_type_store
            pcfv.stypy_function_name = 'pcfv'
            pcfv.stypy_param_names_list = ['v', 'x']
            pcfv.stypy_varargs_param_name = None
            pcfv.stypy_kwargs_param_name = None
            pcfv.stypy_call_defaults = defaults
            pcfv.stypy_call_varargs = varargs
            pcfv.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'pcfv', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'pcfv', localization, ['v', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'pcfv(...)' code ##################

            
            # Obtaining the type of the subscript
            int_550368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1704, 33), 'int')
            
            # Call to pbvv(...): (line 1704)
            # Processing the call arguments (line 1704)
            # Getting the type of 'v' (line 1704)
            v_550371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 27), 'v', False)
            # Getting the type of 'x' (line 1704)
            x_550372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 30), 'x', False)
            # Processing the call keyword arguments (line 1704)
            kwargs_550373 = {}
            # Getting the type of 'sc' (line 1704)
            sc_550369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 19), 'sc', False)
            # Obtaining the member 'pbvv' of a type (line 1704)
            pbvv_550370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1704, 19), sc_550369, 'pbvv')
            # Calling pbvv(args, kwargs) (line 1704)
            pbvv_call_result_550374 = invoke(stypy.reporting.localization.Localization(__file__, 1704, 19), pbvv_550370, *[v_550371, x_550372], **kwargs_550373)
            
            # Obtaining the member '__getitem__' of a type (line 1704)
            getitem___550375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1704, 19), pbvv_call_result_550374, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1704)
            subscript_call_result_550376 = invoke(stypy.reporting.localization.Localization(__file__, 1704, 19), getitem___550375, int_550368)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1704)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1704, 12), 'stypy_return_type', subscript_call_result_550376)
            
            # ################# End of 'pcfv(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'pcfv' in the type store
            # Getting the type of 'stypy_return_type' (line 1703)
            stypy_return_type_550377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550377)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'pcfv'
            return stypy_return_type_550377

        # Assigning a type to the variable 'pcfv' (line 1703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1703, 8), 'pcfv', pcfv)
        
        # Call to assert_mpmath_equal(...): (line 1705)
        # Processing the call arguments (line 1705)
        # Getting the type of 'pcfv' (line 1705)
        pcfv_550379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 28), 'pcfv', False)

        @norecursion
        def _stypy_temp_lambda_439(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_439'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_439', 1706, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_439.stypy_localization = localization
            _stypy_temp_lambda_439.stypy_type_of_self = None
            _stypy_temp_lambda_439.stypy_type_store = module_type_store
            _stypy_temp_lambda_439.stypy_function_name = '_stypy_temp_lambda_439'
            _stypy_temp_lambda_439.stypy_param_names_list = ['v', 'x']
            _stypy_temp_lambda_439.stypy_varargs_param_name = None
            _stypy_temp_lambda_439.stypy_kwargs_param_name = None
            _stypy_temp_lambda_439.stypy_call_defaults = defaults
            _stypy_temp_lambda_439.stypy_call_varargs = varargs
            _stypy_temp_lambda_439.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_439', ['v', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_439', ['v', 'x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to (...): (line 1706)
            # Processing the call arguments (line 1706)
            # Getting the type of 'v' (line 1706)
            v_550390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 87), 'v', False)
            # Getting the type of 'x' (line 1706)
            x_550391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 90), 'x', False)
            # Processing the call keyword arguments (line 1706)
            # Getting the type of 'HYPERKW' (line 1706)
            HYPERKW_550392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 95), 'HYPERKW', False)
            kwargs_550393 = {'HYPERKW_550392': HYPERKW_550392}
            
            # Call to (...): (line 1706)
            # Processing the call arguments (line 1706)
            
            # Call to exception_to_nan(...): (line 1706)
            # Processing the call arguments (line 1706)
            # Getting the type of 'mpmath' (line 1706)
            mpmath_550384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 73), 'mpmath', False)
            # Obtaining the member 'pcfv' of a type (line 1706)
            pcfv_550385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1706, 73), mpmath_550384, 'pcfv')
            # Processing the call keyword arguments (line 1706)
            kwargs_550386 = {}
            # Getting the type of 'exception_to_nan' (line 1706)
            exception_to_nan_550383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 56), 'exception_to_nan', False)
            # Calling exception_to_nan(args, kwargs) (line 1706)
            exception_to_nan_call_result_550387 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 56), exception_to_nan_550383, *[pcfv_550385], **kwargs_550386)
            
            # Processing the call keyword arguments (line 1706)
            kwargs_550388 = {}
            
            # Call to time_limited(...): (line 1706)
            # Processing the call keyword arguments (line 1706)
            kwargs_550381 = {}
            # Getting the type of 'time_limited' (line 1706)
            time_limited_550380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 41), 'time_limited', False)
            # Calling time_limited(args, kwargs) (line 1706)
            time_limited_call_result_550382 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 41), time_limited_550380, *[], **kwargs_550381)
            
            # Calling (args, kwargs) (line 1706)
            _call_result_550389 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 41), time_limited_call_result_550382, *[exception_to_nan_call_result_550387], **kwargs_550388)
            
            # Calling (args, kwargs) (line 1706)
            _call_result_550394 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 41), _call_result_550389, *[v_550390, x_550391], **kwargs_550393)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1706)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1706, 28), 'stypy_return_type', _call_result_550394)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_439' in the type store
            # Getting the type of 'stypy_return_type' (line 1706)
            stypy_return_type_550395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550395)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_439'
            return stypy_return_type_550395

        # Assigning a type to the variable '_stypy_temp_lambda_439' (line 1706)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1706, 28), '_stypy_temp_lambda_439', _stypy_temp_lambda_439)
        # Getting the type of '_stypy_temp_lambda_439' (line 1706)
        _stypy_temp_lambda_439_550396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 28), '_stypy_temp_lambda_439')
        
        # Obtaining an instance of the builtin type 'list' (line 1707)
        list_550397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1707)
        # Adding element type (line 1707)
        
        # Call to Arg(...): (line 1707)
        # Processing the call keyword arguments (line 1707)
        kwargs_550399 = {}
        # Getting the type of 'Arg' (line 1707)
        Arg_550398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1707)
        Arg_call_result_550400 = invoke(stypy.reporting.localization.Localization(__file__, 1707, 29), Arg_550398, *[], **kwargs_550399)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1707, 28), list_550397, Arg_call_result_550400)
        # Adding element type (line 1707)
        
        # Call to Arg(...): (line 1707)
        # Processing the call keyword arguments (line 1707)
        kwargs_550402 = {}
        # Getting the type of 'Arg' (line 1707)
        Arg_550401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1707)
        Arg_call_result_550403 = invoke(stypy.reporting.localization.Localization(__file__, 1707, 36), Arg_550401, *[], **kwargs_550402)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1707, 28), list_550397, Arg_call_result_550403)
        
        # Processing the call keyword arguments (line 1705)
        int_550404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 46), 'int')
        keyword_550405 = int_550404
        kwargs_550406 = {'n': keyword_550405}
        # Getting the type of 'assert_mpmath_equal' (line 1705)
        assert_mpmath_equal_550378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1705)
        assert_mpmath_equal_call_result_550407 = invoke(stypy.reporting.localization.Localization(__file__, 1705, 8), assert_mpmath_equal_550378, *[pcfv_550379, _stypy_temp_lambda_439_550396, list_550397], **kwargs_550406)
        
        
        # ################# End of 'test_pcfv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pcfv' in the type store
        # Getting the type of 'stypy_return_type' (line 1701)
        stypy_return_type_550408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1701, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550408)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pcfv'
        return stypy_return_type_550408


    @norecursion
    def test_pcfw(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pcfw'
        module_type_store = module_type_store.open_function_context('test_pcfw', 1709, 4, False)
        # Assigning a type to the variable 'self' (line 1710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1710, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_pcfw')
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_pcfw.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_pcfw', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pcfw', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pcfw(...)' code ##################


        @norecursion
        def pcfw(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'pcfw'
            module_type_store = module_type_store.open_function_context('pcfw', 1710, 8, False)
            
            # Passed parameters checking function
            pcfw.stypy_localization = localization
            pcfw.stypy_type_of_self = None
            pcfw.stypy_type_store = module_type_store
            pcfw.stypy_function_name = 'pcfw'
            pcfw.stypy_param_names_list = ['a', 'x']
            pcfw.stypy_varargs_param_name = None
            pcfw.stypy_kwargs_param_name = None
            pcfw.stypy_call_defaults = defaults
            pcfw.stypy_call_varargs = varargs
            pcfw.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'pcfw', ['a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'pcfw', localization, ['a', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'pcfw(...)' code ##################

            
            # Obtaining the type of the subscript
            int_550409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1711, 33), 'int')
            
            # Call to pbwa(...): (line 1711)
            # Processing the call arguments (line 1711)
            # Getting the type of 'a' (line 1711)
            a_550412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 27), 'a', False)
            # Getting the type of 'x' (line 1711)
            x_550413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 30), 'x', False)
            # Processing the call keyword arguments (line 1711)
            kwargs_550414 = {}
            # Getting the type of 'sc' (line 1711)
            sc_550410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1711, 19), 'sc', False)
            # Obtaining the member 'pbwa' of a type (line 1711)
            pbwa_550411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1711, 19), sc_550410, 'pbwa')
            # Calling pbwa(args, kwargs) (line 1711)
            pbwa_call_result_550415 = invoke(stypy.reporting.localization.Localization(__file__, 1711, 19), pbwa_550411, *[a_550412, x_550413], **kwargs_550414)
            
            # Obtaining the member '__getitem__' of a type (line 1711)
            getitem___550416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1711, 19), pbwa_call_result_550415, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1711)
            subscript_call_result_550417 = invoke(stypy.reporting.localization.Localization(__file__, 1711, 19), getitem___550416, int_550409)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1711)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1711, 12), 'stypy_return_type', subscript_call_result_550417)
            
            # ################# End of 'pcfw(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'pcfw' in the type store
            # Getting the type of 'stypy_return_type' (line 1710)
            stypy_return_type_550418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1710, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550418)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'pcfw'
            return stypy_return_type_550418

        # Assigning a type to the variable 'pcfw' (line 1710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1710, 8), 'pcfw', pcfw)

        @norecursion
        def dpcfw(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'dpcfw'
            module_type_store = module_type_store.open_function_context('dpcfw', 1713, 8, False)
            
            # Passed parameters checking function
            dpcfw.stypy_localization = localization
            dpcfw.stypy_type_of_self = None
            dpcfw.stypy_type_store = module_type_store
            dpcfw.stypy_function_name = 'dpcfw'
            dpcfw.stypy_param_names_list = ['a', 'x']
            dpcfw.stypy_varargs_param_name = None
            dpcfw.stypy_kwargs_param_name = None
            dpcfw.stypy_call_defaults = defaults
            dpcfw.stypy_call_varargs = varargs
            dpcfw.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'dpcfw', ['a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'dpcfw', localization, ['a', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'dpcfw(...)' code ##################

            
            # Obtaining the type of the subscript
            int_550419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1714, 33), 'int')
            
            # Call to pbwa(...): (line 1714)
            # Processing the call arguments (line 1714)
            # Getting the type of 'a' (line 1714)
            a_550422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 27), 'a', False)
            # Getting the type of 'x' (line 1714)
            x_550423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 30), 'x', False)
            # Processing the call keyword arguments (line 1714)
            kwargs_550424 = {}
            # Getting the type of 'sc' (line 1714)
            sc_550420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 19), 'sc', False)
            # Obtaining the member 'pbwa' of a type (line 1714)
            pbwa_550421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1714, 19), sc_550420, 'pbwa')
            # Calling pbwa(args, kwargs) (line 1714)
            pbwa_call_result_550425 = invoke(stypy.reporting.localization.Localization(__file__, 1714, 19), pbwa_550421, *[a_550422, x_550423], **kwargs_550424)
            
            # Obtaining the member '__getitem__' of a type (line 1714)
            getitem___550426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1714, 19), pbwa_call_result_550425, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1714)
            subscript_call_result_550427 = invoke(stypy.reporting.localization.Localization(__file__, 1714, 19), getitem___550426, int_550419)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1714)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1714, 12), 'stypy_return_type', subscript_call_result_550427)
            
            # ################# End of 'dpcfw(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'dpcfw' in the type store
            # Getting the type of 'stypy_return_type' (line 1713)
            stypy_return_type_550428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1713, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550428)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'dpcfw'
            return stypy_return_type_550428

        # Assigning a type to the variable 'dpcfw' (line 1713)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1713, 8), 'dpcfw', dpcfw)

        @norecursion
        def mpmath_dpcfw(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mpmath_dpcfw'
            module_type_store = module_type_store.open_function_context('mpmath_dpcfw', 1716, 8, False)
            
            # Passed parameters checking function
            mpmath_dpcfw.stypy_localization = localization
            mpmath_dpcfw.stypy_type_of_self = None
            mpmath_dpcfw.stypy_type_store = module_type_store
            mpmath_dpcfw.stypy_function_name = 'mpmath_dpcfw'
            mpmath_dpcfw.stypy_param_names_list = ['a', 'x']
            mpmath_dpcfw.stypy_varargs_param_name = None
            mpmath_dpcfw.stypy_kwargs_param_name = None
            mpmath_dpcfw.stypy_call_defaults = defaults
            mpmath_dpcfw.stypy_call_varargs = varargs
            mpmath_dpcfw.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mpmath_dpcfw', ['a', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mpmath_dpcfw', localization, ['a', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mpmath_dpcfw(...)' code ##################

            
            # Call to diff(...): (line 1717)
            # Processing the call arguments (line 1717)
            # Getting the type of 'mpmath' (line 1717)
            mpmath_550431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1717, 31), 'mpmath', False)
            # Obtaining the member 'pcfw' of a type (line 1717)
            pcfw_550432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1717, 31), mpmath_550431, 'pcfw')
            
            # Obtaining an instance of the builtin type 'tuple' (line 1717)
            tuple_550433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1717, 45), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1717)
            # Adding element type (line 1717)
            # Getting the type of 'a' (line 1717)
            a_550434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1717, 45), 'a', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1717, 45), tuple_550433, a_550434)
            # Adding element type (line 1717)
            # Getting the type of 'x' (line 1717)
            x_550435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1717, 48), 'x', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1717, 45), tuple_550433, x_550435)
            
            
            # Obtaining an instance of the builtin type 'tuple' (line 1717)
            tuple_550436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1717, 53), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1717)
            # Adding element type (line 1717)
            int_550437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1717, 53), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1717, 53), tuple_550436, int_550437)
            # Adding element type (line 1717)
            int_550438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1717, 56), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1717, 53), tuple_550436, int_550438)
            
            # Processing the call keyword arguments (line 1717)
            kwargs_550439 = {}
            # Getting the type of 'mpmath' (line 1717)
            mpmath_550429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1717, 19), 'mpmath', False)
            # Obtaining the member 'diff' of a type (line 1717)
            diff_550430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1717, 19), mpmath_550429, 'diff')
            # Calling diff(args, kwargs) (line 1717)
            diff_call_result_550440 = invoke(stypy.reporting.localization.Localization(__file__, 1717, 19), diff_550430, *[pcfw_550432, tuple_550433, tuple_550436], **kwargs_550439)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1717)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1717, 12), 'stypy_return_type', diff_call_result_550440)
            
            # ################# End of 'mpmath_dpcfw(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mpmath_dpcfw' in the type store
            # Getting the type of 'stypy_return_type' (line 1716)
            stypy_return_type_550441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1716, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550441)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mpmath_dpcfw'
            return stypy_return_type_550441

        # Assigning a type to the variable 'mpmath_dpcfw' (line 1716)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1716, 8), 'mpmath_dpcfw', mpmath_dpcfw)
        
        # Call to assert_mpmath_equal(...): (line 1721)
        # Processing the call arguments (line 1721)
        # Getting the type of 'pcfw' (line 1721)
        pcfw_550443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 28), 'pcfw', False)
        # Getting the type of 'mpmath' (line 1722)
        mpmath_550444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1722, 28), 'mpmath', False)
        # Obtaining the member 'pcfw' of a type (line 1722)
        pcfw_550445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1722, 28), mpmath_550444, 'pcfw')
        
        # Obtaining an instance of the builtin type 'list' (line 1723)
        list_550446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1723)
        # Adding element type (line 1723)
        
        # Call to Arg(...): (line 1723)
        # Processing the call arguments (line 1723)
        int_550448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 33), 'int')
        int_550449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 37), 'int')
        # Processing the call keyword arguments (line 1723)
        kwargs_550450 = {}
        # Getting the type of 'Arg' (line 1723)
        Arg_550447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1723)
        Arg_call_result_550451 = invoke(stypy.reporting.localization.Localization(__file__, 1723, 29), Arg_550447, *[int_550448, int_550449], **kwargs_550450)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1723, 28), list_550446, Arg_call_result_550451)
        # Adding element type (line 1723)
        
        # Call to Arg(...): (line 1723)
        # Processing the call arguments (line 1723)
        int_550453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 45), 'int')
        int_550454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 49), 'int')
        # Processing the call keyword arguments (line 1723)
        kwargs_550455 = {}
        # Getting the type of 'Arg' (line 1723)
        Arg_550452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 41), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1723)
        Arg_call_result_550456 = invoke(stypy.reporting.localization.Localization(__file__, 1723, 41), Arg_550452, *[int_550453, int_550454], **kwargs_550455)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1723, 28), list_550446, Arg_call_result_550456)
        
        # Processing the call keyword arguments (line 1721)
        float_550457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 59), 'float')
        keyword_550458 = float_550457
        int_550459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 68), 'int')
        keyword_550460 = int_550459
        kwargs_550461 = {'rtol': keyword_550458, 'n': keyword_550460}
        # Getting the type of 'assert_mpmath_equal' (line 1721)
        assert_mpmath_equal_550442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1721)
        assert_mpmath_equal_call_result_550462 = invoke(stypy.reporting.localization.Localization(__file__, 1721, 8), assert_mpmath_equal_550442, *[pcfw_550443, pcfw_550445, list_550446], **kwargs_550461)
        
        
        # Call to assert_mpmath_equal(...): (line 1725)
        # Processing the call arguments (line 1725)
        # Getting the type of 'dpcfw' (line 1725)
        dpcfw_550464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1725, 28), 'dpcfw', False)
        # Getting the type of 'mpmath_dpcfw' (line 1726)
        mpmath_dpcfw_550465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1726, 28), 'mpmath_dpcfw', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1727)
        list_550466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1727, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1727)
        # Adding element type (line 1727)
        
        # Call to Arg(...): (line 1727)
        # Processing the call arguments (line 1727)
        int_550468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1727, 33), 'int')
        int_550469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1727, 37), 'int')
        # Processing the call keyword arguments (line 1727)
        kwargs_550470 = {}
        # Getting the type of 'Arg' (line 1727)
        Arg_550467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1727, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1727)
        Arg_call_result_550471 = invoke(stypy.reporting.localization.Localization(__file__, 1727, 29), Arg_550467, *[int_550468, int_550469], **kwargs_550470)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1727, 28), list_550466, Arg_call_result_550471)
        # Adding element type (line 1727)
        
        # Call to Arg(...): (line 1727)
        # Processing the call arguments (line 1727)
        int_550473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1727, 45), 'int')
        int_550474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1727, 49), 'int')
        # Processing the call keyword arguments (line 1727)
        kwargs_550475 = {}
        # Getting the type of 'Arg' (line 1727)
        Arg_550472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1727, 41), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1727)
        Arg_call_result_550476 = invoke(stypy.reporting.localization.Localization(__file__, 1727, 41), Arg_550472, *[int_550473, int_550474], **kwargs_550475)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1727, 28), list_550466, Arg_call_result_550476)
        
        # Processing the call keyword arguments (line 1725)
        float_550477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1727, 59), 'float')
        keyword_550478 = float_550477
        int_550479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1727, 68), 'int')
        keyword_550480 = int_550479
        kwargs_550481 = {'rtol': keyword_550478, 'n': keyword_550480}
        # Getting the type of 'assert_mpmath_equal' (line 1725)
        assert_mpmath_equal_550463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1725, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1725)
        assert_mpmath_equal_call_result_550482 = invoke(stypy.reporting.localization.Localization(__file__, 1725, 8), assert_mpmath_equal_550463, *[dpcfw_550464, mpmath_dpcfw_550465, list_550466], **kwargs_550481)
        
        
        # ################# End of 'test_pcfw(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pcfw' in the type store
        # Getting the type of 'stypy_return_type' (line 1709)
        stypy_return_type_550483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550483)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pcfw'
        return stypy_return_type_550483


    @norecursion
    def test_polygamma(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_polygamma'
        module_type_store = module_type_store.open_function_context('test_polygamma', 1729, 4, False)
        # Assigning a type to the variable 'self' (line 1730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1730, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_polygamma')
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_polygamma.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_polygamma', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_polygamma', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_polygamma(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1731)
        # Processing the call arguments (line 1731)
        # Getting the type of 'sc' (line 1731)
        sc_550485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 28), 'sc', False)
        # Obtaining the member 'polygamma' of a type (line 1731)
        polygamma_550486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1731, 28), sc_550485, 'polygamma')
        
        # Call to (...): (line 1732)
        # Processing the call arguments (line 1732)
        
        # Call to exception_to_nan(...): (line 1732)
        # Processing the call arguments (line 1732)
        # Getting the type of 'mpmath' (line 1732)
        mpmath_550491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 60), 'mpmath', False)
        # Obtaining the member 'polygamma' of a type (line 1732)
        polygamma_550492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1732, 60), mpmath_550491, 'polygamma')
        # Processing the call keyword arguments (line 1732)
        kwargs_550493 = {}
        # Getting the type of 'exception_to_nan' (line 1732)
        exception_to_nan_550490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 43), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1732)
        exception_to_nan_call_result_550494 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 43), exception_to_nan_550490, *[polygamma_550492], **kwargs_550493)
        
        # Processing the call keyword arguments (line 1732)
        kwargs_550495 = {}
        
        # Call to time_limited(...): (line 1732)
        # Processing the call keyword arguments (line 1732)
        kwargs_550488 = {}
        # Getting the type of 'time_limited' (line 1732)
        time_limited_550487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 28), 'time_limited', False)
        # Calling time_limited(args, kwargs) (line 1732)
        time_limited_call_result_550489 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 28), time_limited_550487, *[], **kwargs_550488)
        
        # Calling (args, kwargs) (line 1732)
        _call_result_550496 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 28), time_limited_call_result_550489, *[exception_to_nan_call_result_550494], **kwargs_550495)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1733)
        list_550497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1733, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1733)
        # Adding element type (line 1733)
        
        # Call to IntArg(...): (line 1733)
        # Processing the call arguments (line 1733)
        int_550499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1733, 36), 'int')
        int_550500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1733, 39), 'int')
        # Processing the call keyword arguments (line 1733)
        kwargs_550501 = {}
        # Getting the type of 'IntArg' (line 1733)
        IntArg_550498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1733)
        IntArg_call_result_550502 = invoke(stypy.reporting.localization.Localization(__file__, 1733, 29), IntArg_550498, *[int_550499, int_550500], **kwargs_550501)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1733, 28), list_550497, IntArg_call_result_550502)
        # Adding element type (line 1733)
        
        # Call to Arg(...): (line 1733)
        # Processing the call keyword arguments (line 1733)
        kwargs_550504 = {}
        # Getting the type of 'Arg' (line 1733)
        Arg_550503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 46), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1733)
        Arg_call_result_550505 = invoke(stypy.reporting.localization.Localization(__file__, 1733, 46), Arg_550503, *[], **kwargs_550504)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1733, 28), list_550497, Arg_call_result_550505)
        
        # Processing the call keyword arguments (line 1731)
        kwargs_550506 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1731)
        assert_mpmath_equal_550484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1731)
        assert_mpmath_equal_call_result_550507 = invoke(stypy.reporting.localization.Localization(__file__, 1731, 8), assert_mpmath_equal_550484, *[polygamma_550486, _call_result_550496, list_550497], **kwargs_550506)
        
        
        # ################# End of 'test_polygamma(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_polygamma' in the type store
        # Getting the type of 'stypy_return_type' (line 1729)
        stypy_return_type_550508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1729, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550508)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_polygamma'
        return stypy_return_type_550508


    @norecursion
    def test_rgamma(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_rgamma'
        module_type_store = module_type_store.open_function_context('test_rgamma', 1735, 4, False)
        # Assigning a type to the variable 'self' (line 1736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1736, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_rgamma')
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_rgamma.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_rgamma', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_rgamma', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_rgamma(...)' code ##################


        @norecursion
        def rgamma(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'rgamma'
            module_type_store = module_type_store.open_function_context('rgamma', 1736, 8, False)
            
            # Passed parameters checking function
            rgamma.stypy_localization = localization
            rgamma.stypy_type_of_self = None
            rgamma.stypy_type_store = module_type_store
            rgamma.stypy_function_name = 'rgamma'
            rgamma.stypy_param_names_list = ['x']
            rgamma.stypy_varargs_param_name = None
            rgamma.stypy_kwargs_param_name = None
            rgamma.stypy_call_defaults = defaults
            rgamma.stypy_call_varargs = varargs
            rgamma.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'rgamma', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'rgamma', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'rgamma(...)' code ##################

            
            
            # Getting the type of 'x' (line 1737)
            x_550509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 15), 'x')
            int_550510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, 19), 'int')
            # Applying the binary operator '<' (line 1737)
            result_lt_550511 = python_operator(stypy.reporting.localization.Localization(__file__, 1737, 15), '<', x_550509, int_550510)
            
            # Testing the type of an if condition (line 1737)
            if_condition_550512 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1737, 12), result_lt_550511)
            # Assigning a type to the variable 'if_condition_550512' (line 1737)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1737, 12), 'if_condition_550512', if_condition_550512)
            # SSA begins for if statement (line 1737)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1738)
            np_550513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1738, 23), 'np')
            # Obtaining the member 'inf' of a type (line 1738)
            inf_550514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1738, 23), np_550513, 'inf')
            # Assigning a type to the variable 'stypy_return_type' (line 1738)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1738, 16), 'stypy_return_type', inf_550514)
            # SSA branch for the else part of an if statement (line 1737)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Name (line 1740):
            
            # Assigning a Call to a Name (line 1740):
            
            # Call to rgamma(...): (line 1740)
            # Processing the call arguments (line 1740)
            # Getting the type of 'x' (line 1740)
            x_550517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 34), 'x', False)
            # Processing the call keyword arguments (line 1740)
            kwargs_550518 = {}
            # Getting the type of 'mpmath' (line 1740)
            mpmath_550515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 20), 'mpmath', False)
            # Obtaining the member 'rgamma' of a type (line 1740)
            rgamma_550516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1740, 20), mpmath_550515, 'rgamma')
            # Calling rgamma(args, kwargs) (line 1740)
            rgamma_call_result_550519 = invoke(stypy.reporting.localization.Localization(__file__, 1740, 20), rgamma_550516, *[x_550517], **kwargs_550518)
            
            # Assigning a type to the variable 'v' (line 1740)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1740, 16), 'v', rgamma_call_result_550519)
            # SSA join for if statement (line 1737)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'v' (line 1741)
            v_550520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 19), 'v')
            # Assigning a type to the variable 'stypy_return_type' (line 1741)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1741, 12), 'stypy_return_type', v_550520)
            
            # ################# End of 'rgamma(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'rgamma' in the type store
            # Getting the type of 'stypy_return_type' (line 1736)
            stypy_return_type_550521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550521)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'rgamma'
            return stypy_return_type_550521

        # Assigning a type to the variable 'rgamma' (line 1736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1736, 8), 'rgamma', rgamma)
        
        # Call to assert_mpmath_equal(...): (line 1743)
        # Processing the call arguments (line 1743)
        # Getting the type of 'sc' (line 1743)
        sc_550523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1743, 28), 'sc', False)
        # Obtaining the member 'rgamma' of a type (line 1743)
        rgamma_550524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1743, 28), sc_550523, 'rgamma')
        # Getting the type of 'rgamma' (line 1744)
        rgamma_550525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 28), 'rgamma', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1745)
        list_550526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1745, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1745)
        # Adding element type (line 1745)
        
        # Call to Arg(...): (line 1745)
        # Processing the call keyword arguments (line 1745)
        kwargs_550528 = {}
        # Getting the type of 'Arg' (line 1745)
        Arg_550527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1745)
        Arg_call_result_550529 = invoke(stypy.reporting.localization.Localization(__file__, 1745, 29), Arg_550527, *[], **kwargs_550528)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1745, 28), list_550526, Arg_call_result_550529)
        
        # Processing the call keyword arguments (line 1743)
        int_550530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1746, 30), 'int')
        keyword_550531 = int_550530
        # Getting the type of 'True' (line 1747)
        True_550532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1747, 44), 'True', False)
        keyword_550533 = True_550532
        kwargs_550534 = {'ignore_inf_sign': keyword_550533, 'n': keyword_550531}
        # Getting the type of 'assert_mpmath_equal' (line 1743)
        assert_mpmath_equal_550522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1743, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1743)
        assert_mpmath_equal_call_result_550535 = invoke(stypy.reporting.localization.Localization(__file__, 1743, 8), assert_mpmath_equal_550522, *[rgamma_550524, rgamma_550525, list_550526], **kwargs_550534)
        
        
        # ################# End of 'test_rgamma(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_rgamma' in the type store
        # Getting the type of 'stypy_return_type' (line 1735)
        stypy_return_type_550536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550536)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_rgamma'
        return stypy_return_type_550536


    @norecursion
    def test_rgamma_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_rgamma_complex'
        module_type_store = module_type_store.open_function_context('test_rgamma_complex', 1749, 4, False)
        # Assigning a type to the variable 'self' (line 1750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1750, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_rgamma_complex')
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_rgamma_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_rgamma_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_rgamma_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_rgamma_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1750)
        # Processing the call arguments (line 1750)
        # Getting the type of 'sc' (line 1750)
        sc_550538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1750, 28), 'sc', False)
        # Obtaining the member 'rgamma' of a type (line 1750)
        rgamma_550539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1750, 28), sc_550538, 'rgamma')
        
        # Call to exception_to_nan(...): (line 1751)
        # Processing the call arguments (line 1751)
        # Getting the type of 'mpmath' (line 1751)
        mpmath_550541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1751, 45), 'mpmath', False)
        # Obtaining the member 'rgamma' of a type (line 1751)
        rgamma_550542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1751, 45), mpmath_550541, 'rgamma')
        # Processing the call keyword arguments (line 1751)
        kwargs_550543 = {}
        # Getting the type of 'exception_to_nan' (line 1751)
        exception_to_nan_550540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1751, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1751)
        exception_to_nan_call_result_550544 = invoke(stypy.reporting.localization.Localization(__file__, 1751, 28), exception_to_nan_550540, *[rgamma_550542], **kwargs_550543)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1752)
        list_550545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1752, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1752)
        # Adding element type (line 1752)
        
        # Call to ComplexArg(...): (line 1752)
        # Processing the call keyword arguments (line 1752)
        kwargs_550547 = {}
        # Getting the type of 'ComplexArg' (line 1752)
        ComplexArg_550546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1752, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1752)
        ComplexArg_call_result_550548 = invoke(stypy.reporting.localization.Localization(__file__, 1752, 29), ComplexArg_550546, *[], **kwargs_550547)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1752, 28), list_550545, ComplexArg_call_result_550548)
        
        # Processing the call keyword arguments (line 1750)
        float_550549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1752, 49), 'float')
        keyword_550550 = float_550549
        kwargs_550551 = {'rtol': keyword_550550}
        # Getting the type of 'assert_mpmath_equal' (line 1750)
        assert_mpmath_equal_550537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1750, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1750)
        assert_mpmath_equal_call_result_550552 = invoke(stypy.reporting.localization.Localization(__file__, 1750, 8), assert_mpmath_equal_550537, *[rgamma_550539, exception_to_nan_call_result_550544, list_550545], **kwargs_550551)
        
        
        # ################# End of 'test_rgamma_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_rgamma_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1749)
        stypy_return_type_550553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1749, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550553)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_rgamma_complex'
        return stypy_return_type_550553


    @norecursion
    def test_rf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_rf'
        module_type_store = module_type_store.open_function_context('test_rf', 1754, 4, False)
        # Assigning a type to the variable 'self' (line 1755)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1755, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_rf.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_rf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_rf.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_rf.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_rf')
        TestSystematic.test_rf.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_rf.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_rf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_rf.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_rf.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_rf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_rf.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_rf', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_rf', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_rf(...)' code ##################

        
        
        
        # Call to LooseVersion(...): (line 1756)
        # Processing the call arguments (line 1756)
        # Getting the type of 'mpmath' (line 1756)
        mpmath_550555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 24), 'mpmath', False)
        # Obtaining the member '__version__' of a type (line 1756)
        version___550556 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1756, 24), mpmath_550555, '__version__')
        # Processing the call keyword arguments (line 1756)
        kwargs_550557 = {}
        # Getting the type of 'LooseVersion' (line 1756)
        LooseVersion_550554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 11), 'LooseVersion', False)
        # Calling LooseVersion(args, kwargs) (line 1756)
        LooseVersion_call_result_550558 = invoke(stypy.reporting.localization.Localization(__file__, 1756, 11), LooseVersion_550554, *[version___550556], **kwargs_550557)
        
        
        # Call to LooseVersion(...): (line 1756)
        # Processing the call arguments (line 1756)
        str_550560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1756, 60), 'str', '1.0.0')
        # Processing the call keyword arguments (line 1756)
        kwargs_550561 = {}
        # Getting the type of 'LooseVersion' (line 1756)
        LooseVersion_550559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 47), 'LooseVersion', False)
        # Calling LooseVersion(args, kwargs) (line 1756)
        LooseVersion_call_result_550562 = invoke(stypy.reporting.localization.Localization(__file__, 1756, 47), LooseVersion_550559, *[str_550560], **kwargs_550561)
        
        # Applying the binary operator '>=' (line 1756)
        result_ge_550563 = python_operator(stypy.reporting.localization.Localization(__file__, 1756, 11), '>=', LooseVersion_call_result_550558, LooseVersion_call_result_550562)
        
        # Testing the type of an if condition (line 1756)
        if_condition_550564 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1756, 8), result_ge_550563)
        # Assigning a type to the variable 'if_condition_550564' (line 1756)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1756, 8), 'if_condition_550564', if_condition_550564)
        # SSA begins for if statement (line 1756)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 1758):
        
        # Assigning a Attribute to a Name (line 1758):
        # Getting the type of 'mpmath' (line 1758)
        mpmath_550565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 21), 'mpmath')
        # Obtaining the member 'rf' of a type (line 1758)
        rf_550566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1758, 21), mpmath_550565, 'rf')
        # Assigning a type to the variable 'mppoch' (line 1758)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1758, 12), 'mppoch', rf_550566)
        # SSA branch for the else part of an if statement (line 1756)
        module_type_store.open_ssa_branch('else')

        @norecursion
        def mppoch(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mppoch'
            module_type_store = module_type_store.open_function_context('mppoch', 1760, 12, False)
            
            # Passed parameters checking function
            mppoch.stypy_localization = localization
            mppoch.stypy_type_of_self = None
            mppoch.stypy_type_store = module_type_store
            mppoch.stypy_function_name = 'mppoch'
            mppoch.stypy_param_names_list = ['a', 'm']
            mppoch.stypy_varargs_param_name = None
            mppoch.stypy_kwargs_param_name = None
            mppoch.stypy_call_defaults = defaults
            mppoch.stypy_call_varargs = varargs
            mppoch.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mppoch', ['a', 'm'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mppoch', localization, ['a', 'm'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mppoch(...)' code ##################

            
            
            # Evaluating a boolean operation
            
            
            # Call to float(...): (line 1764)
            # Processing the call arguments (line 1764)
            # Getting the type of 'a' (line 1764)
            a_550568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 25), 'a', False)
            # Getting the type of 'm' (line 1764)
            m_550569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 29), 'm', False)
            # Applying the binary operator '+' (line 1764)
            result_add_550570 = python_operator(stypy.reporting.localization.Localization(__file__, 1764, 25), '+', a_550568, m_550569)
            
            # Processing the call keyword arguments (line 1764)
            kwargs_550571 = {}
            # Getting the type of 'float' (line 1764)
            float_550567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 19), 'float', False)
            # Calling float(args, kwargs) (line 1764)
            float_call_result_550572 = invoke(stypy.reporting.localization.Localization(__file__, 1764, 19), float_550567, *[result_add_550570], **kwargs_550571)
            
            
            # Call to int(...): (line 1764)
            # Processing the call arguments (line 1764)
            # Getting the type of 'a' (line 1764)
            a_550574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 39), 'a', False)
            # Getting the type of 'm' (line 1764)
            m_550575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 43), 'm', False)
            # Applying the binary operator '+' (line 1764)
            result_add_550576 = python_operator(stypy.reporting.localization.Localization(__file__, 1764, 39), '+', a_550574, m_550575)
            
            # Processing the call keyword arguments (line 1764)
            kwargs_550577 = {}
            # Getting the type of 'int' (line 1764)
            int_550573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 35), 'int', False)
            # Calling int(args, kwargs) (line 1764)
            int_call_result_550578 = invoke(stypy.reporting.localization.Localization(__file__, 1764, 35), int_550573, *[result_add_550576], **kwargs_550577)
            
            # Applying the binary operator '==' (line 1764)
            result_eq_550579 = python_operator(stypy.reporting.localization.Localization(__file__, 1764, 19), '==', float_call_result_550572, int_call_result_550578)
            
            
            
            # Call to float(...): (line 1764)
            # Processing the call arguments (line 1764)
            # Getting the type of 'a' (line 1764)
            a_550581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 56), 'a', False)
            # Getting the type of 'm' (line 1764)
            m_550582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 60), 'm', False)
            # Applying the binary operator '+' (line 1764)
            result_add_550583 = python_operator(stypy.reporting.localization.Localization(__file__, 1764, 56), '+', a_550581, m_550582)
            
            # Processing the call keyword arguments (line 1764)
            kwargs_550584 = {}
            # Getting the type of 'float' (line 1764)
            float_550580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 50), 'float', False)
            # Calling float(args, kwargs) (line 1764)
            float_call_result_550585 = invoke(stypy.reporting.localization.Localization(__file__, 1764, 50), float_550580, *[result_add_550583], **kwargs_550584)
            
            int_550586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1764, 66), 'int')
            # Applying the binary operator '<=' (line 1764)
            result_le_550587 = python_operator(stypy.reporting.localization.Localization(__file__, 1764, 50), '<=', float_call_result_550585, int_550586)
            
            # Applying the binary operator 'and' (line 1764)
            result_and_keyword_550588 = python_operator(stypy.reporting.localization.Localization(__file__, 1764, 19), 'and', result_eq_550579, result_le_550587)
            
            # Testing the type of an if condition (line 1764)
            if_condition_550589 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1764, 16), result_and_keyword_550588)
            # Assigning a type to the variable 'if_condition_550589' (line 1764)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1764, 16), 'if_condition_550589', if_condition_550589)
            # SSA begins for if statement (line 1764)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 1765):
            
            # Assigning a Call to a Name (line 1765):
            
            # Call to mpf(...): (line 1765)
            # Processing the call arguments (line 1765)
            # Getting the type of 'a' (line 1765)
            a_550592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1765, 35), 'a', False)
            # Processing the call keyword arguments (line 1765)
            kwargs_550593 = {}
            # Getting the type of 'mpmath' (line 1765)
            mpmath_550590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1765, 24), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1765)
            mpf_550591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1765, 24), mpmath_550590, 'mpf')
            # Calling mpf(args, kwargs) (line 1765)
            mpf_call_result_550594 = invoke(stypy.reporting.localization.Localization(__file__, 1765, 24), mpf_550591, *[a_550592], **kwargs_550593)
            
            # Assigning a type to the variable 'a' (line 1765)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1765, 20), 'a', mpf_call_result_550594)
            
            # Assigning a BinOp to a Name (line 1766):
            
            # Assigning a BinOp to a Name (line 1766):
            
            # Call to int(...): (line 1766)
            # Processing the call arguments (line 1766)
            # Getting the type of 'a' (line 1766)
            a_550596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 28), 'a', False)
            # Getting the type of 'm' (line 1766)
            m_550597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 32), 'm', False)
            # Applying the binary operator '+' (line 1766)
            result_add_550598 = python_operator(stypy.reporting.localization.Localization(__file__, 1766, 28), '+', a_550596, m_550597)
            
            # Processing the call keyword arguments (line 1766)
            kwargs_550599 = {}
            # Getting the type of 'int' (line 1766)
            int_550595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 24), 'int', False)
            # Calling int(args, kwargs) (line 1766)
            int_call_result_550600 = invoke(stypy.reporting.localization.Localization(__file__, 1766, 24), int_550595, *[result_add_550598], **kwargs_550599)
            
            # Getting the type of 'a' (line 1766)
            a_550601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1766, 37), 'a')
            # Applying the binary operator '-' (line 1766)
            result_sub_550602 = python_operator(stypy.reporting.localization.Localization(__file__, 1766, 24), '-', int_call_result_550600, a_550601)
            
            # Assigning a type to the variable 'm' (line 1766)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1766, 20), 'm', result_sub_550602)
            # SSA join for if statement (line 1764)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to rf(...): (line 1767)
            # Processing the call arguments (line 1767)
            # Getting the type of 'a' (line 1767)
            a_550605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1767, 33), 'a', False)
            # Getting the type of 'm' (line 1767)
            m_550606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1767, 36), 'm', False)
            # Processing the call keyword arguments (line 1767)
            kwargs_550607 = {}
            # Getting the type of 'mpmath' (line 1767)
            mpmath_550603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1767, 23), 'mpmath', False)
            # Obtaining the member 'rf' of a type (line 1767)
            rf_550604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1767, 23), mpmath_550603, 'rf')
            # Calling rf(args, kwargs) (line 1767)
            rf_call_result_550608 = invoke(stypy.reporting.localization.Localization(__file__, 1767, 23), rf_550604, *[a_550605, m_550606], **kwargs_550607)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1767)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1767, 16), 'stypy_return_type', rf_call_result_550608)
            
            # ################# End of 'mppoch(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mppoch' in the type store
            # Getting the type of 'stypy_return_type' (line 1760)
            stypy_return_type_550609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1760, 12), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550609)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mppoch'
            return stypy_return_type_550609

        # Assigning a type to the variable 'mppoch' (line 1760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1760, 12), 'mppoch', mppoch)
        # SSA join for if statement (line 1756)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to assert_mpmath_equal(...): (line 1769)
        # Processing the call arguments (line 1769)
        # Getting the type of 'sc' (line 1769)
        sc_550611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1769, 28), 'sc', False)
        # Obtaining the member 'poch' of a type (line 1769)
        poch_550612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1769, 28), sc_550611, 'poch')
        # Getting the type of 'mppoch' (line 1770)
        mppoch_550613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1770, 28), 'mppoch', False)
        
        # Obtaining an instance of the builtin type 'list' (line 1771)
        list_550614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1771, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1771)
        # Adding element type (line 1771)
        
        # Call to Arg(...): (line 1771)
        # Processing the call keyword arguments (line 1771)
        kwargs_550616 = {}
        # Getting the type of 'Arg' (line 1771)
        Arg_550615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1771, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1771)
        Arg_call_result_550617 = invoke(stypy.reporting.localization.Localization(__file__, 1771, 29), Arg_550615, *[], **kwargs_550616)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1771, 28), list_550614, Arg_call_result_550617)
        # Adding element type (line 1771)
        
        # Call to Arg(...): (line 1771)
        # Processing the call keyword arguments (line 1771)
        kwargs_550619 = {}
        # Getting the type of 'Arg' (line 1771)
        Arg_550618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1771, 36), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1771)
        Arg_call_result_550620 = invoke(stypy.reporting.localization.Localization(__file__, 1771, 36), Arg_550618, *[], **kwargs_550619)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1771, 28), list_550614, Arg_call_result_550620)
        
        # Processing the call keyword arguments (line 1769)
        int_550621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1772, 32), 'int')
        keyword_550622 = int_550621
        kwargs_550623 = {'dps': keyword_550622}
        # Getting the type of 'assert_mpmath_equal' (line 1769)
        assert_mpmath_equal_550610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1769, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1769)
        assert_mpmath_equal_call_result_550624 = invoke(stypy.reporting.localization.Localization(__file__, 1769, 8), assert_mpmath_equal_550610, *[poch_550612, mppoch_550613, list_550614], **kwargs_550623)
        
        
        # ################# End of 'test_rf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_rf' in the type store
        # Getting the type of 'stypy_return_type' (line 1754)
        stypy_return_type_550625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1754, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550625)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_rf'
        return stypy_return_type_550625


    @norecursion
    def test_sinpi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_sinpi'
        module_type_store = module_type_store.open_function_context('test_sinpi', 1774, 4, False)
        # Assigning a type to the variable 'self' (line 1775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1775, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_sinpi')
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_sinpi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_sinpi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_sinpi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_sinpi(...)' code ##################

        
        # Assigning a Attribute to a Name (line 1775):
        
        # Assigning a Attribute to a Name (line 1775):
        
        # Call to finfo(...): (line 1775)
        # Processing the call arguments (line 1775)
        # Getting the type of 'float' (line 1775)
        float_550628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 23), 'float', False)
        # Processing the call keyword arguments (line 1775)
        kwargs_550629 = {}
        # Getting the type of 'np' (line 1775)
        np_550626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 14), 'np', False)
        # Obtaining the member 'finfo' of a type (line 1775)
        finfo_550627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1775, 14), np_550626, 'finfo')
        # Calling finfo(args, kwargs) (line 1775)
        finfo_call_result_550630 = invoke(stypy.reporting.localization.Localization(__file__, 1775, 14), finfo_550627, *[float_550628], **kwargs_550629)
        
        # Obtaining the member 'eps' of a type (line 1775)
        eps_550631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1775, 14), finfo_call_result_550630, 'eps')
        # Assigning a type to the variable 'eps' (line 1775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1775, 8), 'eps', eps_550631)
        
        # Call to assert_mpmath_equal(...): (line 1776)
        # Processing the call arguments (line 1776)
        # Getting the type of '_sinpi' (line 1776)
        _sinpi_550633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 28), '_sinpi', False)
        # Getting the type of 'mpmath' (line 1776)
        mpmath_550634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 36), 'mpmath', False)
        # Obtaining the member 'sinpi' of a type (line 1776)
        sinpi_550635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1776, 36), mpmath_550634, 'sinpi')
        
        # Obtaining an instance of the builtin type 'list' (line 1777)
        list_550636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1777, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1777)
        # Adding element type (line 1777)
        
        # Call to Arg(...): (line 1777)
        # Processing the call keyword arguments (line 1777)
        kwargs_550638 = {}
        # Getting the type of 'Arg' (line 1777)
        Arg_550637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1777)
        Arg_call_result_550639 = invoke(stypy.reporting.localization.Localization(__file__, 1777, 29), Arg_550637, *[], **kwargs_550638)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1777, 28), list_550636, Arg_call_result_550639)
        
        # Processing the call keyword arguments (line 1776)
        # Getting the type of 'False' (line 1777)
        False_550640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 44), 'False', False)
        keyword_550641 = False_550640
        int_550642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1777, 56), 'int')
        # Getting the type of 'eps' (line 1777)
        eps_550643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 58), 'eps', False)
        # Applying the binary operator '*' (line 1777)
        result_mul_550644 = python_operator(stypy.reporting.localization.Localization(__file__, 1777, 56), '*', int_550642, eps_550643)
        
        keyword_550645 = result_mul_550644
        kwargs_550646 = {'rtol': keyword_550645, 'nan_ok': keyword_550641}
        # Getting the type of 'assert_mpmath_equal' (line 1776)
        assert_mpmath_equal_550632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1776)
        assert_mpmath_equal_call_result_550647 = invoke(stypy.reporting.localization.Localization(__file__, 1776, 8), assert_mpmath_equal_550632, *[_sinpi_550633, sinpi_550635, list_550636], **kwargs_550646)
        
        
        # ################# End of 'test_sinpi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_sinpi' in the type store
        # Getting the type of 'stypy_return_type' (line 1774)
        stypy_return_type_550648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550648)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_sinpi'
        return stypy_return_type_550648


    @norecursion
    def test_sinpi_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_sinpi_complex'
        module_type_store = module_type_store.open_function_context('test_sinpi_complex', 1779, 4, False)
        # Assigning a type to the variable 'self' (line 1780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1780, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_sinpi_complex')
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_sinpi_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_sinpi_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_sinpi_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_sinpi_complex(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1780)
        # Processing the call arguments (line 1780)
        # Getting the type of '_sinpi' (line 1780)
        _sinpi_550650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1780, 28), '_sinpi', False)
        # Getting the type of 'mpmath' (line 1780)
        mpmath_550651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1780, 36), 'mpmath', False)
        # Obtaining the member 'sinpi' of a type (line 1780)
        sinpi_550652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1780, 36), mpmath_550651, 'sinpi')
        
        # Obtaining an instance of the builtin type 'list' (line 1781)
        list_550653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1781, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1781)
        # Adding element type (line 1781)
        
        # Call to ComplexArg(...): (line 1781)
        # Processing the call keyword arguments (line 1781)
        kwargs_550655 = {}
        # Getting the type of 'ComplexArg' (line 1781)
        ComplexArg_550654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1781)
        ComplexArg_call_result_550656 = invoke(stypy.reporting.localization.Localization(__file__, 1781, 29), ComplexArg_550654, *[], **kwargs_550655)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1781, 28), list_550653, ComplexArg_call_result_550656)
        
        # Processing the call keyword arguments (line 1780)
        # Getting the type of 'False' (line 1781)
        False_550657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 51), 'False', False)
        keyword_550658 = False_550657
        float_550659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1781, 63), 'float')
        keyword_550660 = float_550659
        kwargs_550661 = {'rtol': keyword_550660, 'nan_ok': keyword_550658}
        # Getting the type of 'assert_mpmath_equal' (line 1780)
        assert_mpmath_equal_550649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1780, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1780)
        assert_mpmath_equal_call_result_550662 = invoke(stypy.reporting.localization.Localization(__file__, 1780, 8), assert_mpmath_equal_550649, *[_sinpi_550650, sinpi_550652, list_550653], **kwargs_550661)
        
        
        # ################# End of 'test_sinpi_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_sinpi_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1779)
        stypy_return_type_550663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1779, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550663)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_sinpi_complex'
        return stypy_return_type_550663


    @norecursion
    def test_shi(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shi'
        module_type_store = module_type_store.open_function_context('test_shi', 1783, 4, False)
        # Assigning a type to the variable 'self' (line 1784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1784, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_shi.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_shi.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_shi.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_shi.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_shi')
        TestSystematic.test_shi.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_shi.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_shi.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_shi.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_shi.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_shi.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_shi.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_shi', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shi', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shi(...)' code ##################


        @norecursion
        def shi(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'shi'
            module_type_store = module_type_store.open_function_context('shi', 1784, 8, False)
            
            # Passed parameters checking function
            shi.stypy_localization = localization
            shi.stypy_type_of_self = None
            shi.stypy_type_store = module_type_store
            shi.stypy_function_name = 'shi'
            shi.stypy_param_names_list = ['x']
            shi.stypy_varargs_param_name = None
            shi.stypy_kwargs_param_name = None
            shi.stypy_call_defaults = defaults
            shi.stypy_call_varargs = varargs
            shi.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'shi', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'shi', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'shi(...)' code ##################

            
            # Obtaining the type of the subscript
            int_550664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1785, 32), 'int')
            
            # Call to shichi(...): (line 1785)
            # Processing the call arguments (line 1785)
            # Getting the type of 'x' (line 1785)
            x_550667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 29), 'x', False)
            # Processing the call keyword arguments (line 1785)
            kwargs_550668 = {}
            # Getting the type of 'sc' (line 1785)
            sc_550665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 19), 'sc', False)
            # Obtaining the member 'shichi' of a type (line 1785)
            shichi_550666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1785, 19), sc_550665, 'shichi')
            # Calling shichi(args, kwargs) (line 1785)
            shichi_call_result_550669 = invoke(stypy.reporting.localization.Localization(__file__, 1785, 19), shichi_550666, *[x_550667], **kwargs_550668)
            
            # Obtaining the member '__getitem__' of a type (line 1785)
            getitem___550670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1785, 19), shichi_call_result_550669, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1785)
            subscript_call_result_550671 = invoke(stypy.reporting.localization.Localization(__file__, 1785, 19), getitem___550670, int_550664)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1785)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1785, 12), 'stypy_return_type', subscript_call_result_550671)
            
            # ################# End of 'shi(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'shi' in the type store
            # Getting the type of 'stypy_return_type' (line 1784)
            stypy_return_type_550672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1784, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550672)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'shi'
            return stypy_return_type_550672

        # Assigning a type to the variable 'shi' (line 1784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1784, 8), 'shi', shi)
        
        # Call to assert_mpmath_equal(...): (line 1786)
        # Processing the call arguments (line 1786)
        # Getting the type of 'shi' (line 1786)
        shi_550674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 28), 'shi', False)
        # Getting the type of 'mpmath' (line 1786)
        mpmath_550675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 33), 'mpmath', False)
        # Obtaining the member 'shi' of a type (line 1786)
        shi_550676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1786, 33), mpmath_550675, 'shi')
        
        # Obtaining an instance of the builtin type 'list' (line 1786)
        list_550677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1786, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1786)
        # Adding element type (line 1786)
        
        # Call to Arg(...): (line 1786)
        # Processing the call keyword arguments (line 1786)
        kwargs_550679 = {}
        # Getting the type of 'Arg' (line 1786)
        Arg_550678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 46), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1786)
        Arg_call_result_550680 = invoke(stypy.reporting.localization.Localization(__file__, 1786, 46), Arg_550678, *[], **kwargs_550679)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1786, 45), list_550677, Arg_call_result_550680)
        
        # Processing the call keyword arguments (line 1786)
        kwargs_550681 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1786)
        assert_mpmath_equal_550673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1786)
        assert_mpmath_equal_call_result_550682 = invoke(stypy.reporting.localization.Localization(__file__, 1786, 8), assert_mpmath_equal_550673, *[shi_550674, shi_550676, list_550677], **kwargs_550681)
        
        
        # Call to assert_mpmath_equal(...): (line 1788)
        # Processing the call arguments (line 1788)
        # Getting the type of 'shi' (line 1788)
        shi_550684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1788, 28), 'shi', False)
        # Getting the type of 'mpmath' (line 1788)
        mpmath_550685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1788, 33), 'mpmath', False)
        # Obtaining the member 'shi' of a type (line 1788)
        shi_550686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1788, 33), mpmath_550685, 'shi')
        
        # Obtaining an instance of the builtin type 'list' (line 1788)
        list_550687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1788, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1788)
        # Adding element type (line 1788)
        
        # Call to FixedArg(...): (line 1788)
        # Processing the call arguments (line 1788)
        
        # Obtaining an instance of the builtin type 'list' (line 1788)
        list_550689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1788, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1788)
        # Adding element type (line 1788)
        int_550690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1788, 56), 'int')
        float_550691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1788, 61), 'float')
        # Applying the binary operator '-' (line 1788)
        result_sub_550692 = python_operator(stypy.reporting.localization.Localization(__file__, 1788, 56), '-', int_550690, float_550691)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1788, 55), list_550689, result_sub_550692)
        # Adding element type (line 1788)
        int_550693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1788, 67), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1788, 55), list_550689, int_550693)
        # Adding element type (line 1788)
        int_550694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1788, 71), 'int')
        float_550695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1788, 76), 'float')
        # Applying the binary operator '+' (line 1788)
        result_add_550696 = python_operator(stypy.reporting.localization.Localization(__file__, 1788, 71), '+', int_550694, float_550695)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1788, 55), list_550689, result_add_550696)
        
        # Processing the call keyword arguments (line 1788)
        kwargs_550697 = {}
        # Getting the type of 'FixedArg' (line 1788)
        FixedArg_550688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1788, 46), 'FixedArg', False)
        # Calling FixedArg(args, kwargs) (line 1788)
        FixedArg_call_result_550698 = invoke(stypy.reporting.localization.Localization(__file__, 1788, 46), FixedArg_550688, *[list_550689], **kwargs_550697)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1788, 45), list_550687, FixedArg_call_result_550698)
        
        # Processing the call keyword arguments (line 1788)
        kwargs_550699 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1788)
        assert_mpmath_equal_550683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1788, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1788)
        assert_mpmath_equal_call_result_550700 = invoke(stypy.reporting.localization.Localization(__file__, 1788, 8), assert_mpmath_equal_550683, *[shi_550684, shi_550686, list_550687], **kwargs_550699)
        
        
        # ################# End of 'test_shi(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shi' in the type store
        # Getting the type of 'stypy_return_type' (line 1783)
        stypy_return_type_550701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550701)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shi'
        return stypy_return_type_550701


    @norecursion
    def test_shi_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shi_complex'
        module_type_store = module_type_store.open_function_context('test_shi_complex', 1790, 4, False)
        # Assigning a type to the variable 'self' (line 1791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1791, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_shi_complex')
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_shi_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_shi_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shi_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shi_complex(...)' code ##################


        @norecursion
        def shi(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'shi'
            module_type_store = module_type_store.open_function_context('shi', 1791, 8, False)
            
            # Passed parameters checking function
            shi.stypy_localization = localization
            shi.stypy_type_of_self = None
            shi.stypy_type_store = module_type_store
            shi.stypy_function_name = 'shi'
            shi.stypy_param_names_list = ['z']
            shi.stypy_varargs_param_name = None
            shi.stypy_kwargs_param_name = None
            shi.stypy_call_defaults = defaults
            shi.stypy_call_varargs = varargs
            shi.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'shi', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'shi', localization, ['z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'shi(...)' code ##################

            
            # Obtaining the type of the subscript
            int_550702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1792, 32), 'int')
            
            # Call to shichi(...): (line 1792)
            # Processing the call arguments (line 1792)
            # Getting the type of 'z' (line 1792)
            z_550705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 29), 'z', False)
            # Processing the call keyword arguments (line 1792)
            kwargs_550706 = {}
            # Getting the type of 'sc' (line 1792)
            sc_550703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 19), 'sc', False)
            # Obtaining the member 'shichi' of a type (line 1792)
            shichi_550704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1792, 19), sc_550703, 'shichi')
            # Calling shichi(args, kwargs) (line 1792)
            shichi_call_result_550707 = invoke(stypy.reporting.localization.Localization(__file__, 1792, 19), shichi_550704, *[z_550705], **kwargs_550706)
            
            # Obtaining the member '__getitem__' of a type (line 1792)
            getitem___550708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1792, 19), shichi_call_result_550707, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1792)
            subscript_call_result_550709 = invoke(stypy.reporting.localization.Localization(__file__, 1792, 19), getitem___550708, int_550702)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1792)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1792, 12), 'stypy_return_type', subscript_call_result_550709)
            
            # ################# End of 'shi(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'shi' in the type store
            # Getting the type of 'stypy_return_type' (line 1791)
            stypy_return_type_550710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1791, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550710)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'shi'
            return stypy_return_type_550710

        # Assigning a type to the variable 'shi' (line 1791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1791, 8), 'shi', shi)
        
        # Call to assert_mpmath_equal(...): (line 1794)
        # Processing the call arguments (line 1794)
        # Getting the type of 'shi' (line 1794)
        shi_550712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1794, 28), 'shi', False)
        # Getting the type of 'mpmath' (line 1795)
        mpmath_550713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1795, 28), 'mpmath', False)
        # Obtaining the member 'shi' of a type (line 1795)
        shi_550714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1795, 28), mpmath_550713, 'shi')
        
        # Obtaining an instance of the builtin type 'list' (line 1796)
        list_550715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1796, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1796)
        # Adding element type (line 1796)
        
        # Call to ComplexArg(...): (line 1796)
        # Processing the call arguments (line 1796)
        
        # Call to complex(...): (line 1796)
        # Processing the call arguments (line 1796)
        
        # Getting the type of 'np' (line 1796)
        np_550718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 49), 'np', False)
        # Obtaining the member 'inf' of a type (line 1796)
        inf_550719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1796, 49), np_550718, 'inf')
        # Applying the 'usub' unary operator (line 1796)
        result___neg___550720 = python_operator(stypy.reporting.localization.Localization(__file__, 1796, 48), 'usub', inf_550719)
        
        float_550721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1796, 57), 'float')
        # Processing the call keyword arguments (line 1796)
        kwargs_550722 = {}
        # Getting the type of 'complex' (line 1796)
        complex_550717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 40), 'complex', False)
        # Calling complex(args, kwargs) (line 1796)
        complex_call_result_550723 = invoke(stypy.reporting.localization.Localization(__file__, 1796, 40), complex_550717, *[result___neg___550720, float_550721], **kwargs_550722)
        
        
        # Call to complex(...): (line 1796)
        # Processing the call arguments (line 1796)
        # Getting the type of 'np' (line 1796)
        np_550725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 72), 'np', False)
        # Obtaining the member 'inf' of a type (line 1796)
        inf_550726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1796, 72), np_550725, 'inf')
        float_550727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1796, 80), 'float')
        # Processing the call keyword arguments (line 1796)
        kwargs_550728 = {}
        # Getting the type of 'complex' (line 1796)
        complex_550724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 64), 'complex', False)
        # Calling complex(args, kwargs) (line 1796)
        complex_call_result_550729 = invoke(stypy.reporting.localization.Localization(__file__, 1796, 64), complex_550724, *[inf_550726, float_550727], **kwargs_550728)
        
        # Processing the call keyword arguments (line 1796)
        kwargs_550730 = {}
        # Getting the type of 'ComplexArg' (line 1796)
        ComplexArg_550716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1796)
        ComplexArg_call_result_550731 = invoke(stypy.reporting.localization.Localization(__file__, 1796, 29), ComplexArg_550716, *[complex_call_result_550723, complex_call_result_550729], **kwargs_550730)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1796, 28), list_550715, ComplexArg_call_result_550731)
        
        # Processing the call keyword arguments (line 1794)
        float_550732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1797, 33), 'float')
        keyword_550733 = float_550732
        kwargs_550734 = {'rtol': keyword_550733}
        # Getting the type of 'assert_mpmath_equal' (line 1794)
        assert_mpmath_equal_550711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1794, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1794)
        assert_mpmath_equal_call_result_550735 = invoke(stypy.reporting.localization.Localization(__file__, 1794, 8), assert_mpmath_equal_550711, *[shi_550712, shi_550714, list_550715], **kwargs_550734)
        
        
        # ################# End of 'test_shi_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shi_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1790)
        stypy_return_type_550736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1790, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550736)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shi_complex'
        return stypy_return_type_550736


    @norecursion
    def test_si(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_si'
        module_type_store = module_type_store.open_function_context('test_si', 1799, 4, False)
        # Assigning a type to the variable 'self' (line 1800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1800, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_si.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_si.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_si.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_si.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_si')
        TestSystematic.test_si.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_si.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_si.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_si.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_si.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_si.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_si.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_si', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_si', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_si(...)' code ##################


        @norecursion
        def si(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'si'
            module_type_store = module_type_store.open_function_context('si', 1800, 8, False)
            
            # Passed parameters checking function
            si.stypy_localization = localization
            si.stypy_type_of_self = None
            si.stypy_type_store = module_type_store
            si.stypy_function_name = 'si'
            si.stypy_param_names_list = ['x']
            si.stypy_varargs_param_name = None
            si.stypy_kwargs_param_name = None
            si.stypy_call_defaults = defaults
            si.stypy_call_varargs = varargs
            si.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'si', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'si', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'si(...)' code ##################

            
            # Obtaining the type of the subscript
            int_550737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1801, 30), 'int')
            
            # Call to sici(...): (line 1801)
            # Processing the call arguments (line 1801)
            # Getting the type of 'x' (line 1801)
            x_550740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1801, 27), 'x', False)
            # Processing the call keyword arguments (line 1801)
            kwargs_550741 = {}
            # Getting the type of 'sc' (line 1801)
            sc_550738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1801, 19), 'sc', False)
            # Obtaining the member 'sici' of a type (line 1801)
            sici_550739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1801, 19), sc_550738, 'sici')
            # Calling sici(args, kwargs) (line 1801)
            sici_call_result_550742 = invoke(stypy.reporting.localization.Localization(__file__, 1801, 19), sici_550739, *[x_550740], **kwargs_550741)
            
            # Obtaining the member '__getitem__' of a type (line 1801)
            getitem___550743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1801, 19), sici_call_result_550742, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1801)
            subscript_call_result_550744 = invoke(stypy.reporting.localization.Localization(__file__, 1801, 19), getitem___550743, int_550737)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1801)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1801, 12), 'stypy_return_type', subscript_call_result_550744)
            
            # ################# End of 'si(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'si' in the type store
            # Getting the type of 'stypy_return_type' (line 1800)
            stypy_return_type_550745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1800, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550745)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'si'
            return stypy_return_type_550745

        # Assigning a type to the variable 'si' (line 1800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1800, 8), 'si', si)
        
        # Call to assert_mpmath_equal(...): (line 1802)
        # Processing the call arguments (line 1802)
        # Getting the type of 'si' (line 1802)
        si_550747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 28), 'si', False)
        # Getting the type of 'mpmath' (line 1802)
        mpmath_550748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 32), 'mpmath', False)
        # Obtaining the member 'si' of a type (line 1802)
        si_550749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1802, 32), mpmath_550748, 'si')
        
        # Obtaining an instance of the builtin type 'list' (line 1802)
        list_550750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1802, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1802)
        # Adding element type (line 1802)
        
        # Call to Arg(...): (line 1802)
        # Processing the call keyword arguments (line 1802)
        kwargs_550752 = {}
        # Getting the type of 'Arg' (line 1802)
        Arg_550751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 44), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1802)
        Arg_call_result_550753 = invoke(stypy.reporting.localization.Localization(__file__, 1802, 44), Arg_550751, *[], **kwargs_550752)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1802, 43), list_550750, Arg_call_result_550753)
        
        # Processing the call keyword arguments (line 1802)
        kwargs_550754 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1802)
        assert_mpmath_equal_550746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1802)
        assert_mpmath_equal_call_result_550755 = invoke(stypy.reporting.localization.Localization(__file__, 1802, 8), assert_mpmath_equal_550746, *[si_550747, si_550749, list_550750], **kwargs_550754)
        
        
        # ################# End of 'test_si(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_si' in the type store
        # Getting the type of 'stypy_return_type' (line 1799)
        stypy_return_type_550756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550756)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_si'
        return stypy_return_type_550756


    @norecursion
    def test_si_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_si_complex'
        module_type_store = module_type_store.open_function_context('test_si_complex', 1804, 4, False)
        # Assigning a type to the variable 'self' (line 1805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1805, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_si_complex')
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_si_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_si_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_si_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_si_complex(...)' code ##################


        @norecursion
        def si(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'si'
            module_type_store = module_type_store.open_function_context('si', 1805, 8, False)
            
            # Passed parameters checking function
            si.stypy_localization = localization
            si.stypy_type_of_self = None
            si.stypy_type_store = module_type_store
            si.stypy_function_name = 'si'
            si.stypy_param_names_list = ['z']
            si.stypy_varargs_param_name = None
            si.stypy_kwargs_param_name = None
            si.stypy_call_defaults = defaults
            si.stypy_call_varargs = varargs
            si.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'si', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'si', localization, ['z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'si(...)' code ##################

            
            # Obtaining the type of the subscript
            int_550757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1806, 30), 'int')
            
            # Call to sici(...): (line 1806)
            # Processing the call arguments (line 1806)
            # Getting the type of 'z' (line 1806)
            z_550760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1806, 27), 'z', False)
            # Processing the call keyword arguments (line 1806)
            kwargs_550761 = {}
            # Getting the type of 'sc' (line 1806)
            sc_550758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1806, 19), 'sc', False)
            # Obtaining the member 'sici' of a type (line 1806)
            sici_550759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1806, 19), sc_550758, 'sici')
            # Calling sici(args, kwargs) (line 1806)
            sici_call_result_550762 = invoke(stypy.reporting.localization.Localization(__file__, 1806, 19), sici_550759, *[z_550760], **kwargs_550761)
            
            # Obtaining the member '__getitem__' of a type (line 1806)
            getitem___550763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1806, 19), sici_call_result_550762, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1806)
            subscript_call_result_550764 = invoke(stypy.reporting.localization.Localization(__file__, 1806, 19), getitem___550763, int_550757)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1806)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1806, 12), 'stypy_return_type', subscript_call_result_550764)
            
            # ################# End of 'si(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'si' in the type store
            # Getting the type of 'stypy_return_type' (line 1805)
            stypy_return_type_550765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1805, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550765)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'si'
            return stypy_return_type_550765

        # Assigning a type to the variable 'si' (line 1805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1805, 8), 'si', si)
        
        # Call to assert_mpmath_equal(...): (line 1808)
        # Processing the call arguments (line 1808)
        # Getting the type of 'si' (line 1808)
        si_550767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1808, 28), 'si', False)
        # Getting the type of 'mpmath' (line 1809)
        mpmath_550768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 28), 'mpmath', False)
        # Obtaining the member 'si' of a type (line 1809)
        si_550769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1809, 28), mpmath_550768, 'si')
        
        # Obtaining an instance of the builtin type 'list' (line 1810)
        list_550770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1810, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1810)
        # Adding element type (line 1810)
        
        # Call to ComplexArg(...): (line 1810)
        # Processing the call arguments (line 1810)
        
        # Call to complex(...): (line 1810)
        # Processing the call arguments (line 1810)
        float_550773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1810, 48), 'float')
        
        # Getting the type of 'np' (line 1810)
        np_550774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1810, 55), 'np', False)
        # Obtaining the member 'inf' of a type (line 1810)
        inf_550775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1810, 55), np_550774, 'inf')
        # Applying the 'usub' unary operator (line 1810)
        result___neg___550776 = python_operator(stypy.reporting.localization.Localization(__file__, 1810, 54), 'usub', inf_550775)
        
        # Processing the call keyword arguments (line 1810)
        kwargs_550777 = {}
        # Getting the type of 'complex' (line 1810)
        complex_550772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1810, 40), 'complex', False)
        # Calling complex(args, kwargs) (line 1810)
        complex_call_result_550778 = invoke(stypy.reporting.localization.Localization(__file__, 1810, 40), complex_550772, *[float_550773, result___neg___550776], **kwargs_550777)
        
        
        # Call to complex(...): (line 1810)
        # Processing the call arguments (line 1810)
        float_550780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1810, 72), 'float')
        # Getting the type of 'np' (line 1810)
        np_550781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1810, 77), 'np', False)
        # Obtaining the member 'inf' of a type (line 1810)
        inf_550782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1810, 77), np_550781, 'inf')
        # Processing the call keyword arguments (line 1810)
        kwargs_550783 = {}
        # Getting the type of 'complex' (line 1810)
        complex_550779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1810, 64), 'complex', False)
        # Calling complex(args, kwargs) (line 1810)
        complex_call_result_550784 = invoke(stypy.reporting.localization.Localization(__file__, 1810, 64), complex_550779, *[float_550780, inf_550782], **kwargs_550783)
        
        # Processing the call keyword arguments (line 1810)
        kwargs_550785 = {}
        # Getting the type of 'ComplexArg' (line 1810)
        ComplexArg_550771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1810, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1810)
        ComplexArg_call_result_550786 = invoke(stypy.reporting.localization.Localization(__file__, 1810, 29), ComplexArg_550771, *[complex_call_result_550778, complex_call_result_550784], **kwargs_550785)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1810, 28), list_550770, ComplexArg_call_result_550786)
        
        # Processing the call keyword arguments (line 1808)
        float_550787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1811, 33), 'float')
        keyword_550788 = float_550787
        kwargs_550789 = {'rtol': keyword_550788}
        # Getting the type of 'assert_mpmath_equal' (line 1808)
        assert_mpmath_equal_550766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1808, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1808)
        assert_mpmath_equal_call_result_550790 = invoke(stypy.reporting.localization.Localization(__file__, 1808, 8), assert_mpmath_equal_550766, *[si_550767, si_550769, list_550770], **kwargs_550789)
        
        
        # ################# End of 'test_si_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_si_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1804)
        stypy_return_type_550791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550791)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_si_complex'
        return stypy_return_type_550791


    @norecursion
    def test_spence(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spence'
        module_type_store = module_type_store.open_function_context('test_spence', 1813, 4, False)
        # Assigning a type to the variable 'self' (line 1814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spence.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spence.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spence.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spence.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spence')
        TestSystematic.test_spence.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spence.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spence.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spence.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spence.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spence.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spence.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spence', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spence', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spence(...)' code ##################


        @norecursion
        def dilog(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'dilog'
            module_type_store = module_type_store.open_function_context('dilog', 1815, 8, False)
            
            # Passed parameters checking function
            dilog.stypy_localization = localization
            dilog.stypy_type_of_self = None
            dilog.stypy_type_store = module_type_store
            dilog.stypy_function_name = 'dilog'
            dilog.stypy_param_names_list = ['x']
            dilog.stypy_varargs_param_name = None
            dilog.stypy_kwargs_param_name = None
            dilog.stypy_call_defaults = defaults
            dilog.stypy_call_varargs = varargs
            dilog.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'dilog', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'dilog', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'dilog(...)' code ##################

            
            # Call to polylog(...): (line 1816)
            # Processing the call arguments (line 1816)
            int_550794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1816, 34), 'int')
            int_550795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1816, 37), 'int')
            # Getting the type of 'x' (line 1816)
            x_550796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1816, 41), 'x', False)
            # Applying the binary operator '-' (line 1816)
            result_sub_550797 = python_operator(stypy.reporting.localization.Localization(__file__, 1816, 37), '-', int_550795, x_550796)
            
            # Processing the call keyword arguments (line 1816)
            kwargs_550798 = {}
            # Getting the type of 'mpmath' (line 1816)
            mpmath_550792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1816, 19), 'mpmath', False)
            # Obtaining the member 'polylog' of a type (line 1816)
            polylog_550793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1816, 19), mpmath_550792, 'polylog')
            # Calling polylog(args, kwargs) (line 1816)
            polylog_call_result_550799 = invoke(stypy.reporting.localization.Localization(__file__, 1816, 19), polylog_550793, *[int_550794, result_sub_550797], **kwargs_550798)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1816)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1816, 12), 'stypy_return_type', polylog_call_result_550799)
            
            # ################# End of 'dilog(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'dilog' in the type store
            # Getting the type of 'stypy_return_type' (line 1815)
            stypy_return_type_550800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550800)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'dilog'
            return stypy_return_type_550800

        # Assigning a type to the variable 'dilog' (line 1815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'dilog', dilog)
        
        # Call to assert_mpmath_equal(...): (line 1818)
        # Processing the call arguments (line 1818)
        # Getting the type of 'sc' (line 1818)
        sc_550802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 28), 'sc', False)
        # Obtaining the member 'spence' of a type (line 1818)
        spence_550803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 28), sc_550802, 'spence')
        
        # Call to exception_to_nan(...): (line 1819)
        # Processing the call arguments (line 1819)
        # Getting the type of 'dilog' (line 1819)
        dilog_550805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 45), 'dilog', False)
        # Processing the call keyword arguments (line 1819)
        kwargs_550806 = {}
        # Getting the type of 'exception_to_nan' (line 1819)
        exception_to_nan_550804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1819)
        exception_to_nan_call_result_550807 = invoke(stypy.reporting.localization.Localization(__file__, 1819, 28), exception_to_nan_550804, *[dilog_550805], **kwargs_550806)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1820)
        list_550808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1820, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1820)
        # Adding element type (line 1820)
        
        # Call to Arg(...): (line 1820)
        # Processing the call arguments (line 1820)
        int_550810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1820, 33), 'int')
        # Getting the type of 'np' (line 1820)
        np_550811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 36), 'np', False)
        # Obtaining the member 'inf' of a type (line 1820)
        inf_550812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1820, 36), np_550811, 'inf')
        # Processing the call keyword arguments (line 1820)
        kwargs_550813 = {}
        # Getting the type of 'Arg' (line 1820)
        Arg_550809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1820)
        Arg_call_result_550814 = invoke(stypy.reporting.localization.Localization(__file__, 1820, 29), Arg_550809, *[int_550810, inf_550812], **kwargs_550813)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1820, 28), list_550808, Arg_call_result_550814)
        
        # Processing the call keyword arguments (line 1818)
        float_550815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1820, 51), 'float')
        keyword_550816 = float_550815
        kwargs_550817 = {'rtol': keyword_550816}
        # Getting the type of 'assert_mpmath_equal' (line 1818)
        assert_mpmath_equal_550801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1818)
        assert_mpmath_equal_call_result_550818 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 8), assert_mpmath_equal_550801, *[spence_550803, exception_to_nan_call_result_550807, list_550808], **kwargs_550817)
        
        
        # ################# End of 'test_spence(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spence' in the type store
        # Getting the type of 'stypy_return_type' (line 1813)
        stypy_return_type_550819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550819)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spence'
        return stypy_return_type_550819


    @norecursion
    def test_spence_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spence_complex'
        module_type_store = module_type_store.open_function_context('test_spence_complex', 1822, 4, False)
        # Assigning a type to the variable 'self' (line 1823)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1823, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spence_complex')
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spence_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spence_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spence_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spence_complex(...)' code ##################


        @norecursion
        def dilog(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'dilog'
            module_type_store = module_type_store.open_function_context('dilog', 1823, 8, False)
            
            # Passed parameters checking function
            dilog.stypy_localization = localization
            dilog.stypy_type_of_self = None
            dilog.stypy_type_store = module_type_store
            dilog.stypy_function_name = 'dilog'
            dilog.stypy_param_names_list = ['z']
            dilog.stypy_varargs_param_name = None
            dilog.stypy_kwargs_param_name = None
            dilog.stypy_call_defaults = defaults
            dilog.stypy_call_varargs = varargs
            dilog.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'dilog', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'dilog', localization, ['z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'dilog(...)' code ##################

            
            # Call to polylog(...): (line 1824)
            # Processing the call arguments (line 1824)
            int_550822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1824, 34), 'int')
            int_550823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1824, 37), 'int')
            # Getting the type of 'z' (line 1824)
            z_550824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 41), 'z', False)
            # Applying the binary operator '-' (line 1824)
            result_sub_550825 = python_operator(stypy.reporting.localization.Localization(__file__, 1824, 37), '-', int_550823, z_550824)
            
            # Processing the call keyword arguments (line 1824)
            kwargs_550826 = {}
            # Getting the type of 'mpmath' (line 1824)
            mpmath_550820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 19), 'mpmath', False)
            # Obtaining the member 'polylog' of a type (line 1824)
            polylog_550821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1824, 19), mpmath_550820, 'polylog')
            # Calling polylog(args, kwargs) (line 1824)
            polylog_call_result_550827 = invoke(stypy.reporting.localization.Localization(__file__, 1824, 19), polylog_550821, *[int_550822, result_sub_550825], **kwargs_550826)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1824)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1824, 12), 'stypy_return_type', polylog_call_result_550827)
            
            # ################# End of 'dilog(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'dilog' in the type store
            # Getting the type of 'stypy_return_type' (line 1823)
            stypy_return_type_550828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550828)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'dilog'
            return stypy_return_type_550828

        # Assigning a type to the variable 'dilog' (line 1823)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1823, 8), 'dilog', dilog)
        
        # Call to assert_mpmath_equal(...): (line 1825)
        # Processing the call arguments (line 1825)
        # Getting the type of 'sc' (line 1825)
        sc_550830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 28), 'sc', False)
        # Obtaining the member 'spence' of a type (line 1825)
        spence_550831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1825, 28), sc_550830, 'spence')
        
        # Call to exception_to_nan(...): (line 1826)
        # Processing the call arguments (line 1826)
        # Getting the type of 'dilog' (line 1826)
        dilog_550833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 45), 'dilog', False)
        # Processing the call keyword arguments (line 1826)
        kwargs_550834 = {}
        # Getting the type of 'exception_to_nan' (line 1826)
        exception_to_nan_550832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1826)
        exception_to_nan_call_result_550835 = invoke(stypy.reporting.localization.Localization(__file__, 1826, 28), exception_to_nan_550832, *[dilog_550833], **kwargs_550834)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1827)
        list_550836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1827, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1827)
        # Adding element type (line 1827)
        
        # Call to ComplexArg(...): (line 1827)
        # Processing the call keyword arguments (line 1827)
        kwargs_550838 = {}
        # Getting the type of 'ComplexArg' (line 1827)
        ComplexArg_550837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1827, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1827)
        ComplexArg_call_result_550839 = invoke(stypy.reporting.localization.Localization(__file__, 1827, 29), ComplexArg_550837, *[], **kwargs_550838)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1827, 28), list_550836, ComplexArg_call_result_550839)
        
        # Processing the call keyword arguments (line 1825)
        float_550840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1827, 49), 'float')
        keyword_550841 = float_550840
        kwargs_550842 = {'rtol': keyword_550841}
        # Getting the type of 'assert_mpmath_equal' (line 1825)
        assert_mpmath_equal_550829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1825)
        assert_mpmath_equal_call_result_550843 = invoke(stypy.reporting.localization.Localization(__file__, 1825, 8), assert_mpmath_equal_550829, *[spence_550831, exception_to_nan_call_result_550835, list_550836], **kwargs_550842)
        
        
        # ################# End of 'test_spence_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spence_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1822)
        stypy_return_type_550844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550844)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spence_complex'
        return stypy_return_type_550844


    @norecursion
    def test_spherharm(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spherharm'
        module_type_store = module_type_store.open_function_context('test_spherharm', 1829, 4, False)
        # Assigning a type to the variable 'self' (line 1830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1830, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spherharm')
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spherharm.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spherharm', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spherharm', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spherharm(...)' code ##################


        @norecursion
        def spherharm(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'spherharm'
            module_type_store = module_type_store.open_function_context('spherharm', 1830, 8, False)
            
            # Passed parameters checking function
            spherharm.stypy_localization = localization
            spherharm.stypy_type_of_self = None
            spherharm.stypy_type_store = module_type_store
            spherharm.stypy_function_name = 'spherharm'
            spherharm.stypy_param_names_list = ['l', 'm', 'theta', 'phi']
            spherharm.stypy_varargs_param_name = None
            spherharm.stypy_kwargs_param_name = None
            spherharm.stypy_call_defaults = defaults
            spherharm.stypy_call_varargs = varargs
            spherharm.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'spherharm', ['l', 'm', 'theta', 'phi'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'spherharm', localization, ['l', 'm', 'theta', 'phi'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'spherharm(...)' code ##################

            
            
            # Getting the type of 'm' (line 1831)
            m_550845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1831, 15), 'm')
            # Getting the type of 'l' (line 1831)
            l_550846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1831, 19), 'l')
            # Applying the binary operator '>' (line 1831)
            result_gt_550847 = python_operator(stypy.reporting.localization.Localization(__file__, 1831, 15), '>', m_550845, l_550846)
            
            # Testing the type of an if condition (line 1831)
            if_condition_550848 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1831, 12), result_gt_550847)
            # Assigning a type to the variable 'if_condition_550848' (line 1831)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1831, 12), 'if_condition_550848', if_condition_550848)
            # SSA begins for if statement (line 1831)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'np' (line 1832)
            np_550849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1832, 23), 'np')
            # Obtaining the member 'nan' of a type (line 1832)
            nan_550850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1832, 23), np_550849, 'nan')
            # Assigning a type to the variable 'stypy_return_type' (line 1832)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1832, 16), 'stypy_return_type', nan_550850)
            # SSA join for if statement (line 1831)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to sph_harm(...): (line 1833)
            # Processing the call arguments (line 1833)
            # Getting the type of 'm' (line 1833)
            m_550853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 31), 'm', False)
            # Getting the type of 'l' (line 1833)
            l_550854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 34), 'l', False)
            # Getting the type of 'phi' (line 1833)
            phi_550855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 37), 'phi', False)
            # Getting the type of 'theta' (line 1833)
            theta_550856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 42), 'theta', False)
            # Processing the call keyword arguments (line 1833)
            kwargs_550857 = {}
            # Getting the type of 'sc' (line 1833)
            sc_550851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 19), 'sc', False)
            # Obtaining the member 'sph_harm' of a type (line 1833)
            sph_harm_550852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1833, 19), sc_550851, 'sph_harm')
            # Calling sph_harm(args, kwargs) (line 1833)
            sph_harm_call_result_550858 = invoke(stypy.reporting.localization.Localization(__file__, 1833, 19), sph_harm_550852, *[m_550853, l_550854, phi_550855, theta_550856], **kwargs_550857)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1833)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1833, 12), 'stypy_return_type', sph_harm_call_result_550858)
            
            # ################# End of 'spherharm(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'spherharm' in the type store
            # Getting the type of 'stypy_return_type' (line 1830)
            stypy_return_type_550859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550859)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'spherharm'
            return stypy_return_type_550859

        # Assigning a type to the variable 'spherharm' (line 1830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1830, 8), 'spherharm', spherharm)
        
        # Call to assert_mpmath_equal(...): (line 1834)
        # Processing the call arguments (line 1834)
        # Getting the type of 'spherharm' (line 1834)
        spherharm_550861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1834, 28), 'spherharm', False)
        # Getting the type of 'mpmath' (line 1835)
        mpmath_550862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1835, 28), 'mpmath', False)
        # Obtaining the member 'spherharm' of a type (line 1835)
        spherharm_550863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1835, 28), mpmath_550862, 'spherharm')
        
        # Obtaining an instance of the builtin type 'list' (line 1836)
        list_550864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1836, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1836)
        # Adding element type (line 1836)
        
        # Call to IntArg(...): (line 1836)
        # Processing the call arguments (line 1836)
        int_550866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1836, 36), 'int')
        int_550867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1836, 39), 'int')
        # Processing the call keyword arguments (line 1836)
        kwargs_550868 = {}
        # Getting the type of 'IntArg' (line 1836)
        IntArg_550865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1836, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1836)
        IntArg_call_result_550869 = invoke(stypy.reporting.localization.Localization(__file__, 1836, 29), IntArg_550865, *[int_550866, int_550867], **kwargs_550868)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1836, 28), list_550864, IntArg_call_result_550869)
        # Adding element type (line 1836)
        
        # Call to IntArg(...): (line 1836)
        # Processing the call arguments (line 1836)
        int_550871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1836, 52), 'int')
        int_550872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1836, 55), 'int')
        # Processing the call keyword arguments (line 1836)
        kwargs_550873 = {}
        # Getting the type of 'IntArg' (line 1836)
        IntArg_550870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1836, 45), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1836)
        IntArg_call_result_550874 = invoke(stypy.reporting.localization.Localization(__file__, 1836, 45), IntArg_550870, *[int_550871, int_550872], **kwargs_550873)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1836, 28), list_550864, IntArg_call_result_550874)
        # Adding element type (line 1836)
        
        # Call to Arg(...): (line 1837)
        # Processing the call keyword arguments (line 1837)
        int_550876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1837, 35), 'int')
        keyword_550877 = int_550876
        # Getting the type of 'pi' (line 1837)
        pi_550878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1837, 40), 'pi', False)
        keyword_550879 = pi_550878
        kwargs_550880 = {'a': keyword_550877, 'b': keyword_550879}
        # Getting the type of 'Arg' (line 1837)
        Arg_550875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1837, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1837)
        Arg_call_result_550881 = invoke(stypy.reporting.localization.Localization(__file__, 1837, 29), Arg_550875, *[], **kwargs_550880)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1836, 28), list_550864, Arg_call_result_550881)
        # Adding element type (line 1836)
        
        # Call to Arg(...): (line 1837)
        # Processing the call keyword arguments (line 1837)
        int_550883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1837, 51), 'int')
        keyword_550884 = int_550883
        int_550885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1837, 56), 'int')
        # Getting the type of 'pi' (line 1837)
        pi_550886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1837, 58), 'pi', False)
        # Applying the binary operator '*' (line 1837)
        result_mul_550887 = python_operator(stypy.reporting.localization.Localization(__file__, 1837, 56), '*', int_550885, pi_550886)
        
        keyword_550888 = result_mul_550887
        kwargs_550889 = {'a': keyword_550884, 'b': keyword_550888}
        # Getting the type of 'Arg' (line 1837)
        Arg_550882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1837, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1837)
        Arg_call_result_550890 = invoke(stypy.reporting.localization.Localization(__file__, 1837, 45), Arg_550882, *[], **kwargs_550889)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1836, 28), list_550864, Arg_call_result_550890)
        
        # Processing the call keyword arguments (line 1834)
        float_550891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1838, 33), 'float')
        keyword_550892 = float_550891
        int_550893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1838, 41), 'int')
        keyword_550894 = int_550893
        int_550895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1839, 32), 'int')
        keyword_550896 = int_550895
        kwargs_550897 = {'dps': keyword_550896, 'atol': keyword_550892, 'n': keyword_550894}
        # Getting the type of 'assert_mpmath_equal' (line 1834)
        assert_mpmath_equal_550860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1834, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1834)
        assert_mpmath_equal_call_result_550898 = invoke(stypy.reporting.localization.Localization(__file__, 1834, 8), assert_mpmath_equal_550860, *[spherharm_550861, spherharm_550863, list_550864], **kwargs_550897)
        
        
        # ################# End of 'test_spherharm(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spherharm' in the type store
        # Getting the type of 'stypy_return_type' (line 1829)
        stypy_return_type_550899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1829, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550899)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spherharm'
        return stypy_return_type_550899


    @norecursion
    def test_struveh(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_struveh'
        module_type_store = module_type_store.open_function_context('test_struveh', 1841, 4, False)
        # Assigning a type to the variable 'self' (line 1842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1842, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_struveh')
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_struveh.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_struveh', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_struveh', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_struveh(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1842)
        # Processing the call arguments (line 1842)
        # Getting the type of 'sc' (line 1842)
        sc_550901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1842, 28), 'sc', False)
        # Obtaining the member 'struve' of a type (line 1842)
        struve_550902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1842, 28), sc_550901, 'struve')
        
        # Call to exception_to_nan(...): (line 1843)
        # Processing the call arguments (line 1843)
        # Getting the type of 'mpmath' (line 1843)
        mpmath_550904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1843, 45), 'mpmath', False)
        # Obtaining the member 'struveh' of a type (line 1843)
        struveh_550905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1843, 45), mpmath_550904, 'struveh')
        # Processing the call keyword arguments (line 1843)
        kwargs_550906 = {}
        # Getting the type of 'exception_to_nan' (line 1843)
        exception_to_nan_550903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1843, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1843)
        exception_to_nan_call_result_550907 = invoke(stypy.reporting.localization.Localization(__file__, 1843, 28), exception_to_nan_550903, *[struveh_550905], **kwargs_550906)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1844)
        list_550908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1844, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1844)
        # Adding element type (line 1844)
        
        # Call to Arg(...): (line 1844)
        # Processing the call arguments (line 1844)
        float_550910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1844, 33), 'float')
        float_550911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1844, 39), 'float')
        # Processing the call keyword arguments (line 1844)
        kwargs_550912 = {}
        # Getting the type of 'Arg' (line 1844)
        Arg_550909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1844)
        Arg_call_result_550913 = invoke(stypy.reporting.localization.Localization(__file__, 1844, 29), Arg_550909, *[float_550910, float_550911], **kwargs_550912)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1844, 28), list_550908, Arg_call_result_550913)
        # Adding element type (line 1844)
        
        # Call to Arg(...): (line 1844)
        # Processing the call arguments (line 1844)
        int_550915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1844, 49), 'int')
        float_550916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1844, 52), 'float')
        # Processing the call keyword arguments (line 1844)
        kwargs_550917 = {}
        # Getting the type of 'Arg' (line 1844)
        Arg_550914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1844)
        Arg_call_result_550918 = invoke(stypy.reporting.localization.Localization(__file__, 1844, 45), Arg_550914, *[int_550915, float_550916], **kwargs_550917)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1844, 28), list_550908, Arg_call_result_550918)
        
        # Processing the call keyword arguments (line 1842)
        float_550919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1845, 33), 'float')
        keyword_550920 = float_550919
        kwargs_550921 = {'rtol': keyword_550920}
        # Getting the type of 'assert_mpmath_equal' (line 1842)
        assert_mpmath_equal_550900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1842, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1842)
        assert_mpmath_equal_call_result_550922 = invoke(stypy.reporting.localization.Localization(__file__, 1842, 8), assert_mpmath_equal_550900, *[struve_550902, exception_to_nan_call_result_550907, list_550908], **kwargs_550921)
        
        
        # ################# End of 'test_struveh(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_struveh' in the type store
        # Getting the type of 'stypy_return_type' (line 1841)
        stypy_return_type_550923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1841, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550923)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_struveh'
        return stypy_return_type_550923


    @norecursion
    def test_struvel(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_struvel'
        module_type_store = module_type_store.open_function_context('test_struvel', 1847, 4, False)
        # Assigning a type to the variable 'self' (line 1848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1848, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_struvel')
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_struvel.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_struvel', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_struvel', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_struvel(...)' code ##################


        @norecursion
        def mp_struvel(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_struvel'
            module_type_store = module_type_store.open_function_context('mp_struvel', 1848, 8, False)
            
            # Passed parameters checking function
            mp_struvel.stypy_localization = localization
            mp_struvel.stypy_type_of_self = None
            mp_struvel.stypy_type_store = module_type_store
            mp_struvel.stypy_function_name = 'mp_struvel'
            mp_struvel.stypy_param_names_list = ['v', 'z']
            mp_struvel.stypy_varargs_param_name = None
            mp_struvel.stypy_kwargs_param_name = None
            mp_struvel.stypy_call_defaults = defaults
            mp_struvel.stypy_call_varargs = varargs
            mp_struvel.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_struvel', ['v', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_struvel', localization, ['v', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_struvel(...)' code ##################

            
            
            # Evaluating a boolean operation
            
            # Getting the type of 'v' (line 1849)
            v_550924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1849, 15), 'v')
            int_550925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1849, 19), 'int')
            # Applying the binary operator '<' (line 1849)
            result_lt_550926 = python_operator(stypy.reporting.localization.Localization(__file__, 1849, 15), '<', v_550924, int_550925)
            
            
            # Getting the type of 'z' (line 1849)
            z_550927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1849, 25), 'z')
            
            # Getting the type of 'v' (line 1849)
            v_550928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1849, 30), 'v')
            # Applying the 'usub' unary operator (line 1849)
            result___neg___550929 = python_operator(stypy.reporting.localization.Localization(__file__, 1849, 29), 'usub', v_550928)
            
            # Applying the binary operator '<' (line 1849)
            result_lt_550930 = python_operator(stypy.reporting.localization.Localization(__file__, 1849, 25), '<', z_550927, result___neg___550929)
            
            # Applying the binary operator 'and' (line 1849)
            result_and_keyword_550931 = python_operator(stypy.reporting.localization.Localization(__file__, 1849, 15), 'and', result_lt_550926, result_lt_550930)
            
            
            # Call to abs(...): (line 1849)
            # Processing the call arguments (line 1849)
            # Getting the type of 'v' (line 1849)
            v_550933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1849, 40), 'v', False)
            # Processing the call keyword arguments (line 1849)
            kwargs_550934 = {}
            # Getting the type of 'abs' (line 1849)
            abs_550932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1849, 36), 'abs', False)
            # Calling abs(args, kwargs) (line 1849)
            abs_call_result_550935 = invoke(stypy.reporting.localization.Localization(__file__, 1849, 36), abs_550932, *[v_550933], **kwargs_550934)
            
            int_550936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1849, 45), 'int')
            # Applying the binary operator '>' (line 1849)
            result_gt_550937 = python_operator(stypy.reporting.localization.Localization(__file__, 1849, 36), '>', abs_call_result_550935, int_550936)
            
            # Applying the binary operator 'and' (line 1849)
            result_and_keyword_550938 = python_operator(stypy.reporting.localization.Localization(__file__, 1849, 15), 'and', result_and_keyword_550931, result_gt_550937)
            
            # Testing the type of an if condition (line 1849)
            if_condition_550939 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1849, 12), result_and_keyword_550938)
            # Assigning a type to the variable 'if_condition_550939' (line 1849)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1849, 12), 'if_condition_550939', if_condition_550939)
            # SSA begins for if statement (line 1849)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Attribute to a Name (line 1851):
            
            # Assigning a Attribute to a Name (line 1851):
            # Getting the type of 'mpmath' (line 1851)
            mpmath_550940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1851, 26), 'mpmath')
            # Obtaining the member 'mp' of a type (line 1851)
            mp_550941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1851, 26), mpmath_550940, 'mp')
            # Obtaining the member 'dps' of a type (line 1851)
            dps_550942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1851, 26), mp_550941, 'dps')
            # Assigning a type to the variable 'old_dps' (line 1851)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1851, 16), 'old_dps', dps_550942)
            
            # Try-finally block (line 1852)
            
            # Assigning a Num to a Attribute (line 1853):
            
            # Assigning a Num to a Attribute (line 1853):
            int_550943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1853, 36), 'int')
            # Getting the type of 'mpmath' (line 1853)
            mpmath_550944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1853, 20), 'mpmath')
            # Obtaining the member 'mp' of a type (line 1853)
            mp_550945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1853, 20), mpmath_550944, 'mp')
            # Setting the type of the member 'dps' of a type (line 1853)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1853, 20), mp_550945, 'dps', int_550943)
            
            # Call to struvel(...): (line 1854)
            # Processing the call arguments (line 1854)
            # Getting the type of 'v' (line 1854)
            v_550948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 42), 'v', False)
            # Getting the type of 'z' (line 1854)
            z_550949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 45), 'z', False)
            # Processing the call keyword arguments (line 1854)
            kwargs_550950 = {}
            # Getting the type of 'mpmath' (line 1854)
            mpmath_550946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 27), 'mpmath', False)
            # Obtaining the member 'struvel' of a type (line 1854)
            struvel_550947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1854, 27), mpmath_550946, 'struvel')
            # Calling struvel(args, kwargs) (line 1854)
            struvel_call_result_550951 = invoke(stypy.reporting.localization.Localization(__file__, 1854, 27), struvel_550947, *[v_550948, z_550949], **kwargs_550950)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1854)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1854, 20), 'stypy_return_type', struvel_call_result_550951)
            
            # finally branch of the try-finally block (line 1852)
            
            # Assigning a Name to a Attribute (line 1856):
            
            # Assigning a Name to a Attribute (line 1856):
            # Getting the type of 'old_dps' (line 1856)
            old_dps_550952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1856, 36), 'old_dps')
            # Getting the type of 'mpmath' (line 1856)
            mpmath_550953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1856, 20), 'mpmath')
            # Obtaining the member 'mp' of a type (line 1856)
            mp_550954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1856, 20), mpmath_550953, 'mp')
            # Setting the type of the member 'dps' of a type (line 1856)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1856, 20), mp_550954, 'dps', old_dps_550952)
            
            # SSA join for if statement (line 1849)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Call to struvel(...): (line 1857)
            # Processing the call arguments (line 1857)
            # Getting the type of 'v' (line 1857)
            v_550957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 34), 'v', False)
            # Getting the type of 'z' (line 1857)
            z_550958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 37), 'z', False)
            # Processing the call keyword arguments (line 1857)
            kwargs_550959 = {}
            # Getting the type of 'mpmath' (line 1857)
            mpmath_550955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 19), 'mpmath', False)
            # Obtaining the member 'struvel' of a type (line 1857)
            struvel_550956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1857, 19), mpmath_550955, 'struvel')
            # Calling struvel(args, kwargs) (line 1857)
            struvel_call_result_550960 = invoke(stypy.reporting.localization.Localization(__file__, 1857, 19), struvel_550956, *[v_550957, z_550958], **kwargs_550959)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1857)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1857, 12), 'stypy_return_type', struvel_call_result_550960)
            
            # ################# End of 'mp_struvel(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_struvel' in the type store
            # Getting the type of 'stypy_return_type' (line 1848)
            stypy_return_type_550961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1848, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550961)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_struvel'
            return stypy_return_type_550961

        # Assigning a type to the variable 'mp_struvel' (line 1848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1848, 8), 'mp_struvel', mp_struvel)
        
        # Call to assert_mpmath_equal(...): (line 1859)
        # Processing the call arguments (line 1859)
        # Getting the type of 'sc' (line 1859)
        sc_550963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 28), 'sc', False)
        # Obtaining the member 'modstruve' of a type (line 1859)
        modstruve_550964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1859, 28), sc_550963, 'modstruve')
        
        # Call to exception_to_nan(...): (line 1860)
        # Processing the call arguments (line 1860)
        # Getting the type of 'mp_struvel' (line 1860)
        mp_struvel_550966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1860, 45), 'mp_struvel', False)
        # Processing the call keyword arguments (line 1860)
        kwargs_550967 = {}
        # Getting the type of 'exception_to_nan' (line 1860)
        exception_to_nan_550965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1860, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1860)
        exception_to_nan_call_result_550968 = invoke(stypy.reporting.localization.Localization(__file__, 1860, 28), exception_to_nan_550965, *[mp_struvel_550966], **kwargs_550967)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1861)
        list_550969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1861)
        # Adding element type (line 1861)
        
        # Call to Arg(...): (line 1861)
        # Processing the call arguments (line 1861)
        float_550971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 33), 'float')
        float_550972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 39), 'float')
        # Processing the call keyword arguments (line 1861)
        kwargs_550973 = {}
        # Getting the type of 'Arg' (line 1861)
        Arg_550970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1861)
        Arg_call_result_550974 = invoke(stypy.reporting.localization.Localization(__file__, 1861, 29), Arg_550970, *[float_550971, float_550972], **kwargs_550973)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1861, 28), list_550969, Arg_call_result_550974)
        # Adding element type (line 1861)
        
        # Call to Arg(...): (line 1861)
        # Processing the call arguments (line 1861)
        int_550976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 49), 'int')
        float_550977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 52), 'float')
        # Processing the call keyword arguments (line 1861)
        kwargs_550978 = {}
        # Getting the type of 'Arg' (line 1861)
        Arg_550975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1861)
        Arg_call_result_550979 = invoke(stypy.reporting.localization.Localization(__file__, 1861, 45), Arg_550975, *[int_550976, float_550977], **kwargs_550978)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1861, 28), list_550969, Arg_call_result_550979)
        
        # Processing the call keyword arguments (line 1859)
        float_550980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1862, 33), 'float')
        keyword_550981 = float_550980
        # Getting the type of 'True' (line 1863)
        True_550982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1863, 44), 'True', False)
        keyword_550983 = True_550982
        kwargs_550984 = {'rtol': keyword_550981, 'ignore_inf_sign': keyword_550983}
        # Getting the type of 'assert_mpmath_equal' (line 1859)
        assert_mpmath_equal_550962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1859)
        assert_mpmath_equal_call_result_550985 = invoke(stypy.reporting.localization.Localization(__file__, 1859, 8), assert_mpmath_equal_550962, *[modstruve_550964, exception_to_nan_call_result_550968, list_550969], **kwargs_550984)
        
        
        # ################# End of 'test_struvel(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_struvel' in the type store
        # Getting the type of 'stypy_return_type' (line 1847)
        stypy_return_type_550986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_550986)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_struvel'
        return stypy_return_type_550986


    @norecursion
    def test_wrightomega(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrightomega'
        module_type_store = module_type_store.open_function_context('test_wrightomega', 1865, 4, False)
        # Assigning a type to the variable 'self' (line 1866)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1866, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_wrightomega')
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_wrightomega.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_wrightomega', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrightomega', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrightomega(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1866)
        # Processing the call arguments (line 1866)
        # Getting the type of 'sc' (line 1866)
        sc_550988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1866, 28), 'sc', False)
        # Obtaining the member 'wrightomega' of a type (line 1866)
        wrightomega_550989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1866, 28), sc_550988, 'wrightomega')

        @norecursion
        def _stypy_temp_lambda_440(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_440'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_440', 1867, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_440.stypy_localization = localization
            _stypy_temp_lambda_440.stypy_type_of_self = None
            _stypy_temp_lambda_440.stypy_type_store = module_type_store
            _stypy_temp_lambda_440.stypy_function_name = '_stypy_temp_lambda_440'
            _stypy_temp_lambda_440.stypy_param_names_list = ['z']
            _stypy_temp_lambda_440.stypy_varargs_param_name = None
            _stypy_temp_lambda_440.stypy_kwargs_param_name = None
            _stypy_temp_lambda_440.stypy_call_defaults = defaults
            _stypy_temp_lambda_440.stypy_call_varargs = varargs
            _stypy_temp_lambda_440.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_440', ['z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_440', ['z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to _mpmath_wrightomega(...): (line 1867)
            # Processing the call arguments (line 1867)
            # Getting the type of 'z' (line 1867)
            z_550991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 58), 'z', False)
            int_550992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1867, 61), 'int')
            # Processing the call keyword arguments (line 1867)
            kwargs_550993 = {}
            # Getting the type of '_mpmath_wrightomega' (line 1867)
            _mpmath_wrightomega_550990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 38), '_mpmath_wrightomega', False)
            # Calling _mpmath_wrightomega(args, kwargs) (line 1867)
            _mpmath_wrightomega_call_result_550994 = invoke(stypy.reporting.localization.Localization(__file__, 1867, 38), _mpmath_wrightomega_550990, *[z_550991, int_550992], **kwargs_550993)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1867)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1867, 28), 'stypy_return_type', _mpmath_wrightomega_call_result_550994)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_440' in the type store
            # Getting the type of 'stypy_return_type' (line 1867)
            stypy_return_type_550995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_550995)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_440'
            return stypy_return_type_550995

        # Assigning a type to the variable '_stypy_temp_lambda_440' (line 1867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1867, 28), '_stypy_temp_lambda_440', _stypy_temp_lambda_440)
        # Getting the type of '_stypy_temp_lambda_440' (line 1867)
        _stypy_temp_lambda_440_550996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 28), '_stypy_temp_lambda_440')
        
        # Obtaining an instance of the builtin type 'list' (line 1868)
        list_550997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1868, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1868)
        # Adding element type (line 1868)
        
        # Call to ComplexArg(...): (line 1868)
        # Processing the call keyword arguments (line 1868)
        kwargs_550999 = {}
        # Getting the type of 'ComplexArg' (line 1868)
        ComplexArg_550998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1868, 29), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1868)
        ComplexArg_call_result_551000 = invoke(stypy.reporting.localization.Localization(__file__, 1868, 29), ComplexArg_550998, *[], **kwargs_550999)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1868, 28), list_550997, ComplexArg_call_result_551000)
        
        # Processing the call keyword arguments (line 1866)
        float_551001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1868, 49), 'float')
        keyword_551002 = float_551001
        # Getting the type of 'False' (line 1868)
        False_551003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1868, 63), 'False', False)
        keyword_551004 = False_551003
        kwargs_551005 = {'rtol': keyword_551002, 'nan_ok': keyword_551004}
        # Getting the type of 'assert_mpmath_equal' (line 1866)
        assert_mpmath_equal_550987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1866, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1866)
        assert_mpmath_equal_call_result_551006 = invoke(stypy.reporting.localization.Localization(__file__, 1866, 8), assert_mpmath_equal_550987, *[wrightomega_550989, _stypy_temp_lambda_440_550996, list_550997], **kwargs_551005)
        
        
        # ################# End of 'test_wrightomega(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrightomega' in the type store
        # Getting the type of 'stypy_return_type' (line 1865)
        stypy_return_type_551007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551007)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrightomega'
        return stypy_return_type_551007


    @norecursion
    def test_zeta(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_zeta'
        module_type_store = module_type_store.open_function_context('test_zeta', 1870, 4, False)
        # Assigning a type to the variable 'self' (line 1871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1871, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_zeta')
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_zeta.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_zeta', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_zeta', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_zeta(...)' code ##################

        
        # Call to assert_mpmath_equal(...): (line 1871)
        # Processing the call arguments (line 1871)
        # Getting the type of 'sc' (line 1871)
        sc_551009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1871, 28), 'sc', False)
        # Obtaining the member 'zeta' of a type (line 1871)
        zeta_551010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1871, 28), sc_551009, 'zeta')
        
        # Call to exception_to_nan(...): (line 1872)
        # Processing the call arguments (line 1872)
        # Getting the type of 'mpmath' (line 1872)
        mpmath_551012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 45), 'mpmath', False)
        # Obtaining the member 'zeta' of a type (line 1872)
        zeta_551013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1872, 45), mpmath_551012, 'zeta')
        # Processing the call keyword arguments (line 1872)
        kwargs_551014 = {}
        # Getting the type of 'exception_to_nan' (line 1872)
        exception_to_nan_551011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1872)
        exception_to_nan_call_result_551015 = invoke(stypy.reporting.localization.Localization(__file__, 1872, 28), exception_to_nan_551011, *[zeta_551013], **kwargs_551014)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1873)
        list_551016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1873, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1873)
        # Adding element type (line 1873)
        
        # Call to Arg(...): (line 1873)
        # Processing the call keyword arguments (line 1873)
        int_551018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1873, 35), 'int')
        keyword_551019 = int_551018
        float_551020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1873, 40), 'float')
        keyword_551021 = float_551020
        # Getting the type of 'False' (line 1873)
        False_551022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 58), 'False', False)
        keyword_551023 = False_551022
        kwargs_551024 = {'a': keyword_551019, 'b': keyword_551021, 'inclusive_a': keyword_551023}
        # Getting the type of 'Arg' (line 1873)
        Arg_551017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1873)
        Arg_call_result_551025 = invoke(stypy.reporting.localization.Localization(__file__, 1873, 29), Arg_551017, *[], **kwargs_551024)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1873, 28), list_551016, Arg_call_result_551025)
        # Adding element type (line 1873)
        
        # Call to Arg(...): (line 1874)
        # Processing the call keyword arguments (line 1874)
        int_551027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1874, 35), 'int')
        keyword_551028 = int_551027
        # Getting the type of 'False' (line 1874)
        False_551029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1874, 50), 'False', False)
        keyword_551030 = False_551029
        kwargs_551031 = {'a': keyword_551028, 'inclusive_a': keyword_551030}
        # Getting the type of 'Arg' (line 1874)
        Arg_551026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1874, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1874)
        Arg_call_result_551032 = invoke(stypy.reporting.localization.Localization(__file__, 1874, 29), Arg_551026, *[], **kwargs_551031)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1873, 28), list_551016, Arg_call_result_551032)
        
        # Processing the call keyword arguments (line 1871)
        kwargs_551033 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1871)
        assert_mpmath_equal_551008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1871, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1871)
        assert_mpmath_equal_call_result_551034 = invoke(stypy.reporting.localization.Localization(__file__, 1871, 8), assert_mpmath_equal_551008, *[zeta_551010, exception_to_nan_call_result_551015, list_551016], **kwargs_551033)
        
        
        # ################# End of 'test_zeta(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_zeta' in the type store
        # Getting the type of 'stypy_return_type' (line 1870)
        stypy_return_type_551035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1870, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551035)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_zeta'
        return stypy_return_type_551035


    @norecursion
    def test_boxcox(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_boxcox'
        module_type_store = module_type_store.open_function_context('test_boxcox', 1876, 4, False)
        # Assigning a type to the variable 'self' (line 1877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1877, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_boxcox')
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_boxcox.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_boxcox', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_boxcox', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_boxcox(...)' code ##################


        @norecursion
        def mp_boxcox(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_boxcox'
            module_type_store = module_type_store.open_function_context('mp_boxcox', 1878, 8, False)
            
            # Passed parameters checking function
            mp_boxcox.stypy_localization = localization
            mp_boxcox.stypy_type_of_self = None
            mp_boxcox.stypy_type_store = module_type_store
            mp_boxcox.stypy_function_name = 'mp_boxcox'
            mp_boxcox.stypy_param_names_list = ['x', 'lmbda']
            mp_boxcox.stypy_varargs_param_name = None
            mp_boxcox.stypy_kwargs_param_name = None
            mp_boxcox.stypy_call_defaults = defaults
            mp_boxcox.stypy_call_varargs = varargs
            mp_boxcox.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_boxcox', ['x', 'lmbda'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_boxcox', localization, ['x', 'lmbda'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_boxcox(...)' code ##################

            
            # Assigning a Call to a Name (line 1879):
            
            # Assigning a Call to a Name (line 1879):
            
            # Call to mpf(...): (line 1879)
            # Processing the call arguments (line 1879)
            # Getting the type of 'x' (line 1879)
            x_551039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1879, 30), 'x', False)
            # Processing the call keyword arguments (line 1879)
            kwargs_551040 = {}
            # Getting the type of 'mpmath' (line 1879)
            mpmath_551036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1879, 16), 'mpmath', False)
            # Obtaining the member 'mp' of a type (line 1879)
            mp_551037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1879, 16), mpmath_551036, 'mp')
            # Obtaining the member 'mpf' of a type (line 1879)
            mpf_551038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1879, 16), mp_551037, 'mpf')
            # Calling mpf(args, kwargs) (line 1879)
            mpf_call_result_551041 = invoke(stypy.reporting.localization.Localization(__file__, 1879, 16), mpf_551038, *[x_551039], **kwargs_551040)
            
            # Assigning a type to the variable 'x' (line 1879)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1879, 12), 'x', mpf_call_result_551041)
            
            # Assigning a Call to a Name (line 1880):
            
            # Assigning a Call to a Name (line 1880):
            
            # Call to mpf(...): (line 1880)
            # Processing the call arguments (line 1880)
            # Getting the type of 'lmbda' (line 1880)
            lmbda_551045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1880, 34), 'lmbda', False)
            # Processing the call keyword arguments (line 1880)
            kwargs_551046 = {}
            # Getting the type of 'mpmath' (line 1880)
            mpmath_551042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1880, 20), 'mpmath', False)
            # Obtaining the member 'mp' of a type (line 1880)
            mp_551043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1880, 20), mpmath_551042, 'mp')
            # Obtaining the member 'mpf' of a type (line 1880)
            mpf_551044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1880, 20), mp_551043, 'mpf')
            # Calling mpf(args, kwargs) (line 1880)
            mpf_call_result_551047 = invoke(stypy.reporting.localization.Localization(__file__, 1880, 20), mpf_551044, *[lmbda_551045], **kwargs_551046)
            
            # Assigning a type to the variable 'lmbda' (line 1880)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1880, 12), 'lmbda', mpf_call_result_551047)
            
            
            # Getting the type of 'lmbda' (line 1881)
            lmbda_551048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1881, 15), 'lmbda')
            int_551049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1881, 24), 'int')
            # Applying the binary operator '==' (line 1881)
            result_eq_551050 = python_operator(stypy.reporting.localization.Localization(__file__, 1881, 15), '==', lmbda_551048, int_551049)
            
            # Testing the type of an if condition (line 1881)
            if_condition_551051 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1881, 12), result_eq_551050)
            # Assigning a type to the variable 'if_condition_551051' (line 1881)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1881, 12), 'if_condition_551051', if_condition_551051)
            # SSA begins for if statement (line 1881)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to log(...): (line 1882)
            # Processing the call arguments (line 1882)
            # Getting the type of 'x' (line 1882)
            x_551055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1882, 37), 'x', False)
            # Processing the call keyword arguments (line 1882)
            kwargs_551056 = {}
            # Getting the type of 'mpmath' (line 1882)
            mpmath_551052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1882, 23), 'mpmath', False)
            # Obtaining the member 'mp' of a type (line 1882)
            mp_551053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1882, 23), mpmath_551052, 'mp')
            # Obtaining the member 'log' of a type (line 1882)
            log_551054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1882, 23), mp_551053, 'log')
            # Calling log(args, kwargs) (line 1882)
            log_call_result_551057 = invoke(stypy.reporting.localization.Localization(__file__, 1882, 23), log_551054, *[x_551055], **kwargs_551056)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1882)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1882, 16), 'stypy_return_type', log_call_result_551057)
            # SSA branch for the else part of an if statement (line 1881)
            module_type_store.open_ssa_branch('else')
            
            # Call to powm1(...): (line 1884)
            # Processing the call arguments (line 1884)
            # Getting the type of 'x' (line 1884)
            x_551061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1884, 39), 'x', False)
            # Getting the type of 'lmbda' (line 1884)
            lmbda_551062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1884, 42), 'lmbda', False)
            # Processing the call keyword arguments (line 1884)
            kwargs_551063 = {}
            # Getting the type of 'mpmath' (line 1884)
            mpmath_551058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1884, 23), 'mpmath', False)
            # Obtaining the member 'mp' of a type (line 1884)
            mp_551059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1884, 23), mpmath_551058, 'mp')
            # Obtaining the member 'powm1' of a type (line 1884)
            powm1_551060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1884, 23), mp_551059, 'powm1')
            # Calling powm1(args, kwargs) (line 1884)
            powm1_call_result_551064 = invoke(stypy.reporting.localization.Localization(__file__, 1884, 23), powm1_551060, *[x_551061, lmbda_551062], **kwargs_551063)
            
            # Getting the type of 'lmbda' (line 1884)
            lmbda_551065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1884, 51), 'lmbda')
            # Applying the binary operator 'div' (line 1884)
            result_div_551066 = python_operator(stypy.reporting.localization.Localization(__file__, 1884, 23), 'div', powm1_call_result_551064, lmbda_551065)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1884)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1884, 16), 'stypy_return_type', result_div_551066)
            # SSA join for if statement (line 1881)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_boxcox(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_boxcox' in the type store
            # Getting the type of 'stypy_return_type' (line 1878)
            stypy_return_type_551067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1878, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551067)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_boxcox'
            return stypy_return_type_551067

        # Assigning a type to the variable 'mp_boxcox' (line 1878)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1878, 8), 'mp_boxcox', mp_boxcox)
        
        # Call to assert_mpmath_equal(...): (line 1886)
        # Processing the call arguments (line 1886)
        # Getting the type of 'sc' (line 1886)
        sc_551069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1886, 28), 'sc', False)
        # Obtaining the member 'boxcox' of a type (line 1886)
        boxcox_551070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1886, 28), sc_551069, 'boxcox')
        
        # Call to exception_to_nan(...): (line 1887)
        # Processing the call arguments (line 1887)
        # Getting the type of 'mp_boxcox' (line 1887)
        mp_boxcox_551072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 45), 'mp_boxcox', False)
        # Processing the call keyword arguments (line 1887)
        kwargs_551073 = {}
        # Getting the type of 'exception_to_nan' (line 1887)
        exception_to_nan_551071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1887, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1887)
        exception_to_nan_call_result_551074 = invoke(stypy.reporting.localization.Localization(__file__, 1887, 28), exception_to_nan_551071, *[mp_boxcox_551072], **kwargs_551073)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1888)
        list_551075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1888, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1888)
        # Adding element type (line 1888)
        
        # Call to Arg(...): (line 1888)
        # Processing the call keyword arguments (line 1888)
        int_551077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1888, 35), 'int')
        keyword_551078 = int_551077
        # Getting the type of 'False' (line 1888)
        False_551079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 50), 'False', False)
        keyword_551080 = False_551079
        kwargs_551081 = {'a': keyword_551078, 'inclusive_a': keyword_551080}
        # Getting the type of 'Arg' (line 1888)
        Arg_551076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1888)
        Arg_call_result_551082 = invoke(stypy.reporting.localization.Localization(__file__, 1888, 29), Arg_551076, *[], **kwargs_551081)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1888, 28), list_551075, Arg_call_result_551082)
        # Adding element type (line 1888)
        
        # Call to Arg(...): (line 1888)
        # Processing the call keyword arguments (line 1888)
        kwargs_551084 = {}
        # Getting the type of 'Arg' (line 1888)
        Arg_551083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1888, 58), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1888)
        Arg_call_result_551085 = invoke(stypy.reporting.localization.Localization(__file__, 1888, 58), Arg_551083, *[], **kwargs_551084)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1888, 28), list_551075, Arg_call_result_551085)
        
        # Processing the call keyword arguments (line 1886)
        int_551086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1889, 30), 'int')
        keyword_551087 = int_551086
        int_551088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1890, 32), 'int')
        keyword_551089 = int_551088
        float_551090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1891, 33), 'float')
        keyword_551091 = float_551090
        kwargs_551092 = {'rtol': keyword_551091, 'dps': keyword_551089, 'n': keyword_551087}
        # Getting the type of 'assert_mpmath_equal' (line 1886)
        assert_mpmath_equal_551068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1886, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1886)
        assert_mpmath_equal_call_result_551093 = invoke(stypy.reporting.localization.Localization(__file__, 1886, 8), assert_mpmath_equal_551068, *[boxcox_551070, exception_to_nan_call_result_551074, list_551075], **kwargs_551092)
        
        
        # ################# End of 'test_boxcox(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_boxcox' in the type store
        # Getting the type of 'stypy_return_type' (line 1876)
        stypy_return_type_551094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1876, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551094)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_boxcox'
        return stypy_return_type_551094


    @norecursion
    def test_boxcox1p(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_boxcox1p'
        module_type_store = module_type_store.open_function_context('test_boxcox1p', 1893, 4, False)
        # Assigning a type to the variable 'self' (line 1894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1894, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_boxcox1p')
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_boxcox1p.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_boxcox1p', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_boxcox1p', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_boxcox1p(...)' code ##################


        @norecursion
        def mp_boxcox1p(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_boxcox1p'
            module_type_store = module_type_store.open_function_context('mp_boxcox1p', 1895, 8, False)
            
            # Passed parameters checking function
            mp_boxcox1p.stypy_localization = localization
            mp_boxcox1p.stypy_type_of_self = None
            mp_boxcox1p.stypy_type_store = module_type_store
            mp_boxcox1p.stypy_function_name = 'mp_boxcox1p'
            mp_boxcox1p.stypy_param_names_list = ['x', 'lmbda']
            mp_boxcox1p.stypy_varargs_param_name = None
            mp_boxcox1p.stypy_kwargs_param_name = None
            mp_boxcox1p.stypy_call_defaults = defaults
            mp_boxcox1p.stypy_call_varargs = varargs
            mp_boxcox1p.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_boxcox1p', ['x', 'lmbda'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_boxcox1p', localization, ['x', 'lmbda'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_boxcox1p(...)' code ##################

            
            # Assigning a Call to a Name (line 1896):
            
            # Assigning a Call to a Name (line 1896):
            
            # Call to mpf(...): (line 1896)
            # Processing the call arguments (line 1896)
            # Getting the type of 'x' (line 1896)
            x_551098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1896, 30), 'x', False)
            # Processing the call keyword arguments (line 1896)
            kwargs_551099 = {}
            # Getting the type of 'mpmath' (line 1896)
            mpmath_551095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1896, 16), 'mpmath', False)
            # Obtaining the member 'mp' of a type (line 1896)
            mp_551096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1896, 16), mpmath_551095, 'mp')
            # Obtaining the member 'mpf' of a type (line 1896)
            mpf_551097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1896, 16), mp_551096, 'mpf')
            # Calling mpf(args, kwargs) (line 1896)
            mpf_call_result_551100 = invoke(stypy.reporting.localization.Localization(__file__, 1896, 16), mpf_551097, *[x_551098], **kwargs_551099)
            
            # Assigning a type to the variable 'x' (line 1896)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1896, 12), 'x', mpf_call_result_551100)
            
            # Assigning a Call to a Name (line 1897):
            
            # Assigning a Call to a Name (line 1897):
            
            # Call to mpf(...): (line 1897)
            # Processing the call arguments (line 1897)
            # Getting the type of 'lmbda' (line 1897)
            lmbda_551104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1897, 34), 'lmbda', False)
            # Processing the call keyword arguments (line 1897)
            kwargs_551105 = {}
            # Getting the type of 'mpmath' (line 1897)
            mpmath_551101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1897, 20), 'mpmath', False)
            # Obtaining the member 'mp' of a type (line 1897)
            mp_551102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1897, 20), mpmath_551101, 'mp')
            # Obtaining the member 'mpf' of a type (line 1897)
            mpf_551103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1897, 20), mp_551102, 'mpf')
            # Calling mpf(args, kwargs) (line 1897)
            mpf_call_result_551106 = invoke(stypy.reporting.localization.Localization(__file__, 1897, 20), mpf_551103, *[lmbda_551104], **kwargs_551105)
            
            # Assigning a type to the variable 'lmbda' (line 1897)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1897, 12), 'lmbda', mpf_call_result_551106)
            
            # Assigning a Call to a Name (line 1898):
            
            # Assigning a Call to a Name (line 1898):
            
            # Call to mpf(...): (line 1898)
            # Processing the call arguments (line 1898)
            int_551110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1898, 32), 'int')
            # Processing the call keyword arguments (line 1898)
            kwargs_551111 = {}
            # Getting the type of 'mpmath' (line 1898)
            mpmath_551107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1898, 18), 'mpmath', False)
            # Obtaining the member 'mp' of a type (line 1898)
            mp_551108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1898, 18), mpmath_551107, 'mp')
            # Obtaining the member 'mpf' of a type (line 1898)
            mpf_551109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1898, 18), mp_551108, 'mpf')
            # Calling mpf(args, kwargs) (line 1898)
            mpf_call_result_551112 = invoke(stypy.reporting.localization.Localization(__file__, 1898, 18), mpf_551109, *[int_551110], **kwargs_551111)
            
            # Assigning a type to the variable 'one' (line 1898)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1898, 12), 'one', mpf_call_result_551112)
            
            
            # Getting the type of 'lmbda' (line 1899)
            lmbda_551113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1899, 15), 'lmbda')
            int_551114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1899, 24), 'int')
            # Applying the binary operator '==' (line 1899)
            result_eq_551115 = python_operator(stypy.reporting.localization.Localization(__file__, 1899, 15), '==', lmbda_551113, int_551114)
            
            # Testing the type of an if condition (line 1899)
            if_condition_551116 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1899, 12), result_eq_551115)
            # Assigning a type to the variable 'if_condition_551116' (line 1899)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1899, 12), 'if_condition_551116', if_condition_551116)
            # SSA begins for if statement (line 1899)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to log(...): (line 1900)
            # Processing the call arguments (line 1900)
            # Getting the type of 'one' (line 1900)
            one_551120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 37), 'one', False)
            # Getting the type of 'x' (line 1900)
            x_551121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 43), 'x', False)
            # Applying the binary operator '+' (line 1900)
            result_add_551122 = python_operator(stypy.reporting.localization.Localization(__file__, 1900, 37), '+', one_551120, x_551121)
            
            # Processing the call keyword arguments (line 1900)
            kwargs_551123 = {}
            # Getting the type of 'mpmath' (line 1900)
            mpmath_551117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 23), 'mpmath', False)
            # Obtaining the member 'mp' of a type (line 1900)
            mp_551118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1900, 23), mpmath_551117, 'mp')
            # Obtaining the member 'log' of a type (line 1900)
            log_551119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1900, 23), mp_551118, 'log')
            # Calling log(args, kwargs) (line 1900)
            log_call_result_551124 = invoke(stypy.reporting.localization.Localization(__file__, 1900, 23), log_551119, *[result_add_551122], **kwargs_551123)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1900)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 16), 'stypy_return_type', log_call_result_551124)
            # SSA branch for the else part of an if statement (line 1899)
            module_type_store.open_ssa_branch('else')
            
            # Call to powm1(...): (line 1902)
            # Processing the call arguments (line 1902)
            # Getting the type of 'one' (line 1902)
            one_551128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 39), 'one', False)
            # Getting the type of 'x' (line 1902)
            x_551129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 45), 'x', False)
            # Applying the binary operator '+' (line 1902)
            result_add_551130 = python_operator(stypy.reporting.localization.Localization(__file__, 1902, 39), '+', one_551128, x_551129)
            
            # Getting the type of 'lmbda' (line 1902)
            lmbda_551131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 48), 'lmbda', False)
            # Processing the call keyword arguments (line 1902)
            kwargs_551132 = {}
            # Getting the type of 'mpmath' (line 1902)
            mpmath_551125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 23), 'mpmath', False)
            # Obtaining the member 'mp' of a type (line 1902)
            mp_551126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1902, 23), mpmath_551125, 'mp')
            # Obtaining the member 'powm1' of a type (line 1902)
            powm1_551127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1902, 23), mp_551126, 'powm1')
            # Calling powm1(args, kwargs) (line 1902)
            powm1_call_result_551133 = invoke(stypy.reporting.localization.Localization(__file__, 1902, 23), powm1_551127, *[result_add_551130, lmbda_551131], **kwargs_551132)
            
            # Getting the type of 'lmbda' (line 1902)
            lmbda_551134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 57), 'lmbda')
            # Applying the binary operator 'div' (line 1902)
            result_div_551135 = python_operator(stypy.reporting.localization.Localization(__file__, 1902, 23), 'div', powm1_call_result_551133, lmbda_551134)
            
            # Assigning a type to the variable 'stypy_return_type' (line 1902)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1902, 16), 'stypy_return_type', result_div_551135)
            # SSA join for if statement (line 1899)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_boxcox1p(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_boxcox1p' in the type store
            # Getting the type of 'stypy_return_type' (line 1895)
            stypy_return_type_551136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1895, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551136)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_boxcox1p'
            return stypy_return_type_551136

        # Assigning a type to the variable 'mp_boxcox1p' (line 1895)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1895, 8), 'mp_boxcox1p', mp_boxcox1p)
        
        # Call to assert_mpmath_equal(...): (line 1904)
        # Processing the call arguments (line 1904)
        # Getting the type of 'sc' (line 1904)
        sc_551138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 28), 'sc', False)
        # Obtaining the member 'boxcox1p' of a type (line 1904)
        boxcox1p_551139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1904, 28), sc_551138, 'boxcox1p')
        
        # Call to exception_to_nan(...): (line 1905)
        # Processing the call arguments (line 1905)
        # Getting the type of 'mp_boxcox1p' (line 1905)
        mp_boxcox1p_551141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1905, 45), 'mp_boxcox1p', False)
        # Processing the call keyword arguments (line 1905)
        kwargs_551142 = {}
        # Getting the type of 'exception_to_nan' (line 1905)
        exception_to_nan_551140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1905, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1905)
        exception_to_nan_call_result_551143 = invoke(stypy.reporting.localization.Localization(__file__, 1905, 28), exception_to_nan_551140, *[mp_boxcox1p_551141], **kwargs_551142)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1906)
        list_551144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1906, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1906)
        # Adding element type (line 1906)
        
        # Call to Arg(...): (line 1906)
        # Processing the call keyword arguments (line 1906)
        int_551146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1906, 35), 'int')
        keyword_551147 = int_551146
        # Getting the type of 'False' (line 1906)
        False_551148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1906, 51), 'False', False)
        keyword_551149 = False_551148
        kwargs_551150 = {'a': keyword_551147, 'inclusive_a': keyword_551149}
        # Getting the type of 'Arg' (line 1906)
        Arg_551145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1906, 29), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1906)
        Arg_call_result_551151 = invoke(stypy.reporting.localization.Localization(__file__, 1906, 29), Arg_551145, *[], **kwargs_551150)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1906, 28), list_551144, Arg_call_result_551151)
        # Adding element type (line 1906)
        
        # Call to Arg(...): (line 1906)
        # Processing the call keyword arguments (line 1906)
        kwargs_551153 = {}
        # Getting the type of 'Arg' (line 1906)
        Arg_551152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1906, 59), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1906)
        Arg_call_result_551154 = invoke(stypy.reporting.localization.Localization(__file__, 1906, 59), Arg_551152, *[], **kwargs_551153)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1906, 28), list_551144, Arg_call_result_551154)
        
        # Processing the call keyword arguments (line 1904)
        int_551155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1907, 30), 'int')
        keyword_551156 = int_551155
        int_551157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1908, 32), 'int')
        keyword_551158 = int_551157
        float_551159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1909, 33), 'float')
        keyword_551160 = float_551159
        kwargs_551161 = {'rtol': keyword_551160, 'dps': keyword_551158, 'n': keyword_551156}
        # Getting the type of 'assert_mpmath_equal' (line 1904)
        assert_mpmath_equal_551137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1904)
        assert_mpmath_equal_call_result_551162 = invoke(stypy.reporting.localization.Localization(__file__, 1904, 8), assert_mpmath_equal_551137, *[boxcox1p_551139, exception_to_nan_call_result_551143, list_551144], **kwargs_551161)
        
        
        # ################# End of 'test_boxcox1p(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_boxcox1p' in the type store
        # Getting the type of 'stypy_return_type' (line 1893)
        stypy_return_type_551163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1893, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551163)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_boxcox1p'
        return stypy_return_type_551163


    @norecursion
    def test_spherical_jn(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spherical_jn'
        module_type_store = module_type_store.open_function_context('test_spherical_jn', 1911, 4, False)
        # Assigning a type to the variable 'self' (line 1912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1912, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spherical_jn')
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spherical_jn.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spherical_jn', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spherical_jn', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spherical_jn(...)' code ##################


        @norecursion
        def mp_spherical_jn(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_spherical_jn'
            module_type_store = module_type_store.open_function_context('mp_spherical_jn', 1912, 8, False)
            
            # Passed parameters checking function
            mp_spherical_jn.stypy_localization = localization
            mp_spherical_jn.stypy_type_of_self = None
            mp_spherical_jn.stypy_type_store = module_type_store
            mp_spherical_jn.stypy_function_name = 'mp_spherical_jn'
            mp_spherical_jn.stypy_param_names_list = ['n', 'z']
            mp_spherical_jn.stypy_varargs_param_name = None
            mp_spherical_jn.stypy_kwargs_param_name = None
            mp_spherical_jn.stypy_call_defaults = defaults
            mp_spherical_jn.stypy_call_varargs = varargs
            mp_spherical_jn.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_spherical_jn', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_spherical_jn', localization, ['n', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_spherical_jn(...)' code ##################

            
            # Assigning a Call to a Name (line 1913):
            
            # Assigning a Call to a Name (line 1913):
            
            # Call to mpmathify(...): (line 1913)
            # Processing the call arguments (line 1913)
            # Getting the type of 'z' (line 1913)
            z_551166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 35), 'z', False)
            # Processing the call keyword arguments (line 1913)
            kwargs_551167 = {}
            # Getting the type of 'mpmath' (line 1913)
            mpmath_551164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 18), 'mpmath', False)
            # Obtaining the member 'mpmathify' of a type (line 1913)
            mpmathify_551165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1913, 18), mpmath_551164, 'mpmathify')
            # Calling mpmathify(args, kwargs) (line 1913)
            mpmathify_call_result_551168 = invoke(stypy.reporting.localization.Localization(__file__, 1913, 18), mpmathify_551165, *[z_551166], **kwargs_551167)
            
            # Assigning a type to the variable 'arg' (line 1913)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1913, 12), 'arg', mpmathify_call_result_551168)
            
            # Assigning a BinOp to a Name (line 1914):
            
            # Assigning a BinOp to a Name (line 1914):
            
            # Call to besselj(...): (line 1914)
            # Processing the call arguments (line 1914)
            # Getting the type of 'n' (line 1914)
            n_551171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 34), 'n', False)
            
            # Call to mpf(...): (line 1914)
            # Processing the call arguments (line 1914)
            int_551174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1914, 49), 'int')
            # Processing the call keyword arguments (line 1914)
            kwargs_551175 = {}
            # Getting the type of 'mpmath' (line 1914)
            mpmath_551172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 38), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1914)
            mpf_551173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1914, 38), mpmath_551172, 'mpf')
            # Calling mpf(args, kwargs) (line 1914)
            mpf_call_result_551176 = invoke(stypy.reporting.localization.Localization(__file__, 1914, 38), mpf_551173, *[int_551174], **kwargs_551175)
            
            int_551177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1914, 52), 'int')
            # Applying the binary operator 'div' (line 1914)
            result_div_551178 = python_operator(stypy.reporting.localization.Localization(__file__, 1914, 38), 'div', mpf_call_result_551176, int_551177)
            
            # Applying the binary operator '+' (line 1914)
            result_add_551179 = python_operator(stypy.reporting.localization.Localization(__file__, 1914, 34), '+', n_551171, result_div_551178)
            
            # Getting the type of 'arg' (line 1914)
            arg_551180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 55), 'arg', False)
            # Processing the call keyword arguments (line 1914)
            kwargs_551181 = {}
            # Getting the type of 'mpmath' (line 1914)
            mpmath_551169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 19), 'mpmath', False)
            # Obtaining the member 'besselj' of a type (line 1914)
            besselj_551170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1914, 19), mpmath_551169, 'besselj')
            # Calling besselj(args, kwargs) (line 1914)
            besselj_call_result_551182 = invoke(stypy.reporting.localization.Localization(__file__, 1914, 19), besselj_551170, *[result_add_551179, arg_551180], **kwargs_551181)
            
            
            # Call to sqrt(...): (line 1915)
            # Processing the call arguments (line 1915)
            int_551185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1915, 31), 'int')
            # Getting the type of 'arg' (line 1915)
            arg_551186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 33), 'arg', False)
            # Applying the binary operator '*' (line 1915)
            result_mul_551187 = python_operator(stypy.reporting.localization.Localization(__file__, 1915, 31), '*', int_551185, arg_551186)
            
            # Getting the type of 'mpmath' (line 1915)
            mpmath_551188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 37), 'mpmath', False)
            # Obtaining the member 'pi' of a type (line 1915)
            pi_551189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1915, 37), mpmath_551188, 'pi')
            # Applying the binary operator 'div' (line 1915)
            result_div_551190 = python_operator(stypy.reporting.localization.Localization(__file__, 1915, 36), 'div', result_mul_551187, pi_551189)
            
            # Processing the call keyword arguments (line 1915)
            kwargs_551191 = {}
            # Getting the type of 'mpmath' (line 1915)
            mpmath_551183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 19), 'mpmath', False)
            # Obtaining the member 'sqrt' of a type (line 1915)
            sqrt_551184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1915, 19), mpmath_551183, 'sqrt')
            # Calling sqrt(args, kwargs) (line 1915)
            sqrt_call_result_551192 = invoke(stypy.reporting.localization.Localization(__file__, 1915, 19), sqrt_551184, *[result_div_551190], **kwargs_551191)
            
            # Applying the binary operator 'div' (line 1914)
            result_div_551193 = python_operator(stypy.reporting.localization.Localization(__file__, 1914, 19), 'div', besselj_call_result_551182, sqrt_call_result_551192)
            
            # Assigning a type to the variable 'out' (line 1914)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1914, 12), 'out', result_div_551193)
            
            
            # Getting the type of 'arg' (line 1916)
            arg_551194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1916, 15), 'arg')
            # Obtaining the member 'imag' of a type (line 1916)
            imag_551195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1916, 15), arg_551194, 'imag')
            int_551196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1916, 27), 'int')
            # Applying the binary operator '==' (line 1916)
            result_eq_551197 = python_operator(stypy.reporting.localization.Localization(__file__, 1916, 15), '==', imag_551195, int_551196)
            
            # Testing the type of an if condition (line 1916)
            if_condition_551198 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1916, 12), result_eq_551197)
            # Assigning a type to the variable 'if_condition_551198' (line 1916)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1916, 12), 'if_condition_551198', if_condition_551198)
            # SSA begins for if statement (line 1916)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'out' (line 1917)
            out_551199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 23), 'out')
            # Obtaining the member 'real' of a type (line 1917)
            real_551200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1917, 23), out_551199, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 1917)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1917, 16), 'stypy_return_type', real_551200)
            # SSA branch for the else part of an if statement (line 1916)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'out' (line 1919)
            out_551201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 23), 'out')
            # Assigning a type to the variable 'stypy_return_type' (line 1919)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1919, 16), 'stypy_return_type', out_551201)
            # SSA join for if statement (line 1916)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_spherical_jn(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_spherical_jn' in the type store
            # Getting the type of 'stypy_return_type' (line 1912)
            stypy_return_type_551202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1912, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551202)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_spherical_jn'
            return stypy_return_type_551202

        # Assigning a type to the variable 'mp_spherical_jn' (line 1912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1912, 8), 'mp_spherical_jn', mp_spherical_jn)
        
        # Call to assert_mpmath_equal(...): (line 1921)
        # Processing the call arguments (line 1921)

        @norecursion
        def _stypy_temp_lambda_441(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_441'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_441', 1921, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_441.stypy_localization = localization
            _stypy_temp_lambda_441.stypy_type_of_self = None
            _stypy_temp_lambda_441.stypy_type_store = module_type_store
            _stypy_temp_lambda_441.stypy_function_name = '_stypy_temp_lambda_441'
            _stypy_temp_lambda_441.stypy_param_names_list = ['n', 'z']
            _stypy_temp_lambda_441.stypy_varargs_param_name = None
            _stypy_temp_lambda_441.stypy_kwargs_param_name = None
            _stypy_temp_lambda_441.stypy_call_defaults = defaults
            _stypy_temp_lambda_441.stypy_call_varargs = varargs
            _stypy_temp_lambda_441.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_441', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_441', ['n', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to spherical_jn(...): (line 1921)
            # Processing the call arguments (line 1921)
            
            # Call to int(...): (line 1921)
            # Processing the call arguments (line 1921)
            # Getting the type of 'n' (line 1921)
            n_551207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 61), 'n', False)
            # Processing the call keyword arguments (line 1921)
            kwargs_551208 = {}
            # Getting the type of 'int' (line 1921)
            int_551206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 57), 'int', False)
            # Calling int(args, kwargs) (line 1921)
            int_call_result_551209 = invoke(stypy.reporting.localization.Localization(__file__, 1921, 57), int_551206, *[n_551207], **kwargs_551208)
            
            # Getting the type of 'z' (line 1921)
            z_551210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 65), 'z', False)
            # Processing the call keyword arguments (line 1921)
            kwargs_551211 = {}
            # Getting the type of 'sc' (line 1921)
            sc_551204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 41), 'sc', False)
            # Obtaining the member 'spherical_jn' of a type (line 1921)
            spherical_jn_551205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1921, 41), sc_551204, 'spherical_jn')
            # Calling spherical_jn(args, kwargs) (line 1921)
            spherical_jn_call_result_551212 = invoke(stypy.reporting.localization.Localization(__file__, 1921, 41), spherical_jn_551205, *[int_call_result_551209, z_551210], **kwargs_551211)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1921)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1921, 28), 'stypy_return_type', spherical_jn_call_result_551212)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_441' in the type store
            # Getting the type of 'stypy_return_type' (line 1921)
            stypy_return_type_551213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551213)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_441'
            return stypy_return_type_551213

        # Assigning a type to the variable '_stypy_temp_lambda_441' (line 1921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1921, 28), '_stypy_temp_lambda_441', _stypy_temp_lambda_441)
        # Getting the type of '_stypy_temp_lambda_441' (line 1921)
        _stypy_temp_lambda_441_551214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 28), '_stypy_temp_lambda_441')
        
        # Call to exception_to_nan(...): (line 1922)
        # Processing the call arguments (line 1922)
        # Getting the type of 'mp_spherical_jn' (line 1922)
        mp_spherical_jn_551216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1922, 45), 'mp_spherical_jn', False)
        # Processing the call keyword arguments (line 1922)
        kwargs_551217 = {}
        # Getting the type of 'exception_to_nan' (line 1922)
        exception_to_nan_551215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1922, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1922)
        exception_to_nan_call_result_551218 = invoke(stypy.reporting.localization.Localization(__file__, 1922, 28), exception_to_nan_551215, *[mp_spherical_jn_551216], **kwargs_551217)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1923)
        list_551219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1923, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1923)
        # Adding element type (line 1923)
        
        # Call to IntArg(...): (line 1923)
        # Processing the call arguments (line 1923)
        int_551221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1923, 36), 'int')
        int_551222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1923, 39), 'int')
        # Processing the call keyword arguments (line 1923)
        kwargs_551223 = {}
        # Getting the type of 'IntArg' (line 1923)
        IntArg_551220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1923, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1923)
        IntArg_call_result_551224 = invoke(stypy.reporting.localization.Localization(__file__, 1923, 29), IntArg_551220, *[int_551221, int_551222], **kwargs_551223)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1923, 28), list_551219, IntArg_call_result_551224)
        # Adding element type (line 1923)
        
        # Call to Arg(...): (line 1923)
        # Processing the call arguments (line 1923)
        float_551226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1923, 49), 'float')
        float_551227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1923, 55), 'float')
        # Processing the call keyword arguments (line 1923)
        kwargs_551228 = {}
        # Getting the type of 'Arg' (line 1923)
        Arg_551225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1923, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1923)
        Arg_call_result_551229 = invoke(stypy.reporting.localization.Localization(__file__, 1923, 45), Arg_551225, *[float_551226, float_551227], **kwargs_551228)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1923, 28), list_551219, Arg_call_result_551229)
        
        # Processing the call keyword arguments (line 1921)
        int_551230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1924, 32), 'int')
        keyword_551231 = int_551230
        kwargs_551232 = {'dps': keyword_551231}
        # Getting the type of 'assert_mpmath_equal' (line 1921)
        assert_mpmath_equal_551203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1921)
        assert_mpmath_equal_call_result_551233 = invoke(stypy.reporting.localization.Localization(__file__, 1921, 8), assert_mpmath_equal_551203, *[_stypy_temp_lambda_441_551214, exception_to_nan_call_result_551218, list_551219], **kwargs_551232)
        
        
        # ################# End of 'test_spherical_jn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spherical_jn' in the type store
        # Getting the type of 'stypy_return_type' (line 1911)
        stypy_return_type_551234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551234)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spherical_jn'
        return stypy_return_type_551234


    @norecursion
    def test_spherical_jn_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spherical_jn_complex'
        module_type_store = module_type_store.open_function_context('test_spherical_jn_complex', 1926, 4, False)
        # Assigning a type to the variable 'self' (line 1927)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1927, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spherical_jn_complex')
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spherical_jn_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spherical_jn_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spherical_jn_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spherical_jn_complex(...)' code ##################


        @norecursion
        def mp_spherical_jn(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_spherical_jn'
            module_type_store = module_type_store.open_function_context('mp_spherical_jn', 1927, 8, False)
            
            # Passed parameters checking function
            mp_spherical_jn.stypy_localization = localization
            mp_spherical_jn.stypy_type_of_self = None
            mp_spherical_jn.stypy_type_store = module_type_store
            mp_spherical_jn.stypy_function_name = 'mp_spherical_jn'
            mp_spherical_jn.stypy_param_names_list = ['n', 'z']
            mp_spherical_jn.stypy_varargs_param_name = None
            mp_spherical_jn.stypy_kwargs_param_name = None
            mp_spherical_jn.stypy_call_defaults = defaults
            mp_spherical_jn.stypy_call_varargs = varargs
            mp_spherical_jn.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_spherical_jn', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_spherical_jn', localization, ['n', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_spherical_jn(...)' code ##################

            
            # Assigning a Call to a Name (line 1928):
            
            # Assigning a Call to a Name (line 1928):
            
            # Call to mpmathify(...): (line 1928)
            # Processing the call arguments (line 1928)
            # Getting the type of 'z' (line 1928)
            z_551237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1928, 35), 'z', False)
            # Processing the call keyword arguments (line 1928)
            kwargs_551238 = {}
            # Getting the type of 'mpmath' (line 1928)
            mpmath_551235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1928, 18), 'mpmath', False)
            # Obtaining the member 'mpmathify' of a type (line 1928)
            mpmathify_551236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1928, 18), mpmath_551235, 'mpmathify')
            # Calling mpmathify(args, kwargs) (line 1928)
            mpmathify_call_result_551239 = invoke(stypy.reporting.localization.Localization(__file__, 1928, 18), mpmathify_551236, *[z_551237], **kwargs_551238)
            
            # Assigning a type to the variable 'arg' (line 1928)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1928, 12), 'arg', mpmathify_call_result_551239)
            
            # Assigning a BinOp to a Name (line 1929):
            
            # Assigning a BinOp to a Name (line 1929):
            
            # Call to besselj(...): (line 1929)
            # Processing the call arguments (line 1929)
            # Getting the type of 'n' (line 1929)
            n_551242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 34), 'n', False)
            
            # Call to mpf(...): (line 1929)
            # Processing the call arguments (line 1929)
            int_551245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1929, 49), 'int')
            # Processing the call keyword arguments (line 1929)
            kwargs_551246 = {}
            # Getting the type of 'mpmath' (line 1929)
            mpmath_551243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 38), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1929)
            mpf_551244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1929, 38), mpmath_551243, 'mpf')
            # Calling mpf(args, kwargs) (line 1929)
            mpf_call_result_551247 = invoke(stypy.reporting.localization.Localization(__file__, 1929, 38), mpf_551244, *[int_551245], **kwargs_551246)
            
            int_551248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1929, 52), 'int')
            # Applying the binary operator 'div' (line 1929)
            result_div_551249 = python_operator(stypy.reporting.localization.Localization(__file__, 1929, 38), 'div', mpf_call_result_551247, int_551248)
            
            # Applying the binary operator '+' (line 1929)
            result_add_551250 = python_operator(stypy.reporting.localization.Localization(__file__, 1929, 34), '+', n_551242, result_div_551249)
            
            # Getting the type of 'arg' (line 1929)
            arg_551251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 55), 'arg', False)
            # Processing the call keyword arguments (line 1929)
            kwargs_551252 = {}
            # Getting the type of 'mpmath' (line 1929)
            mpmath_551240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 19), 'mpmath', False)
            # Obtaining the member 'besselj' of a type (line 1929)
            besselj_551241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1929, 19), mpmath_551240, 'besselj')
            # Calling besselj(args, kwargs) (line 1929)
            besselj_call_result_551253 = invoke(stypy.reporting.localization.Localization(__file__, 1929, 19), besselj_551241, *[result_add_551250, arg_551251], **kwargs_551252)
            
            
            # Call to sqrt(...): (line 1930)
            # Processing the call arguments (line 1930)
            int_551256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1930, 31), 'int')
            # Getting the type of 'arg' (line 1930)
            arg_551257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1930, 33), 'arg', False)
            # Applying the binary operator '*' (line 1930)
            result_mul_551258 = python_operator(stypy.reporting.localization.Localization(__file__, 1930, 31), '*', int_551256, arg_551257)
            
            # Getting the type of 'mpmath' (line 1930)
            mpmath_551259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1930, 37), 'mpmath', False)
            # Obtaining the member 'pi' of a type (line 1930)
            pi_551260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1930, 37), mpmath_551259, 'pi')
            # Applying the binary operator 'div' (line 1930)
            result_div_551261 = python_operator(stypy.reporting.localization.Localization(__file__, 1930, 36), 'div', result_mul_551258, pi_551260)
            
            # Processing the call keyword arguments (line 1930)
            kwargs_551262 = {}
            # Getting the type of 'mpmath' (line 1930)
            mpmath_551254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1930, 19), 'mpmath', False)
            # Obtaining the member 'sqrt' of a type (line 1930)
            sqrt_551255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1930, 19), mpmath_551254, 'sqrt')
            # Calling sqrt(args, kwargs) (line 1930)
            sqrt_call_result_551263 = invoke(stypy.reporting.localization.Localization(__file__, 1930, 19), sqrt_551255, *[result_div_551261], **kwargs_551262)
            
            # Applying the binary operator 'div' (line 1929)
            result_div_551264 = python_operator(stypy.reporting.localization.Localization(__file__, 1929, 19), 'div', besselj_call_result_551253, sqrt_call_result_551263)
            
            # Assigning a type to the variable 'out' (line 1929)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1929, 12), 'out', result_div_551264)
            
            
            # Getting the type of 'arg' (line 1931)
            arg_551265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1931, 15), 'arg')
            # Obtaining the member 'imag' of a type (line 1931)
            imag_551266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1931, 15), arg_551265, 'imag')
            int_551267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1931, 27), 'int')
            # Applying the binary operator '==' (line 1931)
            result_eq_551268 = python_operator(stypy.reporting.localization.Localization(__file__, 1931, 15), '==', imag_551266, int_551267)
            
            # Testing the type of an if condition (line 1931)
            if_condition_551269 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1931, 12), result_eq_551268)
            # Assigning a type to the variable 'if_condition_551269' (line 1931)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1931, 12), 'if_condition_551269', if_condition_551269)
            # SSA begins for if statement (line 1931)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'out' (line 1932)
            out_551270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1932, 23), 'out')
            # Obtaining the member 'real' of a type (line 1932)
            real_551271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1932, 23), out_551270, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 1932)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1932, 16), 'stypy_return_type', real_551271)
            # SSA branch for the else part of an if statement (line 1931)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'out' (line 1934)
            out_551272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1934, 23), 'out')
            # Assigning a type to the variable 'stypy_return_type' (line 1934)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1934, 16), 'stypy_return_type', out_551272)
            # SSA join for if statement (line 1931)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_spherical_jn(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_spherical_jn' in the type store
            # Getting the type of 'stypy_return_type' (line 1927)
            stypy_return_type_551273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1927, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551273)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_spherical_jn'
            return stypy_return_type_551273

        # Assigning a type to the variable 'mp_spherical_jn' (line 1927)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1927, 8), 'mp_spherical_jn', mp_spherical_jn)
        
        # Call to assert_mpmath_equal(...): (line 1936)
        # Processing the call arguments (line 1936)

        @norecursion
        def _stypy_temp_lambda_442(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_442'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_442', 1936, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_442.stypy_localization = localization
            _stypy_temp_lambda_442.stypy_type_of_self = None
            _stypy_temp_lambda_442.stypy_type_store = module_type_store
            _stypy_temp_lambda_442.stypy_function_name = '_stypy_temp_lambda_442'
            _stypy_temp_lambda_442.stypy_param_names_list = ['n', 'z']
            _stypy_temp_lambda_442.stypy_varargs_param_name = None
            _stypy_temp_lambda_442.stypy_kwargs_param_name = None
            _stypy_temp_lambda_442.stypy_call_defaults = defaults
            _stypy_temp_lambda_442.stypy_call_varargs = varargs
            _stypy_temp_lambda_442.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_442', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_442', ['n', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to spherical_jn(...): (line 1936)
            # Processing the call arguments (line 1936)
            
            # Call to int(...): (line 1936)
            # Processing the call arguments (line 1936)
            # Getting the type of 'n' (line 1936)
            n_551278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1936, 61), 'n', False)
            # Obtaining the member 'real' of a type (line 1936)
            real_551279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1936, 61), n_551278, 'real')
            # Processing the call keyword arguments (line 1936)
            kwargs_551280 = {}
            # Getting the type of 'int' (line 1936)
            int_551277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1936, 57), 'int', False)
            # Calling int(args, kwargs) (line 1936)
            int_call_result_551281 = invoke(stypy.reporting.localization.Localization(__file__, 1936, 57), int_551277, *[real_551279], **kwargs_551280)
            
            # Getting the type of 'z' (line 1936)
            z_551282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1936, 70), 'z', False)
            # Processing the call keyword arguments (line 1936)
            kwargs_551283 = {}
            # Getting the type of 'sc' (line 1936)
            sc_551275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1936, 41), 'sc', False)
            # Obtaining the member 'spherical_jn' of a type (line 1936)
            spherical_jn_551276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1936, 41), sc_551275, 'spherical_jn')
            # Calling spherical_jn(args, kwargs) (line 1936)
            spherical_jn_call_result_551284 = invoke(stypy.reporting.localization.Localization(__file__, 1936, 41), spherical_jn_551276, *[int_call_result_551281, z_551282], **kwargs_551283)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1936)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1936, 28), 'stypy_return_type', spherical_jn_call_result_551284)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_442' in the type store
            # Getting the type of 'stypy_return_type' (line 1936)
            stypy_return_type_551285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1936, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551285)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_442'
            return stypy_return_type_551285

        # Assigning a type to the variable '_stypy_temp_lambda_442' (line 1936)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1936, 28), '_stypy_temp_lambda_442', _stypy_temp_lambda_442)
        # Getting the type of '_stypy_temp_lambda_442' (line 1936)
        _stypy_temp_lambda_442_551286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1936, 28), '_stypy_temp_lambda_442')
        
        # Call to exception_to_nan(...): (line 1937)
        # Processing the call arguments (line 1937)
        # Getting the type of 'mp_spherical_jn' (line 1937)
        mp_spherical_jn_551288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1937, 45), 'mp_spherical_jn', False)
        # Processing the call keyword arguments (line 1937)
        kwargs_551289 = {}
        # Getting the type of 'exception_to_nan' (line 1937)
        exception_to_nan_551287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1937, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1937)
        exception_to_nan_call_result_551290 = invoke(stypy.reporting.localization.Localization(__file__, 1937, 28), exception_to_nan_551287, *[mp_spherical_jn_551288], **kwargs_551289)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1938)
        list_551291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1938, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1938)
        # Adding element type (line 1938)
        
        # Call to IntArg(...): (line 1938)
        # Processing the call arguments (line 1938)
        int_551293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1938, 36), 'int')
        int_551294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1938, 39), 'int')
        # Processing the call keyword arguments (line 1938)
        kwargs_551295 = {}
        # Getting the type of 'IntArg' (line 1938)
        IntArg_551292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1938, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1938)
        IntArg_call_result_551296 = invoke(stypy.reporting.localization.Localization(__file__, 1938, 29), IntArg_551292, *[int_551293, int_551294], **kwargs_551295)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1938, 28), list_551291, IntArg_call_result_551296)
        # Adding element type (line 1938)
        
        # Call to ComplexArg(...): (line 1938)
        # Processing the call keyword arguments (line 1938)
        kwargs_551298 = {}
        # Getting the type of 'ComplexArg' (line 1938)
        ComplexArg_551297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1938, 45), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1938)
        ComplexArg_call_result_551299 = invoke(stypy.reporting.localization.Localization(__file__, 1938, 45), ComplexArg_551297, *[], **kwargs_551298)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1938, 28), list_551291, ComplexArg_call_result_551299)
        
        # Processing the call keyword arguments (line 1936)
        kwargs_551300 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1936)
        assert_mpmath_equal_551274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1936, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1936)
        assert_mpmath_equal_call_result_551301 = invoke(stypy.reporting.localization.Localization(__file__, 1936, 8), assert_mpmath_equal_551274, *[_stypy_temp_lambda_442_551286, exception_to_nan_call_result_551290, list_551291], **kwargs_551300)
        
        
        # ################# End of 'test_spherical_jn_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spherical_jn_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1926)
        stypy_return_type_551302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1926, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551302)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spherical_jn_complex'
        return stypy_return_type_551302


    @norecursion
    def test_spherical_yn(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spherical_yn'
        module_type_store = module_type_store.open_function_context('test_spherical_yn', 1940, 4, False)
        # Assigning a type to the variable 'self' (line 1941)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1941, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spherical_yn')
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spherical_yn.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spherical_yn', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spherical_yn', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spherical_yn(...)' code ##################


        @norecursion
        def mp_spherical_yn(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_spherical_yn'
            module_type_store = module_type_store.open_function_context('mp_spherical_yn', 1941, 8, False)
            
            # Passed parameters checking function
            mp_spherical_yn.stypy_localization = localization
            mp_spherical_yn.stypy_type_of_self = None
            mp_spherical_yn.stypy_type_store = module_type_store
            mp_spherical_yn.stypy_function_name = 'mp_spherical_yn'
            mp_spherical_yn.stypy_param_names_list = ['n', 'z']
            mp_spherical_yn.stypy_varargs_param_name = None
            mp_spherical_yn.stypy_kwargs_param_name = None
            mp_spherical_yn.stypy_call_defaults = defaults
            mp_spherical_yn.stypy_call_varargs = varargs
            mp_spherical_yn.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_spherical_yn', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_spherical_yn', localization, ['n', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_spherical_yn(...)' code ##################

            
            # Assigning a Call to a Name (line 1942):
            
            # Assigning a Call to a Name (line 1942):
            
            # Call to mpmathify(...): (line 1942)
            # Processing the call arguments (line 1942)
            # Getting the type of 'z' (line 1942)
            z_551305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1942, 35), 'z', False)
            # Processing the call keyword arguments (line 1942)
            kwargs_551306 = {}
            # Getting the type of 'mpmath' (line 1942)
            mpmath_551303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1942, 18), 'mpmath', False)
            # Obtaining the member 'mpmathify' of a type (line 1942)
            mpmathify_551304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1942, 18), mpmath_551303, 'mpmathify')
            # Calling mpmathify(args, kwargs) (line 1942)
            mpmathify_call_result_551307 = invoke(stypy.reporting.localization.Localization(__file__, 1942, 18), mpmathify_551304, *[z_551305], **kwargs_551306)
            
            # Assigning a type to the variable 'arg' (line 1942)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1942, 12), 'arg', mpmathify_call_result_551307)
            
            # Assigning a BinOp to a Name (line 1943):
            
            # Assigning a BinOp to a Name (line 1943):
            
            # Call to bessely(...): (line 1943)
            # Processing the call arguments (line 1943)
            # Getting the type of 'n' (line 1943)
            n_551310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1943, 34), 'n', False)
            
            # Call to mpf(...): (line 1943)
            # Processing the call arguments (line 1943)
            int_551313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1943, 49), 'int')
            # Processing the call keyword arguments (line 1943)
            kwargs_551314 = {}
            # Getting the type of 'mpmath' (line 1943)
            mpmath_551311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1943, 38), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1943)
            mpf_551312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1943, 38), mpmath_551311, 'mpf')
            # Calling mpf(args, kwargs) (line 1943)
            mpf_call_result_551315 = invoke(stypy.reporting.localization.Localization(__file__, 1943, 38), mpf_551312, *[int_551313], **kwargs_551314)
            
            int_551316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1943, 52), 'int')
            # Applying the binary operator 'div' (line 1943)
            result_div_551317 = python_operator(stypy.reporting.localization.Localization(__file__, 1943, 38), 'div', mpf_call_result_551315, int_551316)
            
            # Applying the binary operator '+' (line 1943)
            result_add_551318 = python_operator(stypy.reporting.localization.Localization(__file__, 1943, 34), '+', n_551310, result_div_551317)
            
            # Getting the type of 'arg' (line 1943)
            arg_551319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1943, 55), 'arg', False)
            # Processing the call keyword arguments (line 1943)
            kwargs_551320 = {}
            # Getting the type of 'mpmath' (line 1943)
            mpmath_551308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1943, 19), 'mpmath', False)
            # Obtaining the member 'bessely' of a type (line 1943)
            bessely_551309 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1943, 19), mpmath_551308, 'bessely')
            # Calling bessely(args, kwargs) (line 1943)
            bessely_call_result_551321 = invoke(stypy.reporting.localization.Localization(__file__, 1943, 19), bessely_551309, *[result_add_551318, arg_551319], **kwargs_551320)
            
            
            # Call to sqrt(...): (line 1944)
            # Processing the call arguments (line 1944)
            int_551324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1944, 31), 'int')
            # Getting the type of 'arg' (line 1944)
            arg_551325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1944, 33), 'arg', False)
            # Applying the binary operator '*' (line 1944)
            result_mul_551326 = python_operator(stypy.reporting.localization.Localization(__file__, 1944, 31), '*', int_551324, arg_551325)
            
            # Getting the type of 'mpmath' (line 1944)
            mpmath_551327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1944, 37), 'mpmath', False)
            # Obtaining the member 'pi' of a type (line 1944)
            pi_551328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1944, 37), mpmath_551327, 'pi')
            # Applying the binary operator 'div' (line 1944)
            result_div_551329 = python_operator(stypy.reporting.localization.Localization(__file__, 1944, 36), 'div', result_mul_551326, pi_551328)
            
            # Processing the call keyword arguments (line 1944)
            kwargs_551330 = {}
            # Getting the type of 'mpmath' (line 1944)
            mpmath_551322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1944, 19), 'mpmath', False)
            # Obtaining the member 'sqrt' of a type (line 1944)
            sqrt_551323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1944, 19), mpmath_551322, 'sqrt')
            # Calling sqrt(args, kwargs) (line 1944)
            sqrt_call_result_551331 = invoke(stypy.reporting.localization.Localization(__file__, 1944, 19), sqrt_551323, *[result_div_551329], **kwargs_551330)
            
            # Applying the binary operator 'div' (line 1943)
            result_div_551332 = python_operator(stypy.reporting.localization.Localization(__file__, 1943, 19), 'div', bessely_call_result_551321, sqrt_call_result_551331)
            
            # Assigning a type to the variable 'out' (line 1943)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1943, 12), 'out', result_div_551332)
            
            
            # Getting the type of 'arg' (line 1945)
            arg_551333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 15), 'arg')
            # Obtaining the member 'imag' of a type (line 1945)
            imag_551334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1945, 15), arg_551333, 'imag')
            int_551335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1945, 27), 'int')
            # Applying the binary operator '==' (line 1945)
            result_eq_551336 = python_operator(stypy.reporting.localization.Localization(__file__, 1945, 15), '==', imag_551334, int_551335)
            
            # Testing the type of an if condition (line 1945)
            if_condition_551337 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1945, 12), result_eq_551336)
            # Assigning a type to the variable 'if_condition_551337' (line 1945)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 12), 'if_condition_551337', if_condition_551337)
            # SSA begins for if statement (line 1945)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'out' (line 1946)
            out_551338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 23), 'out')
            # Obtaining the member 'real' of a type (line 1946)
            real_551339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1946, 23), out_551338, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 1946)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1946, 16), 'stypy_return_type', real_551339)
            # SSA branch for the else part of an if statement (line 1945)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'out' (line 1948)
            out_551340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 23), 'out')
            # Assigning a type to the variable 'stypy_return_type' (line 1948)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1948, 16), 'stypy_return_type', out_551340)
            # SSA join for if statement (line 1945)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_spherical_yn(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_spherical_yn' in the type store
            # Getting the type of 'stypy_return_type' (line 1941)
            stypy_return_type_551341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1941, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551341)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_spherical_yn'
            return stypy_return_type_551341

        # Assigning a type to the variable 'mp_spherical_yn' (line 1941)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1941, 8), 'mp_spherical_yn', mp_spherical_yn)
        
        # Call to assert_mpmath_equal(...): (line 1950)
        # Processing the call arguments (line 1950)

        @norecursion
        def _stypy_temp_lambda_443(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_443'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_443', 1950, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_443.stypy_localization = localization
            _stypy_temp_lambda_443.stypy_type_of_self = None
            _stypy_temp_lambda_443.stypy_type_store = module_type_store
            _stypy_temp_lambda_443.stypy_function_name = '_stypy_temp_lambda_443'
            _stypy_temp_lambda_443.stypy_param_names_list = ['n', 'z']
            _stypy_temp_lambda_443.stypy_varargs_param_name = None
            _stypy_temp_lambda_443.stypy_kwargs_param_name = None
            _stypy_temp_lambda_443.stypy_call_defaults = defaults
            _stypy_temp_lambda_443.stypy_call_varargs = varargs
            _stypy_temp_lambda_443.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_443', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_443', ['n', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to spherical_yn(...): (line 1950)
            # Processing the call arguments (line 1950)
            
            # Call to int(...): (line 1950)
            # Processing the call arguments (line 1950)
            # Getting the type of 'n' (line 1950)
            n_551346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 61), 'n', False)
            # Processing the call keyword arguments (line 1950)
            kwargs_551347 = {}
            # Getting the type of 'int' (line 1950)
            int_551345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 57), 'int', False)
            # Calling int(args, kwargs) (line 1950)
            int_call_result_551348 = invoke(stypy.reporting.localization.Localization(__file__, 1950, 57), int_551345, *[n_551346], **kwargs_551347)
            
            # Getting the type of 'z' (line 1950)
            z_551349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 65), 'z', False)
            # Processing the call keyword arguments (line 1950)
            kwargs_551350 = {}
            # Getting the type of 'sc' (line 1950)
            sc_551343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 41), 'sc', False)
            # Obtaining the member 'spherical_yn' of a type (line 1950)
            spherical_yn_551344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1950, 41), sc_551343, 'spherical_yn')
            # Calling spherical_yn(args, kwargs) (line 1950)
            spherical_yn_call_result_551351 = invoke(stypy.reporting.localization.Localization(__file__, 1950, 41), spherical_yn_551344, *[int_call_result_551348, z_551349], **kwargs_551350)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1950)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1950, 28), 'stypy_return_type', spherical_yn_call_result_551351)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_443' in the type store
            # Getting the type of 'stypy_return_type' (line 1950)
            stypy_return_type_551352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551352)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_443'
            return stypy_return_type_551352

        # Assigning a type to the variable '_stypy_temp_lambda_443' (line 1950)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1950, 28), '_stypy_temp_lambda_443', _stypy_temp_lambda_443)
        # Getting the type of '_stypy_temp_lambda_443' (line 1950)
        _stypy_temp_lambda_443_551353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 28), '_stypy_temp_lambda_443')
        
        # Call to exception_to_nan(...): (line 1951)
        # Processing the call arguments (line 1951)
        # Getting the type of 'mp_spherical_yn' (line 1951)
        mp_spherical_yn_551355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1951, 45), 'mp_spherical_yn', False)
        # Processing the call keyword arguments (line 1951)
        kwargs_551356 = {}
        # Getting the type of 'exception_to_nan' (line 1951)
        exception_to_nan_551354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1951, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1951)
        exception_to_nan_call_result_551357 = invoke(stypy.reporting.localization.Localization(__file__, 1951, 28), exception_to_nan_551354, *[mp_spherical_yn_551355], **kwargs_551356)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1952)
        list_551358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1952, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1952)
        # Adding element type (line 1952)
        
        # Call to IntArg(...): (line 1952)
        # Processing the call arguments (line 1952)
        int_551360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1952, 36), 'int')
        int_551361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1952, 39), 'int')
        # Processing the call keyword arguments (line 1952)
        kwargs_551362 = {}
        # Getting the type of 'IntArg' (line 1952)
        IntArg_551359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1952, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1952)
        IntArg_call_result_551363 = invoke(stypy.reporting.localization.Localization(__file__, 1952, 29), IntArg_551359, *[int_551360, int_551361], **kwargs_551362)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1952, 28), list_551358, IntArg_call_result_551363)
        # Adding element type (line 1952)
        
        # Call to Arg(...): (line 1952)
        # Processing the call arguments (line 1952)
        float_551365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1952, 49), 'float')
        float_551366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1952, 56), 'float')
        # Processing the call keyword arguments (line 1952)
        kwargs_551367 = {}
        # Getting the type of 'Arg' (line 1952)
        Arg_551364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1952, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1952)
        Arg_call_result_551368 = invoke(stypy.reporting.localization.Localization(__file__, 1952, 45), Arg_551364, *[float_551365, float_551366], **kwargs_551367)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1952, 28), list_551358, Arg_call_result_551368)
        
        # Processing the call keyword arguments (line 1950)
        int_551369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1953, 32), 'int')
        keyword_551370 = int_551369
        kwargs_551371 = {'dps': keyword_551370}
        # Getting the type of 'assert_mpmath_equal' (line 1950)
        assert_mpmath_equal_551342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1950)
        assert_mpmath_equal_call_result_551372 = invoke(stypy.reporting.localization.Localization(__file__, 1950, 8), assert_mpmath_equal_551342, *[_stypy_temp_lambda_443_551353, exception_to_nan_call_result_551357, list_551358], **kwargs_551371)
        
        
        # ################# End of 'test_spherical_yn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spherical_yn' in the type store
        # Getting the type of 'stypy_return_type' (line 1940)
        stypy_return_type_551373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1940, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551373)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spherical_yn'
        return stypy_return_type_551373


    @norecursion
    def test_spherical_yn_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spherical_yn_complex'
        module_type_store = module_type_store.open_function_context('test_spherical_yn_complex', 1955, 4, False)
        # Assigning a type to the variable 'self' (line 1956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1956, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spherical_yn_complex')
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spherical_yn_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spherical_yn_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spherical_yn_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spherical_yn_complex(...)' code ##################


        @norecursion
        def mp_spherical_yn(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_spherical_yn'
            module_type_store = module_type_store.open_function_context('mp_spherical_yn', 1956, 8, False)
            
            # Passed parameters checking function
            mp_spherical_yn.stypy_localization = localization
            mp_spherical_yn.stypy_type_of_self = None
            mp_spherical_yn.stypy_type_store = module_type_store
            mp_spherical_yn.stypy_function_name = 'mp_spherical_yn'
            mp_spherical_yn.stypy_param_names_list = ['n', 'z']
            mp_spherical_yn.stypy_varargs_param_name = None
            mp_spherical_yn.stypy_kwargs_param_name = None
            mp_spherical_yn.stypy_call_defaults = defaults
            mp_spherical_yn.stypy_call_varargs = varargs
            mp_spherical_yn.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_spherical_yn', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_spherical_yn', localization, ['n', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_spherical_yn(...)' code ##################

            
            # Assigning a Call to a Name (line 1957):
            
            # Assigning a Call to a Name (line 1957):
            
            # Call to mpmathify(...): (line 1957)
            # Processing the call arguments (line 1957)
            # Getting the type of 'z' (line 1957)
            z_551376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 35), 'z', False)
            # Processing the call keyword arguments (line 1957)
            kwargs_551377 = {}
            # Getting the type of 'mpmath' (line 1957)
            mpmath_551374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 18), 'mpmath', False)
            # Obtaining the member 'mpmathify' of a type (line 1957)
            mpmathify_551375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1957, 18), mpmath_551374, 'mpmathify')
            # Calling mpmathify(args, kwargs) (line 1957)
            mpmathify_call_result_551378 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 18), mpmathify_551375, *[z_551376], **kwargs_551377)
            
            # Assigning a type to the variable 'arg' (line 1957)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1957, 12), 'arg', mpmathify_call_result_551378)
            
            # Assigning a BinOp to a Name (line 1958):
            
            # Assigning a BinOp to a Name (line 1958):
            
            # Call to bessely(...): (line 1958)
            # Processing the call arguments (line 1958)
            # Getting the type of 'n' (line 1958)
            n_551381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 34), 'n', False)
            
            # Call to mpf(...): (line 1958)
            # Processing the call arguments (line 1958)
            int_551384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1958, 49), 'int')
            # Processing the call keyword arguments (line 1958)
            kwargs_551385 = {}
            # Getting the type of 'mpmath' (line 1958)
            mpmath_551382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 38), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1958)
            mpf_551383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1958, 38), mpmath_551382, 'mpf')
            # Calling mpf(args, kwargs) (line 1958)
            mpf_call_result_551386 = invoke(stypy.reporting.localization.Localization(__file__, 1958, 38), mpf_551383, *[int_551384], **kwargs_551385)
            
            int_551387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1958, 52), 'int')
            # Applying the binary operator 'div' (line 1958)
            result_div_551388 = python_operator(stypy.reporting.localization.Localization(__file__, 1958, 38), 'div', mpf_call_result_551386, int_551387)
            
            # Applying the binary operator '+' (line 1958)
            result_add_551389 = python_operator(stypy.reporting.localization.Localization(__file__, 1958, 34), '+', n_551381, result_div_551388)
            
            # Getting the type of 'arg' (line 1958)
            arg_551390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 55), 'arg', False)
            # Processing the call keyword arguments (line 1958)
            kwargs_551391 = {}
            # Getting the type of 'mpmath' (line 1958)
            mpmath_551379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 19), 'mpmath', False)
            # Obtaining the member 'bessely' of a type (line 1958)
            bessely_551380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1958, 19), mpmath_551379, 'bessely')
            # Calling bessely(args, kwargs) (line 1958)
            bessely_call_result_551392 = invoke(stypy.reporting.localization.Localization(__file__, 1958, 19), bessely_551380, *[result_add_551389, arg_551390], **kwargs_551391)
            
            
            # Call to sqrt(...): (line 1959)
            # Processing the call arguments (line 1959)
            int_551395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1959, 31), 'int')
            # Getting the type of 'arg' (line 1959)
            arg_551396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1959, 33), 'arg', False)
            # Applying the binary operator '*' (line 1959)
            result_mul_551397 = python_operator(stypy.reporting.localization.Localization(__file__, 1959, 31), '*', int_551395, arg_551396)
            
            # Getting the type of 'mpmath' (line 1959)
            mpmath_551398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1959, 37), 'mpmath', False)
            # Obtaining the member 'pi' of a type (line 1959)
            pi_551399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1959, 37), mpmath_551398, 'pi')
            # Applying the binary operator 'div' (line 1959)
            result_div_551400 = python_operator(stypy.reporting.localization.Localization(__file__, 1959, 36), 'div', result_mul_551397, pi_551399)
            
            # Processing the call keyword arguments (line 1959)
            kwargs_551401 = {}
            # Getting the type of 'mpmath' (line 1959)
            mpmath_551393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1959, 19), 'mpmath', False)
            # Obtaining the member 'sqrt' of a type (line 1959)
            sqrt_551394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1959, 19), mpmath_551393, 'sqrt')
            # Calling sqrt(args, kwargs) (line 1959)
            sqrt_call_result_551402 = invoke(stypy.reporting.localization.Localization(__file__, 1959, 19), sqrt_551394, *[result_div_551400], **kwargs_551401)
            
            # Applying the binary operator 'div' (line 1958)
            result_div_551403 = python_operator(stypy.reporting.localization.Localization(__file__, 1958, 19), 'div', bessely_call_result_551392, sqrt_call_result_551402)
            
            # Assigning a type to the variable 'out' (line 1958)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1958, 12), 'out', result_div_551403)
            
            
            # Getting the type of 'arg' (line 1960)
            arg_551404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 15), 'arg')
            # Obtaining the member 'imag' of a type (line 1960)
            imag_551405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1960, 15), arg_551404, 'imag')
            int_551406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1960, 27), 'int')
            # Applying the binary operator '==' (line 1960)
            result_eq_551407 = python_operator(stypy.reporting.localization.Localization(__file__, 1960, 15), '==', imag_551405, int_551406)
            
            # Testing the type of an if condition (line 1960)
            if_condition_551408 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1960, 12), result_eq_551407)
            # Assigning a type to the variable 'if_condition_551408' (line 1960)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1960, 12), 'if_condition_551408', if_condition_551408)
            # SSA begins for if statement (line 1960)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'out' (line 1961)
            out_551409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 23), 'out')
            # Obtaining the member 'real' of a type (line 1961)
            real_551410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1961, 23), out_551409, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 1961)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1961, 16), 'stypy_return_type', real_551410)
            # SSA branch for the else part of an if statement (line 1960)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'out' (line 1963)
            out_551411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 23), 'out')
            # Assigning a type to the variable 'stypy_return_type' (line 1963)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1963, 16), 'stypy_return_type', out_551411)
            # SSA join for if statement (line 1960)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_spherical_yn(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_spherical_yn' in the type store
            # Getting the type of 'stypy_return_type' (line 1956)
            stypy_return_type_551412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551412)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_spherical_yn'
            return stypy_return_type_551412

        # Assigning a type to the variable 'mp_spherical_yn' (line 1956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1956, 8), 'mp_spherical_yn', mp_spherical_yn)
        
        # Call to assert_mpmath_equal(...): (line 1965)
        # Processing the call arguments (line 1965)

        @norecursion
        def _stypy_temp_lambda_444(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_444'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_444', 1965, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_444.stypy_localization = localization
            _stypy_temp_lambda_444.stypy_type_of_self = None
            _stypy_temp_lambda_444.stypy_type_store = module_type_store
            _stypy_temp_lambda_444.stypy_function_name = '_stypy_temp_lambda_444'
            _stypy_temp_lambda_444.stypy_param_names_list = ['n', 'z']
            _stypy_temp_lambda_444.stypy_varargs_param_name = None
            _stypy_temp_lambda_444.stypy_kwargs_param_name = None
            _stypy_temp_lambda_444.stypy_call_defaults = defaults
            _stypy_temp_lambda_444.stypy_call_varargs = varargs
            _stypy_temp_lambda_444.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_444', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_444', ['n', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to spherical_yn(...): (line 1965)
            # Processing the call arguments (line 1965)
            
            # Call to int(...): (line 1965)
            # Processing the call arguments (line 1965)
            # Getting the type of 'n' (line 1965)
            n_551417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 61), 'n', False)
            # Obtaining the member 'real' of a type (line 1965)
            real_551418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1965, 61), n_551417, 'real')
            # Processing the call keyword arguments (line 1965)
            kwargs_551419 = {}
            # Getting the type of 'int' (line 1965)
            int_551416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 57), 'int', False)
            # Calling int(args, kwargs) (line 1965)
            int_call_result_551420 = invoke(stypy.reporting.localization.Localization(__file__, 1965, 57), int_551416, *[real_551418], **kwargs_551419)
            
            # Getting the type of 'z' (line 1965)
            z_551421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 70), 'z', False)
            # Processing the call keyword arguments (line 1965)
            kwargs_551422 = {}
            # Getting the type of 'sc' (line 1965)
            sc_551414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 41), 'sc', False)
            # Obtaining the member 'spherical_yn' of a type (line 1965)
            spherical_yn_551415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1965, 41), sc_551414, 'spherical_yn')
            # Calling spherical_yn(args, kwargs) (line 1965)
            spherical_yn_call_result_551423 = invoke(stypy.reporting.localization.Localization(__file__, 1965, 41), spherical_yn_551415, *[int_call_result_551420, z_551421], **kwargs_551422)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1965)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1965, 28), 'stypy_return_type', spherical_yn_call_result_551423)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_444' in the type store
            # Getting the type of 'stypy_return_type' (line 1965)
            stypy_return_type_551424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551424)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_444'
            return stypy_return_type_551424

        # Assigning a type to the variable '_stypy_temp_lambda_444' (line 1965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1965, 28), '_stypy_temp_lambda_444', _stypy_temp_lambda_444)
        # Getting the type of '_stypy_temp_lambda_444' (line 1965)
        _stypy_temp_lambda_444_551425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 28), '_stypy_temp_lambda_444')
        
        # Call to exception_to_nan(...): (line 1966)
        # Processing the call arguments (line 1966)
        # Getting the type of 'mp_spherical_yn' (line 1966)
        mp_spherical_yn_551427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 45), 'mp_spherical_yn', False)
        # Processing the call keyword arguments (line 1966)
        kwargs_551428 = {}
        # Getting the type of 'exception_to_nan' (line 1966)
        exception_to_nan_551426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1966)
        exception_to_nan_call_result_551429 = invoke(stypy.reporting.localization.Localization(__file__, 1966, 28), exception_to_nan_551426, *[mp_spherical_yn_551427], **kwargs_551428)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1967)
        list_551430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1967, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1967)
        # Adding element type (line 1967)
        
        # Call to IntArg(...): (line 1967)
        # Processing the call arguments (line 1967)
        int_551432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1967, 36), 'int')
        int_551433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1967, 39), 'int')
        # Processing the call keyword arguments (line 1967)
        kwargs_551434 = {}
        # Getting the type of 'IntArg' (line 1967)
        IntArg_551431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1967, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1967)
        IntArg_call_result_551435 = invoke(stypy.reporting.localization.Localization(__file__, 1967, 29), IntArg_551431, *[int_551432, int_551433], **kwargs_551434)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1967, 28), list_551430, IntArg_call_result_551435)
        # Adding element type (line 1967)
        
        # Call to ComplexArg(...): (line 1967)
        # Processing the call keyword arguments (line 1967)
        kwargs_551437 = {}
        # Getting the type of 'ComplexArg' (line 1967)
        ComplexArg_551436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1967, 45), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1967)
        ComplexArg_call_result_551438 = invoke(stypy.reporting.localization.Localization(__file__, 1967, 45), ComplexArg_551436, *[], **kwargs_551437)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1967, 28), list_551430, ComplexArg_call_result_551438)
        
        # Processing the call keyword arguments (line 1965)
        kwargs_551439 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1965)
        assert_mpmath_equal_551413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1965)
        assert_mpmath_equal_call_result_551440 = invoke(stypy.reporting.localization.Localization(__file__, 1965, 8), assert_mpmath_equal_551413, *[_stypy_temp_lambda_444_551425, exception_to_nan_call_result_551429, list_551430], **kwargs_551439)
        
        
        # ################# End of 'test_spherical_yn_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spherical_yn_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1955)
        stypy_return_type_551441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551441)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spherical_yn_complex'
        return stypy_return_type_551441


    @norecursion
    def test_spherical_in(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spherical_in'
        module_type_store = module_type_store.open_function_context('test_spherical_in', 1969, 4, False)
        # Assigning a type to the variable 'self' (line 1970)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1970, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spherical_in')
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spherical_in.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spherical_in', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spherical_in', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spherical_in(...)' code ##################


        @norecursion
        def mp_spherical_in(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_spherical_in'
            module_type_store = module_type_store.open_function_context('mp_spherical_in', 1970, 8, False)
            
            # Passed parameters checking function
            mp_spherical_in.stypy_localization = localization
            mp_spherical_in.stypy_type_of_self = None
            mp_spherical_in.stypy_type_store = module_type_store
            mp_spherical_in.stypy_function_name = 'mp_spherical_in'
            mp_spherical_in.stypy_param_names_list = ['n', 'z']
            mp_spherical_in.stypy_varargs_param_name = None
            mp_spherical_in.stypy_kwargs_param_name = None
            mp_spherical_in.stypy_call_defaults = defaults
            mp_spherical_in.stypy_call_varargs = varargs
            mp_spherical_in.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_spherical_in', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_spherical_in', localization, ['n', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_spherical_in(...)' code ##################

            
            # Assigning a Call to a Name (line 1971):
            
            # Assigning a Call to a Name (line 1971):
            
            # Call to mpmathify(...): (line 1971)
            # Processing the call arguments (line 1971)
            # Getting the type of 'z' (line 1971)
            z_551444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1971, 35), 'z', False)
            # Processing the call keyword arguments (line 1971)
            kwargs_551445 = {}
            # Getting the type of 'mpmath' (line 1971)
            mpmath_551442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1971, 18), 'mpmath', False)
            # Obtaining the member 'mpmathify' of a type (line 1971)
            mpmathify_551443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1971, 18), mpmath_551442, 'mpmathify')
            # Calling mpmathify(args, kwargs) (line 1971)
            mpmathify_call_result_551446 = invoke(stypy.reporting.localization.Localization(__file__, 1971, 18), mpmathify_551443, *[z_551444], **kwargs_551445)
            
            # Assigning a type to the variable 'arg' (line 1971)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1971, 12), 'arg', mpmathify_call_result_551446)
            
            # Assigning a BinOp to a Name (line 1972):
            
            # Assigning a BinOp to a Name (line 1972):
            
            # Call to besseli(...): (line 1972)
            # Processing the call arguments (line 1972)
            # Getting the type of 'n' (line 1972)
            n_551449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1972, 34), 'n', False)
            
            # Call to mpf(...): (line 1972)
            # Processing the call arguments (line 1972)
            int_551452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1972, 49), 'int')
            # Processing the call keyword arguments (line 1972)
            kwargs_551453 = {}
            # Getting the type of 'mpmath' (line 1972)
            mpmath_551450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1972, 38), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1972)
            mpf_551451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1972, 38), mpmath_551450, 'mpf')
            # Calling mpf(args, kwargs) (line 1972)
            mpf_call_result_551454 = invoke(stypy.reporting.localization.Localization(__file__, 1972, 38), mpf_551451, *[int_551452], **kwargs_551453)
            
            int_551455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1972, 52), 'int')
            # Applying the binary operator 'div' (line 1972)
            result_div_551456 = python_operator(stypy.reporting.localization.Localization(__file__, 1972, 38), 'div', mpf_call_result_551454, int_551455)
            
            # Applying the binary operator '+' (line 1972)
            result_add_551457 = python_operator(stypy.reporting.localization.Localization(__file__, 1972, 34), '+', n_551449, result_div_551456)
            
            # Getting the type of 'arg' (line 1972)
            arg_551458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1972, 55), 'arg', False)
            # Processing the call keyword arguments (line 1972)
            kwargs_551459 = {}
            # Getting the type of 'mpmath' (line 1972)
            mpmath_551447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1972, 19), 'mpmath', False)
            # Obtaining the member 'besseli' of a type (line 1972)
            besseli_551448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1972, 19), mpmath_551447, 'besseli')
            # Calling besseli(args, kwargs) (line 1972)
            besseli_call_result_551460 = invoke(stypy.reporting.localization.Localization(__file__, 1972, 19), besseli_551448, *[result_add_551457, arg_551458], **kwargs_551459)
            
            
            # Call to sqrt(...): (line 1973)
            # Processing the call arguments (line 1973)
            int_551463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1973, 31), 'int')
            # Getting the type of 'arg' (line 1973)
            arg_551464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 33), 'arg', False)
            # Applying the binary operator '*' (line 1973)
            result_mul_551465 = python_operator(stypy.reporting.localization.Localization(__file__, 1973, 31), '*', int_551463, arg_551464)
            
            # Getting the type of 'mpmath' (line 1973)
            mpmath_551466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 37), 'mpmath', False)
            # Obtaining the member 'pi' of a type (line 1973)
            pi_551467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1973, 37), mpmath_551466, 'pi')
            # Applying the binary operator 'div' (line 1973)
            result_div_551468 = python_operator(stypy.reporting.localization.Localization(__file__, 1973, 36), 'div', result_mul_551465, pi_551467)
            
            # Processing the call keyword arguments (line 1973)
            kwargs_551469 = {}
            # Getting the type of 'mpmath' (line 1973)
            mpmath_551461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 19), 'mpmath', False)
            # Obtaining the member 'sqrt' of a type (line 1973)
            sqrt_551462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1973, 19), mpmath_551461, 'sqrt')
            # Calling sqrt(args, kwargs) (line 1973)
            sqrt_call_result_551470 = invoke(stypy.reporting.localization.Localization(__file__, 1973, 19), sqrt_551462, *[result_div_551468], **kwargs_551469)
            
            # Applying the binary operator 'div' (line 1972)
            result_div_551471 = python_operator(stypy.reporting.localization.Localization(__file__, 1972, 19), 'div', besseli_call_result_551460, sqrt_call_result_551470)
            
            # Assigning a type to the variable 'out' (line 1972)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1972, 12), 'out', result_div_551471)
            
            
            # Getting the type of 'arg' (line 1974)
            arg_551472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1974, 15), 'arg')
            # Obtaining the member 'imag' of a type (line 1974)
            imag_551473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1974, 15), arg_551472, 'imag')
            int_551474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1974, 27), 'int')
            # Applying the binary operator '==' (line 1974)
            result_eq_551475 = python_operator(stypy.reporting.localization.Localization(__file__, 1974, 15), '==', imag_551473, int_551474)
            
            # Testing the type of an if condition (line 1974)
            if_condition_551476 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1974, 12), result_eq_551475)
            # Assigning a type to the variable 'if_condition_551476' (line 1974)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1974, 12), 'if_condition_551476', if_condition_551476)
            # SSA begins for if statement (line 1974)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'out' (line 1975)
            out_551477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1975, 23), 'out')
            # Obtaining the member 'real' of a type (line 1975)
            real_551478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1975, 23), out_551477, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 1975)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1975, 16), 'stypy_return_type', real_551478)
            # SSA branch for the else part of an if statement (line 1974)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'out' (line 1977)
            out_551479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1977, 23), 'out')
            # Assigning a type to the variable 'stypy_return_type' (line 1977)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1977, 16), 'stypy_return_type', out_551479)
            # SSA join for if statement (line 1974)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_spherical_in(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_spherical_in' in the type store
            # Getting the type of 'stypy_return_type' (line 1970)
            stypy_return_type_551480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1970, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551480)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_spherical_in'
            return stypy_return_type_551480

        # Assigning a type to the variable 'mp_spherical_in' (line 1970)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1970, 8), 'mp_spherical_in', mp_spherical_in)
        
        # Call to assert_mpmath_equal(...): (line 1979)
        # Processing the call arguments (line 1979)

        @norecursion
        def _stypy_temp_lambda_445(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_445'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_445', 1979, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_445.stypy_localization = localization
            _stypy_temp_lambda_445.stypy_type_of_self = None
            _stypy_temp_lambda_445.stypy_type_store = module_type_store
            _stypy_temp_lambda_445.stypy_function_name = '_stypy_temp_lambda_445'
            _stypy_temp_lambda_445.stypy_param_names_list = ['n', 'z']
            _stypy_temp_lambda_445.stypy_varargs_param_name = None
            _stypy_temp_lambda_445.stypy_kwargs_param_name = None
            _stypy_temp_lambda_445.stypy_call_defaults = defaults
            _stypy_temp_lambda_445.stypy_call_varargs = varargs
            _stypy_temp_lambda_445.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_445', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_445', ['n', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to spherical_in(...): (line 1979)
            # Processing the call arguments (line 1979)
            
            # Call to int(...): (line 1979)
            # Processing the call arguments (line 1979)
            # Getting the type of 'n' (line 1979)
            n_551485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 61), 'n', False)
            # Processing the call keyword arguments (line 1979)
            kwargs_551486 = {}
            # Getting the type of 'int' (line 1979)
            int_551484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 57), 'int', False)
            # Calling int(args, kwargs) (line 1979)
            int_call_result_551487 = invoke(stypy.reporting.localization.Localization(__file__, 1979, 57), int_551484, *[n_551485], **kwargs_551486)
            
            # Getting the type of 'z' (line 1979)
            z_551488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 65), 'z', False)
            # Processing the call keyword arguments (line 1979)
            kwargs_551489 = {}
            # Getting the type of 'sc' (line 1979)
            sc_551482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 41), 'sc', False)
            # Obtaining the member 'spherical_in' of a type (line 1979)
            spherical_in_551483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1979, 41), sc_551482, 'spherical_in')
            # Calling spherical_in(args, kwargs) (line 1979)
            spherical_in_call_result_551490 = invoke(stypy.reporting.localization.Localization(__file__, 1979, 41), spherical_in_551483, *[int_call_result_551487, z_551488], **kwargs_551489)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1979)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1979, 28), 'stypy_return_type', spherical_in_call_result_551490)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_445' in the type store
            # Getting the type of 'stypy_return_type' (line 1979)
            stypy_return_type_551491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551491)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_445'
            return stypy_return_type_551491

        # Assigning a type to the variable '_stypy_temp_lambda_445' (line 1979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1979, 28), '_stypy_temp_lambda_445', _stypy_temp_lambda_445)
        # Getting the type of '_stypy_temp_lambda_445' (line 1979)
        _stypy_temp_lambda_445_551492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 28), '_stypy_temp_lambda_445')
        
        # Call to exception_to_nan(...): (line 1980)
        # Processing the call arguments (line 1980)
        # Getting the type of 'mp_spherical_in' (line 1980)
        mp_spherical_in_551494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1980, 45), 'mp_spherical_in', False)
        # Processing the call keyword arguments (line 1980)
        kwargs_551495 = {}
        # Getting the type of 'exception_to_nan' (line 1980)
        exception_to_nan_551493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1980, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1980)
        exception_to_nan_call_result_551496 = invoke(stypy.reporting.localization.Localization(__file__, 1980, 28), exception_to_nan_551493, *[mp_spherical_in_551494], **kwargs_551495)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1981)
        list_551497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1981, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1981)
        # Adding element type (line 1981)
        
        # Call to IntArg(...): (line 1981)
        # Processing the call arguments (line 1981)
        int_551499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1981, 36), 'int')
        int_551500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1981, 39), 'int')
        # Processing the call keyword arguments (line 1981)
        kwargs_551501 = {}
        # Getting the type of 'IntArg' (line 1981)
        IntArg_551498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1981)
        IntArg_call_result_551502 = invoke(stypy.reporting.localization.Localization(__file__, 1981, 29), IntArg_551498, *[int_551499, int_551500], **kwargs_551501)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1981, 28), list_551497, IntArg_call_result_551502)
        # Adding element type (line 1981)
        
        # Call to Arg(...): (line 1981)
        # Processing the call keyword arguments (line 1981)
        kwargs_551504 = {}
        # Getting the type of 'Arg' (line 1981)
        Arg_551503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 1981)
        Arg_call_result_551505 = invoke(stypy.reporting.localization.Localization(__file__, 1981, 45), Arg_551503, *[], **kwargs_551504)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1981, 28), list_551497, Arg_call_result_551505)
        
        # Processing the call keyword arguments (line 1979)
        int_551506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1982, 32), 'int')
        keyword_551507 = int_551506
        int_551508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1982, 42), 'int')
        int_551509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1982, 47), 'int')
        # Applying the binary operator '**' (line 1982)
        result_pow_551510 = python_operator(stypy.reporting.localization.Localization(__file__, 1982, 42), '**', int_551508, int_551509)
        
        keyword_551511 = result_pow_551510
        kwargs_551512 = {'dps': keyword_551507, 'atol': keyword_551511}
        # Getting the type of 'assert_mpmath_equal' (line 1979)
        assert_mpmath_equal_551481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1979)
        assert_mpmath_equal_call_result_551513 = invoke(stypy.reporting.localization.Localization(__file__, 1979, 8), assert_mpmath_equal_551481, *[_stypy_temp_lambda_445_551492, exception_to_nan_call_result_551496, list_551497], **kwargs_551512)
        
        
        # ################# End of 'test_spherical_in(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spherical_in' in the type store
        # Getting the type of 'stypy_return_type' (line 1969)
        stypy_return_type_551514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1969, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551514)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spherical_in'
        return stypy_return_type_551514


    @norecursion
    def test_spherical_in_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spherical_in_complex'
        module_type_store = module_type_store.open_function_context('test_spherical_in_complex', 1984, 4, False)
        # Assigning a type to the variable 'self' (line 1985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1985, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spherical_in_complex')
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spherical_in_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spherical_in_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spherical_in_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spherical_in_complex(...)' code ##################


        @norecursion
        def mp_spherical_in(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_spherical_in'
            module_type_store = module_type_store.open_function_context('mp_spherical_in', 1985, 8, False)
            
            # Passed parameters checking function
            mp_spherical_in.stypy_localization = localization
            mp_spherical_in.stypy_type_of_self = None
            mp_spherical_in.stypy_type_store = module_type_store
            mp_spherical_in.stypy_function_name = 'mp_spherical_in'
            mp_spherical_in.stypy_param_names_list = ['n', 'z']
            mp_spherical_in.stypy_varargs_param_name = None
            mp_spherical_in.stypy_kwargs_param_name = None
            mp_spherical_in.stypy_call_defaults = defaults
            mp_spherical_in.stypy_call_varargs = varargs
            mp_spherical_in.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_spherical_in', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_spherical_in', localization, ['n', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_spherical_in(...)' code ##################

            
            # Assigning a Call to a Name (line 1986):
            
            # Assigning a Call to a Name (line 1986):
            
            # Call to mpmathify(...): (line 1986)
            # Processing the call arguments (line 1986)
            # Getting the type of 'z' (line 1986)
            z_551517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1986, 35), 'z', False)
            # Processing the call keyword arguments (line 1986)
            kwargs_551518 = {}
            # Getting the type of 'mpmath' (line 1986)
            mpmath_551515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1986, 18), 'mpmath', False)
            # Obtaining the member 'mpmathify' of a type (line 1986)
            mpmathify_551516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1986, 18), mpmath_551515, 'mpmathify')
            # Calling mpmathify(args, kwargs) (line 1986)
            mpmathify_call_result_551519 = invoke(stypy.reporting.localization.Localization(__file__, 1986, 18), mpmathify_551516, *[z_551517], **kwargs_551518)
            
            # Assigning a type to the variable 'arg' (line 1986)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1986, 12), 'arg', mpmathify_call_result_551519)
            
            # Assigning a BinOp to a Name (line 1987):
            
            # Assigning a BinOp to a Name (line 1987):
            
            # Call to besseli(...): (line 1987)
            # Processing the call arguments (line 1987)
            # Getting the type of 'n' (line 1987)
            n_551522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1987, 34), 'n', False)
            
            # Call to mpf(...): (line 1987)
            # Processing the call arguments (line 1987)
            int_551525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1987, 49), 'int')
            # Processing the call keyword arguments (line 1987)
            kwargs_551526 = {}
            # Getting the type of 'mpmath' (line 1987)
            mpmath_551523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1987, 38), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 1987)
            mpf_551524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1987, 38), mpmath_551523, 'mpf')
            # Calling mpf(args, kwargs) (line 1987)
            mpf_call_result_551527 = invoke(stypy.reporting.localization.Localization(__file__, 1987, 38), mpf_551524, *[int_551525], **kwargs_551526)
            
            int_551528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1987, 52), 'int')
            # Applying the binary operator 'div' (line 1987)
            result_div_551529 = python_operator(stypy.reporting.localization.Localization(__file__, 1987, 38), 'div', mpf_call_result_551527, int_551528)
            
            # Applying the binary operator '+' (line 1987)
            result_add_551530 = python_operator(stypy.reporting.localization.Localization(__file__, 1987, 34), '+', n_551522, result_div_551529)
            
            # Getting the type of 'arg' (line 1987)
            arg_551531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1987, 55), 'arg', False)
            # Processing the call keyword arguments (line 1987)
            kwargs_551532 = {}
            # Getting the type of 'mpmath' (line 1987)
            mpmath_551520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1987, 19), 'mpmath', False)
            # Obtaining the member 'besseli' of a type (line 1987)
            besseli_551521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1987, 19), mpmath_551520, 'besseli')
            # Calling besseli(args, kwargs) (line 1987)
            besseli_call_result_551533 = invoke(stypy.reporting.localization.Localization(__file__, 1987, 19), besseli_551521, *[result_add_551530, arg_551531], **kwargs_551532)
            
            
            # Call to sqrt(...): (line 1988)
            # Processing the call arguments (line 1988)
            int_551536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1988, 31), 'int')
            # Getting the type of 'arg' (line 1988)
            arg_551537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 33), 'arg', False)
            # Applying the binary operator '*' (line 1988)
            result_mul_551538 = python_operator(stypy.reporting.localization.Localization(__file__, 1988, 31), '*', int_551536, arg_551537)
            
            # Getting the type of 'mpmath' (line 1988)
            mpmath_551539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 37), 'mpmath', False)
            # Obtaining the member 'pi' of a type (line 1988)
            pi_551540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1988, 37), mpmath_551539, 'pi')
            # Applying the binary operator 'div' (line 1988)
            result_div_551541 = python_operator(stypy.reporting.localization.Localization(__file__, 1988, 36), 'div', result_mul_551538, pi_551540)
            
            # Processing the call keyword arguments (line 1988)
            kwargs_551542 = {}
            # Getting the type of 'mpmath' (line 1988)
            mpmath_551534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 19), 'mpmath', False)
            # Obtaining the member 'sqrt' of a type (line 1988)
            sqrt_551535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1988, 19), mpmath_551534, 'sqrt')
            # Calling sqrt(args, kwargs) (line 1988)
            sqrt_call_result_551543 = invoke(stypy.reporting.localization.Localization(__file__, 1988, 19), sqrt_551535, *[result_div_551541], **kwargs_551542)
            
            # Applying the binary operator 'div' (line 1987)
            result_div_551544 = python_operator(stypy.reporting.localization.Localization(__file__, 1987, 19), 'div', besseli_call_result_551533, sqrt_call_result_551543)
            
            # Assigning a type to the variable 'out' (line 1987)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1987, 12), 'out', result_div_551544)
            
            
            # Getting the type of 'arg' (line 1989)
            arg_551545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1989, 15), 'arg')
            # Obtaining the member 'imag' of a type (line 1989)
            imag_551546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1989, 15), arg_551545, 'imag')
            int_551547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1989, 27), 'int')
            # Applying the binary operator '==' (line 1989)
            result_eq_551548 = python_operator(stypy.reporting.localization.Localization(__file__, 1989, 15), '==', imag_551546, int_551547)
            
            # Testing the type of an if condition (line 1989)
            if_condition_551549 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1989, 12), result_eq_551548)
            # Assigning a type to the variable 'if_condition_551549' (line 1989)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1989, 12), 'if_condition_551549', if_condition_551549)
            # SSA begins for if statement (line 1989)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'out' (line 1990)
            out_551550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1990, 23), 'out')
            # Obtaining the member 'real' of a type (line 1990)
            real_551551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1990, 23), out_551550, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 1990)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1990, 16), 'stypy_return_type', real_551551)
            # SSA branch for the else part of an if statement (line 1989)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'out' (line 1992)
            out_551552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 23), 'out')
            # Assigning a type to the variable 'stypy_return_type' (line 1992)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1992, 16), 'stypy_return_type', out_551552)
            # SSA join for if statement (line 1989)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_spherical_in(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_spherical_in' in the type store
            # Getting the type of 'stypy_return_type' (line 1985)
            stypy_return_type_551553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1985, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551553)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_spherical_in'
            return stypy_return_type_551553

        # Assigning a type to the variable 'mp_spherical_in' (line 1985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1985, 8), 'mp_spherical_in', mp_spherical_in)
        
        # Call to assert_mpmath_equal(...): (line 1994)
        # Processing the call arguments (line 1994)

        @norecursion
        def _stypy_temp_lambda_446(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_446'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_446', 1994, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_446.stypy_localization = localization
            _stypy_temp_lambda_446.stypy_type_of_self = None
            _stypy_temp_lambda_446.stypy_type_store = module_type_store
            _stypy_temp_lambda_446.stypy_function_name = '_stypy_temp_lambda_446'
            _stypy_temp_lambda_446.stypy_param_names_list = ['n', 'z']
            _stypy_temp_lambda_446.stypy_varargs_param_name = None
            _stypy_temp_lambda_446.stypy_kwargs_param_name = None
            _stypy_temp_lambda_446.stypy_call_defaults = defaults
            _stypy_temp_lambda_446.stypy_call_varargs = varargs
            _stypy_temp_lambda_446.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_446', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_446', ['n', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to spherical_in(...): (line 1994)
            # Processing the call arguments (line 1994)
            
            # Call to int(...): (line 1994)
            # Processing the call arguments (line 1994)
            # Getting the type of 'n' (line 1994)
            n_551558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1994, 61), 'n', False)
            # Obtaining the member 'real' of a type (line 1994)
            real_551559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1994, 61), n_551558, 'real')
            # Processing the call keyword arguments (line 1994)
            kwargs_551560 = {}
            # Getting the type of 'int' (line 1994)
            int_551557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1994, 57), 'int', False)
            # Calling int(args, kwargs) (line 1994)
            int_call_result_551561 = invoke(stypy.reporting.localization.Localization(__file__, 1994, 57), int_551557, *[real_551559], **kwargs_551560)
            
            # Getting the type of 'z' (line 1994)
            z_551562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1994, 70), 'z', False)
            # Processing the call keyword arguments (line 1994)
            kwargs_551563 = {}
            # Getting the type of 'sc' (line 1994)
            sc_551555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1994, 41), 'sc', False)
            # Obtaining the member 'spherical_in' of a type (line 1994)
            spherical_in_551556 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1994, 41), sc_551555, 'spherical_in')
            # Calling spherical_in(args, kwargs) (line 1994)
            spherical_in_call_result_551564 = invoke(stypy.reporting.localization.Localization(__file__, 1994, 41), spherical_in_551556, *[int_call_result_551561, z_551562], **kwargs_551563)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1994)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1994, 28), 'stypy_return_type', spherical_in_call_result_551564)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_446' in the type store
            # Getting the type of 'stypy_return_type' (line 1994)
            stypy_return_type_551565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1994, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551565)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_446'
            return stypy_return_type_551565

        # Assigning a type to the variable '_stypy_temp_lambda_446' (line 1994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1994, 28), '_stypy_temp_lambda_446', _stypy_temp_lambda_446)
        # Getting the type of '_stypy_temp_lambda_446' (line 1994)
        _stypy_temp_lambda_446_551566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1994, 28), '_stypy_temp_lambda_446')
        
        # Call to exception_to_nan(...): (line 1995)
        # Processing the call arguments (line 1995)
        # Getting the type of 'mp_spherical_in' (line 1995)
        mp_spherical_in_551568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1995, 45), 'mp_spherical_in', False)
        # Processing the call keyword arguments (line 1995)
        kwargs_551569 = {}
        # Getting the type of 'exception_to_nan' (line 1995)
        exception_to_nan_551567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1995, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 1995)
        exception_to_nan_call_result_551570 = invoke(stypy.reporting.localization.Localization(__file__, 1995, 28), exception_to_nan_551567, *[mp_spherical_in_551568], **kwargs_551569)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1996)
        list_551571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1996, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1996)
        # Adding element type (line 1996)
        
        # Call to IntArg(...): (line 1996)
        # Processing the call arguments (line 1996)
        int_551573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1996, 36), 'int')
        int_551574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1996, 39), 'int')
        # Processing the call keyword arguments (line 1996)
        kwargs_551575 = {}
        # Getting the type of 'IntArg' (line 1996)
        IntArg_551572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1996, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 1996)
        IntArg_call_result_551576 = invoke(stypy.reporting.localization.Localization(__file__, 1996, 29), IntArg_551572, *[int_551573, int_551574], **kwargs_551575)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1996, 28), list_551571, IntArg_call_result_551576)
        # Adding element type (line 1996)
        
        # Call to ComplexArg(...): (line 1996)
        # Processing the call keyword arguments (line 1996)
        kwargs_551578 = {}
        # Getting the type of 'ComplexArg' (line 1996)
        ComplexArg_551577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1996, 45), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 1996)
        ComplexArg_call_result_551579 = invoke(stypy.reporting.localization.Localization(__file__, 1996, 45), ComplexArg_551577, *[], **kwargs_551578)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1996, 28), list_551571, ComplexArg_call_result_551579)
        
        # Processing the call keyword arguments (line 1994)
        kwargs_551580 = {}
        # Getting the type of 'assert_mpmath_equal' (line 1994)
        assert_mpmath_equal_551554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1994, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 1994)
        assert_mpmath_equal_call_result_551581 = invoke(stypy.reporting.localization.Localization(__file__, 1994, 8), assert_mpmath_equal_551554, *[_stypy_temp_lambda_446_551566, exception_to_nan_call_result_551570, list_551571], **kwargs_551580)
        
        
        # ################# End of 'test_spherical_in_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spherical_in_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 1984)
        stypy_return_type_551582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1984, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551582)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spherical_in_complex'
        return stypy_return_type_551582


    @norecursion
    def test_spherical_kn(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spherical_kn'
        module_type_store = module_type_store.open_function_context('test_spherical_kn', 1998, 4, False)
        # Assigning a type to the variable 'self' (line 1999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1999, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spherical_kn')
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spherical_kn.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spherical_kn', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spherical_kn', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spherical_kn(...)' code ##################


        @norecursion
        def mp_spherical_kn(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_spherical_kn'
            module_type_store = module_type_store.open_function_context('mp_spherical_kn', 1999, 8, False)
            
            # Passed parameters checking function
            mp_spherical_kn.stypy_localization = localization
            mp_spherical_kn.stypy_type_of_self = None
            mp_spherical_kn.stypy_type_store = module_type_store
            mp_spherical_kn.stypy_function_name = 'mp_spherical_kn'
            mp_spherical_kn.stypy_param_names_list = ['n', 'z']
            mp_spherical_kn.stypy_varargs_param_name = None
            mp_spherical_kn.stypy_kwargs_param_name = None
            mp_spherical_kn.stypy_call_defaults = defaults
            mp_spherical_kn.stypy_call_varargs = varargs
            mp_spherical_kn.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_spherical_kn', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_spherical_kn', localization, ['n', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_spherical_kn(...)' code ##################

            
            # Assigning a BinOp to a Name (line 2000):
            
            # Assigning a BinOp to a Name (line 2000):
            
            # Call to besselk(...): (line 2000)
            # Processing the call arguments (line 2000)
            # Getting the type of 'n' (line 2000)
            n_551585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2000, 34), 'n', False)
            
            # Call to mpf(...): (line 2000)
            # Processing the call arguments (line 2000)
            int_551588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2000, 49), 'int')
            # Processing the call keyword arguments (line 2000)
            kwargs_551589 = {}
            # Getting the type of 'mpmath' (line 2000)
            mpmath_551586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2000, 38), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 2000)
            mpf_551587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2000, 38), mpmath_551586, 'mpf')
            # Calling mpf(args, kwargs) (line 2000)
            mpf_call_result_551590 = invoke(stypy.reporting.localization.Localization(__file__, 2000, 38), mpf_551587, *[int_551588], **kwargs_551589)
            
            int_551591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2000, 52), 'int')
            # Applying the binary operator 'div' (line 2000)
            result_div_551592 = python_operator(stypy.reporting.localization.Localization(__file__, 2000, 38), 'div', mpf_call_result_551590, int_551591)
            
            # Applying the binary operator '+' (line 2000)
            result_add_551593 = python_operator(stypy.reporting.localization.Localization(__file__, 2000, 34), '+', n_551585, result_div_551592)
            
            # Getting the type of 'z' (line 2000)
            z_551594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2000, 55), 'z', False)
            # Processing the call keyword arguments (line 2000)
            kwargs_551595 = {}
            # Getting the type of 'mpmath' (line 2000)
            mpmath_551583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2000, 19), 'mpmath', False)
            # Obtaining the member 'besselk' of a type (line 2000)
            besselk_551584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2000, 19), mpmath_551583, 'besselk')
            # Calling besselk(args, kwargs) (line 2000)
            besselk_call_result_551596 = invoke(stypy.reporting.localization.Localization(__file__, 2000, 19), besselk_551584, *[result_add_551593, z_551594], **kwargs_551595)
            
            
            # Call to sqrt(...): (line 2001)
            # Processing the call arguments (line 2001)
            # Getting the type of 'mpmath' (line 2001)
            mpmath_551599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 31), 'mpmath', False)
            # Obtaining the member 'pi' of a type (line 2001)
            pi_551600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2001, 31), mpmath_551599, 'pi')
            int_551601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2001, 42), 'int')
            
            # Call to mpmathify(...): (line 2001)
            # Processing the call arguments (line 2001)
            # Getting the type of 'z' (line 2001)
            z_551604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 61), 'z', False)
            # Processing the call keyword arguments (line 2001)
            kwargs_551605 = {}
            # Getting the type of 'mpmath' (line 2001)
            mpmath_551602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 44), 'mpmath', False)
            # Obtaining the member 'mpmathify' of a type (line 2001)
            mpmathify_551603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2001, 44), mpmath_551602, 'mpmathify')
            # Calling mpmathify(args, kwargs) (line 2001)
            mpmathify_call_result_551606 = invoke(stypy.reporting.localization.Localization(__file__, 2001, 44), mpmathify_551603, *[z_551604], **kwargs_551605)
            
            # Applying the binary operator '*' (line 2001)
            result_mul_551607 = python_operator(stypy.reporting.localization.Localization(__file__, 2001, 42), '*', int_551601, mpmathify_call_result_551606)
            
            # Applying the binary operator 'div' (line 2001)
            result_div_551608 = python_operator(stypy.reporting.localization.Localization(__file__, 2001, 31), 'div', pi_551600, result_mul_551607)
            
            # Processing the call keyword arguments (line 2001)
            kwargs_551609 = {}
            # Getting the type of 'mpmath' (line 2001)
            mpmath_551597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 19), 'mpmath', False)
            # Obtaining the member 'sqrt' of a type (line 2001)
            sqrt_551598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2001, 19), mpmath_551597, 'sqrt')
            # Calling sqrt(args, kwargs) (line 2001)
            sqrt_call_result_551610 = invoke(stypy.reporting.localization.Localization(__file__, 2001, 19), sqrt_551598, *[result_div_551608], **kwargs_551609)
            
            # Applying the binary operator '*' (line 2000)
            result_mul_551611 = python_operator(stypy.reporting.localization.Localization(__file__, 2000, 19), '*', besselk_call_result_551596, sqrt_call_result_551610)
            
            # Assigning a type to the variable 'out' (line 2000)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2000, 12), 'out', result_mul_551611)
            
            
            
            # Call to mpmathify(...): (line 2002)
            # Processing the call arguments (line 2002)
            # Getting the type of 'z' (line 2002)
            z_551614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 32), 'z', False)
            # Processing the call keyword arguments (line 2002)
            kwargs_551615 = {}
            # Getting the type of 'mpmath' (line 2002)
            mpmath_551612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 15), 'mpmath', False)
            # Obtaining the member 'mpmathify' of a type (line 2002)
            mpmathify_551613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2002, 15), mpmath_551612, 'mpmathify')
            # Calling mpmathify(args, kwargs) (line 2002)
            mpmathify_call_result_551616 = invoke(stypy.reporting.localization.Localization(__file__, 2002, 15), mpmathify_551613, *[z_551614], **kwargs_551615)
            
            # Obtaining the member 'imag' of a type (line 2002)
            imag_551617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2002, 15), mpmathify_call_result_551616, 'imag')
            int_551618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2002, 43), 'int')
            # Applying the binary operator '==' (line 2002)
            result_eq_551619 = python_operator(stypy.reporting.localization.Localization(__file__, 2002, 15), '==', imag_551617, int_551618)
            
            # Testing the type of an if condition (line 2002)
            if_condition_551620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2002, 12), result_eq_551619)
            # Assigning a type to the variable 'if_condition_551620' (line 2002)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2002, 12), 'if_condition_551620', if_condition_551620)
            # SSA begins for if statement (line 2002)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'out' (line 2003)
            out_551621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2003, 23), 'out')
            # Obtaining the member 'real' of a type (line 2003)
            real_551622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2003, 23), out_551621, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 2003)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2003, 16), 'stypy_return_type', real_551622)
            # SSA branch for the else part of an if statement (line 2002)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'out' (line 2005)
            out_551623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2005, 23), 'out')
            # Assigning a type to the variable 'stypy_return_type' (line 2005)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2005, 16), 'stypy_return_type', out_551623)
            # SSA join for if statement (line 2002)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_spherical_kn(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_spherical_kn' in the type store
            # Getting the type of 'stypy_return_type' (line 1999)
            stypy_return_type_551624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551624)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_spherical_kn'
            return stypy_return_type_551624

        # Assigning a type to the variable 'mp_spherical_kn' (line 1999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1999, 8), 'mp_spherical_kn', mp_spherical_kn)
        
        # Call to assert_mpmath_equal(...): (line 2007)
        # Processing the call arguments (line 2007)

        @norecursion
        def _stypy_temp_lambda_447(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_447'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_447', 2007, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_447.stypy_localization = localization
            _stypy_temp_lambda_447.stypy_type_of_self = None
            _stypy_temp_lambda_447.stypy_type_store = module_type_store
            _stypy_temp_lambda_447.stypy_function_name = '_stypy_temp_lambda_447'
            _stypy_temp_lambda_447.stypy_param_names_list = ['n', 'z']
            _stypy_temp_lambda_447.stypy_varargs_param_name = None
            _stypy_temp_lambda_447.stypy_kwargs_param_name = None
            _stypy_temp_lambda_447.stypy_call_defaults = defaults
            _stypy_temp_lambda_447.stypy_call_varargs = varargs
            _stypy_temp_lambda_447.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_447', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_447', ['n', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to spherical_kn(...): (line 2007)
            # Processing the call arguments (line 2007)
            
            # Call to int(...): (line 2007)
            # Processing the call arguments (line 2007)
            # Getting the type of 'n' (line 2007)
            n_551629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 61), 'n', False)
            # Processing the call keyword arguments (line 2007)
            kwargs_551630 = {}
            # Getting the type of 'int' (line 2007)
            int_551628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 57), 'int', False)
            # Calling int(args, kwargs) (line 2007)
            int_call_result_551631 = invoke(stypy.reporting.localization.Localization(__file__, 2007, 57), int_551628, *[n_551629], **kwargs_551630)
            
            # Getting the type of 'z' (line 2007)
            z_551632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 65), 'z', False)
            # Processing the call keyword arguments (line 2007)
            kwargs_551633 = {}
            # Getting the type of 'sc' (line 2007)
            sc_551626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 41), 'sc', False)
            # Obtaining the member 'spherical_kn' of a type (line 2007)
            spherical_kn_551627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2007, 41), sc_551626, 'spherical_kn')
            # Calling spherical_kn(args, kwargs) (line 2007)
            spherical_kn_call_result_551634 = invoke(stypy.reporting.localization.Localization(__file__, 2007, 41), spherical_kn_551627, *[int_call_result_551631, z_551632], **kwargs_551633)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 2007)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2007, 28), 'stypy_return_type', spherical_kn_call_result_551634)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_447' in the type store
            # Getting the type of 'stypy_return_type' (line 2007)
            stypy_return_type_551635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551635)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_447'
            return stypy_return_type_551635

        # Assigning a type to the variable '_stypy_temp_lambda_447' (line 2007)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2007, 28), '_stypy_temp_lambda_447', _stypy_temp_lambda_447)
        # Getting the type of '_stypy_temp_lambda_447' (line 2007)
        _stypy_temp_lambda_447_551636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 28), '_stypy_temp_lambda_447')
        
        # Call to exception_to_nan(...): (line 2008)
        # Processing the call arguments (line 2008)
        # Getting the type of 'mp_spherical_kn' (line 2008)
        mp_spherical_kn_551638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2008, 45), 'mp_spherical_kn', False)
        # Processing the call keyword arguments (line 2008)
        kwargs_551639 = {}
        # Getting the type of 'exception_to_nan' (line 2008)
        exception_to_nan_551637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2008, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 2008)
        exception_to_nan_call_result_551640 = invoke(stypy.reporting.localization.Localization(__file__, 2008, 28), exception_to_nan_551637, *[mp_spherical_kn_551638], **kwargs_551639)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2009)
        list_551641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2009, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2009)
        # Adding element type (line 2009)
        
        # Call to IntArg(...): (line 2009)
        # Processing the call arguments (line 2009)
        int_551643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2009, 36), 'int')
        int_551644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2009, 39), 'int')
        # Processing the call keyword arguments (line 2009)
        kwargs_551645 = {}
        # Getting the type of 'IntArg' (line 2009)
        IntArg_551642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2009, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 2009)
        IntArg_call_result_551646 = invoke(stypy.reporting.localization.Localization(__file__, 2009, 29), IntArg_551642, *[int_551643, int_551644], **kwargs_551645)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2009, 28), list_551641, IntArg_call_result_551646)
        # Adding element type (line 2009)
        
        # Call to Arg(...): (line 2009)
        # Processing the call keyword arguments (line 2009)
        kwargs_551648 = {}
        # Getting the type of 'Arg' (line 2009)
        Arg_551647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2009, 45), 'Arg', False)
        # Calling Arg(args, kwargs) (line 2009)
        Arg_call_result_551649 = invoke(stypy.reporting.localization.Localization(__file__, 2009, 45), Arg_551647, *[], **kwargs_551648)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2009, 28), list_551641, Arg_call_result_551649)
        
        # Processing the call keyword arguments (line 2007)
        int_551650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2010, 32), 'int')
        keyword_551651 = int_551650
        kwargs_551652 = {'dps': keyword_551651}
        # Getting the type of 'assert_mpmath_equal' (line 2007)
        assert_mpmath_equal_551625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 2007)
        assert_mpmath_equal_call_result_551653 = invoke(stypy.reporting.localization.Localization(__file__, 2007, 8), assert_mpmath_equal_551625, *[_stypy_temp_lambda_447_551636, exception_to_nan_call_result_551640, list_551641], **kwargs_551652)
        
        
        # ################# End of 'test_spherical_kn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spherical_kn' in the type store
        # Getting the type of 'stypy_return_type' (line 1998)
        stypy_return_type_551654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1998, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551654)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spherical_kn'
        return stypy_return_type_551654


    @norecursion
    def test_spherical_kn_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spherical_kn_complex'
        module_type_store = module_type_store.open_function_context('test_spherical_kn_complex', 2012, 4, False)
        # Assigning a type to the variable 'self' (line 2013)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2013, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_localization', localization)
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_function_name', 'TestSystematic.test_spherical_kn_complex')
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSystematic.test_spherical_kn_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.test_spherical_kn_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spherical_kn_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spherical_kn_complex(...)' code ##################


        @norecursion
        def mp_spherical_kn(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mp_spherical_kn'
            module_type_store = module_type_store.open_function_context('mp_spherical_kn', 2014, 8, False)
            
            # Passed parameters checking function
            mp_spherical_kn.stypy_localization = localization
            mp_spherical_kn.stypy_type_of_self = None
            mp_spherical_kn.stypy_type_store = module_type_store
            mp_spherical_kn.stypy_function_name = 'mp_spherical_kn'
            mp_spherical_kn.stypy_param_names_list = ['n', 'z']
            mp_spherical_kn.stypy_varargs_param_name = None
            mp_spherical_kn.stypy_kwargs_param_name = None
            mp_spherical_kn.stypy_call_defaults = defaults
            mp_spherical_kn.stypy_call_varargs = varargs
            mp_spherical_kn.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mp_spherical_kn', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mp_spherical_kn', localization, ['n', 'z'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mp_spherical_kn(...)' code ##################

            
            # Assigning a Call to a Name (line 2015):
            
            # Assigning a Call to a Name (line 2015):
            
            # Call to mpmathify(...): (line 2015)
            # Processing the call arguments (line 2015)
            # Getting the type of 'z' (line 2015)
            z_551657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 35), 'z', False)
            # Processing the call keyword arguments (line 2015)
            kwargs_551658 = {}
            # Getting the type of 'mpmath' (line 2015)
            mpmath_551655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 18), 'mpmath', False)
            # Obtaining the member 'mpmathify' of a type (line 2015)
            mpmathify_551656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 18), mpmath_551655, 'mpmathify')
            # Calling mpmathify(args, kwargs) (line 2015)
            mpmathify_call_result_551659 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 18), mpmathify_551656, *[z_551657], **kwargs_551658)
            
            # Assigning a type to the variable 'arg' (line 2015)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2015, 12), 'arg', mpmathify_call_result_551659)
            
            # Assigning a BinOp to a Name (line 2016):
            
            # Assigning a BinOp to a Name (line 2016):
            
            # Call to besselk(...): (line 2016)
            # Processing the call arguments (line 2016)
            # Getting the type of 'n' (line 2016)
            n_551662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2016, 34), 'n', False)
            
            # Call to mpf(...): (line 2016)
            # Processing the call arguments (line 2016)
            int_551665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2016, 49), 'int')
            # Processing the call keyword arguments (line 2016)
            kwargs_551666 = {}
            # Getting the type of 'mpmath' (line 2016)
            mpmath_551663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2016, 38), 'mpmath', False)
            # Obtaining the member 'mpf' of a type (line 2016)
            mpf_551664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2016, 38), mpmath_551663, 'mpf')
            # Calling mpf(args, kwargs) (line 2016)
            mpf_call_result_551667 = invoke(stypy.reporting.localization.Localization(__file__, 2016, 38), mpf_551664, *[int_551665], **kwargs_551666)
            
            int_551668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2016, 52), 'int')
            # Applying the binary operator 'div' (line 2016)
            result_div_551669 = python_operator(stypy.reporting.localization.Localization(__file__, 2016, 38), 'div', mpf_call_result_551667, int_551668)
            
            # Applying the binary operator '+' (line 2016)
            result_add_551670 = python_operator(stypy.reporting.localization.Localization(__file__, 2016, 34), '+', n_551662, result_div_551669)
            
            # Getting the type of 'arg' (line 2016)
            arg_551671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2016, 55), 'arg', False)
            # Processing the call keyword arguments (line 2016)
            kwargs_551672 = {}
            # Getting the type of 'mpmath' (line 2016)
            mpmath_551660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2016, 19), 'mpmath', False)
            # Obtaining the member 'besselk' of a type (line 2016)
            besselk_551661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2016, 19), mpmath_551660, 'besselk')
            # Calling besselk(args, kwargs) (line 2016)
            besselk_call_result_551673 = invoke(stypy.reporting.localization.Localization(__file__, 2016, 19), besselk_551661, *[result_add_551670, arg_551671], **kwargs_551672)
            
            
            # Call to sqrt(...): (line 2017)
            # Processing the call arguments (line 2017)
            int_551676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2017, 31), 'int')
            # Getting the type of 'arg' (line 2017)
            arg_551677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2017, 33), 'arg', False)
            # Applying the binary operator '*' (line 2017)
            result_mul_551678 = python_operator(stypy.reporting.localization.Localization(__file__, 2017, 31), '*', int_551676, arg_551677)
            
            # Getting the type of 'mpmath' (line 2017)
            mpmath_551679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2017, 37), 'mpmath', False)
            # Obtaining the member 'pi' of a type (line 2017)
            pi_551680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2017, 37), mpmath_551679, 'pi')
            # Applying the binary operator 'div' (line 2017)
            result_div_551681 = python_operator(stypy.reporting.localization.Localization(__file__, 2017, 36), 'div', result_mul_551678, pi_551680)
            
            # Processing the call keyword arguments (line 2017)
            kwargs_551682 = {}
            # Getting the type of 'mpmath' (line 2017)
            mpmath_551674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2017, 19), 'mpmath', False)
            # Obtaining the member 'sqrt' of a type (line 2017)
            sqrt_551675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2017, 19), mpmath_551674, 'sqrt')
            # Calling sqrt(args, kwargs) (line 2017)
            sqrt_call_result_551683 = invoke(stypy.reporting.localization.Localization(__file__, 2017, 19), sqrt_551675, *[result_div_551681], **kwargs_551682)
            
            # Applying the binary operator 'div' (line 2016)
            result_div_551684 = python_operator(stypy.reporting.localization.Localization(__file__, 2016, 19), 'div', besselk_call_result_551673, sqrt_call_result_551683)
            
            # Assigning a type to the variable 'out' (line 2016)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2016, 12), 'out', result_div_551684)
            
            
            # Getting the type of 'arg' (line 2018)
            arg_551685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2018, 15), 'arg')
            # Obtaining the member 'imag' of a type (line 2018)
            imag_551686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2018, 15), arg_551685, 'imag')
            int_551687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2018, 27), 'int')
            # Applying the binary operator '==' (line 2018)
            result_eq_551688 = python_operator(stypy.reporting.localization.Localization(__file__, 2018, 15), '==', imag_551686, int_551687)
            
            # Testing the type of an if condition (line 2018)
            if_condition_551689 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2018, 12), result_eq_551688)
            # Assigning a type to the variable 'if_condition_551689' (line 2018)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2018, 12), 'if_condition_551689', if_condition_551689)
            # SSA begins for if statement (line 2018)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'out' (line 2019)
            out_551690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2019, 23), 'out')
            # Obtaining the member 'real' of a type (line 2019)
            real_551691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2019, 23), out_551690, 'real')
            # Assigning a type to the variable 'stypy_return_type' (line 2019)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2019, 16), 'stypy_return_type', real_551691)
            # SSA branch for the else part of an if statement (line 2018)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'out' (line 2021)
            out_551692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2021, 23), 'out')
            # Assigning a type to the variable 'stypy_return_type' (line 2021)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2021, 16), 'stypy_return_type', out_551692)
            # SSA join for if statement (line 2018)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # ################# End of 'mp_spherical_kn(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mp_spherical_kn' in the type store
            # Getting the type of 'stypy_return_type' (line 2014)
            stypy_return_type_551693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2014, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551693)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mp_spherical_kn'
            return stypy_return_type_551693

        # Assigning a type to the variable 'mp_spherical_kn' (line 2014)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2014, 8), 'mp_spherical_kn', mp_spherical_kn)
        
        # Call to assert_mpmath_equal(...): (line 2023)
        # Processing the call arguments (line 2023)

        @norecursion
        def _stypy_temp_lambda_448(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_448'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_448', 2023, 28, True)
            # Passed parameters checking function
            _stypy_temp_lambda_448.stypy_localization = localization
            _stypy_temp_lambda_448.stypy_type_of_self = None
            _stypy_temp_lambda_448.stypy_type_store = module_type_store
            _stypy_temp_lambda_448.stypy_function_name = '_stypy_temp_lambda_448'
            _stypy_temp_lambda_448.stypy_param_names_list = ['n', 'z']
            _stypy_temp_lambda_448.stypy_varargs_param_name = None
            _stypy_temp_lambda_448.stypy_kwargs_param_name = None
            _stypy_temp_lambda_448.stypy_call_defaults = defaults
            _stypy_temp_lambda_448.stypy_call_varargs = varargs
            _stypy_temp_lambda_448.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_448', ['n', 'z'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_448', ['n', 'z'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to spherical_kn(...): (line 2023)
            # Processing the call arguments (line 2023)
            
            # Call to int(...): (line 2023)
            # Processing the call arguments (line 2023)
            # Getting the type of 'n' (line 2023)
            n_551698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 61), 'n', False)
            # Obtaining the member 'real' of a type (line 2023)
            real_551699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2023, 61), n_551698, 'real')
            # Processing the call keyword arguments (line 2023)
            kwargs_551700 = {}
            # Getting the type of 'int' (line 2023)
            int_551697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 57), 'int', False)
            # Calling int(args, kwargs) (line 2023)
            int_call_result_551701 = invoke(stypy.reporting.localization.Localization(__file__, 2023, 57), int_551697, *[real_551699], **kwargs_551700)
            
            # Getting the type of 'z' (line 2023)
            z_551702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 70), 'z', False)
            # Processing the call keyword arguments (line 2023)
            kwargs_551703 = {}
            # Getting the type of 'sc' (line 2023)
            sc_551695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 41), 'sc', False)
            # Obtaining the member 'spherical_kn' of a type (line 2023)
            spherical_kn_551696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2023, 41), sc_551695, 'spherical_kn')
            # Calling spherical_kn(args, kwargs) (line 2023)
            spherical_kn_call_result_551704 = invoke(stypy.reporting.localization.Localization(__file__, 2023, 41), spherical_kn_551696, *[int_call_result_551701, z_551702], **kwargs_551703)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 2023)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2023, 28), 'stypy_return_type', spherical_kn_call_result_551704)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_448' in the type store
            # Getting the type of 'stypy_return_type' (line 2023)
            stypy_return_type_551705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 28), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_551705)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_448'
            return stypy_return_type_551705

        # Assigning a type to the variable '_stypy_temp_lambda_448' (line 2023)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2023, 28), '_stypy_temp_lambda_448', _stypy_temp_lambda_448)
        # Getting the type of '_stypy_temp_lambda_448' (line 2023)
        _stypy_temp_lambda_448_551706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 28), '_stypy_temp_lambda_448')
        
        # Call to exception_to_nan(...): (line 2024)
        # Processing the call arguments (line 2024)
        # Getting the type of 'mp_spherical_kn' (line 2024)
        mp_spherical_kn_551708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2024, 45), 'mp_spherical_kn', False)
        # Processing the call keyword arguments (line 2024)
        kwargs_551709 = {}
        # Getting the type of 'exception_to_nan' (line 2024)
        exception_to_nan_551707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2024, 28), 'exception_to_nan', False)
        # Calling exception_to_nan(args, kwargs) (line 2024)
        exception_to_nan_call_result_551710 = invoke(stypy.reporting.localization.Localization(__file__, 2024, 28), exception_to_nan_551707, *[mp_spherical_kn_551708], **kwargs_551709)
        
        
        # Obtaining an instance of the builtin type 'list' (line 2025)
        list_551711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2025, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2025)
        # Adding element type (line 2025)
        
        # Call to IntArg(...): (line 2025)
        # Processing the call arguments (line 2025)
        int_551713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2025, 36), 'int')
        int_551714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2025, 39), 'int')
        # Processing the call keyword arguments (line 2025)
        kwargs_551715 = {}
        # Getting the type of 'IntArg' (line 2025)
        IntArg_551712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2025, 29), 'IntArg', False)
        # Calling IntArg(args, kwargs) (line 2025)
        IntArg_call_result_551716 = invoke(stypy.reporting.localization.Localization(__file__, 2025, 29), IntArg_551712, *[int_551713, int_551714], **kwargs_551715)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2025, 28), list_551711, IntArg_call_result_551716)
        # Adding element type (line 2025)
        
        # Call to ComplexArg(...): (line 2025)
        # Processing the call keyword arguments (line 2025)
        kwargs_551718 = {}
        # Getting the type of 'ComplexArg' (line 2025)
        ComplexArg_551717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2025, 45), 'ComplexArg', False)
        # Calling ComplexArg(args, kwargs) (line 2025)
        ComplexArg_call_result_551719 = invoke(stypy.reporting.localization.Localization(__file__, 2025, 45), ComplexArg_551717, *[], **kwargs_551718)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2025, 28), list_551711, ComplexArg_call_result_551719)
        
        # Processing the call keyword arguments (line 2023)
        int_551720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2026, 32), 'int')
        keyword_551721 = int_551720
        kwargs_551722 = {'dps': keyword_551721}
        # Getting the type of 'assert_mpmath_equal' (line 2023)
        assert_mpmath_equal_551694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 8), 'assert_mpmath_equal', False)
        # Calling assert_mpmath_equal(args, kwargs) (line 2023)
        assert_mpmath_equal_call_result_551723 = invoke(stypy.reporting.localization.Localization(__file__, 2023, 8), assert_mpmath_equal_551694, *[_stypy_temp_lambda_448_551706, exception_to_nan_call_result_551710, list_551711], **kwargs_551722)
        
        
        # ################# End of 'test_spherical_kn_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spherical_kn_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 2012)
        stypy_return_type_551724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2012, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_551724)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spherical_kn_complex'
        return stypy_return_type_551724


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 675, 0, False)
        # Assigning a type to the variable 'self' (line 676)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 676, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSystematic.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestSystematic' (line 675)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 0), 'TestSystematic', TestSystematic)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
