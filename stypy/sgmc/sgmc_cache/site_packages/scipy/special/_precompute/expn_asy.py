
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''Precompute the polynomials for the asymptotic expansion of the
2: generalized exponential integral.
3: 
4: Sources
5: -------
6: [1] NIST, Digital Library of Mathematical Functions,
7:     http://dlmf.nist.gov/8.20#ii
8: 
9: '''
10: from __future__ import division, print_function, absolute_import
11: 
12: import os
13: from scipy._lib._numpy_compat import suppress_warnings
14: 
15: try:
16:     # Can remove when sympy #11255 is resolved; see
17:     # https://github.com/sympy/sympy/issues/11255
18:     with suppress_warnings() as sup:
19:         sup.filter(DeprecationWarning, "inspect.getargspec.. is deprecated")
20:         import sympy
21:         from sympy import Poly
22:         x = sympy.symbols('x')
23: except ImportError:
24:     pass
25: 
26: 
27: def generate_A(K):
28:     A = [Poly(1, x)]
29:     for k in range(K):
30:         A.append(Poly(1 - 2*k*x, x)*A[k] + Poly(x*(x + 1))*A[k].diff())
31:     return A
32: 
33: 
34: WARNING = '''\
35: /* This file was automatically generated by _precompute/expn_asy.py.
36:  * Do not edit it manually!
37:  */
38: '''
39: 
40: 
41: def main():
42:     print(__doc__)
43:     fn = os.path.join('..', 'cephes', 'expn.h')
44: 
45:     K = 12
46:     A = generate_A(K)
47:     with open(fn + '.new', 'w') as f:
48:         f.write(WARNING)
49:         f.write("#define nA {}\n".format(len(A)))
50:         for k, Ak in enumerate(A):
51:             tmp = ', '.join([str(x.evalf(18)) for x in Ak.coeffs()])
52:             f.write("double A{}[] = {{{}}};\n".format(k, tmp))
53:         tmp = ", ".join(["A{}".format(k) for k in range(K + 1)])
54:         f.write("double *A[] = {{{}}};\n".format(tmp))
55:         tmp = ", ".join([str(Ak.degree()) for Ak in A])
56:         f.write("int Adegs[] = {{{}}};\n".format(tmp))
57:     os.rename(fn + '.new', fn)
58: 
59: 
60: if __name__ == "__main__":
61:     main()
62: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_563432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 9, (-1)), 'str', 'Precompute the polynomials for the asymptotic expansion of the\ngeneralized exponential integral.\n\nSources\n-------\n[1] NIST, Digital Library of Mathematical Functions,\n    http://dlmf.nist.gov/8.20#ii\n\n')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 12, 0))

# 'import os' statement (line 12)
import os

import_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'os', os, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 13, 0))

# 'from scipy._lib._numpy_compat import suppress_warnings' statement (line 13)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/_precompute/')
import_563433 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'scipy._lib._numpy_compat')

if (type(import_563433) is not StypyTypeError):

    if (import_563433 != 'pyd_module'):
        __import__(import_563433)
        sys_modules_563434 = sys.modules[import_563433]
        import_from_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'scipy._lib._numpy_compat', sys_modules_563434.module_type_store, module_type_store, ['suppress_warnings'])
        nest_module(stypy.reporting.localization.Localization(__file__, 13, 0), __file__, sys_modules_563434, sys_modules_563434.module_type_store, module_type_store)
    else:
        from scipy._lib._numpy_compat import suppress_warnings

        import_from_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'scipy._lib._numpy_compat', None, module_type_store, ['suppress_warnings'], [suppress_warnings])

else:
    # Assigning a type to the variable 'scipy._lib._numpy_compat' (line 13)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 13, 0), 'scipy._lib._numpy_compat', import_563433)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/_precompute/')



# SSA begins for try-except statement (line 15)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')

# Call to suppress_warnings(...): (line 18)
# Processing the call keyword arguments (line 18)
kwargs_563436 = {}
# Getting the type of 'suppress_warnings' (line 18)
suppress_warnings_563435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 18, 9), 'suppress_warnings', False)
# Calling suppress_warnings(args, kwargs) (line 18)
suppress_warnings_call_result_563437 = invoke(stypy.reporting.localization.Localization(__file__, 18, 9), suppress_warnings_563435, *[], **kwargs_563436)

with_563438 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 18, 9), suppress_warnings_call_result_563437, 'with parameter', '__enter__', '__exit__')

if with_563438:
    # Calling the __enter__ method to initiate a with section
    # Obtaining the member '__enter__' of a type (line 18)
    enter___563439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 18, 9), suppress_warnings_call_result_563437, '__enter__')
    with_enter_563440 = invoke(stypy.reporting.localization.Localization(__file__, 18, 9), enter___563439)
    # Assigning a type to the variable 'sup' (line 18)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 18, 9), 'sup', with_enter_563440)
    
    # Call to filter(...): (line 19)
    # Processing the call arguments (line 19)
    # Getting the type of 'DeprecationWarning' (line 19)
    DeprecationWarning_563443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 19, 19), 'DeprecationWarning', False)
    str_563444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 19, 39), 'str', 'inspect.getargspec.. is deprecated')
    # Processing the call keyword arguments (line 19)
    kwargs_563445 = {}
    # Getting the type of 'sup' (line 19)
    sup_563441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 19, 8), 'sup', False)
    # Obtaining the member 'filter' of a type (line 19)
    filter_563442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 19, 8), sup_563441, 'filter')
    # Calling filter(args, kwargs) (line 19)
    filter_call_result_563446 = invoke(stypy.reporting.localization.Localization(__file__, 19, 8), filter_563442, *[DeprecationWarning_563443, str_563444], **kwargs_563445)
    
    stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 20, 8))
    
    # 'import sympy' statement (line 20)
    update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/_precompute/')
    import_563447 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 20, 8), 'sympy')

    if (type(import_563447) is not StypyTypeError):

        if (import_563447 != 'pyd_module'):
            __import__(import_563447)
            sys_modules_563448 = sys.modules[import_563447]
            import_module(stypy.reporting.localization.Localization(__file__, 20, 8), 'sympy', sys_modules_563448.module_type_store, module_type_store)
        else:
            import sympy

            import_module(stypy.reporting.localization.Localization(__file__, 20, 8), 'sympy', sympy, module_type_store)

    else:
        # Assigning a type to the variable 'sympy' (line 20)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 8), 'sympy', import_563447)

    remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/_precompute/')
    
    stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 21, 8))
    
    # 'from sympy import Poly' statement (line 21)
    update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/special/_precompute/')
    import_563449 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 21, 8), 'sympy')

    if (type(import_563449) is not StypyTypeError):

        if (import_563449 != 'pyd_module'):
            __import__(import_563449)
            sys_modules_563450 = sys.modules[import_563449]
            import_from_module(stypy.reporting.localization.Localization(__file__, 21, 8), 'sympy', sys_modules_563450.module_type_store, module_type_store, ['Poly'])
            nest_module(stypy.reporting.localization.Localization(__file__, 21, 8), __file__, sys_modules_563450, sys_modules_563450.module_type_store, module_type_store)
        else:
            from sympy import Poly

            import_from_module(stypy.reporting.localization.Localization(__file__, 21, 8), 'sympy', None, module_type_store, ['Poly'], [Poly])

    else:
        # Assigning a type to the variable 'sympy' (line 21)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 8), 'sympy', import_563449)

    remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/special/_precompute/')
    
    
    # Assigning a Call to a Name (line 22):
    
    # Call to symbols(...): (line 22)
    # Processing the call arguments (line 22)
    str_563453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 26), 'str', 'x')
    # Processing the call keyword arguments (line 22)
    kwargs_563454 = {}
    # Getting the type of 'sympy' (line 22)
    sympy_563451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 12), 'sympy', False)
    # Obtaining the member 'symbols' of a type (line 22)
    symbols_563452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 22, 12), sympy_563451, 'symbols')
    # Calling symbols(args, kwargs) (line 22)
    symbols_call_result_563455 = invoke(stypy.reporting.localization.Localization(__file__, 22, 12), symbols_563452, *[str_563453], **kwargs_563454)
    
    # Assigning a type to the variable 'x' (line 22)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 22, 8), 'x', symbols_call_result_563455)
    # Calling the __exit__ method to finish a with section
    # Obtaining the member '__exit__' of a type (line 18)
    exit___563456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 18, 9), suppress_warnings_call_result_563437, '__exit__')
    with_exit_563457 = invoke(stypy.reporting.localization.Localization(__file__, 18, 9), exit___563456, None, None, None)

# SSA branch for the except part of a try statement (line 15)
# SSA branch for the except 'ImportError' branch of a try statement (line 15)
module_type_store.open_ssa_branch('except')
pass
# SSA join for try-except statement (line 15)
module_type_store = module_type_store.join_ssa_context()


@norecursion
def generate_A(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'generate_A'
    module_type_store = module_type_store.open_function_context('generate_A', 27, 0, False)
    
    # Passed parameters checking function
    generate_A.stypy_localization = localization
    generate_A.stypy_type_of_self = None
    generate_A.stypy_type_store = module_type_store
    generate_A.stypy_function_name = 'generate_A'
    generate_A.stypy_param_names_list = ['K']
    generate_A.stypy_varargs_param_name = None
    generate_A.stypy_kwargs_param_name = None
    generate_A.stypy_call_defaults = defaults
    generate_A.stypy_call_varargs = varargs
    generate_A.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_A', ['K'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_A', localization, ['K'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_A(...)' code ##################

    
    # Assigning a List to a Name (line 28):
    
    # Obtaining an instance of the builtin type 'list' (line 28)
    list_563458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 8), 'list')
    # Adding type elements to the builtin type 'list' instance (line 28)
    # Adding element type (line 28)
    
    # Call to Poly(...): (line 28)
    # Processing the call arguments (line 28)
    int_563460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 14), 'int')
    # Getting the type of 'x' (line 28)
    x_563461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 17), 'x', False)
    # Processing the call keyword arguments (line 28)
    kwargs_563462 = {}
    # Getting the type of 'Poly' (line 28)
    Poly_563459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 9), 'Poly', False)
    # Calling Poly(args, kwargs) (line 28)
    Poly_call_result_563463 = invoke(stypy.reporting.localization.Localization(__file__, 28, 9), Poly_563459, *[int_563460, x_563461], **kwargs_563462)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 8), list_563458, Poly_call_result_563463)
    
    # Assigning a type to the variable 'A' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 4), 'A', list_563458)
    
    
    # Call to range(...): (line 29)
    # Processing the call arguments (line 29)
    # Getting the type of 'K' (line 29)
    K_563465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 29, 19), 'K', False)
    # Processing the call keyword arguments (line 29)
    kwargs_563466 = {}
    # Getting the type of 'range' (line 29)
    range_563464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 29, 13), 'range', False)
    # Calling range(args, kwargs) (line 29)
    range_call_result_563467 = invoke(stypy.reporting.localization.Localization(__file__, 29, 13), range_563464, *[K_563465], **kwargs_563466)
    
    # Testing the type of a for loop iterable (line 29)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 29, 4), range_call_result_563467)
    # Getting the type of the for loop variable (line 29)
    for_loop_var_563468 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 29, 4), range_call_result_563467)
    # Assigning a type to the variable 'k' (line 29)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 4), 'k', for_loop_var_563468)
    # SSA begins for a for statement (line 29)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to append(...): (line 30)
    # Processing the call arguments (line 30)
    
    # Call to Poly(...): (line 30)
    # Processing the call arguments (line 30)
    int_563472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 22), 'int')
    int_563473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 26), 'int')
    # Getting the type of 'k' (line 30)
    k_563474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 28), 'k', False)
    # Applying the binary operator '*' (line 30)
    result_mul_563475 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 26), '*', int_563473, k_563474)
    
    # Getting the type of 'x' (line 30)
    x_563476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 30), 'x', False)
    # Applying the binary operator '*' (line 30)
    result_mul_563477 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 29), '*', result_mul_563475, x_563476)
    
    # Applying the binary operator '-' (line 30)
    result_sub_563478 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 22), '-', int_563472, result_mul_563477)
    
    # Getting the type of 'x' (line 30)
    x_563479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 33), 'x', False)
    # Processing the call keyword arguments (line 30)
    kwargs_563480 = {}
    # Getting the type of 'Poly' (line 30)
    Poly_563471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 17), 'Poly', False)
    # Calling Poly(args, kwargs) (line 30)
    Poly_call_result_563481 = invoke(stypy.reporting.localization.Localization(__file__, 30, 17), Poly_563471, *[result_sub_563478, x_563479], **kwargs_563480)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 30)
    k_563482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 38), 'k', False)
    # Getting the type of 'A' (line 30)
    A_563483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 36), 'A', False)
    # Obtaining the member '__getitem__' of a type (line 30)
    getitem___563484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 30, 36), A_563483, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 30)
    subscript_call_result_563485 = invoke(stypy.reporting.localization.Localization(__file__, 30, 36), getitem___563484, k_563482)
    
    # Applying the binary operator '*' (line 30)
    result_mul_563486 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 17), '*', Poly_call_result_563481, subscript_call_result_563485)
    
    
    # Call to Poly(...): (line 30)
    # Processing the call arguments (line 30)
    # Getting the type of 'x' (line 30)
    x_563488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 48), 'x', False)
    # Getting the type of 'x' (line 30)
    x_563489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 51), 'x', False)
    int_563490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 55), 'int')
    # Applying the binary operator '+' (line 30)
    result_add_563491 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 51), '+', x_563489, int_563490)
    
    # Applying the binary operator '*' (line 30)
    result_mul_563492 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 48), '*', x_563488, result_add_563491)
    
    # Processing the call keyword arguments (line 30)
    kwargs_563493 = {}
    # Getting the type of 'Poly' (line 30)
    Poly_563487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 43), 'Poly', False)
    # Calling Poly(args, kwargs) (line 30)
    Poly_call_result_563494 = invoke(stypy.reporting.localization.Localization(__file__, 30, 43), Poly_563487, *[result_mul_563492], **kwargs_563493)
    
    
    # Call to diff(...): (line 30)
    # Processing the call keyword arguments (line 30)
    kwargs_563500 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 30)
    k_563495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 61), 'k', False)
    # Getting the type of 'A' (line 30)
    A_563496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 59), 'A', False)
    # Obtaining the member '__getitem__' of a type (line 30)
    getitem___563497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 30, 59), A_563496, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 30)
    subscript_call_result_563498 = invoke(stypy.reporting.localization.Localization(__file__, 30, 59), getitem___563497, k_563495)
    
    # Obtaining the member 'diff' of a type (line 30)
    diff_563499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 30, 59), subscript_call_result_563498, 'diff')
    # Calling diff(args, kwargs) (line 30)
    diff_call_result_563501 = invoke(stypy.reporting.localization.Localization(__file__, 30, 59), diff_563499, *[], **kwargs_563500)
    
    # Applying the binary operator '*' (line 30)
    result_mul_563502 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 43), '*', Poly_call_result_563494, diff_call_result_563501)
    
    # Applying the binary operator '+' (line 30)
    result_add_563503 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 17), '+', result_mul_563486, result_mul_563502)
    
    # Processing the call keyword arguments (line 30)
    kwargs_563504 = {}
    # Getting the type of 'A' (line 30)
    A_563469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 8), 'A', False)
    # Obtaining the member 'append' of a type (line 30)
    append_563470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 30, 8), A_563469, 'append')
    # Calling append(args, kwargs) (line 30)
    append_call_result_563505 = invoke(stypy.reporting.localization.Localization(__file__, 30, 8), append_563470, *[result_add_563503], **kwargs_563504)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'A' (line 31)
    A_563506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 31, 11), 'A')
    # Assigning a type to the variable 'stypy_return_type' (line 31)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 4), 'stypy_return_type', A_563506)
    
    # ################# End of 'generate_A(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_A' in the type store
    # Getting the type of 'stypy_return_type' (line 27)
    stypy_return_type_563507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_563507)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_A'
    return stypy_return_type_563507

# Assigning a type to the variable 'generate_A' (line 27)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 0), 'generate_A', generate_A)

# Assigning a Str to a Name (line 34):
str_563508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 38, (-1)), 'str', '/* This file was automatically generated by _precompute/expn_asy.py.\n * Do not edit it manually!\n */\n')
# Assigning a type to the variable 'WARNING' (line 34)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 34, 0), 'WARNING', str_563508)

@norecursion
def main(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'main'
    module_type_store = module_type_store.open_function_context('main', 41, 0, False)
    
    # Passed parameters checking function
    main.stypy_localization = localization
    main.stypy_type_of_self = None
    main.stypy_type_store = module_type_store
    main.stypy_function_name = 'main'
    main.stypy_param_names_list = []
    main.stypy_varargs_param_name = None
    main.stypy_kwargs_param_name = None
    main.stypy_call_defaults = defaults
    main.stypy_call_varargs = varargs
    main.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'main', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'main', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'main(...)' code ##################

    
    # Call to print(...): (line 42)
    # Processing the call arguments (line 42)
    # Getting the type of '__doc__' (line 42)
    doc___563510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 10), '__doc__', False)
    # Processing the call keyword arguments (line 42)
    kwargs_563511 = {}
    # Getting the type of 'print' (line 42)
    print_563509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'print', False)
    # Calling print(args, kwargs) (line 42)
    print_call_result_563512 = invoke(stypy.reporting.localization.Localization(__file__, 42, 4), print_563509, *[doc___563510], **kwargs_563511)
    
    
    # Assigning a Call to a Name (line 43):
    
    # Call to join(...): (line 43)
    # Processing the call arguments (line 43)
    str_563516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 22), 'str', '..')
    str_563517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 28), 'str', 'cephes')
    str_563518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 38), 'str', 'expn.h')
    # Processing the call keyword arguments (line 43)
    kwargs_563519 = {}
    # Getting the type of 'os' (line 43)
    os_563513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 9), 'os', False)
    # Obtaining the member 'path' of a type (line 43)
    path_563514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 43, 9), os_563513, 'path')
    # Obtaining the member 'join' of a type (line 43)
    join_563515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 43, 9), path_563514, 'join')
    # Calling join(args, kwargs) (line 43)
    join_call_result_563520 = invoke(stypy.reporting.localization.Localization(__file__, 43, 9), join_563515, *[str_563516, str_563517, str_563518], **kwargs_563519)
    
    # Assigning a type to the variable 'fn' (line 43)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 4), 'fn', join_call_result_563520)
    
    # Assigning a Num to a Name (line 45):
    int_563521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 8), 'int')
    # Assigning a type to the variable 'K' (line 45)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 4), 'K', int_563521)
    
    # Assigning a Call to a Name (line 46):
    
    # Call to generate_A(...): (line 46)
    # Processing the call arguments (line 46)
    # Getting the type of 'K' (line 46)
    K_563523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 19), 'K', False)
    # Processing the call keyword arguments (line 46)
    kwargs_563524 = {}
    # Getting the type of 'generate_A' (line 46)
    generate_A_563522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 8), 'generate_A', False)
    # Calling generate_A(args, kwargs) (line 46)
    generate_A_call_result_563525 = invoke(stypy.reporting.localization.Localization(__file__, 46, 8), generate_A_563522, *[K_563523], **kwargs_563524)
    
    # Assigning a type to the variable 'A' (line 46)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 46, 4), 'A', generate_A_call_result_563525)
    
    # Call to open(...): (line 47)
    # Processing the call arguments (line 47)
    # Getting the type of 'fn' (line 47)
    fn_563527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 14), 'fn', False)
    str_563528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 19), 'str', '.new')
    # Applying the binary operator '+' (line 47)
    result_add_563529 = python_operator(stypy.reporting.localization.Localization(__file__, 47, 14), '+', fn_563527, str_563528)
    
    str_563530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 27), 'str', 'w')
    # Processing the call keyword arguments (line 47)
    kwargs_563531 = {}
    # Getting the type of 'open' (line 47)
    open_563526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 9), 'open', False)
    # Calling open(args, kwargs) (line 47)
    open_call_result_563532 = invoke(stypy.reporting.localization.Localization(__file__, 47, 9), open_563526, *[result_add_563529, str_563530], **kwargs_563531)
    
    with_563533 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 47, 9), open_call_result_563532, 'with parameter', '__enter__', '__exit__')

    if with_563533:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 47)
        enter___563534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 9), open_call_result_563532, '__enter__')
        with_enter_563535 = invoke(stypy.reporting.localization.Localization(__file__, 47, 9), enter___563534)
        # Assigning a type to the variable 'f' (line 47)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 47, 9), 'f', with_enter_563535)
        
        # Call to write(...): (line 48)
        # Processing the call arguments (line 48)
        # Getting the type of 'WARNING' (line 48)
        WARNING_563538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 16), 'WARNING', False)
        # Processing the call keyword arguments (line 48)
        kwargs_563539 = {}
        # Getting the type of 'f' (line 48)
        f_563536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 48)
        write_563537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 48, 8), f_563536, 'write')
        # Calling write(args, kwargs) (line 48)
        write_call_result_563540 = invoke(stypy.reporting.localization.Localization(__file__, 48, 8), write_563537, *[WARNING_563538], **kwargs_563539)
        
        
        # Call to write(...): (line 49)
        # Processing the call arguments (line 49)
        
        # Call to format(...): (line 49)
        # Processing the call arguments (line 49)
        
        # Call to len(...): (line 49)
        # Processing the call arguments (line 49)
        # Getting the type of 'A' (line 49)
        A_563546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 45), 'A', False)
        # Processing the call keyword arguments (line 49)
        kwargs_563547 = {}
        # Getting the type of 'len' (line 49)
        len_563545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 41), 'len', False)
        # Calling len(args, kwargs) (line 49)
        len_call_result_563548 = invoke(stypy.reporting.localization.Localization(__file__, 49, 41), len_563545, *[A_563546], **kwargs_563547)
        
        # Processing the call keyword arguments (line 49)
        kwargs_563549 = {}
        str_563543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 49, 16), 'str', '#define nA {}\n')
        # Obtaining the member 'format' of a type (line 49)
        format_563544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 49, 16), str_563543, 'format')
        # Calling format(args, kwargs) (line 49)
        format_call_result_563550 = invoke(stypy.reporting.localization.Localization(__file__, 49, 16), format_563544, *[len_call_result_563548], **kwargs_563549)
        
        # Processing the call keyword arguments (line 49)
        kwargs_563551 = {}
        # Getting the type of 'f' (line 49)
        f_563541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 49)
        write_563542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 49, 8), f_563541, 'write')
        # Calling write(args, kwargs) (line 49)
        write_call_result_563552 = invoke(stypy.reporting.localization.Localization(__file__, 49, 8), write_563542, *[format_call_result_563550], **kwargs_563551)
        
        
        
        # Call to enumerate(...): (line 50)
        # Processing the call arguments (line 50)
        # Getting the type of 'A' (line 50)
        A_563554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 31), 'A', False)
        # Processing the call keyword arguments (line 50)
        kwargs_563555 = {}
        # Getting the type of 'enumerate' (line 50)
        enumerate_563553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 21), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 50)
        enumerate_call_result_563556 = invoke(stypy.reporting.localization.Localization(__file__, 50, 21), enumerate_563553, *[A_563554], **kwargs_563555)
        
        # Testing the type of a for loop iterable (line 50)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 50, 8), enumerate_call_result_563556)
        # Getting the type of the for loop variable (line 50)
        for_loop_var_563557 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 50, 8), enumerate_call_result_563556)
        # Assigning a type to the variable 'k' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 50, 8), for_loop_var_563557))
        # Assigning a type to the variable 'Ak' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'Ak', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 50, 8), for_loop_var_563557))
        # SSA begins for a for statement (line 50)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 51):
        
        # Call to join(...): (line 51)
        # Processing the call arguments (line 51)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to coeffs(...): (line 51)
        # Processing the call keyword arguments (line 51)
        kwargs_563570 = {}
        # Getting the type of 'Ak' (line 51)
        Ak_563568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 55), 'Ak', False)
        # Obtaining the member 'coeffs' of a type (line 51)
        coeffs_563569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 55), Ak_563568, 'coeffs')
        # Calling coeffs(args, kwargs) (line 51)
        coeffs_call_result_563571 = invoke(stypy.reporting.localization.Localization(__file__, 51, 55), coeffs_563569, *[], **kwargs_563570)
        
        comprehension_563572 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 51, 29), coeffs_call_result_563571)
        # Assigning a type to the variable 'x' (line 51)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 29), 'x', comprehension_563572)
        
        # Call to str(...): (line 51)
        # Processing the call arguments (line 51)
        
        # Call to evalf(...): (line 51)
        # Processing the call arguments (line 51)
        int_563563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 41), 'int')
        # Processing the call keyword arguments (line 51)
        kwargs_563564 = {}
        # Getting the type of 'x' (line 51)
        x_563561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 33), 'x', False)
        # Obtaining the member 'evalf' of a type (line 51)
        evalf_563562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 33), x_563561, 'evalf')
        # Calling evalf(args, kwargs) (line 51)
        evalf_call_result_563565 = invoke(stypy.reporting.localization.Localization(__file__, 51, 33), evalf_563562, *[int_563563], **kwargs_563564)
        
        # Processing the call keyword arguments (line 51)
        kwargs_563566 = {}
        # Getting the type of 'str' (line 51)
        str_563560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 29), 'str', False)
        # Calling str(args, kwargs) (line 51)
        str_call_result_563567 = invoke(stypy.reporting.localization.Localization(__file__, 51, 29), str_563560, *[evalf_call_result_563565], **kwargs_563566)
        
        list_563573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 29), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 51, 29), list_563573, str_call_result_563567)
        # Processing the call keyword arguments (line 51)
        kwargs_563574 = {}
        str_563558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 18), 'str', ', ')
        # Obtaining the member 'join' of a type (line 51)
        join_563559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 18), str_563558, 'join')
        # Calling join(args, kwargs) (line 51)
        join_call_result_563575 = invoke(stypy.reporting.localization.Localization(__file__, 51, 18), join_563559, *[list_563573], **kwargs_563574)
        
        # Assigning a type to the variable 'tmp' (line 51)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 12), 'tmp', join_call_result_563575)
        
        # Call to write(...): (line 52)
        # Processing the call arguments (line 52)
        
        # Call to format(...): (line 52)
        # Processing the call arguments (line 52)
        # Getting the type of 'k' (line 52)
        k_563580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 54), 'k', False)
        # Getting the type of 'tmp' (line 52)
        tmp_563581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 57), 'tmp', False)
        # Processing the call keyword arguments (line 52)
        kwargs_563582 = {}
        str_563578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 52, 20), 'str', 'double A{}[] = {{{}}};\n')
        # Obtaining the member 'format' of a type (line 52)
        format_563579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 52, 20), str_563578, 'format')
        # Calling format(args, kwargs) (line 52)
        format_call_result_563583 = invoke(stypy.reporting.localization.Localization(__file__, 52, 20), format_563579, *[k_563580, tmp_563581], **kwargs_563582)
        
        # Processing the call keyword arguments (line 52)
        kwargs_563584 = {}
        # Getting the type of 'f' (line 52)
        f_563576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 12), 'f', False)
        # Obtaining the member 'write' of a type (line 52)
        write_563577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 52, 12), f_563576, 'write')
        # Calling write(args, kwargs) (line 52)
        write_call_result_563585 = invoke(stypy.reporting.localization.Localization(__file__, 52, 12), write_563577, *[format_call_result_563583], **kwargs_563584)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 53):
        
        # Call to join(...): (line 53)
        # Processing the call arguments (line 53)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to range(...): (line 53)
        # Processing the call arguments (line 53)
        # Getting the type of 'K' (line 53)
        K_563594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 56), 'K', False)
        int_563595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 60), 'int')
        # Applying the binary operator '+' (line 53)
        result_add_563596 = python_operator(stypy.reporting.localization.Localization(__file__, 53, 56), '+', K_563594, int_563595)
        
        # Processing the call keyword arguments (line 53)
        kwargs_563597 = {}
        # Getting the type of 'range' (line 53)
        range_563593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 50), 'range', False)
        # Calling range(args, kwargs) (line 53)
        range_call_result_563598 = invoke(stypy.reporting.localization.Localization(__file__, 53, 50), range_563593, *[result_add_563596], **kwargs_563597)
        
        comprehension_563599 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 53, 25), range_call_result_563598)
        # Assigning a type to the variable 'k' (line 53)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 53, 25), 'k', comprehension_563599)
        
        # Call to format(...): (line 53)
        # Processing the call arguments (line 53)
        # Getting the type of 'k' (line 53)
        k_563590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 38), 'k', False)
        # Processing the call keyword arguments (line 53)
        kwargs_563591 = {}
        str_563588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 25), 'str', 'A{}')
        # Obtaining the member 'format' of a type (line 53)
        format_563589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 25), str_563588, 'format')
        # Calling format(args, kwargs) (line 53)
        format_call_result_563592 = invoke(stypy.reporting.localization.Localization(__file__, 53, 25), format_563589, *[k_563590], **kwargs_563591)
        
        list_563600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 25), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 53, 25), list_563600, format_call_result_563592)
        # Processing the call keyword arguments (line 53)
        kwargs_563601 = {}
        str_563586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 14), 'str', ', ')
        # Obtaining the member 'join' of a type (line 53)
        join_563587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 14), str_563586, 'join')
        # Calling join(args, kwargs) (line 53)
        join_call_result_563602 = invoke(stypy.reporting.localization.Localization(__file__, 53, 14), join_563587, *[list_563600], **kwargs_563601)
        
        # Assigning a type to the variable 'tmp' (line 53)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 53, 8), 'tmp', join_call_result_563602)
        
        # Call to write(...): (line 54)
        # Processing the call arguments (line 54)
        
        # Call to format(...): (line 54)
        # Processing the call arguments (line 54)
        # Getting the type of 'tmp' (line 54)
        tmp_563607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 49), 'tmp', False)
        # Processing the call keyword arguments (line 54)
        kwargs_563608 = {}
        str_563605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 16), 'str', 'double *A[] = {{{}}};\n')
        # Obtaining the member 'format' of a type (line 54)
        format_563606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 54, 16), str_563605, 'format')
        # Calling format(args, kwargs) (line 54)
        format_call_result_563609 = invoke(stypy.reporting.localization.Localization(__file__, 54, 16), format_563606, *[tmp_563607], **kwargs_563608)
        
        # Processing the call keyword arguments (line 54)
        kwargs_563610 = {}
        # Getting the type of 'f' (line 54)
        f_563603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 54)
        write_563604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 54, 8), f_563603, 'write')
        # Calling write(args, kwargs) (line 54)
        write_call_result_563611 = invoke(stypy.reporting.localization.Localization(__file__, 54, 8), write_563604, *[format_call_result_563609], **kwargs_563610)
        
        
        # Assigning a Call to a Name (line 55):
        
        # Call to join(...): (line 55)
        # Processing the call arguments (line 55)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'A' (line 55)
        A_563621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 52), 'A', False)
        comprehension_563622 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 55, 25), A_563621)
        # Assigning a type to the variable 'Ak' (line 55)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 55, 25), 'Ak', comprehension_563622)
        
        # Call to str(...): (line 55)
        # Processing the call arguments (line 55)
        
        # Call to degree(...): (line 55)
        # Processing the call keyword arguments (line 55)
        kwargs_563617 = {}
        # Getting the type of 'Ak' (line 55)
        Ak_563615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 29), 'Ak', False)
        # Obtaining the member 'degree' of a type (line 55)
        degree_563616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 29), Ak_563615, 'degree')
        # Calling degree(args, kwargs) (line 55)
        degree_call_result_563618 = invoke(stypy.reporting.localization.Localization(__file__, 55, 29), degree_563616, *[], **kwargs_563617)
        
        # Processing the call keyword arguments (line 55)
        kwargs_563619 = {}
        # Getting the type of 'str' (line 55)
        str_563614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 25), 'str', False)
        # Calling str(args, kwargs) (line 55)
        str_call_result_563620 = invoke(stypy.reporting.localization.Localization(__file__, 55, 25), str_563614, *[degree_call_result_563618], **kwargs_563619)
        
        list_563623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 25), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 55, 25), list_563623, str_call_result_563620)
        # Processing the call keyword arguments (line 55)
        kwargs_563624 = {}
        str_563612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 14), 'str', ', ')
        # Obtaining the member 'join' of a type (line 55)
        join_563613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 14), str_563612, 'join')
        # Calling join(args, kwargs) (line 55)
        join_call_result_563625 = invoke(stypy.reporting.localization.Localization(__file__, 55, 14), join_563613, *[list_563623], **kwargs_563624)
        
        # Assigning a type to the variable 'tmp' (line 55)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 55, 8), 'tmp', join_call_result_563625)
        
        # Call to write(...): (line 56)
        # Processing the call arguments (line 56)
        
        # Call to format(...): (line 56)
        # Processing the call arguments (line 56)
        # Getting the type of 'tmp' (line 56)
        tmp_563630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 49), 'tmp', False)
        # Processing the call keyword arguments (line 56)
        kwargs_563631 = {}
        str_563628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 16), 'str', 'int Adegs[] = {{{}}};\n')
        # Obtaining the member 'format' of a type (line 56)
        format_563629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 56, 16), str_563628, 'format')
        # Calling format(args, kwargs) (line 56)
        format_call_result_563632 = invoke(stypy.reporting.localization.Localization(__file__, 56, 16), format_563629, *[tmp_563630], **kwargs_563631)
        
        # Processing the call keyword arguments (line 56)
        kwargs_563633 = {}
        # Getting the type of 'f' (line 56)
        f_563626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 8), 'f', False)
        # Obtaining the member 'write' of a type (line 56)
        write_563627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 56, 8), f_563626, 'write')
        # Calling write(args, kwargs) (line 56)
        write_call_result_563634 = invoke(stypy.reporting.localization.Localization(__file__, 56, 8), write_563627, *[format_call_result_563632], **kwargs_563633)
        
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 47)
        exit___563635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 9), open_call_result_563532, '__exit__')
        with_exit_563636 = invoke(stypy.reporting.localization.Localization(__file__, 47, 9), exit___563635, None, None, None)

    
    # Call to rename(...): (line 57)
    # Processing the call arguments (line 57)
    # Getting the type of 'fn' (line 57)
    fn_563639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 14), 'fn', False)
    str_563640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 19), 'str', '.new')
    # Applying the binary operator '+' (line 57)
    result_add_563641 = python_operator(stypy.reporting.localization.Localization(__file__, 57, 14), '+', fn_563639, str_563640)
    
    # Getting the type of 'fn' (line 57)
    fn_563642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 27), 'fn', False)
    # Processing the call keyword arguments (line 57)
    kwargs_563643 = {}
    # Getting the type of 'os' (line 57)
    os_563637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 4), 'os', False)
    # Obtaining the member 'rename' of a type (line 57)
    rename_563638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 4), os_563637, 'rename')
    # Calling rename(args, kwargs) (line 57)
    rename_call_result_563644 = invoke(stypy.reporting.localization.Localization(__file__, 57, 4), rename_563638, *[result_add_563641, fn_563642], **kwargs_563643)
    
    
    # ################# End of 'main(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'main' in the type store
    # Getting the type of 'stypy_return_type' (line 41)
    stypy_return_type_563645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 41, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_563645)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'main'
    return stypy_return_type_563645

# Assigning a type to the variable 'main' (line 41)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 41, 0), 'main', main)

if (__name__ == '__main__'):
    
    # Call to main(...): (line 61)
    # Processing the call keyword arguments (line 61)
    kwargs_563647 = {}
    # Getting the type of 'main' (line 61)
    main_563646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 4), 'main', False)
    # Calling main(args, kwargs) (line 61)
    main_call_result_563648 = invoke(stypy.reporting.localization.Localization(__file__, 61, 4), main_563646, *[], **kwargs_563647)
    


# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
