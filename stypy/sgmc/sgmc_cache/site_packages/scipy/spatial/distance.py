
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''
2: =====================================================
3: Distance computations (:mod:`scipy.spatial.distance`)
4: =====================================================
5: 
6: .. sectionauthor:: Damian Eads
7: 
8: Function Reference
9: ------------------
10: 
11: Distance matrix computation from a collection of raw observation vectors
12: stored in a rectangular array.
13: 
14: .. autosummary::
15:    :toctree: generated/
16: 
17:    pdist   -- pairwise distances between observation vectors.
18:    cdist   -- distances between two collections of observation vectors
19:    squareform -- convert distance matrix to a condensed one and vice versa
20:    directed_hausdorff -- directed Hausdorff distance between arrays
21: 
22: Predicates for checking the validity of distance matrices, both
23: condensed and redundant. Also contained in this module are functions
24: for computing the number of observations in a distance matrix.
25: 
26: .. autosummary::
27:    :toctree: generated/
28: 
29:    is_valid_dm -- checks for a valid distance matrix
30:    is_valid_y  -- checks for a valid condensed distance matrix
31:    num_obs_dm  -- # of observations in a distance matrix
32:    num_obs_y   -- # of observations in a condensed distance matrix
33: 
34: Distance functions between two numeric vectors ``u`` and ``v``. Computing
35: distances over a large collection of vectors is inefficient for these
36: functions. Use ``pdist`` for this purpose.
37: 
38: .. autosummary::
39:    :toctree: generated/
40: 
41:    braycurtis       -- the Bray-Curtis distance.
42:    canberra         -- the Canberra distance.
43:    chebyshev        -- the Chebyshev distance.
44:    cityblock        -- the Manhattan distance.
45:    correlation      -- the Correlation distance.
46:    cosine           -- the Cosine distance.
47:    euclidean        -- the Euclidean distance.
48:    mahalanobis      -- the Mahalanobis distance.
49:    minkowski        -- the Minkowski distance.
50:    seuclidean       -- the normalized Euclidean distance.
51:    sqeuclidean      -- the squared Euclidean distance.
52:    wminkowski       -- (deprecated) alias of `minkowski`.
53: 
54: Distance functions between two boolean vectors (representing sets) ``u`` and
55: ``v``.  As in the case of numerical vectors, ``pdist`` is more efficient for
56: computing the distances between all pairs.
57: 
58: .. autosummary::
59:    :toctree: generated/
60: 
61:    dice             -- the Dice dissimilarity.
62:    hamming          -- the Hamming distance.
63:    jaccard          -- the Jaccard distance.
64:    kulsinski        -- the Kulsinski distance.
65:    rogerstanimoto   -- the Rogers-Tanimoto dissimilarity.
66:    russellrao       -- the Russell-Rao dissimilarity.
67:    sokalmichener    -- the Sokal-Michener dissimilarity.
68:    sokalsneath      -- the Sokal-Sneath dissimilarity.
69:    yule             -- the Yule dissimilarity.
70: 
71: :func:`hamming` also operates over discrete numerical vectors.
72: '''
73: 
74: # Copyright (C) Damian Eads, 2007-2008. New BSD License.
75: 
76: from __future__ import division, print_function, absolute_import
77: 
78: __all__ = [
79:     'braycurtis',
80:     'canberra',
81:     'cdist',
82:     'chebyshev',
83:     'cityblock',
84:     'correlation',
85:     'cosine',
86:     'dice',
87:     'directed_hausdorff',
88:     'euclidean',
89:     'hamming',
90:     'is_valid_dm',
91:     'is_valid_y',
92:     'jaccard',
93:     'kulsinski',
94:     'mahalanobis',
95:     'matching',
96:     'minkowski',
97:     'num_obs_dm',
98:     'num_obs_y',
99:     'pdist',
100:     'rogerstanimoto',
101:     'russellrao',
102:     'seuclidean',
103:     'sokalmichener',
104:     'sokalsneath',
105:     'sqeuclidean',
106:     'squareform',
107:     'wminkowski',
108:     'yule'
109: ]
110: 
111: 
112: import warnings
113: import numpy as np
114: 
115: from functools import partial
116: from collections import namedtuple
117: from scipy._lib.six import callable, string_types
118: from scipy._lib.six import xrange
119: 
120: from . import _distance_wrap
121: from . import _hausdorff
122: from ..linalg import norm
123: 
124: 
125: def _args_to_kwargs_xdist(args, kwargs, metric, func_name):
126:     '''
127:     Convert legacy positional arguments to keyword arguments for pdist/cdist.
128:     '''
129:     if not args:
130:         return kwargs
131: 
132:     if (callable(metric) and metric not in [
133:             braycurtis, canberra, chebyshev, cityblock, correlation, cosine,
134:             dice, euclidean, hamming, jaccard, kulsinski, mahalanobis,
135:             matching, minkowski, rogerstanimoto, russellrao, seuclidean,
136:             sokalmichener, sokalsneath, sqeuclidean, yule, wminkowski]):
137:         raise TypeError('When using a custom metric arguments must be passed'
138:                         'as keyword (i.e., ARGNAME=ARGVALUE)')
139: 
140:     if func_name == 'pdist':
141:         old_arg_names = ['p', 'w', 'V', 'VI']
142:     else:
143:         old_arg_names = ['p', 'V', 'VI', 'w']
144: 
145:     num_args = len(args)
146:     warnings.warn('%d metric parameters have been passed as positional.'
147:                   'This will raise an error in a future version.'
148:                   'Please pass arguments as keywords(i.e., ARGNAME=ARGVALUE)'
149:                   % num_args, DeprecationWarning)
150: 
151:     if num_args > 4:
152:         raise ValueError('Deprecated %s signature accepts only 4'
153:                          'positional arguments (%s), %d given.'
154:                          % (func_name, ', '.join(old_arg_names), num_args))
155: 
156:     for old_arg, arg in zip(old_arg_names, args):
157:         if old_arg in kwargs:
158:             raise TypeError('%s() got multiple values for argument %s'
159:                             % (func_name, old_arg))
160:         kwargs[old_arg] = arg
161:     return kwargs
162: 
163: 
164: def _copy_array_if_base_present(a):
165:     '''
166:     Copies the array if its base points to a parent array.
167:     '''
168:     if a.base is not None:
169:         return a.copy()
170:     return a
171: 
172: 
173: def _correlation_cdist_wrap(XA, XB, dm, **kwargs):
174:     XA = XA - XA.mean(axis=1, keepdims=True)
175:     XB = XB - XB.mean(axis=1, keepdims=True)
176:     _distance_wrap.cdist_cosine_double_wrap(XA, XB, dm, **kwargs)
177: 
178: 
179: def _correlation_pdist_wrap(X, dm, **kwargs):
180:     X2 = X - X.mean(axis=1, keepdims=True)
181:     _distance_wrap.pdist_cosine_double_wrap(X2, dm, **kwargs)
182: 
183: 
184: def _convert_to_type(X, out_type):
185:     return np.ascontiguousarray(X, dtype=out_type)
186: 
187: 
188: def _filter_deprecated_kwargs(kwargs, args_blacklist):
189:     # Filtering out old default keywords
190:     for k in args_blacklist:
191:         if k in kwargs:
192:             del kwargs[k]
193:             warnings.warn('Got unexpected kwarg %s. This will raise an error'
194:                           ' in a future version.' % k, DeprecationWarning)
195: 
196: 
197: def _nbool_correspond_all(u, v, w=None):
198:     if u.dtype == v.dtype == bool and w is None:
199:         not_u = ~u
200:         not_v = ~v
201:         nff = (not_u & not_v).sum()
202:         nft = (not_u & v).sum()
203:         ntf = (u & not_v).sum()
204:         ntt = (u & v).sum()
205:     else:
206:         dtype = np.find_common_type([int], [u.dtype, v.dtype])
207:         u = u.astype(dtype)
208:         v = v.astype(dtype)
209:         not_u = 1.0 - u
210:         not_v = 1.0 - v
211:         if w is not None:
212:             not_u = w * not_u
213:             u = w * u
214:         nff = (not_u * not_v).sum()
215:         nft = (not_u * v).sum()
216:         ntf = (u * not_v).sum()
217:         ntt = (u * v).sum()
218:     return (nff, nft, ntf, ntt)
219: 
220: 
221: def _nbool_correspond_ft_tf(u, v, w=None):
222:     if u.dtype == v.dtype == bool and w is None:
223:         not_u = ~u
224:         not_v = ~v
225:         nft = (not_u & v).sum()
226:         ntf = (u & not_v).sum()
227:     else:
228:         dtype = np.find_common_type([int], [u.dtype, v.dtype])
229:         u = u.astype(dtype)
230:         v = v.astype(dtype)
231:         not_u = 1.0 - u
232:         not_v = 1.0 - v
233:         if w is not None:
234:             not_u = w * not_u
235:             u = w * u
236:         nft = (not_u * v).sum()
237:         ntf = (u * not_v).sum()
238:     return (nft, ntf)
239: 
240: 
241: def _validate_cdist_input(XA, XB, mA, mB, n, metric_name, **kwargs):
242:     if metric_name is not None:
243:         # get supported types
244:         types = _METRICS[metric_name].types
245:         # choose best type
246:         typ = types[types.index(XA.dtype)] if XA.dtype in types else types[0]
247:         # validate data
248:         XA = _convert_to_type(XA, out_type=typ)
249:         XB = _convert_to_type(XB, out_type=typ)
250: 
251:         # validate kwargs
252:         _validate_kwargs = _METRICS[metric_name].validator
253:         if _validate_kwargs:
254:             kwargs = _validate_kwargs(np.vstack([XA, XB]), mA + mB, n, **kwargs)
255:     else:
256:         typ = None
257:     return XA, XB, typ, kwargs
258: 
259: 
260: def _validate_mahalanobis_kwargs(X, m, n, **kwargs):
261:     VI = kwargs.pop('VI', None)
262:     if VI is None:
263:         if m <= n:
264:             # There are fewer observations than the dimension of
265:             # the observations.
266:             raise ValueError("The number of observations (%d) is too "
267:                              "small; the covariance matrix is "
268:                              "singular. For observations with %d "
269:                              "dimensions, at least %d observations "
270:                              "are required." % (m, n, n + 1))
271:         CV = np.atleast_2d(np.cov(X.astype(np.double).T))
272:         VI = np.linalg.inv(CV).T.copy()
273:     kwargs["VI"] = _copy_array_if_base_present(_convert_to_double(VI))
274:     return kwargs
275: 
276: 
277: def _validate_minkowski_kwargs(X, m, n, **kwargs):
278:     if 'w' in kwargs:
279:         kwargs['w'] = _convert_to_double(kwargs['w'])
280:     if 'p' not in kwargs:
281:         kwargs['p'] = 2.
282:     return kwargs
283: 
284: 
285: def _validate_pdist_input(X, m, n, metric_name, **kwargs):
286:     if metric_name is not None:
287:         # get supported types
288:         types = _METRICS[metric_name].types
289:         # choose best type
290:         typ = types[types.index(X.dtype)] if X.dtype in types else types[0]
291:         # validate data
292:         X = _convert_to_type(X, out_type=typ)
293: 
294:         # validate kwargs
295:         _validate_kwargs = _METRICS[metric_name].validator
296:         if _validate_kwargs:
297:             kwargs = _validate_kwargs(X, m, n, **kwargs)
298:     else:
299:         typ = None
300:     return X, typ, kwargs
301: 
302: 
303: def _validate_seuclidean_kwargs(X, m, n, **kwargs):
304:     V = kwargs.pop('V', None)
305:     if V is None:
306:         V = np.var(X.astype(np.double), axis=0, ddof=1)
307:     else:
308:         V = np.asarray(V, order='c')
309:         if V.dtype != np.double:
310:             raise TypeError('Variance vector V must contain doubles.')
311:         if len(V.shape) != 1:
312:             raise ValueError('Variance vector V must '
313:                              'be one-dimensional.')
314:         if V.shape[0] != n:
315:             raise ValueError('Variance vector V must be of the same '
316:                              'dimension as the vectors on which the distances '
317:                              'are computed.')
318:     kwargs['V'] = _convert_to_double(V)
319:     return kwargs
320: 
321: 
322: def _validate_vector(u, dtype=None):
323:     # XXX Is order='c' really necessary?
324:     u = np.asarray(u, dtype=dtype, order='c').squeeze()
325:     # Ensure values such as u=1 and u=[1] still return 1-D arrays.
326:     u = np.atleast_1d(u)
327:     if u.ndim > 1:
328:         raise ValueError("Input vector should be 1-D.")
329:     return u
330: 
331: 
332: def _validate_wminkowski_kwargs(X, m, n, **kwargs):
333:     w = kwargs.pop('w', None)
334:     if w is None:
335:         raise ValueError('weighted minkowski requires a weight '
336:                          'vector `w` to be given.')
337:     kwargs['w'] = _convert_to_double(w)
338:     if 'p' not in kwargs:
339:         kwargs['p'] = 2.
340:     return kwargs
341: 
342: 
343: def directed_hausdorff(u, v, seed=0):
344:     '''
345:     Computes the directed Hausdorff distance between two N-D arrays.
346: 
347:     Distances between pairs are calculated using a Euclidean metric.
348: 
349:     Parameters
350:     ----------
351:     u : (M,N) ndarray
352:         Input array.
353:     v : (O,N) ndarray
354:         Input array.
355:     seed : int or None
356:         Local `np.random.RandomState` seed. Default is 0, a random shuffling of
357:         u and v that guarantees reproducibility.
358: 
359:     Returns
360:     -------
361:     d : double
362:         The directed Hausdorff distance between arrays `u` and `v`,
363: 
364:     index_1 : int
365:         index of point contributing to Hausdorff pair in `u`
366: 
367:     index_2 : int
368:         index of point contributing to Hausdorff pair in `v`
369: 
370:     Notes
371:     -----
372:     Uses the early break technique and the random sampling approach
373:     described by [1]_. Although worst-case performance is ``O(m * o)``
374:     (as with the brute force algorithm), this is unlikely in practice
375:     as the input data would have to require the algorithm to explore
376:     every single point interaction, and after the algorithm shuffles
377:     the input points at that. The best case performance is O(m), which
378:     is satisfied by selecting an inner loop distance that is less than
379:     cmax and leads to an early break as often as possible. The authors
380:     have formally shown that the average runtime is closer to O(m).
381: 
382:     .. versionadded:: 0.19.0
383: 
384:     References
385:     ----------
386:     .. [1] A. A. Taha and A. Hanbury, "An efficient algorithm for
387:            calculating the exact Hausdorff distance." IEEE Transactions On
388:            Pattern Analysis And Machine Intelligence, vol. 37 pp. 2153-63,
389:            2015.
390: 
391:     See Also
392:     --------
393:     scipy.spatial.procrustes : Another similarity test for two data sets
394: 
395:     Examples
396:     --------
397:     Find the directed Hausdorff distance between two 2-D arrays of
398:     coordinates:
399: 
400:     >>> from scipy.spatial.distance import directed_hausdorff
401:     >>> u = np.array([(1.0, 0.0),
402:     ...               (0.0, 1.0),
403:     ...               (-1.0, 0.0),
404:     ...               (0.0, -1.0)])
405:     >>> v = np.array([(2.0, 0.0),
406:     ...               (0.0, 2.0),
407:     ...               (-2.0, 0.0),
408:     ...               (0.0, -4.0)])
409: 
410:     >>> directed_hausdorff(u, v)[0]
411:     2.23606797749979
412:     >>> directed_hausdorff(v, u)[0]
413:     3.0
414: 
415:     Find the general (symmetric) Hausdorff distance between two 2-D
416:     arrays of coordinates:
417: 
418:     >>> max(directed_hausdorff(u, v)[0], directed_hausdorff(v, u)[0])
419:     3.0
420: 
421:     Find the indices of the points that generate the Hausdorff distance
422:     (the Hausdorff pair):
423: 
424:     >>> directed_hausdorff(v, u)[1:]
425:     (3, 3)
426: 
427:     '''
428:     u = np.asarray(u, dtype=np.float64, order='c')
429:     v = np.asarray(v, dtype=np.float64, order='c')
430:     result = _hausdorff.directed_hausdorff(u, v, seed)
431:     return result
432: 
433: 
434: def minkowski(u, v, p=2, w=None):
435:     '''
436:     Computes the Minkowski distance between two 1-D arrays.
437: 
438:     The Minkowski distance between 1-D arrays `u` and `v`,
439:     is defined as
440: 
441:     .. math::
442: 
443:        {||u-v||}_p = (\\sum{|u_i - v_i|^p})^{1/p}.
444: 
445: 
446:        \\left(\\sum{w_i(|(u_i - v_i)|^p)}\\right)^{1/p}.
447: 
448:     Parameters
449:     ----------
450:     u : (N,) array_like
451:         Input array.
452:     v : (N,) array_like
453:         Input array.
454:     p : int
455:         The order of the norm of the difference :math:`{||u-v||}_p`.
456:     w : (N,) array_like, optional
457:         The weights for each value in `u` and `v`. Default is None,
458:         which gives each value a weight of 1.0
459: 
460:     Returns
461:     -------
462:     minkowski : double
463:         The Minkowski distance between vectors `u` and `v`.
464: 
465:     '''
466:     u = _validate_vector(u)
467:     v = _validate_vector(v)
468:     if p < 1:
469:         raise ValueError("p must be at least 1")
470:     u_v = u - v
471:     if w is not None:
472:         w = _validate_vector(w)
473:         if p == 1:
474:             root_w = w
475:         if p == 2:
476:             # better precision and speed
477:             root_w = np.sqrt(w)
478:         else:
479:             root_w = np.power(w, 1/p)
480:         u_v = root_w * u_v
481:     dist = norm(u_v, ord=p)
482:     return dist
483: 
484: 
485: # `minkowski` gained weights in scipy 1.0.  Once we're at say version 1.3,
486: # deprecated `wminkowski`.  Not done at once because it would be annoying for
487: # downstream libraries that used `wminkowski` and support multiple scipy
488: # versions.
489: def wminkowski(u, v, p, w):
490:     '''
491:     Computes the weighted Minkowski distance between two 1-D arrays.
492:     The weighted Minkowski distance between `u` and `v`, defined as
493: 
494:     .. math::
495: 
496:        \\left(\\sum{(|w_i (u_i - v_i)|^p)}\\right)^{1/p}.
497: 
498:     Parameters
499:     ----------
500:     u : (N,) array_like
501:         Input array.
502:     v : (N,) array_like
503:         Input array.
504:     p : int
505:         The order of the norm of the difference :math:`{||u-v||}_p`.
506:     w : (N,) array_like
507:         The weight vector.
508: 
509:     Returns
510:     -------
511:     wminkowski : double
512:         The weighted Minkowski distance between vectors `u` and `v`.
513: 
514:     Notes
515:     -----
516:     `wminkowski` is DEPRECATED. It implements a definition where weights
517:     are powered. It is recommended to use the weighted version of `minkowski`
518:     instead. This function will be removed in a future version of scipy.
519: 
520:     '''
521:     w = _validate_vector(w)
522:     return minkowski(u, v, p=p, w=w**p)
523: 
524: 
525: def euclidean(u, v, w=None):
526:     '''
527:     Computes the Euclidean distance between two 1-D arrays.
528: 
529:     The Euclidean distance between 1-D arrays `u` and `v`, is defined as
530: 
531:     .. math::
532: 
533:        {||u-v||}_2
534: 
535:        \\left(\\sum{(w_i |(u_i - v_i)|^2)}\\right)^{1/2}
536: 
537:     Parameters
538:     ----------
539:     u : (N,) array_like
540:         Input array.
541:     v : (N,) array_like
542:         Input array.
543:     w : (N,) array_like, optional
544:         The weights for each value in `u` and `v`. Default is None,
545:         which gives each value a weight of 1.0
546: 
547:     Returns
548:     -------
549:     euclidean : double
550:         The Euclidean distance between vectors `u` and `v`.
551: 
552:     '''
553:     return minkowski(u, v, p=2, w=w)
554: 
555: 
556: def sqeuclidean(u, v, w=None):
557:     '''
558:     Computes the squared Euclidean distance between two 1-D arrays.
559: 
560:     The squared Euclidean distance between `u` and `v` is defined as
561: 
562:     .. math::
563: 
564:        {||u-v||}_2^2
565: 
566:        \\left(\\sum{(w_i |(u_i - v_i)|^2)}\\right)
567: 
568:     Parameters
569:     ----------
570:     u : (N,) array_like
571:         Input array.
572:     v : (N,) array_like
573:         Input array.
574:     w : (N,) array_like, optional
575:         The weights for each value in `u` and `v`. Default is None,
576:         which gives each value a weight of 1.0
577: 
578:     Returns
579:     -------
580:     sqeuclidean : double
581:         The squared Euclidean distance between vectors `u` and `v`.
582: 
583:     '''
584:     # Preserve float dtypes, but convert everything else to np.float64
585:     # for stability.
586:     utype, vtype = None, None
587:     if not (hasattr(u, "dtype") and np.issubdtype(u.dtype, np.inexact)):
588:         utype = np.float64
589:     if not (hasattr(v, "dtype") and np.issubdtype(v.dtype, np.inexact)):
590:         vtype = np.float64
591: 
592:     u = _validate_vector(u, dtype=utype)
593:     v = _validate_vector(v, dtype=vtype)
594:     u_v = u - v
595:     u_v_w = u_v  # only want weights applied once
596:     if w is not None:
597:         w = _validate_vector(w)
598:         u_v_w = w * u_v
599:     return np.dot(u_v, u_v_w)
600: 
601: 
602: def correlation(u, v, w=None, centered=True):
603:     '''
604:     Computes the correlation distance between two 1-D arrays.
605:     The correlation distance between `u` and `v`, is
606:     defined as
607: 
608:     .. math::
609: 
610:         1 - \\frac{(u - \\bar{u}) \\cdot (v - \\bar{v})}
611:                   {{||(u - \\bar{u})||}_2 {||(v - \\bar{v})||}_2}
612: 
613:     where :math:`\\bar{u}` is the mean of the elements of `u`
614:     and :math:`x \\cdot y` is the dot product of :math:`x` and :math:`y`.
615: 
616:     Parameters
617:     ----------
618:     u : (N,) array_like
619:         Input array.
620:     v : (N,) array_like
621:         Input array.
622:     w : (N,) array_like, optional
623:         The weights for each value in `u` and `v`. Default is None,
624:         which gives each value a weight of 1.0
625: 
626:     Returns
627:     -------
628:     correlation : double
629:         The correlation distance between 1-D array `u` and `v`.
630: 
631:     '''
632:     u = _validate_vector(u)
633:     v = _validate_vector(v)
634:     if w is not None:
635:         w = _validate_vector(w)
636:     if centered:
637:         umu = np.average(u, weights=w)
638:         vmu = np.average(v, weights=w)
639:         u = u - umu
640:         v = v - vmu
641:     uv = np.average(u * v, weights=w)
642:     uu = np.average(np.square(u), weights=w)
643:     vv = np.average(np.square(v), weights=w)
644:     dist = 1.0 - uv / np.sqrt(uu * vv)
645:     return dist
646: 
647: 
648: def cosine(u, v, w=None):
649:     '''
650:     Computes the Cosine distance between 1-D arrays.
651:     The Cosine distance between `u` and `v`, is defined as
652: 
653:     .. math::
654: 
655:         1 - \\frac{u \\cdot v}
656:                   {||u||_2 ||v||_2}.
657: 
658:     where :math:`u \\cdot v` is the dot product of :math:`u` and
659:     :math:`v`.
660: 
661:     Parameters
662:     ----------
663:     u : (N,) array_like
664:         Input array.
665:     v : (N,) array_like
666:         Input array.
667:     w : (N,) array_like, optional
668:         The weights for each value in `u` and `v`. Default is None,
669:         which gives each value a weight of 1.0
670: 
671:     Returns
672:     -------
673:     cosine : double
674:         The Cosine distance between vectors `u` and `v`.
675:     '''
676:     # cosine distance is also referred to as 'uncentered correlation',
677:     #   or 'reflective correlation'
678:     return correlation(u, v, w=w, centered=False)
679: 
680: 
681: def hamming(u, v, w=None):
682:     '''
683:     Computes the Hamming distance between two 1-D arrays.
684: 
685:     The Hamming distance between 1-D arrays `u` and `v`, is simply the
686:     proportion of disagreeing components in `u` and `v`. If `u` and `v` are
687:     boolean vectors, the Hamming distance is
688: 
689:     .. math::
690: 
691:        \\frac{c_{01} + c_{10}}{n}
692: 
693:     where :math:`c_{ij}` is the number of occurrences of
694:     :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for
695:     :math:`k < n`.
696: 
697:     Parameters
698:     ----------
699:     u : (N,) array_like
700:         Input array.
701:     v : (N,) array_like
702:         Input array.
703:     w : (N,) array_like, optional
704:         The weights for each value in `u` and `v`. Default is None,
705:         which gives each value a weight of 1.0
706: 
707:     Returns
708:     -------
709:     hamming : double
710:         The Hamming distance between vectors `u` and `v`.
711: 
712:     '''
713:     u = _validate_vector(u)
714:     v = _validate_vector(v)
715:     if u.shape != v.shape:
716:         raise ValueError('The 1d arrays must have equal lengths.')
717:     u_ne_v = u != v
718:     if w is not None:
719:         w = _validate_vector(w)
720:     return np.average(u_ne_v, weights=w)
721: 
722: 
723: def jaccard(u, v, w=None):
724:     '''
725:     Computes the Jaccard-Needham dissimilarity between two boolean 1-D arrays.
726: 
727:     The Jaccard-Needham dissimilarity between 1-D boolean arrays `u` and `v`,
728:     is defined as
729: 
730:     .. math::
731: 
732:        \\frac{c_{TF} + c_{FT}}
733:             {c_{TT} + c_{FT} + c_{TF}}
734: 
735:     where :math:`c_{ij}` is the number of occurrences of
736:     :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for
737:     :math:`k < n`.
738: 
739:     Parameters
740:     ----------
741:     u : (N,) array_like, bool
742:         Input array.
743:     v : (N,) array_like, bool
744:         Input array.
745:     w : (N,) array_like, optional
746:         The weights for each value in `u` and `v`. Default is None,
747:         which gives each value a weight of 1.0
748: 
749:     Returns
750:     -------
751:     jaccard : double
752:         The Jaccard distance between vectors `u` and `v`.
753: 
754:     '''
755:     u = _validate_vector(u)
756:     v = _validate_vector(v)
757:     nonzero = np.bitwise_or(u != 0, v != 0)
758:     unequal_nonzero = np.bitwise_and((u != v), nonzero)
759:     if w is not None:
760:         w = _validate_vector(w)
761:         nonzero = w * nonzero
762:         unequal_nonzero = w * unequal_nonzero
763:     dist = np.double(unequal_nonzero.sum()) / np.double(nonzero.sum())
764:     return dist
765: 
766: 
767: def kulsinski(u, v, w=None):
768:     '''
769:     Computes the Kulsinski dissimilarity between two boolean 1-D arrays.
770: 
771:     The Kulsinski dissimilarity between two boolean 1-D arrays `u` and `v`,
772:     is defined as
773: 
774:     .. math::
775: 
776:          \\frac{c_{TF} + c_{FT} - c_{TT} + n}
777:               {c_{FT} + c_{TF} + n}
778: 
779:     where :math:`c_{ij}` is the number of occurrences of
780:     :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for
781:     :math:`k < n`.
782: 
783:     Parameters
784:     ----------
785:     u : (N,) array_like, bool
786:         Input array.
787:     v : (N,) array_like, bool
788:         Input array.
789:     w : (N,) array_like, optional
790:         The weights for each value in `u` and `v`. Default is None,
791:         which gives each value a weight of 1.0
792: 
793:     Returns
794:     -------
795:     kulsinski : double
796:         The Kulsinski distance between vectors `u` and `v`.
797: 
798:     '''
799:     u = _validate_vector(u)
800:     v = _validate_vector(v)
801:     if w is None:
802:         n = float(len(u))
803:     else:
804:         w = _validate_vector(w)
805:         n = w.sum()
806:     (nff, nft, ntf, ntt) = _nbool_correspond_all(u, v, w=w)
807: 
808:     return (ntf + nft - ntt + n) / (ntf + nft + n)
809: 
810: 
811: def seuclidean(u, v, V):
812:     '''
813:     Returns the standardized Euclidean distance between two 1-D arrays.
814: 
815:     The standardized Euclidean distance between `u` and `v`.
816: 
817:     Parameters
818:     ----------
819:     u : (N,) array_like
820:         Input array.
821:     v : (N,) array_like
822:         Input array.
823:     V : (N,) array_like
824:         `V` is an 1-D array of component variances. It is usually computed
825:         among a larger collection vectors.
826: 
827:     Returns
828:     -------
829:     seuclidean : double
830:         The standardized Euclidean distance between vectors `u` and `v`.
831: 
832:     '''
833:     u = _validate_vector(u)
834:     v = _validate_vector(v)
835:     V = _validate_vector(V, dtype=np.float64)
836:     if V.shape[0] != u.shape[0] or u.shape[0] != v.shape[0]:
837:         raise TypeError('V must be a 1-D array of the same dimension '
838:                         'as u and v.')
839:     return euclidean(u, v, w=1/V)
840: 
841: 
842: def cityblock(u, v, w=None):
843:     '''
844:     Computes the City Block (Manhattan) distance.
845: 
846:     Computes the Manhattan distance between two 1-D arrays `u` and `v`,
847:     which is defined as
848: 
849:     .. math::
850: 
851:        \\sum_i {\\left| u_i - v_i \\right|}.
852: 
853:     Parameters
854:     ----------
855:     u : (N,) array_like
856:         Input array.
857:     v : (N,) array_like
858:         Input array.
859:     w : (N,) array_like, optional
860:         The weights for each value in `u` and `v`. Default is None,
861:         which gives each value a weight of 1.0
862: 
863:     Returns
864:     -------
865:     cityblock : double
866:         The City Block (Manhattan) distance between vectors `u` and `v`.
867: 
868:     '''
869:     u = _validate_vector(u)
870:     v = _validate_vector(v)
871:     l1_diff = abs(u - v)
872:     if w is not None:
873:         w = _validate_vector(w)
874:         l1_diff = w * l1_diff
875:     return l1_diff.sum()
876: 
877: 
878: def mahalanobis(u, v, VI):
879:     '''
880:     Computes the Mahalanobis distance between two 1-D arrays.
881: 
882:     The Mahalanobis distance between 1-D arrays `u` and `v`, is defined as
883: 
884:     .. math::
885: 
886:        \\sqrt{ (u-v) V^{-1} (u-v)^T }
887: 
888:     where ``V`` is the covariance matrix.  Note that the argument `VI`
889:     is the inverse of ``V``.
890: 
891:     Parameters
892:     ----------
893:     u : (N,) array_like
894:         Input array.
895:     v : (N,) array_like
896:         Input array.
897:     VI : ndarray
898:         The inverse of the covariance matrix.
899: 
900:     Returns
901:     -------
902:     mahalanobis : double
903:         The Mahalanobis distance between vectors `u` and `v`.
904: 
905:     '''
906:     u = _validate_vector(u)
907:     v = _validate_vector(v)
908:     VI = np.atleast_2d(VI)
909:     delta = u - v
910:     m = np.dot(np.dot(delta, VI), delta)
911:     return np.sqrt(m)
912: 
913: 
914: def chebyshev(u, v):
915:     '''
916:     Computes the Chebyshev distance.
917: 
918:     Computes the Chebyshev distance between two 1-D arrays `u` and `v`,
919:     which is defined as
920: 
921:     .. math::
922: 
923:        \\max_i {|u_i-v_i|}.
924: 
925:     Parameters
926:     ----------
927:     u : (N,) array_like
928:         Input vector.
929:     v : (N,) array_like
930:         Input vector.
931: 
932:     Returns
933:     -------
934:     chebyshev : double
935:         The Chebyshev distance between vectors `u` and `v`.
936: 
937:     '''
938:     u = _validate_vector(u)
939:     v = _validate_vector(v)
940:     return max(abs(u - v))
941: 
942: 
943: def braycurtis(u, v, w=None):
944:     '''
945:     Computes the Bray-Curtis distance between two 1-D arrays.
946: 
947:     Bray-Curtis distance is defined as
948: 
949:     .. math::
950: 
951:        \\sum{|u_i-v_i|} / \\sum{|u_i+v_i|}
952: 
953:     The Bray-Curtis distance is in the range [0, 1] if all coordinates are
954:     positive, and is undefined if the inputs are of length zero.
955: 
956:     Parameters
957:     ----------
958:     u : (N,) array_like
959:         Input array.
960:     v : (N,) array_like
961:         Input array.
962:     w : (N,) array_like, optional
963:         The weights for each value in `u` and `v`. Default is None,
964:         which gives each value a weight of 1.0
965: 
966:     Returns
967:     -------
968:     braycurtis : double
969:         The Bray-Curtis distance between 1-D arrays `u` and `v`.
970: 
971:     '''
972:     u = _validate_vector(u)
973:     v = _validate_vector(v, dtype=np.float64)
974:     l1_diff = abs(u - v)
975:     l1_sum = abs(u + v)
976:     if w is not None:
977:         w = _validate_vector(w)
978:         l1_diff = w * l1_diff
979:         l1_sum = w * l1_sum
980:     return l1_diff.sum() / l1_sum.sum()
981: 
982: 
983: def canberra(u, v, w=None):
984:     '''
985:     Computes the Canberra distance between two 1-D arrays.
986: 
987:     The Canberra distance is defined as
988: 
989:     .. math::
990: 
991:          d(u,v) = \\sum_i \\frac{|u_i-v_i|}
992:                               {|u_i|+|v_i|}.
993: 
994:     Parameters
995:     ----------
996:     u : (N,) array_like
997:         Input array.
998:     v : (N,) array_like
999:         Input array.
1000:     w : (N,) array_like, optional
1001:         The weights for each value in `u` and `v`. Default is None,
1002:         which gives each value a weight of 1.0
1003: 
1004:     Returns
1005:     -------
1006:     canberra : double
1007:         The Canberra distance between vectors `u` and `v`.
1008: 
1009:     Notes
1010:     -----
1011:     When `u[i]` and `v[i]` are 0 for given i, then the fraction 0/0 = 0 is
1012:     used in the calculation.
1013: 
1014:     '''
1015:     u = _validate_vector(u)
1016:     v = _validate_vector(v, dtype=np.float64)
1017:     if w is not None:
1018:         w = _validate_vector(w)
1019:     olderr = np.seterr(invalid='ignore')
1020:     try:
1021:         abs_uv = abs(u - v)
1022:         abs_u = abs(u)
1023:         abs_v = abs(v)
1024:         d = abs_uv / (abs_u + abs_v)
1025:         if w is not None:
1026:             d = w * d
1027:         d = np.nansum(d)
1028:     finally:
1029:         np.seterr(**olderr)
1030:     return d
1031: 
1032: 
1033: def yule(u, v, w=None):
1034:     '''
1035:     Computes the Yule dissimilarity between two boolean 1-D arrays.
1036: 
1037:     The Yule dissimilarity is defined as
1038: 
1039:     .. math::
1040: 
1041:          \\frac{R}{c_{TT} * c_{FF} + \\frac{R}{2}}
1042: 
1043:     where :math:`c_{ij}` is the number of occurrences of
1044:     :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for
1045:     :math:`k < n` and :math:`R = 2.0 * c_{TF} * c_{FT}`.
1046: 
1047:     Parameters
1048:     ----------
1049:     u : (N,) array_like, bool
1050:         Input array.
1051:     v : (N,) array_like, bool
1052:         Input array.
1053:     w : (N,) array_like, optional
1054:         The weights for each value in `u` and `v`. Default is None,
1055:         which gives each value a weight of 1.0
1056: 
1057:     Returns
1058:     -------
1059:     yule : double
1060:         The Yule dissimilarity between vectors `u` and `v`.
1061: 
1062:     '''
1063:     u = _validate_vector(u)
1064:     v = _validate_vector(v)
1065:     if w is not None:
1066:         w = _validate_vector(w)
1067:     (nff, nft, ntf, ntt) = _nbool_correspond_all(u, v, w=w)
1068:     return float(2.0 * ntf * nft / np.array(ntt * nff + ntf * nft))
1069: 
1070: @np.deprecate(message="spatial.distance.matching is deprecated in scipy 1.0.0; "
1071:                       "use spatial.distance.hamming instead.")
1072: def matching(u, v, w=None):
1073:     '''
1074:     Computes the Hamming distance between two boolean 1-D arrays.
1075: 
1076:     This is a deprecated synonym for :func:`hamming`.
1077:     '''
1078:     return hamming(u, v, w=w)
1079: 
1080: 
1081: def dice(u, v, w=None):
1082:     '''
1083:     Computes the Dice dissimilarity between two boolean 1-D arrays.
1084: 
1085:     The Dice dissimilarity between `u` and `v`, is
1086: 
1087:     .. math::
1088: 
1089:          \\frac{c_{TF} + c_{FT}}
1090:               {2c_{TT} + c_{FT} + c_{TF}}
1091: 
1092:     where :math:`c_{ij}` is the number of occurrences of
1093:     :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for
1094:     :math:`k < n`.
1095: 
1096:     Parameters
1097:     ----------
1098:     u : (N,) ndarray, bool
1099:         Input 1-D array.
1100:     v : (N,) ndarray, bool
1101:         Input 1-D array.
1102:     w : (N,) array_like, optional
1103:         The weights for each value in `u` and `v`. Default is None,
1104:         which gives each value a weight of 1.0
1105: 
1106:     Returns
1107:     -------
1108:     dice : double
1109:         The Dice dissimilarity between 1-D arrays `u` and `v`.
1110: 
1111:     '''
1112:     u = _validate_vector(u)
1113:     v = _validate_vector(v)
1114:     if w is not None:
1115:         w = _validate_vector(w)
1116:     if u.dtype == v.dtype == bool and w is None:
1117:         ntt = (u & v).sum()
1118:     else:
1119:         dtype = np.find_common_type([int], [u.dtype, v.dtype])
1120:         u = u.astype(dtype)
1121:         v = v.astype(dtype)
1122:         if w is None:
1123:             ntt = (u * v).sum()
1124:         else:
1125:             ntt = (u * v * w).sum()
1126:     (nft, ntf) = _nbool_correspond_ft_tf(u, v, w=w)
1127:     return float((ntf + nft) / np.array(2.0 * ntt + ntf + nft))
1128: 
1129: 
1130: def rogerstanimoto(u, v, w=None):
1131:     '''
1132:     Computes the Rogers-Tanimoto dissimilarity between two boolean 1-D arrays.
1133: 
1134:     The Rogers-Tanimoto dissimilarity between two boolean 1-D arrays
1135:     `u` and `v`, is defined as
1136: 
1137:     .. math::
1138:        \\frac{R}
1139:             {c_{TT} + c_{FF} + R}
1140: 
1141:     where :math:`c_{ij}` is the number of occurrences of
1142:     :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for
1143:     :math:`k < n` and :math:`R = 2(c_{TF} + c_{FT})`.
1144: 
1145:     Parameters
1146:     ----------
1147:     u : (N,) array_like, bool
1148:         Input array.
1149:     v : (N,) array_like, bool
1150:         Input array.
1151:     w : (N,) array_like, optional
1152:         The weights for each value in `u` and `v`. Default is None,
1153:         which gives each value a weight of 1.0
1154: 
1155:     Returns
1156:     -------
1157:     rogerstanimoto : double
1158:         The Rogers-Tanimoto dissimilarity between vectors
1159:         `u` and `v`.
1160: 
1161:     '''
1162:     u = _validate_vector(u)
1163:     v = _validate_vector(v)
1164:     if w is not None:
1165:         w = _validate_vector(w)
1166:     (nff, nft, ntf, ntt) = _nbool_correspond_all(u, v, w=w)
1167:     return float(2.0 * (ntf + nft)) / float(ntt + nff + (2.0 * (ntf + nft)))
1168: 
1169: 
1170: def russellrao(u, v, w=None):
1171:     '''
1172:     Computes the Russell-Rao dissimilarity between two boolean 1-D arrays.
1173: 
1174:     The Russell-Rao dissimilarity between two boolean 1-D arrays, `u` and
1175:     `v`, is defined as
1176: 
1177:     .. math::
1178: 
1179:       \\frac{n - c_{TT}}
1180:            {n}
1181: 
1182:     where :math:`c_{ij}` is the number of occurrences of
1183:     :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for
1184:     :math:`k < n`.
1185: 
1186:     Parameters
1187:     ----------
1188:     u : (N,) array_like, bool
1189:         Input array.
1190:     v : (N,) array_like, bool
1191:         Input array.
1192:     w : (N,) array_like, optional
1193:         The weights for each value in `u` and `v`. Default is None,
1194:         which gives each value a weight of 1.0
1195: 
1196:     Returns
1197:     -------
1198:     russellrao : double
1199:         The Russell-Rao dissimilarity between vectors `u` and `v`.
1200: 
1201:     '''
1202:     u = _validate_vector(u)
1203:     v = _validate_vector(v)
1204:     if u.dtype == v.dtype == bool and w is None:
1205:         ntt = (u & v).sum()
1206:         n = float(len(u))
1207:     elif w is None:
1208:         ntt = (u * v).sum()
1209:         n = float(len(u))
1210:     else:
1211:         w = _validate_vector(w)
1212:         ntt = (u * v * w).sum()
1213:         n = w.sum()
1214:     return float(n - ntt) / n
1215: 
1216: 
1217: def sokalmichener(u, v, w=None):
1218:     '''
1219:     Computes the Sokal-Michener dissimilarity between two boolean 1-D arrays.
1220: 
1221:     The Sokal-Michener dissimilarity between boolean 1-D arrays `u` and `v`,
1222:     is defined as
1223: 
1224:     .. math::
1225: 
1226:        \\frac{R}
1227:             {S + R}
1228: 
1229:     where :math:`c_{ij}` is the number of occurrences of
1230:     :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for
1231:     :math:`k < n`, :math:`R = 2 * (c_{TF} + c_{FT})` and
1232:     :math:`S = c_{FF} + c_{TT}`.
1233: 
1234:     Parameters
1235:     ----------
1236:     u : (N,) array_like, bool
1237:         Input array.
1238:     v : (N,) array_like, bool
1239:         Input array.
1240:     w : (N,) array_like, optional
1241:         The weights for each value in `u` and `v`. Default is None,
1242:         which gives each value a weight of 1.0
1243: 
1244:     Returns
1245:     -------
1246:     sokalmichener : double
1247:         The Sokal-Michener dissimilarity between vectors `u` and `v`.
1248: 
1249:     '''
1250:     u = _validate_vector(u)
1251:     v = _validate_vector(v)
1252:     if u.dtype == v.dtype == bool and w is None:
1253:         ntt = (u & v).sum()
1254:         nff = (~u & ~v).sum()
1255:     elif w is None:
1256:         ntt = (u * v).sum()
1257:         nff = ((1.0 - u) * (1.0 - v)).sum()
1258:     else:
1259:         w = _validate_vector(w)
1260:         ntt = (u * v * w).sum()
1261:         nff = ((1.0 - u) * (1.0 - v) * w).sum()
1262:     (nft, ntf) = _nbool_correspond_ft_tf(u, v)
1263:     return float(2.0 * (ntf + nft)) / float(ntt + nff + 2.0 * (ntf + nft))
1264: 
1265: 
1266: def sokalsneath(u, v, w=None):
1267:     '''
1268:     Computes the Sokal-Sneath dissimilarity between two boolean 1-D arrays.
1269: 
1270:     The Sokal-Sneath dissimilarity between `u` and `v`,
1271: 
1272:     .. math::
1273: 
1274:        \\frac{R}
1275:             {c_{TT} + R}
1276: 
1277:     where :math:`c_{ij}` is the number of occurrences of
1278:     :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for
1279:     :math:`k < n` and :math:`R = 2(c_{TF} + c_{FT})`.
1280: 
1281:     Parameters
1282:     ----------
1283:     u : (N,) array_like, bool
1284:         Input array.
1285:     v : (N,) array_like, bool
1286:         Input array.
1287:     w : (N,) array_like, optional
1288:         The weights for each value in `u` and `v`. Default is None,
1289:         which gives each value a weight of 1.0
1290: 
1291:     Returns
1292:     -------
1293:     sokalsneath : double
1294:         The Sokal-Sneath dissimilarity between vectors `u` and `v`.
1295: 
1296:     '''
1297:     u = _validate_vector(u)
1298:     v = _validate_vector(v)
1299:     if u.dtype == v.dtype == bool and w is None:
1300:         ntt = (u & v).sum()
1301:     elif w is None:
1302:         ntt = (u * v).sum()
1303:     else:
1304:         w = _validate_vector(w)
1305:         ntt = (u * v * w).sum()
1306:     (nft, ntf) = _nbool_correspond_ft_tf(u, v, w=w)
1307:     denom = np.array(ntt + 2.0 * (ntf + nft))
1308:     if not denom.any():
1309:         raise ValueError('Sokal-Sneath dissimilarity is not defined for '
1310:                          'vectors that are entirely false.')
1311:     return float(2.0 * (ntf + nft)) / denom
1312: 
1313: 
1314: _convert_to_double = partial(_convert_to_type, out_type=np.double)
1315: _convert_to_bool = partial(_convert_to_type, out_type=bool)
1316: 
1317: # adding python-only wrappers to _distance_wrap module
1318: _distance_wrap.pdist_correlation_double_wrap = _correlation_pdist_wrap
1319: _distance_wrap.cdist_correlation_double_wrap = _correlation_cdist_wrap
1320: 
1321: # Registry of implemented metrics:
1322: # Dictionary with the following structure:
1323: # {
1324: #  metric_name : MetricInfo(aka, types=[double], validator=None)
1325: # }
1326: #
1327: # Where:
1328: # `metric_name` must be equal to python metric name
1329: #
1330: # MetricInfo is a named tuple with fields:
1331: #  'aka' : [list of aliases],
1332: #
1333: #  'validator': f(X, m, n, **kwargs)    # function that check kwargs and
1334: #                                       # computes default values.
1335: #
1336: #  'types': [list of supported types],  # X (pdist) and XA (cdist) are used to
1337: #                                       # choose the type. if there is no match
1338: #                                       # the first type is used. Default double
1339: #}
1340: MetricInfo = namedtuple("MetricInfo", 'aka types validator ')
1341: MetricInfo.__new__.__defaults__ = (['double'], None)
1342: 
1343: _METRICS = {
1344:     'braycurtis': MetricInfo(aka=['braycurtis']),
1345:     'canberra': MetricInfo(aka=['canberra']),
1346:     'chebyshev': MetricInfo(aka=['chebychev', 'chebyshev', 'cheby', 'cheb', 'ch']),
1347:     'cityblock': MetricInfo(aka=['cityblock', 'cblock', 'cb', 'c']),
1348:     'correlation': MetricInfo(aka=['correlation', 'co']),
1349:     'cosine': MetricInfo(aka=['cosine', 'cos']),
1350:     'dice': MetricInfo(aka=['dice'], types=['bool']),
1351:     'euclidean': MetricInfo(aka=['euclidean', 'euclid', 'eu', 'e']),
1352:     'hamming': MetricInfo(aka=['matching', 'hamming', 'hamm', 'ha', 'h'],
1353:                           types=['double', 'bool']),
1354:     'jaccard': MetricInfo(aka=['jaccard', 'jacc', 'ja', 'j'],
1355:                           types=['double', 'bool']),
1356:     'kulsinski': MetricInfo(aka=['kulsinski'], types=['bool']),
1357:     'mahalanobis': MetricInfo(aka=['mahalanobis', 'mahal', 'mah'],
1358:                               validator=_validate_mahalanobis_kwargs),
1359:     'minkowski': MetricInfo(aka=['minkowski', 'mi', 'm', 'pnorm'],
1360:                             validator=_validate_minkowski_kwargs),
1361:     'rogerstanimoto': MetricInfo(aka=['rogerstanimoto'], types=['bool']),
1362:     'russellrao': MetricInfo(aka=['russellrao'], types=['bool']),
1363:     'seuclidean': MetricInfo(aka=['seuclidean', 'se', 's'],
1364:                              validator=_validate_seuclidean_kwargs),
1365:     'sokalmichener': MetricInfo(aka=['sokalmichener'], types=['bool']),
1366:     'sokalsneath': MetricInfo(aka=['sokalsneath'], types=['bool']),
1367:     'sqeuclidean': MetricInfo(aka=['sqeuclidean', 'sqe', 'sqeuclid']),
1368:     'wminkowski': MetricInfo(aka=['wminkowski', 'wmi', 'wm', 'wpnorm'],
1369:                              validator=_validate_wminkowski_kwargs),
1370:     'yule': MetricInfo(aka=['yule'], types=['bool']),
1371:     }
1372: 
1373: 
1374: _METRIC_ALIAS = dict((alias, name)
1375:                      for name, info in _METRICS.items()
1376:                      for alias in info.aka)
1377: 
1378: _METRICS_NAMES = list(_METRICS.keys())
1379: 
1380: _TEST_METRICS = {'test_' + name: globals()[name] for name in _METRICS.keys()}
1381: 
1382: 
1383: def pdist(X, metric='euclidean', *args, **kwargs):
1384:     '''
1385:     Pairwise distances between observations in n-dimensional space.
1386: 
1387:     See Notes for common calling conventions.
1388: 
1389:     Parameters
1390:     ----------
1391:     X : ndarray
1392:         An m by n array of m original observations in an
1393:         n-dimensional space.
1394:     metric : str or function, optional
1395:         The distance metric to use. The distance function can
1396:         be 'braycurtis', 'canberra', 'chebyshev', 'cityblock',
1397:         'correlation', 'cosine', 'dice', 'euclidean', 'hamming',
1398:         'jaccard', 'kulsinski', 'mahalanobis', 'matching',
1399:         'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean',
1400:         'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule'.
1401:     *args : tuple. Deprecated.
1402:         Additional arguments should be passed as keyword arguments
1403:     **kwargs : dict, optional
1404:         Extra arguments to `metric`: refer to each metric documentation for a
1405:         list of all possible arguments.
1406: 
1407:         Some possible arguments:
1408: 
1409:         p : scalar
1410:         The p-norm to apply for Minkowski, weighted and unweighted.
1411:         Default: 2.
1412: 
1413:         w : ndarray
1414:         The weight vector for metrics that support weights (e.g., Minkowski).
1415: 
1416:         V : ndarray
1417:         The variance vector for standardized Euclidean.
1418:         Default: var(X, axis=0, ddof=1)
1419: 
1420:         VI : ndarray
1421:         The inverse of the covariance matrix for Mahalanobis.
1422:         Default: inv(cov(X.T)).T
1423: 
1424:         out : ndarray.
1425:         The output array
1426:         If not None, condensed distance matrix Y is stored in this array.
1427:         Note: metric independent, it will become a regular keyword arg in a
1428:         future scipy version
1429: 
1430:     Returns
1431:     -------
1432:     Y : ndarray
1433:         Returns a condensed distance matrix Y.  For
1434:         each :math:`i` and :math:`j` (where :math:`i<j<m`),where m is the number
1435:         of original observations. The metric ``dist(u=X[i], v=X[j])``
1436:         is computed and stored in entry ``ij``.
1437: 
1438:     See Also
1439:     --------
1440:     squareform : converts between condensed distance matrices and
1441:                  square distance matrices.
1442: 
1443:     Notes
1444:     -----
1445:     See ``squareform`` for information on how to calculate the index of
1446:     this entry or to convert the condensed distance matrix to a
1447:     redundant square matrix.
1448: 
1449:     The following are common calling conventions.
1450: 
1451:     1. ``Y = pdist(X, 'euclidean')``
1452: 
1453:        Computes the distance between m points using Euclidean distance
1454:        (2-norm) as the distance metric between the points. The points
1455:        are arranged as m n-dimensional row vectors in the matrix X.
1456: 
1457:     2. ``Y = pdist(X, 'minkowski', p=2.)``
1458: 
1459:        Computes the distances using the Minkowski distance
1460:        :math:`||u-v||_p` (p-norm) where :math:`p \\geq 1`.
1461: 
1462:     3. ``Y = pdist(X, 'cityblock')``
1463: 
1464:        Computes the city block or Manhattan distance between the
1465:        points.
1466: 
1467:     4. ``Y = pdist(X, 'seuclidean', V=None)``
1468: 
1469:        Computes the standardized Euclidean distance. The standardized
1470:        Euclidean distance between two n-vectors ``u`` and ``v`` is
1471: 
1472:        .. math::
1473: 
1474:           \\sqrt{\\sum {(u_i-v_i)^2 / V[x_i]}}
1475: 
1476: 
1477:        V is the variance vector; V[i] is the variance computed over all
1478:        the i'th components of the points.  If not passed, it is
1479:        automatically computed.
1480: 
1481:     5. ``Y = pdist(X, 'sqeuclidean')``
1482: 
1483:        Computes the squared Euclidean distance :math:`||u-v||_2^2` between
1484:        the vectors.
1485: 
1486:     6. ``Y = pdist(X, 'cosine')``
1487: 
1488:        Computes the cosine distance between vectors u and v,
1489: 
1490:        .. math::
1491: 
1492:           1 - \\frac{u \\cdot v}
1493:                    {{||u||}_2 {||v||}_2}
1494: 
1495:        where :math:`||*||_2` is the 2-norm of its argument ``*``, and
1496:        :math:`u \\cdot v` is the dot product of ``u`` and ``v``.
1497: 
1498:     7. ``Y = pdist(X, 'correlation')``
1499: 
1500:        Computes the correlation distance between vectors u and v. This is
1501: 
1502:        .. math::
1503: 
1504:           1 - \\frac{(u - \\bar{u}) \\cdot (v - \\bar{v})}
1505:                    {{||(u - \\bar{u})||}_2 {||(v - \\bar{v})||}_2}
1506: 
1507:        where :math:`\\bar{v}` is the mean of the elements of vector v,
1508:        and :math:`x \\cdot y` is the dot product of :math:`x` and :math:`y`.
1509: 
1510:     8. ``Y = pdist(X, 'hamming')``
1511: 
1512:        Computes the normalized Hamming distance, or the proportion of
1513:        those vector elements between two n-vectors ``u`` and ``v``
1514:        which disagree. To save memory, the matrix ``X`` can be of type
1515:        boolean.
1516: 
1517:     9. ``Y = pdist(X, 'jaccard')``
1518: 
1519:        Computes the Jaccard distance between the points. Given two
1520:        vectors, ``u`` and ``v``, the Jaccard distance is the
1521:        proportion of those elements ``u[i]`` and ``v[i]`` that
1522:        disagree.
1523: 
1524:     10. ``Y = pdist(X, 'chebyshev')``
1525: 
1526:        Computes the Chebyshev distance between the points. The
1527:        Chebyshev distance between two n-vectors ``u`` and ``v`` is the
1528:        maximum norm-1 distance between their respective elements. More
1529:        precisely, the distance is given by
1530: 
1531:        .. math::
1532: 
1533:           d(u,v) = \\max_i {|u_i-v_i|}
1534: 
1535:     11. ``Y = pdist(X, 'canberra')``
1536: 
1537:        Computes the Canberra distance between the points. The
1538:        Canberra distance between two points ``u`` and ``v`` is
1539: 
1540:        .. math::
1541: 
1542:          d(u,v) = \\sum_i \\frac{|u_i-v_i|}
1543:                               {|u_i|+|v_i|}
1544: 
1545: 
1546:     12. ``Y = pdist(X, 'braycurtis')``
1547: 
1548:        Computes the Bray-Curtis distance between the points. The
1549:        Bray-Curtis distance between two points ``u`` and ``v`` is
1550: 
1551: 
1552:        .. math::
1553: 
1554:             d(u,v) = \\frac{\\sum_i {|u_i-v_i|}}
1555:                            {\\sum_i {|u_i+v_i|}}
1556: 
1557:     13. ``Y = pdist(X, 'mahalanobis', VI=None)``
1558: 
1559:        Computes the Mahalanobis distance between the points. The
1560:        Mahalanobis distance between two points ``u`` and ``v`` is
1561:        :math:`\\sqrt{(u-v)(1/V)(u-v)^T}` where :math:`(1/V)` (the ``VI``
1562:        variable) is the inverse covariance. If ``VI`` is not None,
1563:        ``VI`` will be used as the inverse covariance matrix.
1564: 
1565:     14. ``Y = pdist(X, 'yule')``
1566: 
1567:        Computes the Yule distance between each pair of boolean
1568:        vectors. (see yule function documentation)
1569: 
1570:     15. ``Y = pdist(X, 'matching')``
1571: 
1572:        Synonym for 'hamming'.
1573: 
1574:     16. ``Y = pdist(X, 'dice')``
1575: 
1576:        Computes the Dice distance between each pair of boolean
1577:        vectors. (see dice function documentation)
1578: 
1579:     17. ``Y = pdist(X, 'kulsinski')``
1580: 
1581:        Computes the Kulsinski distance between each pair of
1582:        boolean vectors. (see kulsinski function documentation)
1583: 
1584:     18. ``Y = pdist(X, 'rogerstanimoto')``
1585: 
1586:        Computes the Rogers-Tanimoto distance between each pair of
1587:        boolean vectors. (see rogerstanimoto function documentation)
1588: 
1589:     19. ``Y = pdist(X, 'russellrao')``
1590: 
1591:        Computes the Russell-Rao distance between each pair of
1592:        boolean vectors. (see russellrao function documentation)
1593: 
1594:     20. ``Y = pdist(X, 'sokalmichener')``
1595: 
1596:        Computes the Sokal-Michener distance between each pair of
1597:        boolean vectors. (see sokalmichener function documentation)
1598: 
1599:     21. ``Y = pdist(X, 'sokalsneath')``
1600: 
1601:        Computes the Sokal-Sneath distance between each pair of
1602:        boolean vectors. (see sokalsneath function documentation)
1603: 
1604:     22. ``Y = pdist(X, 'wminkowski', p=2, w=w)``
1605: 
1606:        Computes the weighted Minkowski distance between each pair of
1607:        vectors. (see wminkowski function documentation)
1608: 
1609:     23. ``Y = pdist(X, f)``
1610: 
1611:        Computes the distance between all pairs of vectors in X
1612:        using the user supplied 2-arity function f. For example,
1613:        Euclidean distance between the vectors could be computed
1614:        as follows::
1615: 
1616:          dm = pdist(X, lambda u, v: np.sqrt(((u-v)**2).sum()))
1617: 
1618:        Note that you should avoid passing a reference to one of
1619:        the distance functions defined in this library. For example,::
1620: 
1621:          dm = pdist(X, sokalsneath)
1622: 
1623:        would calculate the pair-wise distances between the vectors in
1624:        X using the Python function sokalsneath. This would result in
1625:        sokalsneath being called :math:`{n \\choose 2}` times, which
1626:        is inefficient. Instead, the optimized C version is more
1627:        efficient, and we call it using the following syntax.::
1628: 
1629:          dm = pdist(X, 'sokalsneath')
1630: 
1631:     '''
1632:     # You can also call this as:
1633:     #     Y = pdist(X, 'test_abc')
1634:     # where 'abc' is the metric being tested.  This computes the distance
1635:     # between all pairs of vectors in X using the distance metric 'abc' but
1636:     # with a more succinct, verifiable, but less efficient implementation.
1637: 
1638:     kwargs = _args_to_kwargs_xdist(args, kwargs, metric, "pdist")
1639: 
1640:     X = np.asarray(X, order='c')
1641: 
1642:     # The C code doesn't do striding.
1643:     X = _copy_array_if_base_present(X)
1644: 
1645:     s = X.shape
1646:     if len(s) != 2:
1647:         raise ValueError('A 2-dimensional array must be passed.')
1648: 
1649:     m, n = s
1650:     out = kwargs.pop("out", None)
1651:     if out is None:
1652:         dm = np.empty((m * (m - 1)) // 2, dtype=np.double)
1653:     else:
1654:         if out.shape != (m * (m - 1) // 2,):
1655:             raise ValueError("output array has incorrect shape.")
1656:         if not out.flags.c_contiguous:
1657:             raise ValueError("Output array must be C-contiguous.")
1658:         if out.dtype != np.double:
1659:             raise ValueError("Output array must be double type.")
1660:         dm = out
1661: 
1662:     # compute blacklist for deprecated kwargs
1663:     if(metric in _METRICS['minkowski'].aka or
1664:        metric in _METRICS['wminkowski'].aka or
1665:        metric in ['test_minkowski', 'test_wminkowski'] or
1666:        metric in [minkowski, wminkowski]):
1667:         kwargs_blacklist = ["V", "VI"]
1668:     elif(metric in _METRICS['seuclidean'].aka or
1669:          metric == 'test_seuclidean' or metric == seuclidean):
1670:         kwargs_blacklist = ["p", "w", "VI"]
1671:     elif(metric in _METRICS['mahalanobis'].aka or
1672:          metric == 'test_mahalanobis' or metric == mahalanobis):
1673:         kwargs_blacklist = ["p", "w", "V"]
1674:     else:
1675:         kwargs_blacklist = ["p", "V", "VI"]
1676: 
1677:     _filter_deprecated_kwargs(kwargs, kwargs_blacklist)
1678: 
1679:     if callable(metric):
1680:         mstr = getattr(metric, '__name__', 'UnknownCustomMetric')
1681:         metric_name = _METRIC_ALIAS.get(mstr, None)
1682: 
1683:         if metric_name is not None:
1684:             X, typ, kwargs = _validate_pdist_input(X, m, n,
1685:                                                    metric_name, **kwargs)
1686: 
1687:         k = 0
1688:         for i in xrange(0, m - 1):
1689:             for j in xrange(i + 1, m):
1690:                 dm[k] = metric(X[i], X[j], **kwargs)
1691:                 k = k + 1
1692: 
1693:     elif isinstance(metric, string_types):
1694:         mstr = metric.lower()
1695: 
1696:         # NOTE: C-version still does not support weights
1697:         if "w" in kwargs and not mstr.startswith("test_"):
1698:             if(mstr in _METRICS['seuclidean'].aka or
1699:                mstr in _METRICS['mahalanobis'].aka):
1700:                 raise ValueError("metric %s incompatible with weights" % mstr)
1701:             # need to use python version for weighting
1702:             kwargs['out'] = out
1703:             mstr = "test_%s" % mstr
1704: 
1705:         metric_name = _METRIC_ALIAS.get(mstr, None)
1706: 
1707:         if metric_name is not None:
1708:             X, typ, kwargs = _validate_pdist_input(X, m, n,
1709:                                                    metric_name, **kwargs)
1710: 
1711:             # get pdist wrapper
1712:             pdist_fn = getattr(_distance_wrap,
1713:                                "pdist_%s_%s_wrap" % (metric_name, typ))
1714:             pdist_fn(X, dm, **kwargs)
1715:             return dm
1716: 
1717:         elif mstr in ['old_cosine', 'old_cos']:
1718:             warnings.warn('"old_cosine" is deprecated and will be removed in '
1719:                           'a future version. Use "cosine" instead.',
1720:                           DeprecationWarning)
1721:             X = _convert_to_double(X)
1722:             norms = np.einsum('ij,ij->i', X, X, dtype=np.double)
1723:             np.sqrt(norms, out=norms)
1724:             nV = norms.reshape(m, 1)
1725:             # The numerator u * v
1726:             nm = np.dot(X, X.T)
1727:             # The denom. ||u||*||v||
1728:             de = np.dot(nV, nV.T)
1729:             dm = 1.0 - (nm / de)
1730:             dm[xrange(0, m), xrange(0, m)] = 0.0
1731:             dm = squareform(dm)
1732:         elif mstr.startswith("test_"):
1733:             if mstr in _TEST_METRICS:
1734:                 dm = pdist(X, _TEST_METRICS[mstr], **kwargs)
1735:             else:
1736:                 raise ValueError('Unknown "Test" Distance Metric: %s' % mstr[5:])
1737:         else:
1738:             raise ValueError('Unknown Distance Metric: %s' % mstr)
1739:     else:
1740:         raise TypeError('2nd argument metric must be a string identifier '
1741:                         'or a function.')
1742:     return dm
1743: 
1744: 
1745: def squareform(X, force="no", checks=True):
1746:     '''
1747:     Converts a vector-form distance vector to a square-form distance
1748:     matrix, and vice-versa.
1749: 
1750:     Parameters
1751:     ----------
1752:     X : ndarray
1753:         Either a condensed or redundant distance matrix.
1754:     force : str, optional
1755:         As with MATLAB(TM), if force is equal to ``'tovector'`` or
1756:         ``'tomatrix'``, the input will be treated as a distance matrix or
1757:         distance vector respectively.
1758:     checks : bool, optional
1759:         If set to False, no checks will be made for matrix
1760:         symmetry nor zero diagonals. This is useful if it is known that
1761:         ``X - X.T1`` is small and ``diag(X)`` is close to zero.
1762:         These values are ignored any way so they do not disrupt the
1763:         squareform transformation.
1764: 
1765:     Returns
1766:     -------
1767:     Y : ndarray
1768:         If a condensed distance matrix is passed, a redundant one is
1769:         returned, or if a redundant one is passed, a condensed distance
1770:         matrix is returned.
1771: 
1772:     Notes
1773:     -----
1774:     1. v = squareform(X)
1775: 
1776:        Given a square d-by-d symmetric distance matrix X,
1777:        ``v = squareform(X)`` returns a ``d * (d-1) / 2`` (or
1778:        :math:`{n \\choose 2}`) sized vector v.
1779: 
1780:       :math:`v[{n \\choose 2}-{n-i \\choose 2} + (j-i-1)]` is the distance
1781:       between points i and j. If X is non-square or asymmetric, an error
1782:       is returned.
1783: 
1784:     2. X = squareform(v)
1785: 
1786:       Given a ``d*(d-1)/2`` sized v for some integer ``d >= 2`` encoding
1787:       distances as described, ``X = squareform(v)`` returns a d by d distance
1788:       matrix X.  The ``X[i, j]`` and ``X[j, i]`` values are set to
1789:       :math:`v[{n \\choose 2}-{n-i \\choose 2} + (j-i-1)]` and all
1790:       diagonal elements are zero.
1791: 
1792:     In Scipy 0.19.0, ``squareform`` stopped casting all input types to
1793:     float64, and started returning arrays of the same dtype as the input.
1794: 
1795:     '''
1796: 
1797:     X = np.ascontiguousarray(X)
1798: 
1799:     s = X.shape
1800: 
1801:     if force.lower() == 'tomatrix':
1802:         if len(s) != 1:
1803:             raise ValueError("Forcing 'tomatrix' but input X is not a "
1804:                              "distance vector.")
1805:     elif force.lower() == 'tovector':
1806:         if len(s) != 2:
1807:             raise ValueError("Forcing 'tovector' but input X is not a "
1808:                              "distance matrix.")
1809: 
1810:     # X = squareform(v)
1811:     if len(s) == 1:
1812:         if s[0] == 0:
1813:             return np.zeros((1, 1), dtype=X.dtype)
1814: 
1815:         # Grab the closest value to the square root of the number
1816:         # of elements times 2 to see if the number of elements
1817:         # is indeed a binomial coefficient.
1818:         d = int(np.ceil(np.sqrt(s[0] * 2)))
1819: 
1820:         # Check that v is of valid dimensions.
1821:         if d * (d - 1) != s[0] * 2:
1822:             raise ValueError('Incompatible vector size. It must be a binomial '
1823:                              'coefficient n choose 2 for some integer n >= 2.')
1824: 
1825:         # Allocate memory for the distance matrix.
1826:         M = np.zeros((d, d), dtype=X.dtype)
1827: 
1828:         # Since the C code does not support striding using strides.
1829:         # The dimensions are used instead.
1830:         X = _copy_array_if_base_present(X)
1831: 
1832:         # Fill in the values of the distance matrix.
1833:         _distance_wrap.to_squareform_from_vector_wrap(M, X)
1834: 
1835:         # Return the distance matrix.
1836:         return M
1837:     elif len(s) == 2:
1838:         if s[0] != s[1]:
1839:             raise ValueError('The matrix argument must be square.')
1840:         if checks:
1841:             is_valid_dm(X, throw=True, name='X')
1842: 
1843:         # One-side of the dimensions is set here.
1844:         d = s[0]
1845: 
1846:         if d <= 1:
1847:             return np.array([], dtype=X.dtype)
1848: 
1849:         # Create a vector.
1850:         v = np.zeros((d * (d - 1)) // 2, dtype=X.dtype)
1851: 
1852:         # Since the C code does not support striding using strides.
1853:         # The dimensions are used instead.
1854:         X = _copy_array_if_base_present(X)
1855: 
1856:         # Convert the vector to squareform.
1857:         _distance_wrap.to_vector_from_squareform_wrap(X, v)
1858:         return v
1859:     else:
1860:         raise ValueError(('The first argument must be one or two dimensional '
1861:                           'array. A %d-dimensional array is not '
1862:                           'permitted') % len(s))
1863: 
1864: 
1865: def is_valid_dm(D, tol=0.0, throw=False, name="D", warning=False):
1866:     '''
1867:     Returns True if input array is a valid distance matrix.
1868: 
1869:     Distance matrices must be 2-dimensional numpy arrays.
1870:     They must have a zero-diagonal, and they must be symmetric.
1871: 
1872:     Parameters
1873:     ----------
1874:     D : ndarray
1875:         The candidate object to test for validity.
1876:     tol : float, optional
1877:         The distance matrix should be symmetric. `tol` is the maximum
1878:         difference between entries ``ij`` and ``ji`` for the distance
1879:         metric to be considered symmetric.
1880:     throw : bool, optional
1881:         An exception is thrown if the distance matrix passed is not valid.
1882:     name : str, optional
1883:         The name of the variable to checked. This is useful if
1884:         throw is set to True so the offending variable can be identified
1885:         in the exception message when an exception is thrown.
1886:     warning : bool, optional
1887:         Instead of throwing an exception, a warning message is
1888:         raised.
1889: 
1890:     Returns
1891:     -------
1892:     valid : bool
1893:         True if the variable `D` passed is a valid distance matrix.
1894: 
1895:     Notes
1896:     -----
1897:     Small numerical differences in `D` and `D.T` and non-zeroness of
1898:     the diagonal are ignored if they are within the tolerance specified
1899:     by `tol`.
1900: 
1901:     '''
1902:     D = np.asarray(D, order='c')
1903:     valid = True
1904:     try:
1905:         s = D.shape
1906:         if len(D.shape) != 2:
1907:             if name:
1908:                 raise ValueError(('Distance matrix \'%s\' must have shape=2 '
1909:                                   '(i.e. be two-dimensional).') % name)
1910:             else:
1911:                 raise ValueError('Distance matrix must have shape=2 (i.e. '
1912:                                  'be two-dimensional).')
1913:         if tol == 0.0:
1914:             if not (D == D.T).all():
1915:                 if name:
1916:                     raise ValueError(('Distance matrix \'%s\' must be '
1917:                                      'symmetric.') % name)
1918:                 else:
1919:                     raise ValueError('Distance matrix must be symmetric.')
1920:             if not (D[xrange(0, s[0]), xrange(0, s[0])] == 0).all():
1921:                 if name:
1922:                     raise ValueError(('Distance matrix \'%s\' diagonal must '
1923:                                       'be zero.') % name)
1924:                 else:
1925:                     raise ValueError('Distance matrix diagonal must be zero.')
1926:         else:
1927:             if not (D - D.T <= tol).all():
1928:                 if name:
1929:                     raise ValueError(('Distance matrix \'%s\' must be '
1930:                                       'symmetric within tolerance %5.5f.')
1931:                                      % (name, tol))
1932:                 else:
1933:                     raise ValueError('Distance matrix must be symmetric within'
1934:                                      ' tolerance %5.5f.' % tol)
1935:             if not (D[xrange(0, s[0]), xrange(0, s[0])] <= tol).all():
1936:                 if name:
1937:                     raise ValueError(('Distance matrix \'%s\' diagonal must be'
1938:                                       ' close to zero within tolerance %5.5f.')
1939:                                      % (name, tol))
1940:                 else:
1941:                     raise ValueError(('Distance matrix \'%s\' diagonal must be'
1942:                                       ' close to zero within tolerance %5.5f.')
1943:                                      % tol)
1944:     except Exception as e:
1945:         if throw:
1946:             raise
1947:         if warning:
1948:             warnings.warn(str(e))
1949:         valid = False
1950:     return valid
1951: 
1952: 
1953: def is_valid_y(y, warning=False, throw=False, name=None):
1954:     '''
1955:     Returns True if the input array is a valid condensed distance matrix.
1956: 
1957:     Condensed distance matrices must be 1-dimensional numpy arrays.
1958:     Their length must be a binomial coefficient :math:`{n \\choose 2}`
1959:     for some positive integer n.
1960: 
1961:     Parameters
1962:     ----------
1963:     y : ndarray
1964:         The condensed distance matrix.
1965:     warning : bool, optional
1966:         Invokes a warning if the variable passed is not a valid
1967:         condensed distance matrix. The warning message explains why
1968:         the distance matrix is not valid.  `name` is used when
1969:         referencing the offending variable.
1970:     throw : bool, optional
1971:         Throws an exception if the variable passed is not a valid
1972:         condensed distance matrix.
1973:     name : bool, optional
1974:         Used when referencing the offending variable in the
1975:         warning or exception message.
1976: 
1977:     '''
1978:     y = np.asarray(y, order='c')
1979:     valid = True
1980:     try:
1981:         if len(y.shape) != 1:
1982:             if name:
1983:                 raise ValueError(('Condensed distance matrix \'%s\' must '
1984:                                   'have shape=1 (i.e. be one-dimensional).')
1985:                                  % name)
1986:             else:
1987:                 raise ValueError('Condensed distance matrix must have shape=1 '
1988:                                  '(i.e. be one-dimensional).')
1989:         n = y.shape[0]
1990:         d = int(np.ceil(np.sqrt(n * 2)))
1991:         if (d * (d - 1) / 2) != n:
1992:             if name:
1993:                 raise ValueError(('Length n of condensed distance matrix '
1994:                                   '\'%s\' must be a binomial coefficient, i.e.'
1995:                                   'there must be a k such that '
1996:                                   '(k \\choose 2)=n)!') % name)
1997:             else:
1998:                 raise ValueError('Length n of condensed distance matrix must '
1999:                                  'be a binomial coefficient, i.e. there must '
2000:                                  'be a k such that (k \\choose 2)=n)!')
2001:     except Exception as e:
2002:         if throw:
2003:             raise
2004:         if warning:
2005:             warnings.warn(str(e))
2006:         valid = False
2007:     return valid
2008: 
2009: 
2010: def num_obs_dm(d):
2011:     '''
2012:     Returns the number of original observations that correspond to a
2013:     square, redundant distance matrix.
2014: 
2015:     Parameters
2016:     ----------
2017:     d : ndarray
2018:         The target distance matrix.
2019: 
2020:     Returns
2021:     -------
2022:     num_obs_dm : int
2023:         The number of observations in the redundant distance matrix.
2024: 
2025:     '''
2026:     d = np.asarray(d, order='c')
2027:     is_valid_dm(d, tol=np.inf, throw=True, name='d')
2028:     return d.shape[0]
2029: 
2030: 
2031: def num_obs_y(Y):
2032:     '''
2033:     Returns the number of original observations that correspond to a
2034:     condensed distance matrix.
2035: 
2036:     Parameters
2037:     ----------
2038:     Y : ndarray
2039:         Condensed distance matrix.
2040: 
2041:     Returns
2042:     -------
2043:     n : int
2044:         The number of observations in the condensed distance matrix `Y`.
2045: 
2046:     '''
2047:     Y = np.asarray(Y, order='c')
2048:     is_valid_y(Y, throw=True, name='Y')
2049:     k = Y.shape[0]
2050:     if k == 0:
2051:         raise ValueError("The number of observations cannot be determined on "
2052:                          "an empty distance matrix.")
2053:     d = int(np.ceil(np.sqrt(k * 2)))
2054:     if (d * (d - 1) / 2) != k:
2055:         raise ValueError("Invalid condensed distance matrix passed. Must be "
2056:                          "some k where k=(n choose 2) for some n >= 2.")
2057:     return d
2058: 
2059: 
2060: def cdist(XA, XB, metric='euclidean', *args, **kwargs):
2061:     '''
2062:     Computes distance between each pair of the two collections of inputs.
2063: 
2064:     See Notes for common calling conventions.
2065: 
2066:     Parameters
2067:     ----------
2068:     XA : ndarray
2069:         An :math:`m_A` by :math:`n` array of :math:`m_A`
2070:         original observations in an :math:`n`-dimensional space.
2071:         Inputs are converted to float type.
2072:     XB : ndarray
2073:         An :math:`m_B` by :math:`n` array of :math:`m_B`
2074:         original observations in an :math:`n`-dimensional space.
2075:         Inputs are converted to float type.
2076:     metric : str or callable, optional
2077:         The distance metric to use.  If a string, the distance function can be
2078:         'braycurtis', 'canberra', 'chebyshev', 'cityblock', 'correlation',
2079:         'cosine', 'dice', 'euclidean', 'hamming', 'jaccard', 'kulsinski',
2080:         'mahalanobis', 'matching', 'minkowski', 'rogerstanimoto', 'russellrao',
2081:         'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean',
2082:         'wminkowski', 'yule'.
2083:     *args : tuple. Deprecated.
2084:         Additional arguments should be passed as keyword arguments
2085:     **kwargs : dict, optional
2086:         Extra arguments to `metric`: refer to each metric documentation for a
2087:         list of all possible arguments.
2088: 
2089:         Some possible arguments:
2090: 
2091:         p : scalar
2092:         The p-norm to apply for Minkowski, weighted and unweighted.
2093:         Default: 2.
2094: 
2095:         w : ndarray
2096:         The weight vector for metrics that support weights (e.g., Minkowski).
2097: 
2098:         V : ndarray
2099:         The variance vector for standardized Euclidean.
2100:         Default: var(vstack([XA, XB]), axis=0, ddof=1)
2101: 
2102:         VI : ndarray
2103:         The inverse of the covariance matrix for Mahalanobis.
2104:         Default: inv(cov(vstack([XA, XB].T))).T
2105: 
2106:         out : ndarray
2107:         The output array
2108:         If not None, the distance matrix Y is stored in this array.
2109:         Note: metric independent, it will become a regular keyword arg in a
2110:         future scipy version
2111: 
2112:     Returns
2113:     -------
2114:     Y : ndarray
2115:         A :math:`m_A` by :math:`m_B` distance matrix is returned.
2116:         For each :math:`i` and :math:`j`, the metric
2117:         ``dist(u=XA[i], v=XB[j])`` is computed and stored in the
2118:         :math:`ij` th entry.
2119: 
2120:     Raises
2121:     ------
2122:     ValueError
2123:         An exception is thrown if `XA` and `XB` do not have
2124:         the same number of columns.
2125: 
2126:     Notes
2127:     -----
2128:     The following are common calling conventions:
2129: 
2130:     1. ``Y = cdist(XA, XB, 'euclidean')``
2131: 
2132:        Computes the distance between :math:`m` points using
2133:        Euclidean distance (2-norm) as the distance metric between the
2134:        points. The points are arranged as :math:`m`
2135:        :math:`n`-dimensional row vectors in the matrix X.
2136: 
2137:     2. ``Y = cdist(XA, XB, 'minkowski', p=2.)``
2138: 
2139:        Computes the distances using the Minkowski distance
2140:        :math:`||u-v||_p` (:math:`p`-norm) where :math:`p \\geq 1`.
2141: 
2142:     3. ``Y = cdist(XA, XB, 'cityblock')``
2143: 
2144:        Computes the city block or Manhattan distance between the
2145:        points.
2146: 
2147:     4. ``Y = cdist(XA, XB, 'seuclidean', V=None)``
2148: 
2149:        Computes the standardized Euclidean distance. The standardized
2150:        Euclidean distance between two n-vectors ``u`` and ``v`` is
2151: 
2152:        .. math::
2153: 
2154:           \\sqrt{\\sum {(u_i-v_i)^2 / V[x_i]}}.
2155: 
2156:        V is the variance vector; V[i] is the variance computed over all
2157:        the i'th components of the points. If not passed, it is
2158:        automatically computed.
2159: 
2160:     5. ``Y = cdist(XA, XB, 'sqeuclidean')``
2161: 
2162:        Computes the squared Euclidean distance :math:`||u-v||_2^2` between
2163:        the vectors.
2164: 
2165:     6. ``Y = cdist(XA, XB, 'cosine')``
2166: 
2167:        Computes the cosine distance between vectors u and v,
2168: 
2169:        .. math::
2170: 
2171:           1 - \\frac{u \\cdot v}
2172:                    {{||u||}_2 {||v||}_2}
2173: 
2174:        where :math:`||*||_2` is the 2-norm of its argument ``*``, and
2175:        :math:`u \\cdot v` is the dot product of :math:`u` and :math:`v`.
2176: 
2177:     7. ``Y = cdist(XA, XB, 'correlation')``
2178: 
2179:        Computes the correlation distance between vectors u and v. This is
2180: 
2181:        .. math::
2182: 
2183:           1 - \\frac{(u - \\bar{u}) \\cdot (v - \\bar{v})}
2184:                    {{||(u - \\bar{u})||}_2 {||(v - \\bar{v})||}_2}
2185: 
2186:        where :math:`\\bar{v}` is the mean of the elements of vector v,
2187:        and :math:`x \\cdot y` is the dot product of :math:`x` and :math:`y`.
2188: 
2189: 
2190:     8. ``Y = cdist(XA, XB, 'hamming')``
2191: 
2192:        Computes the normalized Hamming distance, or the proportion of
2193:        those vector elements between two n-vectors ``u`` and ``v``
2194:        which disagree. To save memory, the matrix ``X`` can be of type
2195:        boolean.
2196: 
2197:     9. ``Y = cdist(XA, XB, 'jaccard')``
2198: 
2199:        Computes the Jaccard distance between the points. Given two
2200:        vectors, ``u`` and ``v``, the Jaccard distance is the
2201:        proportion of those elements ``u[i]`` and ``v[i]`` that
2202:        disagree where at least one of them is non-zero.
2203: 
2204:     10. ``Y = cdist(XA, XB, 'chebyshev')``
2205: 
2206:        Computes the Chebyshev distance between the points. The
2207:        Chebyshev distance between two n-vectors ``u`` and ``v`` is the
2208:        maximum norm-1 distance between their respective elements. More
2209:        precisely, the distance is given by
2210: 
2211:        .. math::
2212: 
2213:           d(u,v) = \\max_i {|u_i-v_i|}.
2214: 
2215:     11. ``Y = cdist(XA, XB, 'canberra')``
2216: 
2217:        Computes the Canberra distance between the points. The
2218:        Canberra distance between two points ``u`` and ``v`` is
2219: 
2220:        .. math::
2221: 
2222:          d(u,v) = \\sum_i \\frac{|u_i-v_i|}
2223:                               {|u_i|+|v_i|}.
2224: 
2225:     12. ``Y = cdist(XA, XB, 'braycurtis')``
2226: 
2227:        Computes the Bray-Curtis distance between the points. The
2228:        Bray-Curtis distance between two points ``u`` and ``v`` is
2229: 
2230: 
2231:        .. math::
2232: 
2233:             d(u,v) = \\frac{\\sum_i (|u_i-v_i|)}
2234:                           {\\sum_i (|u_i+v_i|)}
2235: 
2236:     13. ``Y = cdist(XA, XB, 'mahalanobis', VI=None)``
2237: 
2238:        Computes the Mahalanobis distance between the points. The
2239:        Mahalanobis distance between two points ``u`` and ``v`` is
2240:        :math:`\\sqrt{(u-v)(1/V)(u-v)^T}` where :math:`(1/V)` (the ``VI``
2241:        variable) is the inverse covariance. If ``VI`` is not None,
2242:        ``VI`` will be used as the inverse covariance matrix.
2243: 
2244:     14. ``Y = cdist(XA, XB, 'yule')``
2245: 
2246:        Computes the Yule distance between the boolean
2247:        vectors. (see `yule` function documentation)
2248: 
2249:     15. ``Y = cdist(XA, XB, 'matching')``
2250: 
2251:        Synonym for 'hamming'.
2252: 
2253:     16. ``Y = cdist(XA, XB, 'dice')``
2254: 
2255:        Computes the Dice distance between the boolean vectors. (see
2256:        `dice` function documentation)
2257: 
2258:     17. ``Y = cdist(XA, XB, 'kulsinski')``
2259: 
2260:        Computes the Kulsinski distance between the boolean
2261:        vectors. (see `kulsinski` function documentation)
2262: 
2263:     18. ``Y = cdist(XA, XB, 'rogerstanimoto')``
2264: 
2265:        Computes the Rogers-Tanimoto distance between the boolean
2266:        vectors. (see `rogerstanimoto` function documentation)
2267: 
2268:     19. ``Y = cdist(XA, XB, 'russellrao')``
2269: 
2270:        Computes the Russell-Rao distance between the boolean
2271:        vectors. (see `russellrao` function documentation)
2272: 
2273:     20. ``Y = cdist(XA, XB, 'sokalmichener')``
2274: 
2275:        Computes the Sokal-Michener distance between the boolean
2276:        vectors. (see `sokalmichener` function documentation)
2277: 
2278:     21. ``Y = cdist(XA, XB, 'sokalsneath')``
2279: 
2280:        Computes the Sokal-Sneath distance between the vectors. (see
2281:        `sokalsneath` function documentation)
2282: 
2283: 
2284:     22. ``Y = cdist(XA, XB, 'wminkowski', p=2., w=w)``
2285: 
2286:        Computes the weighted Minkowski distance between the
2287:        vectors. (see `wminkowski` function documentation)
2288: 
2289:     23. ``Y = cdist(XA, XB, f)``
2290: 
2291:        Computes the distance between all pairs of vectors in X
2292:        using the user supplied 2-arity function f. For example,
2293:        Euclidean distance between the vectors could be computed
2294:        as follows::
2295: 
2296:          dm = cdist(XA, XB, lambda u, v: np.sqrt(((u-v)**2).sum()))
2297: 
2298:        Note that you should avoid passing a reference to one of
2299:        the distance functions defined in this library. For example,::
2300: 
2301:          dm = cdist(XA, XB, sokalsneath)
2302: 
2303:        would calculate the pair-wise distances between the vectors in
2304:        X using the Python function `sokalsneath`. This would result in
2305:        sokalsneath being called :math:`{n \\choose 2}` times, which
2306:        is inefficient. Instead, the optimized C version is more
2307:        efficient, and we call it using the following syntax::
2308: 
2309:          dm = cdist(XA, XB, 'sokalsneath')
2310: 
2311:     Examples
2312:     --------
2313:     Find the Euclidean distances between four 2-D coordinates:
2314: 
2315:     >>> from scipy.spatial import distance
2316:     >>> coords = [(35.0456, -85.2672),
2317:     ...           (35.1174, -89.9711),
2318:     ...           (35.9728, -83.9422),
2319:     ...           (36.1667, -86.7833)]
2320:     >>> distance.cdist(coords, coords, 'euclidean')
2321:     array([[ 0.    ,  4.7044,  1.6172,  1.8856],
2322:            [ 4.7044,  0.    ,  6.0893,  3.3561],
2323:            [ 1.6172,  6.0893,  0.    ,  2.8477],
2324:            [ 1.8856,  3.3561,  2.8477,  0.    ]])
2325: 
2326: 
2327:     Find the Manhattan distance from a 3-D point to the corners of the unit
2328:     cube:
2329: 
2330:     >>> a = np.array([[0, 0, 0],
2331:     ...               [0, 0, 1],
2332:     ...               [0, 1, 0],
2333:     ...               [0, 1, 1],
2334:     ...               [1, 0, 0],
2335:     ...               [1, 0, 1],
2336:     ...               [1, 1, 0],
2337:     ...               [1, 1, 1]])
2338:     >>> b = np.array([[ 0.1,  0.2,  0.4]])
2339:     >>> distance.cdist(a, b, 'cityblock')
2340:     array([[ 0.7],
2341:            [ 0.9],
2342:            [ 1.3],
2343:            [ 1.5],
2344:            [ 1.5],
2345:            [ 1.7],
2346:            [ 2.1],
2347:            [ 2.3]])
2348: 
2349:     '''
2350:     # You can also call this as:
2351:     #     Y = cdist(XA, XB, 'test_abc')
2352:     # where 'abc' is the metric being tested.  This computes the distance
2353:     # between all pairs of vectors in XA and XB using the distance metric 'abc'
2354:     # but with a more succinct, verifiable, but less efficient implementation.
2355: 
2356:     kwargs = _args_to_kwargs_xdist(args, kwargs, metric, "cdist")
2357: 
2358:     XA = np.asarray(XA, order='c')
2359:     XB = np.asarray(XB, order='c')
2360: 
2361:     # The C code doesn't do striding.
2362:     XA = _copy_array_if_base_present(XA)
2363:     XB = _copy_array_if_base_present(XB)
2364: 
2365:     s = XA.shape
2366:     sB = XB.shape
2367: 
2368:     if len(s) != 2:
2369:         raise ValueError('XA must be a 2-dimensional array.')
2370:     if len(sB) != 2:
2371:         raise ValueError('XB must be a 2-dimensional array.')
2372:     if s[1] != sB[1]:
2373:         raise ValueError('XA and XB must have the same number of columns '
2374:                          '(i.e. feature dimension.)')
2375: 
2376:     mA = s[0]
2377:     mB = sB[0]
2378:     n = s[1]
2379:     out = kwargs.pop("out", None)
2380:     if out is None:
2381:         dm = np.empty((mA, mB), dtype=np.double)
2382:     else:
2383:         if out.shape != (mA, mB):
2384:             raise ValueError("Output array has incorrect shape.")
2385:         if not out.flags.c_contiguous:
2386:             raise ValueError("Output array must be C-contiguous.")
2387:         if out.dtype != np.double:
2388:             raise ValueError("Output array must be double type.")
2389:         dm = out
2390: 
2391:     # compute blacklist for deprecated kwargs
2392:     if(metric in _METRICS['minkowski'].aka or
2393:        metric in _METRICS['wminkowski'].aka or
2394:        metric in ['test_minkowski', 'test_wminkowski'] or
2395:        metric in [minkowski, wminkowski]):
2396:         kwargs_blacklist = ["V", "VI"]
2397:     elif(metric in _METRICS['seuclidean'].aka or
2398:          metric == 'test_seuclidean' or metric == seuclidean):
2399:         kwargs_blacklist = ["p", "w", "VI"]
2400:     elif(metric in _METRICS['mahalanobis'].aka or
2401:          metric == 'test_mahalanobis' or metric == mahalanobis):
2402:         kwargs_blacklist = ["p", "w", "V"]
2403:     else:
2404:         kwargs_blacklist = ["p", "V", "VI"]
2405: 
2406:     _filter_deprecated_kwargs(kwargs, kwargs_blacklist)
2407: 
2408:     if callable(metric):
2409: 
2410:         mstr = getattr(metric, '__name__', 'Unknown')
2411:         metric_name = _METRIC_ALIAS.get(mstr, None)
2412: 
2413:         XA, XB, typ, kwargs = _validate_cdist_input(XA, XB, mA, mB, n,
2414:                                                     metric_name, **kwargs)
2415: 
2416:         for i in xrange(0, mA):
2417:             for j in xrange(0, mB):
2418:                 dm[i, j] = metric(XA[i], XB[j], **kwargs)
2419: 
2420:     elif isinstance(metric, string_types):
2421:         mstr = metric.lower()
2422: 
2423:         # NOTE: C-version still does not support weights
2424:         if "w" in kwargs and not mstr.startswith("test_"):
2425:             if(mstr in _METRICS['seuclidean'].aka or
2426:                mstr in _METRICS['mahalanobis'].aka):
2427:                 raise ValueError("metric %s incompatible with weights" % mstr)
2428:             # need to use python version for weighting
2429:             kwargs['out'] = out
2430:             mstr = "test_%s" % mstr
2431: 
2432:         metric_name = _METRIC_ALIAS.get(mstr, None)
2433:         if metric_name is not None:
2434:             XA, XB, typ, kwargs = _validate_cdist_input(XA, XB, mA, mB, n,
2435:                                                         metric_name, **kwargs)
2436:             # get cdist wrapper
2437:             cdist_fn = getattr(_distance_wrap,
2438:                                "cdist_%s_%s_wrap" % (metric_name, typ))
2439:             cdist_fn(XA, XB, dm, **kwargs)
2440:             return dm
2441: 
2442:         elif mstr.startswith("test_"):
2443:             if mstr in _TEST_METRICS:
2444:                 dm = cdist(XA, XB, _TEST_METRICS[mstr], **kwargs)
2445:             else:
2446:                 raise ValueError('Unknown "Test" Distance Metric: %s' % mstr[5:])
2447:         else:
2448:             raise ValueError('Unknown Distance Metric: %s' % mstr)
2449:     else:
2450:         raise TypeError('2nd argument metric must be a string identifier '
2451:                         'or a function.')
2452:     return dm
2453: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_462826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 72, (-1)), 'str', '\n=====================================================\nDistance computations (:mod:`scipy.spatial.distance`)\n=====================================================\n\n.. sectionauthor:: Damian Eads\n\nFunction Reference\n------------------\n\nDistance matrix computation from a collection of raw observation vectors\nstored in a rectangular array.\n\n.. autosummary::\n   :toctree: generated/\n\n   pdist   -- pairwise distances between observation vectors.\n   cdist   -- distances between two collections of observation vectors\n   squareform -- convert distance matrix to a condensed one and vice versa\n   directed_hausdorff -- directed Hausdorff distance between arrays\n\nPredicates for checking the validity of distance matrices, both\ncondensed and redundant. Also contained in this module are functions\nfor computing the number of observations in a distance matrix.\n\n.. autosummary::\n   :toctree: generated/\n\n   is_valid_dm -- checks for a valid distance matrix\n   is_valid_y  -- checks for a valid condensed distance matrix\n   num_obs_dm  -- # of observations in a distance matrix\n   num_obs_y   -- # of observations in a condensed distance matrix\n\nDistance functions between two numeric vectors ``u`` and ``v``. Computing\ndistances over a large collection of vectors is inefficient for these\nfunctions. Use ``pdist`` for this purpose.\n\n.. autosummary::\n   :toctree: generated/\n\n   braycurtis       -- the Bray-Curtis distance.\n   canberra         -- the Canberra distance.\n   chebyshev        -- the Chebyshev distance.\n   cityblock        -- the Manhattan distance.\n   correlation      -- the Correlation distance.\n   cosine           -- the Cosine distance.\n   euclidean        -- the Euclidean distance.\n   mahalanobis      -- the Mahalanobis distance.\n   minkowski        -- the Minkowski distance.\n   seuclidean       -- the normalized Euclidean distance.\n   sqeuclidean      -- the squared Euclidean distance.\n   wminkowski       -- (deprecated) alias of `minkowski`.\n\nDistance functions between two boolean vectors (representing sets) ``u`` and\n``v``.  As in the case of numerical vectors, ``pdist`` is more efficient for\ncomputing the distances between all pairs.\n\n.. autosummary::\n   :toctree: generated/\n\n   dice             -- the Dice dissimilarity.\n   hamming          -- the Hamming distance.\n   jaccard          -- the Jaccard distance.\n   kulsinski        -- the Kulsinski distance.\n   rogerstanimoto   -- the Rogers-Tanimoto dissimilarity.\n   russellrao       -- the Russell-Rao dissimilarity.\n   sokalmichener    -- the Sokal-Michener dissimilarity.\n   sokalsneath      -- the Sokal-Sneath dissimilarity.\n   yule             -- the Yule dissimilarity.\n\n:func:`hamming` also operates over discrete numerical vectors.\n')

# Assigning a List to a Name (line 78):

# Assigning a List to a Name (line 78):
__all__ = ['braycurtis', 'canberra', 'cdist', 'chebyshev', 'cityblock', 'correlation', 'cosine', 'dice', 'directed_hausdorff', 'euclidean', 'hamming', 'is_valid_dm', 'is_valid_y', 'jaccard', 'kulsinski', 'mahalanobis', 'matching', 'minkowski', 'num_obs_dm', 'num_obs_y', 'pdist', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'squareform', 'wminkowski', 'yule']
module_type_store.set_exportable_members(['braycurtis', 'canberra', 'cdist', 'chebyshev', 'cityblock', 'correlation', 'cosine', 'dice', 'directed_hausdorff', 'euclidean', 'hamming', 'is_valid_dm', 'is_valid_y', 'jaccard', 'kulsinski', 'mahalanobis', 'matching', 'minkowski', 'num_obs_dm', 'num_obs_y', 'pdist', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'squareform', 'wminkowski', 'yule'])

# Obtaining an instance of the builtin type 'list' (line 78)
list_462827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 78, 10), 'list')
# Adding type elements to the builtin type 'list' instance (line 78)
# Adding element type (line 78)
str_462828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 79, 4), 'str', 'braycurtis')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462828)
# Adding element type (line 78)
str_462829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 4), 'str', 'canberra')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462829)
# Adding element type (line 78)
str_462830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 4), 'str', 'cdist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462830)
# Adding element type (line 78)
str_462831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 82, 4), 'str', 'chebyshev')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462831)
# Adding element type (line 78)
str_462832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, 4), 'str', 'cityblock')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462832)
# Adding element type (line 78)
str_462833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 4), 'str', 'correlation')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462833)
# Adding element type (line 78)
str_462834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 4), 'str', 'cosine')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462834)
# Adding element type (line 78)
str_462835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 4), 'str', 'dice')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462835)
# Adding element type (line 78)
str_462836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 87, 4), 'str', 'directed_hausdorff')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462836)
# Adding element type (line 78)
str_462837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 4), 'str', 'euclidean')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462837)
# Adding element type (line 78)
str_462838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 4), 'str', 'hamming')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462838)
# Adding element type (line 78)
str_462839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 4), 'str', 'is_valid_dm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462839)
# Adding element type (line 78)
str_462840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, 4), 'str', 'is_valid_y')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462840)
# Adding element type (line 78)
str_462841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 4), 'str', 'jaccard')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462841)
# Adding element type (line 78)
str_462842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 93, 4), 'str', 'kulsinski')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462842)
# Adding element type (line 78)
str_462843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 94, 4), 'str', 'mahalanobis')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462843)
# Adding element type (line 78)
str_462844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 4), 'str', 'matching')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462844)
# Adding element type (line 78)
str_462845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 4), 'str', 'minkowski')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462845)
# Adding element type (line 78)
str_462846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 4), 'str', 'num_obs_dm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462846)
# Adding element type (line 78)
str_462847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 4), 'str', 'num_obs_y')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462847)
# Adding element type (line 78)
str_462848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 4), 'str', 'pdist')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462848)
# Adding element type (line 78)
str_462849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 100, 4), 'str', 'rogerstanimoto')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462849)
# Adding element type (line 78)
str_462850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 101, 4), 'str', 'russellrao')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462850)
# Adding element type (line 78)
str_462851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 4), 'str', 'seuclidean')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462851)
# Adding element type (line 78)
str_462852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 4), 'str', 'sokalmichener')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462852)
# Adding element type (line 78)
str_462853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 4), 'str', 'sokalsneath')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462853)
# Adding element type (line 78)
str_462854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 4), 'str', 'sqeuclidean')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462854)
# Adding element type (line 78)
str_462855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 4), 'str', 'squareform')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462855)
# Adding element type (line 78)
str_462856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 4), 'str', 'wminkowski')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462856)
# Adding element type (line 78)
str_462857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 4), 'str', 'yule')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 78, 10), list_462827, str_462857)

# Assigning a type to the variable '__all__' (line 78)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 0), '__all__', list_462827)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 112, 0))

# 'import warnings' statement (line 112)
import warnings

import_module(stypy.reporting.localization.Localization(__file__, 112, 0), 'warnings', warnings, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 113, 0))

# 'import numpy' statement (line 113)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/spatial/')
import_462858 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 113, 0), 'numpy')

if (type(import_462858) is not StypyTypeError):

    if (import_462858 != 'pyd_module'):
        __import__(import_462858)
        sys_modules_462859 = sys.modules[import_462858]
        import_module(stypy.reporting.localization.Localization(__file__, 113, 0), 'np', sys_modules_462859.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 113, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 113)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 113, 0), 'numpy', import_462858)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/spatial/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 115, 0))

# 'from functools import partial' statement (line 115)
try:
    from functools import partial

except:
    partial = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 115, 0), 'functools', None, module_type_store, ['partial'], [partial])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 116, 0))

# 'from collections import namedtuple' statement (line 116)
try:
    from collections import namedtuple

except:
    namedtuple = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 116, 0), 'collections', None, module_type_store, ['namedtuple'], [namedtuple])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 117, 0))

# 'from scipy._lib.six import callable, string_types' statement (line 117)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/spatial/')
import_462860 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 117, 0), 'scipy._lib.six')

if (type(import_462860) is not StypyTypeError):

    if (import_462860 != 'pyd_module'):
        __import__(import_462860)
        sys_modules_462861 = sys.modules[import_462860]
        import_from_module(stypy.reporting.localization.Localization(__file__, 117, 0), 'scipy._lib.six', sys_modules_462861.module_type_store, module_type_store, ['callable', 'string_types'])
        nest_module(stypy.reporting.localization.Localization(__file__, 117, 0), __file__, sys_modules_462861, sys_modules_462861.module_type_store, module_type_store)
    else:
        from scipy._lib.six import callable, string_types

        import_from_module(stypy.reporting.localization.Localization(__file__, 117, 0), 'scipy._lib.six', None, module_type_store, ['callable', 'string_types'], [callable, string_types])

else:
    # Assigning a type to the variable 'scipy._lib.six' (line 117)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 0), 'scipy._lib.six', import_462860)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/spatial/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 118, 0))

# 'from scipy._lib.six import xrange' statement (line 118)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/spatial/')
import_462862 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 118, 0), 'scipy._lib.six')

if (type(import_462862) is not StypyTypeError):

    if (import_462862 != 'pyd_module'):
        __import__(import_462862)
        sys_modules_462863 = sys.modules[import_462862]
        import_from_module(stypy.reporting.localization.Localization(__file__, 118, 0), 'scipy._lib.six', sys_modules_462863.module_type_store, module_type_store, ['xrange'])
        nest_module(stypy.reporting.localization.Localization(__file__, 118, 0), __file__, sys_modules_462863, sys_modules_462863.module_type_store, module_type_store)
    else:
        from scipy._lib.six import xrange

        import_from_module(stypy.reporting.localization.Localization(__file__, 118, 0), 'scipy._lib.six', None, module_type_store, ['xrange'], [xrange])

else:
    # Assigning a type to the variable 'scipy._lib.six' (line 118)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 118, 0), 'scipy._lib.six', import_462862)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/spatial/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 120, 0))

# 'from scipy.spatial import _distance_wrap' statement (line 120)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/spatial/')
import_462864 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 120, 0), 'scipy.spatial')

if (type(import_462864) is not StypyTypeError):

    if (import_462864 != 'pyd_module'):
        __import__(import_462864)
        sys_modules_462865 = sys.modules[import_462864]
        import_from_module(stypy.reporting.localization.Localization(__file__, 120, 0), 'scipy.spatial', sys_modules_462865.module_type_store, module_type_store, ['_distance_wrap'])
        nest_module(stypy.reporting.localization.Localization(__file__, 120, 0), __file__, sys_modules_462865, sys_modules_462865.module_type_store, module_type_store)
    else:
        from scipy.spatial import _distance_wrap

        import_from_module(stypy.reporting.localization.Localization(__file__, 120, 0), 'scipy.spatial', None, module_type_store, ['_distance_wrap'], [_distance_wrap])

else:
    # Assigning a type to the variable 'scipy.spatial' (line 120)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 0), 'scipy.spatial', import_462864)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/spatial/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 121, 0))

# 'from scipy.spatial import _hausdorff' statement (line 121)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/spatial/')
import_462866 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 121, 0), 'scipy.spatial')

if (type(import_462866) is not StypyTypeError):

    if (import_462866 != 'pyd_module'):
        __import__(import_462866)
        sys_modules_462867 = sys.modules[import_462866]
        import_from_module(stypy.reporting.localization.Localization(__file__, 121, 0), 'scipy.spatial', sys_modules_462867.module_type_store, module_type_store, ['_hausdorff'])
        nest_module(stypy.reporting.localization.Localization(__file__, 121, 0), __file__, sys_modules_462867, sys_modules_462867.module_type_store, module_type_store)
    else:
        from scipy.spatial import _hausdorff

        import_from_module(stypy.reporting.localization.Localization(__file__, 121, 0), 'scipy.spatial', None, module_type_store, ['_hausdorff'], [_hausdorff])

else:
    # Assigning a type to the variable 'scipy.spatial' (line 121)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 0), 'scipy.spatial', import_462866)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/spatial/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 122, 0))

# 'from scipy.linalg import norm' statement (line 122)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/spatial/')
import_462868 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 122, 0), 'scipy.linalg')

if (type(import_462868) is not StypyTypeError):

    if (import_462868 != 'pyd_module'):
        __import__(import_462868)
        sys_modules_462869 = sys.modules[import_462868]
        import_from_module(stypy.reporting.localization.Localization(__file__, 122, 0), 'scipy.linalg', sys_modules_462869.module_type_store, module_type_store, ['norm'])
        nest_module(stypy.reporting.localization.Localization(__file__, 122, 0), __file__, sys_modules_462869, sys_modules_462869.module_type_store, module_type_store)
    else:
        from scipy.linalg import norm

        import_from_module(stypy.reporting.localization.Localization(__file__, 122, 0), 'scipy.linalg', None, module_type_store, ['norm'], [norm])

else:
    # Assigning a type to the variable 'scipy.linalg' (line 122)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 122, 0), 'scipy.linalg', import_462868)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/spatial/')


@norecursion
def _args_to_kwargs_xdist(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_args_to_kwargs_xdist'
    module_type_store = module_type_store.open_function_context('_args_to_kwargs_xdist', 125, 0, False)
    
    # Passed parameters checking function
    _args_to_kwargs_xdist.stypy_localization = localization
    _args_to_kwargs_xdist.stypy_type_of_self = None
    _args_to_kwargs_xdist.stypy_type_store = module_type_store
    _args_to_kwargs_xdist.stypy_function_name = '_args_to_kwargs_xdist'
    _args_to_kwargs_xdist.stypy_param_names_list = ['args', 'kwargs', 'metric', 'func_name']
    _args_to_kwargs_xdist.stypy_varargs_param_name = None
    _args_to_kwargs_xdist.stypy_kwargs_param_name = None
    _args_to_kwargs_xdist.stypy_call_defaults = defaults
    _args_to_kwargs_xdist.stypy_call_varargs = varargs
    _args_to_kwargs_xdist.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_args_to_kwargs_xdist', ['args', 'kwargs', 'metric', 'func_name'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_args_to_kwargs_xdist', localization, ['args', 'kwargs', 'metric', 'func_name'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_args_to_kwargs_xdist(...)' code ##################

    str_462870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, (-1)), 'str', '\n    Convert legacy positional arguments to keyword arguments for pdist/cdist.\n    ')
    
    
    # Getting the type of 'args' (line 129)
    args_462871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 11), 'args')
    # Applying the 'not' unary operator (line 129)
    result_not__462872 = python_operator(stypy.reporting.localization.Localization(__file__, 129, 7), 'not', args_462871)
    
    # Testing the type of an if condition (line 129)
    if_condition_462873 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 129, 4), result_not__462872)
    # Assigning a type to the variable 'if_condition_462873' (line 129)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 129, 4), 'if_condition_462873', if_condition_462873)
    # SSA begins for if statement (line 129)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'kwargs' (line 130)
    kwargs_462874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 15), 'kwargs')
    # Assigning a type to the variable 'stypy_return_type' (line 130)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 130, 8), 'stypy_return_type', kwargs_462874)
    # SSA join for if statement (line 129)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Call to callable(...): (line 132)
    # Processing the call arguments (line 132)
    # Getting the type of 'metric' (line 132)
    metric_462876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 17), 'metric', False)
    # Processing the call keyword arguments (line 132)
    kwargs_462877 = {}
    # Getting the type of 'callable' (line 132)
    callable_462875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 8), 'callable', False)
    # Calling callable(args, kwargs) (line 132)
    callable_call_result_462878 = invoke(stypy.reporting.localization.Localization(__file__, 132, 8), callable_462875, *[metric_462876], **kwargs_462877)
    
    
    # Getting the type of 'metric' (line 132)
    metric_462879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 29), 'metric')
    
    # Obtaining an instance of the builtin type 'list' (line 132)
    list_462880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 43), 'list')
    # Adding type elements to the builtin type 'list' instance (line 132)
    # Adding element type (line 132)
    # Getting the type of 'braycurtis' (line 133)
    braycurtis_462881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 12), 'braycurtis')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, braycurtis_462881)
    # Adding element type (line 132)
    # Getting the type of 'canberra' (line 133)
    canberra_462882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 24), 'canberra')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, canberra_462882)
    # Adding element type (line 132)
    # Getting the type of 'chebyshev' (line 133)
    chebyshev_462883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 34), 'chebyshev')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, chebyshev_462883)
    # Adding element type (line 132)
    # Getting the type of 'cityblock' (line 133)
    cityblock_462884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 45), 'cityblock')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, cityblock_462884)
    # Adding element type (line 132)
    # Getting the type of 'correlation' (line 133)
    correlation_462885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 56), 'correlation')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, correlation_462885)
    # Adding element type (line 132)
    # Getting the type of 'cosine' (line 133)
    cosine_462886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 69), 'cosine')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, cosine_462886)
    # Adding element type (line 132)
    # Getting the type of 'dice' (line 134)
    dice_462887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 12), 'dice')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, dice_462887)
    # Adding element type (line 132)
    # Getting the type of 'euclidean' (line 134)
    euclidean_462888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 18), 'euclidean')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, euclidean_462888)
    # Adding element type (line 132)
    # Getting the type of 'hamming' (line 134)
    hamming_462889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 29), 'hamming')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, hamming_462889)
    # Adding element type (line 132)
    # Getting the type of 'jaccard' (line 134)
    jaccard_462890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 38), 'jaccard')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, jaccard_462890)
    # Adding element type (line 132)
    # Getting the type of 'kulsinski' (line 134)
    kulsinski_462891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 47), 'kulsinski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, kulsinski_462891)
    # Adding element type (line 132)
    # Getting the type of 'mahalanobis' (line 134)
    mahalanobis_462892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 58), 'mahalanobis')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, mahalanobis_462892)
    # Adding element type (line 132)
    # Getting the type of 'matching' (line 135)
    matching_462893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 12), 'matching')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, matching_462893)
    # Adding element type (line 132)
    # Getting the type of 'minkowski' (line 135)
    minkowski_462894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 22), 'minkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, minkowski_462894)
    # Adding element type (line 132)
    # Getting the type of 'rogerstanimoto' (line 135)
    rogerstanimoto_462895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 33), 'rogerstanimoto')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, rogerstanimoto_462895)
    # Adding element type (line 132)
    # Getting the type of 'russellrao' (line 135)
    russellrao_462896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 49), 'russellrao')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, russellrao_462896)
    # Adding element type (line 132)
    # Getting the type of 'seuclidean' (line 135)
    seuclidean_462897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 61), 'seuclidean')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, seuclidean_462897)
    # Adding element type (line 132)
    # Getting the type of 'sokalmichener' (line 136)
    sokalmichener_462898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 12), 'sokalmichener')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, sokalmichener_462898)
    # Adding element type (line 132)
    # Getting the type of 'sokalsneath' (line 136)
    sokalsneath_462899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 27), 'sokalsneath')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, sokalsneath_462899)
    # Adding element type (line 132)
    # Getting the type of 'sqeuclidean' (line 136)
    sqeuclidean_462900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 40), 'sqeuclidean')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, sqeuclidean_462900)
    # Adding element type (line 132)
    # Getting the type of 'yule' (line 136)
    yule_462901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 53), 'yule')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, yule_462901)
    # Adding element type (line 132)
    # Getting the type of 'wminkowski' (line 136)
    wminkowski_462902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 59), 'wminkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 43), list_462880, wminkowski_462902)
    
    # Applying the binary operator 'notin' (line 132)
    result_contains_462903 = python_operator(stypy.reporting.localization.Localization(__file__, 132, 29), 'notin', metric_462879, list_462880)
    
    # Applying the binary operator 'and' (line 132)
    result_and_keyword_462904 = python_operator(stypy.reporting.localization.Localization(__file__, 132, 8), 'and', callable_call_result_462878, result_contains_462903)
    
    # Testing the type of an if condition (line 132)
    if_condition_462905 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 132, 4), result_and_keyword_462904)
    # Assigning a type to the variable 'if_condition_462905' (line 132)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 4), 'if_condition_462905', if_condition_462905)
    # SSA begins for if statement (line 132)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to TypeError(...): (line 137)
    # Processing the call arguments (line 137)
    str_462907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 24), 'str', 'When using a custom metric arguments must be passedas keyword (i.e., ARGNAME=ARGVALUE)')
    # Processing the call keyword arguments (line 137)
    kwargs_462908 = {}
    # Getting the type of 'TypeError' (line 137)
    TypeError_462906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 14), 'TypeError', False)
    # Calling TypeError(args, kwargs) (line 137)
    TypeError_call_result_462909 = invoke(stypy.reporting.localization.Localization(__file__, 137, 14), TypeError_462906, *[str_462907], **kwargs_462908)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 137, 8), TypeError_call_result_462909, 'raise parameter', BaseException)
    # SSA join for if statement (line 132)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'func_name' (line 140)
    func_name_462910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 7), 'func_name')
    str_462911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 20), 'str', 'pdist')
    # Applying the binary operator '==' (line 140)
    result_eq_462912 = python_operator(stypy.reporting.localization.Localization(__file__, 140, 7), '==', func_name_462910, str_462911)
    
    # Testing the type of an if condition (line 140)
    if_condition_462913 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 140, 4), result_eq_462912)
    # Assigning a type to the variable 'if_condition_462913' (line 140)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 140, 4), 'if_condition_462913', if_condition_462913)
    # SSA begins for if statement (line 140)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 141):
    
    # Assigning a List to a Name (line 141):
    
    # Obtaining an instance of the builtin type 'list' (line 141)
    list_462914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 24), 'list')
    # Adding type elements to the builtin type 'list' instance (line 141)
    # Adding element type (line 141)
    str_462915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 25), 'str', 'p')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 24), list_462914, str_462915)
    # Adding element type (line 141)
    str_462916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 30), 'str', 'w')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 24), list_462914, str_462916)
    # Adding element type (line 141)
    str_462917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 35), 'str', 'V')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 24), list_462914, str_462917)
    # Adding element type (line 141)
    str_462918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 40), 'str', 'VI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 24), list_462914, str_462918)
    
    # Assigning a type to the variable 'old_arg_names' (line 141)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 8), 'old_arg_names', list_462914)
    # SSA branch for the else part of an if statement (line 140)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a List to a Name (line 143):
    
    # Assigning a List to a Name (line 143):
    
    # Obtaining an instance of the builtin type 'list' (line 143)
    list_462919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 24), 'list')
    # Adding type elements to the builtin type 'list' instance (line 143)
    # Adding element type (line 143)
    str_462920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 25), 'str', 'p')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 24), list_462919, str_462920)
    # Adding element type (line 143)
    str_462921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 30), 'str', 'V')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 24), list_462919, str_462921)
    # Adding element type (line 143)
    str_462922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 35), 'str', 'VI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 24), list_462919, str_462922)
    # Adding element type (line 143)
    str_462923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 41), 'str', 'w')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 24), list_462919, str_462923)
    
    # Assigning a type to the variable 'old_arg_names' (line 143)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 8), 'old_arg_names', list_462919)
    # SSA join for if statement (line 140)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 145):
    
    # Assigning a Call to a Name (line 145):
    
    # Call to len(...): (line 145)
    # Processing the call arguments (line 145)
    # Getting the type of 'args' (line 145)
    args_462925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 19), 'args', False)
    # Processing the call keyword arguments (line 145)
    kwargs_462926 = {}
    # Getting the type of 'len' (line 145)
    len_462924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 15), 'len', False)
    # Calling len(args, kwargs) (line 145)
    len_call_result_462927 = invoke(stypy.reporting.localization.Localization(__file__, 145, 15), len_462924, *[args_462925], **kwargs_462926)
    
    # Assigning a type to the variable 'num_args' (line 145)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 4), 'num_args', len_call_result_462927)
    
    # Call to warn(...): (line 146)
    # Processing the call arguments (line 146)
    str_462930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 18), 'str', '%d metric parameters have been passed as positional.This will raise an error in a future version.Please pass arguments as keywords(i.e., ARGNAME=ARGVALUE)')
    # Getting the type of 'num_args' (line 149)
    num_args_462931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 20), 'num_args', False)
    # Applying the binary operator '%' (line 146)
    result_mod_462932 = python_operator(stypy.reporting.localization.Localization(__file__, 146, 18), '%', str_462930, num_args_462931)
    
    # Getting the type of 'DeprecationWarning' (line 149)
    DeprecationWarning_462933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 30), 'DeprecationWarning', False)
    # Processing the call keyword arguments (line 146)
    kwargs_462934 = {}
    # Getting the type of 'warnings' (line 146)
    warnings_462928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 4), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 146)
    warn_462929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 4), warnings_462928, 'warn')
    # Calling warn(args, kwargs) (line 146)
    warn_call_result_462935 = invoke(stypy.reporting.localization.Localization(__file__, 146, 4), warn_462929, *[result_mod_462932, DeprecationWarning_462933], **kwargs_462934)
    
    
    
    # Getting the type of 'num_args' (line 151)
    num_args_462936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 7), 'num_args')
    int_462937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 18), 'int')
    # Applying the binary operator '>' (line 151)
    result_gt_462938 = python_operator(stypy.reporting.localization.Localization(__file__, 151, 7), '>', num_args_462936, int_462937)
    
    # Testing the type of an if condition (line 151)
    if_condition_462939 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 151, 4), result_gt_462938)
    # Assigning a type to the variable 'if_condition_462939' (line 151)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 4), 'if_condition_462939', if_condition_462939)
    # SSA begins for if statement (line 151)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 152)
    # Processing the call arguments (line 152)
    str_462941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 152, 25), 'str', 'Deprecated %s signature accepts only 4positional arguments (%s), %d given.')
    
    # Obtaining an instance of the builtin type 'tuple' (line 154)
    tuple_462942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 154)
    # Adding element type (line 154)
    # Getting the type of 'func_name' (line 154)
    func_name_462943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 28), 'func_name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 154, 28), tuple_462942, func_name_462943)
    # Adding element type (line 154)
    
    # Call to join(...): (line 154)
    # Processing the call arguments (line 154)
    # Getting the type of 'old_arg_names' (line 154)
    old_arg_names_462946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 49), 'old_arg_names', False)
    # Processing the call keyword arguments (line 154)
    kwargs_462947 = {}
    str_462944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 39), 'str', ', ')
    # Obtaining the member 'join' of a type (line 154)
    join_462945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 39), str_462944, 'join')
    # Calling join(args, kwargs) (line 154)
    join_call_result_462948 = invoke(stypy.reporting.localization.Localization(__file__, 154, 39), join_462945, *[old_arg_names_462946], **kwargs_462947)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 154, 28), tuple_462942, join_call_result_462948)
    # Adding element type (line 154)
    # Getting the type of 'num_args' (line 154)
    num_args_462949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 65), 'num_args', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 154, 28), tuple_462942, num_args_462949)
    
    # Applying the binary operator '%' (line 152)
    result_mod_462950 = python_operator(stypy.reporting.localization.Localization(__file__, 152, 25), '%', str_462941, tuple_462942)
    
    # Processing the call keyword arguments (line 152)
    kwargs_462951 = {}
    # Getting the type of 'ValueError' (line 152)
    ValueError_462940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 152)
    ValueError_call_result_462952 = invoke(stypy.reporting.localization.Localization(__file__, 152, 14), ValueError_462940, *[result_mod_462950], **kwargs_462951)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 152, 8), ValueError_call_result_462952, 'raise parameter', BaseException)
    # SSA join for if statement (line 151)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to zip(...): (line 156)
    # Processing the call arguments (line 156)
    # Getting the type of 'old_arg_names' (line 156)
    old_arg_names_462954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 28), 'old_arg_names', False)
    # Getting the type of 'args' (line 156)
    args_462955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 43), 'args', False)
    # Processing the call keyword arguments (line 156)
    kwargs_462956 = {}
    # Getting the type of 'zip' (line 156)
    zip_462953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 24), 'zip', False)
    # Calling zip(args, kwargs) (line 156)
    zip_call_result_462957 = invoke(stypy.reporting.localization.Localization(__file__, 156, 24), zip_462953, *[old_arg_names_462954, args_462955], **kwargs_462956)
    
    # Testing the type of a for loop iterable (line 156)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 156, 4), zip_call_result_462957)
    # Getting the type of the for loop variable (line 156)
    for_loop_var_462958 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 156, 4), zip_call_result_462957)
    # Assigning a type to the variable 'old_arg' (line 156)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 4), 'old_arg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 156, 4), for_loop_var_462958))
    # Assigning a type to the variable 'arg' (line 156)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 4), 'arg', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 156, 4), for_loop_var_462958))
    # SSA begins for a for statement (line 156)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'old_arg' (line 157)
    old_arg_462959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 11), 'old_arg')
    # Getting the type of 'kwargs' (line 157)
    kwargs_462960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 22), 'kwargs')
    # Applying the binary operator 'in' (line 157)
    result_contains_462961 = python_operator(stypy.reporting.localization.Localization(__file__, 157, 11), 'in', old_arg_462959, kwargs_462960)
    
    # Testing the type of an if condition (line 157)
    if_condition_462962 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 157, 8), result_contains_462961)
    # Assigning a type to the variable 'if_condition_462962' (line 157)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 8), 'if_condition_462962', if_condition_462962)
    # SSA begins for if statement (line 157)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to TypeError(...): (line 158)
    # Processing the call arguments (line 158)
    str_462964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 28), 'str', '%s() got multiple values for argument %s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 159)
    tuple_462965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 159)
    # Adding element type (line 159)
    # Getting the type of 'func_name' (line 159)
    func_name_462966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 31), 'func_name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 159, 31), tuple_462965, func_name_462966)
    # Adding element type (line 159)
    # Getting the type of 'old_arg' (line 159)
    old_arg_462967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 42), 'old_arg', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 159, 31), tuple_462965, old_arg_462967)
    
    # Applying the binary operator '%' (line 158)
    result_mod_462968 = python_operator(stypy.reporting.localization.Localization(__file__, 158, 28), '%', str_462964, tuple_462965)
    
    # Processing the call keyword arguments (line 158)
    kwargs_462969 = {}
    # Getting the type of 'TypeError' (line 158)
    TypeError_462963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 18), 'TypeError', False)
    # Calling TypeError(args, kwargs) (line 158)
    TypeError_call_result_462970 = invoke(stypy.reporting.localization.Localization(__file__, 158, 18), TypeError_462963, *[result_mod_462968], **kwargs_462969)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 158, 12), TypeError_call_result_462970, 'raise parameter', BaseException)
    # SSA join for if statement (line 157)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 160):
    
    # Assigning a Name to a Subscript (line 160):
    # Getting the type of 'arg' (line 160)
    arg_462971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 26), 'arg')
    # Getting the type of 'kwargs' (line 160)
    kwargs_462972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 8), 'kwargs')
    # Getting the type of 'old_arg' (line 160)
    old_arg_462973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 15), 'old_arg')
    # Storing an element on a container (line 160)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 8), kwargs_462972, (old_arg_462973, arg_462971))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'kwargs' (line 161)
    kwargs_462974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 11), 'kwargs')
    # Assigning a type to the variable 'stypy_return_type' (line 161)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 161, 4), 'stypy_return_type', kwargs_462974)
    
    # ################# End of '_args_to_kwargs_xdist(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_args_to_kwargs_xdist' in the type store
    # Getting the type of 'stypy_return_type' (line 125)
    stypy_return_type_462975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_462975)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_args_to_kwargs_xdist'
    return stypy_return_type_462975

# Assigning a type to the variable '_args_to_kwargs_xdist' (line 125)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 125, 0), '_args_to_kwargs_xdist', _args_to_kwargs_xdist)

@norecursion
def _copy_array_if_base_present(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_copy_array_if_base_present'
    module_type_store = module_type_store.open_function_context('_copy_array_if_base_present', 164, 0, False)
    
    # Passed parameters checking function
    _copy_array_if_base_present.stypy_localization = localization
    _copy_array_if_base_present.stypy_type_of_self = None
    _copy_array_if_base_present.stypy_type_store = module_type_store
    _copy_array_if_base_present.stypy_function_name = '_copy_array_if_base_present'
    _copy_array_if_base_present.stypy_param_names_list = ['a']
    _copy_array_if_base_present.stypy_varargs_param_name = None
    _copy_array_if_base_present.stypy_kwargs_param_name = None
    _copy_array_if_base_present.stypy_call_defaults = defaults
    _copy_array_if_base_present.stypy_call_varargs = varargs
    _copy_array_if_base_present.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_copy_array_if_base_present', ['a'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_copy_array_if_base_present', localization, ['a'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_copy_array_if_base_present(...)' code ##################

    str_462976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 167, (-1)), 'str', '\n    Copies the array if its base points to a parent array.\n    ')
    
    
    # Getting the type of 'a' (line 168)
    a_462977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 7), 'a')
    # Obtaining the member 'base' of a type (line 168)
    base_462978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 168, 7), a_462977, 'base')
    # Getting the type of 'None' (line 168)
    None_462979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 21), 'None')
    # Applying the binary operator 'isnot' (line 168)
    result_is_not_462980 = python_operator(stypy.reporting.localization.Localization(__file__, 168, 7), 'isnot', base_462978, None_462979)
    
    # Testing the type of an if condition (line 168)
    if_condition_462981 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 168, 4), result_is_not_462980)
    # Assigning a type to the variable 'if_condition_462981' (line 168)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 4), 'if_condition_462981', if_condition_462981)
    # SSA begins for if statement (line 168)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to copy(...): (line 169)
    # Processing the call keyword arguments (line 169)
    kwargs_462984 = {}
    # Getting the type of 'a' (line 169)
    a_462982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 15), 'a', False)
    # Obtaining the member 'copy' of a type (line 169)
    copy_462983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 169, 15), a_462982, 'copy')
    # Calling copy(args, kwargs) (line 169)
    copy_call_result_462985 = invoke(stypy.reporting.localization.Localization(__file__, 169, 15), copy_462983, *[], **kwargs_462984)
    
    # Assigning a type to the variable 'stypy_return_type' (line 169)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 169, 8), 'stypy_return_type', copy_call_result_462985)
    # SSA join for if statement (line 168)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'a' (line 170)
    a_462986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 11), 'a')
    # Assigning a type to the variable 'stypy_return_type' (line 170)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 4), 'stypy_return_type', a_462986)
    
    # ################# End of '_copy_array_if_base_present(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_copy_array_if_base_present' in the type store
    # Getting the type of 'stypy_return_type' (line 164)
    stypy_return_type_462987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_462987)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_copy_array_if_base_present'
    return stypy_return_type_462987

# Assigning a type to the variable '_copy_array_if_base_present' (line 164)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 0), '_copy_array_if_base_present', _copy_array_if_base_present)

@norecursion
def _correlation_cdist_wrap(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_correlation_cdist_wrap'
    module_type_store = module_type_store.open_function_context('_correlation_cdist_wrap', 173, 0, False)
    
    # Passed parameters checking function
    _correlation_cdist_wrap.stypy_localization = localization
    _correlation_cdist_wrap.stypy_type_of_self = None
    _correlation_cdist_wrap.stypy_type_store = module_type_store
    _correlation_cdist_wrap.stypy_function_name = '_correlation_cdist_wrap'
    _correlation_cdist_wrap.stypy_param_names_list = ['XA', 'XB', 'dm']
    _correlation_cdist_wrap.stypy_varargs_param_name = None
    _correlation_cdist_wrap.stypy_kwargs_param_name = 'kwargs'
    _correlation_cdist_wrap.stypy_call_defaults = defaults
    _correlation_cdist_wrap.stypy_call_varargs = varargs
    _correlation_cdist_wrap.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_correlation_cdist_wrap', ['XA', 'XB', 'dm'], None, 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_correlation_cdist_wrap', localization, ['XA', 'XB', 'dm'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_correlation_cdist_wrap(...)' code ##################

    
    # Assigning a BinOp to a Name (line 174):
    
    # Assigning a BinOp to a Name (line 174):
    # Getting the type of 'XA' (line 174)
    XA_462988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 9), 'XA')
    
    # Call to mean(...): (line 174)
    # Processing the call keyword arguments (line 174)
    int_462991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 174, 27), 'int')
    keyword_462992 = int_462991
    # Getting the type of 'True' (line 174)
    True_462993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 39), 'True', False)
    keyword_462994 = True_462993
    kwargs_462995 = {'keepdims': keyword_462994, 'axis': keyword_462992}
    # Getting the type of 'XA' (line 174)
    XA_462989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 14), 'XA', False)
    # Obtaining the member 'mean' of a type (line 174)
    mean_462990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 174, 14), XA_462989, 'mean')
    # Calling mean(args, kwargs) (line 174)
    mean_call_result_462996 = invoke(stypy.reporting.localization.Localization(__file__, 174, 14), mean_462990, *[], **kwargs_462995)
    
    # Applying the binary operator '-' (line 174)
    result_sub_462997 = python_operator(stypy.reporting.localization.Localization(__file__, 174, 9), '-', XA_462988, mean_call_result_462996)
    
    # Assigning a type to the variable 'XA' (line 174)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 174, 4), 'XA', result_sub_462997)
    
    # Assigning a BinOp to a Name (line 175):
    
    # Assigning a BinOp to a Name (line 175):
    # Getting the type of 'XB' (line 175)
    XB_462998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 9), 'XB')
    
    # Call to mean(...): (line 175)
    # Processing the call keyword arguments (line 175)
    int_463001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 27), 'int')
    keyword_463002 = int_463001
    # Getting the type of 'True' (line 175)
    True_463003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 39), 'True', False)
    keyword_463004 = True_463003
    kwargs_463005 = {'keepdims': keyword_463004, 'axis': keyword_463002}
    # Getting the type of 'XB' (line 175)
    XB_462999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 14), 'XB', False)
    # Obtaining the member 'mean' of a type (line 175)
    mean_463000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 175, 14), XB_462999, 'mean')
    # Calling mean(args, kwargs) (line 175)
    mean_call_result_463006 = invoke(stypy.reporting.localization.Localization(__file__, 175, 14), mean_463000, *[], **kwargs_463005)
    
    # Applying the binary operator '-' (line 175)
    result_sub_463007 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 9), '-', XB_462998, mean_call_result_463006)
    
    # Assigning a type to the variable 'XB' (line 175)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 4), 'XB', result_sub_463007)
    
    # Call to cdist_cosine_double_wrap(...): (line 176)
    # Processing the call arguments (line 176)
    # Getting the type of 'XA' (line 176)
    XA_463010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 44), 'XA', False)
    # Getting the type of 'XB' (line 176)
    XB_463011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 48), 'XB', False)
    # Getting the type of 'dm' (line 176)
    dm_463012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 52), 'dm', False)
    # Processing the call keyword arguments (line 176)
    # Getting the type of 'kwargs' (line 176)
    kwargs_463013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 58), 'kwargs', False)
    kwargs_463014 = {'kwargs_463013': kwargs_463013}
    # Getting the type of '_distance_wrap' (line 176)
    _distance_wrap_463008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 4), '_distance_wrap', False)
    # Obtaining the member 'cdist_cosine_double_wrap' of a type (line 176)
    cdist_cosine_double_wrap_463009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 176, 4), _distance_wrap_463008, 'cdist_cosine_double_wrap')
    # Calling cdist_cosine_double_wrap(args, kwargs) (line 176)
    cdist_cosine_double_wrap_call_result_463015 = invoke(stypy.reporting.localization.Localization(__file__, 176, 4), cdist_cosine_double_wrap_463009, *[XA_463010, XB_463011, dm_463012], **kwargs_463014)
    
    
    # ################# End of '_correlation_cdist_wrap(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_correlation_cdist_wrap' in the type store
    # Getting the type of 'stypy_return_type' (line 173)
    stypy_return_type_463016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463016)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_correlation_cdist_wrap'
    return stypy_return_type_463016

# Assigning a type to the variable '_correlation_cdist_wrap' (line 173)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 173, 0), '_correlation_cdist_wrap', _correlation_cdist_wrap)

@norecursion
def _correlation_pdist_wrap(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_correlation_pdist_wrap'
    module_type_store = module_type_store.open_function_context('_correlation_pdist_wrap', 179, 0, False)
    
    # Passed parameters checking function
    _correlation_pdist_wrap.stypy_localization = localization
    _correlation_pdist_wrap.stypy_type_of_self = None
    _correlation_pdist_wrap.stypy_type_store = module_type_store
    _correlation_pdist_wrap.stypy_function_name = '_correlation_pdist_wrap'
    _correlation_pdist_wrap.stypy_param_names_list = ['X', 'dm']
    _correlation_pdist_wrap.stypy_varargs_param_name = None
    _correlation_pdist_wrap.stypy_kwargs_param_name = 'kwargs'
    _correlation_pdist_wrap.stypy_call_defaults = defaults
    _correlation_pdist_wrap.stypy_call_varargs = varargs
    _correlation_pdist_wrap.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_correlation_pdist_wrap', ['X', 'dm'], None, 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_correlation_pdist_wrap', localization, ['X', 'dm'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_correlation_pdist_wrap(...)' code ##################

    
    # Assigning a BinOp to a Name (line 180):
    
    # Assigning a BinOp to a Name (line 180):
    # Getting the type of 'X' (line 180)
    X_463017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 9), 'X')
    
    # Call to mean(...): (line 180)
    # Processing the call keyword arguments (line 180)
    int_463020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 25), 'int')
    keyword_463021 = int_463020
    # Getting the type of 'True' (line 180)
    True_463022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 37), 'True', False)
    keyword_463023 = True_463022
    kwargs_463024 = {'keepdims': keyword_463023, 'axis': keyword_463021}
    # Getting the type of 'X' (line 180)
    X_463018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 13), 'X', False)
    # Obtaining the member 'mean' of a type (line 180)
    mean_463019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 13), X_463018, 'mean')
    # Calling mean(args, kwargs) (line 180)
    mean_call_result_463025 = invoke(stypy.reporting.localization.Localization(__file__, 180, 13), mean_463019, *[], **kwargs_463024)
    
    # Applying the binary operator '-' (line 180)
    result_sub_463026 = python_operator(stypy.reporting.localization.Localization(__file__, 180, 9), '-', X_463017, mean_call_result_463025)
    
    # Assigning a type to the variable 'X2' (line 180)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 4), 'X2', result_sub_463026)
    
    # Call to pdist_cosine_double_wrap(...): (line 181)
    # Processing the call arguments (line 181)
    # Getting the type of 'X2' (line 181)
    X2_463029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 44), 'X2', False)
    # Getting the type of 'dm' (line 181)
    dm_463030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 48), 'dm', False)
    # Processing the call keyword arguments (line 181)
    # Getting the type of 'kwargs' (line 181)
    kwargs_463031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 54), 'kwargs', False)
    kwargs_463032 = {'kwargs_463031': kwargs_463031}
    # Getting the type of '_distance_wrap' (line 181)
    _distance_wrap_463027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 4), '_distance_wrap', False)
    # Obtaining the member 'pdist_cosine_double_wrap' of a type (line 181)
    pdist_cosine_double_wrap_463028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 4), _distance_wrap_463027, 'pdist_cosine_double_wrap')
    # Calling pdist_cosine_double_wrap(args, kwargs) (line 181)
    pdist_cosine_double_wrap_call_result_463033 = invoke(stypy.reporting.localization.Localization(__file__, 181, 4), pdist_cosine_double_wrap_463028, *[X2_463029, dm_463030], **kwargs_463032)
    
    
    # ################# End of '_correlation_pdist_wrap(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_correlation_pdist_wrap' in the type store
    # Getting the type of 'stypy_return_type' (line 179)
    stypy_return_type_463034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463034)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_correlation_pdist_wrap'
    return stypy_return_type_463034

# Assigning a type to the variable '_correlation_pdist_wrap' (line 179)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 179, 0), '_correlation_pdist_wrap', _correlation_pdist_wrap)

@norecursion
def _convert_to_type(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_convert_to_type'
    module_type_store = module_type_store.open_function_context('_convert_to_type', 184, 0, False)
    
    # Passed parameters checking function
    _convert_to_type.stypy_localization = localization
    _convert_to_type.stypy_type_of_self = None
    _convert_to_type.stypy_type_store = module_type_store
    _convert_to_type.stypy_function_name = '_convert_to_type'
    _convert_to_type.stypy_param_names_list = ['X', 'out_type']
    _convert_to_type.stypy_varargs_param_name = None
    _convert_to_type.stypy_kwargs_param_name = None
    _convert_to_type.stypy_call_defaults = defaults
    _convert_to_type.stypy_call_varargs = varargs
    _convert_to_type.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_convert_to_type', ['X', 'out_type'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_convert_to_type', localization, ['X', 'out_type'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_convert_to_type(...)' code ##################

    
    # Call to ascontiguousarray(...): (line 185)
    # Processing the call arguments (line 185)
    # Getting the type of 'X' (line 185)
    X_463037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 32), 'X', False)
    # Processing the call keyword arguments (line 185)
    # Getting the type of 'out_type' (line 185)
    out_type_463038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 41), 'out_type', False)
    keyword_463039 = out_type_463038
    kwargs_463040 = {'dtype': keyword_463039}
    # Getting the type of 'np' (line 185)
    np_463035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 11), 'np', False)
    # Obtaining the member 'ascontiguousarray' of a type (line 185)
    ascontiguousarray_463036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 11), np_463035, 'ascontiguousarray')
    # Calling ascontiguousarray(args, kwargs) (line 185)
    ascontiguousarray_call_result_463041 = invoke(stypy.reporting.localization.Localization(__file__, 185, 11), ascontiguousarray_463036, *[X_463037], **kwargs_463040)
    
    # Assigning a type to the variable 'stypy_return_type' (line 185)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 4), 'stypy_return_type', ascontiguousarray_call_result_463041)
    
    # ################# End of '_convert_to_type(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_convert_to_type' in the type store
    # Getting the type of 'stypy_return_type' (line 184)
    stypy_return_type_463042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463042)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_convert_to_type'
    return stypy_return_type_463042

# Assigning a type to the variable '_convert_to_type' (line 184)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 0), '_convert_to_type', _convert_to_type)

@norecursion
def _filter_deprecated_kwargs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_filter_deprecated_kwargs'
    module_type_store = module_type_store.open_function_context('_filter_deprecated_kwargs', 188, 0, False)
    
    # Passed parameters checking function
    _filter_deprecated_kwargs.stypy_localization = localization
    _filter_deprecated_kwargs.stypy_type_of_self = None
    _filter_deprecated_kwargs.stypy_type_store = module_type_store
    _filter_deprecated_kwargs.stypy_function_name = '_filter_deprecated_kwargs'
    _filter_deprecated_kwargs.stypy_param_names_list = ['kwargs', 'args_blacklist']
    _filter_deprecated_kwargs.stypy_varargs_param_name = None
    _filter_deprecated_kwargs.stypy_kwargs_param_name = None
    _filter_deprecated_kwargs.stypy_call_defaults = defaults
    _filter_deprecated_kwargs.stypy_call_varargs = varargs
    _filter_deprecated_kwargs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_filter_deprecated_kwargs', ['kwargs', 'args_blacklist'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_filter_deprecated_kwargs', localization, ['kwargs', 'args_blacklist'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_filter_deprecated_kwargs(...)' code ##################

    
    # Getting the type of 'args_blacklist' (line 190)
    args_blacklist_463043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 13), 'args_blacklist')
    # Testing the type of a for loop iterable (line 190)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 190, 4), args_blacklist_463043)
    # Getting the type of the for loop variable (line 190)
    for_loop_var_463044 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 190, 4), args_blacklist_463043)
    # Assigning a type to the variable 'k' (line 190)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 4), 'k', for_loop_var_463044)
    # SSA begins for a for statement (line 190)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'k' (line 191)
    k_463045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 11), 'k')
    # Getting the type of 'kwargs' (line 191)
    kwargs_463046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 16), 'kwargs')
    # Applying the binary operator 'in' (line 191)
    result_contains_463047 = python_operator(stypy.reporting.localization.Localization(__file__, 191, 11), 'in', k_463045, kwargs_463046)
    
    # Testing the type of an if condition (line 191)
    if_condition_463048 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 191, 8), result_contains_463047)
    # Assigning a type to the variable 'if_condition_463048' (line 191)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 8), 'if_condition_463048', if_condition_463048)
    # SSA begins for if statement (line 191)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Deleting a member
    # Getting the type of 'kwargs' (line 192)
    kwargs_463049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 16), 'kwargs')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 192)
    k_463050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 23), 'k')
    # Getting the type of 'kwargs' (line 192)
    kwargs_463051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 16), 'kwargs')
    # Obtaining the member '__getitem__' of a type (line 192)
    getitem___463052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 16), kwargs_463051, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 192)
    subscript_call_result_463053 = invoke(stypy.reporting.localization.Localization(__file__, 192, 16), getitem___463052, k_463050)
    
    del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 192, 12), kwargs_463049, subscript_call_result_463053)
    
    # Call to warn(...): (line 193)
    # Processing the call arguments (line 193)
    str_463056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 26), 'str', 'Got unexpected kwarg %s. This will raise an error in a future version.')
    # Getting the type of 'k' (line 194)
    k_463057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 52), 'k', False)
    # Applying the binary operator '%' (line 193)
    result_mod_463058 = python_operator(stypy.reporting.localization.Localization(__file__, 193, 26), '%', str_463056, k_463057)
    
    # Getting the type of 'DeprecationWarning' (line 194)
    DeprecationWarning_463059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 55), 'DeprecationWarning', False)
    # Processing the call keyword arguments (line 193)
    kwargs_463060 = {}
    # Getting the type of 'warnings' (line 193)
    warnings_463054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 193)
    warn_463055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 12), warnings_463054, 'warn')
    # Calling warn(args, kwargs) (line 193)
    warn_call_result_463061 = invoke(stypy.reporting.localization.Localization(__file__, 193, 12), warn_463055, *[result_mod_463058, DeprecationWarning_463059], **kwargs_463060)
    
    # SSA join for if statement (line 191)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of '_filter_deprecated_kwargs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_filter_deprecated_kwargs' in the type store
    # Getting the type of 'stypy_return_type' (line 188)
    stypy_return_type_463062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463062)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_filter_deprecated_kwargs'
    return stypy_return_type_463062

# Assigning a type to the variable '_filter_deprecated_kwargs' (line 188)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 0), '_filter_deprecated_kwargs', _filter_deprecated_kwargs)

@norecursion
def _nbool_correspond_all(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 197)
    None_463063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 34), 'None')
    defaults = [None_463063]
    # Create a new context for function '_nbool_correspond_all'
    module_type_store = module_type_store.open_function_context('_nbool_correspond_all', 197, 0, False)
    
    # Passed parameters checking function
    _nbool_correspond_all.stypy_localization = localization
    _nbool_correspond_all.stypy_type_of_self = None
    _nbool_correspond_all.stypy_type_store = module_type_store
    _nbool_correspond_all.stypy_function_name = '_nbool_correspond_all'
    _nbool_correspond_all.stypy_param_names_list = ['u', 'v', 'w']
    _nbool_correspond_all.stypy_varargs_param_name = None
    _nbool_correspond_all.stypy_kwargs_param_name = None
    _nbool_correspond_all.stypy_call_defaults = defaults
    _nbool_correspond_all.stypy_call_varargs = varargs
    _nbool_correspond_all.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_nbool_correspond_all', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_nbool_correspond_all', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_nbool_correspond_all(...)' code ##################

    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'u' (line 198)
    u_463064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 7), 'u')
    # Obtaining the member 'dtype' of a type (line 198)
    dtype_463065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 7), u_463064, 'dtype')
    # Getting the type of 'v' (line 198)
    v_463066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 18), 'v')
    # Obtaining the member 'dtype' of a type (line 198)
    dtype_463067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 18), v_463066, 'dtype')
    # Applying the binary operator '==' (line 198)
    result_eq_463068 = python_operator(stypy.reporting.localization.Localization(__file__, 198, 7), '==', dtype_463065, dtype_463067)
    # Getting the type of 'bool' (line 198)
    bool_463069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 29), 'bool')
    # Applying the binary operator '==' (line 198)
    result_eq_463070 = python_operator(stypy.reporting.localization.Localization(__file__, 198, 7), '==', dtype_463067, bool_463069)
    # Applying the binary operator '&' (line 198)
    result_and__463071 = python_operator(stypy.reporting.localization.Localization(__file__, 198, 7), '&', result_eq_463068, result_eq_463070)
    
    
    # Getting the type of 'w' (line 198)
    w_463072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 38), 'w')
    # Getting the type of 'None' (line 198)
    None_463073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 43), 'None')
    # Applying the binary operator 'is' (line 198)
    result_is__463074 = python_operator(stypy.reporting.localization.Localization(__file__, 198, 38), 'is', w_463072, None_463073)
    
    # Applying the binary operator 'and' (line 198)
    result_and_keyword_463075 = python_operator(stypy.reporting.localization.Localization(__file__, 198, 7), 'and', result_and__463071, result_is__463074)
    
    # Testing the type of an if condition (line 198)
    if_condition_463076 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 198, 4), result_and_keyword_463075)
    # Assigning a type to the variable 'if_condition_463076' (line 198)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 4), 'if_condition_463076', if_condition_463076)
    # SSA begins for if statement (line 198)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a UnaryOp to a Name (line 199):
    
    # Assigning a UnaryOp to a Name (line 199):
    
    # Getting the type of 'u' (line 199)
    u_463077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 17), 'u')
    # Applying the '~' unary operator (line 199)
    result_inv_463078 = python_operator(stypy.reporting.localization.Localization(__file__, 199, 16), '~', u_463077)
    
    # Assigning a type to the variable 'not_u' (line 199)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'not_u', result_inv_463078)
    
    # Assigning a UnaryOp to a Name (line 200):
    
    # Assigning a UnaryOp to a Name (line 200):
    
    # Getting the type of 'v' (line 200)
    v_463079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 17), 'v')
    # Applying the '~' unary operator (line 200)
    result_inv_463080 = python_operator(stypy.reporting.localization.Localization(__file__, 200, 16), '~', v_463079)
    
    # Assigning a type to the variable 'not_v' (line 200)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 200, 8), 'not_v', result_inv_463080)
    
    # Assigning a Call to a Name (line 201):
    
    # Assigning a Call to a Name (line 201):
    
    # Call to sum(...): (line 201)
    # Processing the call keyword arguments (line 201)
    kwargs_463085 = {}
    # Getting the type of 'not_u' (line 201)
    not_u_463081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 15), 'not_u', False)
    # Getting the type of 'not_v' (line 201)
    not_v_463082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 23), 'not_v', False)
    # Applying the binary operator '&' (line 201)
    result_and__463083 = python_operator(stypy.reporting.localization.Localization(__file__, 201, 15), '&', not_u_463081, not_v_463082)
    
    # Obtaining the member 'sum' of a type (line 201)
    sum_463084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 15), result_and__463083, 'sum')
    # Calling sum(args, kwargs) (line 201)
    sum_call_result_463086 = invoke(stypy.reporting.localization.Localization(__file__, 201, 15), sum_463084, *[], **kwargs_463085)
    
    # Assigning a type to the variable 'nff' (line 201)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 8), 'nff', sum_call_result_463086)
    
    # Assigning a Call to a Name (line 202):
    
    # Assigning a Call to a Name (line 202):
    
    # Call to sum(...): (line 202)
    # Processing the call keyword arguments (line 202)
    kwargs_463091 = {}
    # Getting the type of 'not_u' (line 202)
    not_u_463087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 15), 'not_u', False)
    # Getting the type of 'v' (line 202)
    v_463088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 23), 'v', False)
    # Applying the binary operator '&' (line 202)
    result_and__463089 = python_operator(stypy.reporting.localization.Localization(__file__, 202, 15), '&', not_u_463087, v_463088)
    
    # Obtaining the member 'sum' of a type (line 202)
    sum_463090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 202, 15), result_and__463089, 'sum')
    # Calling sum(args, kwargs) (line 202)
    sum_call_result_463092 = invoke(stypy.reporting.localization.Localization(__file__, 202, 15), sum_463090, *[], **kwargs_463091)
    
    # Assigning a type to the variable 'nft' (line 202)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 8), 'nft', sum_call_result_463092)
    
    # Assigning a Call to a Name (line 203):
    
    # Assigning a Call to a Name (line 203):
    
    # Call to sum(...): (line 203)
    # Processing the call keyword arguments (line 203)
    kwargs_463097 = {}
    # Getting the type of 'u' (line 203)
    u_463093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 15), 'u', False)
    # Getting the type of 'not_v' (line 203)
    not_v_463094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 19), 'not_v', False)
    # Applying the binary operator '&' (line 203)
    result_and__463095 = python_operator(stypy.reporting.localization.Localization(__file__, 203, 15), '&', u_463093, not_v_463094)
    
    # Obtaining the member 'sum' of a type (line 203)
    sum_463096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 15), result_and__463095, 'sum')
    # Calling sum(args, kwargs) (line 203)
    sum_call_result_463098 = invoke(stypy.reporting.localization.Localization(__file__, 203, 15), sum_463096, *[], **kwargs_463097)
    
    # Assigning a type to the variable 'ntf' (line 203)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 203, 8), 'ntf', sum_call_result_463098)
    
    # Assigning a Call to a Name (line 204):
    
    # Assigning a Call to a Name (line 204):
    
    # Call to sum(...): (line 204)
    # Processing the call keyword arguments (line 204)
    kwargs_463103 = {}
    # Getting the type of 'u' (line 204)
    u_463099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 15), 'u', False)
    # Getting the type of 'v' (line 204)
    v_463100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 19), 'v', False)
    # Applying the binary operator '&' (line 204)
    result_and__463101 = python_operator(stypy.reporting.localization.Localization(__file__, 204, 15), '&', u_463099, v_463100)
    
    # Obtaining the member 'sum' of a type (line 204)
    sum_463102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 15), result_and__463101, 'sum')
    # Calling sum(args, kwargs) (line 204)
    sum_call_result_463104 = invoke(stypy.reporting.localization.Localization(__file__, 204, 15), sum_463102, *[], **kwargs_463103)
    
    # Assigning a type to the variable 'ntt' (line 204)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 204, 8), 'ntt', sum_call_result_463104)
    # SSA branch for the else part of an if statement (line 198)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 206):
    
    # Assigning a Call to a Name (line 206):
    
    # Call to find_common_type(...): (line 206)
    # Processing the call arguments (line 206)
    
    # Obtaining an instance of the builtin type 'list' (line 206)
    list_463107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 36), 'list')
    # Adding type elements to the builtin type 'list' instance (line 206)
    # Adding element type (line 206)
    # Getting the type of 'int' (line 206)
    int_463108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 37), 'int', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 206, 36), list_463107, int_463108)
    
    
    # Obtaining an instance of the builtin type 'list' (line 206)
    list_463109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 43), 'list')
    # Adding type elements to the builtin type 'list' instance (line 206)
    # Adding element type (line 206)
    # Getting the type of 'u' (line 206)
    u_463110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 44), 'u', False)
    # Obtaining the member 'dtype' of a type (line 206)
    dtype_463111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 44), u_463110, 'dtype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 206, 43), list_463109, dtype_463111)
    # Adding element type (line 206)
    # Getting the type of 'v' (line 206)
    v_463112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 53), 'v', False)
    # Obtaining the member 'dtype' of a type (line 206)
    dtype_463113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 53), v_463112, 'dtype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 206, 43), list_463109, dtype_463113)
    
    # Processing the call keyword arguments (line 206)
    kwargs_463114 = {}
    # Getting the type of 'np' (line 206)
    np_463105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 16), 'np', False)
    # Obtaining the member 'find_common_type' of a type (line 206)
    find_common_type_463106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 16), np_463105, 'find_common_type')
    # Calling find_common_type(args, kwargs) (line 206)
    find_common_type_call_result_463115 = invoke(stypy.reporting.localization.Localization(__file__, 206, 16), find_common_type_463106, *[list_463107, list_463109], **kwargs_463114)
    
    # Assigning a type to the variable 'dtype' (line 206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'dtype', find_common_type_call_result_463115)
    
    # Assigning a Call to a Name (line 207):
    
    # Assigning a Call to a Name (line 207):
    
    # Call to astype(...): (line 207)
    # Processing the call arguments (line 207)
    # Getting the type of 'dtype' (line 207)
    dtype_463118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 21), 'dtype', False)
    # Processing the call keyword arguments (line 207)
    kwargs_463119 = {}
    # Getting the type of 'u' (line 207)
    u_463116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 12), 'u', False)
    # Obtaining the member 'astype' of a type (line 207)
    astype_463117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 12), u_463116, 'astype')
    # Calling astype(args, kwargs) (line 207)
    astype_call_result_463120 = invoke(stypy.reporting.localization.Localization(__file__, 207, 12), astype_463117, *[dtype_463118], **kwargs_463119)
    
    # Assigning a type to the variable 'u' (line 207)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'u', astype_call_result_463120)
    
    # Assigning a Call to a Name (line 208):
    
    # Assigning a Call to a Name (line 208):
    
    # Call to astype(...): (line 208)
    # Processing the call arguments (line 208)
    # Getting the type of 'dtype' (line 208)
    dtype_463123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 21), 'dtype', False)
    # Processing the call keyword arguments (line 208)
    kwargs_463124 = {}
    # Getting the type of 'v' (line 208)
    v_463121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 12), 'v', False)
    # Obtaining the member 'astype' of a type (line 208)
    astype_463122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 12), v_463121, 'astype')
    # Calling astype(args, kwargs) (line 208)
    astype_call_result_463125 = invoke(stypy.reporting.localization.Localization(__file__, 208, 12), astype_463122, *[dtype_463123], **kwargs_463124)
    
    # Assigning a type to the variable 'v' (line 208)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 8), 'v', astype_call_result_463125)
    
    # Assigning a BinOp to a Name (line 209):
    
    # Assigning a BinOp to a Name (line 209):
    float_463126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 16), 'float')
    # Getting the type of 'u' (line 209)
    u_463127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 22), 'u')
    # Applying the binary operator '-' (line 209)
    result_sub_463128 = python_operator(stypy.reporting.localization.Localization(__file__, 209, 16), '-', float_463126, u_463127)
    
    # Assigning a type to the variable 'not_u' (line 209)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 209, 8), 'not_u', result_sub_463128)
    
    # Assigning a BinOp to a Name (line 210):
    
    # Assigning a BinOp to a Name (line 210):
    float_463129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 16), 'float')
    # Getting the type of 'v' (line 210)
    v_463130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 22), 'v')
    # Applying the binary operator '-' (line 210)
    result_sub_463131 = python_operator(stypy.reporting.localization.Localization(__file__, 210, 16), '-', float_463129, v_463130)
    
    # Assigning a type to the variable 'not_v' (line 210)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 8), 'not_v', result_sub_463131)
    
    # Type idiom detected: calculating its left and rigth part (line 211)
    # Getting the type of 'w' (line 211)
    w_463132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 8), 'w')
    # Getting the type of 'None' (line 211)
    None_463133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 20), 'None')
    
    (may_be_463134, more_types_in_union_463135) = may_not_be_none(w_463132, None_463133)

    if may_be_463134:

        if more_types_in_union_463135:
            # Runtime conditional SSA (line 211)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a BinOp to a Name (line 212):
        
        # Assigning a BinOp to a Name (line 212):
        # Getting the type of 'w' (line 212)
        w_463136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 20), 'w')
        # Getting the type of 'not_u' (line 212)
        not_u_463137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 24), 'not_u')
        # Applying the binary operator '*' (line 212)
        result_mul_463138 = python_operator(stypy.reporting.localization.Localization(__file__, 212, 20), '*', w_463136, not_u_463137)
        
        # Assigning a type to the variable 'not_u' (line 212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 12), 'not_u', result_mul_463138)
        
        # Assigning a BinOp to a Name (line 213):
        
        # Assigning a BinOp to a Name (line 213):
        # Getting the type of 'w' (line 213)
        w_463139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 16), 'w')
        # Getting the type of 'u' (line 213)
        u_463140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 20), 'u')
        # Applying the binary operator '*' (line 213)
        result_mul_463141 = python_operator(stypy.reporting.localization.Localization(__file__, 213, 16), '*', w_463139, u_463140)
        
        # Assigning a type to the variable 'u' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 12), 'u', result_mul_463141)

        if more_types_in_union_463135:
            # SSA join for if statement (line 211)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 214):
    
    # Assigning a Call to a Name (line 214):
    
    # Call to sum(...): (line 214)
    # Processing the call keyword arguments (line 214)
    kwargs_463146 = {}
    # Getting the type of 'not_u' (line 214)
    not_u_463142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 15), 'not_u', False)
    # Getting the type of 'not_v' (line 214)
    not_v_463143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 23), 'not_v', False)
    # Applying the binary operator '*' (line 214)
    result_mul_463144 = python_operator(stypy.reporting.localization.Localization(__file__, 214, 15), '*', not_u_463142, not_v_463143)
    
    # Obtaining the member 'sum' of a type (line 214)
    sum_463145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 15), result_mul_463144, 'sum')
    # Calling sum(args, kwargs) (line 214)
    sum_call_result_463147 = invoke(stypy.reporting.localization.Localization(__file__, 214, 15), sum_463145, *[], **kwargs_463146)
    
    # Assigning a type to the variable 'nff' (line 214)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), 'nff', sum_call_result_463147)
    
    # Assigning a Call to a Name (line 215):
    
    # Assigning a Call to a Name (line 215):
    
    # Call to sum(...): (line 215)
    # Processing the call keyword arguments (line 215)
    kwargs_463152 = {}
    # Getting the type of 'not_u' (line 215)
    not_u_463148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 15), 'not_u', False)
    # Getting the type of 'v' (line 215)
    v_463149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 23), 'v', False)
    # Applying the binary operator '*' (line 215)
    result_mul_463150 = python_operator(stypy.reporting.localization.Localization(__file__, 215, 15), '*', not_u_463148, v_463149)
    
    # Obtaining the member 'sum' of a type (line 215)
    sum_463151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 15), result_mul_463150, 'sum')
    # Calling sum(args, kwargs) (line 215)
    sum_call_result_463153 = invoke(stypy.reporting.localization.Localization(__file__, 215, 15), sum_463151, *[], **kwargs_463152)
    
    # Assigning a type to the variable 'nft' (line 215)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'nft', sum_call_result_463153)
    
    # Assigning a Call to a Name (line 216):
    
    # Assigning a Call to a Name (line 216):
    
    # Call to sum(...): (line 216)
    # Processing the call keyword arguments (line 216)
    kwargs_463158 = {}
    # Getting the type of 'u' (line 216)
    u_463154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 15), 'u', False)
    # Getting the type of 'not_v' (line 216)
    not_v_463155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 19), 'not_v', False)
    # Applying the binary operator '*' (line 216)
    result_mul_463156 = python_operator(stypy.reporting.localization.Localization(__file__, 216, 15), '*', u_463154, not_v_463155)
    
    # Obtaining the member 'sum' of a type (line 216)
    sum_463157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 15), result_mul_463156, 'sum')
    # Calling sum(args, kwargs) (line 216)
    sum_call_result_463159 = invoke(stypy.reporting.localization.Localization(__file__, 216, 15), sum_463157, *[], **kwargs_463158)
    
    # Assigning a type to the variable 'ntf' (line 216)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'ntf', sum_call_result_463159)
    
    # Assigning a Call to a Name (line 217):
    
    # Assigning a Call to a Name (line 217):
    
    # Call to sum(...): (line 217)
    # Processing the call keyword arguments (line 217)
    kwargs_463164 = {}
    # Getting the type of 'u' (line 217)
    u_463160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 15), 'u', False)
    # Getting the type of 'v' (line 217)
    v_463161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 19), 'v', False)
    # Applying the binary operator '*' (line 217)
    result_mul_463162 = python_operator(stypy.reporting.localization.Localization(__file__, 217, 15), '*', u_463160, v_463161)
    
    # Obtaining the member 'sum' of a type (line 217)
    sum_463163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 15), result_mul_463162, 'sum')
    # Calling sum(args, kwargs) (line 217)
    sum_call_result_463165 = invoke(stypy.reporting.localization.Localization(__file__, 217, 15), sum_463163, *[], **kwargs_463164)
    
    # Assigning a type to the variable 'ntt' (line 217)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 217, 8), 'ntt', sum_call_result_463165)
    # SSA join for if statement (line 198)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 218)
    tuple_463166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 218, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 218)
    # Adding element type (line 218)
    # Getting the type of 'nff' (line 218)
    nff_463167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 12), 'nff')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 218, 12), tuple_463166, nff_463167)
    # Adding element type (line 218)
    # Getting the type of 'nft' (line 218)
    nft_463168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 17), 'nft')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 218, 12), tuple_463166, nft_463168)
    # Adding element type (line 218)
    # Getting the type of 'ntf' (line 218)
    ntf_463169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 22), 'ntf')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 218, 12), tuple_463166, ntf_463169)
    # Adding element type (line 218)
    # Getting the type of 'ntt' (line 218)
    ntt_463170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 27), 'ntt')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 218, 12), tuple_463166, ntt_463170)
    
    # Assigning a type to the variable 'stypy_return_type' (line 218)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 4), 'stypy_return_type', tuple_463166)
    
    # ################# End of '_nbool_correspond_all(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_nbool_correspond_all' in the type store
    # Getting the type of 'stypy_return_type' (line 197)
    stypy_return_type_463171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463171)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_nbool_correspond_all'
    return stypy_return_type_463171

# Assigning a type to the variable '_nbool_correspond_all' (line 197)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 0), '_nbool_correspond_all', _nbool_correspond_all)

@norecursion
def _nbool_correspond_ft_tf(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 221)
    None_463172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 36), 'None')
    defaults = [None_463172]
    # Create a new context for function '_nbool_correspond_ft_tf'
    module_type_store = module_type_store.open_function_context('_nbool_correspond_ft_tf', 221, 0, False)
    
    # Passed parameters checking function
    _nbool_correspond_ft_tf.stypy_localization = localization
    _nbool_correspond_ft_tf.stypy_type_of_self = None
    _nbool_correspond_ft_tf.stypy_type_store = module_type_store
    _nbool_correspond_ft_tf.stypy_function_name = '_nbool_correspond_ft_tf'
    _nbool_correspond_ft_tf.stypy_param_names_list = ['u', 'v', 'w']
    _nbool_correspond_ft_tf.stypy_varargs_param_name = None
    _nbool_correspond_ft_tf.stypy_kwargs_param_name = None
    _nbool_correspond_ft_tf.stypy_call_defaults = defaults
    _nbool_correspond_ft_tf.stypy_call_varargs = varargs
    _nbool_correspond_ft_tf.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_nbool_correspond_ft_tf', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_nbool_correspond_ft_tf', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_nbool_correspond_ft_tf(...)' code ##################

    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'u' (line 222)
    u_463173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 7), 'u')
    # Obtaining the member 'dtype' of a type (line 222)
    dtype_463174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 7), u_463173, 'dtype')
    # Getting the type of 'v' (line 222)
    v_463175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 18), 'v')
    # Obtaining the member 'dtype' of a type (line 222)
    dtype_463176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 18), v_463175, 'dtype')
    # Applying the binary operator '==' (line 222)
    result_eq_463177 = python_operator(stypy.reporting.localization.Localization(__file__, 222, 7), '==', dtype_463174, dtype_463176)
    # Getting the type of 'bool' (line 222)
    bool_463178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 29), 'bool')
    # Applying the binary operator '==' (line 222)
    result_eq_463179 = python_operator(stypy.reporting.localization.Localization(__file__, 222, 7), '==', dtype_463176, bool_463178)
    # Applying the binary operator '&' (line 222)
    result_and__463180 = python_operator(stypy.reporting.localization.Localization(__file__, 222, 7), '&', result_eq_463177, result_eq_463179)
    
    
    # Getting the type of 'w' (line 222)
    w_463181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 38), 'w')
    # Getting the type of 'None' (line 222)
    None_463182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 43), 'None')
    # Applying the binary operator 'is' (line 222)
    result_is__463183 = python_operator(stypy.reporting.localization.Localization(__file__, 222, 38), 'is', w_463181, None_463182)
    
    # Applying the binary operator 'and' (line 222)
    result_and_keyword_463184 = python_operator(stypy.reporting.localization.Localization(__file__, 222, 7), 'and', result_and__463180, result_is__463183)
    
    # Testing the type of an if condition (line 222)
    if_condition_463185 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 222, 4), result_and_keyword_463184)
    # Assigning a type to the variable 'if_condition_463185' (line 222)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 222, 4), 'if_condition_463185', if_condition_463185)
    # SSA begins for if statement (line 222)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a UnaryOp to a Name (line 223):
    
    # Assigning a UnaryOp to a Name (line 223):
    
    # Getting the type of 'u' (line 223)
    u_463186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 17), 'u')
    # Applying the '~' unary operator (line 223)
    result_inv_463187 = python_operator(stypy.reporting.localization.Localization(__file__, 223, 16), '~', u_463186)
    
    # Assigning a type to the variable 'not_u' (line 223)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'not_u', result_inv_463187)
    
    # Assigning a UnaryOp to a Name (line 224):
    
    # Assigning a UnaryOp to a Name (line 224):
    
    # Getting the type of 'v' (line 224)
    v_463188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 17), 'v')
    # Applying the '~' unary operator (line 224)
    result_inv_463189 = python_operator(stypy.reporting.localization.Localization(__file__, 224, 16), '~', v_463188)
    
    # Assigning a type to the variable 'not_v' (line 224)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'not_v', result_inv_463189)
    
    # Assigning a Call to a Name (line 225):
    
    # Assigning a Call to a Name (line 225):
    
    # Call to sum(...): (line 225)
    # Processing the call keyword arguments (line 225)
    kwargs_463194 = {}
    # Getting the type of 'not_u' (line 225)
    not_u_463190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 15), 'not_u', False)
    # Getting the type of 'v' (line 225)
    v_463191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 23), 'v', False)
    # Applying the binary operator '&' (line 225)
    result_and__463192 = python_operator(stypy.reporting.localization.Localization(__file__, 225, 15), '&', not_u_463190, v_463191)
    
    # Obtaining the member 'sum' of a type (line 225)
    sum_463193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 15), result_and__463192, 'sum')
    # Calling sum(args, kwargs) (line 225)
    sum_call_result_463195 = invoke(stypy.reporting.localization.Localization(__file__, 225, 15), sum_463193, *[], **kwargs_463194)
    
    # Assigning a type to the variable 'nft' (line 225)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 8), 'nft', sum_call_result_463195)
    
    # Assigning a Call to a Name (line 226):
    
    # Assigning a Call to a Name (line 226):
    
    # Call to sum(...): (line 226)
    # Processing the call keyword arguments (line 226)
    kwargs_463200 = {}
    # Getting the type of 'u' (line 226)
    u_463196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 15), 'u', False)
    # Getting the type of 'not_v' (line 226)
    not_v_463197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 19), 'not_v', False)
    # Applying the binary operator '&' (line 226)
    result_and__463198 = python_operator(stypy.reporting.localization.Localization(__file__, 226, 15), '&', u_463196, not_v_463197)
    
    # Obtaining the member 'sum' of a type (line 226)
    sum_463199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 15), result_and__463198, 'sum')
    # Calling sum(args, kwargs) (line 226)
    sum_call_result_463201 = invoke(stypy.reporting.localization.Localization(__file__, 226, 15), sum_463199, *[], **kwargs_463200)
    
    # Assigning a type to the variable 'ntf' (line 226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 8), 'ntf', sum_call_result_463201)
    # SSA branch for the else part of an if statement (line 222)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 228):
    
    # Assigning a Call to a Name (line 228):
    
    # Call to find_common_type(...): (line 228)
    # Processing the call arguments (line 228)
    
    # Obtaining an instance of the builtin type 'list' (line 228)
    list_463204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 36), 'list')
    # Adding type elements to the builtin type 'list' instance (line 228)
    # Adding element type (line 228)
    # Getting the type of 'int' (line 228)
    int_463205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 37), 'int', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 228, 36), list_463204, int_463205)
    
    
    # Obtaining an instance of the builtin type 'list' (line 228)
    list_463206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 43), 'list')
    # Adding type elements to the builtin type 'list' instance (line 228)
    # Adding element type (line 228)
    # Getting the type of 'u' (line 228)
    u_463207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 44), 'u', False)
    # Obtaining the member 'dtype' of a type (line 228)
    dtype_463208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 44), u_463207, 'dtype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 228, 43), list_463206, dtype_463208)
    # Adding element type (line 228)
    # Getting the type of 'v' (line 228)
    v_463209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 53), 'v', False)
    # Obtaining the member 'dtype' of a type (line 228)
    dtype_463210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 53), v_463209, 'dtype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 228, 43), list_463206, dtype_463210)
    
    # Processing the call keyword arguments (line 228)
    kwargs_463211 = {}
    # Getting the type of 'np' (line 228)
    np_463202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 16), 'np', False)
    # Obtaining the member 'find_common_type' of a type (line 228)
    find_common_type_463203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 16), np_463202, 'find_common_type')
    # Calling find_common_type(args, kwargs) (line 228)
    find_common_type_call_result_463212 = invoke(stypy.reporting.localization.Localization(__file__, 228, 16), find_common_type_463203, *[list_463204, list_463206], **kwargs_463211)
    
    # Assigning a type to the variable 'dtype' (line 228)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 228, 8), 'dtype', find_common_type_call_result_463212)
    
    # Assigning a Call to a Name (line 229):
    
    # Assigning a Call to a Name (line 229):
    
    # Call to astype(...): (line 229)
    # Processing the call arguments (line 229)
    # Getting the type of 'dtype' (line 229)
    dtype_463215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 21), 'dtype', False)
    # Processing the call keyword arguments (line 229)
    kwargs_463216 = {}
    # Getting the type of 'u' (line 229)
    u_463213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 12), 'u', False)
    # Obtaining the member 'astype' of a type (line 229)
    astype_463214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 12), u_463213, 'astype')
    # Calling astype(args, kwargs) (line 229)
    astype_call_result_463217 = invoke(stypy.reporting.localization.Localization(__file__, 229, 12), astype_463214, *[dtype_463215], **kwargs_463216)
    
    # Assigning a type to the variable 'u' (line 229)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 8), 'u', astype_call_result_463217)
    
    # Assigning a Call to a Name (line 230):
    
    # Assigning a Call to a Name (line 230):
    
    # Call to astype(...): (line 230)
    # Processing the call arguments (line 230)
    # Getting the type of 'dtype' (line 230)
    dtype_463220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 21), 'dtype', False)
    # Processing the call keyword arguments (line 230)
    kwargs_463221 = {}
    # Getting the type of 'v' (line 230)
    v_463218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 12), 'v', False)
    # Obtaining the member 'astype' of a type (line 230)
    astype_463219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 12), v_463218, 'astype')
    # Calling astype(args, kwargs) (line 230)
    astype_call_result_463222 = invoke(stypy.reporting.localization.Localization(__file__, 230, 12), astype_463219, *[dtype_463220], **kwargs_463221)
    
    # Assigning a type to the variable 'v' (line 230)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 230, 8), 'v', astype_call_result_463222)
    
    # Assigning a BinOp to a Name (line 231):
    
    # Assigning a BinOp to a Name (line 231):
    float_463223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 16), 'float')
    # Getting the type of 'u' (line 231)
    u_463224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 22), 'u')
    # Applying the binary operator '-' (line 231)
    result_sub_463225 = python_operator(stypy.reporting.localization.Localization(__file__, 231, 16), '-', float_463223, u_463224)
    
    # Assigning a type to the variable 'not_u' (line 231)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 231, 8), 'not_u', result_sub_463225)
    
    # Assigning a BinOp to a Name (line 232):
    
    # Assigning a BinOp to a Name (line 232):
    float_463226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 16), 'float')
    # Getting the type of 'v' (line 232)
    v_463227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 22), 'v')
    # Applying the binary operator '-' (line 232)
    result_sub_463228 = python_operator(stypy.reporting.localization.Localization(__file__, 232, 16), '-', float_463226, v_463227)
    
    # Assigning a type to the variable 'not_v' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'not_v', result_sub_463228)
    
    # Type idiom detected: calculating its left and rigth part (line 233)
    # Getting the type of 'w' (line 233)
    w_463229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'w')
    # Getting the type of 'None' (line 233)
    None_463230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 20), 'None')
    
    (may_be_463231, more_types_in_union_463232) = may_not_be_none(w_463229, None_463230)

    if may_be_463231:

        if more_types_in_union_463232:
            # Runtime conditional SSA (line 233)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a BinOp to a Name (line 234):
        
        # Assigning a BinOp to a Name (line 234):
        # Getting the type of 'w' (line 234)
        w_463233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 20), 'w')
        # Getting the type of 'not_u' (line 234)
        not_u_463234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 24), 'not_u')
        # Applying the binary operator '*' (line 234)
        result_mul_463235 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 20), '*', w_463233, not_u_463234)
        
        # Assigning a type to the variable 'not_u' (line 234)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 234, 12), 'not_u', result_mul_463235)
        
        # Assigning a BinOp to a Name (line 235):
        
        # Assigning a BinOp to a Name (line 235):
        # Getting the type of 'w' (line 235)
        w_463236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 16), 'w')
        # Getting the type of 'u' (line 235)
        u_463237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 20), 'u')
        # Applying the binary operator '*' (line 235)
        result_mul_463238 = python_operator(stypy.reporting.localization.Localization(__file__, 235, 16), '*', w_463236, u_463237)
        
        # Assigning a type to the variable 'u' (line 235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 12), 'u', result_mul_463238)

        if more_types_in_union_463232:
            # SSA join for if statement (line 233)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 236):
    
    # Assigning a Call to a Name (line 236):
    
    # Call to sum(...): (line 236)
    # Processing the call keyword arguments (line 236)
    kwargs_463243 = {}
    # Getting the type of 'not_u' (line 236)
    not_u_463239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 15), 'not_u', False)
    # Getting the type of 'v' (line 236)
    v_463240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 23), 'v', False)
    # Applying the binary operator '*' (line 236)
    result_mul_463241 = python_operator(stypy.reporting.localization.Localization(__file__, 236, 15), '*', not_u_463239, v_463240)
    
    # Obtaining the member 'sum' of a type (line 236)
    sum_463242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 15), result_mul_463241, 'sum')
    # Calling sum(args, kwargs) (line 236)
    sum_call_result_463244 = invoke(stypy.reporting.localization.Localization(__file__, 236, 15), sum_463242, *[], **kwargs_463243)
    
    # Assigning a type to the variable 'nft' (line 236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'nft', sum_call_result_463244)
    
    # Assigning a Call to a Name (line 237):
    
    # Assigning a Call to a Name (line 237):
    
    # Call to sum(...): (line 237)
    # Processing the call keyword arguments (line 237)
    kwargs_463249 = {}
    # Getting the type of 'u' (line 237)
    u_463245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 15), 'u', False)
    # Getting the type of 'not_v' (line 237)
    not_v_463246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 19), 'not_v', False)
    # Applying the binary operator '*' (line 237)
    result_mul_463247 = python_operator(stypy.reporting.localization.Localization(__file__, 237, 15), '*', u_463245, not_v_463246)
    
    # Obtaining the member 'sum' of a type (line 237)
    sum_463248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 15), result_mul_463247, 'sum')
    # Calling sum(args, kwargs) (line 237)
    sum_call_result_463250 = invoke(stypy.reporting.localization.Localization(__file__, 237, 15), sum_463248, *[], **kwargs_463249)
    
    # Assigning a type to the variable 'ntf' (line 237)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'ntf', sum_call_result_463250)
    # SSA join for if statement (line 222)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 238)
    tuple_463251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 238)
    # Adding element type (line 238)
    # Getting the type of 'nft' (line 238)
    nft_463252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 12), 'nft')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 238, 12), tuple_463251, nft_463252)
    # Adding element type (line 238)
    # Getting the type of 'ntf' (line 238)
    ntf_463253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 17), 'ntf')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 238, 12), tuple_463251, ntf_463253)
    
    # Assigning a type to the variable 'stypy_return_type' (line 238)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 238, 4), 'stypy_return_type', tuple_463251)
    
    # ################# End of '_nbool_correspond_ft_tf(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_nbool_correspond_ft_tf' in the type store
    # Getting the type of 'stypy_return_type' (line 221)
    stypy_return_type_463254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463254)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_nbool_correspond_ft_tf'
    return stypy_return_type_463254

# Assigning a type to the variable '_nbool_correspond_ft_tf' (line 221)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 221, 0), '_nbool_correspond_ft_tf', _nbool_correspond_ft_tf)

@norecursion
def _validate_cdist_input(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_validate_cdist_input'
    module_type_store = module_type_store.open_function_context('_validate_cdist_input', 241, 0, False)
    
    # Passed parameters checking function
    _validate_cdist_input.stypy_localization = localization
    _validate_cdist_input.stypy_type_of_self = None
    _validate_cdist_input.stypy_type_store = module_type_store
    _validate_cdist_input.stypy_function_name = '_validate_cdist_input'
    _validate_cdist_input.stypy_param_names_list = ['XA', 'XB', 'mA', 'mB', 'n', 'metric_name']
    _validate_cdist_input.stypy_varargs_param_name = None
    _validate_cdist_input.stypy_kwargs_param_name = 'kwargs'
    _validate_cdist_input.stypy_call_defaults = defaults
    _validate_cdist_input.stypy_call_varargs = varargs
    _validate_cdist_input.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_validate_cdist_input', ['XA', 'XB', 'mA', 'mB', 'n', 'metric_name'], None, 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_validate_cdist_input', localization, ['XA', 'XB', 'mA', 'mB', 'n', 'metric_name'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_validate_cdist_input(...)' code ##################

    
    # Type idiom detected: calculating its left and rigth part (line 242)
    # Getting the type of 'metric_name' (line 242)
    metric_name_463255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 4), 'metric_name')
    # Getting the type of 'None' (line 242)
    None_463256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 26), 'None')
    
    (may_be_463257, more_types_in_union_463258) = may_not_be_none(metric_name_463255, None_463256)

    if may_be_463257:

        if more_types_in_union_463258:
            # Runtime conditional SSA (line 242)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Attribute to a Name (line 244):
        
        # Assigning a Attribute to a Name (line 244):
        
        # Obtaining the type of the subscript
        # Getting the type of 'metric_name' (line 244)
        metric_name_463259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 25), 'metric_name')
        # Getting the type of '_METRICS' (line 244)
        _METRICS_463260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 16), '_METRICS')
        # Obtaining the member '__getitem__' of a type (line 244)
        getitem___463261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 16), _METRICS_463260, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 244)
        subscript_call_result_463262 = invoke(stypy.reporting.localization.Localization(__file__, 244, 16), getitem___463261, metric_name_463259)
        
        # Obtaining the member 'types' of a type (line 244)
        types_463263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 16), subscript_call_result_463262, 'types')
        # Assigning a type to the variable 'types' (line 244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 8), 'types', types_463263)
        
        # Assigning a IfExp to a Name (line 246):
        
        # Assigning a IfExp to a Name (line 246):
        
        
        # Getting the type of 'XA' (line 246)
        XA_463264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 46), 'XA')
        # Obtaining the member 'dtype' of a type (line 246)
        dtype_463265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 46), XA_463264, 'dtype')
        # Getting the type of 'types' (line 246)
        types_463266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 58), 'types')
        # Applying the binary operator 'in' (line 246)
        result_contains_463267 = python_operator(stypy.reporting.localization.Localization(__file__, 246, 46), 'in', dtype_463265, types_463266)
        
        # Testing the type of an if expression (line 246)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 246, 14), result_contains_463267)
        # SSA begins for if expression (line 246)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Obtaining the type of the subscript
        
        # Call to index(...): (line 246)
        # Processing the call arguments (line 246)
        # Getting the type of 'XA' (line 246)
        XA_463270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 32), 'XA', False)
        # Obtaining the member 'dtype' of a type (line 246)
        dtype_463271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 32), XA_463270, 'dtype')
        # Processing the call keyword arguments (line 246)
        kwargs_463272 = {}
        # Getting the type of 'types' (line 246)
        types_463268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 20), 'types', False)
        # Obtaining the member 'index' of a type (line 246)
        index_463269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 20), types_463268, 'index')
        # Calling index(args, kwargs) (line 246)
        index_call_result_463273 = invoke(stypy.reporting.localization.Localization(__file__, 246, 20), index_463269, *[dtype_463271], **kwargs_463272)
        
        # Getting the type of 'types' (line 246)
        types_463274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 14), 'types')
        # Obtaining the member '__getitem__' of a type (line 246)
        getitem___463275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 14), types_463274, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 246)
        subscript_call_result_463276 = invoke(stypy.reporting.localization.Localization(__file__, 246, 14), getitem___463275, index_call_result_463273)
        
        # SSA branch for the else part of an if expression (line 246)
        module_type_store.open_ssa_branch('if expression else')
        
        # Obtaining the type of the subscript
        int_463277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 75), 'int')
        # Getting the type of 'types' (line 246)
        types_463278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 69), 'types')
        # Obtaining the member '__getitem__' of a type (line 246)
        getitem___463279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 69), types_463278, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 246)
        subscript_call_result_463280 = invoke(stypy.reporting.localization.Localization(__file__, 246, 69), getitem___463279, int_463277)
        
        # SSA join for if expression (line 246)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_463281 = union_type.UnionType.add(subscript_call_result_463276, subscript_call_result_463280)
        
        # Assigning a type to the variable 'typ' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 8), 'typ', if_exp_463281)
        
        # Assigning a Call to a Name (line 248):
        
        # Assigning a Call to a Name (line 248):
        
        # Call to _convert_to_type(...): (line 248)
        # Processing the call arguments (line 248)
        # Getting the type of 'XA' (line 248)
        XA_463283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 30), 'XA', False)
        # Processing the call keyword arguments (line 248)
        # Getting the type of 'typ' (line 248)
        typ_463284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 43), 'typ', False)
        keyword_463285 = typ_463284
        kwargs_463286 = {'out_type': keyword_463285}
        # Getting the type of '_convert_to_type' (line 248)
        _convert_to_type_463282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 13), '_convert_to_type', False)
        # Calling _convert_to_type(args, kwargs) (line 248)
        _convert_to_type_call_result_463287 = invoke(stypy.reporting.localization.Localization(__file__, 248, 13), _convert_to_type_463282, *[XA_463283], **kwargs_463286)
        
        # Assigning a type to the variable 'XA' (line 248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 8), 'XA', _convert_to_type_call_result_463287)
        
        # Assigning a Call to a Name (line 249):
        
        # Assigning a Call to a Name (line 249):
        
        # Call to _convert_to_type(...): (line 249)
        # Processing the call arguments (line 249)
        # Getting the type of 'XB' (line 249)
        XB_463289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 30), 'XB', False)
        # Processing the call keyword arguments (line 249)
        # Getting the type of 'typ' (line 249)
        typ_463290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 43), 'typ', False)
        keyword_463291 = typ_463290
        kwargs_463292 = {'out_type': keyword_463291}
        # Getting the type of '_convert_to_type' (line 249)
        _convert_to_type_463288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 13), '_convert_to_type', False)
        # Calling _convert_to_type(args, kwargs) (line 249)
        _convert_to_type_call_result_463293 = invoke(stypy.reporting.localization.Localization(__file__, 249, 13), _convert_to_type_463288, *[XB_463289], **kwargs_463292)
        
        # Assigning a type to the variable 'XB' (line 249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 8), 'XB', _convert_to_type_call_result_463293)
        
        # Assigning a Attribute to a Name (line 252):
        
        # Assigning a Attribute to a Name (line 252):
        
        # Obtaining the type of the subscript
        # Getting the type of 'metric_name' (line 252)
        metric_name_463294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 36), 'metric_name')
        # Getting the type of '_METRICS' (line 252)
        _METRICS_463295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 27), '_METRICS')
        # Obtaining the member '__getitem__' of a type (line 252)
        getitem___463296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 27), _METRICS_463295, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 252)
        subscript_call_result_463297 = invoke(stypy.reporting.localization.Localization(__file__, 252, 27), getitem___463296, metric_name_463294)
        
        # Obtaining the member 'validator' of a type (line 252)
        validator_463298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 27), subscript_call_result_463297, 'validator')
        # Assigning a type to the variable '_validate_kwargs' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 8), '_validate_kwargs', validator_463298)
        
        # Getting the type of '_validate_kwargs' (line 253)
        _validate_kwargs_463299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 11), '_validate_kwargs')
        # Testing the type of an if condition (line 253)
        if_condition_463300 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 253, 8), _validate_kwargs_463299)
        # Assigning a type to the variable 'if_condition_463300' (line 253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 253, 8), 'if_condition_463300', if_condition_463300)
        # SSA begins for if statement (line 253)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 254):
        
        # Assigning a Call to a Name (line 254):
        
        # Call to _validate_kwargs(...): (line 254)
        # Processing the call arguments (line 254)
        
        # Call to vstack(...): (line 254)
        # Processing the call arguments (line 254)
        
        # Obtaining an instance of the builtin type 'list' (line 254)
        list_463304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 254)
        # Adding element type (line 254)
        # Getting the type of 'XA' (line 254)
        XA_463305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 49), 'XA', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 48), list_463304, XA_463305)
        # Adding element type (line 254)
        # Getting the type of 'XB' (line 254)
        XB_463306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 53), 'XB', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 48), list_463304, XB_463306)
        
        # Processing the call keyword arguments (line 254)
        kwargs_463307 = {}
        # Getting the type of 'np' (line 254)
        np_463302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 38), 'np', False)
        # Obtaining the member 'vstack' of a type (line 254)
        vstack_463303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 38), np_463302, 'vstack')
        # Calling vstack(args, kwargs) (line 254)
        vstack_call_result_463308 = invoke(stypy.reporting.localization.Localization(__file__, 254, 38), vstack_463303, *[list_463304], **kwargs_463307)
        
        # Getting the type of 'mA' (line 254)
        mA_463309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 59), 'mA', False)
        # Getting the type of 'mB' (line 254)
        mB_463310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 64), 'mB', False)
        # Applying the binary operator '+' (line 254)
        result_add_463311 = python_operator(stypy.reporting.localization.Localization(__file__, 254, 59), '+', mA_463309, mB_463310)
        
        # Getting the type of 'n' (line 254)
        n_463312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 68), 'n', False)
        # Processing the call keyword arguments (line 254)
        # Getting the type of 'kwargs' (line 254)
        kwargs_463313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 73), 'kwargs', False)
        kwargs_463314 = {'kwargs_463313': kwargs_463313}
        # Getting the type of '_validate_kwargs' (line 254)
        _validate_kwargs_463301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 21), '_validate_kwargs', False)
        # Calling _validate_kwargs(args, kwargs) (line 254)
        _validate_kwargs_call_result_463315 = invoke(stypy.reporting.localization.Localization(__file__, 254, 21), _validate_kwargs_463301, *[vstack_call_result_463308, result_add_463311, n_463312], **kwargs_463314)
        
        # Assigning a type to the variable 'kwargs' (line 254)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'kwargs', _validate_kwargs_call_result_463315)
        # SSA join for if statement (line 253)
        module_type_store = module_type_store.join_ssa_context()
        

        if more_types_in_union_463258:
            # Runtime conditional SSA for else branch (line 242)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_463257) or more_types_in_union_463258):
        
        # Assigning a Name to a Name (line 256):
        
        # Assigning a Name to a Name (line 256):
        # Getting the type of 'None' (line 256)
        None_463316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 14), 'None')
        # Assigning a type to the variable 'typ' (line 256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'typ', None_463316)

        if (may_be_463257 and more_types_in_union_463258):
            # SSA join for if statement (line 242)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Obtaining an instance of the builtin type 'tuple' (line 257)
    tuple_463317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 257)
    # Adding element type (line 257)
    # Getting the type of 'XA' (line 257)
    XA_463318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 11), 'XA')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 11), tuple_463317, XA_463318)
    # Adding element type (line 257)
    # Getting the type of 'XB' (line 257)
    XB_463319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 15), 'XB')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 11), tuple_463317, XB_463319)
    # Adding element type (line 257)
    # Getting the type of 'typ' (line 257)
    typ_463320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 19), 'typ')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 11), tuple_463317, typ_463320)
    # Adding element type (line 257)
    # Getting the type of 'kwargs' (line 257)
    kwargs_463321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 24), 'kwargs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 11), tuple_463317, kwargs_463321)
    
    # Assigning a type to the variable 'stypy_return_type' (line 257)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 257, 4), 'stypy_return_type', tuple_463317)
    
    # ################# End of '_validate_cdist_input(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_validate_cdist_input' in the type store
    # Getting the type of 'stypy_return_type' (line 241)
    stypy_return_type_463322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463322)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_validate_cdist_input'
    return stypy_return_type_463322

# Assigning a type to the variable '_validate_cdist_input' (line 241)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 0), '_validate_cdist_input', _validate_cdist_input)

@norecursion
def _validate_mahalanobis_kwargs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_validate_mahalanobis_kwargs'
    module_type_store = module_type_store.open_function_context('_validate_mahalanobis_kwargs', 260, 0, False)
    
    # Passed parameters checking function
    _validate_mahalanobis_kwargs.stypy_localization = localization
    _validate_mahalanobis_kwargs.stypy_type_of_self = None
    _validate_mahalanobis_kwargs.stypy_type_store = module_type_store
    _validate_mahalanobis_kwargs.stypy_function_name = '_validate_mahalanobis_kwargs'
    _validate_mahalanobis_kwargs.stypy_param_names_list = ['X', 'm', 'n']
    _validate_mahalanobis_kwargs.stypy_varargs_param_name = None
    _validate_mahalanobis_kwargs.stypy_kwargs_param_name = 'kwargs'
    _validate_mahalanobis_kwargs.stypy_call_defaults = defaults
    _validate_mahalanobis_kwargs.stypy_call_varargs = varargs
    _validate_mahalanobis_kwargs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_validate_mahalanobis_kwargs', ['X', 'm', 'n'], None, 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_validate_mahalanobis_kwargs', localization, ['X', 'm', 'n'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_validate_mahalanobis_kwargs(...)' code ##################

    
    # Assigning a Call to a Name (line 261):
    
    # Assigning a Call to a Name (line 261):
    
    # Call to pop(...): (line 261)
    # Processing the call arguments (line 261)
    str_463325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 20), 'str', 'VI')
    # Getting the type of 'None' (line 261)
    None_463326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 26), 'None', False)
    # Processing the call keyword arguments (line 261)
    kwargs_463327 = {}
    # Getting the type of 'kwargs' (line 261)
    kwargs_463323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 9), 'kwargs', False)
    # Obtaining the member 'pop' of a type (line 261)
    pop_463324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 9), kwargs_463323, 'pop')
    # Calling pop(args, kwargs) (line 261)
    pop_call_result_463328 = invoke(stypy.reporting.localization.Localization(__file__, 261, 9), pop_463324, *[str_463325, None_463326], **kwargs_463327)
    
    # Assigning a type to the variable 'VI' (line 261)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 4), 'VI', pop_call_result_463328)
    
    # Type idiom detected: calculating its left and rigth part (line 262)
    # Getting the type of 'VI' (line 262)
    VI_463329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 7), 'VI')
    # Getting the type of 'None' (line 262)
    None_463330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 13), 'None')
    
    (may_be_463331, more_types_in_union_463332) = may_be_none(VI_463329, None_463330)

    if may_be_463331:

        if more_types_in_union_463332:
            # Runtime conditional SSA (line 262)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        
        # Getting the type of 'm' (line 263)
        m_463333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 11), 'm')
        # Getting the type of 'n' (line 263)
        n_463334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 16), 'n')
        # Applying the binary operator '<=' (line 263)
        result_le_463335 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 11), '<=', m_463333, n_463334)
        
        # Testing the type of an if condition (line 263)
        if_condition_463336 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 8), result_le_463335)
        # Assigning a type to the variable 'if_condition_463336' (line 263)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 8), 'if_condition_463336', if_condition_463336)
        # SSA begins for if statement (line 263)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 266)
        # Processing the call arguments (line 266)
        str_463338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 29), 'str', 'The number of observations (%d) is too small; the covariance matrix is singular. For observations with %d dimensions, at least %d observations are required.')
        
        # Obtaining an instance of the builtin type 'tuple' (line 270)
        tuple_463339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 270)
        # Adding element type (line 270)
        # Getting the type of 'm' (line 270)
        m_463340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 48), 'm', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 48), tuple_463339, m_463340)
        # Adding element type (line 270)
        # Getting the type of 'n' (line 270)
        n_463341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 51), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 48), tuple_463339, n_463341)
        # Adding element type (line 270)
        # Getting the type of 'n' (line 270)
        n_463342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 54), 'n', False)
        int_463343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 58), 'int')
        # Applying the binary operator '+' (line 270)
        result_add_463344 = python_operator(stypy.reporting.localization.Localization(__file__, 270, 54), '+', n_463342, int_463343)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 48), tuple_463339, result_add_463344)
        
        # Applying the binary operator '%' (line 266)
        result_mod_463345 = python_operator(stypy.reporting.localization.Localization(__file__, 266, 29), '%', str_463338, tuple_463339)
        
        # Processing the call keyword arguments (line 266)
        kwargs_463346 = {}
        # Getting the type of 'ValueError' (line 266)
        ValueError_463337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 266)
        ValueError_call_result_463347 = invoke(stypy.reporting.localization.Localization(__file__, 266, 18), ValueError_463337, *[result_mod_463345], **kwargs_463346)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 266, 12), ValueError_call_result_463347, 'raise parameter', BaseException)
        # SSA join for if statement (line 263)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 271):
        
        # Assigning a Call to a Name (line 271):
        
        # Call to atleast_2d(...): (line 271)
        # Processing the call arguments (line 271)
        
        # Call to cov(...): (line 271)
        # Processing the call arguments (line 271)
        
        # Call to astype(...): (line 271)
        # Processing the call arguments (line 271)
        # Getting the type of 'np' (line 271)
        np_463354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 43), 'np', False)
        # Obtaining the member 'double' of a type (line 271)
        double_463355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 43), np_463354, 'double')
        # Processing the call keyword arguments (line 271)
        kwargs_463356 = {}
        # Getting the type of 'X' (line 271)
        X_463352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 34), 'X', False)
        # Obtaining the member 'astype' of a type (line 271)
        astype_463353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 34), X_463352, 'astype')
        # Calling astype(args, kwargs) (line 271)
        astype_call_result_463357 = invoke(stypy.reporting.localization.Localization(__file__, 271, 34), astype_463353, *[double_463355], **kwargs_463356)
        
        # Obtaining the member 'T' of a type (line 271)
        T_463358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 34), astype_call_result_463357, 'T')
        # Processing the call keyword arguments (line 271)
        kwargs_463359 = {}
        # Getting the type of 'np' (line 271)
        np_463350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 27), 'np', False)
        # Obtaining the member 'cov' of a type (line 271)
        cov_463351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 27), np_463350, 'cov')
        # Calling cov(args, kwargs) (line 271)
        cov_call_result_463360 = invoke(stypy.reporting.localization.Localization(__file__, 271, 27), cov_463351, *[T_463358], **kwargs_463359)
        
        # Processing the call keyword arguments (line 271)
        kwargs_463361 = {}
        # Getting the type of 'np' (line 271)
        np_463348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 13), 'np', False)
        # Obtaining the member 'atleast_2d' of a type (line 271)
        atleast_2d_463349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 13), np_463348, 'atleast_2d')
        # Calling atleast_2d(args, kwargs) (line 271)
        atleast_2d_call_result_463362 = invoke(stypy.reporting.localization.Localization(__file__, 271, 13), atleast_2d_463349, *[cov_call_result_463360], **kwargs_463361)
        
        # Assigning a type to the variable 'CV' (line 271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 8), 'CV', atleast_2d_call_result_463362)
        
        # Assigning a Call to a Name (line 272):
        
        # Assigning a Call to a Name (line 272):
        
        # Call to copy(...): (line 272)
        # Processing the call keyword arguments (line 272)
        kwargs_463371 = {}
        
        # Call to inv(...): (line 272)
        # Processing the call arguments (line 272)
        # Getting the type of 'CV' (line 272)
        CV_463366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 27), 'CV', False)
        # Processing the call keyword arguments (line 272)
        kwargs_463367 = {}
        # Getting the type of 'np' (line 272)
        np_463363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 13), 'np', False)
        # Obtaining the member 'linalg' of a type (line 272)
        linalg_463364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 13), np_463363, 'linalg')
        # Obtaining the member 'inv' of a type (line 272)
        inv_463365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 13), linalg_463364, 'inv')
        # Calling inv(args, kwargs) (line 272)
        inv_call_result_463368 = invoke(stypy.reporting.localization.Localization(__file__, 272, 13), inv_463365, *[CV_463366], **kwargs_463367)
        
        # Obtaining the member 'T' of a type (line 272)
        T_463369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 13), inv_call_result_463368, 'T')
        # Obtaining the member 'copy' of a type (line 272)
        copy_463370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 13), T_463369, 'copy')
        # Calling copy(args, kwargs) (line 272)
        copy_call_result_463372 = invoke(stypy.reporting.localization.Localization(__file__, 272, 13), copy_463370, *[], **kwargs_463371)
        
        # Assigning a type to the variable 'VI' (line 272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 272, 8), 'VI', copy_call_result_463372)

        if more_types_in_union_463332:
            # SSA join for if statement (line 262)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Subscript (line 273):
    
    # Assigning a Call to a Subscript (line 273):
    
    # Call to _copy_array_if_base_present(...): (line 273)
    # Processing the call arguments (line 273)
    
    # Call to _convert_to_double(...): (line 273)
    # Processing the call arguments (line 273)
    # Getting the type of 'VI' (line 273)
    VI_463375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 66), 'VI', False)
    # Processing the call keyword arguments (line 273)
    kwargs_463376 = {}
    # Getting the type of '_convert_to_double' (line 273)
    _convert_to_double_463374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 47), '_convert_to_double', False)
    # Calling _convert_to_double(args, kwargs) (line 273)
    _convert_to_double_call_result_463377 = invoke(stypy.reporting.localization.Localization(__file__, 273, 47), _convert_to_double_463374, *[VI_463375], **kwargs_463376)
    
    # Processing the call keyword arguments (line 273)
    kwargs_463378 = {}
    # Getting the type of '_copy_array_if_base_present' (line 273)
    _copy_array_if_base_present_463373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 19), '_copy_array_if_base_present', False)
    # Calling _copy_array_if_base_present(args, kwargs) (line 273)
    _copy_array_if_base_present_call_result_463379 = invoke(stypy.reporting.localization.Localization(__file__, 273, 19), _copy_array_if_base_present_463373, *[_convert_to_double_call_result_463377], **kwargs_463378)
    
    # Getting the type of 'kwargs' (line 273)
    kwargs_463380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 4), 'kwargs')
    str_463381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 11), 'str', 'VI')
    # Storing an element on a container (line 273)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 273, 4), kwargs_463380, (str_463381, _copy_array_if_base_present_call_result_463379))
    # Getting the type of 'kwargs' (line 274)
    kwargs_463382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 11), 'kwargs')
    # Assigning a type to the variable 'stypy_return_type' (line 274)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 4), 'stypy_return_type', kwargs_463382)
    
    # ################# End of '_validate_mahalanobis_kwargs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_validate_mahalanobis_kwargs' in the type store
    # Getting the type of 'stypy_return_type' (line 260)
    stypy_return_type_463383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463383)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_validate_mahalanobis_kwargs'
    return stypy_return_type_463383

# Assigning a type to the variable '_validate_mahalanobis_kwargs' (line 260)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 0), '_validate_mahalanobis_kwargs', _validate_mahalanobis_kwargs)

@norecursion
def _validate_minkowski_kwargs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_validate_minkowski_kwargs'
    module_type_store = module_type_store.open_function_context('_validate_minkowski_kwargs', 277, 0, False)
    
    # Passed parameters checking function
    _validate_minkowski_kwargs.stypy_localization = localization
    _validate_minkowski_kwargs.stypy_type_of_self = None
    _validate_minkowski_kwargs.stypy_type_store = module_type_store
    _validate_minkowski_kwargs.stypy_function_name = '_validate_minkowski_kwargs'
    _validate_minkowski_kwargs.stypy_param_names_list = ['X', 'm', 'n']
    _validate_minkowski_kwargs.stypy_varargs_param_name = None
    _validate_minkowski_kwargs.stypy_kwargs_param_name = 'kwargs'
    _validate_minkowski_kwargs.stypy_call_defaults = defaults
    _validate_minkowski_kwargs.stypy_call_varargs = varargs
    _validate_minkowski_kwargs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_validate_minkowski_kwargs', ['X', 'm', 'n'], None, 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_validate_minkowski_kwargs', localization, ['X', 'm', 'n'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_validate_minkowski_kwargs(...)' code ##################

    
    
    str_463384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 7), 'str', 'w')
    # Getting the type of 'kwargs' (line 278)
    kwargs_463385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 14), 'kwargs')
    # Applying the binary operator 'in' (line 278)
    result_contains_463386 = python_operator(stypy.reporting.localization.Localization(__file__, 278, 7), 'in', str_463384, kwargs_463385)
    
    # Testing the type of an if condition (line 278)
    if_condition_463387 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 278, 4), result_contains_463386)
    # Assigning a type to the variable 'if_condition_463387' (line 278)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 4), 'if_condition_463387', if_condition_463387)
    # SSA begins for if statement (line 278)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Subscript (line 279):
    
    # Assigning a Call to a Subscript (line 279):
    
    # Call to _convert_to_double(...): (line 279)
    # Processing the call arguments (line 279)
    
    # Obtaining the type of the subscript
    str_463389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 48), 'str', 'w')
    # Getting the type of 'kwargs' (line 279)
    kwargs_463390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 41), 'kwargs', False)
    # Obtaining the member '__getitem__' of a type (line 279)
    getitem___463391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 41), kwargs_463390, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 279)
    subscript_call_result_463392 = invoke(stypy.reporting.localization.Localization(__file__, 279, 41), getitem___463391, str_463389)
    
    # Processing the call keyword arguments (line 279)
    kwargs_463393 = {}
    # Getting the type of '_convert_to_double' (line 279)
    _convert_to_double_463388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 22), '_convert_to_double', False)
    # Calling _convert_to_double(args, kwargs) (line 279)
    _convert_to_double_call_result_463394 = invoke(stypy.reporting.localization.Localization(__file__, 279, 22), _convert_to_double_463388, *[subscript_call_result_463392], **kwargs_463393)
    
    # Getting the type of 'kwargs' (line 279)
    kwargs_463395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'kwargs')
    str_463396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 15), 'str', 'w')
    # Storing an element on a container (line 279)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 8), kwargs_463395, (str_463396, _convert_to_double_call_result_463394))
    # SSA join for if statement (line 278)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    str_463397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 7), 'str', 'p')
    # Getting the type of 'kwargs' (line 280)
    kwargs_463398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 18), 'kwargs')
    # Applying the binary operator 'notin' (line 280)
    result_contains_463399 = python_operator(stypy.reporting.localization.Localization(__file__, 280, 7), 'notin', str_463397, kwargs_463398)
    
    # Testing the type of an if condition (line 280)
    if_condition_463400 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 280, 4), result_contains_463399)
    # Assigning a type to the variable 'if_condition_463400' (line 280)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 280, 4), 'if_condition_463400', if_condition_463400)
    # SSA begins for if statement (line 280)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Subscript (line 281):
    
    # Assigning a Num to a Subscript (line 281):
    float_463401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 281, 22), 'float')
    # Getting the type of 'kwargs' (line 281)
    kwargs_463402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'kwargs')
    str_463403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 281, 15), 'str', 'p')
    # Storing an element on a container (line 281)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 281, 8), kwargs_463402, (str_463403, float_463401))
    # SSA join for if statement (line 280)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'kwargs' (line 282)
    kwargs_463404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 11), 'kwargs')
    # Assigning a type to the variable 'stypy_return_type' (line 282)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 4), 'stypy_return_type', kwargs_463404)
    
    # ################# End of '_validate_minkowski_kwargs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_validate_minkowski_kwargs' in the type store
    # Getting the type of 'stypy_return_type' (line 277)
    stypy_return_type_463405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463405)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_validate_minkowski_kwargs'
    return stypy_return_type_463405

# Assigning a type to the variable '_validate_minkowski_kwargs' (line 277)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 0), '_validate_minkowski_kwargs', _validate_minkowski_kwargs)

@norecursion
def _validate_pdist_input(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_validate_pdist_input'
    module_type_store = module_type_store.open_function_context('_validate_pdist_input', 285, 0, False)
    
    # Passed parameters checking function
    _validate_pdist_input.stypy_localization = localization
    _validate_pdist_input.stypy_type_of_self = None
    _validate_pdist_input.stypy_type_store = module_type_store
    _validate_pdist_input.stypy_function_name = '_validate_pdist_input'
    _validate_pdist_input.stypy_param_names_list = ['X', 'm', 'n', 'metric_name']
    _validate_pdist_input.stypy_varargs_param_name = None
    _validate_pdist_input.stypy_kwargs_param_name = 'kwargs'
    _validate_pdist_input.stypy_call_defaults = defaults
    _validate_pdist_input.stypy_call_varargs = varargs
    _validate_pdist_input.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_validate_pdist_input', ['X', 'm', 'n', 'metric_name'], None, 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_validate_pdist_input', localization, ['X', 'm', 'n', 'metric_name'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_validate_pdist_input(...)' code ##################

    
    # Type idiom detected: calculating its left and rigth part (line 286)
    # Getting the type of 'metric_name' (line 286)
    metric_name_463406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 4), 'metric_name')
    # Getting the type of 'None' (line 286)
    None_463407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 26), 'None')
    
    (may_be_463408, more_types_in_union_463409) = may_not_be_none(metric_name_463406, None_463407)

    if may_be_463408:

        if more_types_in_union_463409:
            # Runtime conditional SSA (line 286)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Attribute to a Name (line 288):
        
        # Assigning a Attribute to a Name (line 288):
        
        # Obtaining the type of the subscript
        # Getting the type of 'metric_name' (line 288)
        metric_name_463410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 25), 'metric_name')
        # Getting the type of '_METRICS' (line 288)
        _METRICS_463411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 16), '_METRICS')
        # Obtaining the member '__getitem__' of a type (line 288)
        getitem___463412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 16), _METRICS_463411, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 288)
        subscript_call_result_463413 = invoke(stypy.reporting.localization.Localization(__file__, 288, 16), getitem___463412, metric_name_463410)
        
        # Obtaining the member 'types' of a type (line 288)
        types_463414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 16), subscript_call_result_463413, 'types')
        # Assigning a type to the variable 'types' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'types', types_463414)
        
        # Assigning a IfExp to a Name (line 290):
        
        # Assigning a IfExp to a Name (line 290):
        
        
        # Getting the type of 'X' (line 290)
        X_463415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 45), 'X')
        # Obtaining the member 'dtype' of a type (line 290)
        dtype_463416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 45), X_463415, 'dtype')
        # Getting the type of 'types' (line 290)
        types_463417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 56), 'types')
        # Applying the binary operator 'in' (line 290)
        result_contains_463418 = python_operator(stypy.reporting.localization.Localization(__file__, 290, 45), 'in', dtype_463416, types_463417)
        
        # Testing the type of an if expression (line 290)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 290, 14), result_contains_463418)
        # SSA begins for if expression (line 290)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Obtaining the type of the subscript
        
        # Call to index(...): (line 290)
        # Processing the call arguments (line 290)
        # Getting the type of 'X' (line 290)
        X_463421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 32), 'X', False)
        # Obtaining the member 'dtype' of a type (line 290)
        dtype_463422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 32), X_463421, 'dtype')
        # Processing the call keyword arguments (line 290)
        kwargs_463423 = {}
        # Getting the type of 'types' (line 290)
        types_463419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 20), 'types', False)
        # Obtaining the member 'index' of a type (line 290)
        index_463420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 20), types_463419, 'index')
        # Calling index(args, kwargs) (line 290)
        index_call_result_463424 = invoke(stypy.reporting.localization.Localization(__file__, 290, 20), index_463420, *[dtype_463422], **kwargs_463423)
        
        # Getting the type of 'types' (line 290)
        types_463425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 14), 'types')
        # Obtaining the member '__getitem__' of a type (line 290)
        getitem___463426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 14), types_463425, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 290)
        subscript_call_result_463427 = invoke(stypy.reporting.localization.Localization(__file__, 290, 14), getitem___463426, index_call_result_463424)
        
        # SSA branch for the else part of an if expression (line 290)
        module_type_store.open_ssa_branch('if expression else')
        
        # Obtaining the type of the subscript
        int_463428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 290, 73), 'int')
        # Getting the type of 'types' (line 290)
        types_463429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 67), 'types')
        # Obtaining the member '__getitem__' of a type (line 290)
        getitem___463430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 67), types_463429, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 290)
        subscript_call_result_463431 = invoke(stypy.reporting.localization.Localization(__file__, 290, 67), getitem___463430, int_463428)
        
        # SSA join for if expression (line 290)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_463432 = union_type.UnionType.add(subscript_call_result_463427, subscript_call_result_463431)
        
        # Assigning a type to the variable 'typ' (line 290)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 8), 'typ', if_exp_463432)
        
        # Assigning a Call to a Name (line 292):
        
        # Assigning a Call to a Name (line 292):
        
        # Call to _convert_to_type(...): (line 292)
        # Processing the call arguments (line 292)
        # Getting the type of 'X' (line 292)
        X_463434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 29), 'X', False)
        # Processing the call keyword arguments (line 292)
        # Getting the type of 'typ' (line 292)
        typ_463435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 41), 'typ', False)
        keyword_463436 = typ_463435
        kwargs_463437 = {'out_type': keyword_463436}
        # Getting the type of '_convert_to_type' (line 292)
        _convert_to_type_463433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 12), '_convert_to_type', False)
        # Calling _convert_to_type(args, kwargs) (line 292)
        _convert_to_type_call_result_463438 = invoke(stypy.reporting.localization.Localization(__file__, 292, 12), _convert_to_type_463433, *[X_463434], **kwargs_463437)
        
        # Assigning a type to the variable 'X' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'X', _convert_to_type_call_result_463438)
        
        # Assigning a Attribute to a Name (line 295):
        
        # Assigning a Attribute to a Name (line 295):
        
        # Obtaining the type of the subscript
        # Getting the type of 'metric_name' (line 295)
        metric_name_463439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 36), 'metric_name')
        # Getting the type of '_METRICS' (line 295)
        _METRICS_463440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 27), '_METRICS')
        # Obtaining the member '__getitem__' of a type (line 295)
        getitem___463441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 295, 27), _METRICS_463440, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 295)
        subscript_call_result_463442 = invoke(stypy.reporting.localization.Localization(__file__, 295, 27), getitem___463441, metric_name_463439)
        
        # Obtaining the member 'validator' of a type (line 295)
        validator_463443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 295, 27), subscript_call_result_463442, 'validator')
        # Assigning a type to the variable '_validate_kwargs' (line 295)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 295, 8), '_validate_kwargs', validator_463443)
        
        # Getting the type of '_validate_kwargs' (line 296)
        _validate_kwargs_463444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 11), '_validate_kwargs')
        # Testing the type of an if condition (line 296)
        if_condition_463445 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 296, 8), _validate_kwargs_463444)
        # Assigning a type to the variable 'if_condition_463445' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'if_condition_463445', if_condition_463445)
        # SSA begins for if statement (line 296)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 297):
        
        # Assigning a Call to a Name (line 297):
        
        # Call to _validate_kwargs(...): (line 297)
        # Processing the call arguments (line 297)
        # Getting the type of 'X' (line 297)
        X_463447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 38), 'X', False)
        # Getting the type of 'm' (line 297)
        m_463448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 41), 'm', False)
        # Getting the type of 'n' (line 297)
        n_463449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 44), 'n', False)
        # Processing the call keyword arguments (line 297)
        # Getting the type of 'kwargs' (line 297)
        kwargs_463450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 49), 'kwargs', False)
        kwargs_463451 = {'kwargs_463450': kwargs_463450}
        # Getting the type of '_validate_kwargs' (line 297)
        _validate_kwargs_463446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 21), '_validate_kwargs', False)
        # Calling _validate_kwargs(args, kwargs) (line 297)
        _validate_kwargs_call_result_463452 = invoke(stypy.reporting.localization.Localization(__file__, 297, 21), _validate_kwargs_463446, *[X_463447, m_463448, n_463449], **kwargs_463451)
        
        # Assigning a type to the variable 'kwargs' (line 297)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 297, 12), 'kwargs', _validate_kwargs_call_result_463452)
        # SSA join for if statement (line 296)
        module_type_store = module_type_store.join_ssa_context()
        

        if more_types_in_union_463409:
            # Runtime conditional SSA for else branch (line 286)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_463408) or more_types_in_union_463409):
        
        # Assigning a Name to a Name (line 299):
        
        # Assigning a Name to a Name (line 299):
        # Getting the type of 'None' (line 299)
        None_463453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 14), 'None')
        # Assigning a type to the variable 'typ' (line 299)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 8), 'typ', None_463453)

        if (may_be_463408 and more_types_in_union_463409):
            # SSA join for if statement (line 286)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Obtaining an instance of the builtin type 'tuple' (line 300)
    tuple_463454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 300)
    # Adding element type (line 300)
    # Getting the type of 'X' (line 300)
    X_463455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 11), 'X')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 11), tuple_463454, X_463455)
    # Adding element type (line 300)
    # Getting the type of 'typ' (line 300)
    typ_463456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 14), 'typ')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 11), tuple_463454, typ_463456)
    # Adding element type (line 300)
    # Getting the type of 'kwargs' (line 300)
    kwargs_463457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 19), 'kwargs')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 11), tuple_463454, kwargs_463457)
    
    # Assigning a type to the variable 'stypy_return_type' (line 300)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 4), 'stypy_return_type', tuple_463454)
    
    # ################# End of '_validate_pdist_input(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_validate_pdist_input' in the type store
    # Getting the type of 'stypy_return_type' (line 285)
    stypy_return_type_463458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463458)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_validate_pdist_input'
    return stypy_return_type_463458

# Assigning a type to the variable '_validate_pdist_input' (line 285)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 0), '_validate_pdist_input', _validate_pdist_input)

@norecursion
def _validate_seuclidean_kwargs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_validate_seuclidean_kwargs'
    module_type_store = module_type_store.open_function_context('_validate_seuclidean_kwargs', 303, 0, False)
    
    # Passed parameters checking function
    _validate_seuclidean_kwargs.stypy_localization = localization
    _validate_seuclidean_kwargs.stypy_type_of_self = None
    _validate_seuclidean_kwargs.stypy_type_store = module_type_store
    _validate_seuclidean_kwargs.stypy_function_name = '_validate_seuclidean_kwargs'
    _validate_seuclidean_kwargs.stypy_param_names_list = ['X', 'm', 'n']
    _validate_seuclidean_kwargs.stypy_varargs_param_name = None
    _validate_seuclidean_kwargs.stypy_kwargs_param_name = 'kwargs'
    _validate_seuclidean_kwargs.stypy_call_defaults = defaults
    _validate_seuclidean_kwargs.stypy_call_varargs = varargs
    _validate_seuclidean_kwargs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_validate_seuclidean_kwargs', ['X', 'm', 'n'], None, 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_validate_seuclidean_kwargs', localization, ['X', 'm', 'n'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_validate_seuclidean_kwargs(...)' code ##################

    
    # Assigning a Call to a Name (line 304):
    
    # Assigning a Call to a Name (line 304):
    
    # Call to pop(...): (line 304)
    # Processing the call arguments (line 304)
    str_463461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, 19), 'str', 'V')
    # Getting the type of 'None' (line 304)
    None_463462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 24), 'None', False)
    # Processing the call keyword arguments (line 304)
    kwargs_463463 = {}
    # Getting the type of 'kwargs' (line 304)
    kwargs_463459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 8), 'kwargs', False)
    # Obtaining the member 'pop' of a type (line 304)
    pop_463460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 8), kwargs_463459, 'pop')
    # Calling pop(args, kwargs) (line 304)
    pop_call_result_463464 = invoke(stypy.reporting.localization.Localization(__file__, 304, 8), pop_463460, *[str_463461, None_463462], **kwargs_463463)
    
    # Assigning a type to the variable 'V' (line 304)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 304, 4), 'V', pop_call_result_463464)
    
    # Type idiom detected: calculating its left and rigth part (line 305)
    # Getting the type of 'V' (line 305)
    V_463465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 7), 'V')
    # Getting the type of 'None' (line 305)
    None_463466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 12), 'None')
    
    (may_be_463467, more_types_in_union_463468) = may_be_none(V_463465, None_463466)

    if may_be_463467:

        if more_types_in_union_463468:
            # Runtime conditional SSA (line 305)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 306):
        
        # Assigning a Call to a Name (line 306):
        
        # Call to var(...): (line 306)
        # Processing the call arguments (line 306)
        
        # Call to astype(...): (line 306)
        # Processing the call arguments (line 306)
        # Getting the type of 'np' (line 306)
        np_463473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 28), 'np', False)
        # Obtaining the member 'double' of a type (line 306)
        double_463474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 28), np_463473, 'double')
        # Processing the call keyword arguments (line 306)
        kwargs_463475 = {}
        # Getting the type of 'X' (line 306)
        X_463471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 19), 'X', False)
        # Obtaining the member 'astype' of a type (line 306)
        astype_463472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 19), X_463471, 'astype')
        # Calling astype(args, kwargs) (line 306)
        astype_call_result_463476 = invoke(stypy.reporting.localization.Localization(__file__, 306, 19), astype_463472, *[double_463474], **kwargs_463475)
        
        # Processing the call keyword arguments (line 306)
        int_463477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 45), 'int')
        keyword_463478 = int_463477
        int_463479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 53), 'int')
        keyword_463480 = int_463479
        kwargs_463481 = {'ddof': keyword_463480, 'axis': keyword_463478}
        # Getting the type of 'np' (line 306)
        np_463469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 12), 'np', False)
        # Obtaining the member 'var' of a type (line 306)
        var_463470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 12), np_463469, 'var')
        # Calling var(args, kwargs) (line 306)
        var_call_result_463482 = invoke(stypy.reporting.localization.Localization(__file__, 306, 12), var_463470, *[astype_call_result_463476], **kwargs_463481)
        
        # Assigning a type to the variable 'V' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'V', var_call_result_463482)

        if more_types_in_union_463468:
            # Runtime conditional SSA for else branch (line 305)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_463467) or more_types_in_union_463468):
        
        # Assigning a Call to a Name (line 308):
        
        # Assigning a Call to a Name (line 308):
        
        # Call to asarray(...): (line 308)
        # Processing the call arguments (line 308)
        # Getting the type of 'V' (line 308)
        V_463485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 23), 'V', False)
        # Processing the call keyword arguments (line 308)
        str_463486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 308, 32), 'str', 'c')
        keyword_463487 = str_463486
        kwargs_463488 = {'order': keyword_463487}
        # Getting the type of 'np' (line 308)
        np_463483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 308)
        asarray_463484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 12), np_463483, 'asarray')
        # Calling asarray(args, kwargs) (line 308)
        asarray_call_result_463489 = invoke(stypy.reporting.localization.Localization(__file__, 308, 12), asarray_463484, *[V_463485], **kwargs_463488)
        
        # Assigning a type to the variable 'V' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'V', asarray_call_result_463489)
        
        
        # Getting the type of 'V' (line 309)
        V_463490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 11), 'V')
        # Obtaining the member 'dtype' of a type (line 309)
        dtype_463491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 11), V_463490, 'dtype')
        # Getting the type of 'np' (line 309)
        np_463492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 22), 'np')
        # Obtaining the member 'double' of a type (line 309)
        double_463493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 22), np_463492, 'double')
        # Applying the binary operator '!=' (line 309)
        result_ne_463494 = python_operator(stypy.reporting.localization.Localization(__file__, 309, 11), '!=', dtype_463491, double_463493)
        
        # Testing the type of an if condition (line 309)
        if_condition_463495 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 309, 8), result_ne_463494)
        # Assigning a type to the variable 'if_condition_463495' (line 309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 8), 'if_condition_463495', if_condition_463495)
        # SSA begins for if statement (line 309)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to TypeError(...): (line 310)
        # Processing the call arguments (line 310)
        str_463497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'str', 'Variance vector V must contain doubles.')
        # Processing the call keyword arguments (line 310)
        kwargs_463498 = {}
        # Getting the type of 'TypeError' (line 310)
        TypeError_463496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 18), 'TypeError', False)
        # Calling TypeError(args, kwargs) (line 310)
        TypeError_call_result_463499 = invoke(stypy.reporting.localization.Localization(__file__, 310, 18), TypeError_463496, *[str_463497], **kwargs_463498)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 310, 12), TypeError_call_result_463499, 'raise parameter', BaseException)
        # SSA join for if statement (line 309)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 311)
        # Processing the call arguments (line 311)
        # Getting the type of 'V' (line 311)
        V_463501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 15), 'V', False)
        # Obtaining the member 'shape' of a type (line 311)
        shape_463502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 311, 15), V_463501, 'shape')
        # Processing the call keyword arguments (line 311)
        kwargs_463503 = {}
        # Getting the type of 'len' (line 311)
        len_463500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 11), 'len', False)
        # Calling len(args, kwargs) (line 311)
        len_call_result_463504 = invoke(stypy.reporting.localization.Localization(__file__, 311, 11), len_463500, *[shape_463502], **kwargs_463503)
        
        int_463505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 311, 27), 'int')
        # Applying the binary operator '!=' (line 311)
        result_ne_463506 = python_operator(stypy.reporting.localization.Localization(__file__, 311, 11), '!=', len_call_result_463504, int_463505)
        
        # Testing the type of an if condition (line 311)
        if_condition_463507 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 311, 8), result_ne_463506)
        # Assigning a type to the variable 'if_condition_463507' (line 311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'if_condition_463507', if_condition_463507)
        # SSA begins for if statement (line 311)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 312)
        # Processing the call arguments (line 312)
        str_463509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 29), 'str', 'Variance vector V must be one-dimensional.')
        # Processing the call keyword arguments (line 312)
        kwargs_463510 = {}
        # Getting the type of 'ValueError' (line 312)
        ValueError_463508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 312)
        ValueError_call_result_463511 = invoke(stypy.reporting.localization.Localization(__file__, 312, 18), ValueError_463508, *[str_463509], **kwargs_463510)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 312, 12), ValueError_call_result_463511, 'raise parameter', BaseException)
        # SSA join for if statement (line 311)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Obtaining the type of the subscript
        int_463512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 19), 'int')
        # Getting the type of 'V' (line 314)
        V_463513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 11), 'V')
        # Obtaining the member 'shape' of a type (line 314)
        shape_463514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 11), V_463513, 'shape')
        # Obtaining the member '__getitem__' of a type (line 314)
        getitem___463515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 11), shape_463514, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 314)
        subscript_call_result_463516 = invoke(stypy.reporting.localization.Localization(__file__, 314, 11), getitem___463515, int_463512)
        
        # Getting the type of 'n' (line 314)
        n_463517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 25), 'n')
        # Applying the binary operator '!=' (line 314)
        result_ne_463518 = python_operator(stypy.reporting.localization.Localization(__file__, 314, 11), '!=', subscript_call_result_463516, n_463517)
        
        # Testing the type of an if condition (line 314)
        if_condition_463519 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 314, 8), result_ne_463518)
        # Assigning a type to the variable 'if_condition_463519' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'if_condition_463519', if_condition_463519)
        # SSA begins for if statement (line 314)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 315)
        # Processing the call arguments (line 315)
        str_463521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 29), 'str', 'Variance vector V must be of the same dimension as the vectors on which the distances are computed.')
        # Processing the call keyword arguments (line 315)
        kwargs_463522 = {}
        # Getting the type of 'ValueError' (line 315)
        ValueError_463520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 315)
        ValueError_call_result_463523 = invoke(stypy.reporting.localization.Localization(__file__, 315, 18), ValueError_463520, *[str_463521], **kwargs_463522)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 315, 12), ValueError_call_result_463523, 'raise parameter', BaseException)
        # SSA join for if statement (line 314)
        module_type_store = module_type_store.join_ssa_context()
        

        if (may_be_463467 and more_types_in_union_463468):
            # SSA join for if statement (line 305)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Subscript (line 318):
    
    # Assigning a Call to a Subscript (line 318):
    
    # Call to _convert_to_double(...): (line 318)
    # Processing the call arguments (line 318)
    # Getting the type of 'V' (line 318)
    V_463525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 37), 'V', False)
    # Processing the call keyword arguments (line 318)
    kwargs_463526 = {}
    # Getting the type of '_convert_to_double' (line 318)
    _convert_to_double_463524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 18), '_convert_to_double', False)
    # Calling _convert_to_double(args, kwargs) (line 318)
    _convert_to_double_call_result_463527 = invoke(stypy.reporting.localization.Localization(__file__, 318, 18), _convert_to_double_463524, *[V_463525], **kwargs_463526)
    
    # Getting the type of 'kwargs' (line 318)
    kwargs_463528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 4), 'kwargs')
    str_463529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 11), 'str', 'V')
    # Storing an element on a container (line 318)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 318, 4), kwargs_463528, (str_463529, _convert_to_double_call_result_463527))
    # Getting the type of 'kwargs' (line 319)
    kwargs_463530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 11), 'kwargs')
    # Assigning a type to the variable 'stypy_return_type' (line 319)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 4), 'stypy_return_type', kwargs_463530)
    
    # ################# End of '_validate_seuclidean_kwargs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_validate_seuclidean_kwargs' in the type store
    # Getting the type of 'stypy_return_type' (line 303)
    stypy_return_type_463531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463531)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_validate_seuclidean_kwargs'
    return stypy_return_type_463531

# Assigning a type to the variable '_validate_seuclidean_kwargs' (line 303)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 0), '_validate_seuclidean_kwargs', _validate_seuclidean_kwargs)

@norecursion
def _validate_vector(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 322)
    None_463532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 30), 'None')
    defaults = [None_463532]
    # Create a new context for function '_validate_vector'
    module_type_store = module_type_store.open_function_context('_validate_vector', 322, 0, False)
    
    # Passed parameters checking function
    _validate_vector.stypy_localization = localization
    _validate_vector.stypy_type_of_self = None
    _validate_vector.stypy_type_store = module_type_store
    _validate_vector.stypy_function_name = '_validate_vector'
    _validate_vector.stypy_param_names_list = ['u', 'dtype']
    _validate_vector.stypy_varargs_param_name = None
    _validate_vector.stypy_kwargs_param_name = None
    _validate_vector.stypy_call_defaults = defaults
    _validate_vector.stypy_call_varargs = varargs
    _validate_vector.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_validate_vector', ['u', 'dtype'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_validate_vector', localization, ['u', 'dtype'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_validate_vector(...)' code ##################

    
    # Assigning a Call to a Name (line 324):
    
    # Assigning a Call to a Name (line 324):
    
    # Call to squeeze(...): (line 324)
    # Processing the call keyword arguments (line 324)
    kwargs_463543 = {}
    
    # Call to asarray(...): (line 324)
    # Processing the call arguments (line 324)
    # Getting the type of 'u' (line 324)
    u_463535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 19), 'u', False)
    # Processing the call keyword arguments (line 324)
    # Getting the type of 'dtype' (line 324)
    dtype_463536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 28), 'dtype', False)
    keyword_463537 = dtype_463536
    str_463538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 41), 'str', 'c')
    keyword_463539 = str_463538
    kwargs_463540 = {'dtype': keyword_463537, 'order': keyword_463539}
    # Getting the type of 'np' (line 324)
    np_463533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 8), 'np', False)
    # Obtaining the member 'asarray' of a type (line 324)
    asarray_463534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 8), np_463533, 'asarray')
    # Calling asarray(args, kwargs) (line 324)
    asarray_call_result_463541 = invoke(stypy.reporting.localization.Localization(__file__, 324, 8), asarray_463534, *[u_463535], **kwargs_463540)
    
    # Obtaining the member 'squeeze' of a type (line 324)
    squeeze_463542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 8), asarray_call_result_463541, 'squeeze')
    # Calling squeeze(args, kwargs) (line 324)
    squeeze_call_result_463544 = invoke(stypy.reporting.localization.Localization(__file__, 324, 8), squeeze_463542, *[], **kwargs_463543)
    
    # Assigning a type to the variable 'u' (line 324)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 4), 'u', squeeze_call_result_463544)
    
    # Assigning a Call to a Name (line 326):
    
    # Assigning a Call to a Name (line 326):
    
    # Call to atleast_1d(...): (line 326)
    # Processing the call arguments (line 326)
    # Getting the type of 'u' (line 326)
    u_463547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 22), 'u', False)
    # Processing the call keyword arguments (line 326)
    kwargs_463548 = {}
    # Getting the type of 'np' (line 326)
    np_463545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 8), 'np', False)
    # Obtaining the member 'atleast_1d' of a type (line 326)
    atleast_1d_463546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 8), np_463545, 'atleast_1d')
    # Calling atleast_1d(args, kwargs) (line 326)
    atleast_1d_call_result_463549 = invoke(stypy.reporting.localization.Localization(__file__, 326, 8), atleast_1d_463546, *[u_463547], **kwargs_463548)
    
    # Assigning a type to the variable 'u' (line 326)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 4), 'u', atleast_1d_call_result_463549)
    
    
    # Getting the type of 'u' (line 327)
    u_463550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 7), 'u')
    # Obtaining the member 'ndim' of a type (line 327)
    ndim_463551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 7), u_463550, 'ndim')
    int_463552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 16), 'int')
    # Applying the binary operator '>' (line 327)
    result_gt_463553 = python_operator(stypy.reporting.localization.Localization(__file__, 327, 7), '>', ndim_463551, int_463552)
    
    # Testing the type of an if condition (line 327)
    if_condition_463554 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 327, 4), result_gt_463553)
    # Assigning a type to the variable 'if_condition_463554' (line 327)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 4), 'if_condition_463554', if_condition_463554)
    # SSA begins for if statement (line 327)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 328)
    # Processing the call arguments (line 328)
    str_463556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 25), 'str', 'Input vector should be 1-D.')
    # Processing the call keyword arguments (line 328)
    kwargs_463557 = {}
    # Getting the type of 'ValueError' (line 328)
    ValueError_463555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 328)
    ValueError_call_result_463558 = invoke(stypy.reporting.localization.Localization(__file__, 328, 14), ValueError_463555, *[str_463556], **kwargs_463557)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 328, 8), ValueError_call_result_463558, 'raise parameter', BaseException)
    # SSA join for if statement (line 327)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'u' (line 329)
    u_463559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 11), 'u')
    # Assigning a type to the variable 'stypy_return_type' (line 329)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 4), 'stypy_return_type', u_463559)
    
    # ################# End of '_validate_vector(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_validate_vector' in the type store
    # Getting the type of 'stypy_return_type' (line 322)
    stypy_return_type_463560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463560)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_validate_vector'
    return stypy_return_type_463560

# Assigning a type to the variable '_validate_vector' (line 322)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 0), '_validate_vector', _validate_vector)

@norecursion
def _validate_wminkowski_kwargs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_validate_wminkowski_kwargs'
    module_type_store = module_type_store.open_function_context('_validate_wminkowski_kwargs', 332, 0, False)
    
    # Passed parameters checking function
    _validate_wminkowski_kwargs.stypy_localization = localization
    _validate_wminkowski_kwargs.stypy_type_of_self = None
    _validate_wminkowski_kwargs.stypy_type_store = module_type_store
    _validate_wminkowski_kwargs.stypy_function_name = '_validate_wminkowski_kwargs'
    _validate_wminkowski_kwargs.stypy_param_names_list = ['X', 'm', 'n']
    _validate_wminkowski_kwargs.stypy_varargs_param_name = None
    _validate_wminkowski_kwargs.stypy_kwargs_param_name = 'kwargs'
    _validate_wminkowski_kwargs.stypy_call_defaults = defaults
    _validate_wminkowski_kwargs.stypy_call_varargs = varargs
    _validate_wminkowski_kwargs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_validate_wminkowski_kwargs', ['X', 'm', 'n'], None, 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_validate_wminkowski_kwargs', localization, ['X', 'm', 'n'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_validate_wminkowski_kwargs(...)' code ##################

    
    # Assigning a Call to a Name (line 333):
    
    # Assigning a Call to a Name (line 333):
    
    # Call to pop(...): (line 333)
    # Processing the call arguments (line 333)
    str_463563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 19), 'str', 'w')
    # Getting the type of 'None' (line 333)
    None_463564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 24), 'None', False)
    # Processing the call keyword arguments (line 333)
    kwargs_463565 = {}
    # Getting the type of 'kwargs' (line 333)
    kwargs_463561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'kwargs', False)
    # Obtaining the member 'pop' of a type (line 333)
    pop_463562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 8), kwargs_463561, 'pop')
    # Calling pop(args, kwargs) (line 333)
    pop_call_result_463566 = invoke(stypy.reporting.localization.Localization(__file__, 333, 8), pop_463562, *[str_463563, None_463564], **kwargs_463565)
    
    # Assigning a type to the variable 'w' (line 333)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 4), 'w', pop_call_result_463566)
    
    # Type idiom detected: calculating its left and rigth part (line 334)
    # Getting the type of 'w' (line 334)
    w_463567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 7), 'w')
    # Getting the type of 'None' (line 334)
    None_463568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 12), 'None')
    
    (may_be_463569, more_types_in_union_463570) = may_be_none(w_463567, None_463568)

    if may_be_463569:

        if more_types_in_union_463570:
            # Runtime conditional SSA (line 334)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Call to ValueError(...): (line 335)
        # Processing the call arguments (line 335)
        str_463572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 25), 'str', 'weighted minkowski requires a weight vector `w` to be given.')
        # Processing the call keyword arguments (line 335)
        kwargs_463573 = {}
        # Getting the type of 'ValueError' (line 335)
        ValueError_463571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 14), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 335)
        ValueError_call_result_463574 = invoke(stypy.reporting.localization.Localization(__file__, 335, 14), ValueError_463571, *[str_463572], **kwargs_463573)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 335, 8), ValueError_call_result_463574, 'raise parameter', BaseException)

        if more_types_in_union_463570:
            # SSA join for if statement (line 334)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Subscript (line 337):
    
    # Assigning a Call to a Subscript (line 337):
    
    # Call to _convert_to_double(...): (line 337)
    # Processing the call arguments (line 337)
    # Getting the type of 'w' (line 337)
    w_463576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 37), 'w', False)
    # Processing the call keyword arguments (line 337)
    kwargs_463577 = {}
    # Getting the type of '_convert_to_double' (line 337)
    _convert_to_double_463575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 18), '_convert_to_double', False)
    # Calling _convert_to_double(args, kwargs) (line 337)
    _convert_to_double_call_result_463578 = invoke(stypy.reporting.localization.Localization(__file__, 337, 18), _convert_to_double_463575, *[w_463576], **kwargs_463577)
    
    # Getting the type of 'kwargs' (line 337)
    kwargs_463579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 4), 'kwargs')
    str_463580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 11), 'str', 'w')
    # Storing an element on a container (line 337)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 337, 4), kwargs_463579, (str_463580, _convert_to_double_call_result_463578))
    
    
    str_463581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 338, 7), 'str', 'p')
    # Getting the type of 'kwargs' (line 338)
    kwargs_463582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 18), 'kwargs')
    # Applying the binary operator 'notin' (line 338)
    result_contains_463583 = python_operator(stypy.reporting.localization.Localization(__file__, 338, 7), 'notin', str_463581, kwargs_463582)
    
    # Testing the type of an if condition (line 338)
    if_condition_463584 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 338, 4), result_contains_463583)
    # Assigning a type to the variable 'if_condition_463584' (line 338)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 4), 'if_condition_463584', if_condition_463584)
    # SSA begins for if statement (line 338)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Subscript (line 339):
    
    # Assigning a Num to a Subscript (line 339):
    float_463585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, 22), 'float')
    # Getting the type of 'kwargs' (line 339)
    kwargs_463586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 8), 'kwargs')
    str_463587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, 15), 'str', 'p')
    # Storing an element on a container (line 339)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 339, 8), kwargs_463586, (str_463587, float_463585))
    # SSA join for if statement (line 338)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'kwargs' (line 340)
    kwargs_463588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 11), 'kwargs')
    # Assigning a type to the variable 'stypy_return_type' (line 340)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 4), 'stypy_return_type', kwargs_463588)
    
    # ################# End of '_validate_wminkowski_kwargs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_validate_wminkowski_kwargs' in the type store
    # Getting the type of 'stypy_return_type' (line 332)
    stypy_return_type_463589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463589)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_validate_wminkowski_kwargs'
    return stypy_return_type_463589

# Assigning a type to the variable '_validate_wminkowski_kwargs' (line 332)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 332, 0), '_validate_wminkowski_kwargs', _validate_wminkowski_kwargs)

@norecursion
def directed_hausdorff(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_463590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 34), 'int')
    defaults = [int_463590]
    # Create a new context for function 'directed_hausdorff'
    module_type_store = module_type_store.open_function_context('directed_hausdorff', 343, 0, False)
    
    # Passed parameters checking function
    directed_hausdorff.stypy_localization = localization
    directed_hausdorff.stypy_type_of_self = None
    directed_hausdorff.stypy_type_store = module_type_store
    directed_hausdorff.stypy_function_name = 'directed_hausdorff'
    directed_hausdorff.stypy_param_names_list = ['u', 'v', 'seed']
    directed_hausdorff.stypy_varargs_param_name = None
    directed_hausdorff.stypy_kwargs_param_name = None
    directed_hausdorff.stypy_call_defaults = defaults
    directed_hausdorff.stypy_call_varargs = varargs
    directed_hausdorff.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'directed_hausdorff', ['u', 'v', 'seed'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'directed_hausdorff', localization, ['u', 'v', 'seed'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'directed_hausdorff(...)' code ##################

    str_463591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, (-1)), 'str', '\n    Computes the directed Hausdorff distance between two N-D arrays.\n\n    Distances between pairs are calculated using a Euclidean metric.\n\n    Parameters\n    ----------\n    u : (M,N) ndarray\n        Input array.\n    v : (O,N) ndarray\n        Input array.\n    seed : int or None\n        Local `np.random.RandomState` seed. Default is 0, a random shuffling of\n        u and v that guarantees reproducibility.\n\n    Returns\n    -------\n    d : double\n        The directed Hausdorff distance between arrays `u` and `v`,\n\n    index_1 : int\n        index of point contributing to Hausdorff pair in `u`\n\n    index_2 : int\n        index of point contributing to Hausdorff pair in `v`\n\n    Notes\n    -----\n    Uses the early break technique and the random sampling approach\n    described by [1]_. Although worst-case performance is ``O(m * o)``\n    (as with the brute force algorithm), this is unlikely in practice\n    as the input data would have to require the algorithm to explore\n    every single point interaction, and after the algorithm shuffles\n    the input points at that. The best case performance is O(m), which\n    is satisfied by selecting an inner loop distance that is less than\n    cmax and leads to an early break as often as possible. The authors\n    have formally shown that the average runtime is closer to O(m).\n\n    .. versionadded:: 0.19.0\n\n    References\n    ----------\n    .. [1] A. A. Taha and A. Hanbury, "An efficient algorithm for\n           calculating the exact Hausdorff distance." IEEE Transactions On\n           Pattern Analysis And Machine Intelligence, vol. 37 pp. 2153-63,\n           2015.\n\n    See Also\n    --------\n    scipy.spatial.procrustes : Another similarity test for two data sets\n\n    Examples\n    --------\n    Find the directed Hausdorff distance between two 2-D arrays of\n    coordinates:\n\n    >>> from scipy.spatial.distance import directed_hausdorff\n    >>> u = np.array([(1.0, 0.0),\n    ...               (0.0, 1.0),\n    ...               (-1.0, 0.0),\n    ...               (0.0, -1.0)])\n    >>> v = np.array([(2.0, 0.0),\n    ...               (0.0, 2.0),\n    ...               (-2.0, 0.0),\n    ...               (0.0, -4.0)])\n\n    >>> directed_hausdorff(u, v)[0]\n    2.23606797749979\n    >>> directed_hausdorff(v, u)[0]\n    3.0\n\n    Find the general (symmetric) Hausdorff distance between two 2-D\n    arrays of coordinates:\n\n    >>> max(directed_hausdorff(u, v)[0], directed_hausdorff(v, u)[0])\n    3.0\n\n    Find the indices of the points that generate the Hausdorff distance\n    (the Hausdorff pair):\n\n    >>> directed_hausdorff(v, u)[1:]\n    (3, 3)\n\n    ')
    
    # Assigning a Call to a Name (line 428):
    
    # Assigning a Call to a Name (line 428):
    
    # Call to asarray(...): (line 428)
    # Processing the call arguments (line 428)
    # Getting the type of 'u' (line 428)
    u_463594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 19), 'u', False)
    # Processing the call keyword arguments (line 428)
    # Getting the type of 'np' (line 428)
    np_463595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 28), 'np', False)
    # Obtaining the member 'float64' of a type (line 428)
    float64_463596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 28), np_463595, 'float64')
    keyword_463597 = float64_463596
    str_463598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 46), 'str', 'c')
    keyword_463599 = str_463598
    kwargs_463600 = {'dtype': keyword_463597, 'order': keyword_463599}
    # Getting the type of 'np' (line 428)
    np_463592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'np', False)
    # Obtaining the member 'asarray' of a type (line 428)
    asarray_463593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 8), np_463592, 'asarray')
    # Calling asarray(args, kwargs) (line 428)
    asarray_call_result_463601 = invoke(stypy.reporting.localization.Localization(__file__, 428, 8), asarray_463593, *[u_463594], **kwargs_463600)
    
    # Assigning a type to the variable 'u' (line 428)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 4), 'u', asarray_call_result_463601)
    
    # Assigning a Call to a Name (line 429):
    
    # Assigning a Call to a Name (line 429):
    
    # Call to asarray(...): (line 429)
    # Processing the call arguments (line 429)
    # Getting the type of 'v' (line 429)
    v_463604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 19), 'v', False)
    # Processing the call keyword arguments (line 429)
    # Getting the type of 'np' (line 429)
    np_463605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 28), 'np', False)
    # Obtaining the member 'float64' of a type (line 429)
    float64_463606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 429, 28), np_463605, 'float64')
    keyword_463607 = float64_463606
    str_463608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 46), 'str', 'c')
    keyword_463609 = str_463608
    kwargs_463610 = {'dtype': keyword_463607, 'order': keyword_463609}
    # Getting the type of 'np' (line 429)
    np_463602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 8), 'np', False)
    # Obtaining the member 'asarray' of a type (line 429)
    asarray_463603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 429, 8), np_463602, 'asarray')
    # Calling asarray(args, kwargs) (line 429)
    asarray_call_result_463611 = invoke(stypy.reporting.localization.Localization(__file__, 429, 8), asarray_463603, *[v_463604], **kwargs_463610)
    
    # Assigning a type to the variable 'v' (line 429)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 429, 4), 'v', asarray_call_result_463611)
    
    # Assigning a Call to a Name (line 430):
    
    # Assigning a Call to a Name (line 430):
    
    # Call to directed_hausdorff(...): (line 430)
    # Processing the call arguments (line 430)
    # Getting the type of 'u' (line 430)
    u_463614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 43), 'u', False)
    # Getting the type of 'v' (line 430)
    v_463615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 46), 'v', False)
    # Getting the type of 'seed' (line 430)
    seed_463616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 49), 'seed', False)
    # Processing the call keyword arguments (line 430)
    kwargs_463617 = {}
    # Getting the type of '_hausdorff' (line 430)
    _hausdorff_463612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 13), '_hausdorff', False)
    # Obtaining the member 'directed_hausdorff' of a type (line 430)
    directed_hausdorff_463613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 13), _hausdorff_463612, 'directed_hausdorff')
    # Calling directed_hausdorff(args, kwargs) (line 430)
    directed_hausdorff_call_result_463618 = invoke(stypy.reporting.localization.Localization(__file__, 430, 13), directed_hausdorff_463613, *[u_463614, v_463615, seed_463616], **kwargs_463617)
    
    # Assigning a type to the variable 'result' (line 430)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 4), 'result', directed_hausdorff_call_result_463618)
    # Getting the type of 'result' (line 431)
    result_463619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 11), 'result')
    # Assigning a type to the variable 'stypy_return_type' (line 431)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 431, 4), 'stypy_return_type', result_463619)
    
    # ################# End of 'directed_hausdorff(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'directed_hausdorff' in the type store
    # Getting the type of 'stypy_return_type' (line 343)
    stypy_return_type_463620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463620)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'directed_hausdorff'
    return stypy_return_type_463620

# Assigning a type to the variable 'directed_hausdorff' (line 343)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 0), 'directed_hausdorff', directed_hausdorff)

@norecursion
def minkowski(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_463621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 22), 'int')
    # Getting the type of 'None' (line 434)
    None_463622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 27), 'None')
    defaults = [int_463621, None_463622]
    # Create a new context for function 'minkowski'
    module_type_store = module_type_store.open_function_context('minkowski', 434, 0, False)
    
    # Passed parameters checking function
    minkowski.stypy_localization = localization
    minkowski.stypy_type_of_self = None
    minkowski.stypy_type_store = module_type_store
    minkowski.stypy_function_name = 'minkowski'
    minkowski.stypy_param_names_list = ['u', 'v', 'p', 'w']
    minkowski.stypy_varargs_param_name = None
    minkowski.stypy_kwargs_param_name = None
    minkowski.stypy_call_defaults = defaults
    minkowski.stypy_call_varargs = varargs
    minkowski.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'minkowski', ['u', 'v', 'p', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'minkowski', localization, ['u', 'v', 'p', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'minkowski(...)' code ##################

    str_463623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, (-1)), 'str', '\n    Computes the Minkowski distance between two 1-D arrays.\n\n    The Minkowski distance between 1-D arrays `u` and `v`,\n    is defined as\n\n    .. math::\n\n       {||u-v||}_p = (\\sum{|u_i - v_i|^p})^{1/p}.\n\n\n       \\left(\\sum{w_i(|(u_i - v_i)|^p)}\\right)^{1/p}.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    p : int\n        The order of the norm of the difference :math:`{||u-v||}_p`.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    minkowski : double\n        The Minkowski distance between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 466):
    
    # Assigning a Call to a Name (line 466):
    
    # Call to _validate_vector(...): (line 466)
    # Processing the call arguments (line 466)
    # Getting the type of 'u' (line 466)
    u_463625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 25), 'u', False)
    # Processing the call keyword arguments (line 466)
    kwargs_463626 = {}
    # Getting the type of '_validate_vector' (line 466)
    _validate_vector_463624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 466)
    _validate_vector_call_result_463627 = invoke(stypy.reporting.localization.Localization(__file__, 466, 8), _validate_vector_463624, *[u_463625], **kwargs_463626)
    
    # Assigning a type to the variable 'u' (line 466)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 4), 'u', _validate_vector_call_result_463627)
    
    # Assigning a Call to a Name (line 467):
    
    # Assigning a Call to a Name (line 467):
    
    # Call to _validate_vector(...): (line 467)
    # Processing the call arguments (line 467)
    # Getting the type of 'v' (line 467)
    v_463629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 25), 'v', False)
    # Processing the call keyword arguments (line 467)
    kwargs_463630 = {}
    # Getting the type of '_validate_vector' (line 467)
    _validate_vector_463628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 467)
    _validate_vector_call_result_463631 = invoke(stypy.reporting.localization.Localization(__file__, 467, 8), _validate_vector_463628, *[v_463629], **kwargs_463630)
    
    # Assigning a type to the variable 'v' (line 467)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 467, 4), 'v', _validate_vector_call_result_463631)
    
    
    # Getting the type of 'p' (line 468)
    p_463632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 7), 'p')
    int_463633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 11), 'int')
    # Applying the binary operator '<' (line 468)
    result_lt_463634 = python_operator(stypy.reporting.localization.Localization(__file__, 468, 7), '<', p_463632, int_463633)
    
    # Testing the type of an if condition (line 468)
    if_condition_463635 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 468, 4), result_lt_463634)
    # Assigning a type to the variable 'if_condition_463635' (line 468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 4), 'if_condition_463635', if_condition_463635)
    # SSA begins for if statement (line 468)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 469)
    # Processing the call arguments (line 469)
    str_463637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 25), 'str', 'p must be at least 1')
    # Processing the call keyword arguments (line 469)
    kwargs_463638 = {}
    # Getting the type of 'ValueError' (line 469)
    ValueError_463636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 469)
    ValueError_call_result_463639 = invoke(stypy.reporting.localization.Localization(__file__, 469, 14), ValueError_463636, *[str_463637], **kwargs_463638)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 469, 8), ValueError_call_result_463639, 'raise parameter', BaseException)
    # SSA join for if statement (line 468)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a BinOp to a Name (line 470):
    
    # Assigning a BinOp to a Name (line 470):
    # Getting the type of 'u' (line 470)
    u_463640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 10), 'u')
    # Getting the type of 'v' (line 470)
    v_463641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 14), 'v')
    # Applying the binary operator '-' (line 470)
    result_sub_463642 = python_operator(stypy.reporting.localization.Localization(__file__, 470, 10), '-', u_463640, v_463641)
    
    # Assigning a type to the variable 'u_v' (line 470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 4), 'u_v', result_sub_463642)
    
    # Type idiom detected: calculating its left and rigth part (line 471)
    # Getting the type of 'w' (line 471)
    w_463643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 4), 'w')
    # Getting the type of 'None' (line 471)
    None_463644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 16), 'None')
    
    (may_be_463645, more_types_in_union_463646) = may_not_be_none(w_463643, None_463644)

    if may_be_463645:

        if more_types_in_union_463646:
            # Runtime conditional SSA (line 471)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 472):
        
        # Assigning a Call to a Name (line 472):
        
        # Call to _validate_vector(...): (line 472)
        # Processing the call arguments (line 472)
        # Getting the type of 'w' (line 472)
        w_463648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 29), 'w', False)
        # Processing the call keyword arguments (line 472)
        kwargs_463649 = {}
        # Getting the type of '_validate_vector' (line 472)
        _validate_vector_463647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 472)
        _validate_vector_call_result_463650 = invoke(stypy.reporting.localization.Localization(__file__, 472, 12), _validate_vector_463647, *[w_463648], **kwargs_463649)
        
        # Assigning a type to the variable 'w' (line 472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 8), 'w', _validate_vector_call_result_463650)
        
        
        # Getting the type of 'p' (line 473)
        p_463651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 11), 'p')
        int_463652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 16), 'int')
        # Applying the binary operator '==' (line 473)
        result_eq_463653 = python_operator(stypy.reporting.localization.Localization(__file__, 473, 11), '==', p_463651, int_463652)
        
        # Testing the type of an if condition (line 473)
        if_condition_463654 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 473, 8), result_eq_463653)
        # Assigning a type to the variable 'if_condition_463654' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 8), 'if_condition_463654', if_condition_463654)
        # SSA begins for if statement (line 473)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 474):
        
        # Assigning a Name to a Name (line 474):
        # Getting the type of 'w' (line 474)
        w_463655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 21), 'w')
        # Assigning a type to the variable 'root_w' (line 474)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 474, 12), 'root_w', w_463655)
        # SSA join for if statement (line 473)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'p' (line 475)
        p_463656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 11), 'p')
        int_463657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 16), 'int')
        # Applying the binary operator '==' (line 475)
        result_eq_463658 = python_operator(stypy.reporting.localization.Localization(__file__, 475, 11), '==', p_463656, int_463657)
        
        # Testing the type of an if condition (line 475)
        if_condition_463659 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 475, 8), result_eq_463658)
        # Assigning a type to the variable 'if_condition_463659' (line 475)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 8), 'if_condition_463659', if_condition_463659)
        # SSA begins for if statement (line 475)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 477):
        
        # Assigning a Call to a Name (line 477):
        
        # Call to sqrt(...): (line 477)
        # Processing the call arguments (line 477)
        # Getting the type of 'w' (line 477)
        w_463662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 29), 'w', False)
        # Processing the call keyword arguments (line 477)
        kwargs_463663 = {}
        # Getting the type of 'np' (line 477)
        np_463660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 21), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 477)
        sqrt_463661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 21), np_463660, 'sqrt')
        # Calling sqrt(args, kwargs) (line 477)
        sqrt_call_result_463664 = invoke(stypy.reporting.localization.Localization(__file__, 477, 21), sqrt_463661, *[w_463662], **kwargs_463663)
        
        # Assigning a type to the variable 'root_w' (line 477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 12), 'root_w', sqrt_call_result_463664)
        # SSA branch for the else part of an if statement (line 475)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 479):
        
        # Assigning a Call to a Name (line 479):
        
        # Call to power(...): (line 479)
        # Processing the call arguments (line 479)
        # Getting the type of 'w' (line 479)
        w_463667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 30), 'w', False)
        int_463668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 33), 'int')
        # Getting the type of 'p' (line 479)
        p_463669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 35), 'p', False)
        # Applying the binary operator 'div' (line 479)
        result_div_463670 = python_operator(stypy.reporting.localization.Localization(__file__, 479, 33), 'div', int_463668, p_463669)
        
        # Processing the call keyword arguments (line 479)
        kwargs_463671 = {}
        # Getting the type of 'np' (line 479)
        np_463665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 21), 'np', False)
        # Obtaining the member 'power' of a type (line 479)
        power_463666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 21), np_463665, 'power')
        # Calling power(args, kwargs) (line 479)
        power_call_result_463672 = invoke(stypy.reporting.localization.Localization(__file__, 479, 21), power_463666, *[w_463667, result_div_463670], **kwargs_463671)
        
        # Assigning a type to the variable 'root_w' (line 479)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 12), 'root_w', power_call_result_463672)
        # SSA join for if statement (line 475)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 480):
        
        # Assigning a BinOp to a Name (line 480):
        # Getting the type of 'root_w' (line 480)
        root_w_463673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 14), 'root_w')
        # Getting the type of 'u_v' (line 480)
        u_v_463674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 23), 'u_v')
        # Applying the binary operator '*' (line 480)
        result_mul_463675 = python_operator(stypy.reporting.localization.Localization(__file__, 480, 14), '*', root_w_463673, u_v_463674)
        
        # Assigning a type to the variable 'u_v' (line 480)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 8), 'u_v', result_mul_463675)

        if more_types_in_union_463646:
            # SSA join for if statement (line 471)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 481):
    
    # Assigning a Call to a Name (line 481):
    
    # Call to norm(...): (line 481)
    # Processing the call arguments (line 481)
    # Getting the type of 'u_v' (line 481)
    u_v_463677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 16), 'u_v', False)
    # Processing the call keyword arguments (line 481)
    # Getting the type of 'p' (line 481)
    p_463678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 25), 'p', False)
    keyword_463679 = p_463678
    kwargs_463680 = {'ord': keyword_463679}
    # Getting the type of 'norm' (line 481)
    norm_463676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 11), 'norm', False)
    # Calling norm(args, kwargs) (line 481)
    norm_call_result_463681 = invoke(stypy.reporting.localization.Localization(__file__, 481, 11), norm_463676, *[u_v_463677], **kwargs_463680)
    
    # Assigning a type to the variable 'dist' (line 481)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 4), 'dist', norm_call_result_463681)
    # Getting the type of 'dist' (line 482)
    dist_463682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 11), 'dist')
    # Assigning a type to the variable 'stypy_return_type' (line 482)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 4), 'stypy_return_type', dist_463682)
    
    # ################# End of 'minkowski(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'minkowski' in the type store
    # Getting the type of 'stypy_return_type' (line 434)
    stypy_return_type_463683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463683)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'minkowski'
    return stypy_return_type_463683

# Assigning a type to the variable 'minkowski' (line 434)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 0), 'minkowski', minkowski)

@norecursion
def wminkowski(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'wminkowski'
    module_type_store = module_type_store.open_function_context('wminkowski', 489, 0, False)
    
    # Passed parameters checking function
    wminkowski.stypy_localization = localization
    wminkowski.stypy_type_of_self = None
    wminkowski.stypy_type_store = module_type_store
    wminkowski.stypy_function_name = 'wminkowski'
    wminkowski.stypy_param_names_list = ['u', 'v', 'p', 'w']
    wminkowski.stypy_varargs_param_name = None
    wminkowski.stypy_kwargs_param_name = None
    wminkowski.stypy_call_defaults = defaults
    wminkowski.stypy_call_varargs = varargs
    wminkowski.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'wminkowski', ['u', 'v', 'p', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'wminkowski', localization, ['u', 'v', 'p', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'wminkowski(...)' code ##################

    str_463684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 520, (-1)), 'str', '\n    Computes the weighted Minkowski distance between two 1-D arrays.\n    The weighted Minkowski distance between `u` and `v`, defined as\n\n    .. math::\n\n       \\left(\\sum{(|w_i (u_i - v_i)|^p)}\\right)^{1/p}.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    p : int\n        The order of the norm of the difference :math:`{||u-v||}_p`.\n    w : (N,) array_like\n        The weight vector.\n\n    Returns\n    -------\n    wminkowski : double\n        The weighted Minkowski distance between vectors `u` and `v`.\n\n    Notes\n    -----\n    `wminkowski` is DEPRECATED. It implements a definition where weights\n    are powered. It is recommended to use the weighted version of `minkowski`\n    instead. This function will be removed in a future version of scipy.\n\n    ')
    
    # Assigning a Call to a Name (line 521):
    
    # Assigning a Call to a Name (line 521):
    
    # Call to _validate_vector(...): (line 521)
    # Processing the call arguments (line 521)
    # Getting the type of 'w' (line 521)
    w_463686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 25), 'w', False)
    # Processing the call keyword arguments (line 521)
    kwargs_463687 = {}
    # Getting the type of '_validate_vector' (line 521)
    _validate_vector_463685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 521)
    _validate_vector_call_result_463688 = invoke(stypy.reporting.localization.Localization(__file__, 521, 8), _validate_vector_463685, *[w_463686], **kwargs_463687)
    
    # Assigning a type to the variable 'w' (line 521)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 4), 'w', _validate_vector_call_result_463688)
    
    # Call to minkowski(...): (line 522)
    # Processing the call arguments (line 522)
    # Getting the type of 'u' (line 522)
    u_463690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 21), 'u', False)
    # Getting the type of 'v' (line 522)
    v_463691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 24), 'v', False)
    # Processing the call keyword arguments (line 522)
    # Getting the type of 'p' (line 522)
    p_463692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 29), 'p', False)
    keyword_463693 = p_463692
    # Getting the type of 'w' (line 522)
    w_463694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 34), 'w', False)
    # Getting the type of 'p' (line 522)
    p_463695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 37), 'p', False)
    # Applying the binary operator '**' (line 522)
    result_pow_463696 = python_operator(stypy.reporting.localization.Localization(__file__, 522, 34), '**', w_463694, p_463695)
    
    keyword_463697 = result_pow_463696
    kwargs_463698 = {'p': keyword_463693, 'w': keyword_463697}
    # Getting the type of 'minkowski' (line 522)
    minkowski_463689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 11), 'minkowski', False)
    # Calling minkowski(args, kwargs) (line 522)
    minkowski_call_result_463699 = invoke(stypy.reporting.localization.Localization(__file__, 522, 11), minkowski_463689, *[u_463690, v_463691], **kwargs_463698)
    
    # Assigning a type to the variable 'stypy_return_type' (line 522)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 4), 'stypy_return_type', minkowski_call_result_463699)
    
    # ################# End of 'wminkowski(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'wminkowski' in the type store
    # Getting the type of 'stypy_return_type' (line 489)
    stypy_return_type_463700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463700)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'wminkowski'
    return stypy_return_type_463700

# Assigning a type to the variable 'wminkowski' (line 489)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 489, 0), 'wminkowski', wminkowski)

@norecursion
def euclidean(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 525)
    None_463701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 22), 'None')
    defaults = [None_463701]
    # Create a new context for function 'euclidean'
    module_type_store = module_type_store.open_function_context('euclidean', 525, 0, False)
    
    # Passed parameters checking function
    euclidean.stypy_localization = localization
    euclidean.stypy_type_of_self = None
    euclidean.stypy_type_store = module_type_store
    euclidean.stypy_function_name = 'euclidean'
    euclidean.stypy_param_names_list = ['u', 'v', 'w']
    euclidean.stypy_varargs_param_name = None
    euclidean.stypy_kwargs_param_name = None
    euclidean.stypy_call_defaults = defaults
    euclidean.stypy_call_varargs = varargs
    euclidean.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'euclidean', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'euclidean', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'euclidean(...)' code ##################

    str_463702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, (-1)), 'str', '\n    Computes the Euclidean distance between two 1-D arrays.\n\n    The Euclidean distance between 1-D arrays `u` and `v`, is defined as\n\n    .. math::\n\n       {||u-v||}_2\n\n       \\left(\\sum{(w_i |(u_i - v_i)|^2)}\\right)^{1/2}\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    euclidean : double\n        The Euclidean distance between vectors `u` and `v`.\n\n    ')
    
    # Call to minkowski(...): (line 553)
    # Processing the call arguments (line 553)
    # Getting the type of 'u' (line 553)
    u_463704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 21), 'u', False)
    # Getting the type of 'v' (line 553)
    v_463705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 24), 'v', False)
    # Processing the call keyword arguments (line 553)
    int_463706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 29), 'int')
    keyword_463707 = int_463706
    # Getting the type of 'w' (line 553)
    w_463708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 34), 'w', False)
    keyword_463709 = w_463708
    kwargs_463710 = {'p': keyword_463707, 'w': keyword_463709}
    # Getting the type of 'minkowski' (line 553)
    minkowski_463703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 11), 'minkowski', False)
    # Calling minkowski(args, kwargs) (line 553)
    minkowski_call_result_463711 = invoke(stypy.reporting.localization.Localization(__file__, 553, 11), minkowski_463703, *[u_463704, v_463705], **kwargs_463710)
    
    # Assigning a type to the variable 'stypy_return_type' (line 553)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 553, 4), 'stypy_return_type', minkowski_call_result_463711)
    
    # ################# End of 'euclidean(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'euclidean' in the type store
    # Getting the type of 'stypy_return_type' (line 525)
    stypy_return_type_463712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463712)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'euclidean'
    return stypy_return_type_463712

# Assigning a type to the variable 'euclidean' (line 525)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 525, 0), 'euclidean', euclidean)

@norecursion
def sqeuclidean(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 556)
    None_463713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 24), 'None')
    defaults = [None_463713]
    # Create a new context for function 'sqeuclidean'
    module_type_store = module_type_store.open_function_context('sqeuclidean', 556, 0, False)
    
    # Passed parameters checking function
    sqeuclidean.stypy_localization = localization
    sqeuclidean.stypy_type_of_self = None
    sqeuclidean.stypy_type_store = module_type_store
    sqeuclidean.stypy_function_name = 'sqeuclidean'
    sqeuclidean.stypy_param_names_list = ['u', 'v', 'w']
    sqeuclidean.stypy_varargs_param_name = None
    sqeuclidean.stypy_kwargs_param_name = None
    sqeuclidean.stypy_call_defaults = defaults
    sqeuclidean.stypy_call_varargs = varargs
    sqeuclidean.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'sqeuclidean', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'sqeuclidean', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'sqeuclidean(...)' code ##################

    str_463714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, (-1)), 'str', '\n    Computes the squared Euclidean distance between two 1-D arrays.\n\n    The squared Euclidean distance between `u` and `v` is defined as\n\n    .. math::\n\n       {||u-v||}_2^2\n\n       \\left(\\sum{(w_i |(u_i - v_i)|^2)}\\right)\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    sqeuclidean : double\n        The squared Euclidean distance between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Tuple to a Tuple (line 586):
    
    # Assigning a Name to a Name (line 586):
    # Getting the type of 'None' (line 586)
    None_463715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 19), 'None')
    # Assigning a type to the variable 'tuple_assignment_462790' (line 586)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 4), 'tuple_assignment_462790', None_463715)
    
    # Assigning a Name to a Name (line 586):
    # Getting the type of 'None' (line 586)
    None_463716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 25), 'None')
    # Assigning a type to the variable 'tuple_assignment_462791' (line 586)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 4), 'tuple_assignment_462791', None_463716)
    
    # Assigning a Name to a Name (line 586):
    # Getting the type of 'tuple_assignment_462790' (line 586)
    tuple_assignment_462790_463717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 4), 'tuple_assignment_462790')
    # Assigning a type to the variable 'utype' (line 586)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 4), 'utype', tuple_assignment_462790_463717)
    
    # Assigning a Name to a Name (line 586):
    # Getting the type of 'tuple_assignment_462791' (line 586)
    tuple_assignment_462791_463718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 4), 'tuple_assignment_462791')
    # Assigning a type to the variable 'vtype' (line 586)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 11), 'vtype', tuple_assignment_462791_463718)
    
    
    
    # Evaluating a boolean operation
    
    # Call to hasattr(...): (line 587)
    # Processing the call arguments (line 587)
    # Getting the type of 'u' (line 587)
    u_463720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 20), 'u', False)
    str_463721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 23), 'str', 'dtype')
    # Processing the call keyword arguments (line 587)
    kwargs_463722 = {}
    # Getting the type of 'hasattr' (line 587)
    hasattr_463719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 12), 'hasattr', False)
    # Calling hasattr(args, kwargs) (line 587)
    hasattr_call_result_463723 = invoke(stypy.reporting.localization.Localization(__file__, 587, 12), hasattr_463719, *[u_463720, str_463721], **kwargs_463722)
    
    
    # Call to issubdtype(...): (line 587)
    # Processing the call arguments (line 587)
    # Getting the type of 'u' (line 587)
    u_463726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 50), 'u', False)
    # Obtaining the member 'dtype' of a type (line 587)
    dtype_463727 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 50), u_463726, 'dtype')
    # Getting the type of 'np' (line 587)
    np_463728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 59), 'np', False)
    # Obtaining the member 'inexact' of a type (line 587)
    inexact_463729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 59), np_463728, 'inexact')
    # Processing the call keyword arguments (line 587)
    kwargs_463730 = {}
    # Getting the type of 'np' (line 587)
    np_463724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 36), 'np', False)
    # Obtaining the member 'issubdtype' of a type (line 587)
    issubdtype_463725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 36), np_463724, 'issubdtype')
    # Calling issubdtype(args, kwargs) (line 587)
    issubdtype_call_result_463731 = invoke(stypy.reporting.localization.Localization(__file__, 587, 36), issubdtype_463725, *[dtype_463727, inexact_463729], **kwargs_463730)
    
    # Applying the binary operator 'and' (line 587)
    result_and_keyword_463732 = python_operator(stypy.reporting.localization.Localization(__file__, 587, 12), 'and', hasattr_call_result_463723, issubdtype_call_result_463731)
    
    # Applying the 'not' unary operator (line 587)
    result_not__463733 = python_operator(stypy.reporting.localization.Localization(__file__, 587, 7), 'not', result_and_keyword_463732)
    
    # Testing the type of an if condition (line 587)
    if_condition_463734 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 587, 4), result_not__463733)
    # Assigning a type to the variable 'if_condition_463734' (line 587)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 4), 'if_condition_463734', if_condition_463734)
    # SSA begins for if statement (line 587)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Attribute to a Name (line 588):
    
    # Assigning a Attribute to a Name (line 588):
    # Getting the type of 'np' (line 588)
    np_463735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 16), 'np')
    # Obtaining the member 'float64' of a type (line 588)
    float64_463736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 16), np_463735, 'float64')
    # Assigning a type to the variable 'utype' (line 588)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 588, 8), 'utype', float64_463736)
    # SSA join for if statement (line 587)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Evaluating a boolean operation
    
    # Call to hasattr(...): (line 589)
    # Processing the call arguments (line 589)
    # Getting the type of 'v' (line 589)
    v_463738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 20), 'v', False)
    str_463739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 23), 'str', 'dtype')
    # Processing the call keyword arguments (line 589)
    kwargs_463740 = {}
    # Getting the type of 'hasattr' (line 589)
    hasattr_463737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 12), 'hasattr', False)
    # Calling hasattr(args, kwargs) (line 589)
    hasattr_call_result_463741 = invoke(stypy.reporting.localization.Localization(__file__, 589, 12), hasattr_463737, *[v_463738, str_463739], **kwargs_463740)
    
    
    # Call to issubdtype(...): (line 589)
    # Processing the call arguments (line 589)
    # Getting the type of 'v' (line 589)
    v_463744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 50), 'v', False)
    # Obtaining the member 'dtype' of a type (line 589)
    dtype_463745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 50), v_463744, 'dtype')
    # Getting the type of 'np' (line 589)
    np_463746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 59), 'np', False)
    # Obtaining the member 'inexact' of a type (line 589)
    inexact_463747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 59), np_463746, 'inexact')
    # Processing the call keyword arguments (line 589)
    kwargs_463748 = {}
    # Getting the type of 'np' (line 589)
    np_463742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 36), 'np', False)
    # Obtaining the member 'issubdtype' of a type (line 589)
    issubdtype_463743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 36), np_463742, 'issubdtype')
    # Calling issubdtype(args, kwargs) (line 589)
    issubdtype_call_result_463749 = invoke(stypy.reporting.localization.Localization(__file__, 589, 36), issubdtype_463743, *[dtype_463745, inexact_463747], **kwargs_463748)
    
    # Applying the binary operator 'and' (line 589)
    result_and_keyword_463750 = python_operator(stypy.reporting.localization.Localization(__file__, 589, 12), 'and', hasattr_call_result_463741, issubdtype_call_result_463749)
    
    # Applying the 'not' unary operator (line 589)
    result_not__463751 = python_operator(stypy.reporting.localization.Localization(__file__, 589, 7), 'not', result_and_keyword_463750)
    
    # Testing the type of an if condition (line 589)
    if_condition_463752 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 589, 4), result_not__463751)
    # Assigning a type to the variable 'if_condition_463752' (line 589)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 4), 'if_condition_463752', if_condition_463752)
    # SSA begins for if statement (line 589)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Attribute to a Name (line 590):
    
    # Assigning a Attribute to a Name (line 590):
    # Getting the type of 'np' (line 590)
    np_463753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 16), 'np')
    # Obtaining the member 'float64' of a type (line 590)
    float64_463754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 16), np_463753, 'float64')
    # Assigning a type to the variable 'vtype' (line 590)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 8), 'vtype', float64_463754)
    # SSA join for if statement (line 589)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 592):
    
    # Assigning a Call to a Name (line 592):
    
    # Call to _validate_vector(...): (line 592)
    # Processing the call arguments (line 592)
    # Getting the type of 'u' (line 592)
    u_463756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 25), 'u', False)
    # Processing the call keyword arguments (line 592)
    # Getting the type of 'utype' (line 592)
    utype_463757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 34), 'utype', False)
    keyword_463758 = utype_463757
    kwargs_463759 = {'dtype': keyword_463758}
    # Getting the type of '_validate_vector' (line 592)
    _validate_vector_463755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 592)
    _validate_vector_call_result_463760 = invoke(stypy.reporting.localization.Localization(__file__, 592, 8), _validate_vector_463755, *[u_463756], **kwargs_463759)
    
    # Assigning a type to the variable 'u' (line 592)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 4), 'u', _validate_vector_call_result_463760)
    
    # Assigning a Call to a Name (line 593):
    
    # Assigning a Call to a Name (line 593):
    
    # Call to _validate_vector(...): (line 593)
    # Processing the call arguments (line 593)
    # Getting the type of 'v' (line 593)
    v_463762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 25), 'v', False)
    # Processing the call keyword arguments (line 593)
    # Getting the type of 'vtype' (line 593)
    vtype_463763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 34), 'vtype', False)
    keyword_463764 = vtype_463763
    kwargs_463765 = {'dtype': keyword_463764}
    # Getting the type of '_validate_vector' (line 593)
    _validate_vector_463761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 593)
    _validate_vector_call_result_463766 = invoke(stypy.reporting.localization.Localization(__file__, 593, 8), _validate_vector_463761, *[v_463762], **kwargs_463765)
    
    # Assigning a type to the variable 'v' (line 593)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 4), 'v', _validate_vector_call_result_463766)
    
    # Assigning a BinOp to a Name (line 594):
    
    # Assigning a BinOp to a Name (line 594):
    # Getting the type of 'u' (line 594)
    u_463767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 10), 'u')
    # Getting the type of 'v' (line 594)
    v_463768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 14), 'v')
    # Applying the binary operator '-' (line 594)
    result_sub_463769 = python_operator(stypy.reporting.localization.Localization(__file__, 594, 10), '-', u_463767, v_463768)
    
    # Assigning a type to the variable 'u_v' (line 594)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 4), 'u_v', result_sub_463769)
    
    # Assigning a Name to a Name (line 595):
    
    # Assigning a Name to a Name (line 595):
    # Getting the type of 'u_v' (line 595)
    u_v_463770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 12), 'u_v')
    # Assigning a type to the variable 'u_v_w' (line 595)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 4), 'u_v_w', u_v_463770)
    
    # Type idiom detected: calculating its left and rigth part (line 596)
    # Getting the type of 'w' (line 596)
    w_463771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 4), 'w')
    # Getting the type of 'None' (line 596)
    None_463772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 16), 'None')
    
    (may_be_463773, more_types_in_union_463774) = may_not_be_none(w_463771, None_463772)

    if may_be_463773:

        if more_types_in_union_463774:
            # Runtime conditional SSA (line 596)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 597):
        
        # Assigning a Call to a Name (line 597):
        
        # Call to _validate_vector(...): (line 597)
        # Processing the call arguments (line 597)
        # Getting the type of 'w' (line 597)
        w_463776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 29), 'w', False)
        # Processing the call keyword arguments (line 597)
        kwargs_463777 = {}
        # Getting the type of '_validate_vector' (line 597)
        _validate_vector_463775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 597)
        _validate_vector_call_result_463778 = invoke(stypy.reporting.localization.Localization(__file__, 597, 12), _validate_vector_463775, *[w_463776], **kwargs_463777)
        
        # Assigning a type to the variable 'w' (line 597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 8), 'w', _validate_vector_call_result_463778)
        
        # Assigning a BinOp to a Name (line 598):
        
        # Assigning a BinOp to a Name (line 598):
        # Getting the type of 'w' (line 598)
        w_463779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 16), 'w')
        # Getting the type of 'u_v' (line 598)
        u_v_463780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 20), 'u_v')
        # Applying the binary operator '*' (line 598)
        result_mul_463781 = python_operator(stypy.reporting.localization.Localization(__file__, 598, 16), '*', w_463779, u_v_463780)
        
        # Assigning a type to the variable 'u_v_w' (line 598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'u_v_w', result_mul_463781)

        if more_types_in_union_463774:
            # SSA join for if statement (line 596)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to dot(...): (line 599)
    # Processing the call arguments (line 599)
    # Getting the type of 'u_v' (line 599)
    u_v_463784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 18), 'u_v', False)
    # Getting the type of 'u_v_w' (line 599)
    u_v_w_463785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 23), 'u_v_w', False)
    # Processing the call keyword arguments (line 599)
    kwargs_463786 = {}
    # Getting the type of 'np' (line 599)
    np_463782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 11), 'np', False)
    # Obtaining the member 'dot' of a type (line 599)
    dot_463783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 11), np_463782, 'dot')
    # Calling dot(args, kwargs) (line 599)
    dot_call_result_463787 = invoke(stypy.reporting.localization.Localization(__file__, 599, 11), dot_463783, *[u_v_463784, u_v_w_463785], **kwargs_463786)
    
    # Assigning a type to the variable 'stypy_return_type' (line 599)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 4), 'stypy_return_type', dot_call_result_463787)
    
    # ################# End of 'sqeuclidean(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'sqeuclidean' in the type store
    # Getting the type of 'stypy_return_type' (line 556)
    stypy_return_type_463788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463788)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'sqeuclidean'
    return stypy_return_type_463788

# Assigning a type to the variable 'sqeuclidean' (line 556)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 556, 0), 'sqeuclidean', sqeuclidean)

@norecursion
def correlation(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 602)
    None_463789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 24), 'None')
    # Getting the type of 'True' (line 602)
    True_463790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 39), 'True')
    defaults = [None_463789, True_463790]
    # Create a new context for function 'correlation'
    module_type_store = module_type_store.open_function_context('correlation', 602, 0, False)
    
    # Passed parameters checking function
    correlation.stypy_localization = localization
    correlation.stypy_type_of_self = None
    correlation.stypy_type_store = module_type_store
    correlation.stypy_function_name = 'correlation'
    correlation.stypy_param_names_list = ['u', 'v', 'w', 'centered']
    correlation.stypy_varargs_param_name = None
    correlation.stypy_kwargs_param_name = None
    correlation.stypy_call_defaults = defaults
    correlation.stypy_call_varargs = varargs
    correlation.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'correlation', ['u', 'v', 'w', 'centered'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'correlation', localization, ['u', 'v', 'w', 'centered'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'correlation(...)' code ##################

    str_463791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, (-1)), 'str', '\n    Computes the correlation distance between two 1-D arrays.\n    The correlation distance between `u` and `v`, is\n    defined as\n\n    .. math::\n\n        1 - \\frac{(u - \\bar{u}) \\cdot (v - \\bar{v})}\n                  {{||(u - \\bar{u})||}_2 {||(v - \\bar{v})||}_2}\n\n    where :math:`\\bar{u}` is the mean of the elements of `u`\n    and :math:`x \\cdot y` is the dot product of :math:`x` and :math:`y`.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    correlation : double\n        The correlation distance between 1-D array `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 632):
    
    # Assigning a Call to a Name (line 632):
    
    # Call to _validate_vector(...): (line 632)
    # Processing the call arguments (line 632)
    # Getting the type of 'u' (line 632)
    u_463793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 25), 'u', False)
    # Processing the call keyword arguments (line 632)
    kwargs_463794 = {}
    # Getting the type of '_validate_vector' (line 632)
    _validate_vector_463792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 632)
    _validate_vector_call_result_463795 = invoke(stypy.reporting.localization.Localization(__file__, 632, 8), _validate_vector_463792, *[u_463793], **kwargs_463794)
    
    # Assigning a type to the variable 'u' (line 632)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 632, 4), 'u', _validate_vector_call_result_463795)
    
    # Assigning a Call to a Name (line 633):
    
    # Assigning a Call to a Name (line 633):
    
    # Call to _validate_vector(...): (line 633)
    # Processing the call arguments (line 633)
    # Getting the type of 'v' (line 633)
    v_463797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 25), 'v', False)
    # Processing the call keyword arguments (line 633)
    kwargs_463798 = {}
    # Getting the type of '_validate_vector' (line 633)
    _validate_vector_463796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 633)
    _validate_vector_call_result_463799 = invoke(stypy.reporting.localization.Localization(__file__, 633, 8), _validate_vector_463796, *[v_463797], **kwargs_463798)
    
    # Assigning a type to the variable 'v' (line 633)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 633, 4), 'v', _validate_vector_call_result_463799)
    
    # Type idiom detected: calculating its left and rigth part (line 634)
    # Getting the type of 'w' (line 634)
    w_463800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 4), 'w')
    # Getting the type of 'None' (line 634)
    None_463801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 16), 'None')
    
    (may_be_463802, more_types_in_union_463803) = may_not_be_none(w_463800, None_463801)

    if may_be_463802:

        if more_types_in_union_463803:
            # Runtime conditional SSA (line 634)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 635):
        
        # Assigning a Call to a Name (line 635):
        
        # Call to _validate_vector(...): (line 635)
        # Processing the call arguments (line 635)
        # Getting the type of 'w' (line 635)
        w_463805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 29), 'w', False)
        # Processing the call keyword arguments (line 635)
        kwargs_463806 = {}
        # Getting the type of '_validate_vector' (line 635)
        _validate_vector_463804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 635)
        _validate_vector_call_result_463807 = invoke(stypy.reporting.localization.Localization(__file__, 635, 12), _validate_vector_463804, *[w_463805], **kwargs_463806)
        
        # Assigning a type to the variable 'w' (line 635)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'w', _validate_vector_call_result_463807)

        if more_types_in_union_463803:
            # SSA join for if statement (line 634)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Getting the type of 'centered' (line 636)
    centered_463808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 7), 'centered')
    # Testing the type of an if condition (line 636)
    if_condition_463809 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 636, 4), centered_463808)
    # Assigning a type to the variable 'if_condition_463809' (line 636)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 4), 'if_condition_463809', if_condition_463809)
    # SSA begins for if statement (line 636)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 637):
    
    # Assigning a Call to a Name (line 637):
    
    # Call to average(...): (line 637)
    # Processing the call arguments (line 637)
    # Getting the type of 'u' (line 637)
    u_463812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 25), 'u', False)
    # Processing the call keyword arguments (line 637)
    # Getting the type of 'w' (line 637)
    w_463813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 36), 'w', False)
    keyword_463814 = w_463813
    kwargs_463815 = {'weights': keyword_463814}
    # Getting the type of 'np' (line 637)
    np_463810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 14), 'np', False)
    # Obtaining the member 'average' of a type (line 637)
    average_463811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 637, 14), np_463810, 'average')
    # Calling average(args, kwargs) (line 637)
    average_call_result_463816 = invoke(stypy.reporting.localization.Localization(__file__, 637, 14), average_463811, *[u_463812], **kwargs_463815)
    
    # Assigning a type to the variable 'umu' (line 637)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'umu', average_call_result_463816)
    
    # Assigning a Call to a Name (line 638):
    
    # Assigning a Call to a Name (line 638):
    
    # Call to average(...): (line 638)
    # Processing the call arguments (line 638)
    # Getting the type of 'v' (line 638)
    v_463819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 25), 'v', False)
    # Processing the call keyword arguments (line 638)
    # Getting the type of 'w' (line 638)
    w_463820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 36), 'w', False)
    keyword_463821 = w_463820
    kwargs_463822 = {'weights': keyword_463821}
    # Getting the type of 'np' (line 638)
    np_463817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 14), 'np', False)
    # Obtaining the member 'average' of a type (line 638)
    average_463818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 14), np_463817, 'average')
    # Calling average(args, kwargs) (line 638)
    average_call_result_463823 = invoke(stypy.reporting.localization.Localization(__file__, 638, 14), average_463818, *[v_463819], **kwargs_463822)
    
    # Assigning a type to the variable 'vmu' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 8), 'vmu', average_call_result_463823)
    
    # Assigning a BinOp to a Name (line 639):
    
    # Assigning a BinOp to a Name (line 639):
    # Getting the type of 'u' (line 639)
    u_463824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 12), 'u')
    # Getting the type of 'umu' (line 639)
    umu_463825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 16), 'umu')
    # Applying the binary operator '-' (line 639)
    result_sub_463826 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 12), '-', u_463824, umu_463825)
    
    # Assigning a type to the variable 'u' (line 639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'u', result_sub_463826)
    
    # Assigning a BinOp to a Name (line 640):
    
    # Assigning a BinOp to a Name (line 640):
    # Getting the type of 'v' (line 640)
    v_463827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 12), 'v')
    # Getting the type of 'vmu' (line 640)
    vmu_463828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 16), 'vmu')
    # Applying the binary operator '-' (line 640)
    result_sub_463829 = python_operator(stypy.reporting.localization.Localization(__file__, 640, 12), '-', v_463827, vmu_463828)
    
    # Assigning a type to the variable 'v' (line 640)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 8), 'v', result_sub_463829)
    # SSA join for if statement (line 636)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 641):
    
    # Assigning a Call to a Name (line 641):
    
    # Call to average(...): (line 641)
    # Processing the call arguments (line 641)
    # Getting the type of 'u' (line 641)
    u_463832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 20), 'u', False)
    # Getting the type of 'v' (line 641)
    v_463833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 24), 'v', False)
    # Applying the binary operator '*' (line 641)
    result_mul_463834 = python_operator(stypy.reporting.localization.Localization(__file__, 641, 20), '*', u_463832, v_463833)
    
    # Processing the call keyword arguments (line 641)
    # Getting the type of 'w' (line 641)
    w_463835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 35), 'w', False)
    keyword_463836 = w_463835
    kwargs_463837 = {'weights': keyword_463836}
    # Getting the type of 'np' (line 641)
    np_463830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 9), 'np', False)
    # Obtaining the member 'average' of a type (line 641)
    average_463831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 641, 9), np_463830, 'average')
    # Calling average(args, kwargs) (line 641)
    average_call_result_463838 = invoke(stypy.reporting.localization.Localization(__file__, 641, 9), average_463831, *[result_mul_463834], **kwargs_463837)
    
    # Assigning a type to the variable 'uv' (line 641)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 4), 'uv', average_call_result_463838)
    
    # Assigning a Call to a Name (line 642):
    
    # Assigning a Call to a Name (line 642):
    
    # Call to average(...): (line 642)
    # Processing the call arguments (line 642)
    
    # Call to square(...): (line 642)
    # Processing the call arguments (line 642)
    # Getting the type of 'u' (line 642)
    u_463843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 30), 'u', False)
    # Processing the call keyword arguments (line 642)
    kwargs_463844 = {}
    # Getting the type of 'np' (line 642)
    np_463841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 20), 'np', False)
    # Obtaining the member 'square' of a type (line 642)
    square_463842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 642, 20), np_463841, 'square')
    # Calling square(args, kwargs) (line 642)
    square_call_result_463845 = invoke(stypy.reporting.localization.Localization(__file__, 642, 20), square_463842, *[u_463843], **kwargs_463844)
    
    # Processing the call keyword arguments (line 642)
    # Getting the type of 'w' (line 642)
    w_463846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 42), 'w', False)
    keyword_463847 = w_463846
    kwargs_463848 = {'weights': keyword_463847}
    # Getting the type of 'np' (line 642)
    np_463839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 9), 'np', False)
    # Obtaining the member 'average' of a type (line 642)
    average_463840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 642, 9), np_463839, 'average')
    # Calling average(args, kwargs) (line 642)
    average_call_result_463849 = invoke(stypy.reporting.localization.Localization(__file__, 642, 9), average_463840, *[square_call_result_463845], **kwargs_463848)
    
    # Assigning a type to the variable 'uu' (line 642)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 642, 4), 'uu', average_call_result_463849)
    
    # Assigning a Call to a Name (line 643):
    
    # Assigning a Call to a Name (line 643):
    
    # Call to average(...): (line 643)
    # Processing the call arguments (line 643)
    
    # Call to square(...): (line 643)
    # Processing the call arguments (line 643)
    # Getting the type of 'v' (line 643)
    v_463854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 30), 'v', False)
    # Processing the call keyword arguments (line 643)
    kwargs_463855 = {}
    # Getting the type of 'np' (line 643)
    np_463852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 20), 'np', False)
    # Obtaining the member 'square' of a type (line 643)
    square_463853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 20), np_463852, 'square')
    # Calling square(args, kwargs) (line 643)
    square_call_result_463856 = invoke(stypy.reporting.localization.Localization(__file__, 643, 20), square_463853, *[v_463854], **kwargs_463855)
    
    # Processing the call keyword arguments (line 643)
    # Getting the type of 'w' (line 643)
    w_463857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 42), 'w', False)
    keyword_463858 = w_463857
    kwargs_463859 = {'weights': keyword_463858}
    # Getting the type of 'np' (line 643)
    np_463850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 9), 'np', False)
    # Obtaining the member 'average' of a type (line 643)
    average_463851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 9), np_463850, 'average')
    # Calling average(args, kwargs) (line 643)
    average_call_result_463860 = invoke(stypy.reporting.localization.Localization(__file__, 643, 9), average_463851, *[square_call_result_463856], **kwargs_463859)
    
    # Assigning a type to the variable 'vv' (line 643)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 4), 'vv', average_call_result_463860)
    
    # Assigning a BinOp to a Name (line 644):
    
    # Assigning a BinOp to a Name (line 644):
    float_463861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 11), 'float')
    # Getting the type of 'uv' (line 644)
    uv_463862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 17), 'uv')
    
    # Call to sqrt(...): (line 644)
    # Processing the call arguments (line 644)
    # Getting the type of 'uu' (line 644)
    uu_463865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 30), 'uu', False)
    # Getting the type of 'vv' (line 644)
    vv_463866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 35), 'vv', False)
    # Applying the binary operator '*' (line 644)
    result_mul_463867 = python_operator(stypy.reporting.localization.Localization(__file__, 644, 30), '*', uu_463865, vv_463866)
    
    # Processing the call keyword arguments (line 644)
    kwargs_463868 = {}
    # Getting the type of 'np' (line 644)
    np_463863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 22), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 644)
    sqrt_463864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 22), np_463863, 'sqrt')
    # Calling sqrt(args, kwargs) (line 644)
    sqrt_call_result_463869 = invoke(stypy.reporting.localization.Localization(__file__, 644, 22), sqrt_463864, *[result_mul_463867], **kwargs_463868)
    
    # Applying the binary operator 'div' (line 644)
    result_div_463870 = python_operator(stypy.reporting.localization.Localization(__file__, 644, 17), 'div', uv_463862, sqrt_call_result_463869)
    
    # Applying the binary operator '-' (line 644)
    result_sub_463871 = python_operator(stypy.reporting.localization.Localization(__file__, 644, 11), '-', float_463861, result_div_463870)
    
    # Assigning a type to the variable 'dist' (line 644)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 4), 'dist', result_sub_463871)
    # Getting the type of 'dist' (line 645)
    dist_463872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 11), 'dist')
    # Assigning a type to the variable 'stypy_return_type' (line 645)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 4), 'stypy_return_type', dist_463872)
    
    # ################# End of 'correlation(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'correlation' in the type store
    # Getting the type of 'stypy_return_type' (line 602)
    stypy_return_type_463873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463873)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'correlation'
    return stypy_return_type_463873

# Assigning a type to the variable 'correlation' (line 602)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 0), 'correlation', correlation)

@norecursion
def cosine(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 648)
    None_463874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 19), 'None')
    defaults = [None_463874]
    # Create a new context for function 'cosine'
    module_type_store = module_type_store.open_function_context('cosine', 648, 0, False)
    
    # Passed parameters checking function
    cosine.stypy_localization = localization
    cosine.stypy_type_of_self = None
    cosine.stypy_type_store = module_type_store
    cosine.stypy_function_name = 'cosine'
    cosine.stypy_param_names_list = ['u', 'v', 'w']
    cosine.stypy_varargs_param_name = None
    cosine.stypy_kwargs_param_name = None
    cosine.stypy_call_defaults = defaults
    cosine.stypy_call_varargs = varargs
    cosine.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'cosine', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'cosine', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'cosine(...)' code ##################

    str_463875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, (-1)), 'str', '\n    Computes the Cosine distance between 1-D arrays.\n    The Cosine distance between `u` and `v`, is defined as\n\n    .. math::\n\n        1 - \\frac{u \\cdot v}\n                  {||u||_2 ||v||_2}.\n\n    where :math:`u \\cdot v` is the dot product of :math:`u` and\n    :math:`v`.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    cosine : double\n        The Cosine distance between vectors `u` and `v`.\n    ')
    
    # Call to correlation(...): (line 678)
    # Processing the call arguments (line 678)
    # Getting the type of 'u' (line 678)
    u_463877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 23), 'u', False)
    # Getting the type of 'v' (line 678)
    v_463878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 26), 'v', False)
    # Processing the call keyword arguments (line 678)
    # Getting the type of 'w' (line 678)
    w_463879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 31), 'w', False)
    keyword_463880 = w_463879
    # Getting the type of 'False' (line 678)
    False_463881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 43), 'False', False)
    keyword_463882 = False_463881
    kwargs_463883 = {'centered': keyword_463882, 'w': keyword_463880}
    # Getting the type of 'correlation' (line 678)
    correlation_463876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 11), 'correlation', False)
    # Calling correlation(args, kwargs) (line 678)
    correlation_call_result_463884 = invoke(stypy.reporting.localization.Localization(__file__, 678, 11), correlation_463876, *[u_463877, v_463878], **kwargs_463883)
    
    # Assigning a type to the variable 'stypy_return_type' (line 678)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 4), 'stypy_return_type', correlation_call_result_463884)
    
    # ################# End of 'cosine(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'cosine' in the type store
    # Getting the type of 'stypy_return_type' (line 648)
    stypy_return_type_463885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463885)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'cosine'
    return stypy_return_type_463885

# Assigning a type to the variable 'cosine' (line 648)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 0), 'cosine', cosine)

@norecursion
def hamming(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 681)
    None_463886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 20), 'None')
    defaults = [None_463886]
    # Create a new context for function 'hamming'
    module_type_store = module_type_store.open_function_context('hamming', 681, 0, False)
    
    # Passed parameters checking function
    hamming.stypy_localization = localization
    hamming.stypy_type_of_self = None
    hamming.stypy_type_store = module_type_store
    hamming.stypy_function_name = 'hamming'
    hamming.stypy_param_names_list = ['u', 'v', 'w']
    hamming.stypy_varargs_param_name = None
    hamming.stypy_kwargs_param_name = None
    hamming.stypy_call_defaults = defaults
    hamming.stypy_call_varargs = varargs
    hamming.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'hamming', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'hamming', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'hamming(...)' code ##################

    str_463887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, (-1)), 'str', '\n    Computes the Hamming distance between two 1-D arrays.\n\n    The Hamming distance between 1-D arrays `u` and `v`, is simply the\n    proportion of disagreeing components in `u` and `v`. If `u` and `v` are\n    boolean vectors, the Hamming distance is\n\n    .. math::\n\n       \\frac{c_{01} + c_{10}}{n}\n\n    where :math:`c_{ij}` is the number of occurrences of\n    :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for\n    :math:`k < n`.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    hamming : double\n        The Hamming distance between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 713):
    
    # Assigning a Call to a Name (line 713):
    
    # Call to _validate_vector(...): (line 713)
    # Processing the call arguments (line 713)
    # Getting the type of 'u' (line 713)
    u_463889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 25), 'u', False)
    # Processing the call keyword arguments (line 713)
    kwargs_463890 = {}
    # Getting the type of '_validate_vector' (line 713)
    _validate_vector_463888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 713)
    _validate_vector_call_result_463891 = invoke(stypy.reporting.localization.Localization(__file__, 713, 8), _validate_vector_463888, *[u_463889], **kwargs_463890)
    
    # Assigning a type to the variable 'u' (line 713)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 4), 'u', _validate_vector_call_result_463891)
    
    # Assigning a Call to a Name (line 714):
    
    # Assigning a Call to a Name (line 714):
    
    # Call to _validate_vector(...): (line 714)
    # Processing the call arguments (line 714)
    # Getting the type of 'v' (line 714)
    v_463893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 25), 'v', False)
    # Processing the call keyword arguments (line 714)
    kwargs_463894 = {}
    # Getting the type of '_validate_vector' (line 714)
    _validate_vector_463892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 714)
    _validate_vector_call_result_463895 = invoke(stypy.reporting.localization.Localization(__file__, 714, 8), _validate_vector_463892, *[v_463893], **kwargs_463894)
    
    # Assigning a type to the variable 'v' (line 714)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 4), 'v', _validate_vector_call_result_463895)
    
    
    # Getting the type of 'u' (line 715)
    u_463896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 7), 'u')
    # Obtaining the member 'shape' of a type (line 715)
    shape_463897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 7), u_463896, 'shape')
    # Getting the type of 'v' (line 715)
    v_463898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 18), 'v')
    # Obtaining the member 'shape' of a type (line 715)
    shape_463899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 18), v_463898, 'shape')
    # Applying the binary operator '!=' (line 715)
    result_ne_463900 = python_operator(stypy.reporting.localization.Localization(__file__, 715, 7), '!=', shape_463897, shape_463899)
    
    # Testing the type of an if condition (line 715)
    if_condition_463901 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 715, 4), result_ne_463900)
    # Assigning a type to the variable 'if_condition_463901' (line 715)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 4), 'if_condition_463901', if_condition_463901)
    # SSA begins for if statement (line 715)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 716)
    # Processing the call arguments (line 716)
    str_463903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 25), 'str', 'The 1d arrays must have equal lengths.')
    # Processing the call keyword arguments (line 716)
    kwargs_463904 = {}
    # Getting the type of 'ValueError' (line 716)
    ValueError_463902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 716)
    ValueError_call_result_463905 = invoke(stypy.reporting.localization.Localization(__file__, 716, 14), ValueError_463902, *[str_463903], **kwargs_463904)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 716, 8), ValueError_call_result_463905, 'raise parameter', BaseException)
    # SSA join for if statement (line 715)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Compare to a Name (line 717):
    
    # Assigning a Compare to a Name (line 717):
    
    # Getting the type of 'u' (line 717)
    u_463906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 13), 'u')
    # Getting the type of 'v' (line 717)
    v_463907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 18), 'v')
    # Applying the binary operator '!=' (line 717)
    result_ne_463908 = python_operator(stypy.reporting.localization.Localization(__file__, 717, 13), '!=', u_463906, v_463907)
    
    # Assigning a type to the variable 'u_ne_v' (line 717)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 717, 4), 'u_ne_v', result_ne_463908)
    
    # Type idiom detected: calculating its left and rigth part (line 718)
    # Getting the type of 'w' (line 718)
    w_463909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 4), 'w')
    # Getting the type of 'None' (line 718)
    None_463910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 16), 'None')
    
    (may_be_463911, more_types_in_union_463912) = may_not_be_none(w_463909, None_463910)

    if may_be_463911:

        if more_types_in_union_463912:
            # Runtime conditional SSA (line 718)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 719):
        
        # Assigning a Call to a Name (line 719):
        
        # Call to _validate_vector(...): (line 719)
        # Processing the call arguments (line 719)
        # Getting the type of 'w' (line 719)
        w_463914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 29), 'w', False)
        # Processing the call keyword arguments (line 719)
        kwargs_463915 = {}
        # Getting the type of '_validate_vector' (line 719)
        _validate_vector_463913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 719)
        _validate_vector_call_result_463916 = invoke(stypy.reporting.localization.Localization(__file__, 719, 12), _validate_vector_463913, *[w_463914], **kwargs_463915)
        
        # Assigning a type to the variable 'w' (line 719)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 719, 8), 'w', _validate_vector_call_result_463916)

        if more_types_in_union_463912:
            # SSA join for if statement (line 718)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to average(...): (line 720)
    # Processing the call arguments (line 720)
    # Getting the type of 'u_ne_v' (line 720)
    u_ne_v_463919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 22), 'u_ne_v', False)
    # Processing the call keyword arguments (line 720)
    # Getting the type of 'w' (line 720)
    w_463920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 38), 'w', False)
    keyword_463921 = w_463920
    kwargs_463922 = {'weights': keyword_463921}
    # Getting the type of 'np' (line 720)
    np_463917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 11), 'np', False)
    # Obtaining the member 'average' of a type (line 720)
    average_463918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 11), np_463917, 'average')
    # Calling average(args, kwargs) (line 720)
    average_call_result_463923 = invoke(stypy.reporting.localization.Localization(__file__, 720, 11), average_463918, *[u_ne_v_463919], **kwargs_463922)
    
    # Assigning a type to the variable 'stypy_return_type' (line 720)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 4), 'stypy_return_type', average_call_result_463923)
    
    # ################# End of 'hamming(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'hamming' in the type store
    # Getting the type of 'stypy_return_type' (line 681)
    stypy_return_type_463924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463924)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'hamming'
    return stypy_return_type_463924

# Assigning a type to the variable 'hamming' (line 681)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 681, 0), 'hamming', hamming)

@norecursion
def jaccard(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 723)
    None_463925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 20), 'None')
    defaults = [None_463925]
    # Create a new context for function 'jaccard'
    module_type_store = module_type_store.open_function_context('jaccard', 723, 0, False)
    
    # Passed parameters checking function
    jaccard.stypy_localization = localization
    jaccard.stypy_type_of_self = None
    jaccard.stypy_type_store = module_type_store
    jaccard.stypy_function_name = 'jaccard'
    jaccard.stypy_param_names_list = ['u', 'v', 'w']
    jaccard.stypy_varargs_param_name = None
    jaccard.stypy_kwargs_param_name = None
    jaccard.stypy_call_defaults = defaults
    jaccard.stypy_call_varargs = varargs
    jaccard.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'jaccard', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'jaccard', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'jaccard(...)' code ##################

    str_463926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 754, (-1)), 'str', '\n    Computes the Jaccard-Needham dissimilarity between two boolean 1-D arrays.\n\n    The Jaccard-Needham dissimilarity between 1-D boolean arrays `u` and `v`,\n    is defined as\n\n    .. math::\n\n       \\frac{c_{TF} + c_{FT}}\n            {c_{TT} + c_{FT} + c_{TF}}\n\n    where :math:`c_{ij}` is the number of occurrences of\n    :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for\n    :math:`k < n`.\n\n    Parameters\n    ----------\n    u : (N,) array_like, bool\n        Input array.\n    v : (N,) array_like, bool\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    jaccard : double\n        The Jaccard distance between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 755):
    
    # Assigning a Call to a Name (line 755):
    
    # Call to _validate_vector(...): (line 755)
    # Processing the call arguments (line 755)
    # Getting the type of 'u' (line 755)
    u_463928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 25), 'u', False)
    # Processing the call keyword arguments (line 755)
    kwargs_463929 = {}
    # Getting the type of '_validate_vector' (line 755)
    _validate_vector_463927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 755)
    _validate_vector_call_result_463930 = invoke(stypy.reporting.localization.Localization(__file__, 755, 8), _validate_vector_463927, *[u_463928], **kwargs_463929)
    
    # Assigning a type to the variable 'u' (line 755)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 755, 4), 'u', _validate_vector_call_result_463930)
    
    # Assigning a Call to a Name (line 756):
    
    # Assigning a Call to a Name (line 756):
    
    # Call to _validate_vector(...): (line 756)
    # Processing the call arguments (line 756)
    # Getting the type of 'v' (line 756)
    v_463932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 25), 'v', False)
    # Processing the call keyword arguments (line 756)
    kwargs_463933 = {}
    # Getting the type of '_validate_vector' (line 756)
    _validate_vector_463931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 756)
    _validate_vector_call_result_463934 = invoke(stypy.reporting.localization.Localization(__file__, 756, 8), _validate_vector_463931, *[v_463932], **kwargs_463933)
    
    # Assigning a type to the variable 'v' (line 756)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 756, 4), 'v', _validate_vector_call_result_463934)
    
    # Assigning a Call to a Name (line 757):
    
    # Assigning a Call to a Name (line 757):
    
    # Call to bitwise_or(...): (line 757)
    # Processing the call arguments (line 757)
    
    # Getting the type of 'u' (line 757)
    u_463937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 28), 'u', False)
    int_463938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 33), 'int')
    # Applying the binary operator '!=' (line 757)
    result_ne_463939 = python_operator(stypy.reporting.localization.Localization(__file__, 757, 28), '!=', u_463937, int_463938)
    
    
    # Getting the type of 'v' (line 757)
    v_463940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 36), 'v', False)
    int_463941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 41), 'int')
    # Applying the binary operator '!=' (line 757)
    result_ne_463942 = python_operator(stypy.reporting.localization.Localization(__file__, 757, 36), '!=', v_463940, int_463941)
    
    # Processing the call keyword arguments (line 757)
    kwargs_463943 = {}
    # Getting the type of 'np' (line 757)
    np_463935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 14), 'np', False)
    # Obtaining the member 'bitwise_or' of a type (line 757)
    bitwise_or_463936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 14), np_463935, 'bitwise_or')
    # Calling bitwise_or(args, kwargs) (line 757)
    bitwise_or_call_result_463944 = invoke(stypy.reporting.localization.Localization(__file__, 757, 14), bitwise_or_463936, *[result_ne_463939, result_ne_463942], **kwargs_463943)
    
    # Assigning a type to the variable 'nonzero' (line 757)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 757, 4), 'nonzero', bitwise_or_call_result_463944)
    
    # Assigning a Call to a Name (line 758):
    
    # Assigning a Call to a Name (line 758):
    
    # Call to bitwise_and(...): (line 758)
    # Processing the call arguments (line 758)
    
    # Getting the type of 'u' (line 758)
    u_463947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 38), 'u', False)
    # Getting the type of 'v' (line 758)
    v_463948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 43), 'v', False)
    # Applying the binary operator '!=' (line 758)
    result_ne_463949 = python_operator(stypy.reporting.localization.Localization(__file__, 758, 38), '!=', u_463947, v_463948)
    
    # Getting the type of 'nonzero' (line 758)
    nonzero_463950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 47), 'nonzero', False)
    # Processing the call keyword arguments (line 758)
    kwargs_463951 = {}
    # Getting the type of 'np' (line 758)
    np_463945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 22), 'np', False)
    # Obtaining the member 'bitwise_and' of a type (line 758)
    bitwise_and_463946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 758, 22), np_463945, 'bitwise_and')
    # Calling bitwise_and(args, kwargs) (line 758)
    bitwise_and_call_result_463952 = invoke(stypy.reporting.localization.Localization(__file__, 758, 22), bitwise_and_463946, *[result_ne_463949, nonzero_463950], **kwargs_463951)
    
    # Assigning a type to the variable 'unequal_nonzero' (line 758)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 758, 4), 'unequal_nonzero', bitwise_and_call_result_463952)
    
    # Type idiom detected: calculating its left and rigth part (line 759)
    # Getting the type of 'w' (line 759)
    w_463953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 4), 'w')
    # Getting the type of 'None' (line 759)
    None_463954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 16), 'None')
    
    (may_be_463955, more_types_in_union_463956) = may_not_be_none(w_463953, None_463954)

    if may_be_463955:

        if more_types_in_union_463956:
            # Runtime conditional SSA (line 759)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 760):
        
        # Assigning a Call to a Name (line 760):
        
        # Call to _validate_vector(...): (line 760)
        # Processing the call arguments (line 760)
        # Getting the type of 'w' (line 760)
        w_463958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 29), 'w', False)
        # Processing the call keyword arguments (line 760)
        kwargs_463959 = {}
        # Getting the type of '_validate_vector' (line 760)
        _validate_vector_463957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 760)
        _validate_vector_call_result_463960 = invoke(stypy.reporting.localization.Localization(__file__, 760, 12), _validate_vector_463957, *[w_463958], **kwargs_463959)
        
        # Assigning a type to the variable 'w' (line 760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'w', _validate_vector_call_result_463960)
        
        # Assigning a BinOp to a Name (line 761):
        
        # Assigning a BinOp to a Name (line 761):
        # Getting the type of 'w' (line 761)
        w_463961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 18), 'w')
        # Getting the type of 'nonzero' (line 761)
        nonzero_463962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 22), 'nonzero')
        # Applying the binary operator '*' (line 761)
        result_mul_463963 = python_operator(stypy.reporting.localization.Localization(__file__, 761, 18), '*', w_463961, nonzero_463962)
        
        # Assigning a type to the variable 'nonzero' (line 761)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'nonzero', result_mul_463963)
        
        # Assigning a BinOp to a Name (line 762):
        
        # Assigning a BinOp to a Name (line 762):
        # Getting the type of 'w' (line 762)
        w_463964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 26), 'w')
        # Getting the type of 'unequal_nonzero' (line 762)
        unequal_nonzero_463965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 30), 'unequal_nonzero')
        # Applying the binary operator '*' (line 762)
        result_mul_463966 = python_operator(stypy.reporting.localization.Localization(__file__, 762, 26), '*', w_463964, unequal_nonzero_463965)
        
        # Assigning a type to the variable 'unequal_nonzero' (line 762)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 762, 8), 'unequal_nonzero', result_mul_463966)

        if more_types_in_union_463956:
            # SSA join for if statement (line 759)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a BinOp to a Name (line 763):
    
    # Assigning a BinOp to a Name (line 763):
    
    # Call to double(...): (line 763)
    # Processing the call arguments (line 763)
    
    # Call to sum(...): (line 763)
    # Processing the call keyword arguments (line 763)
    kwargs_463971 = {}
    # Getting the type of 'unequal_nonzero' (line 763)
    unequal_nonzero_463969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 21), 'unequal_nonzero', False)
    # Obtaining the member 'sum' of a type (line 763)
    sum_463970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 21), unequal_nonzero_463969, 'sum')
    # Calling sum(args, kwargs) (line 763)
    sum_call_result_463972 = invoke(stypy.reporting.localization.Localization(__file__, 763, 21), sum_463970, *[], **kwargs_463971)
    
    # Processing the call keyword arguments (line 763)
    kwargs_463973 = {}
    # Getting the type of 'np' (line 763)
    np_463967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 11), 'np', False)
    # Obtaining the member 'double' of a type (line 763)
    double_463968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 11), np_463967, 'double')
    # Calling double(args, kwargs) (line 763)
    double_call_result_463974 = invoke(stypy.reporting.localization.Localization(__file__, 763, 11), double_463968, *[sum_call_result_463972], **kwargs_463973)
    
    
    # Call to double(...): (line 763)
    # Processing the call arguments (line 763)
    
    # Call to sum(...): (line 763)
    # Processing the call keyword arguments (line 763)
    kwargs_463979 = {}
    # Getting the type of 'nonzero' (line 763)
    nonzero_463977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 56), 'nonzero', False)
    # Obtaining the member 'sum' of a type (line 763)
    sum_463978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 56), nonzero_463977, 'sum')
    # Calling sum(args, kwargs) (line 763)
    sum_call_result_463980 = invoke(stypy.reporting.localization.Localization(__file__, 763, 56), sum_463978, *[], **kwargs_463979)
    
    # Processing the call keyword arguments (line 763)
    kwargs_463981 = {}
    # Getting the type of 'np' (line 763)
    np_463975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 46), 'np', False)
    # Obtaining the member 'double' of a type (line 763)
    double_463976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 46), np_463975, 'double')
    # Calling double(args, kwargs) (line 763)
    double_call_result_463982 = invoke(stypy.reporting.localization.Localization(__file__, 763, 46), double_463976, *[sum_call_result_463980], **kwargs_463981)
    
    # Applying the binary operator 'div' (line 763)
    result_div_463983 = python_operator(stypy.reporting.localization.Localization(__file__, 763, 11), 'div', double_call_result_463974, double_call_result_463982)
    
    # Assigning a type to the variable 'dist' (line 763)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 4), 'dist', result_div_463983)
    # Getting the type of 'dist' (line 764)
    dist_463984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 11), 'dist')
    # Assigning a type to the variable 'stypy_return_type' (line 764)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 764, 4), 'stypy_return_type', dist_463984)
    
    # ################# End of 'jaccard(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'jaccard' in the type store
    # Getting the type of 'stypy_return_type' (line 723)
    stypy_return_type_463985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_463985)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'jaccard'
    return stypy_return_type_463985

# Assigning a type to the variable 'jaccard' (line 723)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 0), 'jaccard', jaccard)

@norecursion
def kulsinski(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 767)
    None_463986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 22), 'None')
    defaults = [None_463986]
    # Create a new context for function 'kulsinski'
    module_type_store = module_type_store.open_function_context('kulsinski', 767, 0, False)
    
    # Passed parameters checking function
    kulsinski.stypy_localization = localization
    kulsinski.stypy_type_of_self = None
    kulsinski.stypy_type_store = module_type_store
    kulsinski.stypy_function_name = 'kulsinski'
    kulsinski.stypy_param_names_list = ['u', 'v', 'w']
    kulsinski.stypy_varargs_param_name = None
    kulsinski.stypy_kwargs_param_name = None
    kulsinski.stypy_call_defaults = defaults
    kulsinski.stypy_call_varargs = varargs
    kulsinski.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'kulsinski', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'kulsinski', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'kulsinski(...)' code ##################

    str_463987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, (-1)), 'str', '\n    Computes the Kulsinski dissimilarity between two boolean 1-D arrays.\n\n    The Kulsinski dissimilarity between two boolean 1-D arrays `u` and `v`,\n    is defined as\n\n    .. math::\n\n         \\frac{c_{TF} + c_{FT} - c_{TT} + n}\n              {c_{FT} + c_{TF} + n}\n\n    where :math:`c_{ij}` is the number of occurrences of\n    :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for\n    :math:`k < n`.\n\n    Parameters\n    ----------\n    u : (N,) array_like, bool\n        Input array.\n    v : (N,) array_like, bool\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    kulsinski : double\n        The Kulsinski distance between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 799):
    
    # Assigning a Call to a Name (line 799):
    
    # Call to _validate_vector(...): (line 799)
    # Processing the call arguments (line 799)
    # Getting the type of 'u' (line 799)
    u_463989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 25), 'u', False)
    # Processing the call keyword arguments (line 799)
    kwargs_463990 = {}
    # Getting the type of '_validate_vector' (line 799)
    _validate_vector_463988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 799)
    _validate_vector_call_result_463991 = invoke(stypy.reporting.localization.Localization(__file__, 799, 8), _validate_vector_463988, *[u_463989], **kwargs_463990)
    
    # Assigning a type to the variable 'u' (line 799)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 4), 'u', _validate_vector_call_result_463991)
    
    # Assigning a Call to a Name (line 800):
    
    # Assigning a Call to a Name (line 800):
    
    # Call to _validate_vector(...): (line 800)
    # Processing the call arguments (line 800)
    # Getting the type of 'v' (line 800)
    v_463993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 25), 'v', False)
    # Processing the call keyword arguments (line 800)
    kwargs_463994 = {}
    # Getting the type of '_validate_vector' (line 800)
    _validate_vector_463992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 800)
    _validate_vector_call_result_463995 = invoke(stypy.reporting.localization.Localization(__file__, 800, 8), _validate_vector_463992, *[v_463993], **kwargs_463994)
    
    # Assigning a type to the variable 'v' (line 800)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 4), 'v', _validate_vector_call_result_463995)
    
    # Type idiom detected: calculating its left and rigth part (line 801)
    # Getting the type of 'w' (line 801)
    w_463996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 7), 'w')
    # Getting the type of 'None' (line 801)
    None_463997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'None')
    
    (may_be_463998, more_types_in_union_463999) = may_be_none(w_463996, None_463997)

    if may_be_463998:

        if more_types_in_union_463999:
            # Runtime conditional SSA (line 801)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 802):
        
        # Assigning a Call to a Name (line 802):
        
        # Call to float(...): (line 802)
        # Processing the call arguments (line 802)
        
        # Call to len(...): (line 802)
        # Processing the call arguments (line 802)
        # Getting the type of 'u' (line 802)
        u_464002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 22), 'u', False)
        # Processing the call keyword arguments (line 802)
        kwargs_464003 = {}
        # Getting the type of 'len' (line 802)
        len_464001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 18), 'len', False)
        # Calling len(args, kwargs) (line 802)
        len_call_result_464004 = invoke(stypy.reporting.localization.Localization(__file__, 802, 18), len_464001, *[u_464002], **kwargs_464003)
        
        # Processing the call keyword arguments (line 802)
        kwargs_464005 = {}
        # Getting the type of 'float' (line 802)
        float_464000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'float', False)
        # Calling float(args, kwargs) (line 802)
        float_call_result_464006 = invoke(stypy.reporting.localization.Localization(__file__, 802, 12), float_464000, *[len_call_result_464004], **kwargs_464005)
        
        # Assigning a type to the variable 'n' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'n', float_call_result_464006)

        if more_types_in_union_463999:
            # Runtime conditional SSA for else branch (line 801)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_463998) or more_types_in_union_463999):
        
        # Assigning a Call to a Name (line 804):
        
        # Assigning a Call to a Name (line 804):
        
        # Call to _validate_vector(...): (line 804)
        # Processing the call arguments (line 804)
        # Getting the type of 'w' (line 804)
        w_464008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 29), 'w', False)
        # Processing the call keyword arguments (line 804)
        kwargs_464009 = {}
        # Getting the type of '_validate_vector' (line 804)
        _validate_vector_464007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 804)
        _validate_vector_call_result_464010 = invoke(stypy.reporting.localization.Localization(__file__, 804, 12), _validate_vector_464007, *[w_464008], **kwargs_464009)
        
        # Assigning a type to the variable 'w' (line 804)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 8), 'w', _validate_vector_call_result_464010)
        
        # Assigning a Call to a Name (line 805):
        
        # Assigning a Call to a Name (line 805):
        
        # Call to sum(...): (line 805)
        # Processing the call keyword arguments (line 805)
        kwargs_464013 = {}
        # Getting the type of 'w' (line 805)
        w_464011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 12), 'w', False)
        # Obtaining the member 'sum' of a type (line 805)
        sum_464012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 12), w_464011, 'sum')
        # Calling sum(args, kwargs) (line 805)
        sum_call_result_464014 = invoke(stypy.reporting.localization.Localization(__file__, 805, 12), sum_464012, *[], **kwargs_464013)
        
        # Assigning a type to the variable 'n' (line 805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 8), 'n', sum_call_result_464014)

        if (may_be_463998 and more_types_in_union_463999):
            # SSA join for if statement (line 801)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Tuple (line 806):
    
    # Assigning a Subscript to a Name (line 806):
    
    # Obtaining the type of the subscript
    int_464015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 806)
    # Processing the call arguments (line 806)
    # Getting the type of 'u' (line 806)
    u_464017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 49), 'u', False)
    # Getting the type of 'v' (line 806)
    v_464018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 52), 'v', False)
    # Processing the call keyword arguments (line 806)
    # Getting the type of 'w' (line 806)
    w_464019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 57), 'w', False)
    keyword_464020 = w_464019
    kwargs_464021 = {'w': keyword_464020}
    # Getting the type of '_nbool_correspond_all' (line 806)
    _nbool_correspond_all_464016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 806)
    _nbool_correspond_all_call_result_464022 = invoke(stypy.reporting.localization.Localization(__file__, 806, 27), _nbool_correspond_all_464016, *[u_464017, v_464018], **kwargs_464021)
    
    # Obtaining the member '__getitem__' of a type (line 806)
    getitem___464023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 4), _nbool_correspond_all_call_result_464022, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 806)
    subscript_call_result_464024 = invoke(stypy.reporting.localization.Localization(__file__, 806, 4), getitem___464023, int_464015)
    
    # Assigning a type to the variable 'tuple_var_assignment_462792' (line 806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'tuple_var_assignment_462792', subscript_call_result_464024)
    
    # Assigning a Subscript to a Name (line 806):
    
    # Obtaining the type of the subscript
    int_464025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 806)
    # Processing the call arguments (line 806)
    # Getting the type of 'u' (line 806)
    u_464027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 49), 'u', False)
    # Getting the type of 'v' (line 806)
    v_464028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 52), 'v', False)
    # Processing the call keyword arguments (line 806)
    # Getting the type of 'w' (line 806)
    w_464029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 57), 'w', False)
    keyword_464030 = w_464029
    kwargs_464031 = {'w': keyword_464030}
    # Getting the type of '_nbool_correspond_all' (line 806)
    _nbool_correspond_all_464026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 806)
    _nbool_correspond_all_call_result_464032 = invoke(stypy.reporting.localization.Localization(__file__, 806, 27), _nbool_correspond_all_464026, *[u_464027, v_464028], **kwargs_464031)
    
    # Obtaining the member '__getitem__' of a type (line 806)
    getitem___464033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 4), _nbool_correspond_all_call_result_464032, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 806)
    subscript_call_result_464034 = invoke(stypy.reporting.localization.Localization(__file__, 806, 4), getitem___464033, int_464025)
    
    # Assigning a type to the variable 'tuple_var_assignment_462793' (line 806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'tuple_var_assignment_462793', subscript_call_result_464034)
    
    # Assigning a Subscript to a Name (line 806):
    
    # Obtaining the type of the subscript
    int_464035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 806)
    # Processing the call arguments (line 806)
    # Getting the type of 'u' (line 806)
    u_464037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 49), 'u', False)
    # Getting the type of 'v' (line 806)
    v_464038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 52), 'v', False)
    # Processing the call keyword arguments (line 806)
    # Getting the type of 'w' (line 806)
    w_464039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 57), 'w', False)
    keyword_464040 = w_464039
    kwargs_464041 = {'w': keyword_464040}
    # Getting the type of '_nbool_correspond_all' (line 806)
    _nbool_correspond_all_464036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 806)
    _nbool_correspond_all_call_result_464042 = invoke(stypy.reporting.localization.Localization(__file__, 806, 27), _nbool_correspond_all_464036, *[u_464037, v_464038], **kwargs_464041)
    
    # Obtaining the member '__getitem__' of a type (line 806)
    getitem___464043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 4), _nbool_correspond_all_call_result_464042, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 806)
    subscript_call_result_464044 = invoke(stypy.reporting.localization.Localization(__file__, 806, 4), getitem___464043, int_464035)
    
    # Assigning a type to the variable 'tuple_var_assignment_462794' (line 806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'tuple_var_assignment_462794', subscript_call_result_464044)
    
    # Assigning a Subscript to a Name (line 806):
    
    # Obtaining the type of the subscript
    int_464045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 806)
    # Processing the call arguments (line 806)
    # Getting the type of 'u' (line 806)
    u_464047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 49), 'u', False)
    # Getting the type of 'v' (line 806)
    v_464048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 52), 'v', False)
    # Processing the call keyword arguments (line 806)
    # Getting the type of 'w' (line 806)
    w_464049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 57), 'w', False)
    keyword_464050 = w_464049
    kwargs_464051 = {'w': keyword_464050}
    # Getting the type of '_nbool_correspond_all' (line 806)
    _nbool_correspond_all_464046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 806)
    _nbool_correspond_all_call_result_464052 = invoke(stypy.reporting.localization.Localization(__file__, 806, 27), _nbool_correspond_all_464046, *[u_464047, v_464048], **kwargs_464051)
    
    # Obtaining the member '__getitem__' of a type (line 806)
    getitem___464053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 4), _nbool_correspond_all_call_result_464052, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 806)
    subscript_call_result_464054 = invoke(stypy.reporting.localization.Localization(__file__, 806, 4), getitem___464053, int_464045)
    
    # Assigning a type to the variable 'tuple_var_assignment_462795' (line 806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'tuple_var_assignment_462795', subscript_call_result_464054)
    
    # Assigning a Name to a Name (line 806):
    # Getting the type of 'tuple_var_assignment_462792' (line 806)
    tuple_var_assignment_462792_464055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'tuple_var_assignment_462792')
    # Assigning a type to the variable 'nff' (line 806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 5), 'nff', tuple_var_assignment_462792_464055)
    
    # Assigning a Name to a Name (line 806):
    # Getting the type of 'tuple_var_assignment_462793' (line 806)
    tuple_var_assignment_462793_464056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'tuple_var_assignment_462793')
    # Assigning a type to the variable 'nft' (line 806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 10), 'nft', tuple_var_assignment_462793_464056)
    
    # Assigning a Name to a Name (line 806):
    # Getting the type of 'tuple_var_assignment_462794' (line 806)
    tuple_var_assignment_462794_464057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'tuple_var_assignment_462794')
    # Assigning a type to the variable 'ntf' (line 806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 15), 'ntf', tuple_var_assignment_462794_464057)
    
    # Assigning a Name to a Name (line 806):
    # Getting the type of 'tuple_var_assignment_462795' (line 806)
    tuple_var_assignment_462795_464058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 4), 'tuple_var_assignment_462795')
    # Assigning a type to the variable 'ntt' (line 806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 20), 'ntt', tuple_var_assignment_462795_464058)
    # Getting the type of 'ntf' (line 808)
    ntf_464059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 12), 'ntf')
    # Getting the type of 'nft' (line 808)
    nft_464060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 18), 'nft')
    # Applying the binary operator '+' (line 808)
    result_add_464061 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 12), '+', ntf_464059, nft_464060)
    
    # Getting the type of 'ntt' (line 808)
    ntt_464062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 24), 'ntt')
    # Applying the binary operator '-' (line 808)
    result_sub_464063 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 22), '-', result_add_464061, ntt_464062)
    
    # Getting the type of 'n' (line 808)
    n_464064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 30), 'n')
    # Applying the binary operator '+' (line 808)
    result_add_464065 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 28), '+', result_sub_464063, n_464064)
    
    # Getting the type of 'ntf' (line 808)
    ntf_464066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 36), 'ntf')
    # Getting the type of 'nft' (line 808)
    nft_464067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 42), 'nft')
    # Applying the binary operator '+' (line 808)
    result_add_464068 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 36), '+', ntf_464066, nft_464067)
    
    # Getting the type of 'n' (line 808)
    n_464069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 48), 'n')
    # Applying the binary operator '+' (line 808)
    result_add_464070 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 46), '+', result_add_464068, n_464069)
    
    # Applying the binary operator 'div' (line 808)
    result_div_464071 = python_operator(stypy.reporting.localization.Localization(__file__, 808, 11), 'div', result_add_464065, result_add_464070)
    
    # Assigning a type to the variable 'stypy_return_type' (line 808)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 4), 'stypy_return_type', result_div_464071)
    
    # ################# End of 'kulsinski(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'kulsinski' in the type store
    # Getting the type of 'stypy_return_type' (line 767)
    stypy_return_type_464072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464072)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'kulsinski'
    return stypy_return_type_464072

# Assigning a type to the variable 'kulsinski' (line 767)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 0), 'kulsinski', kulsinski)

@norecursion
def seuclidean(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'seuclidean'
    module_type_store = module_type_store.open_function_context('seuclidean', 811, 0, False)
    
    # Passed parameters checking function
    seuclidean.stypy_localization = localization
    seuclidean.stypy_type_of_self = None
    seuclidean.stypy_type_store = module_type_store
    seuclidean.stypy_function_name = 'seuclidean'
    seuclidean.stypy_param_names_list = ['u', 'v', 'V']
    seuclidean.stypy_varargs_param_name = None
    seuclidean.stypy_kwargs_param_name = None
    seuclidean.stypy_call_defaults = defaults
    seuclidean.stypy_call_varargs = varargs
    seuclidean.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'seuclidean', ['u', 'v', 'V'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'seuclidean', localization, ['u', 'v', 'V'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'seuclidean(...)' code ##################

    str_464073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, (-1)), 'str', '\n    Returns the standardized Euclidean distance between two 1-D arrays.\n\n    The standardized Euclidean distance between `u` and `v`.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    V : (N,) array_like\n        `V` is an 1-D array of component variances. It is usually computed\n        among a larger collection vectors.\n\n    Returns\n    -------\n    seuclidean : double\n        The standardized Euclidean distance between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 833):
    
    # Assigning a Call to a Name (line 833):
    
    # Call to _validate_vector(...): (line 833)
    # Processing the call arguments (line 833)
    # Getting the type of 'u' (line 833)
    u_464075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 25), 'u', False)
    # Processing the call keyword arguments (line 833)
    kwargs_464076 = {}
    # Getting the type of '_validate_vector' (line 833)
    _validate_vector_464074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 833)
    _validate_vector_call_result_464077 = invoke(stypy.reporting.localization.Localization(__file__, 833, 8), _validate_vector_464074, *[u_464075], **kwargs_464076)
    
    # Assigning a type to the variable 'u' (line 833)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 4), 'u', _validate_vector_call_result_464077)
    
    # Assigning a Call to a Name (line 834):
    
    # Assigning a Call to a Name (line 834):
    
    # Call to _validate_vector(...): (line 834)
    # Processing the call arguments (line 834)
    # Getting the type of 'v' (line 834)
    v_464079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 25), 'v', False)
    # Processing the call keyword arguments (line 834)
    kwargs_464080 = {}
    # Getting the type of '_validate_vector' (line 834)
    _validate_vector_464078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 834)
    _validate_vector_call_result_464081 = invoke(stypy.reporting.localization.Localization(__file__, 834, 8), _validate_vector_464078, *[v_464079], **kwargs_464080)
    
    # Assigning a type to the variable 'v' (line 834)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 4), 'v', _validate_vector_call_result_464081)
    
    # Assigning a Call to a Name (line 835):
    
    # Assigning a Call to a Name (line 835):
    
    # Call to _validate_vector(...): (line 835)
    # Processing the call arguments (line 835)
    # Getting the type of 'V' (line 835)
    V_464083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 25), 'V', False)
    # Processing the call keyword arguments (line 835)
    # Getting the type of 'np' (line 835)
    np_464084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 34), 'np', False)
    # Obtaining the member 'float64' of a type (line 835)
    float64_464085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 34), np_464084, 'float64')
    keyword_464086 = float64_464085
    kwargs_464087 = {'dtype': keyword_464086}
    # Getting the type of '_validate_vector' (line 835)
    _validate_vector_464082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 835)
    _validate_vector_call_result_464088 = invoke(stypy.reporting.localization.Localization(__file__, 835, 8), _validate_vector_464082, *[V_464083], **kwargs_464087)
    
    # Assigning a type to the variable 'V' (line 835)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 4), 'V', _validate_vector_call_result_464088)
    
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    int_464089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 15), 'int')
    # Getting the type of 'V' (line 836)
    V_464090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 7), 'V')
    # Obtaining the member 'shape' of a type (line 836)
    shape_464091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 7), V_464090, 'shape')
    # Obtaining the member '__getitem__' of a type (line 836)
    getitem___464092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 7), shape_464091, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 836)
    subscript_call_result_464093 = invoke(stypy.reporting.localization.Localization(__file__, 836, 7), getitem___464092, int_464089)
    
    
    # Obtaining the type of the subscript
    int_464094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 29), 'int')
    # Getting the type of 'u' (line 836)
    u_464095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 21), 'u')
    # Obtaining the member 'shape' of a type (line 836)
    shape_464096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 21), u_464095, 'shape')
    # Obtaining the member '__getitem__' of a type (line 836)
    getitem___464097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 21), shape_464096, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 836)
    subscript_call_result_464098 = invoke(stypy.reporting.localization.Localization(__file__, 836, 21), getitem___464097, int_464094)
    
    # Applying the binary operator '!=' (line 836)
    result_ne_464099 = python_operator(stypy.reporting.localization.Localization(__file__, 836, 7), '!=', subscript_call_result_464093, subscript_call_result_464098)
    
    
    
    # Obtaining the type of the subscript
    int_464100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 43), 'int')
    # Getting the type of 'u' (line 836)
    u_464101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 35), 'u')
    # Obtaining the member 'shape' of a type (line 836)
    shape_464102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 35), u_464101, 'shape')
    # Obtaining the member '__getitem__' of a type (line 836)
    getitem___464103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 35), shape_464102, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 836)
    subscript_call_result_464104 = invoke(stypy.reporting.localization.Localization(__file__, 836, 35), getitem___464103, int_464100)
    
    
    # Obtaining the type of the subscript
    int_464105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 57), 'int')
    # Getting the type of 'v' (line 836)
    v_464106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 49), 'v')
    # Obtaining the member 'shape' of a type (line 836)
    shape_464107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 49), v_464106, 'shape')
    # Obtaining the member '__getitem__' of a type (line 836)
    getitem___464108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 49), shape_464107, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 836)
    subscript_call_result_464109 = invoke(stypy.reporting.localization.Localization(__file__, 836, 49), getitem___464108, int_464105)
    
    # Applying the binary operator '!=' (line 836)
    result_ne_464110 = python_operator(stypy.reporting.localization.Localization(__file__, 836, 35), '!=', subscript_call_result_464104, subscript_call_result_464109)
    
    # Applying the binary operator 'or' (line 836)
    result_or_keyword_464111 = python_operator(stypy.reporting.localization.Localization(__file__, 836, 7), 'or', result_ne_464099, result_ne_464110)
    
    # Testing the type of an if condition (line 836)
    if_condition_464112 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 836, 4), result_or_keyword_464111)
    # Assigning a type to the variable 'if_condition_464112' (line 836)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 4), 'if_condition_464112', if_condition_464112)
    # SSA begins for if statement (line 836)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to TypeError(...): (line 837)
    # Processing the call arguments (line 837)
    str_464114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 24), 'str', 'V must be a 1-D array of the same dimension as u and v.')
    # Processing the call keyword arguments (line 837)
    kwargs_464115 = {}
    # Getting the type of 'TypeError' (line 837)
    TypeError_464113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 14), 'TypeError', False)
    # Calling TypeError(args, kwargs) (line 837)
    TypeError_call_result_464116 = invoke(stypy.reporting.localization.Localization(__file__, 837, 14), TypeError_464113, *[str_464114], **kwargs_464115)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 837, 8), TypeError_call_result_464116, 'raise parameter', BaseException)
    # SSA join for if statement (line 836)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to euclidean(...): (line 839)
    # Processing the call arguments (line 839)
    # Getting the type of 'u' (line 839)
    u_464118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 21), 'u', False)
    # Getting the type of 'v' (line 839)
    v_464119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 24), 'v', False)
    # Processing the call keyword arguments (line 839)
    int_464120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 29), 'int')
    # Getting the type of 'V' (line 839)
    V_464121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 31), 'V', False)
    # Applying the binary operator 'div' (line 839)
    result_div_464122 = python_operator(stypy.reporting.localization.Localization(__file__, 839, 29), 'div', int_464120, V_464121)
    
    keyword_464123 = result_div_464122
    kwargs_464124 = {'w': keyword_464123}
    # Getting the type of 'euclidean' (line 839)
    euclidean_464117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 11), 'euclidean', False)
    # Calling euclidean(args, kwargs) (line 839)
    euclidean_call_result_464125 = invoke(stypy.reporting.localization.Localization(__file__, 839, 11), euclidean_464117, *[u_464118, v_464119], **kwargs_464124)
    
    # Assigning a type to the variable 'stypy_return_type' (line 839)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 4), 'stypy_return_type', euclidean_call_result_464125)
    
    # ################# End of 'seuclidean(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'seuclidean' in the type store
    # Getting the type of 'stypy_return_type' (line 811)
    stypy_return_type_464126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464126)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'seuclidean'
    return stypy_return_type_464126

# Assigning a type to the variable 'seuclidean' (line 811)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 0), 'seuclidean', seuclidean)

@norecursion
def cityblock(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 842)
    None_464127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 22), 'None')
    defaults = [None_464127]
    # Create a new context for function 'cityblock'
    module_type_store = module_type_store.open_function_context('cityblock', 842, 0, False)
    
    # Passed parameters checking function
    cityblock.stypy_localization = localization
    cityblock.stypy_type_of_self = None
    cityblock.stypy_type_store = module_type_store
    cityblock.stypy_function_name = 'cityblock'
    cityblock.stypy_param_names_list = ['u', 'v', 'w']
    cityblock.stypy_varargs_param_name = None
    cityblock.stypy_kwargs_param_name = None
    cityblock.stypy_call_defaults = defaults
    cityblock.stypy_call_varargs = varargs
    cityblock.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'cityblock', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'cityblock', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'cityblock(...)' code ##################

    str_464128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, (-1)), 'str', '\n    Computes the City Block (Manhattan) distance.\n\n    Computes the Manhattan distance between two 1-D arrays `u` and `v`,\n    which is defined as\n\n    .. math::\n\n       \\sum_i {\\left| u_i - v_i \\right|}.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    cityblock : double\n        The City Block (Manhattan) distance between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 869):
    
    # Assigning a Call to a Name (line 869):
    
    # Call to _validate_vector(...): (line 869)
    # Processing the call arguments (line 869)
    # Getting the type of 'u' (line 869)
    u_464130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 25), 'u', False)
    # Processing the call keyword arguments (line 869)
    kwargs_464131 = {}
    # Getting the type of '_validate_vector' (line 869)
    _validate_vector_464129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 869)
    _validate_vector_call_result_464132 = invoke(stypy.reporting.localization.Localization(__file__, 869, 8), _validate_vector_464129, *[u_464130], **kwargs_464131)
    
    # Assigning a type to the variable 'u' (line 869)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 869, 4), 'u', _validate_vector_call_result_464132)
    
    # Assigning a Call to a Name (line 870):
    
    # Assigning a Call to a Name (line 870):
    
    # Call to _validate_vector(...): (line 870)
    # Processing the call arguments (line 870)
    # Getting the type of 'v' (line 870)
    v_464134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 25), 'v', False)
    # Processing the call keyword arguments (line 870)
    kwargs_464135 = {}
    # Getting the type of '_validate_vector' (line 870)
    _validate_vector_464133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 870)
    _validate_vector_call_result_464136 = invoke(stypy.reporting.localization.Localization(__file__, 870, 8), _validate_vector_464133, *[v_464134], **kwargs_464135)
    
    # Assigning a type to the variable 'v' (line 870)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 870, 4), 'v', _validate_vector_call_result_464136)
    
    # Assigning a Call to a Name (line 871):
    
    # Assigning a Call to a Name (line 871):
    
    # Call to abs(...): (line 871)
    # Processing the call arguments (line 871)
    # Getting the type of 'u' (line 871)
    u_464138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 18), 'u', False)
    # Getting the type of 'v' (line 871)
    v_464139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 22), 'v', False)
    # Applying the binary operator '-' (line 871)
    result_sub_464140 = python_operator(stypy.reporting.localization.Localization(__file__, 871, 18), '-', u_464138, v_464139)
    
    # Processing the call keyword arguments (line 871)
    kwargs_464141 = {}
    # Getting the type of 'abs' (line 871)
    abs_464137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 14), 'abs', False)
    # Calling abs(args, kwargs) (line 871)
    abs_call_result_464142 = invoke(stypy.reporting.localization.Localization(__file__, 871, 14), abs_464137, *[result_sub_464140], **kwargs_464141)
    
    # Assigning a type to the variable 'l1_diff' (line 871)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 4), 'l1_diff', abs_call_result_464142)
    
    # Type idiom detected: calculating its left and rigth part (line 872)
    # Getting the type of 'w' (line 872)
    w_464143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 4), 'w')
    # Getting the type of 'None' (line 872)
    None_464144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 16), 'None')
    
    (may_be_464145, more_types_in_union_464146) = may_not_be_none(w_464143, None_464144)

    if may_be_464145:

        if more_types_in_union_464146:
            # Runtime conditional SSA (line 872)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 873):
        
        # Assigning a Call to a Name (line 873):
        
        # Call to _validate_vector(...): (line 873)
        # Processing the call arguments (line 873)
        # Getting the type of 'w' (line 873)
        w_464148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 29), 'w', False)
        # Processing the call keyword arguments (line 873)
        kwargs_464149 = {}
        # Getting the type of '_validate_vector' (line 873)
        _validate_vector_464147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 873)
        _validate_vector_call_result_464150 = invoke(stypy.reporting.localization.Localization(__file__, 873, 12), _validate_vector_464147, *[w_464148], **kwargs_464149)
        
        # Assigning a type to the variable 'w' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'w', _validate_vector_call_result_464150)
        
        # Assigning a BinOp to a Name (line 874):
        
        # Assigning a BinOp to a Name (line 874):
        # Getting the type of 'w' (line 874)
        w_464151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 18), 'w')
        # Getting the type of 'l1_diff' (line 874)
        l1_diff_464152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 22), 'l1_diff')
        # Applying the binary operator '*' (line 874)
        result_mul_464153 = python_operator(stypy.reporting.localization.Localization(__file__, 874, 18), '*', w_464151, l1_diff_464152)
        
        # Assigning a type to the variable 'l1_diff' (line 874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'l1_diff', result_mul_464153)

        if more_types_in_union_464146:
            # SSA join for if statement (line 872)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to sum(...): (line 875)
    # Processing the call keyword arguments (line 875)
    kwargs_464156 = {}
    # Getting the type of 'l1_diff' (line 875)
    l1_diff_464154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 11), 'l1_diff', False)
    # Obtaining the member 'sum' of a type (line 875)
    sum_464155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 11), l1_diff_464154, 'sum')
    # Calling sum(args, kwargs) (line 875)
    sum_call_result_464157 = invoke(stypy.reporting.localization.Localization(__file__, 875, 11), sum_464155, *[], **kwargs_464156)
    
    # Assigning a type to the variable 'stypy_return_type' (line 875)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 875, 4), 'stypy_return_type', sum_call_result_464157)
    
    # ################# End of 'cityblock(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'cityblock' in the type store
    # Getting the type of 'stypy_return_type' (line 842)
    stypy_return_type_464158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464158)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'cityblock'
    return stypy_return_type_464158

# Assigning a type to the variable 'cityblock' (line 842)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 0), 'cityblock', cityblock)

@norecursion
def mahalanobis(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'mahalanobis'
    module_type_store = module_type_store.open_function_context('mahalanobis', 878, 0, False)
    
    # Passed parameters checking function
    mahalanobis.stypy_localization = localization
    mahalanobis.stypy_type_of_self = None
    mahalanobis.stypy_type_store = module_type_store
    mahalanobis.stypy_function_name = 'mahalanobis'
    mahalanobis.stypy_param_names_list = ['u', 'v', 'VI']
    mahalanobis.stypy_varargs_param_name = None
    mahalanobis.stypy_kwargs_param_name = None
    mahalanobis.stypy_call_defaults = defaults
    mahalanobis.stypy_call_varargs = varargs
    mahalanobis.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'mahalanobis', ['u', 'v', 'VI'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'mahalanobis', localization, ['u', 'v', 'VI'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'mahalanobis(...)' code ##################

    str_464159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, (-1)), 'str', '\n    Computes the Mahalanobis distance between two 1-D arrays.\n\n    The Mahalanobis distance between 1-D arrays `u` and `v`, is defined as\n\n    .. math::\n\n       \\sqrt{ (u-v) V^{-1} (u-v)^T }\n\n    where ``V`` is the covariance matrix.  Note that the argument `VI`\n    is the inverse of ``V``.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    VI : ndarray\n        The inverse of the covariance matrix.\n\n    Returns\n    -------\n    mahalanobis : double\n        The Mahalanobis distance between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 906):
    
    # Assigning a Call to a Name (line 906):
    
    # Call to _validate_vector(...): (line 906)
    # Processing the call arguments (line 906)
    # Getting the type of 'u' (line 906)
    u_464161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 25), 'u', False)
    # Processing the call keyword arguments (line 906)
    kwargs_464162 = {}
    # Getting the type of '_validate_vector' (line 906)
    _validate_vector_464160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 906)
    _validate_vector_call_result_464163 = invoke(stypy.reporting.localization.Localization(__file__, 906, 8), _validate_vector_464160, *[u_464161], **kwargs_464162)
    
    # Assigning a type to the variable 'u' (line 906)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 4), 'u', _validate_vector_call_result_464163)
    
    # Assigning a Call to a Name (line 907):
    
    # Assigning a Call to a Name (line 907):
    
    # Call to _validate_vector(...): (line 907)
    # Processing the call arguments (line 907)
    # Getting the type of 'v' (line 907)
    v_464165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 25), 'v', False)
    # Processing the call keyword arguments (line 907)
    kwargs_464166 = {}
    # Getting the type of '_validate_vector' (line 907)
    _validate_vector_464164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 907)
    _validate_vector_call_result_464167 = invoke(stypy.reporting.localization.Localization(__file__, 907, 8), _validate_vector_464164, *[v_464165], **kwargs_464166)
    
    # Assigning a type to the variable 'v' (line 907)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 4), 'v', _validate_vector_call_result_464167)
    
    # Assigning a Call to a Name (line 908):
    
    # Assigning a Call to a Name (line 908):
    
    # Call to atleast_2d(...): (line 908)
    # Processing the call arguments (line 908)
    # Getting the type of 'VI' (line 908)
    VI_464170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 23), 'VI', False)
    # Processing the call keyword arguments (line 908)
    kwargs_464171 = {}
    # Getting the type of 'np' (line 908)
    np_464168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 9), 'np', False)
    # Obtaining the member 'atleast_2d' of a type (line 908)
    atleast_2d_464169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 9), np_464168, 'atleast_2d')
    # Calling atleast_2d(args, kwargs) (line 908)
    atleast_2d_call_result_464172 = invoke(stypy.reporting.localization.Localization(__file__, 908, 9), atleast_2d_464169, *[VI_464170], **kwargs_464171)
    
    # Assigning a type to the variable 'VI' (line 908)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 4), 'VI', atleast_2d_call_result_464172)
    
    # Assigning a BinOp to a Name (line 909):
    
    # Assigning a BinOp to a Name (line 909):
    # Getting the type of 'u' (line 909)
    u_464173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 12), 'u')
    # Getting the type of 'v' (line 909)
    v_464174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 16), 'v')
    # Applying the binary operator '-' (line 909)
    result_sub_464175 = python_operator(stypy.reporting.localization.Localization(__file__, 909, 12), '-', u_464173, v_464174)
    
    # Assigning a type to the variable 'delta' (line 909)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 909, 4), 'delta', result_sub_464175)
    
    # Assigning a Call to a Name (line 910):
    
    # Assigning a Call to a Name (line 910):
    
    # Call to dot(...): (line 910)
    # Processing the call arguments (line 910)
    
    # Call to dot(...): (line 910)
    # Processing the call arguments (line 910)
    # Getting the type of 'delta' (line 910)
    delta_464180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 22), 'delta', False)
    # Getting the type of 'VI' (line 910)
    VI_464181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 29), 'VI', False)
    # Processing the call keyword arguments (line 910)
    kwargs_464182 = {}
    # Getting the type of 'np' (line 910)
    np_464178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 15), 'np', False)
    # Obtaining the member 'dot' of a type (line 910)
    dot_464179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 15), np_464178, 'dot')
    # Calling dot(args, kwargs) (line 910)
    dot_call_result_464183 = invoke(stypy.reporting.localization.Localization(__file__, 910, 15), dot_464179, *[delta_464180, VI_464181], **kwargs_464182)
    
    # Getting the type of 'delta' (line 910)
    delta_464184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 34), 'delta', False)
    # Processing the call keyword arguments (line 910)
    kwargs_464185 = {}
    # Getting the type of 'np' (line 910)
    np_464176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 8), 'np', False)
    # Obtaining the member 'dot' of a type (line 910)
    dot_464177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 8), np_464176, 'dot')
    # Calling dot(args, kwargs) (line 910)
    dot_call_result_464186 = invoke(stypy.reporting.localization.Localization(__file__, 910, 8), dot_464177, *[dot_call_result_464183, delta_464184], **kwargs_464185)
    
    # Assigning a type to the variable 'm' (line 910)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 910, 4), 'm', dot_call_result_464186)
    
    # Call to sqrt(...): (line 911)
    # Processing the call arguments (line 911)
    # Getting the type of 'm' (line 911)
    m_464189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 19), 'm', False)
    # Processing the call keyword arguments (line 911)
    kwargs_464190 = {}
    # Getting the type of 'np' (line 911)
    np_464187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 11), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 911)
    sqrt_464188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 911, 11), np_464187, 'sqrt')
    # Calling sqrt(args, kwargs) (line 911)
    sqrt_call_result_464191 = invoke(stypy.reporting.localization.Localization(__file__, 911, 11), sqrt_464188, *[m_464189], **kwargs_464190)
    
    # Assigning a type to the variable 'stypy_return_type' (line 911)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 911, 4), 'stypy_return_type', sqrt_call_result_464191)
    
    # ################# End of 'mahalanobis(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'mahalanobis' in the type store
    # Getting the type of 'stypy_return_type' (line 878)
    stypy_return_type_464192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464192)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'mahalanobis'
    return stypy_return_type_464192

# Assigning a type to the variable 'mahalanobis' (line 878)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 878, 0), 'mahalanobis', mahalanobis)

@norecursion
def chebyshev(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'chebyshev'
    module_type_store = module_type_store.open_function_context('chebyshev', 914, 0, False)
    
    # Passed parameters checking function
    chebyshev.stypy_localization = localization
    chebyshev.stypy_type_of_self = None
    chebyshev.stypy_type_store = module_type_store
    chebyshev.stypy_function_name = 'chebyshev'
    chebyshev.stypy_param_names_list = ['u', 'v']
    chebyshev.stypy_varargs_param_name = None
    chebyshev.stypy_kwargs_param_name = None
    chebyshev.stypy_call_defaults = defaults
    chebyshev.stypy_call_varargs = varargs
    chebyshev.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'chebyshev', ['u', 'v'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'chebyshev', localization, ['u', 'v'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'chebyshev(...)' code ##################

    str_464193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, (-1)), 'str', '\n    Computes the Chebyshev distance.\n\n    Computes the Chebyshev distance between two 1-D arrays `u` and `v`,\n    which is defined as\n\n    .. math::\n\n       \\max_i {|u_i-v_i|}.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input vector.\n    v : (N,) array_like\n        Input vector.\n\n    Returns\n    -------\n    chebyshev : double\n        The Chebyshev distance between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 938):
    
    # Assigning a Call to a Name (line 938):
    
    # Call to _validate_vector(...): (line 938)
    # Processing the call arguments (line 938)
    # Getting the type of 'u' (line 938)
    u_464195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 25), 'u', False)
    # Processing the call keyword arguments (line 938)
    kwargs_464196 = {}
    # Getting the type of '_validate_vector' (line 938)
    _validate_vector_464194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 938)
    _validate_vector_call_result_464197 = invoke(stypy.reporting.localization.Localization(__file__, 938, 8), _validate_vector_464194, *[u_464195], **kwargs_464196)
    
    # Assigning a type to the variable 'u' (line 938)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 4), 'u', _validate_vector_call_result_464197)
    
    # Assigning a Call to a Name (line 939):
    
    # Assigning a Call to a Name (line 939):
    
    # Call to _validate_vector(...): (line 939)
    # Processing the call arguments (line 939)
    # Getting the type of 'v' (line 939)
    v_464199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 25), 'v', False)
    # Processing the call keyword arguments (line 939)
    kwargs_464200 = {}
    # Getting the type of '_validate_vector' (line 939)
    _validate_vector_464198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 939)
    _validate_vector_call_result_464201 = invoke(stypy.reporting.localization.Localization(__file__, 939, 8), _validate_vector_464198, *[v_464199], **kwargs_464200)
    
    # Assigning a type to the variable 'v' (line 939)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 939, 4), 'v', _validate_vector_call_result_464201)
    
    # Call to max(...): (line 940)
    # Processing the call arguments (line 940)
    
    # Call to abs(...): (line 940)
    # Processing the call arguments (line 940)
    # Getting the type of 'u' (line 940)
    u_464204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 19), 'u', False)
    # Getting the type of 'v' (line 940)
    v_464205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 23), 'v', False)
    # Applying the binary operator '-' (line 940)
    result_sub_464206 = python_operator(stypy.reporting.localization.Localization(__file__, 940, 19), '-', u_464204, v_464205)
    
    # Processing the call keyword arguments (line 940)
    kwargs_464207 = {}
    # Getting the type of 'abs' (line 940)
    abs_464203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 15), 'abs', False)
    # Calling abs(args, kwargs) (line 940)
    abs_call_result_464208 = invoke(stypy.reporting.localization.Localization(__file__, 940, 15), abs_464203, *[result_sub_464206], **kwargs_464207)
    
    # Processing the call keyword arguments (line 940)
    kwargs_464209 = {}
    # Getting the type of 'max' (line 940)
    max_464202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 11), 'max', False)
    # Calling max(args, kwargs) (line 940)
    max_call_result_464210 = invoke(stypy.reporting.localization.Localization(__file__, 940, 11), max_464202, *[abs_call_result_464208], **kwargs_464209)
    
    # Assigning a type to the variable 'stypy_return_type' (line 940)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 4), 'stypy_return_type', max_call_result_464210)
    
    # ################# End of 'chebyshev(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'chebyshev' in the type store
    # Getting the type of 'stypy_return_type' (line 914)
    stypy_return_type_464211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464211)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'chebyshev'
    return stypy_return_type_464211

# Assigning a type to the variable 'chebyshev' (line 914)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 0), 'chebyshev', chebyshev)

@norecursion
def braycurtis(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 943)
    None_464212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 23), 'None')
    defaults = [None_464212]
    # Create a new context for function 'braycurtis'
    module_type_store = module_type_store.open_function_context('braycurtis', 943, 0, False)
    
    # Passed parameters checking function
    braycurtis.stypy_localization = localization
    braycurtis.stypy_type_of_self = None
    braycurtis.stypy_type_store = module_type_store
    braycurtis.stypy_function_name = 'braycurtis'
    braycurtis.stypy_param_names_list = ['u', 'v', 'w']
    braycurtis.stypy_varargs_param_name = None
    braycurtis.stypy_kwargs_param_name = None
    braycurtis.stypy_call_defaults = defaults
    braycurtis.stypy_call_varargs = varargs
    braycurtis.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'braycurtis', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'braycurtis', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'braycurtis(...)' code ##################

    str_464213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, (-1)), 'str', '\n    Computes the Bray-Curtis distance between two 1-D arrays.\n\n    Bray-Curtis distance is defined as\n\n    .. math::\n\n       \\sum{|u_i-v_i|} / \\sum{|u_i+v_i|}\n\n    The Bray-Curtis distance is in the range [0, 1] if all coordinates are\n    positive, and is undefined if the inputs are of length zero.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    braycurtis : double\n        The Bray-Curtis distance between 1-D arrays `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 972):
    
    # Assigning a Call to a Name (line 972):
    
    # Call to _validate_vector(...): (line 972)
    # Processing the call arguments (line 972)
    # Getting the type of 'u' (line 972)
    u_464215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 25), 'u', False)
    # Processing the call keyword arguments (line 972)
    kwargs_464216 = {}
    # Getting the type of '_validate_vector' (line 972)
    _validate_vector_464214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 972)
    _validate_vector_call_result_464217 = invoke(stypy.reporting.localization.Localization(__file__, 972, 8), _validate_vector_464214, *[u_464215], **kwargs_464216)
    
    # Assigning a type to the variable 'u' (line 972)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 972, 4), 'u', _validate_vector_call_result_464217)
    
    # Assigning a Call to a Name (line 973):
    
    # Assigning a Call to a Name (line 973):
    
    # Call to _validate_vector(...): (line 973)
    # Processing the call arguments (line 973)
    # Getting the type of 'v' (line 973)
    v_464219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 25), 'v', False)
    # Processing the call keyword arguments (line 973)
    # Getting the type of 'np' (line 973)
    np_464220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 34), 'np', False)
    # Obtaining the member 'float64' of a type (line 973)
    float64_464221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 34), np_464220, 'float64')
    keyword_464222 = float64_464221
    kwargs_464223 = {'dtype': keyword_464222}
    # Getting the type of '_validate_vector' (line 973)
    _validate_vector_464218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 973)
    _validate_vector_call_result_464224 = invoke(stypy.reporting.localization.Localization(__file__, 973, 8), _validate_vector_464218, *[v_464219], **kwargs_464223)
    
    # Assigning a type to the variable 'v' (line 973)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 4), 'v', _validate_vector_call_result_464224)
    
    # Assigning a Call to a Name (line 974):
    
    # Assigning a Call to a Name (line 974):
    
    # Call to abs(...): (line 974)
    # Processing the call arguments (line 974)
    # Getting the type of 'u' (line 974)
    u_464226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 18), 'u', False)
    # Getting the type of 'v' (line 974)
    v_464227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 22), 'v', False)
    # Applying the binary operator '-' (line 974)
    result_sub_464228 = python_operator(stypy.reporting.localization.Localization(__file__, 974, 18), '-', u_464226, v_464227)
    
    # Processing the call keyword arguments (line 974)
    kwargs_464229 = {}
    # Getting the type of 'abs' (line 974)
    abs_464225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 14), 'abs', False)
    # Calling abs(args, kwargs) (line 974)
    abs_call_result_464230 = invoke(stypy.reporting.localization.Localization(__file__, 974, 14), abs_464225, *[result_sub_464228], **kwargs_464229)
    
    # Assigning a type to the variable 'l1_diff' (line 974)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 974, 4), 'l1_diff', abs_call_result_464230)
    
    # Assigning a Call to a Name (line 975):
    
    # Assigning a Call to a Name (line 975):
    
    # Call to abs(...): (line 975)
    # Processing the call arguments (line 975)
    # Getting the type of 'u' (line 975)
    u_464232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 17), 'u', False)
    # Getting the type of 'v' (line 975)
    v_464233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 21), 'v', False)
    # Applying the binary operator '+' (line 975)
    result_add_464234 = python_operator(stypy.reporting.localization.Localization(__file__, 975, 17), '+', u_464232, v_464233)
    
    # Processing the call keyword arguments (line 975)
    kwargs_464235 = {}
    # Getting the type of 'abs' (line 975)
    abs_464231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 13), 'abs', False)
    # Calling abs(args, kwargs) (line 975)
    abs_call_result_464236 = invoke(stypy.reporting.localization.Localization(__file__, 975, 13), abs_464231, *[result_add_464234], **kwargs_464235)
    
    # Assigning a type to the variable 'l1_sum' (line 975)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 4), 'l1_sum', abs_call_result_464236)
    
    # Type idiom detected: calculating its left and rigth part (line 976)
    # Getting the type of 'w' (line 976)
    w_464237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 4), 'w')
    # Getting the type of 'None' (line 976)
    None_464238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 16), 'None')
    
    (may_be_464239, more_types_in_union_464240) = may_not_be_none(w_464237, None_464238)

    if may_be_464239:

        if more_types_in_union_464240:
            # Runtime conditional SSA (line 976)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 977):
        
        # Assigning a Call to a Name (line 977):
        
        # Call to _validate_vector(...): (line 977)
        # Processing the call arguments (line 977)
        # Getting the type of 'w' (line 977)
        w_464242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 29), 'w', False)
        # Processing the call keyword arguments (line 977)
        kwargs_464243 = {}
        # Getting the type of '_validate_vector' (line 977)
        _validate_vector_464241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 977)
        _validate_vector_call_result_464244 = invoke(stypy.reporting.localization.Localization(__file__, 977, 12), _validate_vector_464241, *[w_464242], **kwargs_464243)
        
        # Assigning a type to the variable 'w' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'w', _validate_vector_call_result_464244)
        
        # Assigning a BinOp to a Name (line 978):
        
        # Assigning a BinOp to a Name (line 978):
        # Getting the type of 'w' (line 978)
        w_464245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 18), 'w')
        # Getting the type of 'l1_diff' (line 978)
        l1_diff_464246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 22), 'l1_diff')
        # Applying the binary operator '*' (line 978)
        result_mul_464247 = python_operator(stypy.reporting.localization.Localization(__file__, 978, 18), '*', w_464245, l1_diff_464246)
        
        # Assigning a type to the variable 'l1_diff' (line 978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 978, 8), 'l1_diff', result_mul_464247)
        
        # Assigning a BinOp to a Name (line 979):
        
        # Assigning a BinOp to a Name (line 979):
        # Getting the type of 'w' (line 979)
        w_464248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 17), 'w')
        # Getting the type of 'l1_sum' (line 979)
        l1_sum_464249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 21), 'l1_sum')
        # Applying the binary operator '*' (line 979)
        result_mul_464250 = python_operator(stypy.reporting.localization.Localization(__file__, 979, 17), '*', w_464248, l1_sum_464249)
        
        # Assigning a type to the variable 'l1_sum' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 8), 'l1_sum', result_mul_464250)

        if more_types_in_union_464240:
            # SSA join for if statement (line 976)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to sum(...): (line 980)
    # Processing the call keyword arguments (line 980)
    kwargs_464253 = {}
    # Getting the type of 'l1_diff' (line 980)
    l1_diff_464251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 11), 'l1_diff', False)
    # Obtaining the member 'sum' of a type (line 980)
    sum_464252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 980, 11), l1_diff_464251, 'sum')
    # Calling sum(args, kwargs) (line 980)
    sum_call_result_464254 = invoke(stypy.reporting.localization.Localization(__file__, 980, 11), sum_464252, *[], **kwargs_464253)
    
    
    # Call to sum(...): (line 980)
    # Processing the call keyword arguments (line 980)
    kwargs_464257 = {}
    # Getting the type of 'l1_sum' (line 980)
    l1_sum_464255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 27), 'l1_sum', False)
    # Obtaining the member 'sum' of a type (line 980)
    sum_464256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 980, 27), l1_sum_464255, 'sum')
    # Calling sum(args, kwargs) (line 980)
    sum_call_result_464258 = invoke(stypy.reporting.localization.Localization(__file__, 980, 27), sum_464256, *[], **kwargs_464257)
    
    # Applying the binary operator 'div' (line 980)
    result_div_464259 = python_operator(stypy.reporting.localization.Localization(__file__, 980, 11), 'div', sum_call_result_464254, sum_call_result_464258)
    
    # Assigning a type to the variable 'stypy_return_type' (line 980)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 4), 'stypy_return_type', result_div_464259)
    
    # ################# End of 'braycurtis(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'braycurtis' in the type store
    # Getting the type of 'stypy_return_type' (line 943)
    stypy_return_type_464260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464260)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'braycurtis'
    return stypy_return_type_464260

# Assigning a type to the variable 'braycurtis' (line 943)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 943, 0), 'braycurtis', braycurtis)

@norecursion
def canberra(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 983)
    None_464261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 21), 'None')
    defaults = [None_464261]
    # Create a new context for function 'canberra'
    module_type_store = module_type_store.open_function_context('canberra', 983, 0, False)
    
    # Passed parameters checking function
    canberra.stypy_localization = localization
    canberra.stypy_type_of_self = None
    canberra.stypy_type_store = module_type_store
    canberra.stypy_function_name = 'canberra'
    canberra.stypy_param_names_list = ['u', 'v', 'w']
    canberra.stypy_varargs_param_name = None
    canberra.stypy_kwargs_param_name = None
    canberra.stypy_call_defaults = defaults
    canberra.stypy_call_varargs = varargs
    canberra.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'canberra', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'canberra', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'canberra(...)' code ##################

    str_464262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, (-1)), 'str', '\n    Computes the Canberra distance between two 1-D arrays.\n\n    The Canberra distance is defined as\n\n    .. math::\n\n         d(u,v) = \\sum_i \\frac{|u_i-v_i|}\n                              {|u_i|+|v_i|}.\n\n    Parameters\n    ----------\n    u : (N,) array_like\n        Input array.\n    v : (N,) array_like\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    canberra : double\n        The Canberra distance between vectors `u` and `v`.\n\n    Notes\n    -----\n    When `u[i]` and `v[i]` are 0 for given i, then the fraction 0/0 = 0 is\n    used in the calculation.\n\n    ')
    
    # Assigning a Call to a Name (line 1015):
    
    # Assigning a Call to a Name (line 1015):
    
    # Call to _validate_vector(...): (line 1015)
    # Processing the call arguments (line 1015)
    # Getting the type of 'u' (line 1015)
    u_464264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 25), 'u', False)
    # Processing the call keyword arguments (line 1015)
    kwargs_464265 = {}
    # Getting the type of '_validate_vector' (line 1015)
    _validate_vector_464263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1015)
    _validate_vector_call_result_464266 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 8), _validate_vector_464263, *[u_464264], **kwargs_464265)
    
    # Assigning a type to the variable 'u' (line 1015)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 4), 'u', _validate_vector_call_result_464266)
    
    # Assigning a Call to a Name (line 1016):
    
    # Assigning a Call to a Name (line 1016):
    
    # Call to _validate_vector(...): (line 1016)
    # Processing the call arguments (line 1016)
    # Getting the type of 'v' (line 1016)
    v_464268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 25), 'v', False)
    # Processing the call keyword arguments (line 1016)
    # Getting the type of 'np' (line 1016)
    np_464269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 34), 'np', False)
    # Obtaining the member 'float64' of a type (line 1016)
    float64_464270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 34), np_464269, 'float64')
    keyword_464271 = float64_464270
    kwargs_464272 = {'dtype': keyword_464271}
    # Getting the type of '_validate_vector' (line 1016)
    _validate_vector_464267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1016)
    _validate_vector_call_result_464273 = invoke(stypy.reporting.localization.Localization(__file__, 1016, 8), _validate_vector_464267, *[v_464268], **kwargs_464272)
    
    # Assigning a type to the variable 'v' (line 1016)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1016, 4), 'v', _validate_vector_call_result_464273)
    
    # Type idiom detected: calculating its left and rigth part (line 1017)
    # Getting the type of 'w' (line 1017)
    w_464274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 4), 'w')
    # Getting the type of 'None' (line 1017)
    None_464275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 16), 'None')
    
    (may_be_464276, more_types_in_union_464277) = may_not_be_none(w_464274, None_464275)

    if may_be_464276:

        if more_types_in_union_464277:
            # Runtime conditional SSA (line 1017)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1018):
        
        # Assigning a Call to a Name (line 1018):
        
        # Call to _validate_vector(...): (line 1018)
        # Processing the call arguments (line 1018)
        # Getting the type of 'w' (line 1018)
        w_464279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 29), 'w', False)
        # Processing the call keyword arguments (line 1018)
        kwargs_464280 = {}
        # Getting the type of '_validate_vector' (line 1018)
        _validate_vector_464278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 1018)
        _validate_vector_call_result_464281 = invoke(stypy.reporting.localization.Localization(__file__, 1018, 12), _validate_vector_464278, *[w_464279], **kwargs_464280)
        
        # Assigning a type to the variable 'w' (line 1018)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1018, 8), 'w', _validate_vector_call_result_464281)

        if more_types_in_union_464277:
            # SSA join for if statement (line 1017)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 1019):
    
    # Assigning a Call to a Name (line 1019):
    
    # Call to seterr(...): (line 1019)
    # Processing the call keyword arguments (line 1019)
    str_464284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1019, 31), 'str', 'ignore')
    keyword_464285 = str_464284
    kwargs_464286 = {'invalid': keyword_464285}
    # Getting the type of 'np' (line 1019)
    np_464282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 13), 'np', False)
    # Obtaining the member 'seterr' of a type (line 1019)
    seterr_464283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1019, 13), np_464282, 'seterr')
    # Calling seterr(args, kwargs) (line 1019)
    seterr_call_result_464287 = invoke(stypy.reporting.localization.Localization(__file__, 1019, 13), seterr_464283, *[], **kwargs_464286)
    
    # Assigning a type to the variable 'olderr' (line 1019)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1019, 4), 'olderr', seterr_call_result_464287)
    
    # Try-finally block (line 1020)
    
    # Assigning a Call to a Name (line 1021):
    
    # Assigning a Call to a Name (line 1021):
    
    # Call to abs(...): (line 1021)
    # Processing the call arguments (line 1021)
    # Getting the type of 'u' (line 1021)
    u_464289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 21), 'u', False)
    # Getting the type of 'v' (line 1021)
    v_464290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 25), 'v', False)
    # Applying the binary operator '-' (line 1021)
    result_sub_464291 = python_operator(stypy.reporting.localization.Localization(__file__, 1021, 21), '-', u_464289, v_464290)
    
    # Processing the call keyword arguments (line 1021)
    kwargs_464292 = {}
    # Getting the type of 'abs' (line 1021)
    abs_464288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 17), 'abs', False)
    # Calling abs(args, kwargs) (line 1021)
    abs_call_result_464293 = invoke(stypy.reporting.localization.Localization(__file__, 1021, 17), abs_464288, *[result_sub_464291], **kwargs_464292)
    
    # Assigning a type to the variable 'abs_uv' (line 1021)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1021, 8), 'abs_uv', abs_call_result_464293)
    
    # Assigning a Call to a Name (line 1022):
    
    # Assigning a Call to a Name (line 1022):
    
    # Call to abs(...): (line 1022)
    # Processing the call arguments (line 1022)
    # Getting the type of 'u' (line 1022)
    u_464295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 20), 'u', False)
    # Processing the call keyword arguments (line 1022)
    kwargs_464296 = {}
    # Getting the type of 'abs' (line 1022)
    abs_464294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 16), 'abs', False)
    # Calling abs(args, kwargs) (line 1022)
    abs_call_result_464297 = invoke(stypy.reporting.localization.Localization(__file__, 1022, 16), abs_464294, *[u_464295], **kwargs_464296)
    
    # Assigning a type to the variable 'abs_u' (line 1022)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1022, 8), 'abs_u', abs_call_result_464297)
    
    # Assigning a Call to a Name (line 1023):
    
    # Assigning a Call to a Name (line 1023):
    
    # Call to abs(...): (line 1023)
    # Processing the call arguments (line 1023)
    # Getting the type of 'v' (line 1023)
    v_464299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 20), 'v', False)
    # Processing the call keyword arguments (line 1023)
    kwargs_464300 = {}
    # Getting the type of 'abs' (line 1023)
    abs_464298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 16), 'abs', False)
    # Calling abs(args, kwargs) (line 1023)
    abs_call_result_464301 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 16), abs_464298, *[v_464299], **kwargs_464300)
    
    # Assigning a type to the variable 'abs_v' (line 1023)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1023, 8), 'abs_v', abs_call_result_464301)
    
    # Assigning a BinOp to a Name (line 1024):
    
    # Assigning a BinOp to a Name (line 1024):
    # Getting the type of 'abs_uv' (line 1024)
    abs_uv_464302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 12), 'abs_uv')
    # Getting the type of 'abs_u' (line 1024)
    abs_u_464303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 22), 'abs_u')
    # Getting the type of 'abs_v' (line 1024)
    abs_v_464304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 30), 'abs_v')
    # Applying the binary operator '+' (line 1024)
    result_add_464305 = python_operator(stypy.reporting.localization.Localization(__file__, 1024, 22), '+', abs_u_464303, abs_v_464304)
    
    # Applying the binary operator 'div' (line 1024)
    result_div_464306 = python_operator(stypy.reporting.localization.Localization(__file__, 1024, 12), 'div', abs_uv_464302, result_add_464305)
    
    # Assigning a type to the variable 'd' (line 1024)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1024, 8), 'd', result_div_464306)
    
    # Type idiom detected: calculating its left and rigth part (line 1025)
    # Getting the type of 'w' (line 1025)
    w_464307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 8), 'w')
    # Getting the type of 'None' (line 1025)
    None_464308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 20), 'None')
    
    (may_be_464309, more_types_in_union_464310) = may_not_be_none(w_464307, None_464308)

    if may_be_464309:

        if more_types_in_union_464310:
            # Runtime conditional SSA (line 1025)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a BinOp to a Name (line 1026):
        
        # Assigning a BinOp to a Name (line 1026):
        # Getting the type of 'w' (line 1026)
        w_464311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 16), 'w')
        # Getting the type of 'd' (line 1026)
        d_464312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 20), 'd')
        # Applying the binary operator '*' (line 1026)
        result_mul_464313 = python_operator(stypy.reporting.localization.Localization(__file__, 1026, 16), '*', w_464311, d_464312)
        
        # Assigning a type to the variable 'd' (line 1026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1026, 12), 'd', result_mul_464313)

        if more_types_in_union_464310:
            # SSA join for if statement (line 1025)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 1027):
    
    # Assigning a Call to a Name (line 1027):
    
    # Call to nansum(...): (line 1027)
    # Processing the call arguments (line 1027)
    # Getting the type of 'd' (line 1027)
    d_464316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 22), 'd', False)
    # Processing the call keyword arguments (line 1027)
    kwargs_464317 = {}
    # Getting the type of 'np' (line 1027)
    np_464314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 12), 'np', False)
    # Obtaining the member 'nansum' of a type (line 1027)
    nansum_464315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 12), np_464314, 'nansum')
    # Calling nansum(args, kwargs) (line 1027)
    nansum_call_result_464318 = invoke(stypy.reporting.localization.Localization(__file__, 1027, 12), nansum_464315, *[d_464316], **kwargs_464317)
    
    # Assigning a type to the variable 'd' (line 1027)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1027, 8), 'd', nansum_call_result_464318)
    
    # finally branch of the try-finally block (line 1020)
    
    # Call to seterr(...): (line 1029)
    # Processing the call keyword arguments (line 1029)
    # Getting the type of 'olderr' (line 1029)
    olderr_464321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 20), 'olderr', False)
    kwargs_464322 = {'olderr_464321': olderr_464321}
    # Getting the type of 'np' (line 1029)
    np_464319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 8), 'np', False)
    # Obtaining the member 'seterr' of a type (line 1029)
    seterr_464320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1029, 8), np_464319, 'seterr')
    # Calling seterr(args, kwargs) (line 1029)
    seterr_call_result_464323 = invoke(stypy.reporting.localization.Localization(__file__, 1029, 8), seterr_464320, *[], **kwargs_464322)
    
    
    # Getting the type of 'd' (line 1030)
    d_464324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 11), 'd')
    # Assigning a type to the variable 'stypy_return_type' (line 1030)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1030, 4), 'stypy_return_type', d_464324)
    
    # ################# End of 'canberra(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'canberra' in the type store
    # Getting the type of 'stypy_return_type' (line 983)
    stypy_return_type_464325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464325)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'canberra'
    return stypy_return_type_464325

# Assigning a type to the variable 'canberra' (line 983)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 983, 0), 'canberra', canberra)

@norecursion
def yule(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1033)
    None_464326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 17), 'None')
    defaults = [None_464326]
    # Create a new context for function 'yule'
    module_type_store = module_type_store.open_function_context('yule', 1033, 0, False)
    
    # Passed parameters checking function
    yule.stypy_localization = localization
    yule.stypy_type_of_self = None
    yule.stypy_type_store = module_type_store
    yule.stypy_function_name = 'yule'
    yule.stypy_param_names_list = ['u', 'v', 'w']
    yule.stypy_varargs_param_name = None
    yule.stypy_kwargs_param_name = None
    yule.stypy_call_defaults = defaults
    yule.stypy_call_varargs = varargs
    yule.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'yule', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'yule', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'yule(...)' code ##################

    str_464327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, (-1)), 'str', '\n    Computes the Yule dissimilarity between two boolean 1-D arrays.\n\n    The Yule dissimilarity is defined as\n\n    .. math::\n\n         \\frac{R}{c_{TT} * c_{FF} + \\frac{R}{2}}\n\n    where :math:`c_{ij}` is the number of occurrences of\n    :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for\n    :math:`k < n` and :math:`R = 2.0 * c_{TF} * c_{FT}`.\n\n    Parameters\n    ----------\n    u : (N,) array_like, bool\n        Input array.\n    v : (N,) array_like, bool\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    yule : double\n        The Yule dissimilarity between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 1063):
    
    # Assigning a Call to a Name (line 1063):
    
    # Call to _validate_vector(...): (line 1063)
    # Processing the call arguments (line 1063)
    # Getting the type of 'u' (line 1063)
    u_464329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 25), 'u', False)
    # Processing the call keyword arguments (line 1063)
    kwargs_464330 = {}
    # Getting the type of '_validate_vector' (line 1063)
    _validate_vector_464328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1063)
    _validate_vector_call_result_464331 = invoke(stypy.reporting.localization.Localization(__file__, 1063, 8), _validate_vector_464328, *[u_464329], **kwargs_464330)
    
    # Assigning a type to the variable 'u' (line 1063)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1063, 4), 'u', _validate_vector_call_result_464331)
    
    # Assigning a Call to a Name (line 1064):
    
    # Assigning a Call to a Name (line 1064):
    
    # Call to _validate_vector(...): (line 1064)
    # Processing the call arguments (line 1064)
    # Getting the type of 'v' (line 1064)
    v_464333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 25), 'v', False)
    # Processing the call keyword arguments (line 1064)
    kwargs_464334 = {}
    # Getting the type of '_validate_vector' (line 1064)
    _validate_vector_464332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1064)
    _validate_vector_call_result_464335 = invoke(stypy.reporting.localization.Localization(__file__, 1064, 8), _validate_vector_464332, *[v_464333], **kwargs_464334)
    
    # Assigning a type to the variable 'v' (line 1064)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1064, 4), 'v', _validate_vector_call_result_464335)
    
    # Type idiom detected: calculating its left and rigth part (line 1065)
    # Getting the type of 'w' (line 1065)
    w_464336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 4), 'w')
    # Getting the type of 'None' (line 1065)
    None_464337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 16), 'None')
    
    (may_be_464338, more_types_in_union_464339) = may_not_be_none(w_464336, None_464337)

    if may_be_464338:

        if more_types_in_union_464339:
            # Runtime conditional SSA (line 1065)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1066):
        
        # Assigning a Call to a Name (line 1066):
        
        # Call to _validate_vector(...): (line 1066)
        # Processing the call arguments (line 1066)
        # Getting the type of 'w' (line 1066)
        w_464341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 29), 'w', False)
        # Processing the call keyword arguments (line 1066)
        kwargs_464342 = {}
        # Getting the type of '_validate_vector' (line 1066)
        _validate_vector_464340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 1066)
        _validate_vector_call_result_464343 = invoke(stypy.reporting.localization.Localization(__file__, 1066, 12), _validate_vector_464340, *[w_464341], **kwargs_464342)
        
        # Assigning a type to the variable 'w' (line 1066)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1066, 8), 'w', _validate_vector_call_result_464343)

        if more_types_in_union_464339:
            # SSA join for if statement (line 1065)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Tuple (line 1067):
    
    # Assigning a Subscript to a Name (line 1067):
    
    # Obtaining the type of the subscript
    int_464344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 1067)
    # Processing the call arguments (line 1067)
    # Getting the type of 'u' (line 1067)
    u_464346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 49), 'u', False)
    # Getting the type of 'v' (line 1067)
    v_464347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 52), 'v', False)
    # Processing the call keyword arguments (line 1067)
    # Getting the type of 'w' (line 1067)
    w_464348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 57), 'w', False)
    keyword_464349 = w_464348
    kwargs_464350 = {'w': keyword_464349}
    # Getting the type of '_nbool_correspond_all' (line 1067)
    _nbool_correspond_all_464345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 1067)
    _nbool_correspond_all_call_result_464351 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 27), _nbool_correspond_all_464345, *[u_464346, v_464347], **kwargs_464350)
    
    # Obtaining the member '__getitem__' of a type (line 1067)
    getitem___464352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 4), _nbool_correspond_all_call_result_464351, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1067)
    subscript_call_result_464353 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 4), getitem___464352, int_464344)
    
    # Assigning a type to the variable 'tuple_var_assignment_462796' (line 1067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 4), 'tuple_var_assignment_462796', subscript_call_result_464353)
    
    # Assigning a Subscript to a Name (line 1067):
    
    # Obtaining the type of the subscript
    int_464354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 1067)
    # Processing the call arguments (line 1067)
    # Getting the type of 'u' (line 1067)
    u_464356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 49), 'u', False)
    # Getting the type of 'v' (line 1067)
    v_464357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 52), 'v', False)
    # Processing the call keyword arguments (line 1067)
    # Getting the type of 'w' (line 1067)
    w_464358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 57), 'w', False)
    keyword_464359 = w_464358
    kwargs_464360 = {'w': keyword_464359}
    # Getting the type of '_nbool_correspond_all' (line 1067)
    _nbool_correspond_all_464355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 1067)
    _nbool_correspond_all_call_result_464361 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 27), _nbool_correspond_all_464355, *[u_464356, v_464357], **kwargs_464360)
    
    # Obtaining the member '__getitem__' of a type (line 1067)
    getitem___464362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 4), _nbool_correspond_all_call_result_464361, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1067)
    subscript_call_result_464363 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 4), getitem___464362, int_464354)
    
    # Assigning a type to the variable 'tuple_var_assignment_462797' (line 1067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 4), 'tuple_var_assignment_462797', subscript_call_result_464363)
    
    # Assigning a Subscript to a Name (line 1067):
    
    # Obtaining the type of the subscript
    int_464364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 1067)
    # Processing the call arguments (line 1067)
    # Getting the type of 'u' (line 1067)
    u_464366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 49), 'u', False)
    # Getting the type of 'v' (line 1067)
    v_464367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 52), 'v', False)
    # Processing the call keyword arguments (line 1067)
    # Getting the type of 'w' (line 1067)
    w_464368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 57), 'w', False)
    keyword_464369 = w_464368
    kwargs_464370 = {'w': keyword_464369}
    # Getting the type of '_nbool_correspond_all' (line 1067)
    _nbool_correspond_all_464365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 1067)
    _nbool_correspond_all_call_result_464371 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 27), _nbool_correspond_all_464365, *[u_464366, v_464367], **kwargs_464370)
    
    # Obtaining the member '__getitem__' of a type (line 1067)
    getitem___464372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 4), _nbool_correspond_all_call_result_464371, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1067)
    subscript_call_result_464373 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 4), getitem___464372, int_464364)
    
    # Assigning a type to the variable 'tuple_var_assignment_462798' (line 1067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 4), 'tuple_var_assignment_462798', subscript_call_result_464373)
    
    # Assigning a Subscript to a Name (line 1067):
    
    # Obtaining the type of the subscript
    int_464374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 1067)
    # Processing the call arguments (line 1067)
    # Getting the type of 'u' (line 1067)
    u_464376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 49), 'u', False)
    # Getting the type of 'v' (line 1067)
    v_464377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 52), 'v', False)
    # Processing the call keyword arguments (line 1067)
    # Getting the type of 'w' (line 1067)
    w_464378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 57), 'w', False)
    keyword_464379 = w_464378
    kwargs_464380 = {'w': keyword_464379}
    # Getting the type of '_nbool_correspond_all' (line 1067)
    _nbool_correspond_all_464375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 1067)
    _nbool_correspond_all_call_result_464381 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 27), _nbool_correspond_all_464375, *[u_464376, v_464377], **kwargs_464380)
    
    # Obtaining the member '__getitem__' of a type (line 1067)
    getitem___464382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1067, 4), _nbool_correspond_all_call_result_464381, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1067)
    subscript_call_result_464383 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 4), getitem___464382, int_464374)
    
    # Assigning a type to the variable 'tuple_var_assignment_462799' (line 1067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 4), 'tuple_var_assignment_462799', subscript_call_result_464383)
    
    # Assigning a Name to a Name (line 1067):
    # Getting the type of 'tuple_var_assignment_462796' (line 1067)
    tuple_var_assignment_462796_464384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 4), 'tuple_var_assignment_462796')
    # Assigning a type to the variable 'nff' (line 1067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 5), 'nff', tuple_var_assignment_462796_464384)
    
    # Assigning a Name to a Name (line 1067):
    # Getting the type of 'tuple_var_assignment_462797' (line 1067)
    tuple_var_assignment_462797_464385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 4), 'tuple_var_assignment_462797')
    # Assigning a type to the variable 'nft' (line 1067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 10), 'nft', tuple_var_assignment_462797_464385)
    
    # Assigning a Name to a Name (line 1067):
    # Getting the type of 'tuple_var_assignment_462798' (line 1067)
    tuple_var_assignment_462798_464386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 4), 'tuple_var_assignment_462798')
    # Assigning a type to the variable 'ntf' (line 1067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 15), 'ntf', tuple_var_assignment_462798_464386)
    
    # Assigning a Name to a Name (line 1067):
    # Getting the type of 'tuple_var_assignment_462799' (line 1067)
    tuple_var_assignment_462799_464387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 4), 'tuple_var_assignment_462799')
    # Assigning a type to the variable 'ntt' (line 1067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 20), 'ntt', tuple_var_assignment_462799_464387)
    
    # Call to float(...): (line 1068)
    # Processing the call arguments (line 1068)
    float_464389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1068, 17), 'float')
    # Getting the type of 'ntf' (line 1068)
    ntf_464390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 23), 'ntf', False)
    # Applying the binary operator '*' (line 1068)
    result_mul_464391 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 17), '*', float_464389, ntf_464390)
    
    # Getting the type of 'nft' (line 1068)
    nft_464392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 29), 'nft', False)
    # Applying the binary operator '*' (line 1068)
    result_mul_464393 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 27), '*', result_mul_464391, nft_464392)
    
    
    # Call to array(...): (line 1068)
    # Processing the call arguments (line 1068)
    # Getting the type of 'ntt' (line 1068)
    ntt_464396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 44), 'ntt', False)
    # Getting the type of 'nff' (line 1068)
    nff_464397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 50), 'nff', False)
    # Applying the binary operator '*' (line 1068)
    result_mul_464398 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 44), '*', ntt_464396, nff_464397)
    
    # Getting the type of 'ntf' (line 1068)
    ntf_464399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 56), 'ntf', False)
    # Getting the type of 'nft' (line 1068)
    nft_464400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 62), 'nft', False)
    # Applying the binary operator '*' (line 1068)
    result_mul_464401 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 56), '*', ntf_464399, nft_464400)
    
    # Applying the binary operator '+' (line 1068)
    result_add_464402 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 44), '+', result_mul_464398, result_mul_464401)
    
    # Processing the call keyword arguments (line 1068)
    kwargs_464403 = {}
    # Getting the type of 'np' (line 1068)
    np_464394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 35), 'np', False)
    # Obtaining the member 'array' of a type (line 1068)
    array_464395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1068, 35), np_464394, 'array')
    # Calling array(args, kwargs) (line 1068)
    array_call_result_464404 = invoke(stypy.reporting.localization.Localization(__file__, 1068, 35), array_464395, *[result_add_464402], **kwargs_464403)
    
    # Applying the binary operator 'div' (line 1068)
    result_div_464405 = python_operator(stypy.reporting.localization.Localization(__file__, 1068, 33), 'div', result_mul_464393, array_call_result_464404)
    
    # Processing the call keyword arguments (line 1068)
    kwargs_464406 = {}
    # Getting the type of 'float' (line 1068)
    float_464388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 11), 'float', False)
    # Calling float(args, kwargs) (line 1068)
    float_call_result_464407 = invoke(stypy.reporting.localization.Localization(__file__, 1068, 11), float_464388, *[result_div_464405], **kwargs_464406)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1068)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1068, 4), 'stypy_return_type', float_call_result_464407)
    
    # ################# End of 'yule(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'yule' in the type store
    # Getting the type of 'stypy_return_type' (line 1033)
    stypy_return_type_464408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464408)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'yule'
    return stypy_return_type_464408

# Assigning a type to the variable 'yule' (line 1033)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1033, 0), 'yule', yule)

@norecursion
def matching(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1072)
    None_464409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 21), 'None')
    defaults = [None_464409]
    # Create a new context for function 'matching'
    module_type_store = module_type_store.open_function_context('matching', 1070, 0, False)
    
    # Passed parameters checking function
    matching.stypy_localization = localization
    matching.stypy_type_of_self = None
    matching.stypy_type_store = module_type_store
    matching.stypy_function_name = 'matching'
    matching.stypy_param_names_list = ['u', 'v', 'w']
    matching.stypy_varargs_param_name = None
    matching.stypy_kwargs_param_name = None
    matching.stypy_call_defaults = defaults
    matching.stypy_call_varargs = varargs
    matching.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'matching', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'matching', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'matching(...)' code ##################

    str_464410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1077, (-1)), 'str', '\n    Computes the Hamming distance between two boolean 1-D arrays.\n\n    This is a deprecated synonym for :func:`hamming`.\n    ')
    
    # Call to hamming(...): (line 1078)
    # Processing the call arguments (line 1078)
    # Getting the type of 'u' (line 1078)
    u_464412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 19), 'u', False)
    # Getting the type of 'v' (line 1078)
    v_464413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 22), 'v', False)
    # Processing the call keyword arguments (line 1078)
    # Getting the type of 'w' (line 1078)
    w_464414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 27), 'w', False)
    keyword_464415 = w_464414
    kwargs_464416 = {'w': keyword_464415}
    # Getting the type of 'hamming' (line 1078)
    hamming_464411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 11), 'hamming', False)
    # Calling hamming(args, kwargs) (line 1078)
    hamming_call_result_464417 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 11), hamming_464411, *[u_464412, v_464413], **kwargs_464416)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1078)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 4), 'stypy_return_type', hamming_call_result_464417)
    
    # ################# End of 'matching(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'matching' in the type store
    # Getting the type of 'stypy_return_type' (line 1070)
    stypy_return_type_464418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464418)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'matching'
    return stypy_return_type_464418

# Assigning a type to the variable 'matching' (line 1070)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1070, 0), 'matching', matching)

@norecursion
def dice(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1081)
    None_464419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 17), 'None')
    defaults = [None_464419]
    # Create a new context for function 'dice'
    module_type_store = module_type_store.open_function_context('dice', 1081, 0, False)
    
    # Passed parameters checking function
    dice.stypy_localization = localization
    dice.stypy_type_of_self = None
    dice.stypy_type_store = module_type_store
    dice.stypy_function_name = 'dice'
    dice.stypy_param_names_list = ['u', 'v', 'w']
    dice.stypy_varargs_param_name = None
    dice.stypy_kwargs_param_name = None
    dice.stypy_call_defaults = defaults
    dice.stypy_call_varargs = varargs
    dice.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'dice', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'dice', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'dice(...)' code ##################

    str_464420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1111, (-1)), 'str', '\n    Computes the Dice dissimilarity between two boolean 1-D arrays.\n\n    The Dice dissimilarity between `u` and `v`, is\n\n    .. math::\n\n         \\frac{c_{TF} + c_{FT}}\n              {2c_{TT} + c_{FT} + c_{TF}}\n\n    where :math:`c_{ij}` is the number of occurrences of\n    :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for\n    :math:`k < n`.\n\n    Parameters\n    ----------\n    u : (N,) ndarray, bool\n        Input 1-D array.\n    v : (N,) ndarray, bool\n        Input 1-D array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    dice : double\n        The Dice dissimilarity between 1-D arrays `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 1112):
    
    # Assigning a Call to a Name (line 1112):
    
    # Call to _validate_vector(...): (line 1112)
    # Processing the call arguments (line 1112)
    # Getting the type of 'u' (line 1112)
    u_464422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 25), 'u', False)
    # Processing the call keyword arguments (line 1112)
    kwargs_464423 = {}
    # Getting the type of '_validate_vector' (line 1112)
    _validate_vector_464421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1112)
    _validate_vector_call_result_464424 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 8), _validate_vector_464421, *[u_464422], **kwargs_464423)
    
    # Assigning a type to the variable 'u' (line 1112)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 4), 'u', _validate_vector_call_result_464424)
    
    # Assigning a Call to a Name (line 1113):
    
    # Assigning a Call to a Name (line 1113):
    
    # Call to _validate_vector(...): (line 1113)
    # Processing the call arguments (line 1113)
    # Getting the type of 'v' (line 1113)
    v_464426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 25), 'v', False)
    # Processing the call keyword arguments (line 1113)
    kwargs_464427 = {}
    # Getting the type of '_validate_vector' (line 1113)
    _validate_vector_464425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1113)
    _validate_vector_call_result_464428 = invoke(stypy.reporting.localization.Localization(__file__, 1113, 8), _validate_vector_464425, *[v_464426], **kwargs_464427)
    
    # Assigning a type to the variable 'v' (line 1113)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1113, 4), 'v', _validate_vector_call_result_464428)
    
    # Type idiom detected: calculating its left and rigth part (line 1114)
    # Getting the type of 'w' (line 1114)
    w_464429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 4), 'w')
    # Getting the type of 'None' (line 1114)
    None_464430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 16), 'None')
    
    (may_be_464431, more_types_in_union_464432) = may_not_be_none(w_464429, None_464430)

    if may_be_464431:

        if more_types_in_union_464432:
            # Runtime conditional SSA (line 1114)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1115):
        
        # Assigning a Call to a Name (line 1115):
        
        # Call to _validate_vector(...): (line 1115)
        # Processing the call arguments (line 1115)
        # Getting the type of 'w' (line 1115)
        w_464434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 29), 'w', False)
        # Processing the call keyword arguments (line 1115)
        kwargs_464435 = {}
        # Getting the type of '_validate_vector' (line 1115)
        _validate_vector_464433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 1115)
        _validate_vector_call_result_464436 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 12), _validate_vector_464433, *[w_464434], **kwargs_464435)
        
        # Assigning a type to the variable 'w' (line 1115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1115, 8), 'w', _validate_vector_call_result_464436)

        if more_types_in_union_464432:
            # SSA join for if statement (line 1114)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'u' (line 1116)
    u_464437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 7), 'u')
    # Obtaining the member 'dtype' of a type (line 1116)
    dtype_464438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 7), u_464437, 'dtype')
    # Getting the type of 'v' (line 1116)
    v_464439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 18), 'v')
    # Obtaining the member 'dtype' of a type (line 1116)
    dtype_464440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 18), v_464439, 'dtype')
    # Applying the binary operator '==' (line 1116)
    result_eq_464441 = python_operator(stypy.reporting.localization.Localization(__file__, 1116, 7), '==', dtype_464438, dtype_464440)
    # Getting the type of 'bool' (line 1116)
    bool_464442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 29), 'bool')
    # Applying the binary operator '==' (line 1116)
    result_eq_464443 = python_operator(stypy.reporting.localization.Localization(__file__, 1116, 7), '==', dtype_464440, bool_464442)
    # Applying the binary operator '&' (line 1116)
    result_and__464444 = python_operator(stypy.reporting.localization.Localization(__file__, 1116, 7), '&', result_eq_464441, result_eq_464443)
    
    
    # Getting the type of 'w' (line 1116)
    w_464445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 38), 'w')
    # Getting the type of 'None' (line 1116)
    None_464446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 43), 'None')
    # Applying the binary operator 'is' (line 1116)
    result_is__464447 = python_operator(stypy.reporting.localization.Localization(__file__, 1116, 38), 'is', w_464445, None_464446)
    
    # Applying the binary operator 'and' (line 1116)
    result_and_keyword_464448 = python_operator(stypy.reporting.localization.Localization(__file__, 1116, 7), 'and', result_and__464444, result_is__464447)
    
    # Testing the type of an if condition (line 1116)
    if_condition_464449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1116, 4), result_and_keyword_464448)
    # Assigning a type to the variable 'if_condition_464449' (line 1116)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1116, 4), 'if_condition_464449', if_condition_464449)
    # SSA begins for if statement (line 1116)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1117):
    
    # Assigning a Call to a Name (line 1117):
    
    # Call to sum(...): (line 1117)
    # Processing the call keyword arguments (line 1117)
    kwargs_464454 = {}
    # Getting the type of 'u' (line 1117)
    u_464450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 15), 'u', False)
    # Getting the type of 'v' (line 1117)
    v_464451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 19), 'v', False)
    # Applying the binary operator '&' (line 1117)
    result_and__464452 = python_operator(stypy.reporting.localization.Localization(__file__, 1117, 15), '&', u_464450, v_464451)
    
    # Obtaining the member 'sum' of a type (line 1117)
    sum_464453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1117, 15), result_and__464452, 'sum')
    # Calling sum(args, kwargs) (line 1117)
    sum_call_result_464455 = invoke(stypy.reporting.localization.Localization(__file__, 1117, 15), sum_464453, *[], **kwargs_464454)
    
    # Assigning a type to the variable 'ntt' (line 1117)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1117, 8), 'ntt', sum_call_result_464455)
    # SSA branch for the else part of an if statement (line 1116)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 1119):
    
    # Assigning a Call to a Name (line 1119):
    
    # Call to find_common_type(...): (line 1119)
    # Processing the call arguments (line 1119)
    
    # Obtaining an instance of the builtin type 'list' (line 1119)
    list_464458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 36), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1119)
    # Adding element type (line 1119)
    # Getting the type of 'int' (line 1119)
    int_464459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 37), 'int', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1119, 36), list_464458, int_464459)
    
    
    # Obtaining an instance of the builtin type 'list' (line 1119)
    list_464460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 43), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1119)
    # Adding element type (line 1119)
    # Getting the type of 'u' (line 1119)
    u_464461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 44), 'u', False)
    # Obtaining the member 'dtype' of a type (line 1119)
    dtype_464462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1119, 44), u_464461, 'dtype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1119, 43), list_464460, dtype_464462)
    # Adding element type (line 1119)
    # Getting the type of 'v' (line 1119)
    v_464463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 53), 'v', False)
    # Obtaining the member 'dtype' of a type (line 1119)
    dtype_464464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1119, 53), v_464463, 'dtype')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1119, 43), list_464460, dtype_464464)
    
    # Processing the call keyword arguments (line 1119)
    kwargs_464465 = {}
    # Getting the type of 'np' (line 1119)
    np_464456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 16), 'np', False)
    # Obtaining the member 'find_common_type' of a type (line 1119)
    find_common_type_464457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1119, 16), np_464456, 'find_common_type')
    # Calling find_common_type(args, kwargs) (line 1119)
    find_common_type_call_result_464466 = invoke(stypy.reporting.localization.Localization(__file__, 1119, 16), find_common_type_464457, *[list_464458, list_464460], **kwargs_464465)
    
    # Assigning a type to the variable 'dtype' (line 1119)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1119, 8), 'dtype', find_common_type_call_result_464466)
    
    # Assigning a Call to a Name (line 1120):
    
    # Assigning a Call to a Name (line 1120):
    
    # Call to astype(...): (line 1120)
    # Processing the call arguments (line 1120)
    # Getting the type of 'dtype' (line 1120)
    dtype_464469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 21), 'dtype', False)
    # Processing the call keyword arguments (line 1120)
    kwargs_464470 = {}
    # Getting the type of 'u' (line 1120)
    u_464467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 12), 'u', False)
    # Obtaining the member 'astype' of a type (line 1120)
    astype_464468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1120, 12), u_464467, 'astype')
    # Calling astype(args, kwargs) (line 1120)
    astype_call_result_464471 = invoke(stypy.reporting.localization.Localization(__file__, 1120, 12), astype_464468, *[dtype_464469], **kwargs_464470)
    
    # Assigning a type to the variable 'u' (line 1120)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1120, 8), 'u', astype_call_result_464471)
    
    # Assigning a Call to a Name (line 1121):
    
    # Assigning a Call to a Name (line 1121):
    
    # Call to astype(...): (line 1121)
    # Processing the call arguments (line 1121)
    # Getting the type of 'dtype' (line 1121)
    dtype_464474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 21), 'dtype', False)
    # Processing the call keyword arguments (line 1121)
    kwargs_464475 = {}
    # Getting the type of 'v' (line 1121)
    v_464472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 12), 'v', False)
    # Obtaining the member 'astype' of a type (line 1121)
    astype_464473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1121, 12), v_464472, 'astype')
    # Calling astype(args, kwargs) (line 1121)
    astype_call_result_464476 = invoke(stypy.reporting.localization.Localization(__file__, 1121, 12), astype_464473, *[dtype_464474], **kwargs_464475)
    
    # Assigning a type to the variable 'v' (line 1121)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1121, 8), 'v', astype_call_result_464476)
    
    # Type idiom detected: calculating its left and rigth part (line 1122)
    # Getting the type of 'w' (line 1122)
    w_464477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 11), 'w')
    # Getting the type of 'None' (line 1122)
    None_464478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 16), 'None')
    
    (may_be_464479, more_types_in_union_464480) = may_be_none(w_464477, None_464478)

    if may_be_464479:

        if more_types_in_union_464480:
            # Runtime conditional SSA (line 1122)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1123):
        
        # Assigning a Call to a Name (line 1123):
        
        # Call to sum(...): (line 1123)
        # Processing the call keyword arguments (line 1123)
        kwargs_464485 = {}
        # Getting the type of 'u' (line 1123)
        u_464481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 19), 'u', False)
        # Getting the type of 'v' (line 1123)
        v_464482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1123, 23), 'v', False)
        # Applying the binary operator '*' (line 1123)
        result_mul_464483 = python_operator(stypy.reporting.localization.Localization(__file__, 1123, 19), '*', u_464481, v_464482)
        
        # Obtaining the member 'sum' of a type (line 1123)
        sum_464484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1123, 19), result_mul_464483, 'sum')
        # Calling sum(args, kwargs) (line 1123)
        sum_call_result_464486 = invoke(stypy.reporting.localization.Localization(__file__, 1123, 19), sum_464484, *[], **kwargs_464485)
        
        # Assigning a type to the variable 'ntt' (line 1123)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1123, 12), 'ntt', sum_call_result_464486)

        if more_types_in_union_464480:
            # Runtime conditional SSA for else branch (line 1122)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_464479) or more_types_in_union_464480):
        
        # Assigning a Call to a Name (line 1125):
        
        # Assigning a Call to a Name (line 1125):
        
        # Call to sum(...): (line 1125)
        # Processing the call keyword arguments (line 1125)
        kwargs_464493 = {}
        # Getting the type of 'u' (line 1125)
        u_464487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 19), 'u', False)
        # Getting the type of 'v' (line 1125)
        v_464488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 23), 'v', False)
        # Applying the binary operator '*' (line 1125)
        result_mul_464489 = python_operator(stypy.reporting.localization.Localization(__file__, 1125, 19), '*', u_464487, v_464488)
        
        # Getting the type of 'w' (line 1125)
        w_464490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 27), 'w', False)
        # Applying the binary operator '*' (line 1125)
        result_mul_464491 = python_operator(stypy.reporting.localization.Localization(__file__, 1125, 25), '*', result_mul_464489, w_464490)
        
        # Obtaining the member 'sum' of a type (line 1125)
        sum_464492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1125, 25), result_mul_464491, 'sum')
        # Calling sum(args, kwargs) (line 1125)
        sum_call_result_464494 = invoke(stypy.reporting.localization.Localization(__file__, 1125, 25), sum_464492, *[], **kwargs_464493)
        
        # Assigning a type to the variable 'ntt' (line 1125)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1125, 12), 'ntt', sum_call_result_464494)

        if (may_be_464479 and more_types_in_union_464480):
            # SSA join for if statement (line 1122)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA join for if statement (line 1116)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 1126):
    
    # Assigning a Subscript to a Name (line 1126):
    
    # Obtaining the type of the subscript
    int_464495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 4), 'int')
    
    # Call to _nbool_correspond_ft_tf(...): (line 1126)
    # Processing the call arguments (line 1126)
    # Getting the type of 'u' (line 1126)
    u_464497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 41), 'u', False)
    # Getting the type of 'v' (line 1126)
    v_464498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 44), 'v', False)
    # Processing the call keyword arguments (line 1126)
    # Getting the type of 'w' (line 1126)
    w_464499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 49), 'w', False)
    keyword_464500 = w_464499
    kwargs_464501 = {'w': keyword_464500}
    # Getting the type of '_nbool_correspond_ft_tf' (line 1126)
    _nbool_correspond_ft_tf_464496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 17), '_nbool_correspond_ft_tf', False)
    # Calling _nbool_correspond_ft_tf(args, kwargs) (line 1126)
    _nbool_correspond_ft_tf_call_result_464502 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 17), _nbool_correspond_ft_tf_464496, *[u_464497, v_464498], **kwargs_464501)
    
    # Obtaining the member '__getitem__' of a type (line 1126)
    getitem___464503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1126, 4), _nbool_correspond_ft_tf_call_result_464502, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1126)
    subscript_call_result_464504 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 4), getitem___464503, int_464495)
    
    # Assigning a type to the variable 'tuple_var_assignment_462800' (line 1126)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 4), 'tuple_var_assignment_462800', subscript_call_result_464504)
    
    # Assigning a Subscript to a Name (line 1126):
    
    # Obtaining the type of the subscript
    int_464505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 4), 'int')
    
    # Call to _nbool_correspond_ft_tf(...): (line 1126)
    # Processing the call arguments (line 1126)
    # Getting the type of 'u' (line 1126)
    u_464507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 41), 'u', False)
    # Getting the type of 'v' (line 1126)
    v_464508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 44), 'v', False)
    # Processing the call keyword arguments (line 1126)
    # Getting the type of 'w' (line 1126)
    w_464509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 49), 'w', False)
    keyword_464510 = w_464509
    kwargs_464511 = {'w': keyword_464510}
    # Getting the type of '_nbool_correspond_ft_tf' (line 1126)
    _nbool_correspond_ft_tf_464506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 17), '_nbool_correspond_ft_tf', False)
    # Calling _nbool_correspond_ft_tf(args, kwargs) (line 1126)
    _nbool_correspond_ft_tf_call_result_464512 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 17), _nbool_correspond_ft_tf_464506, *[u_464507, v_464508], **kwargs_464511)
    
    # Obtaining the member '__getitem__' of a type (line 1126)
    getitem___464513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1126, 4), _nbool_correspond_ft_tf_call_result_464512, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1126)
    subscript_call_result_464514 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 4), getitem___464513, int_464505)
    
    # Assigning a type to the variable 'tuple_var_assignment_462801' (line 1126)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 4), 'tuple_var_assignment_462801', subscript_call_result_464514)
    
    # Assigning a Name to a Name (line 1126):
    # Getting the type of 'tuple_var_assignment_462800' (line 1126)
    tuple_var_assignment_462800_464515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 4), 'tuple_var_assignment_462800')
    # Assigning a type to the variable 'nft' (line 1126)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 5), 'nft', tuple_var_assignment_462800_464515)
    
    # Assigning a Name to a Name (line 1126):
    # Getting the type of 'tuple_var_assignment_462801' (line 1126)
    tuple_var_assignment_462801_464516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 4), 'tuple_var_assignment_462801')
    # Assigning a type to the variable 'ntf' (line 1126)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1126, 10), 'ntf', tuple_var_assignment_462801_464516)
    
    # Call to float(...): (line 1127)
    # Processing the call arguments (line 1127)
    # Getting the type of 'ntf' (line 1127)
    ntf_464518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 18), 'ntf', False)
    # Getting the type of 'nft' (line 1127)
    nft_464519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 24), 'nft', False)
    # Applying the binary operator '+' (line 1127)
    result_add_464520 = python_operator(stypy.reporting.localization.Localization(__file__, 1127, 18), '+', ntf_464518, nft_464519)
    
    
    # Call to array(...): (line 1127)
    # Processing the call arguments (line 1127)
    float_464523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1127, 40), 'float')
    # Getting the type of 'ntt' (line 1127)
    ntt_464524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 46), 'ntt', False)
    # Applying the binary operator '*' (line 1127)
    result_mul_464525 = python_operator(stypy.reporting.localization.Localization(__file__, 1127, 40), '*', float_464523, ntt_464524)
    
    # Getting the type of 'ntf' (line 1127)
    ntf_464526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 52), 'ntf', False)
    # Applying the binary operator '+' (line 1127)
    result_add_464527 = python_operator(stypy.reporting.localization.Localization(__file__, 1127, 40), '+', result_mul_464525, ntf_464526)
    
    # Getting the type of 'nft' (line 1127)
    nft_464528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 58), 'nft', False)
    # Applying the binary operator '+' (line 1127)
    result_add_464529 = python_operator(stypy.reporting.localization.Localization(__file__, 1127, 56), '+', result_add_464527, nft_464528)
    
    # Processing the call keyword arguments (line 1127)
    kwargs_464530 = {}
    # Getting the type of 'np' (line 1127)
    np_464521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 31), 'np', False)
    # Obtaining the member 'array' of a type (line 1127)
    array_464522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1127, 31), np_464521, 'array')
    # Calling array(args, kwargs) (line 1127)
    array_call_result_464531 = invoke(stypy.reporting.localization.Localization(__file__, 1127, 31), array_464522, *[result_add_464529], **kwargs_464530)
    
    # Applying the binary operator 'div' (line 1127)
    result_div_464532 = python_operator(stypy.reporting.localization.Localization(__file__, 1127, 17), 'div', result_add_464520, array_call_result_464531)
    
    # Processing the call keyword arguments (line 1127)
    kwargs_464533 = {}
    # Getting the type of 'float' (line 1127)
    float_464517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1127, 11), 'float', False)
    # Calling float(args, kwargs) (line 1127)
    float_call_result_464534 = invoke(stypy.reporting.localization.Localization(__file__, 1127, 11), float_464517, *[result_div_464532], **kwargs_464533)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1127)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1127, 4), 'stypy_return_type', float_call_result_464534)
    
    # ################# End of 'dice(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'dice' in the type store
    # Getting the type of 'stypy_return_type' (line 1081)
    stypy_return_type_464535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464535)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'dice'
    return stypy_return_type_464535

# Assigning a type to the variable 'dice' (line 1081)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1081, 0), 'dice', dice)

@norecursion
def rogerstanimoto(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1130)
    None_464536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1130, 27), 'None')
    defaults = [None_464536]
    # Create a new context for function 'rogerstanimoto'
    module_type_store = module_type_store.open_function_context('rogerstanimoto', 1130, 0, False)
    
    # Passed parameters checking function
    rogerstanimoto.stypy_localization = localization
    rogerstanimoto.stypy_type_of_self = None
    rogerstanimoto.stypy_type_store = module_type_store
    rogerstanimoto.stypy_function_name = 'rogerstanimoto'
    rogerstanimoto.stypy_param_names_list = ['u', 'v', 'w']
    rogerstanimoto.stypy_varargs_param_name = None
    rogerstanimoto.stypy_kwargs_param_name = None
    rogerstanimoto.stypy_call_defaults = defaults
    rogerstanimoto.stypy_call_varargs = varargs
    rogerstanimoto.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'rogerstanimoto', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'rogerstanimoto', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'rogerstanimoto(...)' code ##################

    str_464537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1161, (-1)), 'str', '\n    Computes the Rogers-Tanimoto dissimilarity between two boolean 1-D arrays.\n\n    The Rogers-Tanimoto dissimilarity between two boolean 1-D arrays\n    `u` and `v`, is defined as\n\n    .. math::\n       \\frac{R}\n            {c_{TT} + c_{FF} + R}\n\n    where :math:`c_{ij}` is the number of occurrences of\n    :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for\n    :math:`k < n` and :math:`R = 2(c_{TF} + c_{FT})`.\n\n    Parameters\n    ----------\n    u : (N,) array_like, bool\n        Input array.\n    v : (N,) array_like, bool\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    rogerstanimoto : double\n        The Rogers-Tanimoto dissimilarity between vectors\n        `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 1162):
    
    # Assigning a Call to a Name (line 1162):
    
    # Call to _validate_vector(...): (line 1162)
    # Processing the call arguments (line 1162)
    # Getting the type of 'u' (line 1162)
    u_464539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 25), 'u', False)
    # Processing the call keyword arguments (line 1162)
    kwargs_464540 = {}
    # Getting the type of '_validate_vector' (line 1162)
    _validate_vector_464538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1162)
    _validate_vector_call_result_464541 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 8), _validate_vector_464538, *[u_464539], **kwargs_464540)
    
    # Assigning a type to the variable 'u' (line 1162)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1162, 4), 'u', _validate_vector_call_result_464541)
    
    # Assigning a Call to a Name (line 1163):
    
    # Assigning a Call to a Name (line 1163):
    
    # Call to _validate_vector(...): (line 1163)
    # Processing the call arguments (line 1163)
    # Getting the type of 'v' (line 1163)
    v_464543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 25), 'v', False)
    # Processing the call keyword arguments (line 1163)
    kwargs_464544 = {}
    # Getting the type of '_validate_vector' (line 1163)
    _validate_vector_464542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1163)
    _validate_vector_call_result_464545 = invoke(stypy.reporting.localization.Localization(__file__, 1163, 8), _validate_vector_464542, *[v_464543], **kwargs_464544)
    
    # Assigning a type to the variable 'v' (line 1163)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1163, 4), 'v', _validate_vector_call_result_464545)
    
    # Type idiom detected: calculating its left and rigth part (line 1164)
    # Getting the type of 'w' (line 1164)
    w_464546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 4), 'w')
    # Getting the type of 'None' (line 1164)
    None_464547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 16), 'None')
    
    (may_be_464548, more_types_in_union_464549) = may_not_be_none(w_464546, None_464547)

    if may_be_464548:

        if more_types_in_union_464549:
            # Runtime conditional SSA (line 1164)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1165):
        
        # Assigning a Call to a Name (line 1165):
        
        # Call to _validate_vector(...): (line 1165)
        # Processing the call arguments (line 1165)
        # Getting the type of 'w' (line 1165)
        w_464551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 29), 'w', False)
        # Processing the call keyword arguments (line 1165)
        kwargs_464552 = {}
        # Getting the type of '_validate_vector' (line 1165)
        _validate_vector_464550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 1165)
        _validate_vector_call_result_464553 = invoke(stypy.reporting.localization.Localization(__file__, 1165, 12), _validate_vector_464550, *[w_464551], **kwargs_464552)
        
        # Assigning a type to the variable 'w' (line 1165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1165, 8), 'w', _validate_vector_call_result_464553)

        if more_types_in_union_464549:
            # SSA join for if statement (line 1164)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Tuple (line 1166):
    
    # Assigning a Subscript to a Name (line 1166):
    
    # Obtaining the type of the subscript
    int_464554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 1166)
    # Processing the call arguments (line 1166)
    # Getting the type of 'u' (line 1166)
    u_464556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 49), 'u', False)
    # Getting the type of 'v' (line 1166)
    v_464557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 52), 'v', False)
    # Processing the call keyword arguments (line 1166)
    # Getting the type of 'w' (line 1166)
    w_464558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 57), 'w', False)
    keyword_464559 = w_464558
    kwargs_464560 = {'w': keyword_464559}
    # Getting the type of '_nbool_correspond_all' (line 1166)
    _nbool_correspond_all_464555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 1166)
    _nbool_correspond_all_call_result_464561 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 27), _nbool_correspond_all_464555, *[u_464556, v_464557], **kwargs_464560)
    
    # Obtaining the member '__getitem__' of a type (line 1166)
    getitem___464562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 4), _nbool_correspond_all_call_result_464561, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1166)
    subscript_call_result_464563 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 4), getitem___464562, int_464554)
    
    # Assigning a type to the variable 'tuple_var_assignment_462802' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'tuple_var_assignment_462802', subscript_call_result_464563)
    
    # Assigning a Subscript to a Name (line 1166):
    
    # Obtaining the type of the subscript
    int_464564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 1166)
    # Processing the call arguments (line 1166)
    # Getting the type of 'u' (line 1166)
    u_464566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 49), 'u', False)
    # Getting the type of 'v' (line 1166)
    v_464567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 52), 'v', False)
    # Processing the call keyword arguments (line 1166)
    # Getting the type of 'w' (line 1166)
    w_464568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 57), 'w', False)
    keyword_464569 = w_464568
    kwargs_464570 = {'w': keyword_464569}
    # Getting the type of '_nbool_correspond_all' (line 1166)
    _nbool_correspond_all_464565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 1166)
    _nbool_correspond_all_call_result_464571 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 27), _nbool_correspond_all_464565, *[u_464566, v_464567], **kwargs_464570)
    
    # Obtaining the member '__getitem__' of a type (line 1166)
    getitem___464572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 4), _nbool_correspond_all_call_result_464571, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1166)
    subscript_call_result_464573 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 4), getitem___464572, int_464564)
    
    # Assigning a type to the variable 'tuple_var_assignment_462803' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'tuple_var_assignment_462803', subscript_call_result_464573)
    
    # Assigning a Subscript to a Name (line 1166):
    
    # Obtaining the type of the subscript
    int_464574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 1166)
    # Processing the call arguments (line 1166)
    # Getting the type of 'u' (line 1166)
    u_464576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 49), 'u', False)
    # Getting the type of 'v' (line 1166)
    v_464577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 52), 'v', False)
    # Processing the call keyword arguments (line 1166)
    # Getting the type of 'w' (line 1166)
    w_464578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 57), 'w', False)
    keyword_464579 = w_464578
    kwargs_464580 = {'w': keyword_464579}
    # Getting the type of '_nbool_correspond_all' (line 1166)
    _nbool_correspond_all_464575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 1166)
    _nbool_correspond_all_call_result_464581 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 27), _nbool_correspond_all_464575, *[u_464576, v_464577], **kwargs_464580)
    
    # Obtaining the member '__getitem__' of a type (line 1166)
    getitem___464582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 4), _nbool_correspond_all_call_result_464581, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1166)
    subscript_call_result_464583 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 4), getitem___464582, int_464574)
    
    # Assigning a type to the variable 'tuple_var_assignment_462804' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'tuple_var_assignment_462804', subscript_call_result_464583)
    
    # Assigning a Subscript to a Name (line 1166):
    
    # Obtaining the type of the subscript
    int_464584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1166, 4), 'int')
    
    # Call to _nbool_correspond_all(...): (line 1166)
    # Processing the call arguments (line 1166)
    # Getting the type of 'u' (line 1166)
    u_464586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 49), 'u', False)
    # Getting the type of 'v' (line 1166)
    v_464587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 52), 'v', False)
    # Processing the call keyword arguments (line 1166)
    # Getting the type of 'w' (line 1166)
    w_464588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 57), 'w', False)
    keyword_464589 = w_464588
    kwargs_464590 = {'w': keyword_464589}
    # Getting the type of '_nbool_correspond_all' (line 1166)
    _nbool_correspond_all_464585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 27), '_nbool_correspond_all', False)
    # Calling _nbool_correspond_all(args, kwargs) (line 1166)
    _nbool_correspond_all_call_result_464591 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 27), _nbool_correspond_all_464585, *[u_464586, v_464587], **kwargs_464590)
    
    # Obtaining the member '__getitem__' of a type (line 1166)
    getitem___464592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 4), _nbool_correspond_all_call_result_464591, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1166)
    subscript_call_result_464593 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 4), getitem___464592, int_464584)
    
    # Assigning a type to the variable 'tuple_var_assignment_462805' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'tuple_var_assignment_462805', subscript_call_result_464593)
    
    # Assigning a Name to a Name (line 1166):
    # Getting the type of 'tuple_var_assignment_462802' (line 1166)
    tuple_var_assignment_462802_464594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'tuple_var_assignment_462802')
    # Assigning a type to the variable 'nff' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 5), 'nff', tuple_var_assignment_462802_464594)
    
    # Assigning a Name to a Name (line 1166):
    # Getting the type of 'tuple_var_assignment_462803' (line 1166)
    tuple_var_assignment_462803_464595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'tuple_var_assignment_462803')
    # Assigning a type to the variable 'nft' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 10), 'nft', tuple_var_assignment_462803_464595)
    
    # Assigning a Name to a Name (line 1166):
    # Getting the type of 'tuple_var_assignment_462804' (line 1166)
    tuple_var_assignment_462804_464596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'tuple_var_assignment_462804')
    # Assigning a type to the variable 'ntf' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 15), 'ntf', tuple_var_assignment_462804_464596)
    
    # Assigning a Name to a Name (line 1166):
    # Getting the type of 'tuple_var_assignment_462805' (line 1166)
    tuple_var_assignment_462805_464597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 4), 'tuple_var_assignment_462805')
    # Assigning a type to the variable 'ntt' (line 1166)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 20), 'ntt', tuple_var_assignment_462805_464597)
    
    # Call to float(...): (line 1167)
    # Processing the call arguments (line 1167)
    float_464599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 17), 'float')
    # Getting the type of 'ntf' (line 1167)
    ntf_464600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 24), 'ntf', False)
    # Getting the type of 'nft' (line 1167)
    nft_464601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 30), 'nft', False)
    # Applying the binary operator '+' (line 1167)
    result_add_464602 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 24), '+', ntf_464600, nft_464601)
    
    # Applying the binary operator '*' (line 1167)
    result_mul_464603 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 17), '*', float_464599, result_add_464602)
    
    # Processing the call keyword arguments (line 1167)
    kwargs_464604 = {}
    # Getting the type of 'float' (line 1167)
    float_464598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 11), 'float', False)
    # Calling float(args, kwargs) (line 1167)
    float_call_result_464605 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 11), float_464598, *[result_mul_464603], **kwargs_464604)
    
    
    # Call to float(...): (line 1167)
    # Processing the call arguments (line 1167)
    # Getting the type of 'ntt' (line 1167)
    ntt_464607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 44), 'ntt', False)
    # Getting the type of 'nff' (line 1167)
    nff_464608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 50), 'nff', False)
    # Applying the binary operator '+' (line 1167)
    result_add_464609 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 44), '+', ntt_464607, nff_464608)
    
    float_464610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 57), 'float')
    # Getting the type of 'ntf' (line 1167)
    ntf_464611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 64), 'ntf', False)
    # Getting the type of 'nft' (line 1167)
    nft_464612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 70), 'nft', False)
    # Applying the binary operator '+' (line 1167)
    result_add_464613 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 64), '+', ntf_464611, nft_464612)
    
    # Applying the binary operator '*' (line 1167)
    result_mul_464614 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 57), '*', float_464610, result_add_464613)
    
    # Applying the binary operator '+' (line 1167)
    result_add_464615 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 54), '+', result_add_464609, result_mul_464614)
    
    # Processing the call keyword arguments (line 1167)
    kwargs_464616 = {}
    # Getting the type of 'float' (line 1167)
    float_464606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 38), 'float', False)
    # Calling float(args, kwargs) (line 1167)
    float_call_result_464617 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 38), float_464606, *[result_add_464615], **kwargs_464616)
    
    # Applying the binary operator 'div' (line 1167)
    result_div_464618 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 11), 'div', float_call_result_464605, float_call_result_464617)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1167)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1167, 4), 'stypy_return_type', result_div_464618)
    
    # ################# End of 'rogerstanimoto(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'rogerstanimoto' in the type store
    # Getting the type of 'stypy_return_type' (line 1130)
    stypy_return_type_464619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1130, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464619)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'rogerstanimoto'
    return stypy_return_type_464619

# Assigning a type to the variable 'rogerstanimoto' (line 1130)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1130, 0), 'rogerstanimoto', rogerstanimoto)

@norecursion
def russellrao(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1170)
    None_464620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 23), 'None')
    defaults = [None_464620]
    # Create a new context for function 'russellrao'
    module_type_store = module_type_store.open_function_context('russellrao', 1170, 0, False)
    
    # Passed parameters checking function
    russellrao.stypy_localization = localization
    russellrao.stypy_type_of_self = None
    russellrao.stypy_type_store = module_type_store
    russellrao.stypy_function_name = 'russellrao'
    russellrao.stypy_param_names_list = ['u', 'v', 'w']
    russellrao.stypy_varargs_param_name = None
    russellrao.stypy_kwargs_param_name = None
    russellrao.stypy_call_defaults = defaults
    russellrao.stypy_call_varargs = varargs
    russellrao.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'russellrao', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'russellrao', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'russellrao(...)' code ##################

    str_464621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1201, (-1)), 'str', '\n    Computes the Russell-Rao dissimilarity between two boolean 1-D arrays.\n\n    The Russell-Rao dissimilarity between two boolean 1-D arrays, `u` and\n    `v`, is defined as\n\n    .. math::\n\n      \\frac{n - c_{TT}}\n           {n}\n\n    where :math:`c_{ij}` is the number of occurrences of\n    :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for\n    :math:`k < n`.\n\n    Parameters\n    ----------\n    u : (N,) array_like, bool\n        Input array.\n    v : (N,) array_like, bool\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    russellrao : double\n        The Russell-Rao dissimilarity between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 1202):
    
    # Assigning a Call to a Name (line 1202):
    
    # Call to _validate_vector(...): (line 1202)
    # Processing the call arguments (line 1202)
    # Getting the type of 'u' (line 1202)
    u_464623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 25), 'u', False)
    # Processing the call keyword arguments (line 1202)
    kwargs_464624 = {}
    # Getting the type of '_validate_vector' (line 1202)
    _validate_vector_464622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1202, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1202)
    _validate_vector_call_result_464625 = invoke(stypy.reporting.localization.Localization(__file__, 1202, 8), _validate_vector_464622, *[u_464623], **kwargs_464624)
    
    # Assigning a type to the variable 'u' (line 1202)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1202, 4), 'u', _validate_vector_call_result_464625)
    
    # Assigning a Call to a Name (line 1203):
    
    # Assigning a Call to a Name (line 1203):
    
    # Call to _validate_vector(...): (line 1203)
    # Processing the call arguments (line 1203)
    # Getting the type of 'v' (line 1203)
    v_464627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 25), 'v', False)
    # Processing the call keyword arguments (line 1203)
    kwargs_464628 = {}
    # Getting the type of '_validate_vector' (line 1203)
    _validate_vector_464626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1203, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1203)
    _validate_vector_call_result_464629 = invoke(stypy.reporting.localization.Localization(__file__, 1203, 8), _validate_vector_464626, *[v_464627], **kwargs_464628)
    
    # Assigning a type to the variable 'v' (line 1203)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1203, 4), 'v', _validate_vector_call_result_464629)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'u' (line 1204)
    u_464630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 7), 'u')
    # Obtaining the member 'dtype' of a type (line 1204)
    dtype_464631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1204, 7), u_464630, 'dtype')
    # Getting the type of 'v' (line 1204)
    v_464632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 18), 'v')
    # Obtaining the member 'dtype' of a type (line 1204)
    dtype_464633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1204, 18), v_464632, 'dtype')
    # Applying the binary operator '==' (line 1204)
    result_eq_464634 = python_operator(stypy.reporting.localization.Localization(__file__, 1204, 7), '==', dtype_464631, dtype_464633)
    # Getting the type of 'bool' (line 1204)
    bool_464635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 29), 'bool')
    # Applying the binary operator '==' (line 1204)
    result_eq_464636 = python_operator(stypy.reporting.localization.Localization(__file__, 1204, 7), '==', dtype_464633, bool_464635)
    # Applying the binary operator '&' (line 1204)
    result_and__464637 = python_operator(stypy.reporting.localization.Localization(__file__, 1204, 7), '&', result_eq_464634, result_eq_464636)
    
    
    # Getting the type of 'w' (line 1204)
    w_464638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 38), 'w')
    # Getting the type of 'None' (line 1204)
    None_464639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1204, 43), 'None')
    # Applying the binary operator 'is' (line 1204)
    result_is__464640 = python_operator(stypy.reporting.localization.Localization(__file__, 1204, 38), 'is', w_464638, None_464639)
    
    # Applying the binary operator 'and' (line 1204)
    result_and_keyword_464641 = python_operator(stypy.reporting.localization.Localization(__file__, 1204, 7), 'and', result_and__464637, result_is__464640)
    
    # Testing the type of an if condition (line 1204)
    if_condition_464642 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1204, 4), result_and_keyword_464641)
    # Assigning a type to the variable 'if_condition_464642' (line 1204)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1204, 4), 'if_condition_464642', if_condition_464642)
    # SSA begins for if statement (line 1204)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1205):
    
    # Assigning a Call to a Name (line 1205):
    
    # Call to sum(...): (line 1205)
    # Processing the call keyword arguments (line 1205)
    kwargs_464647 = {}
    # Getting the type of 'u' (line 1205)
    u_464643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 15), 'u', False)
    # Getting the type of 'v' (line 1205)
    v_464644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1205, 19), 'v', False)
    # Applying the binary operator '&' (line 1205)
    result_and__464645 = python_operator(stypy.reporting.localization.Localization(__file__, 1205, 15), '&', u_464643, v_464644)
    
    # Obtaining the member 'sum' of a type (line 1205)
    sum_464646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1205, 15), result_and__464645, 'sum')
    # Calling sum(args, kwargs) (line 1205)
    sum_call_result_464648 = invoke(stypy.reporting.localization.Localization(__file__, 1205, 15), sum_464646, *[], **kwargs_464647)
    
    # Assigning a type to the variable 'ntt' (line 1205)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1205, 8), 'ntt', sum_call_result_464648)
    
    # Assigning a Call to a Name (line 1206):
    
    # Assigning a Call to a Name (line 1206):
    
    # Call to float(...): (line 1206)
    # Processing the call arguments (line 1206)
    
    # Call to len(...): (line 1206)
    # Processing the call arguments (line 1206)
    # Getting the type of 'u' (line 1206)
    u_464651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 22), 'u', False)
    # Processing the call keyword arguments (line 1206)
    kwargs_464652 = {}
    # Getting the type of 'len' (line 1206)
    len_464650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 18), 'len', False)
    # Calling len(args, kwargs) (line 1206)
    len_call_result_464653 = invoke(stypy.reporting.localization.Localization(__file__, 1206, 18), len_464650, *[u_464651], **kwargs_464652)
    
    # Processing the call keyword arguments (line 1206)
    kwargs_464654 = {}
    # Getting the type of 'float' (line 1206)
    float_464649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1206, 12), 'float', False)
    # Calling float(args, kwargs) (line 1206)
    float_call_result_464655 = invoke(stypy.reporting.localization.Localization(__file__, 1206, 12), float_464649, *[len_call_result_464653], **kwargs_464654)
    
    # Assigning a type to the variable 'n' (line 1206)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1206, 8), 'n', float_call_result_464655)
    # SSA branch for the else part of an if statement (line 1204)
    module_type_store.open_ssa_branch('else')
    
    # Type idiom detected: calculating its left and rigth part (line 1207)
    # Getting the type of 'w' (line 1207)
    w_464656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 9), 'w')
    # Getting the type of 'None' (line 1207)
    None_464657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1207, 14), 'None')
    
    (may_be_464658, more_types_in_union_464659) = may_be_none(w_464656, None_464657)

    if may_be_464658:

        if more_types_in_union_464659:
            # Runtime conditional SSA (line 1207)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1208):
        
        # Assigning a Call to a Name (line 1208):
        
        # Call to sum(...): (line 1208)
        # Processing the call keyword arguments (line 1208)
        kwargs_464664 = {}
        # Getting the type of 'u' (line 1208)
        u_464660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 15), 'u', False)
        # Getting the type of 'v' (line 1208)
        v_464661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 19), 'v', False)
        # Applying the binary operator '*' (line 1208)
        result_mul_464662 = python_operator(stypy.reporting.localization.Localization(__file__, 1208, 15), '*', u_464660, v_464661)
        
        # Obtaining the member 'sum' of a type (line 1208)
        sum_464663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1208, 15), result_mul_464662, 'sum')
        # Calling sum(args, kwargs) (line 1208)
        sum_call_result_464665 = invoke(stypy.reporting.localization.Localization(__file__, 1208, 15), sum_464663, *[], **kwargs_464664)
        
        # Assigning a type to the variable 'ntt' (line 1208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1208, 8), 'ntt', sum_call_result_464665)
        
        # Assigning a Call to a Name (line 1209):
        
        # Assigning a Call to a Name (line 1209):
        
        # Call to float(...): (line 1209)
        # Processing the call arguments (line 1209)
        
        # Call to len(...): (line 1209)
        # Processing the call arguments (line 1209)
        # Getting the type of 'u' (line 1209)
        u_464668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 22), 'u', False)
        # Processing the call keyword arguments (line 1209)
        kwargs_464669 = {}
        # Getting the type of 'len' (line 1209)
        len_464667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 18), 'len', False)
        # Calling len(args, kwargs) (line 1209)
        len_call_result_464670 = invoke(stypy.reporting.localization.Localization(__file__, 1209, 18), len_464667, *[u_464668], **kwargs_464669)
        
        # Processing the call keyword arguments (line 1209)
        kwargs_464671 = {}
        # Getting the type of 'float' (line 1209)
        float_464666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1209, 12), 'float', False)
        # Calling float(args, kwargs) (line 1209)
        float_call_result_464672 = invoke(stypy.reporting.localization.Localization(__file__, 1209, 12), float_464666, *[len_call_result_464670], **kwargs_464671)
        
        # Assigning a type to the variable 'n' (line 1209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1209, 8), 'n', float_call_result_464672)

        if more_types_in_union_464659:
            # Runtime conditional SSA for else branch (line 1207)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_464658) or more_types_in_union_464659):
        
        # Assigning a Call to a Name (line 1211):
        
        # Assigning a Call to a Name (line 1211):
        
        # Call to _validate_vector(...): (line 1211)
        # Processing the call arguments (line 1211)
        # Getting the type of 'w' (line 1211)
        w_464674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 29), 'w', False)
        # Processing the call keyword arguments (line 1211)
        kwargs_464675 = {}
        # Getting the type of '_validate_vector' (line 1211)
        _validate_vector_464673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1211, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 1211)
        _validate_vector_call_result_464676 = invoke(stypy.reporting.localization.Localization(__file__, 1211, 12), _validate_vector_464673, *[w_464674], **kwargs_464675)
        
        # Assigning a type to the variable 'w' (line 1211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1211, 8), 'w', _validate_vector_call_result_464676)
        
        # Assigning a Call to a Name (line 1212):
        
        # Assigning a Call to a Name (line 1212):
        
        # Call to sum(...): (line 1212)
        # Processing the call keyword arguments (line 1212)
        kwargs_464683 = {}
        # Getting the type of 'u' (line 1212)
        u_464677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 15), 'u', False)
        # Getting the type of 'v' (line 1212)
        v_464678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 19), 'v', False)
        # Applying the binary operator '*' (line 1212)
        result_mul_464679 = python_operator(stypy.reporting.localization.Localization(__file__, 1212, 15), '*', u_464677, v_464678)
        
        # Getting the type of 'w' (line 1212)
        w_464680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1212, 23), 'w', False)
        # Applying the binary operator '*' (line 1212)
        result_mul_464681 = python_operator(stypy.reporting.localization.Localization(__file__, 1212, 21), '*', result_mul_464679, w_464680)
        
        # Obtaining the member 'sum' of a type (line 1212)
        sum_464682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1212, 21), result_mul_464681, 'sum')
        # Calling sum(args, kwargs) (line 1212)
        sum_call_result_464684 = invoke(stypy.reporting.localization.Localization(__file__, 1212, 21), sum_464682, *[], **kwargs_464683)
        
        # Assigning a type to the variable 'ntt' (line 1212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1212, 8), 'ntt', sum_call_result_464684)
        
        # Assigning a Call to a Name (line 1213):
        
        # Assigning a Call to a Name (line 1213):
        
        # Call to sum(...): (line 1213)
        # Processing the call keyword arguments (line 1213)
        kwargs_464687 = {}
        # Getting the type of 'w' (line 1213)
        w_464685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1213, 12), 'w', False)
        # Obtaining the member 'sum' of a type (line 1213)
        sum_464686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1213, 12), w_464685, 'sum')
        # Calling sum(args, kwargs) (line 1213)
        sum_call_result_464688 = invoke(stypy.reporting.localization.Localization(__file__, 1213, 12), sum_464686, *[], **kwargs_464687)
        
        # Assigning a type to the variable 'n' (line 1213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1213, 8), 'n', sum_call_result_464688)

        if (may_be_464658 and more_types_in_union_464659):
            # SSA join for if statement (line 1207)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA join for if statement (line 1204)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to float(...): (line 1214)
    # Processing the call arguments (line 1214)
    # Getting the type of 'n' (line 1214)
    n_464690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 17), 'n', False)
    # Getting the type of 'ntt' (line 1214)
    ntt_464691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 21), 'ntt', False)
    # Applying the binary operator '-' (line 1214)
    result_sub_464692 = python_operator(stypy.reporting.localization.Localization(__file__, 1214, 17), '-', n_464690, ntt_464691)
    
    # Processing the call keyword arguments (line 1214)
    kwargs_464693 = {}
    # Getting the type of 'float' (line 1214)
    float_464689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 11), 'float', False)
    # Calling float(args, kwargs) (line 1214)
    float_call_result_464694 = invoke(stypy.reporting.localization.Localization(__file__, 1214, 11), float_464689, *[result_sub_464692], **kwargs_464693)
    
    # Getting the type of 'n' (line 1214)
    n_464695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1214, 28), 'n')
    # Applying the binary operator 'div' (line 1214)
    result_div_464696 = python_operator(stypy.reporting.localization.Localization(__file__, 1214, 11), 'div', float_call_result_464694, n_464695)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1214)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1214, 4), 'stypy_return_type', result_div_464696)
    
    # ################# End of 'russellrao(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'russellrao' in the type store
    # Getting the type of 'stypy_return_type' (line 1170)
    stypy_return_type_464697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464697)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'russellrao'
    return stypy_return_type_464697

# Assigning a type to the variable 'russellrao' (line 1170)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1170, 0), 'russellrao', russellrao)

@norecursion
def sokalmichener(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1217)
    None_464698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 26), 'None')
    defaults = [None_464698]
    # Create a new context for function 'sokalmichener'
    module_type_store = module_type_store.open_function_context('sokalmichener', 1217, 0, False)
    
    # Passed parameters checking function
    sokalmichener.stypy_localization = localization
    sokalmichener.stypy_type_of_self = None
    sokalmichener.stypy_type_store = module_type_store
    sokalmichener.stypy_function_name = 'sokalmichener'
    sokalmichener.stypy_param_names_list = ['u', 'v', 'w']
    sokalmichener.stypy_varargs_param_name = None
    sokalmichener.stypy_kwargs_param_name = None
    sokalmichener.stypy_call_defaults = defaults
    sokalmichener.stypy_call_varargs = varargs
    sokalmichener.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'sokalmichener', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'sokalmichener', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'sokalmichener(...)' code ##################

    str_464699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1249, (-1)), 'str', '\n    Computes the Sokal-Michener dissimilarity between two boolean 1-D arrays.\n\n    The Sokal-Michener dissimilarity between boolean 1-D arrays `u` and `v`,\n    is defined as\n\n    .. math::\n\n       \\frac{R}\n            {S + R}\n\n    where :math:`c_{ij}` is the number of occurrences of\n    :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for\n    :math:`k < n`, :math:`R = 2 * (c_{TF} + c_{FT})` and\n    :math:`S = c_{FF} + c_{TT}`.\n\n    Parameters\n    ----------\n    u : (N,) array_like, bool\n        Input array.\n    v : (N,) array_like, bool\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    sokalmichener : double\n        The Sokal-Michener dissimilarity between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 1250):
    
    # Assigning a Call to a Name (line 1250):
    
    # Call to _validate_vector(...): (line 1250)
    # Processing the call arguments (line 1250)
    # Getting the type of 'u' (line 1250)
    u_464701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 25), 'u', False)
    # Processing the call keyword arguments (line 1250)
    kwargs_464702 = {}
    # Getting the type of '_validate_vector' (line 1250)
    _validate_vector_464700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1250)
    _validate_vector_call_result_464703 = invoke(stypy.reporting.localization.Localization(__file__, 1250, 8), _validate_vector_464700, *[u_464701], **kwargs_464702)
    
    # Assigning a type to the variable 'u' (line 1250)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1250, 4), 'u', _validate_vector_call_result_464703)
    
    # Assigning a Call to a Name (line 1251):
    
    # Assigning a Call to a Name (line 1251):
    
    # Call to _validate_vector(...): (line 1251)
    # Processing the call arguments (line 1251)
    # Getting the type of 'v' (line 1251)
    v_464705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1251, 25), 'v', False)
    # Processing the call keyword arguments (line 1251)
    kwargs_464706 = {}
    # Getting the type of '_validate_vector' (line 1251)
    _validate_vector_464704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1251, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1251)
    _validate_vector_call_result_464707 = invoke(stypy.reporting.localization.Localization(__file__, 1251, 8), _validate_vector_464704, *[v_464705], **kwargs_464706)
    
    # Assigning a type to the variable 'v' (line 1251)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1251, 4), 'v', _validate_vector_call_result_464707)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'u' (line 1252)
    u_464708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 7), 'u')
    # Obtaining the member 'dtype' of a type (line 1252)
    dtype_464709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 7), u_464708, 'dtype')
    # Getting the type of 'v' (line 1252)
    v_464710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 18), 'v')
    # Obtaining the member 'dtype' of a type (line 1252)
    dtype_464711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1252, 18), v_464710, 'dtype')
    # Applying the binary operator '==' (line 1252)
    result_eq_464712 = python_operator(stypy.reporting.localization.Localization(__file__, 1252, 7), '==', dtype_464709, dtype_464711)
    # Getting the type of 'bool' (line 1252)
    bool_464713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 29), 'bool')
    # Applying the binary operator '==' (line 1252)
    result_eq_464714 = python_operator(stypy.reporting.localization.Localization(__file__, 1252, 7), '==', dtype_464711, bool_464713)
    # Applying the binary operator '&' (line 1252)
    result_and__464715 = python_operator(stypy.reporting.localization.Localization(__file__, 1252, 7), '&', result_eq_464712, result_eq_464714)
    
    
    # Getting the type of 'w' (line 1252)
    w_464716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 38), 'w')
    # Getting the type of 'None' (line 1252)
    None_464717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1252, 43), 'None')
    # Applying the binary operator 'is' (line 1252)
    result_is__464718 = python_operator(stypy.reporting.localization.Localization(__file__, 1252, 38), 'is', w_464716, None_464717)
    
    # Applying the binary operator 'and' (line 1252)
    result_and_keyword_464719 = python_operator(stypy.reporting.localization.Localization(__file__, 1252, 7), 'and', result_and__464715, result_is__464718)
    
    # Testing the type of an if condition (line 1252)
    if_condition_464720 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1252, 4), result_and_keyword_464719)
    # Assigning a type to the variable 'if_condition_464720' (line 1252)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 4), 'if_condition_464720', if_condition_464720)
    # SSA begins for if statement (line 1252)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1253):
    
    # Assigning a Call to a Name (line 1253):
    
    # Call to sum(...): (line 1253)
    # Processing the call keyword arguments (line 1253)
    kwargs_464725 = {}
    # Getting the type of 'u' (line 1253)
    u_464721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 15), 'u', False)
    # Getting the type of 'v' (line 1253)
    v_464722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 19), 'v', False)
    # Applying the binary operator '&' (line 1253)
    result_and__464723 = python_operator(stypy.reporting.localization.Localization(__file__, 1253, 15), '&', u_464721, v_464722)
    
    # Obtaining the member 'sum' of a type (line 1253)
    sum_464724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1253, 15), result_and__464723, 'sum')
    # Calling sum(args, kwargs) (line 1253)
    sum_call_result_464726 = invoke(stypy.reporting.localization.Localization(__file__, 1253, 15), sum_464724, *[], **kwargs_464725)
    
    # Assigning a type to the variable 'ntt' (line 1253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 8), 'ntt', sum_call_result_464726)
    
    # Assigning a Call to a Name (line 1254):
    
    # Assigning a Call to a Name (line 1254):
    
    # Call to sum(...): (line 1254)
    # Processing the call keyword arguments (line 1254)
    kwargs_464733 = {}
    
    # Getting the type of 'u' (line 1254)
    u_464727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 16), 'u', False)
    # Applying the '~' unary operator (line 1254)
    result_inv_464728 = python_operator(stypy.reporting.localization.Localization(__file__, 1254, 15), '~', u_464727)
    
    
    # Getting the type of 'v' (line 1254)
    v_464729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 21), 'v', False)
    # Applying the '~' unary operator (line 1254)
    result_inv_464730 = python_operator(stypy.reporting.localization.Localization(__file__, 1254, 20), '~', v_464729)
    
    # Applying the binary operator '&' (line 1254)
    result_and__464731 = python_operator(stypy.reporting.localization.Localization(__file__, 1254, 15), '&', result_inv_464728, result_inv_464730)
    
    # Obtaining the member 'sum' of a type (line 1254)
    sum_464732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1254, 15), result_and__464731, 'sum')
    # Calling sum(args, kwargs) (line 1254)
    sum_call_result_464734 = invoke(stypy.reporting.localization.Localization(__file__, 1254, 15), sum_464732, *[], **kwargs_464733)
    
    # Assigning a type to the variable 'nff' (line 1254)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1254, 8), 'nff', sum_call_result_464734)
    # SSA branch for the else part of an if statement (line 1252)
    module_type_store.open_ssa_branch('else')
    
    # Type idiom detected: calculating its left and rigth part (line 1255)
    # Getting the type of 'w' (line 1255)
    w_464735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 9), 'w')
    # Getting the type of 'None' (line 1255)
    None_464736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 14), 'None')
    
    (may_be_464737, more_types_in_union_464738) = may_be_none(w_464735, None_464736)

    if may_be_464737:

        if more_types_in_union_464738:
            # Runtime conditional SSA (line 1255)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1256):
        
        # Assigning a Call to a Name (line 1256):
        
        # Call to sum(...): (line 1256)
        # Processing the call keyword arguments (line 1256)
        kwargs_464743 = {}
        # Getting the type of 'u' (line 1256)
        u_464739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 15), 'u', False)
        # Getting the type of 'v' (line 1256)
        v_464740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 19), 'v', False)
        # Applying the binary operator '*' (line 1256)
        result_mul_464741 = python_operator(stypy.reporting.localization.Localization(__file__, 1256, 15), '*', u_464739, v_464740)
        
        # Obtaining the member 'sum' of a type (line 1256)
        sum_464742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1256, 15), result_mul_464741, 'sum')
        # Calling sum(args, kwargs) (line 1256)
        sum_call_result_464744 = invoke(stypy.reporting.localization.Localization(__file__, 1256, 15), sum_464742, *[], **kwargs_464743)
        
        # Assigning a type to the variable 'ntt' (line 1256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1256, 8), 'ntt', sum_call_result_464744)
        
        # Assigning a Call to a Name (line 1257):
        
        # Assigning a Call to a Name (line 1257):
        
        # Call to sum(...): (line 1257)
        # Processing the call keyword arguments (line 1257)
        kwargs_464753 = {}
        float_464745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 16), 'float')
        # Getting the type of 'u' (line 1257)
        u_464746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 22), 'u', False)
        # Applying the binary operator '-' (line 1257)
        result_sub_464747 = python_operator(stypy.reporting.localization.Localization(__file__, 1257, 16), '-', float_464745, u_464746)
        
        float_464748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1257, 28), 'float')
        # Getting the type of 'v' (line 1257)
        v_464749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 34), 'v', False)
        # Applying the binary operator '-' (line 1257)
        result_sub_464750 = python_operator(stypy.reporting.localization.Localization(__file__, 1257, 28), '-', float_464748, v_464749)
        
        # Applying the binary operator '*' (line 1257)
        result_mul_464751 = python_operator(stypy.reporting.localization.Localization(__file__, 1257, 15), '*', result_sub_464747, result_sub_464750)
        
        # Obtaining the member 'sum' of a type (line 1257)
        sum_464752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1257, 15), result_mul_464751, 'sum')
        # Calling sum(args, kwargs) (line 1257)
        sum_call_result_464754 = invoke(stypy.reporting.localization.Localization(__file__, 1257, 15), sum_464752, *[], **kwargs_464753)
        
        # Assigning a type to the variable 'nff' (line 1257)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1257, 8), 'nff', sum_call_result_464754)

        if more_types_in_union_464738:
            # Runtime conditional SSA for else branch (line 1255)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_464737) or more_types_in_union_464738):
        
        # Assigning a Call to a Name (line 1259):
        
        # Assigning a Call to a Name (line 1259):
        
        # Call to _validate_vector(...): (line 1259)
        # Processing the call arguments (line 1259)
        # Getting the type of 'w' (line 1259)
        w_464756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 29), 'w', False)
        # Processing the call keyword arguments (line 1259)
        kwargs_464757 = {}
        # Getting the type of '_validate_vector' (line 1259)
        _validate_vector_464755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 1259)
        _validate_vector_call_result_464758 = invoke(stypy.reporting.localization.Localization(__file__, 1259, 12), _validate_vector_464755, *[w_464756], **kwargs_464757)
        
        # Assigning a type to the variable 'w' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 8), 'w', _validate_vector_call_result_464758)
        
        # Assigning a Call to a Name (line 1260):
        
        # Assigning a Call to a Name (line 1260):
        
        # Call to sum(...): (line 1260)
        # Processing the call keyword arguments (line 1260)
        kwargs_464765 = {}
        # Getting the type of 'u' (line 1260)
        u_464759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 15), 'u', False)
        # Getting the type of 'v' (line 1260)
        v_464760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 19), 'v', False)
        # Applying the binary operator '*' (line 1260)
        result_mul_464761 = python_operator(stypy.reporting.localization.Localization(__file__, 1260, 15), '*', u_464759, v_464760)
        
        # Getting the type of 'w' (line 1260)
        w_464762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 23), 'w', False)
        # Applying the binary operator '*' (line 1260)
        result_mul_464763 = python_operator(stypy.reporting.localization.Localization(__file__, 1260, 21), '*', result_mul_464761, w_464762)
        
        # Obtaining the member 'sum' of a type (line 1260)
        sum_464764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1260, 21), result_mul_464763, 'sum')
        # Calling sum(args, kwargs) (line 1260)
        sum_call_result_464766 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 21), sum_464764, *[], **kwargs_464765)
        
        # Assigning a type to the variable 'ntt' (line 1260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1260, 8), 'ntt', sum_call_result_464766)
        
        # Assigning a Call to a Name (line 1261):
        
        # Assigning a Call to a Name (line 1261):
        
        # Call to sum(...): (line 1261)
        # Processing the call keyword arguments (line 1261)
        kwargs_464777 = {}
        float_464767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 16), 'float')
        # Getting the type of 'u' (line 1261)
        u_464768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 22), 'u', False)
        # Applying the binary operator '-' (line 1261)
        result_sub_464769 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 16), '-', float_464767, u_464768)
        
        float_464770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 28), 'float')
        # Getting the type of 'v' (line 1261)
        v_464771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 34), 'v', False)
        # Applying the binary operator '-' (line 1261)
        result_sub_464772 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 28), '-', float_464770, v_464771)
        
        # Applying the binary operator '*' (line 1261)
        result_mul_464773 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 15), '*', result_sub_464769, result_sub_464772)
        
        # Getting the type of 'w' (line 1261)
        w_464774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 39), 'w', False)
        # Applying the binary operator '*' (line 1261)
        result_mul_464775 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 37), '*', result_mul_464773, w_464774)
        
        # Obtaining the member 'sum' of a type (line 1261)
        sum_464776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1261, 37), result_mul_464775, 'sum')
        # Calling sum(args, kwargs) (line 1261)
        sum_call_result_464778 = invoke(stypy.reporting.localization.Localization(__file__, 1261, 37), sum_464776, *[], **kwargs_464777)
        
        # Assigning a type to the variable 'nff' (line 1261)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1261, 8), 'nff', sum_call_result_464778)

        if (may_be_464737 and more_types_in_union_464738):
            # SSA join for if statement (line 1255)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA join for if statement (line 1252)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 1262):
    
    # Assigning a Subscript to a Name (line 1262):
    
    # Obtaining the type of the subscript
    int_464779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 4), 'int')
    
    # Call to _nbool_correspond_ft_tf(...): (line 1262)
    # Processing the call arguments (line 1262)
    # Getting the type of 'u' (line 1262)
    u_464781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 41), 'u', False)
    # Getting the type of 'v' (line 1262)
    v_464782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 44), 'v', False)
    # Processing the call keyword arguments (line 1262)
    kwargs_464783 = {}
    # Getting the type of '_nbool_correspond_ft_tf' (line 1262)
    _nbool_correspond_ft_tf_464780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 17), '_nbool_correspond_ft_tf', False)
    # Calling _nbool_correspond_ft_tf(args, kwargs) (line 1262)
    _nbool_correspond_ft_tf_call_result_464784 = invoke(stypy.reporting.localization.Localization(__file__, 1262, 17), _nbool_correspond_ft_tf_464780, *[u_464781, v_464782], **kwargs_464783)
    
    # Obtaining the member '__getitem__' of a type (line 1262)
    getitem___464785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1262, 4), _nbool_correspond_ft_tf_call_result_464784, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1262)
    subscript_call_result_464786 = invoke(stypy.reporting.localization.Localization(__file__, 1262, 4), getitem___464785, int_464779)
    
    # Assigning a type to the variable 'tuple_var_assignment_462806' (line 1262)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1262, 4), 'tuple_var_assignment_462806', subscript_call_result_464786)
    
    # Assigning a Subscript to a Name (line 1262):
    
    # Obtaining the type of the subscript
    int_464787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 4), 'int')
    
    # Call to _nbool_correspond_ft_tf(...): (line 1262)
    # Processing the call arguments (line 1262)
    # Getting the type of 'u' (line 1262)
    u_464789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 41), 'u', False)
    # Getting the type of 'v' (line 1262)
    v_464790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 44), 'v', False)
    # Processing the call keyword arguments (line 1262)
    kwargs_464791 = {}
    # Getting the type of '_nbool_correspond_ft_tf' (line 1262)
    _nbool_correspond_ft_tf_464788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 17), '_nbool_correspond_ft_tf', False)
    # Calling _nbool_correspond_ft_tf(args, kwargs) (line 1262)
    _nbool_correspond_ft_tf_call_result_464792 = invoke(stypy.reporting.localization.Localization(__file__, 1262, 17), _nbool_correspond_ft_tf_464788, *[u_464789, v_464790], **kwargs_464791)
    
    # Obtaining the member '__getitem__' of a type (line 1262)
    getitem___464793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1262, 4), _nbool_correspond_ft_tf_call_result_464792, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1262)
    subscript_call_result_464794 = invoke(stypy.reporting.localization.Localization(__file__, 1262, 4), getitem___464793, int_464787)
    
    # Assigning a type to the variable 'tuple_var_assignment_462807' (line 1262)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1262, 4), 'tuple_var_assignment_462807', subscript_call_result_464794)
    
    # Assigning a Name to a Name (line 1262):
    # Getting the type of 'tuple_var_assignment_462806' (line 1262)
    tuple_var_assignment_462806_464795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 4), 'tuple_var_assignment_462806')
    # Assigning a type to the variable 'nft' (line 1262)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1262, 5), 'nft', tuple_var_assignment_462806_464795)
    
    # Assigning a Name to a Name (line 1262):
    # Getting the type of 'tuple_var_assignment_462807' (line 1262)
    tuple_var_assignment_462807_464796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 4), 'tuple_var_assignment_462807')
    # Assigning a type to the variable 'ntf' (line 1262)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1262, 10), 'ntf', tuple_var_assignment_462807_464796)
    
    # Call to float(...): (line 1263)
    # Processing the call arguments (line 1263)
    float_464798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 17), 'float')
    # Getting the type of 'ntf' (line 1263)
    ntf_464799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 24), 'ntf', False)
    # Getting the type of 'nft' (line 1263)
    nft_464800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 30), 'nft', False)
    # Applying the binary operator '+' (line 1263)
    result_add_464801 = python_operator(stypy.reporting.localization.Localization(__file__, 1263, 24), '+', ntf_464799, nft_464800)
    
    # Applying the binary operator '*' (line 1263)
    result_mul_464802 = python_operator(stypy.reporting.localization.Localization(__file__, 1263, 17), '*', float_464798, result_add_464801)
    
    # Processing the call keyword arguments (line 1263)
    kwargs_464803 = {}
    # Getting the type of 'float' (line 1263)
    float_464797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 11), 'float', False)
    # Calling float(args, kwargs) (line 1263)
    float_call_result_464804 = invoke(stypy.reporting.localization.Localization(__file__, 1263, 11), float_464797, *[result_mul_464802], **kwargs_464803)
    
    
    # Call to float(...): (line 1263)
    # Processing the call arguments (line 1263)
    # Getting the type of 'ntt' (line 1263)
    ntt_464806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 44), 'ntt', False)
    # Getting the type of 'nff' (line 1263)
    nff_464807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 50), 'nff', False)
    # Applying the binary operator '+' (line 1263)
    result_add_464808 = python_operator(stypy.reporting.localization.Localization(__file__, 1263, 44), '+', ntt_464806, nff_464807)
    
    float_464809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1263, 56), 'float')
    # Getting the type of 'ntf' (line 1263)
    ntf_464810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 63), 'ntf', False)
    # Getting the type of 'nft' (line 1263)
    nft_464811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 69), 'nft', False)
    # Applying the binary operator '+' (line 1263)
    result_add_464812 = python_operator(stypy.reporting.localization.Localization(__file__, 1263, 63), '+', ntf_464810, nft_464811)
    
    # Applying the binary operator '*' (line 1263)
    result_mul_464813 = python_operator(stypy.reporting.localization.Localization(__file__, 1263, 56), '*', float_464809, result_add_464812)
    
    # Applying the binary operator '+' (line 1263)
    result_add_464814 = python_operator(stypy.reporting.localization.Localization(__file__, 1263, 54), '+', result_add_464808, result_mul_464813)
    
    # Processing the call keyword arguments (line 1263)
    kwargs_464815 = {}
    # Getting the type of 'float' (line 1263)
    float_464805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1263, 38), 'float', False)
    # Calling float(args, kwargs) (line 1263)
    float_call_result_464816 = invoke(stypy.reporting.localization.Localization(__file__, 1263, 38), float_464805, *[result_add_464814], **kwargs_464815)
    
    # Applying the binary operator 'div' (line 1263)
    result_div_464817 = python_operator(stypy.reporting.localization.Localization(__file__, 1263, 11), 'div', float_call_result_464804, float_call_result_464816)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1263)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1263, 4), 'stypy_return_type', result_div_464817)
    
    # ################# End of 'sokalmichener(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'sokalmichener' in the type store
    # Getting the type of 'stypy_return_type' (line 1217)
    stypy_return_type_464818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464818)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'sokalmichener'
    return stypy_return_type_464818

# Assigning a type to the variable 'sokalmichener' (line 1217)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1217, 0), 'sokalmichener', sokalmichener)

@norecursion
def sokalsneath(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 1266)
    None_464819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 24), 'None')
    defaults = [None_464819]
    # Create a new context for function 'sokalsneath'
    module_type_store = module_type_store.open_function_context('sokalsneath', 1266, 0, False)
    
    # Passed parameters checking function
    sokalsneath.stypy_localization = localization
    sokalsneath.stypy_type_of_self = None
    sokalsneath.stypy_type_store = module_type_store
    sokalsneath.stypy_function_name = 'sokalsneath'
    sokalsneath.stypy_param_names_list = ['u', 'v', 'w']
    sokalsneath.stypy_varargs_param_name = None
    sokalsneath.stypy_kwargs_param_name = None
    sokalsneath.stypy_call_defaults = defaults
    sokalsneath.stypy_call_varargs = varargs
    sokalsneath.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'sokalsneath', ['u', 'v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'sokalsneath', localization, ['u', 'v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'sokalsneath(...)' code ##################

    str_464820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1296, (-1)), 'str', '\n    Computes the Sokal-Sneath dissimilarity between two boolean 1-D arrays.\n\n    The Sokal-Sneath dissimilarity between `u` and `v`,\n\n    .. math::\n\n       \\frac{R}\n            {c_{TT} + R}\n\n    where :math:`c_{ij}` is the number of occurrences of\n    :math:`\\mathtt{u[k]} = i` and :math:`\\mathtt{v[k]} = j` for\n    :math:`k < n` and :math:`R = 2(c_{TF} + c_{FT})`.\n\n    Parameters\n    ----------\n    u : (N,) array_like, bool\n        Input array.\n    v : (N,) array_like, bool\n        Input array.\n    w : (N,) array_like, optional\n        The weights for each value in `u` and `v`. Default is None,\n        which gives each value a weight of 1.0\n\n    Returns\n    -------\n    sokalsneath : double\n        The Sokal-Sneath dissimilarity between vectors `u` and `v`.\n\n    ')
    
    # Assigning a Call to a Name (line 1297):
    
    # Assigning a Call to a Name (line 1297):
    
    # Call to _validate_vector(...): (line 1297)
    # Processing the call arguments (line 1297)
    # Getting the type of 'u' (line 1297)
    u_464822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 25), 'u', False)
    # Processing the call keyword arguments (line 1297)
    kwargs_464823 = {}
    # Getting the type of '_validate_vector' (line 1297)
    _validate_vector_464821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1297)
    _validate_vector_call_result_464824 = invoke(stypy.reporting.localization.Localization(__file__, 1297, 8), _validate_vector_464821, *[u_464822], **kwargs_464823)
    
    # Assigning a type to the variable 'u' (line 1297)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1297, 4), 'u', _validate_vector_call_result_464824)
    
    # Assigning a Call to a Name (line 1298):
    
    # Assigning a Call to a Name (line 1298):
    
    # Call to _validate_vector(...): (line 1298)
    # Processing the call arguments (line 1298)
    # Getting the type of 'v' (line 1298)
    v_464826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 25), 'v', False)
    # Processing the call keyword arguments (line 1298)
    kwargs_464827 = {}
    # Getting the type of '_validate_vector' (line 1298)
    _validate_vector_464825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 8), '_validate_vector', False)
    # Calling _validate_vector(args, kwargs) (line 1298)
    _validate_vector_call_result_464828 = invoke(stypy.reporting.localization.Localization(__file__, 1298, 8), _validate_vector_464825, *[v_464826], **kwargs_464827)
    
    # Assigning a type to the variable 'v' (line 1298)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1298, 4), 'v', _validate_vector_call_result_464828)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'u' (line 1299)
    u_464829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 7), 'u')
    # Obtaining the member 'dtype' of a type (line 1299)
    dtype_464830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1299, 7), u_464829, 'dtype')
    # Getting the type of 'v' (line 1299)
    v_464831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 18), 'v')
    # Obtaining the member 'dtype' of a type (line 1299)
    dtype_464832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1299, 18), v_464831, 'dtype')
    # Applying the binary operator '==' (line 1299)
    result_eq_464833 = python_operator(stypy.reporting.localization.Localization(__file__, 1299, 7), '==', dtype_464830, dtype_464832)
    # Getting the type of 'bool' (line 1299)
    bool_464834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 29), 'bool')
    # Applying the binary operator '==' (line 1299)
    result_eq_464835 = python_operator(stypy.reporting.localization.Localization(__file__, 1299, 7), '==', dtype_464832, bool_464834)
    # Applying the binary operator '&' (line 1299)
    result_and__464836 = python_operator(stypy.reporting.localization.Localization(__file__, 1299, 7), '&', result_eq_464833, result_eq_464835)
    
    
    # Getting the type of 'w' (line 1299)
    w_464837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 38), 'w')
    # Getting the type of 'None' (line 1299)
    None_464838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 43), 'None')
    # Applying the binary operator 'is' (line 1299)
    result_is__464839 = python_operator(stypy.reporting.localization.Localization(__file__, 1299, 38), 'is', w_464837, None_464838)
    
    # Applying the binary operator 'and' (line 1299)
    result_and_keyword_464840 = python_operator(stypy.reporting.localization.Localization(__file__, 1299, 7), 'and', result_and__464836, result_is__464839)
    
    # Testing the type of an if condition (line 1299)
    if_condition_464841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1299, 4), result_and_keyword_464840)
    # Assigning a type to the variable 'if_condition_464841' (line 1299)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1299, 4), 'if_condition_464841', if_condition_464841)
    # SSA begins for if statement (line 1299)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1300):
    
    # Assigning a Call to a Name (line 1300):
    
    # Call to sum(...): (line 1300)
    # Processing the call keyword arguments (line 1300)
    kwargs_464846 = {}
    # Getting the type of 'u' (line 1300)
    u_464842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 15), 'u', False)
    # Getting the type of 'v' (line 1300)
    v_464843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 19), 'v', False)
    # Applying the binary operator '&' (line 1300)
    result_and__464844 = python_operator(stypy.reporting.localization.Localization(__file__, 1300, 15), '&', u_464842, v_464843)
    
    # Obtaining the member 'sum' of a type (line 1300)
    sum_464845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1300, 15), result_and__464844, 'sum')
    # Calling sum(args, kwargs) (line 1300)
    sum_call_result_464847 = invoke(stypy.reporting.localization.Localization(__file__, 1300, 15), sum_464845, *[], **kwargs_464846)
    
    # Assigning a type to the variable 'ntt' (line 1300)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1300, 8), 'ntt', sum_call_result_464847)
    # SSA branch for the else part of an if statement (line 1299)
    module_type_store.open_ssa_branch('else')
    
    # Type idiom detected: calculating its left and rigth part (line 1301)
    # Getting the type of 'w' (line 1301)
    w_464848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 9), 'w')
    # Getting the type of 'None' (line 1301)
    None_464849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 14), 'None')
    
    (may_be_464850, more_types_in_union_464851) = may_be_none(w_464848, None_464849)

    if may_be_464850:

        if more_types_in_union_464851:
            # Runtime conditional SSA (line 1301)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1302):
        
        # Assigning a Call to a Name (line 1302):
        
        # Call to sum(...): (line 1302)
        # Processing the call keyword arguments (line 1302)
        kwargs_464856 = {}
        # Getting the type of 'u' (line 1302)
        u_464852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 15), 'u', False)
        # Getting the type of 'v' (line 1302)
        v_464853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 19), 'v', False)
        # Applying the binary operator '*' (line 1302)
        result_mul_464854 = python_operator(stypy.reporting.localization.Localization(__file__, 1302, 15), '*', u_464852, v_464853)
        
        # Obtaining the member 'sum' of a type (line 1302)
        sum_464855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1302, 15), result_mul_464854, 'sum')
        # Calling sum(args, kwargs) (line 1302)
        sum_call_result_464857 = invoke(stypy.reporting.localization.Localization(__file__, 1302, 15), sum_464855, *[], **kwargs_464856)
        
        # Assigning a type to the variable 'ntt' (line 1302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1302, 8), 'ntt', sum_call_result_464857)

        if more_types_in_union_464851:
            # Runtime conditional SSA for else branch (line 1301)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_464850) or more_types_in_union_464851):
        
        # Assigning a Call to a Name (line 1304):
        
        # Assigning a Call to a Name (line 1304):
        
        # Call to _validate_vector(...): (line 1304)
        # Processing the call arguments (line 1304)
        # Getting the type of 'w' (line 1304)
        w_464859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 29), 'w', False)
        # Processing the call keyword arguments (line 1304)
        kwargs_464860 = {}
        # Getting the type of '_validate_vector' (line 1304)
        _validate_vector_464858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1304, 12), '_validate_vector', False)
        # Calling _validate_vector(args, kwargs) (line 1304)
        _validate_vector_call_result_464861 = invoke(stypy.reporting.localization.Localization(__file__, 1304, 12), _validate_vector_464858, *[w_464859], **kwargs_464860)
        
        # Assigning a type to the variable 'w' (line 1304)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1304, 8), 'w', _validate_vector_call_result_464861)
        
        # Assigning a Call to a Name (line 1305):
        
        # Assigning a Call to a Name (line 1305):
        
        # Call to sum(...): (line 1305)
        # Processing the call keyword arguments (line 1305)
        kwargs_464868 = {}
        # Getting the type of 'u' (line 1305)
        u_464862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 15), 'u', False)
        # Getting the type of 'v' (line 1305)
        v_464863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 19), 'v', False)
        # Applying the binary operator '*' (line 1305)
        result_mul_464864 = python_operator(stypy.reporting.localization.Localization(__file__, 1305, 15), '*', u_464862, v_464863)
        
        # Getting the type of 'w' (line 1305)
        w_464865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 23), 'w', False)
        # Applying the binary operator '*' (line 1305)
        result_mul_464866 = python_operator(stypy.reporting.localization.Localization(__file__, 1305, 21), '*', result_mul_464864, w_464865)
        
        # Obtaining the member 'sum' of a type (line 1305)
        sum_464867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 21), result_mul_464866, 'sum')
        # Calling sum(args, kwargs) (line 1305)
        sum_call_result_464869 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 21), sum_464867, *[], **kwargs_464868)
        
        # Assigning a type to the variable 'ntt' (line 1305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1305, 8), 'ntt', sum_call_result_464869)

        if (may_be_464850 and more_types_in_union_464851):
            # SSA join for if statement (line 1301)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA join for if statement (line 1299)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 1306):
    
    # Assigning a Subscript to a Name (line 1306):
    
    # Obtaining the type of the subscript
    int_464870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 4), 'int')
    
    # Call to _nbool_correspond_ft_tf(...): (line 1306)
    # Processing the call arguments (line 1306)
    # Getting the type of 'u' (line 1306)
    u_464872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 41), 'u', False)
    # Getting the type of 'v' (line 1306)
    v_464873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 44), 'v', False)
    # Processing the call keyword arguments (line 1306)
    # Getting the type of 'w' (line 1306)
    w_464874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 49), 'w', False)
    keyword_464875 = w_464874
    kwargs_464876 = {'w': keyword_464875}
    # Getting the type of '_nbool_correspond_ft_tf' (line 1306)
    _nbool_correspond_ft_tf_464871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 17), '_nbool_correspond_ft_tf', False)
    # Calling _nbool_correspond_ft_tf(args, kwargs) (line 1306)
    _nbool_correspond_ft_tf_call_result_464877 = invoke(stypy.reporting.localization.Localization(__file__, 1306, 17), _nbool_correspond_ft_tf_464871, *[u_464872, v_464873], **kwargs_464876)
    
    # Obtaining the member '__getitem__' of a type (line 1306)
    getitem___464878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1306, 4), _nbool_correspond_ft_tf_call_result_464877, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1306)
    subscript_call_result_464879 = invoke(stypy.reporting.localization.Localization(__file__, 1306, 4), getitem___464878, int_464870)
    
    # Assigning a type to the variable 'tuple_var_assignment_462808' (line 1306)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1306, 4), 'tuple_var_assignment_462808', subscript_call_result_464879)
    
    # Assigning a Subscript to a Name (line 1306):
    
    # Obtaining the type of the subscript
    int_464880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1306, 4), 'int')
    
    # Call to _nbool_correspond_ft_tf(...): (line 1306)
    # Processing the call arguments (line 1306)
    # Getting the type of 'u' (line 1306)
    u_464882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 41), 'u', False)
    # Getting the type of 'v' (line 1306)
    v_464883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 44), 'v', False)
    # Processing the call keyword arguments (line 1306)
    # Getting the type of 'w' (line 1306)
    w_464884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 49), 'w', False)
    keyword_464885 = w_464884
    kwargs_464886 = {'w': keyword_464885}
    # Getting the type of '_nbool_correspond_ft_tf' (line 1306)
    _nbool_correspond_ft_tf_464881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 17), '_nbool_correspond_ft_tf', False)
    # Calling _nbool_correspond_ft_tf(args, kwargs) (line 1306)
    _nbool_correspond_ft_tf_call_result_464887 = invoke(stypy.reporting.localization.Localization(__file__, 1306, 17), _nbool_correspond_ft_tf_464881, *[u_464882, v_464883], **kwargs_464886)
    
    # Obtaining the member '__getitem__' of a type (line 1306)
    getitem___464888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1306, 4), _nbool_correspond_ft_tf_call_result_464887, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1306)
    subscript_call_result_464889 = invoke(stypy.reporting.localization.Localization(__file__, 1306, 4), getitem___464888, int_464880)
    
    # Assigning a type to the variable 'tuple_var_assignment_462809' (line 1306)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1306, 4), 'tuple_var_assignment_462809', subscript_call_result_464889)
    
    # Assigning a Name to a Name (line 1306):
    # Getting the type of 'tuple_var_assignment_462808' (line 1306)
    tuple_var_assignment_462808_464890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 4), 'tuple_var_assignment_462808')
    # Assigning a type to the variable 'nft' (line 1306)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1306, 5), 'nft', tuple_var_assignment_462808_464890)
    
    # Assigning a Name to a Name (line 1306):
    # Getting the type of 'tuple_var_assignment_462809' (line 1306)
    tuple_var_assignment_462809_464891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1306, 4), 'tuple_var_assignment_462809')
    # Assigning a type to the variable 'ntf' (line 1306)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1306, 10), 'ntf', tuple_var_assignment_462809_464891)
    
    # Assigning a Call to a Name (line 1307):
    
    # Assigning a Call to a Name (line 1307):
    
    # Call to array(...): (line 1307)
    # Processing the call arguments (line 1307)
    # Getting the type of 'ntt' (line 1307)
    ntt_464894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 21), 'ntt', False)
    float_464895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1307, 27), 'float')
    # Getting the type of 'ntf' (line 1307)
    ntf_464896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 34), 'ntf', False)
    # Getting the type of 'nft' (line 1307)
    nft_464897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 40), 'nft', False)
    # Applying the binary operator '+' (line 1307)
    result_add_464898 = python_operator(stypy.reporting.localization.Localization(__file__, 1307, 34), '+', ntf_464896, nft_464897)
    
    # Applying the binary operator '*' (line 1307)
    result_mul_464899 = python_operator(stypy.reporting.localization.Localization(__file__, 1307, 27), '*', float_464895, result_add_464898)
    
    # Applying the binary operator '+' (line 1307)
    result_add_464900 = python_operator(stypy.reporting.localization.Localization(__file__, 1307, 21), '+', ntt_464894, result_mul_464899)
    
    # Processing the call keyword arguments (line 1307)
    kwargs_464901 = {}
    # Getting the type of 'np' (line 1307)
    np_464892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1307, 12), 'np', False)
    # Obtaining the member 'array' of a type (line 1307)
    array_464893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1307, 12), np_464892, 'array')
    # Calling array(args, kwargs) (line 1307)
    array_call_result_464902 = invoke(stypy.reporting.localization.Localization(__file__, 1307, 12), array_464893, *[result_add_464900], **kwargs_464901)
    
    # Assigning a type to the variable 'denom' (line 1307)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1307, 4), 'denom', array_call_result_464902)
    
    
    
    # Call to any(...): (line 1308)
    # Processing the call keyword arguments (line 1308)
    kwargs_464905 = {}
    # Getting the type of 'denom' (line 1308)
    denom_464903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 11), 'denom', False)
    # Obtaining the member 'any' of a type (line 1308)
    any_464904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1308, 11), denom_464903, 'any')
    # Calling any(args, kwargs) (line 1308)
    any_call_result_464906 = invoke(stypy.reporting.localization.Localization(__file__, 1308, 11), any_464904, *[], **kwargs_464905)
    
    # Applying the 'not' unary operator (line 1308)
    result_not__464907 = python_operator(stypy.reporting.localization.Localization(__file__, 1308, 7), 'not', any_call_result_464906)
    
    # Testing the type of an if condition (line 1308)
    if_condition_464908 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1308, 4), result_not__464907)
    # Assigning a type to the variable 'if_condition_464908' (line 1308)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1308, 4), 'if_condition_464908', if_condition_464908)
    # SSA begins for if statement (line 1308)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1309)
    # Processing the call arguments (line 1309)
    str_464910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 25), 'str', 'Sokal-Sneath dissimilarity is not defined for vectors that are entirely false.')
    # Processing the call keyword arguments (line 1309)
    kwargs_464911 = {}
    # Getting the type of 'ValueError' (line 1309)
    ValueError_464909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1309)
    ValueError_call_result_464912 = invoke(stypy.reporting.localization.Localization(__file__, 1309, 14), ValueError_464909, *[str_464910], **kwargs_464911)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1309, 8), ValueError_call_result_464912, 'raise parameter', BaseException)
    # SSA join for if statement (line 1308)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to float(...): (line 1311)
    # Processing the call arguments (line 1311)
    float_464914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1311, 17), 'float')
    # Getting the type of 'ntf' (line 1311)
    ntf_464915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 24), 'ntf', False)
    # Getting the type of 'nft' (line 1311)
    nft_464916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 30), 'nft', False)
    # Applying the binary operator '+' (line 1311)
    result_add_464917 = python_operator(stypy.reporting.localization.Localization(__file__, 1311, 24), '+', ntf_464915, nft_464916)
    
    # Applying the binary operator '*' (line 1311)
    result_mul_464918 = python_operator(stypy.reporting.localization.Localization(__file__, 1311, 17), '*', float_464914, result_add_464917)
    
    # Processing the call keyword arguments (line 1311)
    kwargs_464919 = {}
    # Getting the type of 'float' (line 1311)
    float_464913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 11), 'float', False)
    # Calling float(args, kwargs) (line 1311)
    float_call_result_464920 = invoke(stypy.reporting.localization.Localization(__file__, 1311, 11), float_464913, *[result_mul_464918], **kwargs_464919)
    
    # Getting the type of 'denom' (line 1311)
    denom_464921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1311, 38), 'denom')
    # Applying the binary operator 'div' (line 1311)
    result_div_464922 = python_operator(stypy.reporting.localization.Localization(__file__, 1311, 11), 'div', float_call_result_464920, denom_464921)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1311)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1311, 4), 'stypy_return_type', result_div_464922)
    
    # ################# End of 'sokalsneath(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'sokalsneath' in the type store
    # Getting the type of 'stypy_return_type' (line 1266)
    stypy_return_type_464923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_464923)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'sokalsneath'
    return stypy_return_type_464923

# Assigning a type to the variable 'sokalsneath' (line 1266)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1266, 0), 'sokalsneath', sokalsneath)

# Assigning a Call to a Name (line 1314):

# Assigning a Call to a Name (line 1314):

# Call to partial(...): (line 1314)
# Processing the call arguments (line 1314)
# Getting the type of '_convert_to_type' (line 1314)
_convert_to_type_464925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1314, 29), '_convert_to_type', False)
# Processing the call keyword arguments (line 1314)
# Getting the type of 'np' (line 1314)
np_464926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1314, 56), 'np', False)
# Obtaining the member 'double' of a type (line 1314)
double_464927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1314, 56), np_464926, 'double')
keyword_464928 = double_464927
kwargs_464929 = {'out_type': keyword_464928}
# Getting the type of 'partial' (line 1314)
partial_464924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1314, 21), 'partial', False)
# Calling partial(args, kwargs) (line 1314)
partial_call_result_464930 = invoke(stypy.reporting.localization.Localization(__file__, 1314, 21), partial_464924, *[_convert_to_type_464925], **kwargs_464929)

# Assigning a type to the variable '_convert_to_double' (line 1314)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1314, 0), '_convert_to_double', partial_call_result_464930)

# Assigning a Call to a Name (line 1315):

# Assigning a Call to a Name (line 1315):

# Call to partial(...): (line 1315)
# Processing the call arguments (line 1315)
# Getting the type of '_convert_to_type' (line 1315)
_convert_to_type_464932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 27), '_convert_to_type', False)
# Processing the call keyword arguments (line 1315)
# Getting the type of 'bool' (line 1315)
bool_464933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 54), 'bool', False)
keyword_464934 = bool_464933
kwargs_464935 = {'out_type': keyword_464934}
# Getting the type of 'partial' (line 1315)
partial_464931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1315, 19), 'partial', False)
# Calling partial(args, kwargs) (line 1315)
partial_call_result_464936 = invoke(stypy.reporting.localization.Localization(__file__, 1315, 19), partial_464931, *[_convert_to_type_464932], **kwargs_464935)

# Assigning a type to the variable '_convert_to_bool' (line 1315)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1315, 0), '_convert_to_bool', partial_call_result_464936)

# Assigning a Name to a Attribute (line 1318):

# Assigning a Name to a Attribute (line 1318):
# Getting the type of '_correlation_pdist_wrap' (line 1318)
_correlation_pdist_wrap_464937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 47), '_correlation_pdist_wrap')
# Getting the type of '_distance_wrap' (line 1318)
_distance_wrap_464938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1318, 0), '_distance_wrap')
# Setting the type of the member 'pdist_correlation_double_wrap' of a type (line 1318)
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1318, 0), _distance_wrap_464938, 'pdist_correlation_double_wrap', _correlation_pdist_wrap_464937)

# Assigning a Name to a Attribute (line 1319):

# Assigning a Name to a Attribute (line 1319):
# Getting the type of '_correlation_cdist_wrap' (line 1319)
_correlation_cdist_wrap_464939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 47), '_correlation_cdist_wrap')
# Getting the type of '_distance_wrap' (line 1319)
_distance_wrap_464940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1319, 0), '_distance_wrap')
# Setting the type of the member 'cdist_correlation_double_wrap' of a type (line 1319)
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1319, 0), _distance_wrap_464940, 'cdist_correlation_double_wrap', _correlation_cdist_wrap_464939)

# Assigning a Call to a Name (line 1340):

# Assigning a Call to a Name (line 1340):

# Call to namedtuple(...): (line 1340)
# Processing the call arguments (line 1340)
str_464942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1340, 24), 'str', 'MetricInfo')
str_464943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1340, 38), 'str', 'aka types validator ')
# Processing the call keyword arguments (line 1340)
kwargs_464944 = {}
# Getting the type of 'namedtuple' (line 1340)
namedtuple_464941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1340, 13), 'namedtuple', False)
# Calling namedtuple(args, kwargs) (line 1340)
namedtuple_call_result_464945 = invoke(stypy.reporting.localization.Localization(__file__, 1340, 13), namedtuple_464941, *[str_464942, str_464943], **kwargs_464944)

# Assigning a type to the variable 'MetricInfo' (line 1340)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1340, 0), 'MetricInfo', namedtuple_call_result_464945)

# Assigning a Tuple to a Attribute (line 1341):

# Assigning a Tuple to a Attribute (line 1341):

# Obtaining an instance of the builtin type 'tuple' (line 1341)
tuple_464946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 35), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 1341)
# Adding element type (line 1341)

# Obtaining an instance of the builtin type 'list' (line 1341)
list_464947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 35), 'list')
# Adding type elements to the builtin type 'list' instance (line 1341)
# Adding element type (line 1341)
str_464948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1341, 36), 'str', 'double')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1341, 35), list_464947, str_464948)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1341, 35), tuple_464946, list_464947)
# Adding element type (line 1341)
# Getting the type of 'None' (line 1341)
None_464949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 47), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1341, 35), tuple_464946, None_464949)

# Getting the type of 'MetricInfo' (line 1341)
MetricInfo_464950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1341, 0), 'MetricInfo')
# Obtaining the member '__new__' of a type (line 1341)
new___464951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1341, 0), MetricInfo_464950, '__new__')
# Setting the type of the member '__defaults__' of a type (line 1341)
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1341, 0), new___464951, '__defaults__', tuple_464946)

# Assigning a Dict to a Name (line 1343):

# Assigning a Dict to a Name (line 1343):

# Obtaining an instance of the builtin type 'dict' (line 1343)
dict_464952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1343, 11), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 1343)
# Adding element type (key, value) (line 1343)
str_464953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 4), 'str', 'braycurtis')

# Call to MetricInfo(...): (line 1344)
# Processing the call keyword arguments (line 1344)

# Obtaining an instance of the builtin type 'list' (line 1344)
list_464955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 1344)
# Adding element type (line 1344)
str_464956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1344, 34), 'str', 'braycurtis')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1344, 33), list_464955, str_464956)

keyword_464957 = list_464955
kwargs_464958 = {'aka': keyword_464957}
# Getting the type of 'MetricInfo' (line 1344)
MetricInfo_464954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1344, 18), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1344)
MetricInfo_call_result_464959 = invoke(stypy.reporting.localization.Localization(__file__, 1344, 18), MetricInfo_464954, *[], **kwargs_464958)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_464953, MetricInfo_call_result_464959))
# Adding element type (key, value) (line 1343)
str_464960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1345, 4), 'str', 'canberra')

# Call to MetricInfo(...): (line 1345)
# Processing the call keyword arguments (line 1345)

# Obtaining an instance of the builtin type 'list' (line 1345)
list_464962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1345, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 1345)
# Adding element type (line 1345)
str_464963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1345, 32), 'str', 'canberra')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1345, 31), list_464962, str_464963)

keyword_464964 = list_464962
kwargs_464965 = {'aka': keyword_464964}
# Getting the type of 'MetricInfo' (line 1345)
MetricInfo_464961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1345, 16), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1345)
MetricInfo_call_result_464966 = invoke(stypy.reporting.localization.Localization(__file__, 1345, 16), MetricInfo_464961, *[], **kwargs_464965)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_464960, MetricInfo_call_result_464966))
# Adding element type (key, value) (line 1343)
str_464967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 4), 'str', 'chebyshev')

# Call to MetricInfo(...): (line 1346)
# Processing the call keyword arguments (line 1346)

# Obtaining an instance of the builtin type 'list' (line 1346)
list_464969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1346)
# Adding element type (line 1346)
str_464970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 33), 'str', 'chebychev')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1346, 32), list_464969, str_464970)
# Adding element type (line 1346)
str_464971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 46), 'str', 'chebyshev')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1346, 32), list_464969, str_464971)
# Adding element type (line 1346)
str_464972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 59), 'str', 'cheby')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1346, 32), list_464969, str_464972)
# Adding element type (line 1346)
str_464973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 68), 'str', 'cheb')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1346, 32), list_464969, str_464973)
# Adding element type (line 1346)
str_464974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1346, 76), 'str', 'ch')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1346, 32), list_464969, str_464974)

keyword_464975 = list_464969
kwargs_464976 = {'aka': keyword_464975}
# Getting the type of 'MetricInfo' (line 1346)
MetricInfo_464968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1346, 17), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1346)
MetricInfo_call_result_464977 = invoke(stypy.reporting.localization.Localization(__file__, 1346, 17), MetricInfo_464968, *[], **kwargs_464976)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_464967, MetricInfo_call_result_464977))
# Adding element type (key, value) (line 1343)
str_464978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 4), 'str', 'cityblock')

# Call to MetricInfo(...): (line 1347)
# Processing the call keyword arguments (line 1347)

# Obtaining an instance of the builtin type 'list' (line 1347)
list_464980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1347)
# Adding element type (line 1347)
str_464981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 33), 'str', 'cityblock')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1347, 32), list_464980, str_464981)
# Adding element type (line 1347)
str_464982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 46), 'str', 'cblock')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1347, 32), list_464980, str_464982)
# Adding element type (line 1347)
str_464983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 56), 'str', 'cb')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1347, 32), list_464980, str_464983)
# Adding element type (line 1347)
str_464984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1347, 62), 'str', 'c')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1347, 32), list_464980, str_464984)

keyword_464985 = list_464980
kwargs_464986 = {'aka': keyword_464985}
# Getting the type of 'MetricInfo' (line 1347)
MetricInfo_464979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1347, 17), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1347)
MetricInfo_call_result_464987 = invoke(stypy.reporting.localization.Localization(__file__, 1347, 17), MetricInfo_464979, *[], **kwargs_464986)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_464978, MetricInfo_call_result_464987))
# Adding element type (key, value) (line 1343)
str_464988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 4), 'str', 'correlation')

# Call to MetricInfo(...): (line 1348)
# Processing the call keyword arguments (line 1348)

# Obtaining an instance of the builtin type 'list' (line 1348)
list_464990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1348)
# Adding element type (line 1348)
str_464991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 35), 'str', 'correlation')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1348, 34), list_464990, str_464991)
# Adding element type (line 1348)
str_464992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1348, 50), 'str', 'co')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1348, 34), list_464990, str_464992)

keyword_464993 = list_464990
kwargs_464994 = {'aka': keyword_464993}
# Getting the type of 'MetricInfo' (line 1348)
MetricInfo_464989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1348, 19), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1348)
MetricInfo_call_result_464995 = invoke(stypy.reporting.localization.Localization(__file__, 1348, 19), MetricInfo_464989, *[], **kwargs_464994)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_464988, MetricInfo_call_result_464995))
# Adding element type (key, value) (line 1343)
str_464996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1349, 4), 'str', 'cosine')

# Call to MetricInfo(...): (line 1349)
# Processing the call keyword arguments (line 1349)

# Obtaining an instance of the builtin type 'list' (line 1349)
list_464998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1349, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 1349)
# Adding element type (line 1349)
str_464999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1349, 30), 'str', 'cosine')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1349, 29), list_464998, str_464999)
# Adding element type (line 1349)
str_465000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1349, 40), 'str', 'cos')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1349, 29), list_464998, str_465000)

keyword_465001 = list_464998
kwargs_465002 = {'aka': keyword_465001}
# Getting the type of 'MetricInfo' (line 1349)
MetricInfo_464997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1349, 14), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1349)
MetricInfo_call_result_465003 = invoke(stypy.reporting.localization.Localization(__file__, 1349, 14), MetricInfo_464997, *[], **kwargs_465002)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_464996, MetricInfo_call_result_465003))
# Adding element type (key, value) (line 1343)
str_465004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1350, 4), 'str', 'dice')

# Call to MetricInfo(...): (line 1350)
# Processing the call keyword arguments (line 1350)

# Obtaining an instance of the builtin type 'list' (line 1350)
list_465006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1350, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1350)
# Adding element type (line 1350)
str_465007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1350, 28), 'str', 'dice')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1350, 27), list_465006, str_465007)

keyword_465008 = list_465006

# Obtaining an instance of the builtin type 'list' (line 1350)
list_465009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1350, 43), 'list')
# Adding type elements to the builtin type 'list' instance (line 1350)
# Adding element type (line 1350)
str_465010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1350, 44), 'str', 'bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1350, 43), list_465009, str_465010)

keyword_465011 = list_465009
kwargs_465012 = {'aka': keyword_465008, 'types': keyword_465011}
# Getting the type of 'MetricInfo' (line 1350)
MetricInfo_465005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1350, 12), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1350)
MetricInfo_call_result_465013 = invoke(stypy.reporting.localization.Localization(__file__, 1350, 12), MetricInfo_465005, *[], **kwargs_465012)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465004, MetricInfo_call_result_465013))
# Adding element type (key, value) (line 1343)
str_465014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 4), 'str', 'euclidean')

# Call to MetricInfo(...): (line 1351)
# Processing the call keyword arguments (line 1351)

# Obtaining an instance of the builtin type 'list' (line 1351)
list_465016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1351)
# Adding element type (line 1351)
str_465017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 33), 'str', 'euclidean')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1351, 32), list_465016, str_465017)
# Adding element type (line 1351)
str_465018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 46), 'str', 'euclid')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1351, 32), list_465016, str_465018)
# Adding element type (line 1351)
str_465019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 56), 'str', 'eu')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1351, 32), list_465016, str_465019)
# Adding element type (line 1351)
str_465020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1351, 62), 'str', 'e')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1351, 32), list_465016, str_465020)

keyword_465021 = list_465016
kwargs_465022 = {'aka': keyword_465021}
# Getting the type of 'MetricInfo' (line 1351)
MetricInfo_465015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1351, 17), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1351)
MetricInfo_call_result_465023 = invoke(stypy.reporting.localization.Localization(__file__, 1351, 17), MetricInfo_465015, *[], **kwargs_465022)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465014, MetricInfo_call_result_465023))
# Adding element type (key, value) (line 1343)
str_465024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1352, 4), 'str', 'hamming')

# Call to MetricInfo(...): (line 1352)
# Processing the call keyword arguments (line 1352)

# Obtaining an instance of the builtin type 'list' (line 1352)
list_465026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1352, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1352)
# Adding element type (line 1352)
str_465027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1352, 31), 'str', 'matching')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1352, 30), list_465026, str_465027)
# Adding element type (line 1352)
str_465028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1352, 43), 'str', 'hamming')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1352, 30), list_465026, str_465028)
# Adding element type (line 1352)
str_465029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1352, 54), 'str', 'hamm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1352, 30), list_465026, str_465029)
# Adding element type (line 1352)
str_465030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1352, 62), 'str', 'ha')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1352, 30), list_465026, str_465030)
# Adding element type (line 1352)
str_465031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1352, 68), 'str', 'h')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1352, 30), list_465026, str_465031)

keyword_465032 = list_465026

# Obtaining an instance of the builtin type 'list' (line 1353)
list_465033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1353, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1353)
# Adding element type (line 1353)
str_465034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1353, 33), 'str', 'double')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1353, 32), list_465033, str_465034)
# Adding element type (line 1353)
str_465035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1353, 43), 'str', 'bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1353, 32), list_465033, str_465035)

keyword_465036 = list_465033
kwargs_465037 = {'aka': keyword_465032, 'types': keyword_465036}
# Getting the type of 'MetricInfo' (line 1352)
MetricInfo_465025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1352, 15), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1352)
MetricInfo_call_result_465038 = invoke(stypy.reporting.localization.Localization(__file__, 1352, 15), MetricInfo_465025, *[], **kwargs_465037)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465024, MetricInfo_call_result_465038))
# Adding element type (key, value) (line 1343)
str_465039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 4), 'str', 'jaccard')

# Call to MetricInfo(...): (line 1354)
# Processing the call keyword arguments (line 1354)

# Obtaining an instance of the builtin type 'list' (line 1354)
list_465041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 1354)
# Adding element type (line 1354)
str_465042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 31), 'str', 'jaccard')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1354, 30), list_465041, str_465042)
# Adding element type (line 1354)
str_465043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 42), 'str', 'jacc')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1354, 30), list_465041, str_465043)
# Adding element type (line 1354)
str_465044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 50), 'str', 'ja')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1354, 30), list_465041, str_465044)
# Adding element type (line 1354)
str_465045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1354, 56), 'str', 'j')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1354, 30), list_465041, str_465045)

keyword_465046 = list_465041

# Obtaining an instance of the builtin type 'list' (line 1355)
list_465047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1355, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1355)
# Adding element type (line 1355)
str_465048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1355, 33), 'str', 'double')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1355, 32), list_465047, str_465048)
# Adding element type (line 1355)
str_465049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1355, 43), 'str', 'bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1355, 32), list_465047, str_465049)

keyword_465050 = list_465047
kwargs_465051 = {'aka': keyword_465046, 'types': keyword_465050}
# Getting the type of 'MetricInfo' (line 1354)
MetricInfo_465040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1354, 15), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1354)
MetricInfo_call_result_465052 = invoke(stypy.reporting.localization.Localization(__file__, 1354, 15), MetricInfo_465040, *[], **kwargs_465051)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465039, MetricInfo_call_result_465052))
# Adding element type (key, value) (line 1343)
str_465053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 4), 'str', 'kulsinski')

# Call to MetricInfo(...): (line 1356)
# Processing the call keyword arguments (line 1356)

# Obtaining an instance of the builtin type 'list' (line 1356)
list_465055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1356)
# Adding element type (line 1356)
str_465056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 33), 'str', 'kulsinski')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1356, 32), list_465055, str_465056)

keyword_465057 = list_465055

# Obtaining an instance of the builtin type 'list' (line 1356)
list_465058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 53), 'list')
# Adding type elements to the builtin type 'list' instance (line 1356)
# Adding element type (line 1356)
str_465059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1356, 54), 'str', 'bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1356, 53), list_465058, str_465059)

keyword_465060 = list_465058
kwargs_465061 = {'aka': keyword_465057, 'types': keyword_465060}
# Getting the type of 'MetricInfo' (line 1356)
MetricInfo_465054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1356, 17), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1356)
MetricInfo_call_result_465062 = invoke(stypy.reporting.localization.Localization(__file__, 1356, 17), MetricInfo_465054, *[], **kwargs_465061)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465053, MetricInfo_call_result_465062))
# Adding element type (key, value) (line 1343)
str_465063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 4), 'str', 'mahalanobis')

# Call to MetricInfo(...): (line 1357)
# Processing the call keyword arguments (line 1357)

# Obtaining an instance of the builtin type 'list' (line 1357)
list_465065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1357)
# Adding element type (line 1357)
str_465066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 35), 'str', 'mahalanobis')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1357, 34), list_465065, str_465066)
# Adding element type (line 1357)
str_465067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 50), 'str', 'mahal')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1357, 34), list_465065, str_465067)
# Adding element type (line 1357)
str_465068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1357, 59), 'str', 'mah')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1357, 34), list_465065, str_465068)

keyword_465069 = list_465065
# Getting the type of '_validate_mahalanobis_kwargs' (line 1358)
_validate_mahalanobis_kwargs_465070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1358, 40), '_validate_mahalanobis_kwargs', False)
keyword_465071 = _validate_mahalanobis_kwargs_465070
kwargs_465072 = {'aka': keyword_465069, 'validator': keyword_465071}
# Getting the type of 'MetricInfo' (line 1357)
MetricInfo_465064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1357, 19), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1357)
MetricInfo_call_result_465073 = invoke(stypy.reporting.localization.Localization(__file__, 1357, 19), MetricInfo_465064, *[], **kwargs_465072)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465063, MetricInfo_call_result_465073))
# Adding element type (key, value) (line 1343)
str_465074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 4), 'str', 'minkowski')

# Call to MetricInfo(...): (line 1359)
# Processing the call keyword arguments (line 1359)

# Obtaining an instance of the builtin type 'list' (line 1359)
list_465076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 1359)
# Adding element type (line 1359)
str_465077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 33), 'str', 'minkowski')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1359, 32), list_465076, str_465077)
# Adding element type (line 1359)
str_465078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 46), 'str', 'mi')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1359, 32), list_465076, str_465078)
# Adding element type (line 1359)
str_465079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 52), 'str', 'm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1359, 32), list_465076, str_465079)
# Adding element type (line 1359)
str_465080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1359, 57), 'str', 'pnorm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1359, 32), list_465076, str_465080)

keyword_465081 = list_465076
# Getting the type of '_validate_minkowski_kwargs' (line 1360)
_validate_minkowski_kwargs_465082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1360, 38), '_validate_minkowski_kwargs', False)
keyword_465083 = _validate_minkowski_kwargs_465082
kwargs_465084 = {'aka': keyword_465081, 'validator': keyword_465083}
# Getting the type of 'MetricInfo' (line 1359)
MetricInfo_465075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1359, 17), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1359)
MetricInfo_call_result_465085 = invoke(stypy.reporting.localization.Localization(__file__, 1359, 17), MetricInfo_465075, *[], **kwargs_465084)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465074, MetricInfo_call_result_465085))
# Adding element type (key, value) (line 1343)
str_465086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1361, 4), 'str', 'rogerstanimoto')

# Call to MetricInfo(...): (line 1361)
# Processing the call keyword arguments (line 1361)

# Obtaining an instance of the builtin type 'list' (line 1361)
list_465088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1361, 37), 'list')
# Adding type elements to the builtin type 'list' instance (line 1361)
# Adding element type (line 1361)
str_465089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1361, 38), 'str', 'rogerstanimoto')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1361, 37), list_465088, str_465089)

keyword_465090 = list_465088

# Obtaining an instance of the builtin type 'list' (line 1361)
list_465091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1361, 63), 'list')
# Adding type elements to the builtin type 'list' instance (line 1361)
# Adding element type (line 1361)
str_465092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1361, 64), 'str', 'bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1361, 63), list_465091, str_465092)

keyword_465093 = list_465091
kwargs_465094 = {'aka': keyword_465090, 'types': keyword_465093}
# Getting the type of 'MetricInfo' (line 1361)
MetricInfo_465087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1361, 22), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1361)
MetricInfo_call_result_465095 = invoke(stypy.reporting.localization.Localization(__file__, 1361, 22), MetricInfo_465087, *[], **kwargs_465094)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465086, MetricInfo_call_result_465095))
# Adding element type (key, value) (line 1343)
str_465096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 4), 'str', 'russellrao')

# Call to MetricInfo(...): (line 1362)
# Processing the call keyword arguments (line 1362)

# Obtaining an instance of the builtin type 'list' (line 1362)
list_465098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 1362)
# Adding element type (line 1362)
str_465099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 34), 'str', 'russellrao')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1362, 33), list_465098, str_465099)

keyword_465100 = list_465098

# Obtaining an instance of the builtin type 'list' (line 1362)
list_465101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 55), 'list')
# Adding type elements to the builtin type 'list' instance (line 1362)
# Adding element type (line 1362)
str_465102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1362, 56), 'str', 'bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1362, 55), list_465101, str_465102)

keyword_465103 = list_465101
kwargs_465104 = {'aka': keyword_465100, 'types': keyword_465103}
# Getting the type of 'MetricInfo' (line 1362)
MetricInfo_465097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1362, 18), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1362)
MetricInfo_call_result_465105 = invoke(stypy.reporting.localization.Localization(__file__, 1362, 18), MetricInfo_465097, *[], **kwargs_465104)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465096, MetricInfo_call_result_465105))
# Adding element type (key, value) (line 1343)
str_465106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 4), 'str', 'seuclidean')

# Call to MetricInfo(...): (line 1363)
# Processing the call keyword arguments (line 1363)

# Obtaining an instance of the builtin type 'list' (line 1363)
list_465108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 1363)
# Adding element type (line 1363)
str_465109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 34), 'str', 'seuclidean')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1363, 33), list_465108, str_465109)
# Adding element type (line 1363)
str_465110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 48), 'str', 'se')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1363, 33), list_465108, str_465110)
# Adding element type (line 1363)
str_465111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1363, 54), 'str', 's')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1363, 33), list_465108, str_465111)

keyword_465112 = list_465108
# Getting the type of '_validate_seuclidean_kwargs' (line 1364)
_validate_seuclidean_kwargs_465113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1364, 39), '_validate_seuclidean_kwargs', False)
keyword_465114 = _validate_seuclidean_kwargs_465113
kwargs_465115 = {'aka': keyword_465112, 'validator': keyword_465114}
# Getting the type of 'MetricInfo' (line 1363)
MetricInfo_465107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1363, 18), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1363)
MetricInfo_call_result_465116 = invoke(stypy.reporting.localization.Localization(__file__, 1363, 18), MetricInfo_465107, *[], **kwargs_465115)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465106, MetricInfo_call_result_465116))
# Adding element type (key, value) (line 1343)
str_465117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 4), 'str', 'sokalmichener')

# Call to MetricInfo(...): (line 1365)
# Processing the call keyword arguments (line 1365)

# Obtaining an instance of the builtin type 'list' (line 1365)
list_465119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 36), 'list')
# Adding type elements to the builtin type 'list' instance (line 1365)
# Adding element type (line 1365)
str_465120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 37), 'str', 'sokalmichener')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 36), list_465119, str_465120)

keyword_465121 = list_465119

# Obtaining an instance of the builtin type 'list' (line 1365)
list_465122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 61), 'list')
# Adding type elements to the builtin type 'list' instance (line 1365)
# Adding element type (line 1365)
str_465123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, 62), 'str', 'bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1365, 61), list_465122, str_465123)

keyword_465124 = list_465122
kwargs_465125 = {'aka': keyword_465121, 'types': keyword_465124}
# Getting the type of 'MetricInfo' (line 1365)
MetricInfo_465118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1365, 21), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1365)
MetricInfo_call_result_465126 = invoke(stypy.reporting.localization.Localization(__file__, 1365, 21), MetricInfo_465118, *[], **kwargs_465125)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465117, MetricInfo_call_result_465126))
# Adding element type (key, value) (line 1343)
str_465127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 4), 'str', 'sokalsneath')

# Call to MetricInfo(...): (line 1366)
# Processing the call keyword arguments (line 1366)

# Obtaining an instance of the builtin type 'list' (line 1366)
list_465129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1366)
# Adding element type (line 1366)
str_465130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 35), 'str', 'sokalsneath')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1366, 34), list_465129, str_465130)

keyword_465131 = list_465129

# Obtaining an instance of the builtin type 'list' (line 1366)
list_465132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 57), 'list')
# Adding type elements to the builtin type 'list' instance (line 1366)
# Adding element type (line 1366)
str_465133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1366, 58), 'str', 'bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1366, 57), list_465132, str_465133)

keyword_465134 = list_465132
kwargs_465135 = {'aka': keyword_465131, 'types': keyword_465134}
# Getting the type of 'MetricInfo' (line 1366)
MetricInfo_465128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1366, 19), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1366)
MetricInfo_call_result_465136 = invoke(stypy.reporting.localization.Localization(__file__, 1366, 19), MetricInfo_465128, *[], **kwargs_465135)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465127, MetricInfo_call_result_465136))
# Adding element type (key, value) (line 1343)
str_465137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 4), 'str', 'sqeuclidean')

# Call to MetricInfo(...): (line 1367)
# Processing the call keyword arguments (line 1367)

# Obtaining an instance of the builtin type 'list' (line 1367)
list_465139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 34), 'list')
# Adding type elements to the builtin type 'list' instance (line 1367)
# Adding element type (line 1367)
str_465140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 35), 'str', 'sqeuclidean')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1367, 34), list_465139, str_465140)
# Adding element type (line 1367)
str_465141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 50), 'str', 'sqe')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1367, 34), list_465139, str_465141)
# Adding element type (line 1367)
str_465142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 57), 'str', 'sqeuclid')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1367, 34), list_465139, str_465142)

keyword_465143 = list_465139
kwargs_465144 = {'aka': keyword_465143}
# Getting the type of 'MetricInfo' (line 1367)
MetricInfo_465138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 19), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1367)
MetricInfo_call_result_465145 = invoke(stypy.reporting.localization.Localization(__file__, 1367, 19), MetricInfo_465138, *[], **kwargs_465144)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465137, MetricInfo_call_result_465145))
# Adding element type (key, value) (line 1343)
str_465146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 4), 'str', 'wminkowski')

# Call to MetricInfo(...): (line 1368)
# Processing the call keyword arguments (line 1368)

# Obtaining an instance of the builtin type 'list' (line 1368)
list_465148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 33), 'list')
# Adding type elements to the builtin type 'list' instance (line 1368)
# Adding element type (line 1368)
str_465149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 34), 'str', 'wminkowski')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 33), list_465148, str_465149)
# Adding element type (line 1368)
str_465150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 48), 'str', 'wmi')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 33), list_465148, str_465150)
# Adding element type (line 1368)
str_465151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 55), 'str', 'wm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 33), list_465148, str_465151)
# Adding element type (line 1368)
str_465152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1368, 61), 'str', 'wpnorm')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1368, 33), list_465148, str_465152)

keyword_465153 = list_465148
# Getting the type of '_validate_wminkowski_kwargs' (line 1369)
_validate_wminkowski_kwargs_465154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 39), '_validate_wminkowski_kwargs', False)
keyword_465155 = _validate_wminkowski_kwargs_465154
kwargs_465156 = {'aka': keyword_465153, 'validator': keyword_465155}
# Getting the type of 'MetricInfo' (line 1368)
MetricInfo_465147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 18), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1368)
MetricInfo_call_result_465157 = invoke(stypy.reporting.localization.Localization(__file__, 1368, 18), MetricInfo_465147, *[], **kwargs_465156)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465146, MetricInfo_call_result_465157))
# Adding element type (key, value) (line 1343)
str_465158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 4), 'str', 'yule')

# Call to MetricInfo(...): (line 1370)
# Processing the call keyword arguments (line 1370)

# Obtaining an instance of the builtin type 'list' (line 1370)
list_465160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 1370)
# Adding element type (line 1370)
str_465161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 28), 'str', 'yule')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 27), list_465160, str_465161)

keyword_465162 = list_465160

# Obtaining an instance of the builtin type 'list' (line 1370)
list_465163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 43), 'list')
# Adding type elements to the builtin type 'list' instance (line 1370)
# Adding element type (line 1370)
str_465164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 44), 'str', 'bool')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1370, 43), list_465163, str_465164)

keyword_465165 = list_465163
kwargs_465166 = {'aka': keyword_465162, 'types': keyword_465165}
# Getting the type of 'MetricInfo' (line 1370)
MetricInfo_465159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 12), 'MetricInfo', False)
# Calling MetricInfo(args, kwargs) (line 1370)
MetricInfo_call_result_465167 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 12), MetricInfo_465159, *[], **kwargs_465166)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1343, 11), dict_464952, (str_465158, MetricInfo_call_result_465167))

# Assigning a type to the variable '_METRICS' (line 1343)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1343, 0), '_METRICS', dict_464952)

# Assigning a Call to a Name (line 1374):

# Assigning a Call to a Name (line 1374):

# Call to dict(...): (line 1374)
# Processing the call arguments (line 1374)
# Calculating generator expression
module_type_store = module_type_store.open_function_context('list comprehension expression', 1374, 21, True)
# Calculating comprehension expression

# Call to items(...): (line 1375)
# Processing the call keyword arguments (line 1375)
kwargs_465174 = {}
# Getting the type of '_METRICS' (line 1375)
_METRICS_465172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 39), '_METRICS', False)
# Obtaining the member 'items' of a type (line 1375)
items_465173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1375, 39), _METRICS_465172, 'items')
# Calling items(args, kwargs) (line 1375)
items_call_result_465175 = invoke(stypy.reporting.localization.Localization(__file__, 1375, 39), items_465173, *[], **kwargs_465174)

comprehension_465176 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 21), items_call_result_465175)
# Assigning a type to the variable 'name' (line 1374)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 21), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 21), comprehension_465176))
# Assigning a type to the variable 'info' (line 1374)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 21), 'info', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 21), comprehension_465176))
# Calculating comprehension expression
# Getting the type of 'info' (line 1376)
info_465177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1376, 34), 'info', False)
# Obtaining the member 'aka' of a type (line 1376)
aka_465178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1376, 34), info_465177, 'aka')
comprehension_465179 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 21), aka_465178)
# Assigning a type to the variable 'alias' (line 1374)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 21), 'alias', comprehension_465179)

# Obtaining an instance of the builtin type 'tuple' (line 1374)
tuple_465169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 22), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 1374)
# Adding element type (line 1374)
# Getting the type of 'alias' (line 1374)
alias_465170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 22), 'alias', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 22), tuple_465169, alias_465170)
# Adding element type (line 1374)
# Getting the type of 'name' (line 1374)
name_465171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 29), 'name', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 22), tuple_465169, name_465171)

list_465180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 21), 'list')
# Destroy the current context
module_type_store = module_type_store.close_function_context()
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1374, 21), list_465180, tuple_465169)
# Processing the call keyword arguments (line 1374)
kwargs_465181 = {}
# Getting the type of 'dict' (line 1374)
dict_465168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 16), 'dict', False)
# Calling dict(args, kwargs) (line 1374)
dict_call_result_465182 = invoke(stypy.reporting.localization.Localization(__file__, 1374, 16), dict_465168, *[list_465180], **kwargs_465181)

# Assigning a type to the variable '_METRIC_ALIAS' (line 1374)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 0), '_METRIC_ALIAS', dict_call_result_465182)

# Assigning a Call to a Name (line 1378):

# Assigning a Call to a Name (line 1378):

# Call to list(...): (line 1378)
# Processing the call arguments (line 1378)

# Call to keys(...): (line 1378)
# Processing the call keyword arguments (line 1378)
kwargs_465186 = {}
# Getting the type of '_METRICS' (line 1378)
_METRICS_465184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 22), '_METRICS', False)
# Obtaining the member 'keys' of a type (line 1378)
keys_465185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 22), _METRICS_465184, 'keys')
# Calling keys(args, kwargs) (line 1378)
keys_call_result_465187 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 22), keys_465185, *[], **kwargs_465186)

# Processing the call keyword arguments (line 1378)
kwargs_465188 = {}
# Getting the type of 'list' (line 1378)
list_465183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 17), 'list', False)
# Calling list(args, kwargs) (line 1378)
list_call_result_465189 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 17), list_465183, *[keys_call_result_465187], **kwargs_465188)

# Assigning a type to the variable '_METRICS_NAMES' (line 1378)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1378, 0), '_METRICS_NAMES', list_call_result_465189)

# Assigning a DictComp to a Name (line 1380):

# Assigning a DictComp to a Name (line 1380):
# Calculating dict comprehension
module_type_store = module_type_store.open_function_context('dict comprehension expression', 1380, 17, True)
# Calculating comprehension expression

# Call to keys(...): (line 1380)
# Processing the call keyword arguments (line 1380)
kwargs_465201 = {}
# Getting the type of '_METRICS' (line 1380)
_METRICS_465199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 61), '_METRICS', False)
# Obtaining the member 'keys' of a type (line 1380)
keys_465200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1380, 61), _METRICS_465199, 'keys')
# Calling keys(args, kwargs) (line 1380)
keys_call_result_465202 = invoke(stypy.reporting.localization.Localization(__file__, 1380, 61), keys_465200, *[], **kwargs_465201)

comprehension_465203 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1380, 17), keys_call_result_465202)
# Assigning a type to the variable 'name' (line 1380)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1380, 17), 'name', comprehension_465203)
str_465190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1380, 17), 'str', 'test_')
# Getting the type of 'name' (line 1380)
name_465191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 27), 'name')
# Applying the binary operator '+' (line 1380)
result_add_465192 = python_operator(stypy.reporting.localization.Localization(__file__, 1380, 17), '+', str_465190, name_465191)


# Obtaining the type of the subscript
# Getting the type of 'name' (line 1380)
name_465193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 43), 'name')

# Call to globals(...): (line 1380)
# Processing the call keyword arguments (line 1380)
kwargs_465195 = {}
# Getting the type of 'globals' (line 1380)
globals_465194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1380, 33), 'globals', False)
# Calling globals(args, kwargs) (line 1380)
globals_call_result_465196 = invoke(stypy.reporting.localization.Localization(__file__, 1380, 33), globals_465194, *[], **kwargs_465195)

# Obtaining the member '__getitem__' of a type (line 1380)
getitem___465197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1380, 33), globals_call_result_465196, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 1380)
subscript_call_result_465198 = invoke(stypy.reporting.localization.Localization(__file__, 1380, 33), getitem___465197, name_465193)

dict_465204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1380, 17), 'dict')
# Destroy the current context
module_type_store = module_type_store.close_function_context()
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1380, 17), dict_465204, (result_add_465192, subscript_call_result_465198))
# Assigning a type to the variable '_TEST_METRICS' (line 1380)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1380, 0), '_TEST_METRICS', dict_465204)

@norecursion
def pdist(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_465205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1383, 20), 'str', 'euclidean')
    defaults = [str_465205]
    # Create a new context for function 'pdist'
    module_type_store = module_type_store.open_function_context('pdist', 1383, 0, False)
    
    # Passed parameters checking function
    pdist.stypy_localization = localization
    pdist.stypy_type_of_self = None
    pdist.stypy_type_store = module_type_store
    pdist.stypy_function_name = 'pdist'
    pdist.stypy_param_names_list = ['X', 'metric']
    pdist.stypy_varargs_param_name = 'args'
    pdist.stypy_kwargs_param_name = 'kwargs'
    pdist.stypy_call_defaults = defaults
    pdist.stypy_call_varargs = varargs
    pdist.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'pdist', ['X', 'metric'], 'args', 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'pdist', localization, ['X', 'metric'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'pdist(...)' code ##################

    str_465206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1631, (-1)), 'str', "\n    Pairwise distances between observations in n-dimensional space.\n\n    See Notes for common calling conventions.\n\n    Parameters\n    ----------\n    X : ndarray\n        An m by n array of m original observations in an\n        n-dimensional space.\n    metric : str or function, optional\n        The distance metric to use. The distance function can\n        be 'braycurtis', 'canberra', 'chebyshev', 'cityblock',\n        'correlation', 'cosine', 'dice', 'euclidean', 'hamming',\n        'jaccard', 'kulsinski', 'mahalanobis', 'matching',\n        'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean',\n        'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule'.\n    *args : tuple. Deprecated.\n        Additional arguments should be passed as keyword arguments\n    **kwargs : dict, optional\n        Extra arguments to `metric`: refer to each metric documentation for a\n        list of all possible arguments.\n\n        Some possible arguments:\n\n        p : scalar\n        The p-norm to apply for Minkowski, weighted and unweighted.\n        Default: 2.\n\n        w : ndarray\n        The weight vector for metrics that support weights (e.g., Minkowski).\n\n        V : ndarray\n        The variance vector for standardized Euclidean.\n        Default: var(X, axis=0, ddof=1)\n\n        VI : ndarray\n        The inverse of the covariance matrix for Mahalanobis.\n        Default: inv(cov(X.T)).T\n\n        out : ndarray.\n        The output array\n        If not None, condensed distance matrix Y is stored in this array.\n        Note: metric independent, it will become a regular keyword arg in a\n        future scipy version\n\n    Returns\n    -------\n    Y : ndarray\n        Returns a condensed distance matrix Y.  For\n        each :math:`i` and :math:`j` (where :math:`i<j<m`),where m is the number\n        of original observations. The metric ``dist(u=X[i], v=X[j])``\n        is computed and stored in entry ``ij``.\n\n    See Also\n    --------\n    squareform : converts between condensed distance matrices and\n                 square distance matrices.\n\n    Notes\n    -----\n    See ``squareform`` for information on how to calculate the index of\n    this entry or to convert the condensed distance matrix to a\n    redundant square matrix.\n\n    The following are common calling conventions.\n\n    1. ``Y = pdist(X, 'euclidean')``\n\n       Computes the distance between m points using Euclidean distance\n       (2-norm) as the distance metric between the points. The points\n       are arranged as m n-dimensional row vectors in the matrix X.\n\n    2. ``Y = pdist(X, 'minkowski', p=2.)``\n\n       Computes the distances using the Minkowski distance\n       :math:`||u-v||_p` (p-norm) where :math:`p \\geq 1`.\n\n    3. ``Y = pdist(X, 'cityblock')``\n\n       Computes the city block or Manhattan distance between the\n       points.\n\n    4. ``Y = pdist(X, 'seuclidean', V=None)``\n\n       Computes the standardized Euclidean distance. The standardized\n       Euclidean distance between two n-vectors ``u`` and ``v`` is\n\n       .. math::\n\n          \\sqrt{\\sum {(u_i-v_i)^2 / V[x_i]}}\n\n\n       V is the variance vector; V[i] is the variance computed over all\n       the i'th components of the points.  If not passed, it is\n       automatically computed.\n\n    5. ``Y = pdist(X, 'sqeuclidean')``\n\n       Computes the squared Euclidean distance :math:`||u-v||_2^2` between\n       the vectors.\n\n    6. ``Y = pdist(X, 'cosine')``\n\n       Computes the cosine distance between vectors u and v,\n\n       .. math::\n\n          1 - \\frac{u \\cdot v}\n                   {{||u||}_2 {||v||}_2}\n\n       where :math:`||*||_2` is the 2-norm of its argument ``*``, and\n       :math:`u \\cdot v` is the dot product of ``u`` and ``v``.\n\n    7. ``Y = pdist(X, 'correlation')``\n\n       Computes the correlation distance between vectors u and v. This is\n\n       .. math::\n\n          1 - \\frac{(u - \\bar{u}) \\cdot (v - \\bar{v})}\n                   {{||(u - \\bar{u})||}_2 {||(v - \\bar{v})||}_2}\n\n       where :math:`\\bar{v}` is the mean of the elements of vector v,\n       and :math:`x \\cdot y` is the dot product of :math:`x` and :math:`y`.\n\n    8. ``Y = pdist(X, 'hamming')``\n\n       Computes the normalized Hamming distance, or the proportion of\n       those vector elements between two n-vectors ``u`` and ``v``\n       which disagree. To save memory, the matrix ``X`` can be of type\n       boolean.\n\n    9. ``Y = pdist(X, 'jaccard')``\n\n       Computes the Jaccard distance between the points. Given two\n       vectors, ``u`` and ``v``, the Jaccard distance is the\n       proportion of those elements ``u[i]`` and ``v[i]`` that\n       disagree.\n\n    10. ``Y = pdist(X, 'chebyshev')``\n\n       Computes the Chebyshev distance between the points. The\n       Chebyshev distance between two n-vectors ``u`` and ``v`` is the\n       maximum norm-1 distance between their respective elements. More\n       precisely, the distance is given by\n\n       .. math::\n\n          d(u,v) = \\max_i {|u_i-v_i|}\n\n    11. ``Y = pdist(X, 'canberra')``\n\n       Computes the Canberra distance between the points. The\n       Canberra distance between two points ``u`` and ``v`` is\n\n       .. math::\n\n         d(u,v) = \\sum_i \\frac{|u_i-v_i|}\n                              {|u_i|+|v_i|}\n\n\n    12. ``Y = pdist(X, 'braycurtis')``\n\n       Computes the Bray-Curtis distance between the points. The\n       Bray-Curtis distance between two points ``u`` and ``v`` is\n\n\n       .. math::\n\n            d(u,v) = \\frac{\\sum_i {|u_i-v_i|}}\n                           {\\sum_i {|u_i+v_i|}}\n\n    13. ``Y = pdist(X, 'mahalanobis', VI=None)``\n\n       Computes the Mahalanobis distance between the points. The\n       Mahalanobis distance between two points ``u`` and ``v`` is\n       :math:`\\sqrt{(u-v)(1/V)(u-v)^T}` where :math:`(1/V)` (the ``VI``\n       variable) is the inverse covariance. If ``VI`` is not None,\n       ``VI`` will be used as the inverse covariance matrix.\n\n    14. ``Y = pdist(X, 'yule')``\n\n       Computes the Yule distance between each pair of boolean\n       vectors. (see yule function documentation)\n\n    15. ``Y = pdist(X, 'matching')``\n\n       Synonym for 'hamming'.\n\n    16. ``Y = pdist(X, 'dice')``\n\n       Computes the Dice distance between each pair of boolean\n       vectors. (see dice function documentation)\n\n    17. ``Y = pdist(X, 'kulsinski')``\n\n       Computes the Kulsinski distance between each pair of\n       boolean vectors. (see kulsinski function documentation)\n\n    18. ``Y = pdist(X, 'rogerstanimoto')``\n\n       Computes the Rogers-Tanimoto distance between each pair of\n       boolean vectors. (see rogerstanimoto function documentation)\n\n    19. ``Y = pdist(X, 'russellrao')``\n\n       Computes the Russell-Rao distance between each pair of\n       boolean vectors. (see russellrao function documentation)\n\n    20. ``Y = pdist(X, 'sokalmichener')``\n\n       Computes the Sokal-Michener distance between each pair of\n       boolean vectors. (see sokalmichener function documentation)\n\n    21. ``Y = pdist(X, 'sokalsneath')``\n\n       Computes the Sokal-Sneath distance between each pair of\n       boolean vectors. (see sokalsneath function documentation)\n\n    22. ``Y = pdist(X, 'wminkowski', p=2, w=w)``\n\n       Computes the weighted Minkowski distance between each pair of\n       vectors. (see wminkowski function documentation)\n\n    23. ``Y = pdist(X, f)``\n\n       Computes the distance between all pairs of vectors in X\n       using the user supplied 2-arity function f. For example,\n       Euclidean distance between the vectors could be computed\n       as follows::\n\n         dm = pdist(X, lambda u, v: np.sqrt(((u-v)**2).sum()))\n\n       Note that you should avoid passing a reference to one of\n       the distance functions defined in this library. For example,::\n\n         dm = pdist(X, sokalsneath)\n\n       would calculate the pair-wise distances between the vectors in\n       X using the Python function sokalsneath. This would result in\n       sokalsneath being called :math:`{n \\choose 2}` times, which\n       is inefficient. Instead, the optimized C version is more\n       efficient, and we call it using the following syntax.::\n\n         dm = pdist(X, 'sokalsneath')\n\n    ")
    
    # Assigning a Call to a Name (line 1638):
    
    # Assigning a Call to a Name (line 1638):
    
    # Call to _args_to_kwargs_xdist(...): (line 1638)
    # Processing the call arguments (line 1638)
    # Getting the type of 'args' (line 1638)
    args_465208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 35), 'args', False)
    # Getting the type of 'kwargs' (line 1638)
    kwargs_465209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 41), 'kwargs', False)
    # Getting the type of 'metric' (line 1638)
    metric_465210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 49), 'metric', False)
    str_465211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1638, 57), 'str', 'pdist')
    # Processing the call keyword arguments (line 1638)
    kwargs_465212 = {}
    # Getting the type of '_args_to_kwargs_xdist' (line 1638)
    _args_to_kwargs_xdist_465207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 13), '_args_to_kwargs_xdist', False)
    # Calling _args_to_kwargs_xdist(args, kwargs) (line 1638)
    _args_to_kwargs_xdist_call_result_465213 = invoke(stypy.reporting.localization.Localization(__file__, 1638, 13), _args_to_kwargs_xdist_465207, *[args_465208, kwargs_465209, metric_465210, str_465211], **kwargs_465212)
    
    # Assigning a type to the variable 'kwargs' (line 1638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1638, 4), 'kwargs', _args_to_kwargs_xdist_call_result_465213)
    
    # Assigning a Call to a Name (line 1640):
    
    # Assigning a Call to a Name (line 1640):
    
    # Call to asarray(...): (line 1640)
    # Processing the call arguments (line 1640)
    # Getting the type of 'X' (line 1640)
    X_465216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1640, 19), 'X', False)
    # Processing the call keyword arguments (line 1640)
    str_465217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1640, 28), 'str', 'c')
    keyword_465218 = str_465217
    kwargs_465219 = {'order': keyword_465218}
    # Getting the type of 'np' (line 1640)
    np_465214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1640, 8), 'np', False)
    # Obtaining the member 'asarray' of a type (line 1640)
    asarray_465215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1640, 8), np_465214, 'asarray')
    # Calling asarray(args, kwargs) (line 1640)
    asarray_call_result_465220 = invoke(stypy.reporting.localization.Localization(__file__, 1640, 8), asarray_465215, *[X_465216], **kwargs_465219)
    
    # Assigning a type to the variable 'X' (line 1640)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1640, 4), 'X', asarray_call_result_465220)
    
    # Assigning a Call to a Name (line 1643):
    
    # Assigning a Call to a Name (line 1643):
    
    # Call to _copy_array_if_base_present(...): (line 1643)
    # Processing the call arguments (line 1643)
    # Getting the type of 'X' (line 1643)
    X_465222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1643, 36), 'X', False)
    # Processing the call keyword arguments (line 1643)
    kwargs_465223 = {}
    # Getting the type of '_copy_array_if_base_present' (line 1643)
    _copy_array_if_base_present_465221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1643, 8), '_copy_array_if_base_present', False)
    # Calling _copy_array_if_base_present(args, kwargs) (line 1643)
    _copy_array_if_base_present_call_result_465224 = invoke(stypy.reporting.localization.Localization(__file__, 1643, 8), _copy_array_if_base_present_465221, *[X_465222], **kwargs_465223)
    
    # Assigning a type to the variable 'X' (line 1643)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1643, 4), 'X', _copy_array_if_base_present_call_result_465224)
    
    # Assigning a Attribute to a Name (line 1645):
    
    # Assigning a Attribute to a Name (line 1645):
    # Getting the type of 'X' (line 1645)
    X_465225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1645, 8), 'X')
    # Obtaining the member 'shape' of a type (line 1645)
    shape_465226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1645, 8), X_465225, 'shape')
    # Assigning a type to the variable 's' (line 1645)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1645, 4), 's', shape_465226)
    
    
    
    # Call to len(...): (line 1646)
    # Processing the call arguments (line 1646)
    # Getting the type of 's' (line 1646)
    s_465228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1646, 11), 's', False)
    # Processing the call keyword arguments (line 1646)
    kwargs_465229 = {}
    # Getting the type of 'len' (line 1646)
    len_465227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1646, 7), 'len', False)
    # Calling len(args, kwargs) (line 1646)
    len_call_result_465230 = invoke(stypy.reporting.localization.Localization(__file__, 1646, 7), len_465227, *[s_465228], **kwargs_465229)
    
    int_465231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1646, 17), 'int')
    # Applying the binary operator '!=' (line 1646)
    result_ne_465232 = python_operator(stypy.reporting.localization.Localization(__file__, 1646, 7), '!=', len_call_result_465230, int_465231)
    
    # Testing the type of an if condition (line 1646)
    if_condition_465233 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1646, 4), result_ne_465232)
    # Assigning a type to the variable 'if_condition_465233' (line 1646)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1646, 4), 'if_condition_465233', if_condition_465233)
    # SSA begins for if statement (line 1646)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1647)
    # Processing the call arguments (line 1647)
    str_465235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1647, 25), 'str', 'A 2-dimensional array must be passed.')
    # Processing the call keyword arguments (line 1647)
    kwargs_465236 = {}
    # Getting the type of 'ValueError' (line 1647)
    ValueError_465234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1647, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1647)
    ValueError_call_result_465237 = invoke(stypy.reporting.localization.Localization(__file__, 1647, 14), ValueError_465234, *[str_465235], **kwargs_465236)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1647, 8), ValueError_call_result_465237, 'raise parameter', BaseException)
    # SSA join for if statement (line 1646)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Tuple (line 1649):
    
    # Assigning a Subscript to a Name (line 1649):
    
    # Obtaining the type of the subscript
    int_465238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 4), 'int')
    # Getting the type of 's' (line 1649)
    s_465239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 11), 's')
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___465240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 4), s_465239, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_465241 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 4), getitem___465240, int_465238)
    
    # Assigning a type to the variable 'tuple_var_assignment_462810' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_462810', subscript_call_result_465241)
    
    # Assigning a Subscript to a Name (line 1649):
    
    # Obtaining the type of the subscript
    int_465242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 4), 'int')
    # Getting the type of 's' (line 1649)
    s_465243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 11), 's')
    # Obtaining the member '__getitem__' of a type (line 1649)
    getitem___465244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 4), s_465243, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
    subscript_call_result_465245 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 4), getitem___465244, int_465242)
    
    # Assigning a type to the variable 'tuple_var_assignment_462811' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_462811', subscript_call_result_465245)
    
    # Assigning a Name to a Name (line 1649):
    # Getting the type of 'tuple_var_assignment_462810' (line 1649)
    tuple_var_assignment_462810_465246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_462810')
    # Assigning a type to the variable 'm' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'm', tuple_var_assignment_462810_465246)
    
    # Assigning a Name to a Name (line 1649):
    # Getting the type of 'tuple_var_assignment_462811' (line 1649)
    tuple_var_assignment_462811_465247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'tuple_var_assignment_462811')
    # Assigning a type to the variable 'n' (line 1649)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 7), 'n', tuple_var_assignment_462811_465247)
    
    # Assigning a Call to a Name (line 1650):
    
    # Assigning a Call to a Name (line 1650):
    
    # Call to pop(...): (line 1650)
    # Processing the call arguments (line 1650)
    str_465250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1650, 21), 'str', 'out')
    # Getting the type of 'None' (line 1650)
    None_465251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 28), 'None', False)
    # Processing the call keyword arguments (line 1650)
    kwargs_465252 = {}
    # Getting the type of 'kwargs' (line 1650)
    kwargs_465248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 10), 'kwargs', False)
    # Obtaining the member 'pop' of a type (line 1650)
    pop_465249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1650, 10), kwargs_465248, 'pop')
    # Calling pop(args, kwargs) (line 1650)
    pop_call_result_465253 = invoke(stypy.reporting.localization.Localization(__file__, 1650, 10), pop_465249, *[str_465250, None_465251], **kwargs_465252)
    
    # Assigning a type to the variable 'out' (line 1650)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1650, 4), 'out', pop_call_result_465253)
    
    # Type idiom detected: calculating its left and rigth part (line 1651)
    # Getting the type of 'out' (line 1651)
    out_465254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1651, 7), 'out')
    # Getting the type of 'None' (line 1651)
    None_465255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1651, 14), 'None')
    
    (may_be_465256, more_types_in_union_465257) = may_be_none(out_465254, None_465255)

    if may_be_465256:

        if more_types_in_union_465257:
            # Runtime conditional SSA (line 1651)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1652):
        
        # Assigning a Call to a Name (line 1652):
        
        # Call to empty(...): (line 1652)
        # Processing the call arguments (line 1652)
        # Getting the type of 'm' (line 1652)
        m_465260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 23), 'm', False)
        # Getting the type of 'm' (line 1652)
        m_465261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 28), 'm', False)
        int_465262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1652, 32), 'int')
        # Applying the binary operator '-' (line 1652)
        result_sub_465263 = python_operator(stypy.reporting.localization.Localization(__file__, 1652, 28), '-', m_465261, int_465262)
        
        # Applying the binary operator '*' (line 1652)
        result_mul_465264 = python_operator(stypy.reporting.localization.Localization(__file__, 1652, 23), '*', m_465260, result_sub_465263)
        
        int_465265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1652, 39), 'int')
        # Applying the binary operator '//' (line 1652)
        result_floordiv_465266 = python_operator(stypy.reporting.localization.Localization(__file__, 1652, 22), '//', result_mul_465264, int_465265)
        
        # Processing the call keyword arguments (line 1652)
        # Getting the type of 'np' (line 1652)
        np_465267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 48), 'np', False)
        # Obtaining the member 'double' of a type (line 1652)
        double_465268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1652, 48), np_465267, 'double')
        keyword_465269 = double_465268
        kwargs_465270 = {'dtype': keyword_465269}
        # Getting the type of 'np' (line 1652)
        np_465258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 13), 'np', False)
        # Obtaining the member 'empty' of a type (line 1652)
        empty_465259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1652, 13), np_465258, 'empty')
        # Calling empty(args, kwargs) (line 1652)
        empty_call_result_465271 = invoke(stypy.reporting.localization.Localization(__file__, 1652, 13), empty_465259, *[result_floordiv_465266], **kwargs_465270)
        
        # Assigning a type to the variable 'dm' (line 1652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1652, 8), 'dm', empty_call_result_465271)

        if more_types_in_union_465257:
            # Runtime conditional SSA for else branch (line 1651)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_465256) or more_types_in_union_465257):
        
        
        # Getting the type of 'out' (line 1654)
        out_465272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 11), 'out')
        # Obtaining the member 'shape' of a type (line 1654)
        shape_465273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1654, 11), out_465272, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1654)
        tuple_465274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1654, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1654)
        # Adding element type (line 1654)
        # Getting the type of 'm' (line 1654)
        m_465275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 25), 'm')
        # Getting the type of 'm' (line 1654)
        m_465276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 30), 'm')
        int_465277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1654, 34), 'int')
        # Applying the binary operator '-' (line 1654)
        result_sub_465278 = python_operator(stypy.reporting.localization.Localization(__file__, 1654, 30), '-', m_465276, int_465277)
        
        # Applying the binary operator '*' (line 1654)
        result_mul_465279 = python_operator(stypy.reporting.localization.Localization(__file__, 1654, 25), '*', m_465275, result_sub_465278)
        
        int_465280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1654, 40), 'int')
        # Applying the binary operator '//' (line 1654)
        result_floordiv_465281 = python_operator(stypy.reporting.localization.Localization(__file__, 1654, 37), '//', result_mul_465279, int_465280)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1654, 25), tuple_465274, result_floordiv_465281)
        
        # Applying the binary operator '!=' (line 1654)
        result_ne_465282 = python_operator(stypy.reporting.localization.Localization(__file__, 1654, 11), '!=', shape_465273, tuple_465274)
        
        # Testing the type of an if condition (line 1654)
        if_condition_465283 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1654, 8), result_ne_465282)
        # Assigning a type to the variable 'if_condition_465283' (line 1654)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1654, 8), 'if_condition_465283', if_condition_465283)
        # SSA begins for if statement (line 1654)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1655)
        # Processing the call arguments (line 1655)
        str_465285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1655, 29), 'str', 'output array has incorrect shape.')
        # Processing the call keyword arguments (line 1655)
        kwargs_465286 = {}
        # Getting the type of 'ValueError' (line 1655)
        ValueError_465284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1655)
        ValueError_call_result_465287 = invoke(stypy.reporting.localization.Localization(__file__, 1655, 18), ValueError_465284, *[str_465285], **kwargs_465286)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1655, 12), ValueError_call_result_465287, 'raise parameter', BaseException)
        # SSA join for if statement (line 1654)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'out' (line 1656)
        out_465288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 15), 'out')
        # Obtaining the member 'flags' of a type (line 1656)
        flags_465289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1656, 15), out_465288, 'flags')
        # Obtaining the member 'c_contiguous' of a type (line 1656)
        c_contiguous_465290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1656, 15), flags_465289, 'c_contiguous')
        # Applying the 'not' unary operator (line 1656)
        result_not__465291 = python_operator(stypy.reporting.localization.Localization(__file__, 1656, 11), 'not', c_contiguous_465290)
        
        # Testing the type of an if condition (line 1656)
        if_condition_465292 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1656, 8), result_not__465291)
        # Assigning a type to the variable 'if_condition_465292' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'if_condition_465292', if_condition_465292)
        # SSA begins for if statement (line 1656)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1657)
        # Processing the call arguments (line 1657)
        str_465294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1657, 29), 'str', 'Output array must be C-contiguous.')
        # Processing the call keyword arguments (line 1657)
        kwargs_465295 = {}
        # Getting the type of 'ValueError' (line 1657)
        ValueError_465293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1657, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1657)
        ValueError_call_result_465296 = invoke(stypy.reporting.localization.Localization(__file__, 1657, 18), ValueError_465293, *[str_465294], **kwargs_465295)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1657, 12), ValueError_call_result_465296, 'raise parameter', BaseException)
        # SSA join for if statement (line 1656)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'out' (line 1658)
        out_465297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 11), 'out')
        # Obtaining the member 'dtype' of a type (line 1658)
        dtype_465298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1658, 11), out_465297, 'dtype')
        # Getting the type of 'np' (line 1658)
        np_465299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 24), 'np')
        # Obtaining the member 'double' of a type (line 1658)
        double_465300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1658, 24), np_465299, 'double')
        # Applying the binary operator '!=' (line 1658)
        result_ne_465301 = python_operator(stypy.reporting.localization.Localization(__file__, 1658, 11), '!=', dtype_465298, double_465300)
        
        # Testing the type of an if condition (line 1658)
        if_condition_465302 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1658, 8), result_ne_465301)
        # Assigning a type to the variable 'if_condition_465302' (line 1658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1658, 8), 'if_condition_465302', if_condition_465302)
        # SSA begins for if statement (line 1658)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1659)
        # Processing the call arguments (line 1659)
        str_465304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1659, 29), 'str', 'Output array must be double type.')
        # Processing the call keyword arguments (line 1659)
        kwargs_465305 = {}
        # Getting the type of 'ValueError' (line 1659)
        ValueError_465303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1659)
        ValueError_call_result_465306 = invoke(stypy.reporting.localization.Localization(__file__, 1659, 18), ValueError_465303, *[str_465304], **kwargs_465305)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1659, 12), ValueError_call_result_465306, 'raise parameter', BaseException)
        # SSA join for if statement (line 1658)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Name (line 1660):
        
        # Assigning a Name to a Name (line 1660):
        # Getting the type of 'out' (line 1660)
        out_465307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 13), 'out')
        # Assigning a type to the variable 'dm' (line 1660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1660, 8), 'dm', out_465307)

        if (may_be_465256 and more_types_in_union_465257):
            # SSA join for if statement (line 1651)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'metric' (line 1663)
    metric_465308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 7), 'metric')
    
    # Obtaining the type of the subscript
    str_465309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 26), 'str', 'minkowski')
    # Getting the type of '_METRICS' (line 1663)
    _METRICS_465310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 17), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 1663)
    getitem___465311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1663, 17), _METRICS_465310, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1663)
    subscript_call_result_465312 = invoke(stypy.reporting.localization.Localization(__file__, 1663, 17), getitem___465311, str_465309)
    
    # Obtaining the member 'aka' of a type (line 1663)
    aka_465313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1663, 17), subscript_call_result_465312, 'aka')
    # Applying the binary operator 'in' (line 1663)
    result_contains_465314 = python_operator(stypy.reporting.localization.Localization(__file__, 1663, 7), 'in', metric_465308, aka_465313)
    
    
    # Getting the type of 'metric' (line 1664)
    metric_465315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 7), 'metric')
    
    # Obtaining the type of the subscript
    str_465316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1664, 26), 'str', 'wminkowski')
    # Getting the type of '_METRICS' (line 1664)
    _METRICS_465317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 17), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 1664)
    getitem___465318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1664, 17), _METRICS_465317, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1664)
    subscript_call_result_465319 = invoke(stypy.reporting.localization.Localization(__file__, 1664, 17), getitem___465318, str_465316)
    
    # Obtaining the member 'aka' of a type (line 1664)
    aka_465320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1664, 17), subscript_call_result_465319, 'aka')
    # Applying the binary operator 'in' (line 1664)
    result_contains_465321 = python_operator(stypy.reporting.localization.Localization(__file__, 1664, 7), 'in', metric_465315, aka_465320)
    
    # Applying the binary operator 'or' (line 1663)
    result_or_keyword_465322 = python_operator(stypy.reporting.localization.Localization(__file__, 1663, 7), 'or', result_contains_465314, result_contains_465321)
    
    # Getting the type of 'metric' (line 1665)
    metric_465323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 7), 'metric')
    
    # Obtaining an instance of the builtin type 'list' (line 1665)
    list_465324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1665, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1665)
    # Adding element type (line 1665)
    str_465325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1665, 18), 'str', 'test_minkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1665, 17), list_465324, str_465325)
    # Adding element type (line 1665)
    str_465326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1665, 36), 'str', 'test_wminkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1665, 17), list_465324, str_465326)
    
    # Applying the binary operator 'in' (line 1665)
    result_contains_465327 = python_operator(stypy.reporting.localization.Localization(__file__, 1665, 7), 'in', metric_465323, list_465324)
    
    # Applying the binary operator 'or' (line 1663)
    result_or_keyword_465328 = python_operator(stypy.reporting.localization.Localization(__file__, 1663, 7), 'or', result_or_keyword_465322, result_contains_465327)
    
    # Getting the type of 'metric' (line 1666)
    metric_465329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1666, 7), 'metric')
    
    # Obtaining an instance of the builtin type 'list' (line 1666)
    list_465330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1666, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1666)
    # Adding element type (line 1666)
    # Getting the type of 'minkowski' (line 1666)
    minkowski_465331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1666, 18), 'minkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1666, 17), list_465330, minkowski_465331)
    # Adding element type (line 1666)
    # Getting the type of 'wminkowski' (line 1666)
    wminkowski_465332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1666, 29), 'wminkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1666, 17), list_465330, wminkowski_465332)
    
    # Applying the binary operator 'in' (line 1666)
    result_contains_465333 = python_operator(stypy.reporting.localization.Localization(__file__, 1666, 7), 'in', metric_465329, list_465330)
    
    # Applying the binary operator 'or' (line 1663)
    result_or_keyword_465334 = python_operator(stypy.reporting.localization.Localization(__file__, 1663, 7), 'or', result_or_keyword_465328, result_contains_465333)
    
    # Testing the type of an if condition (line 1663)
    if_condition_465335 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1663, 4), result_or_keyword_465334)
    # Assigning a type to the variable 'if_condition_465335' (line 1663)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1663, 4), 'if_condition_465335', if_condition_465335)
    # SSA begins for if statement (line 1663)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 1667):
    
    # Assigning a List to a Name (line 1667):
    
    # Obtaining an instance of the builtin type 'list' (line 1667)
    list_465336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1667, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1667)
    # Adding element type (line 1667)
    str_465337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1667, 28), 'str', 'V')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1667, 27), list_465336, str_465337)
    # Adding element type (line 1667)
    str_465338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1667, 33), 'str', 'VI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1667, 27), list_465336, str_465338)
    
    # Assigning a type to the variable 'kwargs_blacklist' (line 1667)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1667, 8), 'kwargs_blacklist', list_465336)
    # SSA branch for the else part of an if statement (line 1663)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'metric' (line 1668)
    metric_465339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1668, 9), 'metric')
    
    # Obtaining the type of the subscript
    str_465340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1668, 28), 'str', 'seuclidean')
    # Getting the type of '_METRICS' (line 1668)
    _METRICS_465341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1668, 19), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 1668)
    getitem___465342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1668, 19), _METRICS_465341, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1668)
    subscript_call_result_465343 = invoke(stypy.reporting.localization.Localization(__file__, 1668, 19), getitem___465342, str_465340)
    
    # Obtaining the member 'aka' of a type (line 1668)
    aka_465344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1668, 19), subscript_call_result_465343, 'aka')
    # Applying the binary operator 'in' (line 1668)
    result_contains_465345 = python_operator(stypy.reporting.localization.Localization(__file__, 1668, 9), 'in', metric_465339, aka_465344)
    
    
    # Getting the type of 'metric' (line 1669)
    metric_465346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 9), 'metric')
    str_465347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1669, 19), 'str', 'test_seuclidean')
    # Applying the binary operator '==' (line 1669)
    result_eq_465348 = python_operator(stypy.reporting.localization.Localization(__file__, 1669, 9), '==', metric_465346, str_465347)
    
    # Applying the binary operator 'or' (line 1668)
    result_or_keyword_465349 = python_operator(stypy.reporting.localization.Localization(__file__, 1668, 9), 'or', result_contains_465345, result_eq_465348)
    
    # Getting the type of 'metric' (line 1669)
    metric_465350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 40), 'metric')
    # Getting the type of 'seuclidean' (line 1669)
    seuclidean_465351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1669, 50), 'seuclidean')
    # Applying the binary operator '==' (line 1669)
    result_eq_465352 = python_operator(stypy.reporting.localization.Localization(__file__, 1669, 40), '==', metric_465350, seuclidean_465351)
    
    # Applying the binary operator 'or' (line 1668)
    result_or_keyword_465353 = python_operator(stypy.reporting.localization.Localization(__file__, 1668, 9), 'or', result_or_keyword_465349, result_eq_465352)
    
    # Testing the type of an if condition (line 1668)
    if_condition_465354 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1668, 8), result_or_keyword_465353)
    # Assigning a type to the variable 'if_condition_465354' (line 1668)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1668, 8), 'if_condition_465354', if_condition_465354)
    # SSA begins for if statement (line 1668)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 1670):
    
    # Assigning a List to a Name (line 1670):
    
    # Obtaining an instance of the builtin type 'list' (line 1670)
    list_465355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1670, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1670)
    # Adding element type (line 1670)
    str_465356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1670, 28), 'str', 'p')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1670, 27), list_465355, str_465356)
    # Adding element type (line 1670)
    str_465357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1670, 33), 'str', 'w')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1670, 27), list_465355, str_465357)
    # Adding element type (line 1670)
    str_465358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1670, 38), 'str', 'VI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1670, 27), list_465355, str_465358)
    
    # Assigning a type to the variable 'kwargs_blacklist' (line 1670)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1670, 8), 'kwargs_blacklist', list_465355)
    # SSA branch for the else part of an if statement (line 1668)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'metric' (line 1671)
    metric_465359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1671, 9), 'metric')
    
    # Obtaining the type of the subscript
    str_465360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1671, 28), 'str', 'mahalanobis')
    # Getting the type of '_METRICS' (line 1671)
    _METRICS_465361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1671, 19), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 1671)
    getitem___465362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1671, 19), _METRICS_465361, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1671)
    subscript_call_result_465363 = invoke(stypy.reporting.localization.Localization(__file__, 1671, 19), getitem___465362, str_465360)
    
    # Obtaining the member 'aka' of a type (line 1671)
    aka_465364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1671, 19), subscript_call_result_465363, 'aka')
    # Applying the binary operator 'in' (line 1671)
    result_contains_465365 = python_operator(stypy.reporting.localization.Localization(__file__, 1671, 9), 'in', metric_465359, aka_465364)
    
    
    # Getting the type of 'metric' (line 1672)
    metric_465366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1672, 9), 'metric')
    str_465367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1672, 19), 'str', 'test_mahalanobis')
    # Applying the binary operator '==' (line 1672)
    result_eq_465368 = python_operator(stypy.reporting.localization.Localization(__file__, 1672, 9), '==', metric_465366, str_465367)
    
    # Applying the binary operator 'or' (line 1671)
    result_or_keyword_465369 = python_operator(stypy.reporting.localization.Localization(__file__, 1671, 9), 'or', result_contains_465365, result_eq_465368)
    
    # Getting the type of 'metric' (line 1672)
    metric_465370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1672, 41), 'metric')
    # Getting the type of 'mahalanobis' (line 1672)
    mahalanobis_465371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1672, 51), 'mahalanobis')
    # Applying the binary operator '==' (line 1672)
    result_eq_465372 = python_operator(stypy.reporting.localization.Localization(__file__, 1672, 41), '==', metric_465370, mahalanobis_465371)
    
    # Applying the binary operator 'or' (line 1671)
    result_or_keyword_465373 = python_operator(stypy.reporting.localization.Localization(__file__, 1671, 9), 'or', result_or_keyword_465369, result_eq_465372)
    
    # Testing the type of an if condition (line 1671)
    if_condition_465374 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1671, 8), result_or_keyword_465373)
    # Assigning a type to the variable 'if_condition_465374' (line 1671)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1671, 8), 'if_condition_465374', if_condition_465374)
    # SSA begins for if statement (line 1671)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 1673):
    
    # Assigning a List to a Name (line 1673):
    
    # Obtaining an instance of the builtin type 'list' (line 1673)
    list_465375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1673, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1673)
    # Adding element type (line 1673)
    str_465376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1673, 28), 'str', 'p')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1673, 27), list_465375, str_465376)
    # Adding element type (line 1673)
    str_465377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1673, 33), 'str', 'w')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1673, 27), list_465375, str_465377)
    # Adding element type (line 1673)
    str_465378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1673, 38), 'str', 'V')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1673, 27), list_465375, str_465378)
    
    # Assigning a type to the variable 'kwargs_blacklist' (line 1673)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1673, 8), 'kwargs_blacklist', list_465375)
    # SSA branch for the else part of an if statement (line 1671)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a List to a Name (line 1675):
    
    # Assigning a List to a Name (line 1675):
    
    # Obtaining an instance of the builtin type 'list' (line 1675)
    list_465379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1675)
    # Adding element type (line 1675)
    str_465380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 28), 'str', 'p')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1675, 27), list_465379, str_465380)
    # Adding element type (line 1675)
    str_465381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 33), 'str', 'V')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1675, 27), list_465379, str_465381)
    # Adding element type (line 1675)
    str_465382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 38), 'str', 'VI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1675, 27), list_465379, str_465382)
    
    # Assigning a type to the variable 'kwargs_blacklist' (line 1675)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1675, 8), 'kwargs_blacklist', list_465379)
    # SSA join for if statement (line 1671)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1668)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1663)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to _filter_deprecated_kwargs(...): (line 1677)
    # Processing the call arguments (line 1677)
    # Getting the type of 'kwargs' (line 1677)
    kwargs_465384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 30), 'kwargs', False)
    # Getting the type of 'kwargs_blacklist' (line 1677)
    kwargs_blacklist_465385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 38), 'kwargs_blacklist', False)
    # Processing the call keyword arguments (line 1677)
    kwargs_465386 = {}
    # Getting the type of '_filter_deprecated_kwargs' (line 1677)
    _filter_deprecated_kwargs_465383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 4), '_filter_deprecated_kwargs', False)
    # Calling _filter_deprecated_kwargs(args, kwargs) (line 1677)
    _filter_deprecated_kwargs_call_result_465387 = invoke(stypy.reporting.localization.Localization(__file__, 1677, 4), _filter_deprecated_kwargs_465383, *[kwargs_465384, kwargs_blacklist_465385], **kwargs_465386)
    
    
    
    # Call to callable(...): (line 1679)
    # Processing the call arguments (line 1679)
    # Getting the type of 'metric' (line 1679)
    metric_465389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 16), 'metric', False)
    # Processing the call keyword arguments (line 1679)
    kwargs_465390 = {}
    # Getting the type of 'callable' (line 1679)
    callable_465388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 7), 'callable', False)
    # Calling callable(args, kwargs) (line 1679)
    callable_call_result_465391 = invoke(stypy.reporting.localization.Localization(__file__, 1679, 7), callable_465388, *[metric_465389], **kwargs_465390)
    
    # Testing the type of an if condition (line 1679)
    if_condition_465392 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1679, 4), callable_call_result_465391)
    # Assigning a type to the variable 'if_condition_465392' (line 1679)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1679, 4), 'if_condition_465392', if_condition_465392)
    # SSA begins for if statement (line 1679)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1680):
    
    # Assigning a Call to a Name (line 1680):
    
    # Call to getattr(...): (line 1680)
    # Processing the call arguments (line 1680)
    # Getting the type of 'metric' (line 1680)
    metric_465394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1680, 23), 'metric', False)
    str_465395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1680, 31), 'str', '__name__')
    str_465396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1680, 43), 'str', 'UnknownCustomMetric')
    # Processing the call keyword arguments (line 1680)
    kwargs_465397 = {}
    # Getting the type of 'getattr' (line 1680)
    getattr_465393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1680, 15), 'getattr', False)
    # Calling getattr(args, kwargs) (line 1680)
    getattr_call_result_465398 = invoke(stypy.reporting.localization.Localization(__file__, 1680, 15), getattr_465393, *[metric_465394, str_465395, str_465396], **kwargs_465397)
    
    # Assigning a type to the variable 'mstr' (line 1680)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1680, 8), 'mstr', getattr_call_result_465398)
    
    # Assigning a Call to a Name (line 1681):
    
    # Assigning a Call to a Name (line 1681):
    
    # Call to get(...): (line 1681)
    # Processing the call arguments (line 1681)
    # Getting the type of 'mstr' (line 1681)
    mstr_465401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 40), 'mstr', False)
    # Getting the type of 'None' (line 1681)
    None_465402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 46), 'None', False)
    # Processing the call keyword arguments (line 1681)
    kwargs_465403 = {}
    # Getting the type of '_METRIC_ALIAS' (line 1681)
    _METRIC_ALIAS_465399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 22), '_METRIC_ALIAS', False)
    # Obtaining the member 'get' of a type (line 1681)
    get_465400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1681, 22), _METRIC_ALIAS_465399, 'get')
    # Calling get(args, kwargs) (line 1681)
    get_call_result_465404 = invoke(stypy.reporting.localization.Localization(__file__, 1681, 22), get_465400, *[mstr_465401, None_465402], **kwargs_465403)
    
    # Assigning a type to the variable 'metric_name' (line 1681)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1681, 8), 'metric_name', get_call_result_465404)
    
    # Type idiom detected: calculating its left and rigth part (line 1683)
    # Getting the type of 'metric_name' (line 1683)
    metric_name_465405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 8), 'metric_name')
    # Getting the type of 'None' (line 1683)
    None_465406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 30), 'None')
    
    (may_be_465407, more_types_in_union_465408) = may_not_be_none(metric_name_465405, None_465406)

    if may_be_465407:

        if more_types_in_union_465408:
            # Runtime conditional SSA (line 1683)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Tuple (line 1684):
        
        # Assigning a Subscript to a Name (line 1684):
        
        # Obtaining the type of the subscript
        int_465409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1684, 12), 'int')
        
        # Call to _validate_pdist_input(...): (line 1684)
        # Processing the call arguments (line 1684)
        # Getting the type of 'X' (line 1684)
        X_465411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 51), 'X', False)
        # Getting the type of 'm' (line 1684)
        m_465412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 54), 'm', False)
        # Getting the type of 'n' (line 1684)
        n_465413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 57), 'n', False)
        # Getting the type of 'metric_name' (line 1685)
        metric_name_465414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 51), 'metric_name', False)
        # Processing the call keyword arguments (line 1684)
        # Getting the type of 'kwargs' (line 1685)
        kwargs_465415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 66), 'kwargs', False)
        kwargs_465416 = {'kwargs_465415': kwargs_465415}
        # Getting the type of '_validate_pdist_input' (line 1684)
        _validate_pdist_input_465410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 29), '_validate_pdist_input', False)
        # Calling _validate_pdist_input(args, kwargs) (line 1684)
        _validate_pdist_input_call_result_465417 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 29), _validate_pdist_input_465410, *[X_465411, m_465412, n_465413, metric_name_465414], **kwargs_465416)
        
        # Obtaining the member '__getitem__' of a type (line 1684)
        getitem___465418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 12), _validate_pdist_input_call_result_465417, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1684)
        subscript_call_result_465419 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 12), getitem___465418, int_465409)
        
        # Assigning a type to the variable 'tuple_var_assignment_462812' (line 1684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 12), 'tuple_var_assignment_462812', subscript_call_result_465419)
        
        # Assigning a Subscript to a Name (line 1684):
        
        # Obtaining the type of the subscript
        int_465420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1684, 12), 'int')
        
        # Call to _validate_pdist_input(...): (line 1684)
        # Processing the call arguments (line 1684)
        # Getting the type of 'X' (line 1684)
        X_465422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 51), 'X', False)
        # Getting the type of 'm' (line 1684)
        m_465423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 54), 'm', False)
        # Getting the type of 'n' (line 1684)
        n_465424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 57), 'n', False)
        # Getting the type of 'metric_name' (line 1685)
        metric_name_465425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 51), 'metric_name', False)
        # Processing the call keyword arguments (line 1684)
        # Getting the type of 'kwargs' (line 1685)
        kwargs_465426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 66), 'kwargs', False)
        kwargs_465427 = {'kwargs_465426': kwargs_465426}
        # Getting the type of '_validate_pdist_input' (line 1684)
        _validate_pdist_input_465421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 29), '_validate_pdist_input', False)
        # Calling _validate_pdist_input(args, kwargs) (line 1684)
        _validate_pdist_input_call_result_465428 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 29), _validate_pdist_input_465421, *[X_465422, m_465423, n_465424, metric_name_465425], **kwargs_465427)
        
        # Obtaining the member '__getitem__' of a type (line 1684)
        getitem___465429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 12), _validate_pdist_input_call_result_465428, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1684)
        subscript_call_result_465430 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 12), getitem___465429, int_465420)
        
        # Assigning a type to the variable 'tuple_var_assignment_462813' (line 1684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 12), 'tuple_var_assignment_462813', subscript_call_result_465430)
        
        # Assigning a Subscript to a Name (line 1684):
        
        # Obtaining the type of the subscript
        int_465431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1684, 12), 'int')
        
        # Call to _validate_pdist_input(...): (line 1684)
        # Processing the call arguments (line 1684)
        # Getting the type of 'X' (line 1684)
        X_465433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 51), 'X', False)
        # Getting the type of 'm' (line 1684)
        m_465434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 54), 'm', False)
        # Getting the type of 'n' (line 1684)
        n_465435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 57), 'n', False)
        # Getting the type of 'metric_name' (line 1685)
        metric_name_465436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 51), 'metric_name', False)
        # Processing the call keyword arguments (line 1684)
        # Getting the type of 'kwargs' (line 1685)
        kwargs_465437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1685, 66), 'kwargs', False)
        kwargs_465438 = {'kwargs_465437': kwargs_465437}
        # Getting the type of '_validate_pdist_input' (line 1684)
        _validate_pdist_input_465432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 29), '_validate_pdist_input', False)
        # Calling _validate_pdist_input(args, kwargs) (line 1684)
        _validate_pdist_input_call_result_465439 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 29), _validate_pdist_input_465432, *[X_465433, m_465434, n_465435, metric_name_465436], **kwargs_465438)
        
        # Obtaining the member '__getitem__' of a type (line 1684)
        getitem___465440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1684, 12), _validate_pdist_input_call_result_465439, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1684)
        subscript_call_result_465441 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 12), getitem___465440, int_465431)
        
        # Assigning a type to the variable 'tuple_var_assignment_462814' (line 1684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 12), 'tuple_var_assignment_462814', subscript_call_result_465441)
        
        # Assigning a Name to a Name (line 1684):
        # Getting the type of 'tuple_var_assignment_462812' (line 1684)
        tuple_var_assignment_462812_465442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 12), 'tuple_var_assignment_462812')
        # Assigning a type to the variable 'X' (line 1684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 12), 'X', tuple_var_assignment_462812_465442)
        
        # Assigning a Name to a Name (line 1684):
        # Getting the type of 'tuple_var_assignment_462813' (line 1684)
        tuple_var_assignment_462813_465443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 12), 'tuple_var_assignment_462813')
        # Assigning a type to the variable 'typ' (line 1684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 15), 'typ', tuple_var_assignment_462813_465443)
        
        # Assigning a Name to a Name (line 1684):
        # Getting the type of 'tuple_var_assignment_462814' (line 1684)
        tuple_var_assignment_462814_465444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 12), 'tuple_var_assignment_462814')
        # Assigning a type to the variable 'kwargs' (line 1684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1684, 20), 'kwargs', tuple_var_assignment_462814_465444)

        if more_types_in_union_465408:
            # SSA join for if statement (line 1683)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Num to a Name (line 1687):
    
    # Assigning a Num to a Name (line 1687):
    int_465445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1687, 12), 'int')
    # Assigning a type to the variable 'k' (line 1687)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1687, 8), 'k', int_465445)
    
    
    # Call to xrange(...): (line 1688)
    # Processing the call arguments (line 1688)
    int_465447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1688, 24), 'int')
    # Getting the type of 'm' (line 1688)
    m_465448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 27), 'm', False)
    int_465449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1688, 31), 'int')
    # Applying the binary operator '-' (line 1688)
    result_sub_465450 = python_operator(stypy.reporting.localization.Localization(__file__, 1688, 27), '-', m_465448, int_465449)
    
    # Processing the call keyword arguments (line 1688)
    kwargs_465451 = {}
    # Getting the type of 'xrange' (line 1688)
    xrange_465446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1688, 17), 'xrange', False)
    # Calling xrange(args, kwargs) (line 1688)
    xrange_call_result_465452 = invoke(stypy.reporting.localization.Localization(__file__, 1688, 17), xrange_465446, *[int_465447, result_sub_465450], **kwargs_465451)
    
    # Testing the type of a for loop iterable (line 1688)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1688, 8), xrange_call_result_465452)
    # Getting the type of the for loop variable (line 1688)
    for_loop_var_465453 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1688, 8), xrange_call_result_465452)
    # Assigning a type to the variable 'i' (line 1688)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1688, 8), 'i', for_loop_var_465453)
    # SSA begins for a for statement (line 1688)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to xrange(...): (line 1689)
    # Processing the call arguments (line 1689)
    # Getting the type of 'i' (line 1689)
    i_465455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 28), 'i', False)
    int_465456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1689, 32), 'int')
    # Applying the binary operator '+' (line 1689)
    result_add_465457 = python_operator(stypy.reporting.localization.Localization(__file__, 1689, 28), '+', i_465455, int_465456)
    
    # Getting the type of 'm' (line 1689)
    m_465458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 35), 'm', False)
    # Processing the call keyword arguments (line 1689)
    kwargs_465459 = {}
    # Getting the type of 'xrange' (line 1689)
    xrange_465454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1689, 21), 'xrange', False)
    # Calling xrange(args, kwargs) (line 1689)
    xrange_call_result_465460 = invoke(stypy.reporting.localization.Localization(__file__, 1689, 21), xrange_465454, *[result_add_465457, m_465458], **kwargs_465459)
    
    # Testing the type of a for loop iterable (line 1689)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1689, 12), xrange_call_result_465460)
    # Getting the type of the for loop variable (line 1689)
    for_loop_var_465461 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1689, 12), xrange_call_result_465460)
    # Assigning a type to the variable 'j' (line 1689)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1689, 12), 'j', for_loop_var_465461)
    # SSA begins for a for statement (line 1689)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Subscript (line 1690):
    
    # Assigning a Call to a Subscript (line 1690):
    
    # Call to metric(...): (line 1690)
    # Processing the call arguments (line 1690)
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 1690)
    i_465463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 33), 'i', False)
    # Getting the type of 'X' (line 1690)
    X_465464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 31), 'X', False)
    # Obtaining the member '__getitem__' of a type (line 1690)
    getitem___465465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 31), X_465464, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1690)
    subscript_call_result_465466 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 31), getitem___465465, i_465463)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 1690)
    j_465467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 39), 'j', False)
    # Getting the type of 'X' (line 1690)
    X_465468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 37), 'X', False)
    # Obtaining the member '__getitem__' of a type (line 1690)
    getitem___465469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 37), X_465468, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1690)
    subscript_call_result_465470 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 37), getitem___465469, j_465467)
    
    # Processing the call keyword arguments (line 1690)
    # Getting the type of 'kwargs' (line 1690)
    kwargs_465471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 45), 'kwargs', False)
    kwargs_465472 = {'kwargs_465471': kwargs_465471}
    # Getting the type of 'metric' (line 1690)
    metric_465462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 24), 'metric', False)
    # Calling metric(args, kwargs) (line 1690)
    metric_call_result_465473 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 24), metric_465462, *[subscript_call_result_465466, subscript_call_result_465470], **kwargs_465472)
    
    # Getting the type of 'dm' (line 1690)
    dm_465474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 16), 'dm')
    # Getting the type of 'k' (line 1690)
    k_465475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 19), 'k')
    # Storing an element on a container (line 1690)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1690, 16), dm_465474, (k_465475, metric_call_result_465473))
    
    # Assigning a BinOp to a Name (line 1691):
    
    # Assigning a BinOp to a Name (line 1691):
    # Getting the type of 'k' (line 1691)
    k_465476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 20), 'k')
    int_465477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 24), 'int')
    # Applying the binary operator '+' (line 1691)
    result_add_465478 = python_operator(stypy.reporting.localization.Localization(__file__, 1691, 20), '+', k_465476, int_465477)
    
    # Assigning a type to the variable 'k' (line 1691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1691, 16), 'k', result_add_465478)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1679)
    module_type_store.open_ssa_branch('else')
    
    
    # Call to isinstance(...): (line 1693)
    # Processing the call arguments (line 1693)
    # Getting the type of 'metric' (line 1693)
    metric_465480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 20), 'metric', False)
    # Getting the type of 'string_types' (line 1693)
    string_types_465481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 28), 'string_types', False)
    # Processing the call keyword arguments (line 1693)
    kwargs_465482 = {}
    # Getting the type of 'isinstance' (line 1693)
    isinstance_465479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 9), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 1693)
    isinstance_call_result_465483 = invoke(stypy.reporting.localization.Localization(__file__, 1693, 9), isinstance_465479, *[metric_465480, string_types_465481], **kwargs_465482)
    
    # Testing the type of an if condition (line 1693)
    if_condition_465484 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1693, 9), isinstance_call_result_465483)
    # Assigning a type to the variable 'if_condition_465484' (line 1693)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1693, 9), 'if_condition_465484', if_condition_465484)
    # SSA begins for if statement (line 1693)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1694):
    
    # Assigning a Call to a Name (line 1694):
    
    # Call to lower(...): (line 1694)
    # Processing the call keyword arguments (line 1694)
    kwargs_465487 = {}
    # Getting the type of 'metric' (line 1694)
    metric_465485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 15), 'metric', False)
    # Obtaining the member 'lower' of a type (line 1694)
    lower_465486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1694, 15), metric_465485, 'lower')
    # Calling lower(args, kwargs) (line 1694)
    lower_call_result_465488 = invoke(stypy.reporting.localization.Localization(__file__, 1694, 15), lower_465486, *[], **kwargs_465487)
    
    # Assigning a type to the variable 'mstr' (line 1694)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1694, 8), 'mstr', lower_call_result_465488)
    
    
    # Evaluating a boolean operation
    
    str_465489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1697, 11), 'str', 'w')
    # Getting the type of 'kwargs' (line 1697)
    kwargs_465490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 18), 'kwargs')
    # Applying the binary operator 'in' (line 1697)
    result_contains_465491 = python_operator(stypy.reporting.localization.Localization(__file__, 1697, 11), 'in', str_465489, kwargs_465490)
    
    
    
    # Call to startswith(...): (line 1697)
    # Processing the call arguments (line 1697)
    str_465494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1697, 49), 'str', 'test_')
    # Processing the call keyword arguments (line 1697)
    kwargs_465495 = {}
    # Getting the type of 'mstr' (line 1697)
    mstr_465492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 33), 'mstr', False)
    # Obtaining the member 'startswith' of a type (line 1697)
    startswith_465493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1697, 33), mstr_465492, 'startswith')
    # Calling startswith(args, kwargs) (line 1697)
    startswith_call_result_465496 = invoke(stypy.reporting.localization.Localization(__file__, 1697, 33), startswith_465493, *[str_465494], **kwargs_465495)
    
    # Applying the 'not' unary operator (line 1697)
    result_not__465497 = python_operator(stypy.reporting.localization.Localization(__file__, 1697, 29), 'not', startswith_call_result_465496)
    
    # Applying the binary operator 'and' (line 1697)
    result_and_keyword_465498 = python_operator(stypy.reporting.localization.Localization(__file__, 1697, 11), 'and', result_contains_465491, result_not__465497)
    
    # Testing the type of an if condition (line 1697)
    if_condition_465499 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1697, 8), result_and_keyword_465498)
    # Assigning a type to the variable 'if_condition_465499' (line 1697)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1697, 8), 'if_condition_465499', if_condition_465499)
    # SSA begins for if statement (line 1697)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'mstr' (line 1698)
    mstr_465500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 15), 'mstr')
    
    # Obtaining the type of the subscript
    str_465501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 32), 'str', 'seuclidean')
    # Getting the type of '_METRICS' (line 1698)
    _METRICS_465502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 23), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 1698)
    getitem___465503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 23), _METRICS_465502, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1698)
    subscript_call_result_465504 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 23), getitem___465503, str_465501)
    
    # Obtaining the member 'aka' of a type (line 1698)
    aka_465505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 23), subscript_call_result_465504, 'aka')
    # Applying the binary operator 'in' (line 1698)
    result_contains_465506 = python_operator(stypy.reporting.localization.Localization(__file__, 1698, 15), 'in', mstr_465500, aka_465505)
    
    
    # Getting the type of 'mstr' (line 1699)
    mstr_465507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 15), 'mstr')
    
    # Obtaining the type of the subscript
    str_465508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1699, 32), 'str', 'mahalanobis')
    # Getting the type of '_METRICS' (line 1699)
    _METRICS_465509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 23), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 1699)
    getitem___465510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 23), _METRICS_465509, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1699)
    subscript_call_result_465511 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 23), getitem___465510, str_465508)
    
    # Obtaining the member 'aka' of a type (line 1699)
    aka_465512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 23), subscript_call_result_465511, 'aka')
    # Applying the binary operator 'in' (line 1699)
    result_contains_465513 = python_operator(stypy.reporting.localization.Localization(__file__, 1699, 15), 'in', mstr_465507, aka_465512)
    
    # Applying the binary operator 'or' (line 1698)
    result_or_keyword_465514 = python_operator(stypy.reporting.localization.Localization(__file__, 1698, 15), 'or', result_contains_465506, result_contains_465513)
    
    # Testing the type of an if condition (line 1698)
    if_condition_465515 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1698, 12), result_or_keyword_465514)
    # Assigning a type to the variable 'if_condition_465515' (line 1698)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 12), 'if_condition_465515', if_condition_465515)
    # SSA begins for if statement (line 1698)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1700)
    # Processing the call arguments (line 1700)
    str_465517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1700, 33), 'str', 'metric %s incompatible with weights')
    # Getting the type of 'mstr' (line 1700)
    mstr_465518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 73), 'mstr', False)
    # Applying the binary operator '%' (line 1700)
    result_mod_465519 = python_operator(stypy.reporting.localization.Localization(__file__, 1700, 33), '%', str_465517, mstr_465518)
    
    # Processing the call keyword arguments (line 1700)
    kwargs_465520 = {}
    # Getting the type of 'ValueError' (line 1700)
    ValueError_465516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1700)
    ValueError_call_result_465521 = invoke(stypy.reporting.localization.Localization(__file__, 1700, 22), ValueError_465516, *[result_mod_465519], **kwargs_465520)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1700, 16), ValueError_call_result_465521, 'raise parameter', BaseException)
    # SSA join for if statement (line 1698)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 1702):
    
    # Assigning a Name to a Subscript (line 1702):
    # Getting the type of 'out' (line 1702)
    out_465522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 28), 'out')
    # Getting the type of 'kwargs' (line 1702)
    kwargs_465523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 12), 'kwargs')
    str_465524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1702, 19), 'str', 'out')
    # Storing an element on a container (line 1702)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1702, 12), kwargs_465523, (str_465524, out_465522))
    
    # Assigning a BinOp to a Name (line 1703):
    
    # Assigning a BinOp to a Name (line 1703):
    str_465525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1703, 19), 'str', 'test_%s')
    # Getting the type of 'mstr' (line 1703)
    mstr_465526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 31), 'mstr')
    # Applying the binary operator '%' (line 1703)
    result_mod_465527 = python_operator(stypy.reporting.localization.Localization(__file__, 1703, 19), '%', str_465525, mstr_465526)
    
    # Assigning a type to the variable 'mstr' (line 1703)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1703, 12), 'mstr', result_mod_465527)
    # SSA join for if statement (line 1697)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1705):
    
    # Assigning a Call to a Name (line 1705):
    
    # Call to get(...): (line 1705)
    # Processing the call arguments (line 1705)
    # Getting the type of 'mstr' (line 1705)
    mstr_465530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 40), 'mstr', False)
    # Getting the type of 'None' (line 1705)
    None_465531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 46), 'None', False)
    # Processing the call keyword arguments (line 1705)
    kwargs_465532 = {}
    # Getting the type of '_METRIC_ALIAS' (line 1705)
    _METRIC_ALIAS_465528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 22), '_METRIC_ALIAS', False)
    # Obtaining the member 'get' of a type (line 1705)
    get_465529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1705, 22), _METRIC_ALIAS_465528, 'get')
    # Calling get(args, kwargs) (line 1705)
    get_call_result_465533 = invoke(stypy.reporting.localization.Localization(__file__, 1705, 22), get_465529, *[mstr_465530, None_465531], **kwargs_465532)
    
    # Assigning a type to the variable 'metric_name' (line 1705)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1705, 8), 'metric_name', get_call_result_465533)
    
    # Type idiom detected: calculating its left and rigth part (line 1707)
    # Getting the type of 'metric_name' (line 1707)
    metric_name_465534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 8), 'metric_name')
    # Getting the type of 'None' (line 1707)
    None_465535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 30), 'None')
    
    (may_be_465536, more_types_in_union_465537) = may_not_be_none(metric_name_465534, None_465535)

    if may_be_465536:

        if more_types_in_union_465537:
            # Runtime conditional SSA (line 1707)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Tuple (line 1708):
        
        # Assigning a Subscript to a Name (line 1708):
        
        # Obtaining the type of the subscript
        int_465538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1708, 12), 'int')
        
        # Call to _validate_pdist_input(...): (line 1708)
        # Processing the call arguments (line 1708)
        # Getting the type of 'X' (line 1708)
        X_465540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 51), 'X', False)
        # Getting the type of 'm' (line 1708)
        m_465541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 54), 'm', False)
        # Getting the type of 'n' (line 1708)
        n_465542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 57), 'n', False)
        # Getting the type of 'metric_name' (line 1709)
        metric_name_465543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 51), 'metric_name', False)
        # Processing the call keyword arguments (line 1708)
        # Getting the type of 'kwargs' (line 1709)
        kwargs_465544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 66), 'kwargs', False)
        kwargs_465545 = {'kwargs_465544': kwargs_465544}
        # Getting the type of '_validate_pdist_input' (line 1708)
        _validate_pdist_input_465539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 29), '_validate_pdist_input', False)
        # Calling _validate_pdist_input(args, kwargs) (line 1708)
        _validate_pdist_input_call_result_465546 = invoke(stypy.reporting.localization.Localization(__file__, 1708, 29), _validate_pdist_input_465539, *[X_465540, m_465541, n_465542, metric_name_465543], **kwargs_465545)
        
        # Obtaining the member '__getitem__' of a type (line 1708)
        getitem___465547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1708, 12), _validate_pdist_input_call_result_465546, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1708)
        subscript_call_result_465548 = invoke(stypy.reporting.localization.Localization(__file__, 1708, 12), getitem___465547, int_465538)
        
        # Assigning a type to the variable 'tuple_var_assignment_462815' (line 1708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1708, 12), 'tuple_var_assignment_462815', subscript_call_result_465548)
        
        # Assigning a Subscript to a Name (line 1708):
        
        # Obtaining the type of the subscript
        int_465549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1708, 12), 'int')
        
        # Call to _validate_pdist_input(...): (line 1708)
        # Processing the call arguments (line 1708)
        # Getting the type of 'X' (line 1708)
        X_465551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 51), 'X', False)
        # Getting the type of 'm' (line 1708)
        m_465552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 54), 'm', False)
        # Getting the type of 'n' (line 1708)
        n_465553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 57), 'n', False)
        # Getting the type of 'metric_name' (line 1709)
        metric_name_465554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 51), 'metric_name', False)
        # Processing the call keyword arguments (line 1708)
        # Getting the type of 'kwargs' (line 1709)
        kwargs_465555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 66), 'kwargs', False)
        kwargs_465556 = {'kwargs_465555': kwargs_465555}
        # Getting the type of '_validate_pdist_input' (line 1708)
        _validate_pdist_input_465550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 29), '_validate_pdist_input', False)
        # Calling _validate_pdist_input(args, kwargs) (line 1708)
        _validate_pdist_input_call_result_465557 = invoke(stypy.reporting.localization.Localization(__file__, 1708, 29), _validate_pdist_input_465550, *[X_465551, m_465552, n_465553, metric_name_465554], **kwargs_465556)
        
        # Obtaining the member '__getitem__' of a type (line 1708)
        getitem___465558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1708, 12), _validate_pdist_input_call_result_465557, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1708)
        subscript_call_result_465559 = invoke(stypy.reporting.localization.Localization(__file__, 1708, 12), getitem___465558, int_465549)
        
        # Assigning a type to the variable 'tuple_var_assignment_462816' (line 1708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1708, 12), 'tuple_var_assignment_462816', subscript_call_result_465559)
        
        # Assigning a Subscript to a Name (line 1708):
        
        # Obtaining the type of the subscript
        int_465560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1708, 12), 'int')
        
        # Call to _validate_pdist_input(...): (line 1708)
        # Processing the call arguments (line 1708)
        # Getting the type of 'X' (line 1708)
        X_465562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 51), 'X', False)
        # Getting the type of 'm' (line 1708)
        m_465563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 54), 'm', False)
        # Getting the type of 'n' (line 1708)
        n_465564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 57), 'n', False)
        # Getting the type of 'metric_name' (line 1709)
        metric_name_465565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 51), 'metric_name', False)
        # Processing the call keyword arguments (line 1708)
        # Getting the type of 'kwargs' (line 1709)
        kwargs_465566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 66), 'kwargs', False)
        kwargs_465567 = {'kwargs_465566': kwargs_465566}
        # Getting the type of '_validate_pdist_input' (line 1708)
        _validate_pdist_input_465561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 29), '_validate_pdist_input', False)
        # Calling _validate_pdist_input(args, kwargs) (line 1708)
        _validate_pdist_input_call_result_465568 = invoke(stypy.reporting.localization.Localization(__file__, 1708, 29), _validate_pdist_input_465561, *[X_465562, m_465563, n_465564, metric_name_465565], **kwargs_465567)
        
        # Obtaining the member '__getitem__' of a type (line 1708)
        getitem___465569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1708, 12), _validate_pdist_input_call_result_465568, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1708)
        subscript_call_result_465570 = invoke(stypy.reporting.localization.Localization(__file__, 1708, 12), getitem___465569, int_465560)
        
        # Assigning a type to the variable 'tuple_var_assignment_462817' (line 1708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1708, 12), 'tuple_var_assignment_462817', subscript_call_result_465570)
        
        # Assigning a Name to a Name (line 1708):
        # Getting the type of 'tuple_var_assignment_462815' (line 1708)
        tuple_var_assignment_462815_465571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 12), 'tuple_var_assignment_462815')
        # Assigning a type to the variable 'X' (line 1708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1708, 12), 'X', tuple_var_assignment_462815_465571)
        
        # Assigning a Name to a Name (line 1708):
        # Getting the type of 'tuple_var_assignment_462816' (line 1708)
        tuple_var_assignment_462816_465572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 12), 'tuple_var_assignment_462816')
        # Assigning a type to the variable 'typ' (line 1708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1708, 15), 'typ', tuple_var_assignment_462816_465572)
        
        # Assigning a Name to a Name (line 1708):
        # Getting the type of 'tuple_var_assignment_462817' (line 1708)
        tuple_var_assignment_462817_465573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1708, 12), 'tuple_var_assignment_462817')
        # Assigning a type to the variable 'kwargs' (line 1708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1708, 20), 'kwargs', tuple_var_assignment_462817_465573)
        
        # Assigning a Call to a Name (line 1712):
        
        # Assigning a Call to a Name (line 1712):
        
        # Call to getattr(...): (line 1712)
        # Processing the call arguments (line 1712)
        # Getting the type of '_distance_wrap' (line 1712)
        _distance_wrap_465575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1712, 31), '_distance_wrap', False)
        str_465576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1713, 31), 'str', 'pdist_%s_%s_wrap')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1713)
        tuple_465577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1713, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1713)
        # Adding element type (line 1713)
        # Getting the type of 'metric_name' (line 1713)
        metric_name_465578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1713, 53), 'metric_name', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1713, 53), tuple_465577, metric_name_465578)
        # Adding element type (line 1713)
        # Getting the type of 'typ' (line 1713)
        typ_465579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1713, 66), 'typ', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1713, 53), tuple_465577, typ_465579)
        
        # Applying the binary operator '%' (line 1713)
        result_mod_465580 = python_operator(stypy.reporting.localization.Localization(__file__, 1713, 31), '%', str_465576, tuple_465577)
        
        # Processing the call keyword arguments (line 1712)
        kwargs_465581 = {}
        # Getting the type of 'getattr' (line 1712)
        getattr_465574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1712, 23), 'getattr', False)
        # Calling getattr(args, kwargs) (line 1712)
        getattr_call_result_465582 = invoke(stypy.reporting.localization.Localization(__file__, 1712, 23), getattr_465574, *[_distance_wrap_465575, result_mod_465580], **kwargs_465581)
        
        # Assigning a type to the variable 'pdist_fn' (line 1712)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1712, 12), 'pdist_fn', getattr_call_result_465582)
        
        # Call to pdist_fn(...): (line 1714)
        # Processing the call arguments (line 1714)
        # Getting the type of 'X' (line 1714)
        X_465584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 21), 'X', False)
        # Getting the type of 'dm' (line 1714)
        dm_465585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 24), 'dm', False)
        # Processing the call keyword arguments (line 1714)
        # Getting the type of 'kwargs' (line 1714)
        kwargs_465586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 30), 'kwargs', False)
        kwargs_465587 = {'kwargs_465586': kwargs_465586}
        # Getting the type of 'pdist_fn' (line 1714)
        pdist_fn_465583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1714, 12), 'pdist_fn', False)
        # Calling pdist_fn(args, kwargs) (line 1714)
        pdist_fn_call_result_465588 = invoke(stypy.reporting.localization.Localization(__file__, 1714, 12), pdist_fn_465583, *[X_465584, dm_465585], **kwargs_465587)
        
        # Getting the type of 'dm' (line 1715)
        dm_465589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1715, 19), 'dm')
        # Assigning a type to the variable 'stypy_return_type' (line 1715)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1715, 12), 'stypy_return_type', dm_465589)

        if more_types_in_union_465537:
            # Runtime conditional SSA for else branch (line 1707)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_465536) or more_types_in_union_465537):
        
        
        # Getting the type of 'mstr' (line 1717)
        mstr_465590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1717, 13), 'mstr')
        
        # Obtaining an instance of the builtin type 'list' (line 1717)
        list_465591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1717, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1717)
        # Adding element type (line 1717)
        str_465592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1717, 22), 'str', 'old_cosine')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1717, 21), list_465591, str_465592)
        # Adding element type (line 1717)
        str_465593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1717, 36), 'str', 'old_cos')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1717, 21), list_465591, str_465593)
        
        # Applying the binary operator 'in' (line 1717)
        result_contains_465594 = python_operator(stypy.reporting.localization.Localization(__file__, 1717, 13), 'in', mstr_465590, list_465591)
        
        # Testing the type of an if condition (line 1717)
        if_condition_465595 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1717, 13), result_contains_465594)
        # Assigning a type to the variable 'if_condition_465595' (line 1717)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1717, 13), 'if_condition_465595', if_condition_465595)
        # SSA begins for if statement (line 1717)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to warn(...): (line 1718)
        # Processing the call arguments (line 1718)
        str_465598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1718, 26), 'str', '"old_cosine" is deprecated and will be removed in a future version. Use "cosine" instead.')
        # Getting the type of 'DeprecationWarning' (line 1720)
        DeprecationWarning_465599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1720, 26), 'DeprecationWarning', False)
        # Processing the call keyword arguments (line 1718)
        kwargs_465600 = {}
        # Getting the type of 'warnings' (line 1718)
        warnings_465596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 12), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 1718)
        warn_465597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1718, 12), warnings_465596, 'warn')
        # Calling warn(args, kwargs) (line 1718)
        warn_call_result_465601 = invoke(stypy.reporting.localization.Localization(__file__, 1718, 12), warn_465597, *[str_465598, DeprecationWarning_465599], **kwargs_465600)
        
        
        # Assigning a Call to a Name (line 1721):
        
        # Assigning a Call to a Name (line 1721):
        
        # Call to _convert_to_double(...): (line 1721)
        # Processing the call arguments (line 1721)
        # Getting the type of 'X' (line 1721)
        X_465603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 35), 'X', False)
        # Processing the call keyword arguments (line 1721)
        kwargs_465604 = {}
        # Getting the type of '_convert_to_double' (line 1721)
        _convert_to_double_465602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 16), '_convert_to_double', False)
        # Calling _convert_to_double(args, kwargs) (line 1721)
        _convert_to_double_call_result_465605 = invoke(stypy.reporting.localization.Localization(__file__, 1721, 16), _convert_to_double_465602, *[X_465603], **kwargs_465604)
        
        # Assigning a type to the variable 'X' (line 1721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1721, 12), 'X', _convert_to_double_call_result_465605)
        
        # Assigning a Call to a Name (line 1722):
        
        # Assigning a Call to a Name (line 1722):
        
        # Call to einsum(...): (line 1722)
        # Processing the call arguments (line 1722)
        str_465608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1722, 30), 'str', 'ij,ij->i')
        # Getting the type of 'X' (line 1722)
        X_465609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1722, 42), 'X', False)
        # Getting the type of 'X' (line 1722)
        X_465610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1722, 45), 'X', False)
        # Processing the call keyword arguments (line 1722)
        # Getting the type of 'np' (line 1722)
        np_465611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1722, 54), 'np', False)
        # Obtaining the member 'double' of a type (line 1722)
        double_465612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1722, 54), np_465611, 'double')
        keyword_465613 = double_465612
        kwargs_465614 = {'dtype': keyword_465613}
        # Getting the type of 'np' (line 1722)
        np_465606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1722, 20), 'np', False)
        # Obtaining the member 'einsum' of a type (line 1722)
        einsum_465607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1722, 20), np_465606, 'einsum')
        # Calling einsum(args, kwargs) (line 1722)
        einsum_call_result_465615 = invoke(stypy.reporting.localization.Localization(__file__, 1722, 20), einsum_465607, *[str_465608, X_465609, X_465610], **kwargs_465614)
        
        # Assigning a type to the variable 'norms' (line 1722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1722, 12), 'norms', einsum_call_result_465615)
        
        # Call to sqrt(...): (line 1723)
        # Processing the call arguments (line 1723)
        # Getting the type of 'norms' (line 1723)
        norms_465618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 20), 'norms', False)
        # Processing the call keyword arguments (line 1723)
        # Getting the type of 'norms' (line 1723)
        norms_465619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 31), 'norms', False)
        keyword_465620 = norms_465619
        kwargs_465621 = {'out': keyword_465620}
        # Getting the type of 'np' (line 1723)
        np_465616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 12), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 1723)
        sqrt_465617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1723, 12), np_465616, 'sqrt')
        # Calling sqrt(args, kwargs) (line 1723)
        sqrt_call_result_465622 = invoke(stypy.reporting.localization.Localization(__file__, 1723, 12), sqrt_465617, *[norms_465618], **kwargs_465621)
        
        
        # Assigning a Call to a Name (line 1724):
        
        # Assigning a Call to a Name (line 1724):
        
        # Call to reshape(...): (line 1724)
        # Processing the call arguments (line 1724)
        # Getting the type of 'm' (line 1724)
        m_465625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1724, 31), 'm', False)
        int_465626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1724, 34), 'int')
        # Processing the call keyword arguments (line 1724)
        kwargs_465627 = {}
        # Getting the type of 'norms' (line 1724)
        norms_465623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1724, 17), 'norms', False)
        # Obtaining the member 'reshape' of a type (line 1724)
        reshape_465624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1724, 17), norms_465623, 'reshape')
        # Calling reshape(args, kwargs) (line 1724)
        reshape_call_result_465628 = invoke(stypy.reporting.localization.Localization(__file__, 1724, 17), reshape_465624, *[m_465625, int_465626], **kwargs_465627)
        
        # Assigning a type to the variable 'nV' (line 1724)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1724, 12), 'nV', reshape_call_result_465628)
        
        # Assigning a Call to a Name (line 1726):
        
        # Assigning a Call to a Name (line 1726):
        
        # Call to dot(...): (line 1726)
        # Processing the call arguments (line 1726)
        # Getting the type of 'X' (line 1726)
        X_465631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1726, 24), 'X', False)
        # Getting the type of 'X' (line 1726)
        X_465632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1726, 27), 'X', False)
        # Obtaining the member 'T' of a type (line 1726)
        T_465633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1726, 27), X_465632, 'T')
        # Processing the call keyword arguments (line 1726)
        kwargs_465634 = {}
        # Getting the type of 'np' (line 1726)
        np_465629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1726, 17), 'np', False)
        # Obtaining the member 'dot' of a type (line 1726)
        dot_465630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1726, 17), np_465629, 'dot')
        # Calling dot(args, kwargs) (line 1726)
        dot_call_result_465635 = invoke(stypy.reporting.localization.Localization(__file__, 1726, 17), dot_465630, *[X_465631, T_465633], **kwargs_465634)
        
        # Assigning a type to the variable 'nm' (line 1726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1726, 12), 'nm', dot_call_result_465635)
        
        # Assigning a Call to a Name (line 1728):
        
        # Assigning a Call to a Name (line 1728):
        
        # Call to dot(...): (line 1728)
        # Processing the call arguments (line 1728)
        # Getting the type of 'nV' (line 1728)
        nV_465638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1728, 24), 'nV', False)
        # Getting the type of 'nV' (line 1728)
        nV_465639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1728, 28), 'nV', False)
        # Obtaining the member 'T' of a type (line 1728)
        T_465640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1728, 28), nV_465639, 'T')
        # Processing the call keyword arguments (line 1728)
        kwargs_465641 = {}
        # Getting the type of 'np' (line 1728)
        np_465636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1728, 17), 'np', False)
        # Obtaining the member 'dot' of a type (line 1728)
        dot_465637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1728, 17), np_465636, 'dot')
        # Calling dot(args, kwargs) (line 1728)
        dot_call_result_465642 = invoke(stypy.reporting.localization.Localization(__file__, 1728, 17), dot_465637, *[nV_465638, T_465640], **kwargs_465641)
        
        # Assigning a type to the variable 'de' (line 1728)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1728, 12), 'de', dot_call_result_465642)
        
        # Assigning a BinOp to a Name (line 1729):
        
        # Assigning a BinOp to a Name (line 1729):
        float_465643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1729, 17), 'float')
        # Getting the type of 'nm' (line 1729)
        nm_465644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1729, 24), 'nm')
        # Getting the type of 'de' (line 1729)
        de_465645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1729, 29), 'de')
        # Applying the binary operator 'div' (line 1729)
        result_div_465646 = python_operator(stypy.reporting.localization.Localization(__file__, 1729, 24), 'div', nm_465644, de_465645)
        
        # Applying the binary operator '-' (line 1729)
        result_sub_465647 = python_operator(stypy.reporting.localization.Localization(__file__, 1729, 17), '-', float_465643, result_div_465646)
        
        # Assigning a type to the variable 'dm' (line 1729)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1729, 12), 'dm', result_sub_465647)
        
        # Assigning a Num to a Subscript (line 1730):
        
        # Assigning a Num to a Subscript (line 1730):
        float_465648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1730, 45), 'float')
        # Getting the type of 'dm' (line 1730)
        dm_465649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1730, 12), 'dm')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1730)
        tuple_465650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1730, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1730)
        # Adding element type (line 1730)
        
        # Call to xrange(...): (line 1730)
        # Processing the call arguments (line 1730)
        int_465652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1730, 22), 'int')
        # Getting the type of 'm' (line 1730)
        m_465653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1730, 25), 'm', False)
        # Processing the call keyword arguments (line 1730)
        kwargs_465654 = {}
        # Getting the type of 'xrange' (line 1730)
        xrange_465651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1730, 15), 'xrange', False)
        # Calling xrange(args, kwargs) (line 1730)
        xrange_call_result_465655 = invoke(stypy.reporting.localization.Localization(__file__, 1730, 15), xrange_465651, *[int_465652, m_465653], **kwargs_465654)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1730, 15), tuple_465650, xrange_call_result_465655)
        # Adding element type (line 1730)
        
        # Call to xrange(...): (line 1730)
        # Processing the call arguments (line 1730)
        int_465657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1730, 36), 'int')
        # Getting the type of 'm' (line 1730)
        m_465658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1730, 39), 'm', False)
        # Processing the call keyword arguments (line 1730)
        kwargs_465659 = {}
        # Getting the type of 'xrange' (line 1730)
        xrange_465656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1730, 29), 'xrange', False)
        # Calling xrange(args, kwargs) (line 1730)
        xrange_call_result_465660 = invoke(stypy.reporting.localization.Localization(__file__, 1730, 29), xrange_465656, *[int_465657, m_465658], **kwargs_465659)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1730, 15), tuple_465650, xrange_call_result_465660)
        
        # Storing an element on a container (line 1730)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1730, 12), dm_465649, (tuple_465650, float_465648))
        
        # Assigning a Call to a Name (line 1731):
        
        # Assigning a Call to a Name (line 1731):
        
        # Call to squareform(...): (line 1731)
        # Processing the call arguments (line 1731)
        # Getting the type of 'dm' (line 1731)
        dm_465662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 28), 'dm', False)
        # Processing the call keyword arguments (line 1731)
        kwargs_465663 = {}
        # Getting the type of 'squareform' (line 1731)
        squareform_465661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 17), 'squareform', False)
        # Calling squareform(args, kwargs) (line 1731)
        squareform_call_result_465664 = invoke(stypy.reporting.localization.Localization(__file__, 1731, 17), squareform_465661, *[dm_465662], **kwargs_465663)
        
        # Assigning a type to the variable 'dm' (line 1731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 12), 'dm', squareform_call_result_465664)
        # SSA branch for the else part of an if statement (line 1717)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to startswith(...): (line 1732)
        # Processing the call arguments (line 1732)
        str_465667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1732, 29), 'str', 'test_')
        # Processing the call keyword arguments (line 1732)
        kwargs_465668 = {}
        # Getting the type of 'mstr' (line 1732)
        mstr_465665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 13), 'mstr', False)
        # Obtaining the member 'startswith' of a type (line 1732)
        startswith_465666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1732, 13), mstr_465665, 'startswith')
        # Calling startswith(args, kwargs) (line 1732)
        startswith_call_result_465669 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 13), startswith_465666, *[str_465667], **kwargs_465668)
        
        # Testing the type of an if condition (line 1732)
        if_condition_465670 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1732, 13), startswith_call_result_465669)
        # Assigning a type to the variable 'if_condition_465670' (line 1732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 13), 'if_condition_465670', if_condition_465670)
        # SSA begins for if statement (line 1732)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'mstr' (line 1733)
        mstr_465671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 15), 'mstr')
        # Getting the type of '_TEST_METRICS' (line 1733)
        _TEST_METRICS_465672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 23), '_TEST_METRICS')
        # Applying the binary operator 'in' (line 1733)
        result_contains_465673 = python_operator(stypy.reporting.localization.Localization(__file__, 1733, 15), 'in', mstr_465671, _TEST_METRICS_465672)
        
        # Testing the type of an if condition (line 1733)
        if_condition_465674 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1733, 12), result_contains_465673)
        # Assigning a type to the variable 'if_condition_465674' (line 1733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1733, 12), 'if_condition_465674', if_condition_465674)
        # SSA begins for if statement (line 1733)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1734):
        
        # Assigning a Call to a Name (line 1734):
        
        # Call to pdist(...): (line 1734)
        # Processing the call arguments (line 1734)
        # Getting the type of 'X' (line 1734)
        X_465676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 27), 'X', False)
        
        # Obtaining the type of the subscript
        # Getting the type of 'mstr' (line 1734)
        mstr_465677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 44), 'mstr', False)
        # Getting the type of '_TEST_METRICS' (line 1734)
        _TEST_METRICS_465678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 30), '_TEST_METRICS', False)
        # Obtaining the member '__getitem__' of a type (line 1734)
        getitem___465679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1734, 30), _TEST_METRICS_465678, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1734)
        subscript_call_result_465680 = invoke(stypy.reporting.localization.Localization(__file__, 1734, 30), getitem___465679, mstr_465677)
        
        # Processing the call keyword arguments (line 1734)
        # Getting the type of 'kwargs' (line 1734)
        kwargs_465681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 53), 'kwargs', False)
        kwargs_465682 = {'kwargs_465681': kwargs_465681}
        # Getting the type of 'pdist' (line 1734)
        pdist_465675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 21), 'pdist', False)
        # Calling pdist(args, kwargs) (line 1734)
        pdist_call_result_465683 = invoke(stypy.reporting.localization.Localization(__file__, 1734, 21), pdist_465675, *[X_465676, subscript_call_result_465680], **kwargs_465682)
        
        # Assigning a type to the variable 'dm' (line 1734)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1734, 16), 'dm', pdist_call_result_465683)
        # SSA branch for the else part of an if statement (line 1733)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 1736)
        # Processing the call arguments (line 1736)
        str_465685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1736, 33), 'str', 'Unknown "Test" Distance Metric: %s')
        
        # Obtaining the type of the subscript
        int_465686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1736, 77), 'int')
        slice_465687 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1736, 72), int_465686, None, None)
        # Getting the type of 'mstr' (line 1736)
        mstr_465688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 72), 'mstr', False)
        # Obtaining the member '__getitem__' of a type (line 1736)
        getitem___465689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1736, 72), mstr_465688, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1736)
        subscript_call_result_465690 = invoke(stypy.reporting.localization.Localization(__file__, 1736, 72), getitem___465689, slice_465687)
        
        # Applying the binary operator '%' (line 1736)
        result_mod_465691 = python_operator(stypy.reporting.localization.Localization(__file__, 1736, 33), '%', str_465685, subscript_call_result_465690)
        
        # Processing the call keyword arguments (line 1736)
        kwargs_465692 = {}
        # Getting the type of 'ValueError' (line 1736)
        ValueError_465684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1736)
        ValueError_call_result_465693 = invoke(stypy.reporting.localization.Localization(__file__, 1736, 22), ValueError_465684, *[result_mod_465691], **kwargs_465692)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1736, 16), ValueError_call_result_465693, 'raise parameter', BaseException)
        # SSA join for if statement (line 1733)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1732)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 1738)
        # Processing the call arguments (line 1738)
        str_465695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1738, 29), 'str', 'Unknown Distance Metric: %s')
        # Getting the type of 'mstr' (line 1738)
        mstr_465696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1738, 61), 'mstr', False)
        # Applying the binary operator '%' (line 1738)
        result_mod_465697 = python_operator(stypy.reporting.localization.Localization(__file__, 1738, 29), '%', str_465695, mstr_465696)
        
        # Processing the call keyword arguments (line 1738)
        kwargs_465698 = {}
        # Getting the type of 'ValueError' (line 1738)
        ValueError_465694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1738, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1738)
        ValueError_call_result_465699 = invoke(stypy.reporting.localization.Localization(__file__, 1738, 18), ValueError_465694, *[result_mod_465697], **kwargs_465698)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1738, 12), ValueError_call_result_465699, 'raise parameter', BaseException)
        # SSA join for if statement (line 1732)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1717)
        module_type_store = module_type_store.join_ssa_context()
        

        if (may_be_465536 and more_types_in_union_465537):
            # SSA join for if statement (line 1707)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA branch for the else part of an if statement (line 1693)
    module_type_store.open_ssa_branch('else')
    
    # Call to TypeError(...): (line 1740)
    # Processing the call arguments (line 1740)
    str_465701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1740, 24), 'str', '2nd argument metric must be a string identifier or a function.')
    # Processing the call keyword arguments (line 1740)
    kwargs_465702 = {}
    # Getting the type of 'TypeError' (line 1740)
    TypeError_465700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 14), 'TypeError', False)
    # Calling TypeError(args, kwargs) (line 1740)
    TypeError_call_result_465703 = invoke(stypy.reporting.localization.Localization(__file__, 1740, 14), TypeError_465700, *[str_465701], **kwargs_465702)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1740, 8), TypeError_call_result_465703, 'raise parameter', BaseException)
    # SSA join for if statement (line 1693)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1679)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'dm' (line 1742)
    dm_465704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 11), 'dm')
    # Assigning a type to the variable 'stypy_return_type' (line 1742)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1742, 4), 'stypy_return_type', dm_465704)
    
    # ################# End of 'pdist(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'pdist' in the type store
    # Getting the type of 'stypy_return_type' (line 1383)
    stypy_return_type_465705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1383, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_465705)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'pdist'
    return stypy_return_type_465705

# Assigning a type to the variable 'pdist' (line 1383)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1383, 0), 'pdist', pdist)

@norecursion
def squareform(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_465706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1745, 24), 'str', 'no')
    # Getting the type of 'True' (line 1745)
    True_465707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 37), 'True')
    defaults = [str_465706, True_465707]
    # Create a new context for function 'squareform'
    module_type_store = module_type_store.open_function_context('squareform', 1745, 0, False)
    
    # Passed parameters checking function
    squareform.stypy_localization = localization
    squareform.stypy_type_of_self = None
    squareform.stypy_type_store = module_type_store
    squareform.stypy_function_name = 'squareform'
    squareform.stypy_param_names_list = ['X', 'force', 'checks']
    squareform.stypy_varargs_param_name = None
    squareform.stypy_kwargs_param_name = None
    squareform.stypy_call_defaults = defaults
    squareform.stypy_call_varargs = varargs
    squareform.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'squareform', ['X', 'force', 'checks'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'squareform', localization, ['X', 'force', 'checks'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'squareform(...)' code ##################

    str_465708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1795, (-1)), 'str', "\n    Converts a vector-form distance vector to a square-form distance\n    matrix, and vice-versa.\n\n    Parameters\n    ----------\n    X : ndarray\n        Either a condensed or redundant distance matrix.\n    force : str, optional\n        As with MATLAB(TM), if force is equal to ``'tovector'`` or\n        ``'tomatrix'``, the input will be treated as a distance matrix or\n        distance vector respectively.\n    checks : bool, optional\n        If set to False, no checks will be made for matrix\n        symmetry nor zero diagonals. This is useful if it is known that\n        ``X - X.T1`` is small and ``diag(X)`` is close to zero.\n        These values are ignored any way so they do not disrupt the\n        squareform transformation.\n\n    Returns\n    -------\n    Y : ndarray\n        If a condensed distance matrix is passed, a redundant one is\n        returned, or if a redundant one is passed, a condensed distance\n        matrix is returned.\n\n    Notes\n    -----\n    1. v = squareform(X)\n\n       Given a square d-by-d symmetric distance matrix X,\n       ``v = squareform(X)`` returns a ``d * (d-1) / 2`` (or\n       :math:`{n \\choose 2}`) sized vector v.\n\n      :math:`v[{n \\choose 2}-{n-i \\choose 2} + (j-i-1)]` is the distance\n      between points i and j. If X is non-square or asymmetric, an error\n      is returned.\n\n    2. X = squareform(v)\n\n      Given a ``d*(d-1)/2`` sized v for some integer ``d >= 2`` encoding\n      distances as described, ``X = squareform(v)`` returns a d by d distance\n      matrix X.  The ``X[i, j]`` and ``X[j, i]`` values are set to\n      :math:`v[{n \\choose 2}-{n-i \\choose 2} + (j-i-1)]` and all\n      diagonal elements are zero.\n\n    In Scipy 0.19.0, ``squareform`` stopped casting all input types to\n    float64, and started returning arrays of the same dtype as the input.\n\n    ")
    
    # Assigning a Call to a Name (line 1797):
    
    # Assigning a Call to a Name (line 1797):
    
    # Call to ascontiguousarray(...): (line 1797)
    # Processing the call arguments (line 1797)
    # Getting the type of 'X' (line 1797)
    X_465711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1797, 29), 'X', False)
    # Processing the call keyword arguments (line 1797)
    kwargs_465712 = {}
    # Getting the type of 'np' (line 1797)
    np_465709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1797, 8), 'np', False)
    # Obtaining the member 'ascontiguousarray' of a type (line 1797)
    ascontiguousarray_465710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1797, 8), np_465709, 'ascontiguousarray')
    # Calling ascontiguousarray(args, kwargs) (line 1797)
    ascontiguousarray_call_result_465713 = invoke(stypy.reporting.localization.Localization(__file__, 1797, 8), ascontiguousarray_465710, *[X_465711], **kwargs_465712)
    
    # Assigning a type to the variable 'X' (line 1797)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1797, 4), 'X', ascontiguousarray_call_result_465713)
    
    # Assigning a Attribute to a Name (line 1799):
    
    # Assigning a Attribute to a Name (line 1799):
    # Getting the type of 'X' (line 1799)
    X_465714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 8), 'X')
    # Obtaining the member 'shape' of a type (line 1799)
    shape_465715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1799, 8), X_465714, 'shape')
    # Assigning a type to the variable 's' (line 1799)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1799, 4), 's', shape_465715)
    
    
    
    # Call to lower(...): (line 1801)
    # Processing the call keyword arguments (line 1801)
    kwargs_465718 = {}
    # Getting the type of 'force' (line 1801)
    force_465716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1801, 7), 'force', False)
    # Obtaining the member 'lower' of a type (line 1801)
    lower_465717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1801, 7), force_465716, 'lower')
    # Calling lower(args, kwargs) (line 1801)
    lower_call_result_465719 = invoke(stypy.reporting.localization.Localization(__file__, 1801, 7), lower_465717, *[], **kwargs_465718)
    
    str_465720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1801, 24), 'str', 'tomatrix')
    # Applying the binary operator '==' (line 1801)
    result_eq_465721 = python_operator(stypy.reporting.localization.Localization(__file__, 1801, 7), '==', lower_call_result_465719, str_465720)
    
    # Testing the type of an if condition (line 1801)
    if_condition_465722 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1801, 4), result_eq_465721)
    # Assigning a type to the variable 'if_condition_465722' (line 1801)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1801, 4), 'if_condition_465722', if_condition_465722)
    # SSA begins for if statement (line 1801)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to len(...): (line 1802)
    # Processing the call arguments (line 1802)
    # Getting the type of 's' (line 1802)
    s_465724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 15), 's', False)
    # Processing the call keyword arguments (line 1802)
    kwargs_465725 = {}
    # Getting the type of 'len' (line 1802)
    len_465723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1802, 11), 'len', False)
    # Calling len(args, kwargs) (line 1802)
    len_call_result_465726 = invoke(stypy.reporting.localization.Localization(__file__, 1802, 11), len_465723, *[s_465724], **kwargs_465725)
    
    int_465727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1802, 21), 'int')
    # Applying the binary operator '!=' (line 1802)
    result_ne_465728 = python_operator(stypy.reporting.localization.Localization(__file__, 1802, 11), '!=', len_call_result_465726, int_465727)
    
    # Testing the type of an if condition (line 1802)
    if_condition_465729 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1802, 8), result_ne_465728)
    # Assigning a type to the variable 'if_condition_465729' (line 1802)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1802, 8), 'if_condition_465729', if_condition_465729)
    # SSA begins for if statement (line 1802)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1803)
    # Processing the call arguments (line 1803)
    str_465731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1803, 29), 'str', "Forcing 'tomatrix' but input X is not a distance vector.")
    # Processing the call keyword arguments (line 1803)
    kwargs_465732 = {}
    # Getting the type of 'ValueError' (line 1803)
    ValueError_465730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1803, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1803)
    ValueError_call_result_465733 = invoke(stypy.reporting.localization.Localization(__file__, 1803, 18), ValueError_465730, *[str_465731], **kwargs_465732)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1803, 12), ValueError_call_result_465733, 'raise parameter', BaseException)
    # SSA join for if statement (line 1802)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1801)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Call to lower(...): (line 1805)
    # Processing the call keyword arguments (line 1805)
    kwargs_465736 = {}
    # Getting the type of 'force' (line 1805)
    force_465734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1805, 9), 'force', False)
    # Obtaining the member 'lower' of a type (line 1805)
    lower_465735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1805, 9), force_465734, 'lower')
    # Calling lower(args, kwargs) (line 1805)
    lower_call_result_465737 = invoke(stypy.reporting.localization.Localization(__file__, 1805, 9), lower_465735, *[], **kwargs_465736)
    
    str_465738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1805, 26), 'str', 'tovector')
    # Applying the binary operator '==' (line 1805)
    result_eq_465739 = python_operator(stypy.reporting.localization.Localization(__file__, 1805, 9), '==', lower_call_result_465737, str_465738)
    
    # Testing the type of an if condition (line 1805)
    if_condition_465740 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1805, 9), result_eq_465739)
    # Assigning a type to the variable 'if_condition_465740' (line 1805)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1805, 9), 'if_condition_465740', if_condition_465740)
    # SSA begins for if statement (line 1805)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to len(...): (line 1806)
    # Processing the call arguments (line 1806)
    # Getting the type of 's' (line 1806)
    s_465742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1806, 15), 's', False)
    # Processing the call keyword arguments (line 1806)
    kwargs_465743 = {}
    # Getting the type of 'len' (line 1806)
    len_465741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1806, 11), 'len', False)
    # Calling len(args, kwargs) (line 1806)
    len_call_result_465744 = invoke(stypy.reporting.localization.Localization(__file__, 1806, 11), len_465741, *[s_465742], **kwargs_465743)
    
    int_465745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1806, 21), 'int')
    # Applying the binary operator '!=' (line 1806)
    result_ne_465746 = python_operator(stypy.reporting.localization.Localization(__file__, 1806, 11), '!=', len_call_result_465744, int_465745)
    
    # Testing the type of an if condition (line 1806)
    if_condition_465747 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1806, 8), result_ne_465746)
    # Assigning a type to the variable 'if_condition_465747' (line 1806)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1806, 8), 'if_condition_465747', if_condition_465747)
    # SSA begins for if statement (line 1806)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1807)
    # Processing the call arguments (line 1807)
    str_465749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1807, 29), 'str', "Forcing 'tovector' but input X is not a distance matrix.")
    # Processing the call keyword arguments (line 1807)
    kwargs_465750 = {}
    # Getting the type of 'ValueError' (line 1807)
    ValueError_465748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1807, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1807)
    ValueError_call_result_465751 = invoke(stypy.reporting.localization.Localization(__file__, 1807, 18), ValueError_465748, *[str_465749], **kwargs_465750)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1807, 12), ValueError_call_result_465751, 'raise parameter', BaseException)
    # SSA join for if statement (line 1806)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1805)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1801)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to len(...): (line 1811)
    # Processing the call arguments (line 1811)
    # Getting the type of 's' (line 1811)
    s_465753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1811, 11), 's', False)
    # Processing the call keyword arguments (line 1811)
    kwargs_465754 = {}
    # Getting the type of 'len' (line 1811)
    len_465752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1811, 7), 'len', False)
    # Calling len(args, kwargs) (line 1811)
    len_call_result_465755 = invoke(stypy.reporting.localization.Localization(__file__, 1811, 7), len_465752, *[s_465753], **kwargs_465754)
    
    int_465756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1811, 17), 'int')
    # Applying the binary operator '==' (line 1811)
    result_eq_465757 = python_operator(stypy.reporting.localization.Localization(__file__, 1811, 7), '==', len_call_result_465755, int_465756)
    
    # Testing the type of an if condition (line 1811)
    if_condition_465758 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1811, 4), result_eq_465757)
    # Assigning a type to the variable 'if_condition_465758' (line 1811)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1811, 4), 'if_condition_465758', if_condition_465758)
    # SSA begins for if statement (line 1811)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Obtaining the type of the subscript
    int_465759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1812, 13), 'int')
    # Getting the type of 's' (line 1812)
    s_465760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1812, 11), 's')
    # Obtaining the member '__getitem__' of a type (line 1812)
    getitem___465761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1812, 11), s_465760, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1812)
    subscript_call_result_465762 = invoke(stypy.reporting.localization.Localization(__file__, 1812, 11), getitem___465761, int_465759)
    
    int_465763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1812, 19), 'int')
    # Applying the binary operator '==' (line 1812)
    result_eq_465764 = python_operator(stypy.reporting.localization.Localization(__file__, 1812, 11), '==', subscript_call_result_465762, int_465763)
    
    # Testing the type of an if condition (line 1812)
    if_condition_465765 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1812, 8), result_eq_465764)
    # Assigning a type to the variable 'if_condition_465765' (line 1812)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1812, 8), 'if_condition_465765', if_condition_465765)
    # SSA begins for if statement (line 1812)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to zeros(...): (line 1813)
    # Processing the call arguments (line 1813)
    
    # Obtaining an instance of the builtin type 'tuple' (line 1813)
    tuple_465768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1813, 29), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1813)
    # Adding element type (line 1813)
    int_465769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1813, 29), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1813, 29), tuple_465768, int_465769)
    # Adding element type (line 1813)
    int_465770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1813, 32), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1813, 29), tuple_465768, int_465770)
    
    # Processing the call keyword arguments (line 1813)
    # Getting the type of 'X' (line 1813)
    X_465771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 42), 'X', False)
    # Obtaining the member 'dtype' of a type (line 1813)
    dtype_465772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1813, 42), X_465771, 'dtype')
    keyword_465773 = dtype_465772
    kwargs_465774 = {'dtype': keyword_465773}
    # Getting the type of 'np' (line 1813)
    np_465766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 19), 'np', False)
    # Obtaining the member 'zeros' of a type (line 1813)
    zeros_465767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1813, 19), np_465766, 'zeros')
    # Calling zeros(args, kwargs) (line 1813)
    zeros_call_result_465775 = invoke(stypy.reporting.localization.Localization(__file__, 1813, 19), zeros_465767, *[tuple_465768], **kwargs_465774)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1813)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1813, 12), 'stypy_return_type', zeros_call_result_465775)
    # SSA join for if statement (line 1812)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1818):
    
    # Assigning a Call to a Name (line 1818):
    
    # Call to int(...): (line 1818)
    # Processing the call arguments (line 1818)
    
    # Call to ceil(...): (line 1818)
    # Processing the call arguments (line 1818)
    
    # Call to sqrt(...): (line 1818)
    # Processing the call arguments (line 1818)
    
    # Obtaining the type of the subscript
    int_465781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1818, 34), 'int')
    # Getting the type of 's' (line 1818)
    s_465782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 32), 's', False)
    # Obtaining the member '__getitem__' of a type (line 1818)
    getitem___465783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 32), s_465782, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1818)
    subscript_call_result_465784 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 32), getitem___465783, int_465781)
    
    int_465785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1818, 39), 'int')
    # Applying the binary operator '*' (line 1818)
    result_mul_465786 = python_operator(stypy.reporting.localization.Localization(__file__, 1818, 32), '*', subscript_call_result_465784, int_465785)
    
    # Processing the call keyword arguments (line 1818)
    kwargs_465787 = {}
    # Getting the type of 'np' (line 1818)
    np_465779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 24), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 1818)
    sqrt_465780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 24), np_465779, 'sqrt')
    # Calling sqrt(args, kwargs) (line 1818)
    sqrt_call_result_465788 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 24), sqrt_465780, *[result_mul_465786], **kwargs_465787)
    
    # Processing the call keyword arguments (line 1818)
    kwargs_465789 = {}
    # Getting the type of 'np' (line 1818)
    np_465777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 16), 'np', False)
    # Obtaining the member 'ceil' of a type (line 1818)
    ceil_465778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 16), np_465777, 'ceil')
    # Calling ceil(args, kwargs) (line 1818)
    ceil_call_result_465790 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 16), ceil_465778, *[sqrt_call_result_465788], **kwargs_465789)
    
    # Processing the call keyword arguments (line 1818)
    kwargs_465791 = {}
    # Getting the type of 'int' (line 1818)
    int_465776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 12), 'int', False)
    # Calling int(args, kwargs) (line 1818)
    int_call_result_465792 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 12), int_465776, *[ceil_call_result_465790], **kwargs_465791)
    
    # Assigning a type to the variable 'd' (line 1818)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1818, 8), 'd', int_call_result_465792)
    
    
    # Getting the type of 'd' (line 1821)
    d_465793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1821, 11), 'd')
    # Getting the type of 'd' (line 1821)
    d_465794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1821, 16), 'd')
    int_465795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1821, 20), 'int')
    # Applying the binary operator '-' (line 1821)
    result_sub_465796 = python_operator(stypy.reporting.localization.Localization(__file__, 1821, 16), '-', d_465794, int_465795)
    
    # Applying the binary operator '*' (line 1821)
    result_mul_465797 = python_operator(stypy.reporting.localization.Localization(__file__, 1821, 11), '*', d_465793, result_sub_465796)
    
    
    # Obtaining the type of the subscript
    int_465798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1821, 28), 'int')
    # Getting the type of 's' (line 1821)
    s_465799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1821, 26), 's')
    # Obtaining the member '__getitem__' of a type (line 1821)
    getitem___465800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1821, 26), s_465799, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1821)
    subscript_call_result_465801 = invoke(stypy.reporting.localization.Localization(__file__, 1821, 26), getitem___465800, int_465798)
    
    int_465802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1821, 33), 'int')
    # Applying the binary operator '*' (line 1821)
    result_mul_465803 = python_operator(stypy.reporting.localization.Localization(__file__, 1821, 26), '*', subscript_call_result_465801, int_465802)
    
    # Applying the binary operator '!=' (line 1821)
    result_ne_465804 = python_operator(stypy.reporting.localization.Localization(__file__, 1821, 11), '!=', result_mul_465797, result_mul_465803)
    
    # Testing the type of an if condition (line 1821)
    if_condition_465805 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1821, 8), result_ne_465804)
    # Assigning a type to the variable 'if_condition_465805' (line 1821)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1821, 8), 'if_condition_465805', if_condition_465805)
    # SSA begins for if statement (line 1821)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1822)
    # Processing the call arguments (line 1822)
    str_465807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1822, 29), 'str', 'Incompatible vector size. It must be a binomial coefficient n choose 2 for some integer n >= 2.')
    # Processing the call keyword arguments (line 1822)
    kwargs_465808 = {}
    # Getting the type of 'ValueError' (line 1822)
    ValueError_465806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1822)
    ValueError_call_result_465809 = invoke(stypy.reporting.localization.Localization(__file__, 1822, 18), ValueError_465806, *[str_465807], **kwargs_465808)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1822, 12), ValueError_call_result_465809, 'raise parameter', BaseException)
    # SSA join for if statement (line 1821)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1826):
    
    # Assigning a Call to a Name (line 1826):
    
    # Call to zeros(...): (line 1826)
    # Processing the call arguments (line 1826)
    
    # Obtaining an instance of the builtin type 'tuple' (line 1826)
    tuple_465812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1826, 22), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1826)
    # Adding element type (line 1826)
    # Getting the type of 'd' (line 1826)
    d_465813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 22), 'd', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1826, 22), tuple_465812, d_465813)
    # Adding element type (line 1826)
    # Getting the type of 'd' (line 1826)
    d_465814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 25), 'd', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1826, 22), tuple_465812, d_465814)
    
    # Processing the call keyword arguments (line 1826)
    # Getting the type of 'X' (line 1826)
    X_465815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 35), 'X', False)
    # Obtaining the member 'dtype' of a type (line 1826)
    dtype_465816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1826, 35), X_465815, 'dtype')
    keyword_465817 = dtype_465816
    kwargs_465818 = {'dtype': keyword_465817}
    # Getting the type of 'np' (line 1826)
    np_465810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 12), 'np', False)
    # Obtaining the member 'zeros' of a type (line 1826)
    zeros_465811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1826, 12), np_465810, 'zeros')
    # Calling zeros(args, kwargs) (line 1826)
    zeros_call_result_465819 = invoke(stypy.reporting.localization.Localization(__file__, 1826, 12), zeros_465811, *[tuple_465812], **kwargs_465818)
    
    # Assigning a type to the variable 'M' (line 1826)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1826, 8), 'M', zeros_call_result_465819)
    
    # Assigning a Call to a Name (line 1830):
    
    # Assigning a Call to a Name (line 1830):
    
    # Call to _copy_array_if_base_present(...): (line 1830)
    # Processing the call arguments (line 1830)
    # Getting the type of 'X' (line 1830)
    X_465821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 40), 'X', False)
    # Processing the call keyword arguments (line 1830)
    kwargs_465822 = {}
    # Getting the type of '_copy_array_if_base_present' (line 1830)
    _copy_array_if_base_present_465820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 12), '_copy_array_if_base_present', False)
    # Calling _copy_array_if_base_present(args, kwargs) (line 1830)
    _copy_array_if_base_present_call_result_465823 = invoke(stypy.reporting.localization.Localization(__file__, 1830, 12), _copy_array_if_base_present_465820, *[X_465821], **kwargs_465822)
    
    # Assigning a type to the variable 'X' (line 1830)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1830, 8), 'X', _copy_array_if_base_present_call_result_465823)
    
    # Call to to_squareform_from_vector_wrap(...): (line 1833)
    # Processing the call arguments (line 1833)
    # Getting the type of 'M' (line 1833)
    M_465826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 54), 'M', False)
    # Getting the type of 'X' (line 1833)
    X_465827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 57), 'X', False)
    # Processing the call keyword arguments (line 1833)
    kwargs_465828 = {}
    # Getting the type of '_distance_wrap' (line 1833)
    _distance_wrap_465824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 8), '_distance_wrap', False)
    # Obtaining the member 'to_squareform_from_vector_wrap' of a type (line 1833)
    to_squareform_from_vector_wrap_465825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1833, 8), _distance_wrap_465824, 'to_squareform_from_vector_wrap')
    # Calling to_squareform_from_vector_wrap(args, kwargs) (line 1833)
    to_squareform_from_vector_wrap_call_result_465829 = invoke(stypy.reporting.localization.Localization(__file__, 1833, 8), to_squareform_from_vector_wrap_465825, *[M_465826, X_465827], **kwargs_465828)
    
    # Getting the type of 'M' (line 1836)
    M_465830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1836, 15), 'M')
    # Assigning a type to the variable 'stypy_return_type' (line 1836)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1836, 8), 'stypy_return_type', M_465830)
    # SSA branch for the else part of an if statement (line 1811)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Call to len(...): (line 1837)
    # Processing the call arguments (line 1837)
    # Getting the type of 's' (line 1837)
    s_465832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1837, 13), 's', False)
    # Processing the call keyword arguments (line 1837)
    kwargs_465833 = {}
    # Getting the type of 'len' (line 1837)
    len_465831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1837, 9), 'len', False)
    # Calling len(args, kwargs) (line 1837)
    len_call_result_465834 = invoke(stypy.reporting.localization.Localization(__file__, 1837, 9), len_465831, *[s_465832], **kwargs_465833)
    
    int_465835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1837, 19), 'int')
    # Applying the binary operator '==' (line 1837)
    result_eq_465836 = python_operator(stypy.reporting.localization.Localization(__file__, 1837, 9), '==', len_call_result_465834, int_465835)
    
    # Testing the type of an if condition (line 1837)
    if_condition_465837 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1837, 9), result_eq_465836)
    # Assigning a type to the variable 'if_condition_465837' (line 1837)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1837, 9), 'if_condition_465837', if_condition_465837)
    # SSA begins for if statement (line 1837)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Obtaining the type of the subscript
    int_465838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1838, 13), 'int')
    # Getting the type of 's' (line 1838)
    s_465839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1838, 11), 's')
    # Obtaining the member '__getitem__' of a type (line 1838)
    getitem___465840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1838, 11), s_465839, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1838)
    subscript_call_result_465841 = invoke(stypy.reporting.localization.Localization(__file__, 1838, 11), getitem___465840, int_465838)
    
    
    # Obtaining the type of the subscript
    int_465842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1838, 21), 'int')
    # Getting the type of 's' (line 1838)
    s_465843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1838, 19), 's')
    # Obtaining the member '__getitem__' of a type (line 1838)
    getitem___465844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1838, 19), s_465843, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1838)
    subscript_call_result_465845 = invoke(stypy.reporting.localization.Localization(__file__, 1838, 19), getitem___465844, int_465842)
    
    # Applying the binary operator '!=' (line 1838)
    result_ne_465846 = python_operator(stypy.reporting.localization.Localization(__file__, 1838, 11), '!=', subscript_call_result_465841, subscript_call_result_465845)
    
    # Testing the type of an if condition (line 1838)
    if_condition_465847 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1838, 8), result_ne_465846)
    # Assigning a type to the variable 'if_condition_465847' (line 1838)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1838, 8), 'if_condition_465847', if_condition_465847)
    # SSA begins for if statement (line 1838)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1839)
    # Processing the call arguments (line 1839)
    str_465849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1839, 29), 'str', 'The matrix argument must be square.')
    # Processing the call keyword arguments (line 1839)
    kwargs_465850 = {}
    # Getting the type of 'ValueError' (line 1839)
    ValueError_465848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1839, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1839)
    ValueError_call_result_465851 = invoke(stypy.reporting.localization.Localization(__file__, 1839, 18), ValueError_465848, *[str_465849], **kwargs_465850)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1839, 12), ValueError_call_result_465851, 'raise parameter', BaseException)
    # SSA join for if statement (line 1838)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'checks' (line 1840)
    checks_465852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1840, 11), 'checks')
    # Testing the type of an if condition (line 1840)
    if_condition_465853 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1840, 8), checks_465852)
    # Assigning a type to the variable 'if_condition_465853' (line 1840)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1840, 8), 'if_condition_465853', if_condition_465853)
    # SSA begins for if statement (line 1840)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to is_valid_dm(...): (line 1841)
    # Processing the call arguments (line 1841)
    # Getting the type of 'X' (line 1841)
    X_465855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1841, 24), 'X', False)
    # Processing the call keyword arguments (line 1841)
    # Getting the type of 'True' (line 1841)
    True_465856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1841, 33), 'True', False)
    keyword_465857 = True_465856
    str_465858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1841, 44), 'str', 'X')
    keyword_465859 = str_465858
    kwargs_465860 = {'throw': keyword_465857, 'name': keyword_465859}
    # Getting the type of 'is_valid_dm' (line 1841)
    is_valid_dm_465854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1841, 12), 'is_valid_dm', False)
    # Calling is_valid_dm(args, kwargs) (line 1841)
    is_valid_dm_call_result_465861 = invoke(stypy.reporting.localization.Localization(__file__, 1841, 12), is_valid_dm_465854, *[X_465855], **kwargs_465860)
    
    # SSA join for if statement (line 1840)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 1844):
    
    # Assigning a Subscript to a Name (line 1844):
    
    # Obtaining the type of the subscript
    int_465862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1844, 14), 'int')
    # Getting the type of 's' (line 1844)
    s_465863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1844, 12), 's')
    # Obtaining the member '__getitem__' of a type (line 1844)
    getitem___465864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1844, 12), s_465863, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1844)
    subscript_call_result_465865 = invoke(stypy.reporting.localization.Localization(__file__, 1844, 12), getitem___465864, int_465862)
    
    # Assigning a type to the variable 'd' (line 1844)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1844, 8), 'd', subscript_call_result_465865)
    
    
    # Getting the type of 'd' (line 1846)
    d_465866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1846, 11), 'd')
    int_465867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1846, 16), 'int')
    # Applying the binary operator '<=' (line 1846)
    result_le_465868 = python_operator(stypy.reporting.localization.Localization(__file__, 1846, 11), '<=', d_465866, int_465867)
    
    # Testing the type of an if condition (line 1846)
    if_condition_465869 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1846, 8), result_le_465868)
    # Assigning a type to the variable 'if_condition_465869' (line 1846)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1846, 8), 'if_condition_465869', if_condition_465869)
    # SSA begins for if statement (line 1846)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to array(...): (line 1847)
    # Processing the call arguments (line 1847)
    
    # Obtaining an instance of the builtin type 'list' (line 1847)
    list_465872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1847, 28), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1847)
    
    # Processing the call keyword arguments (line 1847)
    # Getting the type of 'X' (line 1847)
    X_465873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 38), 'X', False)
    # Obtaining the member 'dtype' of a type (line 1847)
    dtype_465874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1847, 38), X_465873, 'dtype')
    keyword_465875 = dtype_465874
    kwargs_465876 = {'dtype': keyword_465875}
    # Getting the type of 'np' (line 1847)
    np_465870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1847, 19), 'np', False)
    # Obtaining the member 'array' of a type (line 1847)
    array_465871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1847, 19), np_465870, 'array')
    # Calling array(args, kwargs) (line 1847)
    array_call_result_465877 = invoke(stypy.reporting.localization.Localization(__file__, 1847, 19), array_465871, *[list_465872], **kwargs_465876)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1847)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1847, 12), 'stypy_return_type', array_call_result_465877)
    # SSA join for if statement (line 1846)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1850):
    
    # Assigning a Call to a Name (line 1850):
    
    # Call to zeros(...): (line 1850)
    # Processing the call arguments (line 1850)
    # Getting the type of 'd' (line 1850)
    d_465880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 22), 'd', False)
    # Getting the type of 'd' (line 1850)
    d_465881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 27), 'd', False)
    int_465882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1850, 31), 'int')
    # Applying the binary operator '-' (line 1850)
    result_sub_465883 = python_operator(stypy.reporting.localization.Localization(__file__, 1850, 27), '-', d_465881, int_465882)
    
    # Applying the binary operator '*' (line 1850)
    result_mul_465884 = python_operator(stypy.reporting.localization.Localization(__file__, 1850, 22), '*', d_465880, result_sub_465883)
    
    int_465885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1850, 38), 'int')
    # Applying the binary operator '//' (line 1850)
    result_floordiv_465886 = python_operator(stypy.reporting.localization.Localization(__file__, 1850, 21), '//', result_mul_465884, int_465885)
    
    # Processing the call keyword arguments (line 1850)
    # Getting the type of 'X' (line 1850)
    X_465887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 47), 'X', False)
    # Obtaining the member 'dtype' of a type (line 1850)
    dtype_465888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1850, 47), X_465887, 'dtype')
    keyword_465889 = dtype_465888
    kwargs_465890 = {'dtype': keyword_465889}
    # Getting the type of 'np' (line 1850)
    np_465878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1850, 12), 'np', False)
    # Obtaining the member 'zeros' of a type (line 1850)
    zeros_465879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1850, 12), np_465878, 'zeros')
    # Calling zeros(args, kwargs) (line 1850)
    zeros_call_result_465891 = invoke(stypy.reporting.localization.Localization(__file__, 1850, 12), zeros_465879, *[result_floordiv_465886], **kwargs_465890)
    
    # Assigning a type to the variable 'v' (line 1850)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1850, 8), 'v', zeros_call_result_465891)
    
    # Assigning a Call to a Name (line 1854):
    
    # Assigning a Call to a Name (line 1854):
    
    # Call to _copy_array_if_base_present(...): (line 1854)
    # Processing the call arguments (line 1854)
    # Getting the type of 'X' (line 1854)
    X_465893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 40), 'X', False)
    # Processing the call keyword arguments (line 1854)
    kwargs_465894 = {}
    # Getting the type of '_copy_array_if_base_present' (line 1854)
    _copy_array_if_base_present_465892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1854, 12), '_copy_array_if_base_present', False)
    # Calling _copy_array_if_base_present(args, kwargs) (line 1854)
    _copy_array_if_base_present_call_result_465895 = invoke(stypy.reporting.localization.Localization(__file__, 1854, 12), _copy_array_if_base_present_465892, *[X_465893], **kwargs_465894)
    
    # Assigning a type to the variable 'X' (line 1854)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1854, 8), 'X', _copy_array_if_base_present_call_result_465895)
    
    # Call to to_vector_from_squareform_wrap(...): (line 1857)
    # Processing the call arguments (line 1857)
    # Getting the type of 'X' (line 1857)
    X_465898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 54), 'X', False)
    # Getting the type of 'v' (line 1857)
    v_465899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 57), 'v', False)
    # Processing the call keyword arguments (line 1857)
    kwargs_465900 = {}
    # Getting the type of '_distance_wrap' (line 1857)
    _distance_wrap_465896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1857, 8), '_distance_wrap', False)
    # Obtaining the member 'to_vector_from_squareform_wrap' of a type (line 1857)
    to_vector_from_squareform_wrap_465897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1857, 8), _distance_wrap_465896, 'to_vector_from_squareform_wrap')
    # Calling to_vector_from_squareform_wrap(args, kwargs) (line 1857)
    to_vector_from_squareform_wrap_call_result_465901 = invoke(stypy.reporting.localization.Localization(__file__, 1857, 8), to_vector_from_squareform_wrap_465897, *[X_465898, v_465899], **kwargs_465900)
    
    # Getting the type of 'v' (line 1858)
    v_465902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 15), 'v')
    # Assigning a type to the variable 'stypy_return_type' (line 1858)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1858, 8), 'stypy_return_type', v_465902)
    # SSA branch for the else part of an if statement (line 1837)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 1860)
    # Processing the call arguments (line 1860)
    str_465904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1860, 26), 'str', 'The first argument must be one or two dimensional array. A %d-dimensional array is not permitted')
    
    # Call to len(...): (line 1862)
    # Processing the call arguments (line 1862)
    # Getting the type of 's' (line 1862)
    s_465906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 45), 's', False)
    # Processing the call keyword arguments (line 1862)
    kwargs_465907 = {}
    # Getting the type of 'len' (line 1862)
    len_465905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 41), 'len', False)
    # Calling len(args, kwargs) (line 1862)
    len_call_result_465908 = invoke(stypy.reporting.localization.Localization(__file__, 1862, 41), len_465905, *[s_465906], **kwargs_465907)
    
    # Applying the binary operator '%' (line 1860)
    result_mod_465909 = python_operator(stypy.reporting.localization.Localization(__file__, 1860, 25), '%', str_465904, len_call_result_465908)
    
    # Processing the call keyword arguments (line 1860)
    kwargs_465910 = {}
    # Getting the type of 'ValueError' (line 1860)
    ValueError_465903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1860, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1860)
    ValueError_call_result_465911 = invoke(stypy.reporting.localization.Localization(__file__, 1860, 14), ValueError_465903, *[result_mod_465909], **kwargs_465910)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1860, 8), ValueError_call_result_465911, 'raise parameter', BaseException)
    # SSA join for if statement (line 1837)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1811)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'squareform(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'squareform' in the type store
    # Getting the type of 'stypy_return_type' (line 1745)
    stypy_return_type_465912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_465912)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'squareform'
    return stypy_return_type_465912

# Assigning a type to the variable 'squareform' (line 1745)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1745, 0), 'squareform', squareform)

@norecursion
def is_valid_dm(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    float_465913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1865, 23), 'float')
    # Getting the type of 'False' (line 1865)
    False_465914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 34), 'False')
    str_465915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1865, 46), 'str', 'D')
    # Getting the type of 'False' (line 1865)
    False_465916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 59), 'False')
    defaults = [float_465913, False_465914, str_465915, False_465916]
    # Create a new context for function 'is_valid_dm'
    module_type_store = module_type_store.open_function_context('is_valid_dm', 1865, 0, False)
    
    # Passed parameters checking function
    is_valid_dm.stypy_localization = localization
    is_valid_dm.stypy_type_of_self = None
    is_valid_dm.stypy_type_store = module_type_store
    is_valid_dm.stypy_function_name = 'is_valid_dm'
    is_valid_dm.stypy_param_names_list = ['D', 'tol', 'throw', 'name', 'warning']
    is_valid_dm.stypy_varargs_param_name = None
    is_valid_dm.stypy_kwargs_param_name = None
    is_valid_dm.stypy_call_defaults = defaults
    is_valid_dm.stypy_call_varargs = varargs
    is_valid_dm.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'is_valid_dm', ['D', 'tol', 'throw', 'name', 'warning'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'is_valid_dm', localization, ['D', 'tol', 'throw', 'name', 'warning'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'is_valid_dm(...)' code ##################

    str_465917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, (-1)), 'str', '\n    Returns True if input array is a valid distance matrix.\n\n    Distance matrices must be 2-dimensional numpy arrays.\n    They must have a zero-diagonal, and they must be symmetric.\n\n    Parameters\n    ----------\n    D : ndarray\n        The candidate object to test for validity.\n    tol : float, optional\n        The distance matrix should be symmetric. `tol` is the maximum\n        difference between entries ``ij`` and ``ji`` for the distance\n        metric to be considered symmetric.\n    throw : bool, optional\n        An exception is thrown if the distance matrix passed is not valid.\n    name : str, optional\n        The name of the variable to checked. This is useful if\n        throw is set to True so the offending variable can be identified\n        in the exception message when an exception is thrown.\n    warning : bool, optional\n        Instead of throwing an exception, a warning message is\n        raised.\n\n    Returns\n    -------\n    valid : bool\n        True if the variable `D` passed is a valid distance matrix.\n\n    Notes\n    -----\n    Small numerical differences in `D` and `D.T` and non-zeroness of\n    the diagonal are ignored if they are within the tolerance specified\n    by `tol`.\n\n    ')
    
    # Assigning a Call to a Name (line 1902):
    
    # Assigning a Call to a Name (line 1902):
    
    # Call to asarray(...): (line 1902)
    # Processing the call arguments (line 1902)
    # Getting the type of 'D' (line 1902)
    D_465920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 19), 'D', False)
    # Processing the call keyword arguments (line 1902)
    str_465921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1902, 28), 'str', 'c')
    keyword_465922 = str_465921
    kwargs_465923 = {'order': keyword_465922}
    # Getting the type of 'np' (line 1902)
    np_465918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 8), 'np', False)
    # Obtaining the member 'asarray' of a type (line 1902)
    asarray_465919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1902, 8), np_465918, 'asarray')
    # Calling asarray(args, kwargs) (line 1902)
    asarray_call_result_465924 = invoke(stypy.reporting.localization.Localization(__file__, 1902, 8), asarray_465919, *[D_465920], **kwargs_465923)
    
    # Assigning a type to the variable 'D' (line 1902)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1902, 4), 'D', asarray_call_result_465924)
    
    # Assigning a Name to a Name (line 1903):
    
    # Assigning a Name to a Name (line 1903):
    # Getting the type of 'True' (line 1903)
    True_465925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1903, 12), 'True')
    # Assigning a type to the variable 'valid' (line 1903)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1903, 4), 'valid', True_465925)
    
    
    # SSA begins for try-except statement (line 1904)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Attribute to a Name (line 1905):
    
    # Assigning a Attribute to a Name (line 1905):
    # Getting the type of 'D' (line 1905)
    D_465926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1905, 12), 'D')
    # Obtaining the member 'shape' of a type (line 1905)
    shape_465927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1905, 12), D_465926, 'shape')
    # Assigning a type to the variable 's' (line 1905)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1905, 8), 's', shape_465927)
    
    
    
    # Call to len(...): (line 1906)
    # Processing the call arguments (line 1906)
    # Getting the type of 'D' (line 1906)
    D_465929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1906, 15), 'D', False)
    # Obtaining the member 'shape' of a type (line 1906)
    shape_465930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1906, 15), D_465929, 'shape')
    # Processing the call keyword arguments (line 1906)
    kwargs_465931 = {}
    # Getting the type of 'len' (line 1906)
    len_465928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1906, 11), 'len', False)
    # Calling len(args, kwargs) (line 1906)
    len_call_result_465932 = invoke(stypy.reporting.localization.Localization(__file__, 1906, 11), len_465928, *[shape_465930], **kwargs_465931)
    
    int_465933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1906, 27), 'int')
    # Applying the binary operator '!=' (line 1906)
    result_ne_465934 = python_operator(stypy.reporting.localization.Localization(__file__, 1906, 11), '!=', len_call_result_465932, int_465933)
    
    # Testing the type of an if condition (line 1906)
    if_condition_465935 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1906, 8), result_ne_465934)
    # Assigning a type to the variable 'if_condition_465935' (line 1906)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1906, 8), 'if_condition_465935', if_condition_465935)
    # SSA begins for if statement (line 1906)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'name' (line 1907)
    name_465936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1907, 15), 'name')
    # Testing the type of an if condition (line 1907)
    if_condition_465937 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1907, 12), name_465936)
    # Assigning a type to the variable 'if_condition_465937' (line 1907)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1907, 12), 'if_condition_465937', if_condition_465937)
    # SSA begins for if statement (line 1907)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1908)
    # Processing the call arguments (line 1908)
    str_465939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1908, 34), 'str', "Distance matrix '%s' must have shape=2 (i.e. be two-dimensional).")
    # Getting the type of 'name' (line 1909)
    name_465940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1909, 66), 'name', False)
    # Applying the binary operator '%' (line 1908)
    result_mod_465941 = python_operator(stypy.reporting.localization.Localization(__file__, 1908, 33), '%', str_465939, name_465940)
    
    # Processing the call keyword arguments (line 1908)
    kwargs_465942 = {}
    # Getting the type of 'ValueError' (line 1908)
    ValueError_465938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1908, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1908)
    ValueError_call_result_465943 = invoke(stypy.reporting.localization.Localization(__file__, 1908, 22), ValueError_465938, *[result_mod_465941], **kwargs_465942)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1908, 16), ValueError_call_result_465943, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 1907)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 1911)
    # Processing the call arguments (line 1911)
    str_465945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1911, 33), 'str', 'Distance matrix must have shape=2 (i.e. be two-dimensional).')
    # Processing the call keyword arguments (line 1911)
    kwargs_465946 = {}
    # Getting the type of 'ValueError' (line 1911)
    ValueError_465944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1911)
    ValueError_call_result_465947 = invoke(stypy.reporting.localization.Localization(__file__, 1911, 22), ValueError_465944, *[str_465945], **kwargs_465946)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1911, 16), ValueError_call_result_465947, 'raise parameter', BaseException)
    # SSA join for if statement (line 1907)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1906)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'tol' (line 1913)
    tol_465948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 11), 'tol')
    float_465949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1913, 18), 'float')
    # Applying the binary operator '==' (line 1913)
    result_eq_465950 = python_operator(stypy.reporting.localization.Localization(__file__, 1913, 11), '==', tol_465948, float_465949)
    
    # Testing the type of an if condition (line 1913)
    if_condition_465951 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1913, 8), result_eq_465950)
    # Assigning a type to the variable 'if_condition_465951' (line 1913)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1913, 8), 'if_condition_465951', if_condition_465951)
    # SSA begins for if statement (line 1913)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    
    # Call to all(...): (line 1914)
    # Processing the call keyword arguments (line 1914)
    kwargs_465957 = {}
    
    # Getting the type of 'D' (line 1914)
    D_465952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 20), 'D', False)
    # Getting the type of 'D' (line 1914)
    D_465953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1914, 25), 'D', False)
    # Obtaining the member 'T' of a type (line 1914)
    T_465954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1914, 25), D_465953, 'T')
    # Applying the binary operator '==' (line 1914)
    result_eq_465955 = python_operator(stypy.reporting.localization.Localization(__file__, 1914, 20), '==', D_465952, T_465954)
    
    # Obtaining the member 'all' of a type (line 1914)
    all_465956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1914, 20), result_eq_465955, 'all')
    # Calling all(args, kwargs) (line 1914)
    all_call_result_465958 = invoke(stypy.reporting.localization.Localization(__file__, 1914, 20), all_465956, *[], **kwargs_465957)
    
    # Applying the 'not' unary operator (line 1914)
    result_not__465959 = python_operator(stypy.reporting.localization.Localization(__file__, 1914, 15), 'not', all_call_result_465958)
    
    # Testing the type of an if condition (line 1914)
    if_condition_465960 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1914, 12), result_not__465959)
    # Assigning a type to the variable 'if_condition_465960' (line 1914)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1914, 12), 'if_condition_465960', if_condition_465960)
    # SSA begins for if statement (line 1914)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'name' (line 1915)
    name_465961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 19), 'name')
    # Testing the type of an if condition (line 1915)
    if_condition_465962 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1915, 16), name_465961)
    # Assigning a type to the variable 'if_condition_465962' (line 1915)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1915, 16), 'if_condition_465962', if_condition_465962)
    # SSA begins for if statement (line 1915)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1916)
    # Processing the call arguments (line 1916)
    str_465964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1916, 38), 'str', "Distance matrix '%s' must be symmetric.")
    # Getting the type of 'name' (line 1917)
    name_465965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 53), 'name', False)
    # Applying the binary operator '%' (line 1916)
    result_mod_465966 = python_operator(stypy.reporting.localization.Localization(__file__, 1916, 37), '%', str_465964, name_465965)
    
    # Processing the call keyword arguments (line 1916)
    kwargs_465967 = {}
    # Getting the type of 'ValueError' (line 1916)
    ValueError_465963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1916, 26), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1916)
    ValueError_call_result_465968 = invoke(stypy.reporting.localization.Localization(__file__, 1916, 26), ValueError_465963, *[result_mod_465966], **kwargs_465967)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1916, 20), ValueError_call_result_465968, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 1915)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 1919)
    # Processing the call arguments (line 1919)
    str_465970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1919, 37), 'str', 'Distance matrix must be symmetric.')
    # Processing the call keyword arguments (line 1919)
    kwargs_465971 = {}
    # Getting the type of 'ValueError' (line 1919)
    ValueError_465969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 26), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1919)
    ValueError_call_result_465972 = invoke(stypy.reporting.localization.Localization(__file__, 1919, 26), ValueError_465969, *[str_465970], **kwargs_465971)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1919, 20), ValueError_call_result_465972, 'raise parameter', BaseException)
    # SSA join for if statement (line 1915)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1914)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to all(...): (line 1920)
    # Processing the call keyword arguments (line 1920)
    kwargs_465996 = {}
    
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 1920)
    tuple_465973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1920, 22), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1920)
    # Adding element type (line 1920)
    
    # Call to xrange(...): (line 1920)
    # Processing the call arguments (line 1920)
    int_465975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1920, 29), 'int')
    
    # Obtaining the type of the subscript
    int_465976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1920, 34), 'int')
    # Getting the type of 's' (line 1920)
    s_465977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 32), 's', False)
    # Obtaining the member '__getitem__' of a type (line 1920)
    getitem___465978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1920, 32), s_465977, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1920)
    subscript_call_result_465979 = invoke(stypy.reporting.localization.Localization(__file__, 1920, 32), getitem___465978, int_465976)
    
    # Processing the call keyword arguments (line 1920)
    kwargs_465980 = {}
    # Getting the type of 'xrange' (line 1920)
    xrange_465974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 22), 'xrange', False)
    # Calling xrange(args, kwargs) (line 1920)
    xrange_call_result_465981 = invoke(stypy.reporting.localization.Localization(__file__, 1920, 22), xrange_465974, *[int_465975, subscript_call_result_465979], **kwargs_465980)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1920, 22), tuple_465973, xrange_call_result_465981)
    # Adding element type (line 1920)
    
    # Call to xrange(...): (line 1920)
    # Processing the call arguments (line 1920)
    int_465983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1920, 46), 'int')
    
    # Obtaining the type of the subscript
    int_465984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1920, 51), 'int')
    # Getting the type of 's' (line 1920)
    s_465985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 49), 's', False)
    # Obtaining the member '__getitem__' of a type (line 1920)
    getitem___465986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1920, 49), s_465985, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1920)
    subscript_call_result_465987 = invoke(stypy.reporting.localization.Localization(__file__, 1920, 49), getitem___465986, int_465984)
    
    # Processing the call keyword arguments (line 1920)
    kwargs_465988 = {}
    # Getting the type of 'xrange' (line 1920)
    xrange_465982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 39), 'xrange', False)
    # Calling xrange(args, kwargs) (line 1920)
    xrange_call_result_465989 = invoke(stypy.reporting.localization.Localization(__file__, 1920, 39), xrange_465982, *[int_465983, subscript_call_result_465987], **kwargs_465988)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1920, 22), tuple_465973, xrange_call_result_465989)
    
    # Getting the type of 'D' (line 1920)
    D_465990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 20), 'D', False)
    # Obtaining the member '__getitem__' of a type (line 1920)
    getitem___465991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1920, 20), D_465990, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1920)
    subscript_call_result_465992 = invoke(stypy.reporting.localization.Localization(__file__, 1920, 20), getitem___465991, tuple_465973)
    
    int_465993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1920, 59), 'int')
    # Applying the binary operator '==' (line 1920)
    result_eq_465994 = python_operator(stypy.reporting.localization.Localization(__file__, 1920, 20), '==', subscript_call_result_465992, int_465993)
    
    # Obtaining the member 'all' of a type (line 1920)
    all_465995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1920, 20), result_eq_465994, 'all')
    # Calling all(args, kwargs) (line 1920)
    all_call_result_465997 = invoke(stypy.reporting.localization.Localization(__file__, 1920, 20), all_465995, *[], **kwargs_465996)
    
    # Applying the 'not' unary operator (line 1920)
    result_not__465998 = python_operator(stypy.reporting.localization.Localization(__file__, 1920, 15), 'not', all_call_result_465997)
    
    # Testing the type of an if condition (line 1920)
    if_condition_465999 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1920, 12), result_not__465998)
    # Assigning a type to the variable 'if_condition_465999' (line 1920)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1920, 12), 'if_condition_465999', if_condition_465999)
    # SSA begins for if statement (line 1920)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'name' (line 1921)
    name_466000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 19), 'name')
    # Testing the type of an if condition (line 1921)
    if_condition_466001 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1921, 16), name_466000)
    # Assigning a type to the variable 'if_condition_466001' (line 1921)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1921, 16), 'if_condition_466001', if_condition_466001)
    # SSA begins for if statement (line 1921)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1922)
    # Processing the call arguments (line 1922)
    str_466003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1922, 38), 'str', "Distance matrix '%s' diagonal must be zero.")
    # Getting the type of 'name' (line 1923)
    name_466004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1923, 52), 'name', False)
    # Applying the binary operator '%' (line 1922)
    result_mod_466005 = python_operator(stypy.reporting.localization.Localization(__file__, 1922, 37), '%', str_466003, name_466004)
    
    # Processing the call keyword arguments (line 1922)
    kwargs_466006 = {}
    # Getting the type of 'ValueError' (line 1922)
    ValueError_466002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1922, 26), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1922)
    ValueError_call_result_466007 = invoke(stypy.reporting.localization.Localization(__file__, 1922, 26), ValueError_466002, *[result_mod_466005], **kwargs_466006)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1922, 20), ValueError_call_result_466007, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 1921)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 1925)
    # Processing the call arguments (line 1925)
    str_466009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1925, 37), 'str', 'Distance matrix diagonal must be zero.')
    # Processing the call keyword arguments (line 1925)
    kwargs_466010 = {}
    # Getting the type of 'ValueError' (line 1925)
    ValueError_466008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1925, 26), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1925)
    ValueError_call_result_466011 = invoke(stypy.reporting.localization.Localization(__file__, 1925, 26), ValueError_466008, *[str_466009], **kwargs_466010)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1925, 20), ValueError_call_result_466011, 'raise parameter', BaseException)
    # SSA join for if statement (line 1921)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1920)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1913)
    module_type_store.open_ssa_branch('else')
    
    
    
    # Call to all(...): (line 1927)
    # Processing the call keyword arguments (line 1927)
    kwargs_466019 = {}
    
    # Getting the type of 'D' (line 1927)
    D_466012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1927, 20), 'D', False)
    # Getting the type of 'D' (line 1927)
    D_466013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1927, 24), 'D', False)
    # Obtaining the member 'T' of a type (line 1927)
    T_466014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1927, 24), D_466013, 'T')
    # Applying the binary operator '-' (line 1927)
    result_sub_466015 = python_operator(stypy.reporting.localization.Localization(__file__, 1927, 20), '-', D_466012, T_466014)
    
    # Getting the type of 'tol' (line 1927)
    tol_466016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1927, 31), 'tol', False)
    # Applying the binary operator '<=' (line 1927)
    result_le_466017 = python_operator(stypy.reporting.localization.Localization(__file__, 1927, 20), '<=', result_sub_466015, tol_466016)
    
    # Obtaining the member 'all' of a type (line 1927)
    all_466018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1927, 20), result_le_466017, 'all')
    # Calling all(args, kwargs) (line 1927)
    all_call_result_466020 = invoke(stypy.reporting.localization.Localization(__file__, 1927, 20), all_466018, *[], **kwargs_466019)
    
    # Applying the 'not' unary operator (line 1927)
    result_not__466021 = python_operator(stypy.reporting.localization.Localization(__file__, 1927, 15), 'not', all_call_result_466020)
    
    # Testing the type of an if condition (line 1927)
    if_condition_466022 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1927, 12), result_not__466021)
    # Assigning a type to the variable 'if_condition_466022' (line 1927)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1927, 12), 'if_condition_466022', if_condition_466022)
    # SSA begins for if statement (line 1927)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'name' (line 1928)
    name_466023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1928, 19), 'name')
    # Testing the type of an if condition (line 1928)
    if_condition_466024 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1928, 16), name_466023)
    # Assigning a type to the variable 'if_condition_466024' (line 1928)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1928, 16), 'if_condition_466024', if_condition_466024)
    # SSA begins for if statement (line 1928)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1929)
    # Processing the call arguments (line 1929)
    str_466026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1929, 38), 'str', "Distance matrix '%s' must be symmetric within tolerance %5.5f.")
    
    # Obtaining an instance of the builtin type 'tuple' (line 1931)
    tuple_466027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1931, 40), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1931)
    # Adding element type (line 1931)
    # Getting the type of 'name' (line 1931)
    name_466028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1931, 40), 'name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1931, 40), tuple_466027, name_466028)
    # Adding element type (line 1931)
    # Getting the type of 'tol' (line 1931)
    tol_466029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1931, 46), 'tol', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1931, 40), tuple_466027, tol_466029)
    
    # Applying the binary operator '%' (line 1929)
    result_mod_466030 = python_operator(stypy.reporting.localization.Localization(__file__, 1929, 37), '%', str_466026, tuple_466027)
    
    # Processing the call keyword arguments (line 1929)
    kwargs_466031 = {}
    # Getting the type of 'ValueError' (line 1929)
    ValueError_466025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1929, 26), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1929)
    ValueError_call_result_466032 = invoke(stypy.reporting.localization.Localization(__file__, 1929, 26), ValueError_466025, *[result_mod_466030], **kwargs_466031)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1929, 20), ValueError_call_result_466032, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 1928)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 1933)
    # Processing the call arguments (line 1933)
    str_466034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1933, 37), 'str', 'Distance matrix must be symmetric within tolerance %5.5f.')
    # Getting the type of 'tol' (line 1934)
    tol_466035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1934, 59), 'tol', False)
    # Applying the binary operator '%' (line 1933)
    result_mod_466036 = python_operator(stypy.reporting.localization.Localization(__file__, 1933, 37), '%', str_466034, tol_466035)
    
    # Processing the call keyword arguments (line 1933)
    kwargs_466037 = {}
    # Getting the type of 'ValueError' (line 1933)
    ValueError_466033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1933, 26), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1933)
    ValueError_call_result_466038 = invoke(stypy.reporting.localization.Localization(__file__, 1933, 26), ValueError_466033, *[result_mod_466036], **kwargs_466037)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1933, 20), ValueError_call_result_466038, 'raise parameter', BaseException)
    # SSA join for if statement (line 1928)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1927)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to all(...): (line 1935)
    # Processing the call keyword arguments (line 1935)
    kwargs_466062 = {}
    
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 1935)
    tuple_466039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1935, 22), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1935)
    # Adding element type (line 1935)
    
    # Call to xrange(...): (line 1935)
    # Processing the call arguments (line 1935)
    int_466041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1935, 29), 'int')
    
    # Obtaining the type of the subscript
    int_466042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1935, 34), 'int')
    # Getting the type of 's' (line 1935)
    s_466043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1935, 32), 's', False)
    # Obtaining the member '__getitem__' of a type (line 1935)
    getitem___466044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1935, 32), s_466043, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1935)
    subscript_call_result_466045 = invoke(stypy.reporting.localization.Localization(__file__, 1935, 32), getitem___466044, int_466042)
    
    # Processing the call keyword arguments (line 1935)
    kwargs_466046 = {}
    # Getting the type of 'xrange' (line 1935)
    xrange_466040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1935, 22), 'xrange', False)
    # Calling xrange(args, kwargs) (line 1935)
    xrange_call_result_466047 = invoke(stypy.reporting.localization.Localization(__file__, 1935, 22), xrange_466040, *[int_466041, subscript_call_result_466045], **kwargs_466046)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1935, 22), tuple_466039, xrange_call_result_466047)
    # Adding element type (line 1935)
    
    # Call to xrange(...): (line 1935)
    # Processing the call arguments (line 1935)
    int_466049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1935, 46), 'int')
    
    # Obtaining the type of the subscript
    int_466050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1935, 51), 'int')
    # Getting the type of 's' (line 1935)
    s_466051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1935, 49), 's', False)
    # Obtaining the member '__getitem__' of a type (line 1935)
    getitem___466052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1935, 49), s_466051, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1935)
    subscript_call_result_466053 = invoke(stypy.reporting.localization.Localization(__file__, 1935, 49), getitem___466052, int_466050)
    
    # Processing the call keyword arguments (line 1935)
    kwargs_466054 = {}
    # Getting the type of 'xrange' (line 1935)
    xrange_466048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1935, 39), 'xrange', False)
    # Calling xrange(args, kwargs) (line 1935)
    xrange_call_result_466055 = invoke(stypy.reporting.localization.Localization(__file__, 1935, 39), xrange_466048, *[int_466049, subscript_call_result_466053], **kwargs_466054)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1935, 22), tuple_466039, xrange_call_result_466055)
    
    # Getting the type of 'D' (line 1935)
    D_466056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1935, 20), 'D', False)
    # Obtaining the member '__getitem__' of a type (line 1935)
    getitem___466057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1935, 20), D_466056, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1935)
    subscript_call_result_466058 = invoke(stypy.reporting.localization.Localization(__file__, 1935, 20), getitem___466057, tuple_466039)
    
    # Getting the type of 'tol' (line 1935)
    tol_466059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1935, 59), 'tol', False)
    # Applying the binary operator '<=' (line 1935)
    result_le_466060 = python_operator(stypy.reporting.localization.Localization(__file__, 1935, 20), '<=', subscript_call_result_466058, tol_466059)
    
    # Obtaining the member 'all' of a type (line 1935)
    all_466061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1935, 20), result_le_466060, 'all')
    # Calling all(args, kwargs) (line 1935)
    all_call_result_466063 = invoke(stypy.reporting.localization.Localization(__file__, 1935, 20), all_466061, *[], **kwargs_466062)
    
    # Applying the 'not' unary operator (line 1935)
    result_not__466064 = python_operator(stypy.reporting.localization.Localization(__file__, 1935, 15), 'not', all_call_result_466063)
    
    # Testing the type of an if condition (line 1935)
    if_condition_466065 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1935, 12), result_not__466064)
    # Assigning a type to the variable 'if_condition_466065' (line 1935)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1935, 12), 'if_condition_466065', if_condition_466065)
    # SSA begins for if statement (line 1935)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'name' (line 1936)
    name_466066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1936, 19), 'name')
    # Testing the type of an if condition (line 1936)
    if_condition_466067 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1936, 16), name_466066)
    # Assigning a type to the variable 'if_condition_466067' (line 1936)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1936, 16), 'if_condition_466067', if_condition_466067)
    # SSA begins for if statement (line 1936)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1937)
    # Processing the call arguments (line 1937)
    str_466069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1937, 38), 'str', "Distance matrix '%s' diagonal must be close to zero within tolerance %5.5f.")
    
    # Obtaining an instance of the builtin type 'tuple' (line 1939)
    tuple_466070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1939, 40), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1939)
    # Adding element type (line 1939)
    # Getting the type of 'name' (line 1939)
    name_466071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1939, 40), 'name', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1939, 40), tuple_466070, name_466071)
    # Adding element type (line 1939)
    # Getting the type of 'tol' (line 1939)
    tol_466072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1939, 46), 'tol', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1939, 40), tuple_466070, tol_466072)
    
    # Applying the binary operator '%' (line 1937)
    result_mod_466073 = python_operator(stypy.reporting.localization.Localization(__file__, 1937, 37), '%', str_466069, tuple_466070)
    
    # Processing the call keyword arguments (line 1937)
    kwargs_466074 = {}
    # Getting the type of 'ValueError' (line 1937)
    ValueError_466068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1937, 26), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1937)
    ValueError_call_result_466075 = invoke(stypy.reporting.localization.Localization(__file__, 1937, 26), ValueError_466068, *[result_mod_466073], **kwargs_466074)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1937, 20), ValueError_call_result_466075, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 1936)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 1941)
    # Processing the call arguments (line 1941)
    str_466077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1941, 38), 'str', "Distance matrix '%s' diagonal must be close to zero within tolerance %5.5f.")
    # Getting the type of 'tol' (line 1943)
    tol_466078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1943, 39), 'tol', False)
    # Applying the binary operator '%' (line 1941)
    result_mod_466079 = python_operator(stypy.reporting.localization.Localization(__file__, 1941, 37), '%', str_466077, tol_466078)
    
    # Processing the call keyword arguments (line 1941)
    kwargs_466080 = {}
    # Getting the type of 'ValueError' (line 1941)
    ValueError_466076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1941, 26), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1941)
    ValueError_call_result_466081 = invoke(stypy.reporting.localization.Localization(__file__, 1941, 26), ValueError_466076, *[result_mod_466079], **kwargs_466080)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1941, 20), ValueError_call_result_466081, 'raise parameter', BaseException)
    # SSA join for if statement (line 1936)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1935)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1913)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the except part of a try statement (line 1904)
    # SSA branch for the except 'Exception' branch of a try statement (line 1904)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'Exception' (line 1944)
    Exception_466082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1944, 11), 'Exception')
    # Assigning a type to the variable 'e' (line 1944)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1944, 4), 'e', Exception_466082)
    
    # Getting the type of 'throw' (line 1945)
    throw_466083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 11), 'throw')
    # Testing the type of an if condition (line 1945)
    if_condition_466084 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1945, 8), throw_466083)
    # Assigning a type to the variable 'if_condition_466084' (line 1945)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 8), 'if_condition_466084', if_condition_466084)
    # SSA begins for if statement (line 1945)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 1945)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'warning' (line 1947)
    warning_466085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1947, 11), 'warning')
    # Testing the type of an if condition (line 1947)
    if_condition_466086 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1947, 8), warning_466085)
    # Assigning a type to the variable 'if_condition_466086' (line 1947)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1947, 8), 'if_condition_466086', if_condition_466086)
    # SSA begins for if statement (line 1947)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to warn(...): (line 1948)
    # Processing the call arguments (line 1948)
    
    # Call to str(...): (line 1948)
    # Processing the call arguments (line 1948)
    # Getting the type of 'e' (line 1948)
    e_466090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 30), 'e', False)
    # Processing the call keyword arguments (line 1948)
    kwargs_466091 = {}
    # Getting the type of 'str' (line 1948)
    str_466089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 26), 'str', False)
    # Calling str(args, kwargs) (line 1948)
    str_call_result_466092 = invoke(stypy.reporting.localization.Localization(__file__, 1948, 26), str_466089, *[e_466090], **kwargs_466091)
    
    # Processing the call keyword arguments (line 1948)
    kwargs_466093 = {}
    # Getting the type of 'warnings' (line 1948)
    warnings_466087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 12), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 1948)
    warn_466088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1948, 12), warnings_466087, 'warn')
    # Calling warn(args, kwargs) (line 1948)
    warn_call_result_466094 = invoke(stypy.reporting.localization.Localization(__file__, 1948, 12), warn_466088, *[str_call_result_466092], **kwargs_466093)
    
    # SSA join for if statement (line 1947)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 1949):
    
    # Assigning a Name to a Name (line 1949):
    # Getting the type of 'False' (line 1949)
    False_466095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1949, 16), 'False')
    # Assigning a type to the variable 'valid' (line 1949)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1949, 8), 'valid', False_466095)
    # SSA join for try-except statement (line 1904)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'valid' (line 1950)
    valid_466096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 11), 'valid')
    # Assigning a type to the variable 'stypy_return_type' (line 1950)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1950, 4), 'stypy_return_type', valid_466096)
    
    # ################# End of 'is_valid_dm(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'is_valid_dm' in the type store
    # Getting the type of 'stypy_return_type' (line 1865)
    stypy_return_type_466097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_466097)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'is_valid_dm'
    return stypy_return_type_466097

# Assigning a type to the variable 'is_valid_dm' (line 1865)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1865, 0), 'is_valid_dm', is_valid_dm)

@norecursion
def is_valid_y(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'False' (line 1953)
    False_466098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 26), 'False')
    # Getting the type of 'False' (line 1953)
    False_466099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 39), 'False')
    # Getting the type of 'None' (line 1953)
    None_466100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 51), 'None')
    defaults = [False_466098, False_466099, None_466100]
    # Create a new context for function 'is_valid_y'
    module_type_store = module_type_store.open_function_context('is_valid_y', 1953, 0, False)
    
    # Passed parameters checking function
    is_valid_y.stypy_localization = localization
    is_valid_y.stypy_type_of_self = None
    is_valid_y.stypy_type_store = module_type_store
    is_valid_y.stypy_function_name = 'is_valid_y'
    is_valid_y.stypy_param_names_list = ['y', 'warning', 'throw', 'name']
    is_valid_y.stypy_varargs_param_name = None
    is_valid_y.stypy_kwargs_param_name = None
    is_valid_y.stypy_call_defaults = defaults
    is_valid_y.stypy_call_varargs = varargs
    is_valid_y.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'is_valid_y', ['y', 'warning', 'throw', 'name'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'is_valid_y', localization, ['y', 'warning', 'throw', 'name'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'is_valid_y(...)' code ##################

    str_466101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1977, (-1)), 'str', '\n    Returns True if the input array is a valid condensed distance matrix.\n\n    Condensed distance matrices must be 1-dimensional numpy arrays.\n    Their length must be a binomial coefficient :math:`{n \\choose 2}`\n    for some positive integer n.\n\n    Parameters\n    ----------\n    y : ndarray\n        The condensed distance matrix.\n    warning : bool, optional\n        Invokes a warning if the variable passed is not a valid\n        condensed distance matrix. The warning message explains why\n        the distance matrix is not valid.  `name` is used when\n        referencing the offending variable.\n    throw : bool, optional\n        Throws an exception if the variable passed is not a valid\n        condensed distance matrix.\n    name : bool, optional\n        Used when referencing the offending variable in the\n        warning or exception message.\n\n    ')
    
    # Assigning a Call to a Name (line 1978):
    
    # Assigning a Call to a Name (line 1978):
    
    # Call to asarray(...): (line 1978)
    # Processing the call arguments (line 1978)
    # Getting the type of 'y' (line 1978)
    y_466104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 19), 'y', False)
    # Processing the call keyword arguments (line 1978)
    str_466105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1978, 28), 'str', 'c')
    keyword_466106 = str_466105
    kwargs_466107 = {'order': keyword_466106}
    # Getting the type of 'np' (line 1978)
    np_466102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'np', False)
    # Obtaining the member 'asarray' of a type (line 1978)
    asarray_466103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1978, 8), np_466102, 'asarray')
    # Calling asarray(args, kwargs) (line 1978)
    asarray_call_result_466108 = invoke(stypy.reporting.localization.Localization(__file__, 1978, 8), asarray_466103, *[y_466104], **kwargs_466107)
    
    # Assigning a type to the variable 'y' (line 1978)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 4), 'y', asarray_call_result_466108)
    
    # Assigning a Name to a Name (line 1979):
    
    # Assigning a Name to a Name (line 1979):
    # Getting the type of 'True' (line 1979)
    True_466109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1979, 12), 'True')
    # Assigning a type to the variable 'valid' (line 1979)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1979, 4), 'valid', True_466109)
    
    
    # SSA begins for try-except statement (line 1980)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    
    
    # Call to len(...): (line 1981)
    # Processing the call arguments (line 1981)
    # Getting the type of 'y' (line 1981)
    y_466111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 15), 'y', False)
    # Obtaining the member 'shape' of a type (line 1981)
    shape_466112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1981, 15), y_466111, 'shape')
    # Processing the call keyword arguments (line 1981)
    kwargs_466113 = {}
    # Getting the type of 'len' (line 1981)
    len_466110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1981, 11), 'len', False)
    # Calling len(args, kwargs) (line 1981)
    len_call_result_466114 = invoke(stypy.reporting.localization.Localization(__file__, 1981, 11), len_466110, *[shape_466112], **kwargs_466113)
    
    int_466115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1981, 27), 'int')
    # Applying the binary operator '!=' (line 1981)
    result_ne_466116 = python_operator(stypy.reporting.localization.Localization(__file__, 1981, 11), '!=', len_call_result_466114, int_466115)
    
    # Testing the type of an if condition (line 1981)
    if_condition_466117 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1981, 8), result_ne_466116)
    # Assigning a type to the variable 'if_condition_466117' (line 1981)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1981, 8), 'if_condition_466117', if_condition_466117)
    # SSA begins for if statement (line 1981)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'name' (line 1982)
    name_466118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1982, 15), 'name')
    # Testing the type of an if condition (line 1982)
    if_condition_466119 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1982, 12), name_466118)
    # Assigning a type to the variable 'if_condition_466119' (line 1982)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1982, 12), 'if_condition_466119', if_condition_466119)
    # SSA begins for if statement (line 1982)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1983)
    # Processing the call arguments (line 1983)
    str_466121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1983, 34), 'str', "Condensed distance matrix '%s' must have shape=1 (i.e. be one-dimensional).")
    # Getting the type of 'name' (line 1985)
    name_466122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1985, 35), 'name', False)
    # Applying the binary operator '%' (line 1983)
    result_mod_466123 = python_operator(stypy.reporting.localization.Localization(__file__, 1983, 33), '%', str_466121, name_466122)
    
    # Processing the call keyword arguments (line 1983)
    kwargs_466124 = {}
    # Getting the type of 'ValueError' (line 1983)
    ValueError_466120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1983, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1983)
    ValueError_call_result_466125 = invoke(stypy.reporting.localization.Localization(__file__, 1983, 22), ValueError_466120, *[result_mod_466123], **kwargs_466124)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1983, 16), ValueError_call_result_466125, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 1982)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 1987)
    # Processing the call arguments (line 1987)
    str_466127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1987, 33), 'str', 'Condensed distance matrix must have shape=1 (i.e. be one-dimensional).')
    # Processing the call keyword arguments (line 1987)
    kwargs_466128 = {}
    # Getting the type of 'ValueError' (line 1987)
    ValueError_466126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1987, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1987)
    ValueError_call_result_466129 = invoke(stypy.reporting.localization.Localization(__file__, 1987, 22), ValueError_466126, *[str_466127], **kwargs_466128)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1987, 16), ValueError_call_result_466129, 'raise parameter', BaseException)
    # SSA join for if statement (line 1982)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1981)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 1989):
    
    # Assigning a Subscript to a Name (line 1989):
    
    # Obtaining the type of the subscript
    int_466130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1989, 20), 'int')
    # Getting the type of 'y' (line 1989)
    y_466131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1989, 12), 'y')
    # Obtaining the member 'shape' of a type (line 1989)
    shape_466132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1989, 12), y_466131, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1989)
    getitem___466133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1989, 12), shape_466132, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1989)
    subscript_call_result_466134 = invoke(stypy.reporting.localization.Localization(__file__, 1989, 12), getitem___466133, int_466130)
    
    # Assigning a type to the variable 'n' (line 1989)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1989, 8), 'n', subscript_call_result_466134)
    
    # Assigning a Call to a Name (line 1990):
    
    # Assigning a Call to a Name (line 1990):
    
    # Call to int(...): (line 1990)
    # Processing the call arguments (line 1990)
    
    # Call to ceil(...): (line 1990)
    # Processing the call arguments (line 1990)
    
    # Call to sqrt(...): (line 1990)
    # Processing the call arguments (line 1990)
    # Getting the type of 'n' (line 1990)
    n_466140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1990, 32), 'n', False)
    int_466141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1990, 36), 'int')
    # Applying the binary operator '*' (line 1990)
    result_mul_466142 = python_operator(stypy.reporting.localization.Localization(__file__, 1990, 32), '*', n_466140, int_466141)
    
    # Processing the call keyword arguments (line 1990)
    kwargs_466143 = {}
    # Getting the type of 'np' (line 1990)
    np_466138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1990, 24), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 1990)
    sqrt_466139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1990, 24), np_466138, 'sqrt')
    # Calling sqrt(args, kwargs) (line 1990)
    sqrt_call_result_466144 = invoke(stypy.reporting.localization.Localization(__file__, 1990, 24), sqrt_466139, *[result_mul_466142], **kwargs_466143)
    
    # Processing the call keyword arguments (line 1990)
    kwargs_466145 = {}
    # Getting the type of 'np' (line 1990)
    np_466136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1990, 16), 'np', False)
    # Obtaining the member 'ceil' of a type (line 1990)
    ceil_466137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1990, 16), np_466136, 'ceil')
    # Calling ceil(args, kwargs) (line 1990)
    ceil_call_result_466146 = invoke(stypy.reporting.localization.Localization(__file__, 1990, 16), ceil_466137, *[sqrt_call_result_466144], **kwargs_466145)
    
    # Processing the call keyword arguments (line 1990)
    kwargs_466147 = {}
    # Getting the type of 'int' (line 1990)
    int_466135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1990, 12), 'int', False)
    # Calling int(args, kwargs) (line 1990)
    int_call_result_466148 = invoke(stypy.reporting.localization.Localization(__file__, 1990, 12), int_466135, *[ceil_call_result_466146], **kwargs_466147)
    
    # Assigning a type to the variable 'd' (line 1990)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1990, 8), 'd', int_call_result_466148)
    
    
    # Getting the type of 'd' (line 1991)
    d_466149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 12), 'd')
    # Getting the type of 'd' (line 1991)
    d_466150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 17), 'd')
    int_466151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1991, 21), 'int')
    # Applying the binary operator '-' (line 1991)
    result_sub_466152 = python_operator(stypy.reporting.localization.Localization(__file__, 1991, 17), '-', d_466150, int_466151)
    
    # Applying the binary operator '*' (line 1991)
    result_mul_466153 = python_operator(stypy.reporting.localization.Localization(__file__, 1991, 12), '*', d_466149, result_sub_466152)
    
    int_466154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1991, 26), 'int')
    # Applying the binary operator 'div' (line 1991)
    result_div_466155 = python_operator(stypy.reporting.localization.Localization(__file__, 1991, 24), 'div', result_mul_466153, int_466154)
    
    # Getting the type of 'n' (line 1991)
    n_466156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 32), 'n')
    # Applying the binary operator '!=' (line 1991)
    result_ne_466157 = python_operator(stypy.reporting.localization.Localization(__file__, 1991, 11), '!=', result_div_466155, n_466156)
    
    # Testing the type of an if condition (line 1991)
    if_condition_466158 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1991, 8), result_ne_466157)
    # Assigning a type to the variable 'if_condition_466158' (line 1991)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1991, 8), 'if_condition_466158', if_condition_466158)
    # SSA begins for if statement (line 1991)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'name' (line 1992)
    name_466159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 15), 'name')
    # Testing the type of an if condition (line 1992)
    if_condition_466160 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1992, 12), name_466159)
    # Assigning a type to the variable 'if_condition_466160' (line 1992)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1992, 12), 'if_condition_466160', if_condition_466160)
    # SSA begins for if statement (line 1992)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1993)
    # Processing the call arguments (line 1993)
    str_466162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1993, 34), 'str', "Length n of condensed distance matrix '%s' must be a binomial coefficient, i.e.there must be a k such that (k \\choose 2)=n)!")
    # Getting the type of 'name' (line 1996)
    name_466163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1996, 58), 'name', False)
    # Applying the binary operator '%' (line 1993)
    result_mod_466164 = python_operator(stypy.reporting.localization.Localization(__file__, 1993, 33), '%', str_466162, name_466163)
    
    # Processing the call keyword arguments (line 1993)
    kwargs_466165 = {}
    # Getting the type of 'ValueError' (line 1993)
    ValueError_466161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1993, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1993)
    ValueError_call_result_466166 = invoke(stypy.reporting.localization.Localization(__file__, 1993, 22), ValueError_466161, *[result_mod_466164], **kwargs_466165)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1993, 16), ValueError_call_result_466166, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 1992)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 1998)
    # Processing the call arguments (line 1998)
    str_466168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1998, 33), 'str', 'Length n of condensed distance matrix must be a binomial coefficient, i.e. there must be a k such that (k \\choose 2)=n)!')
    # Processing the call keyword arguments (line 1998)
    kwargs_466169 = {}
    # Getting the type of 'ValueError' (line 1998)
    ValueError_466167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1998, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1998)
    ValueError_call_result_466170 = invoke(stypy.reporting.localization.Localization(__file__, 1998, 22), ValueError_466167, *[str_466168], **kwargs_466169)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1998, 16), ValueError_call_result_466170, 'raise parameter', BaseException)
    # SSA join for if statement (line 1992)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1991)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the except part of a try statement (line 1980)
    # SSA branch for the except 'Exception' branch of a try statement (line 1980)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'Exception' (line 2001)
    Exception_466171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 11), 'Exception')
    # Assigning a type to the variable 'e' (line 2001)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2001, 4), 'e', Exception_466171)
    
    # Getting the type of 'throw' (line 2002)
    throw_466172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 11), 'throw')
    # Testing the type of an if condition (line 2002)
    if_condition_466173 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2002, 8), throw_466172)
    # Assigning a type to the variable 'if_condition_466173' (line 2002)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2002, 8), 'if_condition_466173', if_condition_466173)
    # SSA begins for if statement (line 2002)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 2002)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'warning' (line 2004)
    warning_466174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 11), 'warning')
    # Testing the type of an if condition (line 2004)
    if_condition_466175 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2004, 8), warning_466174)
    # Assigning a type to the variable 'if_condition_466175' (line 2004)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2004, 8), 'if_condition_466175', if_condition_466175)
    # SSA begins for if statement (line 2004)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to warn(...): (line 2005)
    # Processing the call arguments (line 2005)
    
    # Call to str(...): (line 2005)
    # Processing the call arguments (line 2005)
    # Getting the type of 'e' (line 2005)
    e_466179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2005, 30), 'e', False)
    # Processing the call keyword arguments (line 2005)
    kwargs_466180 = {}
    # Getting the type of 'str' (line 2005)
    str_466178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2005, 26), 'str', False)
    # Calling str(args, kwargs) (line 2005)
    str_call_result_466181 = invoke(stypy.reporting.localization.Localization(__file__, 2005, 26), str_466178, *[e_466179], **kwargs_466180)
    
    # Processing the call keyword arguments (line 2005)
    kwargs_466182 = {}
    # Getting the type of 'warnings' (line 2005)
    warnings_466176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2005, 12), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 2005)
    warn_466177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2005, 12), warnings_466176, 'warn')
    # Calling warn(args, kwargs) (line 2005)
    warn_call_result_466183 = invoke(stypy.reporting.localization.Localization(__file__, 2005, 12), warn_466177, *[str_call_result_466181], **kwargs_466182)
    
    # SSA join for if statement (line 2004)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 2006):
    
    # Assigning a Name to a Name (line 2006):
    # Getting the type of 'False' (line 2006)
    False_466184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2006, 16), 'False')
    # Assigning a type to the variable 'valid' (line 2006)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2006, 8), 'valid', False_466184)
    # SSA join for try-except statement (line 1980)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'valid' (line 2007)
    valid_466185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 11), 'valid')
    # Assigning a type to the variable 'stypy_return_type' (line 2007)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2007, 4), 'stypy_return_type', valid_466185)
    
    # ################# End of 'is_valid_y(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'is_valid_y' in the type store
    # Getting the type of 'stypy_return_type' (line 1953)
    stypy_return_type_466186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_466186)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'is_valid_y'
    return stypy_return_type_466186

# Assigning a type to the variable 'is_valid_y' (line 1953)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1953, 0), 'is_valid_y', is_valid_y)

@norecursion
def num_obs_dm(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'num_obs_dm'
    module_type_store = module_type_store.open_function_context('num_obs_dm', 2010, 0, False)
    
    # Passed parameters checking function
    num_obs_dm.stypy_localization = localization
    num_obs_dm.stypy_type_of_self = None
    num_obs_dm.stypy_type_store = module_type_store
    num_obs_dm.stypy_function_name = 'num_obs_dm'
    num_obs_dm.stypy_param_names_list = ['d']
    num_obs_dm.stypy_varargs_param_name = None
    num_obs_dm.stypy_kwargs_param_name = None
    num_obs_dm.stypy_call_defaults = defaults
    num_obs_dm.stypy_call_varargs = varargs
    num_obs_dm.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'num_obs_dm', ['d'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'num_obs_dm', localization, ['d'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'num_obs_dm(...)' code ##################

    str_466187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2025, (-1)), 'str', '\n    Returns the number of original observations that correspond to a\n    square, redundant distance matrix.\n\n    Parameters\n    ----------\n    d : ndarray\n        The target distance matrix.\n\n    Returns\n    -------\n    num_obs_dm : int\n        The number of observations in the redundant distance matrix.\n\n    ')
    
    # Assigning a Call to a Name (line 2026):
    
    # Assigning a Call to a Name (line 2026):
    
    # Call to asarray(...): (line 2026)
    # Processing the call arguments (line 2026)
    # Getting the type of 'd' (line 2026)
    d_466190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 19), 'd', False)
    # Processing the call keyword arguments (line 2026)
    str_466191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2026, 28), 'str', 'c')
    keyword_466192 = str_466191
    kwargs_466193 = {'order': keyword_466192}
    # Getting the type of 'np' (line 2026)
    np_466188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 8), 'np', False)
    # Obtaining the member 'asarray' of a type (line 2026)
    asarray_466189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2026, 8), np_466188, 'asarray')
    # Calling asarray(args, kwargs) (line 2026)
    asarray_call_result_466194 = invoke(stypy.reporting.localization.Localization(__file__, 2026, 8), asarray_466189, *[d_466190], **kwargs_466193)
    
    # Assigning a type to the variable 'd' (line 2026)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2026, 4), 'd', asarray_call_result_466194)
    
    # Call to is_valid_dm(...): (line 2027)
    # Processing the call arguments (line 2027)
    # Getting the type of 'd' (line 2027)
    d_466196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 16), 'd', False)
    # Processing the call keyword arguments (line 2027)
    # Getting the type of 'np' (line 2027)
    np_466197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 23), 'np', False)
    # Obtaining the member 'inf' of a type (line 2027)
    inf_466198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2027, 23), np_466197, 'inf')
    keyword_466199 = inf_466198
    # Getting the type of 'True' (line 2027)
    True_466200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 37), 'True', False)
    keyword_466201 = True_466200
    str_466202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2027, 48), 'str', 'd')
    keyword_466203 = str_466202
    kwargs_466204 = {'throw': keyword_466201, 'tol': keyword_466199, 'name': keyword_466203}
    # Getting the type of 'is_valid_dm' (line 2027)
    is_valid_dm_466195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 4), 'is_valid_dm', False)
    # Calling is_valid_dm(args, kwargs) (line 2027)
    is_valid_dm_call_result_466205 = invoke(stypy.reporting.localization.Localization(__file__, 2027, 4), is_valid_dm_466195, *[d_466196], **kwargs_466204)
    
    
    # Obtaining the type of the subscript
    int_466206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2028, 19), 'int')
    # Getting the type of 'd' (line 2028)
    d_466207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2028, 11), 'd')
    # Obtaining the member 'shape' of a type (line 2028)
    shape_466208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2028, 11), d_466207, 'shape')
    # Obtaining the member '__getitem__' of a type (line 2028)
    getitem___466209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2028, 11), shape_466208, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2028)
    subscript_call_result_466210 = invoke(stypy.reporting.localization.Localization(__file__, 2028, 11), getitem___466209, int_466206)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2028)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2028, 4), 'stypy_return_type', subscript_call_result_466210)
    
    # ################# End of 'num_obs_dm(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'num_obs_dm' in the type store
    # Getting the type of 'stypy_return_type' (line 2010)
    stypy_return_type_466211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2010, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_466211)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'num_obs_dm'
    return stypy_return_type_466211

# Assigning a type to the variable 'num_obs_dm' (line 2010)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2010, 0), 'num_obs_dm', num_obs_dm)

@norecursion
def num_obs_y(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'num_obs_y'
    module_type_store = module_type_store.open_function_context('num_obs_y', 2031, 0, False)
    
    # Passed parameters checking function
    num_obs_y.stypy_localization = localization
    num_obs_y.stypy_type_of_self = None
    num_obs_y.stypy_type_store = module_type_store
    num_obs_y.stypy_function_name = 'num_obs_y'
    num_obs_y.stypy_param_names_list = ['Y']
    num_obs_y.stypy_varargs_param_name = None
    num_obs_y.stypy_kwargs_param_name = None
    num_obs_y.stypy_call_defaults = defaults
    num_obs_y.stypy_call_varargs = varargs
    num_obs_y.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'num_obs_y', ['Y'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'num_obs_y', localization, ['Y'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'num_obs_y(...)' code ##################

    str_466212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2046, (-1)), 'str', '\n    Returns the number of original observations that correspond to a\n    condensed distance matrix.\n\n    Parameters\n    ----------\n    Y : ndarray\n        Condensed distance matrix.\n\n    Returns\n    -------\n    n : int\n        The number of observations in the condensed distance matrix `Y`.\n\n    ')
    
    # Assigning a Call to a Name (line 2047):
    
    # Assigning a Call to a Name (line 2047):
    
    # Call to asarray(...): (line 2047)
    # Processing the call arguments (line 2047)
    # Getting the type of 'Y' (line 2047)
    Y_466215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2047, 19), 'Y', False)
    # Processing the call keyword arguments (line 2047)
    str_466216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2047, 28), 'str', 'c')
    keyword_466217 = str_466216
    kwargs_466218 = {'order': keyword_466217}
    # Getting the type of 'np' (line 2047)
    np_466213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2047, 8), 'np', False)
    # Obtaining the member 'asarray' of a type (line 2047)
    asarray_466214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2047, 8), np_466213, 'asarray')
    # Calling asarray(args, kwargs) (line 2047)
    asarray_call_result_466219 = invoke(stypy.reporting.localization.Localization(__file__, 2047, 8), asarray_466214, *[Y_466215], **kwargs_466218)
    
    # Assigning a type to the variable 'Y' (line 2047)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2047, 4), 'Y', asarray_call_result_466219)
    
    # Call to is_valid_y(...): (line 2048)
    # Processing the call arguments (line 2048)
    # Getting the type of 'Y' (line 2048)
    Y_466221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2048, 15), 'Y', False)
    # Processing the call keyword arguments (line 2048)
    # Getting the type of 'True' (line 2048)
    True_466222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2048, 24), 'True', False)
    keyword_466223 = True_466222
    str_466224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2048, 35), 'str', 'Y')
    keyword_466225 = str_466224
    kwargs_466226 = {'throw': keyword_466223, 'name': keyword_466225}
    # Getting the type of 'is_valid_y' (line 2048)
    is_valid_y_466220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2048, 4), 'is_valid_y', False)
    # Calling is_valid_y(args, kwargs) (line 2048)
    is_valid_y_call_result_466227 = invoke(stypy.reporting.localization.Localization(__file__, 2048, 4), is_valid_y_466220, *[Y_466221], **kwargs_466226)
    
    
    # Assigning a Subscript to a Name (line 2049):
    
    # Assigning a Subscript to a Name (line 2049):
    
    # Obtaining the type of the subscript
    int_466228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2049, 16), 'int')
    # Getting the type of 'Y' (line 2049)
    Y_466229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2049, 8), 'Y')
    # Obtaining the member 'shape' of a type (line 2049)
    shape_466230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2049, 8), Y_466229, 'shape')
    # Obtaining the member '__getitem__' of a type (line 2049)
    getitem___466231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2049, 8), shape_466230, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2049)
    subscript_call_result_466232 = invoke(stypy.reporting.localization.Localization(__file__, 2049, 8), getitem___466231, int_466228)
    
    # Assigning a type to the variable 'k' (line 2049)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2049, 4), 'k', subscript_call_result_466232)
    
    
    # Getting the type of 'k' (line 2050)
    k_466233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2050, 7), 'k')
    int_466234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2050, 12), 'int')
    # Applying the binary operator '==' (line 2050)
    result_eq_466235 = python_operator(stypy.reporting.localization.Localization(__file__, 2050, 7), '==', k_466233, int_466234)
    
    # Testing the type of an if condition (line 2050)
    if_condition_466236 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2050, 4), result_eq_466235)
    # Assigning a type to the variable 'if_condition_466236' (line 2050)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2050, 4), 'if_condition_466236', if_condition_466236)
    # SSA begins for if statement (line 2050)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 2051)
    # Processing the call arguments (line 2051)
    str_466238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2051, 25), 'str', 'The number of observations cannot be determined on an empty distance matrix.')
    # Processing the call keyword arguments (line 2051)
    kwargs_466239 = {}
    # Getting the type of 'ValueError' (line 2051)
    ValueError_466237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2051, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 2051)
    ValueError_call_result_466240 = invoke(stypy.reporting.localization.Localization(__file__, 2051, 14), ValueError_466237, *[str_466238], **kwargs_466239)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2051, 8), ValueError_call_result_466240, 'raise parameter', BaseException)
    # SSA join for if statement (line 2050)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2053):
    
    # Assigning a Call to a Name (line 2053):
    
    # Call to int(...): (line 2053)
    # Processing the call arguments (line 2053)
    
    # Call to ceil(...): (line 2053)
    # Processing the call arguments (line 2053)
    
    # Call to sqrt(...): (line 2053)
    # Processing the call arguments (line 2053)
    # Getting the type of 'k' (line 2053)
    k_466246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 28), 'k', False)
    int_466247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2053, 32), 'int')
    # Applying the binary operator '*' (line 2053)
    result_mul_466248 = python_operator(stypy.reporting.localization.Localization(__file__, 2053, 28), '*', k_466246, int_466247)
    
    # Processing the call keyword arguments (line 2053)
    kwargs_466249 = {}
    # Getting the type of 'np' (line 2053)
    np_466244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 20), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 2053)
    sqrt_466245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2053, 20), np_466244, 'sqrt')
    # Calling sqrt(args, kwargs) (line 2053)
    sqrt_call_result_466250 = invoke(stypy.reporting.localization.Localization(__file__, 2053, 20), sqrt_466245, *[result_mul_466248], **kwargs_466249)
    
    # Processing the call keyword arguments (line 2053)
    kwargs_466251 = {}
    # Getting the type of 'np' (line 2053)
    np_466242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 12), 'np', False)
    # Obtaining the member 'ceil' of a type (line 2053)
    ceil_466243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2053, 12), np_466242, 'ceil')
    # Calling ceil(args, kwargs) (line 2053)
    ceil_call_result_466252 = invoke(stypy.reporting.localization.Localization(__file__, 2053, 12), ceil_466243, *[sqrt_call_result_466250], **kwargs_466251)
    
    # Processing the call keyword arguments (line 2053)
    kwargs_466253 = {}
    # Getting the type of 'int' (line 2053)
    int_466241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 8), 'int', False)
    # Calling int(args, kwargs) (line 2053)
    int_call_result_466254 = invoke(stypy.reporting.localization.Localization(__file__, 2053, 8), int_466241, *[ceil_call_result_466252], **kwargs_466253)
    
    # Assigning a type to the variable 'd' (line 2053)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2053, 4), 'd', int_call_result_466254)
    
    
    # Getting the type of 'd' (line 2054)
    d_466255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2054, 8), 'd')
    # Getting the type of 'd' (line 2054)
    d_466256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2054, 13), 'd')
    int_466257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2054, 17), 'int')
    # Applying the binary operator '-' (line 2054)
    result_sub_466258 = python_operator(stypy.reporting.localization.Localization(__file__, 2054, 13), '-', d_466256, int_466257)
    
    # Applying the binary operator '*' (line 2054)
    result_mul_466259 = python_operator(stypy.reporting.localization.Localization(__file__, 2054, 8), '*', d_466255, result_sub_466258)
    
    int_466260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2054, 22), 'int')
    # Applying the binary operator 'div' (line 2054)
    result_div_466261 = python_operator(stypy.reporting.localization.Localization(__file__, 2054, 20), 'div', result_mul_466259, int_466260)
    
    # Getting the type of 'k' (line 2054)
    k_466262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2054, 28), 'k')
    # Applying the binary operator '!=' (line 2054)
    result_ne_466263 = python_operator(stypy.reporting.localization.Localization(__file__, 2054, 7), '!=', result_div_466261, k_466262)
    
    # Testing the type of an if condition (line 2054)
    if_condition_466264 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2054, 4), result_ne_466263)
    # Assigning a type to the variable 'if_condition_466264' (line 2054)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2054, 4), 'if_condition_466264', if_condition_466264)
    # SSA begins for if statement (line 2054)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 2055)
    # Processing the call arguments (line 2055)
    str_466266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2055, 25), 'str', 'Invalid condensed distance matrix passed. Must be some k where k=(n choose 2) for some n >= 2.')
    # Processing the call keyword arguments (line 2055)
    kwargs_466267 = {}
    # Getting the type of 'ValueError' (line 2055)
    ValueError_466265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2055, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 2055)
    ValueError_call_result_466268 = invoke(stypy.reporting.localization.Localization(__file__, 2055, 14), ValueError_466265, *[str_466266], **kwargs_466267)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2055, 8), ValueError_call_result_466268, 'raise parameter', BaseException)
    # SSA join for if statement (line 2054)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'd' (line 2057)
    d_466269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2057, 11), 'd')
    # Assigning a type to the variable 'stypy_return_type' (line 2057)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2057, 4), 'stypy_return_type', d_466269)
    
    # ################# End of 'num_obs_y(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'num_obs_y' in the type store
    # Getting the type of 'stypy_return_type' (line 2031)
    stypy_return_type_466270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2031, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_466270)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'num_obs_y'
    return stypy_return_type_466270

# Assigning a type to the variable 'num_obs_y' (line 2031)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2031, 0), 'num_obs_y', num_obs_y)

@norecursion
def cdist(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_466271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2060, 25), 'str', 'euclidean')
    defaults = [str_466271]
    # Create a new context for function 'cdist'
    module_type_store = module_type_store.open_function_context('cdist', 2060, 0, False)
    
    # Passed parameters checking function
    cdist.stypy_localization = localization
    cdist.stypy_type_of_self = None
    cdist.stypy_type_store = module_type_store
    cdist.stypy_function_name = 'cdist'
    cdist.stypy_param_names_list = ['XA', 'XB', 'metric']
    cdist.stypy_varargs_param_name = 'args'
    cdist.stypy_kwargs_param_name = 'kwargs'
    cdist.stypy_call_defaults = defaults
    cdist.stypy_call_varargs = varargs
    cdist.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'cdist', ['XA', 'XB', 'metric'], 'args', 'kwargs', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'cdist', localization, ['XA', 'XB', 'metric'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'cdist(...)' code ##################

    str_466272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2349, (-1)), 'str', "\n    Computes distance between each pair of the two collections of inputs.\n\n    See Notes for common calling conventions.\n\n    Parameters\n    ----------\n    XA : ndarray\n        An :math:`m_A` by :math:`n` array of :math:`m_A`\n        original observations in an :math:`n`-dimensional space.\n        Inputs are converted to float type.\n    XB : ndarray\n        An :math:`m_B` by :math:`n` array of :math:`m_B`\n        original observations in an :math:`n`-dimensional space.\n        Inputs are converted to float type.\n    metric : str or callable, optional\n        The distance metric to use.  If a string, the distance function can be\n        'braycurtis', 'canberra', 'chebyshev', 'cityblock', 'correlation',\n        'cosine', 'dice', 'euclidean', 'hamming', 'jaccard', 'kulsinski',\n        'mahalanobis', 'matching', 'minkowski', 'rogerstanimoto', 'russellrao',\n        'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean',\n        'wminkowski', 'yule'.\n    *args : tuple. Deprecated.\n        Additional arguments should be passed as keyword arguments\n    **kwargs : dict, optional\n        Extra arguments to `metric`: refer to each metric documentation for a\n        list of all possible arguments.\n\n        Some possible arguments:\n\n        p : scalar\n        The p-norm to apply for Minkowski, weighted and unweighted.\n        Default: 2.\n\n        w : ndarray\n        The weight vector for metrics that support weights (e.g., Minkowski).\n\n        V : ndarray\n        The variance vector for standardized Euclidean.\n        Default: var(vstack([XA, XB]), axis=0, ddof=1)\n\n        VI : ndarray\n        The inverse of the covariance matrix for Mahalanobis.\n        Default: inv(cov(vstack([XA, XB].T))).T\n\n        out : ndarray\n        The output array\n        If not None, the distance matrix Y is stored in this array.\n        Note: metric independent, it will become a regular keyword arg in a\n        future scipy version\n\n    Returns\n    -------\n    Y : ndarray\n        A :math:`m_A` by :math:`m_B` distance matrix is returned.\n        For each :math:`i` and :math:`j`, the metric\n        ``dist(u=XA[i], v=XB[j])`` is computed and stored in the\n        :math:`ij` th entry.\n\n    Raises\n    ------\n    ValueError\n        An exception is thrown if `XA` and `XB` do not have\n        the same number of columns.\n\n    Notes\n    -----\n    The following are common calling conventions:\n\n    1. ``Y = cdist(XA, XB, 'euclidean')``\n\n       Computes the distance between :math:`m` points using\n       Euclidean distance (2-norm) as the distance metric between the\n       points. The points are arranged as :math:`m`\n       :math:`n`-dimensional row vectors in the matrix X.\n\n    2. ``Y = cdist(XA, XB, 'minkowski', p=2.)``\n\n       Computes the distances using the Minkowski distance\n       :math:`||u-v||_p` (:math:`p`-norm) where :math:`p \\geq 1`.\n\n    3. ``Y = cdist(XA, XB, 'cityblock')``\n\n       Computes the city block or Manhattan distance between the\n       points.\n\n    4. ``Y = cdist(XA, XB, 'seuclidean', V=None)``\n\n       Computes the standardized Euclidean distance. The standardized\n       Euclidean distance between two n-vectors ``u`` and ``v`` is\n\n       .. math::\n\n          \\sqrt{\\sum {(u_i-v_i)^2 / V[x_i]}}.\n\n       V is the variance vector; V[i] is the variance computed over all\n       the i'th components of the points. If not passed, it is\n       automatically computed.\n\n    5. ``Y = cdist(XA, XB, 'sqeuclidean')``\n\n       Computes the squared Euclidean distance :math:`||u-v||_2^2` between\n       the vectors.\n\n    6. ``Y = cdist(XA, XB, 'cosine')``\n\n       Computes the cosine distance between vectors u and v,\n\n       .. math::\n\n          1 - \\frac{u \\cdot v}\n                   {{||u||}_2 {||v||}_2}\n\n       where :math:`||*||_2` is the 2-norm of its argument ``*``, and\n       :math:`u \\cdot v` is the dot product of :math:`u` and :math:`v`.\n\n    7. ``Y = cdist(XA, XB, 'correlation')``\n\n       Computes the correlation distance between vectors u and v. This is\n\n       .. math::\n\n          1 - \\frac{(u - \\bar{u}) \\cdot (v - \\bar{v})}\n                   {{||(u - \\bar{u})||}_2 {||(v - \\bar{v})||}_2}\n\n       where :math:`\\bar{v}` is the mean of the elements of vector v,\n       and :math:`x \\cdot y` is the dot product of :math:`x` and :math:`y`.\n\n\n    8. ``Y = cdist(XA, XB, 'hamming')``\n\n       Computes the normalized Hamming distance, or the proportion of\n       those vector elements between two n-vectors ``u`` and ``v``\n       which disagree. To save memory, the matrix ``X`` can be of type\n       boolean.\n\n    9. ``Y = cdist(XA, XB, 'jaccard')``\n\n       Computes the Jaccard distance between the points. Given two\n       vectors, ``u`` and ``v``, the Jaccard distance is the\n       proportion of those elements ``u[i]`` and ``v[i]`` that\n       disagree where at least one of them is non-zero.\n\n    10. ``Y = cdist(XA, XB, 'chebyshev')``\n\n       Computes the Chebyshev distance between the points. The\n       Chebyshev distance between two n-vectors ``u`` and ``v`` is the\n       maximum norm-1 distance between their respective elements. More\n       precisely, the distance is given by\n\n       .. math::\n\n          d(u,v) = \\max_i {|u_i-v_i|}.\n\n    11. ``Y = cdist(XA, XB, 'canberra')``\n\n       Computes the Canberra distance between the points. The\n       Canberra distance between two points ``u`` and ``v`` is\n\n       .. math::\n\n         d(u,v) = \\sum_i \\frac{|u_i-v_i|}\n                              {|u_i|+|v_i|}.\n\n    12. ``Y = cdist(XA, XB, 'braycurtis')``\n\n       Computes the Bray-Curtis distance between the points. The\n       Bray-Curtis distance between two points ``u`` and ``v`` is\n\n\n       .. math::\n\n            d(u,v) = \\frac{\\sum_i (|u_i-v_i|)}\n                          {\\sum_i (|u_i+v_i|)}\n\n    13. ``Y = cdist(XA, XB, 'mahalanobis', VI=None)``\n\n       Computes the Mahalanobis distance between the points. The\n       Mahalanobis distance between two points ``u`` and ``v`` is\n       :math:`\\sqrt{(u-v)(1/V)(u-v)^T}` where :math:`(1/V)` (the ``VI``\n       variable) is the inverse covariance. If ``VI`` is not None,\n       ``VI`` will be used as the inverse covariance matrix.\n\n    14. ``Y = cdist(XA, XB, 'yule')``\n\n       Computes the Yule distance between the boolean\n       vectors. (see `yule` function documentation)\n\n    15. ``Y = cdist(XA, XB, 'matching')``\n\n       Synonym for 'hamming'.\n\n    16. ``Y = cdist(XA, XB, 'dice')``\n\n       Computes the Dice distance between the boolean vectors. (see\n       `dice` function documentation)\n\n    17. ``Y = cdist(XA, XB, 'kulsinski')``\n\n       Computes the Kulsinski distance between the boolean\n       vectors. (see `kulsinski` function documentation)\n\n    18. ``Y = cdist(XA, XB, 'rogerstanimoto')``\n\n       Computes the Rogers-Tanimoto distance between the boolean\n       vectors. (see `rogerstanimoto` function documentation)\n\n    19. ``Y = cdist(XA, XB, 'russellrao')``\n\n       Computes the Russell-Rao distance between the boolean\n       vectors. (see `russellrao` function documentation)\n\n    20. ``Y = cdist(XA, XB, 'sokalmichener')``\n\n       Computes the Sokal-Michener distance between the boolean\n       vectors. (see `sokalmichener` function documentation)\n\n    21. ``Y = cdist(XA, XB, 'sokalsneath')``\n\n       Computes the Sokal-Sneath distance between the vectors. (see\n       `sokalsneath` function documentation)\n\n\n    22. ``Y = cdist(XA, XB, 'wminkowski', p=2., w=w)``\n\n       Computes the weighted Minkowski distance between the\n       vectors. (see `wminkowski` function documentation)\n\n    23. ``Y = cdist(XA, XB, f)``\n\n       Computes the distance between all pairs of vectors in X\n       using the user supplied 2-arity function f. For example,\n       Euclidean distance between the vectors could be computed\n       as follows::\n\n         dm = cdist(XA, XB, lambda u, v: np.sqrt(((u-v)**2).sum()))\n\n       Note that you should avoid passing a reference to one of\n       the distance functions defined in this library. For example,::\n\n         dm = cdist(XA, XB, sokalsneath)\n\n       would calculate the pair-wise distances between the vectors in\n       X using the Python function `sokalsneath`. This would result in\n       sokalsneath being called :math:`{n \\choose 2}` times, which\n       is inefficient. Instead, the optimized C version is more\n       efficient, and we call it using the following syntax::\n\n         dm = cdist(XA, XB, 'sokalsneath')\n\n    Examples\n    --------\n    Find the Euclidean distances between four 2-D coordinates:\n\n    >>> from scipy.spatial import distance\n    >>> coords = [(35.0456, -85.2672),\n    ...           (35.1174, -89.9711),\n    ...           (35.9728, -83.9422),\n    ...           (36.1667, -86.7833)]\n    >>> distance.cdist(coords, coords, 'euclidean')\n    array([[ 0.    ,  4.7044,  1.6172,  1.8856],\n           [ 4.7044,  0.    ,  6.0893,  3.3561],\n           [ 1.6172,  6.0893,  0.    ,  2.8477],\n           [ 1.8856,  3.3561,  2.8477,  0.    ]])\n\n\n    Find the Manhattan distance from a 3-D point to the corners of the unit\n    cube:\n\n    >>> a = np.array([[0, 0, 0],\n    ...               [0, 0, 1],\n    ...               [0, 1, 0],\n    ...               [0, 1, 1],\n    ...               [1, 0, 0],\n    ...               [1, 0, 1],\n    ...               [1, 1, 0],\n    ...               [1, 1, 1]])\n    >>> b = np.array([[ 0.1,  0.2,  0.4]])\n    >>> distance.cdist(a, b, 'cityblock')\n    array([[ 0.7],\n           [ 0.9],\n           [ 1.3],\n           [ 1.5],\n           [ 1.5],\n           [ 1.7],\n           [ 2.1],\n           [ 2.3]])\n\n    ")
    
    # Assigning a Call to a Name (line 2356):
    
    # Assigning a Call to a Name (line 2356):
    
    # Call to _args_to_kwargs_xdist(...): (line 2356)
    # Processing the call arguments (line 2356)
    # Getting the type of 'args' (line 2356)
    args_466274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2356, 35), 'args', False)
    # Getting the type of 'kwargs' (line 2356)
    kwargs_466275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2356, 41), 'kwargs', False)
    # Getting the type of 'metric' (line 2356)
    metric_466276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2356, 49), 'metric', False)
    str_466277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2356, 57), 'str', 'cdist')
    # Processing the call keyword arguments (line 2356)
    kwargs_466278 = {}
    # Getting the type of '_args_to_kwargs_xdist' (line 2356)
    _args_to_kwargs_xdist_466273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2356, 13), '_args_to_kwargs_xdist', False)
    # Calling _args_to_kwargs_xdist(args, kwargs) (line 2356)
    _args_to_kwargs_xdist_call_result_466279 = invoke(stypy.reporting.localization.Localization(__file__, 2356, 13), _args_to_kwargs_xdist_466273, *[args_466274, kwargs_466275, metric_466276, str_466277], **kwargs_466278)
    
    # Assigning a type to the variable 'kwargs' (line 2356)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2356, 4), 'kwargs', _args_to_kwargs_xdist_call_result_466279)
    
    # Assigning a Call to a Name (line 2358):
    
    # Assigning a Call to a Name (line 2358):
    
    # Call to asarray(...): (line 2358)
    # Processing the call arguments (line 2358)
    # Getting the type of 'XA' (line 2358)
    XA_466282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 20), 'XA', False)
    # Processing the call keyword arguments (line 2358)
    str_466283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2358, 30), 'str', 'c')
    keyword_466284 = str_466283
    kwargs_466285 = {'order': keyword_466284}
    # Getting the type of 'np' (line 2358)
    np_466280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2358, 9), 'np', False)
    # Obtaining the member 'asarray' of a type (line 2358)
    asarray_466281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2358, 9), np_466280, 'asarray')
    # Calling asarray(args, kwargs) (line 2358)
    asarray_call_result_466286 = invoke(stypy.reporting.localization.Localization(__file__, 2358, 9), asarray_466281, *[XA_466282], **kwargs_466285)
    
    # Assigning a type to the variable 'XA' (line 2358)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2358, 4), 'XA', asarray_call_result_466286)
    
    # Assigning a Call to a Name (line 2359):
    
    # Assigning a Call to a Name (line 2359):
    
    # Call to asarray(...): (line 2359)
    # Processing the call arguments (line 2359)
    # Getting the type of 'XB' (line 2359)
    XB_466289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2359, 20), 'XB', False)
    # Processing the call keyword arguments (line 2359)
    str_466290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2359, 30), 'str', 'c')
    keyword_466291 = str_466290
    kwargs_466292 = {'order': keyword_466291}
    # Getting the type of 'np' (line 2359)
    np_466287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2359, 9), 'np', False)
    # Obtaining the member 'asarray' of a type (line 2359)
    asarray_466288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2359, 9), np_466287, 'asarray')
    # Calling asarray(args, kwargs) (line 2359)
    asarray_call_result_466293 = invoke(stypy.reporting.localization.Localization(__file__, 2359, 9), asarray_466288, *[XB_466289], **kwargs_466292)
    
    # Assigning a type to the variable 'XB' (line 2359)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2359, 4), 'XB', asarray_call_result_466293)
    
    # Assigning a Call to a Name (line 2362):
    
    # Assigning a Call to a Name (line 2362):
    
    # Call to _copy_array_if_base_present(...): (line 2362)
    # Processing the call arguments (line 2362)
    # Getting the type of 'XA' (line 2362)
    XA_466295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2362, 37), 'XA', False)
    # Processing the call keyword arguments (line 2362)
    kwargs_466296 = {}
    # Getting the type of '_copy_array_if_base_present' (line 2362)
    _copy_array_if_base_present_466294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2362, 9), '_copy_array_if_base_present', False)
    # Calling _copy_array_if_base_present(args, kwargs) (line 2362)
    _copy_array_if_base_present_call_result_466297 = invoke(stypy.reporting.localization.Localization(__file__, 2362, 9), _copy_array_if_base_present_466294, *[XA_466295], **kwargs_466296)
    
    # Assigning a type to the variable 'XA' (line 2362)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2362, 4), 'XA', _copy_array_if_base_present_call_result_466297)
    
    # Assigning a Call to a Name (line 2363):
    
    # Assigning a Call to a Name (line 2363):
    
    # Call to _copy_array_if_base_present(...): (line 2363)
    # Processing the call arguments (line 2363)
    # Getting the type of 'XB' (line 2363)
    XB_466299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2363, 37), 'XB', False)
    # Processing the call keyword arguments (line 2363)
    kwargs_466300 = {}
    # Getting the type of '_copy_array_if_base_present' (line 2363)
    _copy_array_if_base_present_466298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2363, 9), '_copy_array_if_base_present', False)
    # Calling _copy_array_if_base_present(args, kwargs) (line 2363)
    _copy_array_if_base_present_call_result_466301 = invoke(stypy.reporting.localization.Localization(__file__, 2363, 9), _copy_array_if_base_present_466298, *[XB_466299], **kwargs_466300)
    
    # Assigning a type to the variable 'XB' (line 2363)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2363, 4), 'XB', _copy_array_if_base_present_call_result_466301)
    
    # Assigning a Attribute to a Name (line 2365):
    
    # Assigning a Attribute to a Name (line 2365):
    # Getting the type of 'XA' (line 2365)
    XA_466302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2365, 8), 'XA')
    # Obtaining the member 'shape' of a type (line 2365)
    shape_466303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2365, 8), XA_466302, 'shape')
    # Assigning a type to the variable 's' (line 2365)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2365, 4), 's', shape_466303)
    
    # Assigning a Attribute to a Name (line 2366):
    
    # Assigning a Attribute to a Name (line 2366):
    # Getting the type of 'XB' (line 2366)
    XB_466304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2366, 9), 'XB')
    # Obtaining the member 'shape' of a type (line 2366)
    shape_466305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2366, 9), XB_466304, 'shape')
    # Assigning a type to the variable 'sB' (line 2366)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2366, 4), 'sB', shape_466305)
    
    
    
    # Call to len(...): (line 2368)
    # Processing the call arguments (line 2368)
    # Getting the type of 's' (line 2368)
    s_466307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2368, 11), 's', False)
    # Processing the call keyword arguments (line 2368)
    kwargs_466308 = {}
    # Getting the type of 'len' (line 2368)
    len_466306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2368, 7), 'len', False)
    # Calling len(args, kwargs) (line 2368)
    len_call_result_466309 = invoke(stypy.reporting.localization.Localization(__file__, 2368, 7), len_466306, *[s_466307], **kwargs_466308)
    
    int_466310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2368, 17), 'int')
    # Applying the binary operator '!=' (line 2368)
    result_ne_466311 = python_operator(stypy.reporting.localization.Localization(__file__, 2368, 7), '!=', len_call_result_466309, int_466310)
    
    # Testing the type of an if condition (line 2368)
    if_condition_466312 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2368, 4), result_ne_466311)
    # Assigning a type to the variable 'if_condition_466312' (line 2368)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2368, 4), 'if_condition_466312', if_condition_466312)
    # SSA begins for if statement (line 2368)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 2369)
    # Processing the call arguments (line 2369)
    str_466314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2369, 25), 'str', 'XA must be a 2-dimensional array.')
    # Processing the call keyword arguments (line 2369)
    kwargs_466315 = {}
    # Getting the type of 'ValueError' (line 2369)
    ValueError_466313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2369, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 2369)
    ValueError_call_result_466316 = invoke(stypy.reporting.localization.Localization(__file__, 2369, 14), ValueError_466313, *[str_466314], **kwargs_466315)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2369, 8), ValueError_call_result_466316, 'raise parameter', BaseException)
    # SSA join for if statement (line 2368)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Call to len(...): (line 2370)
    # Processing the call arguments (line 2370)
    # Getting the type of 'sB' (line 2370)
    sB_466318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2370, 11), 'sB', False)
    # Processing the call keyword arguments (line 2370)
    kwargs_466319 = {}
    # Getting the type of 'len' (line 2370)
    len_466317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2370, 7), 'len', False)
    # Calling len(args, kwargs) (line 2370)
    len_call_result_466320 = invoke(stypy.reporting.localization.Localization(__file__, 2370, 7), len_466317, *[sB_466318], **kwargs_466319)
    
    int_466321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2370, 18), 'int')
    # Applying the binary operator '!=' (line 2370)
    result_ne_466322 = python_operator(stypy.reporting.localization.Localization(__file__, 2370, 7), '!=', len_call_result_466320, int_466321)
    
    # Testing the type of an if condition (line 2370)
    if_condition_466323 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2370, 4), result_ne_466322)
    # Assigning a type to the variable 'if_condition_466323' (line 2370)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2370, 4), 'if_condition_466323', if_condition_466323)
    # SSA begins for if statement (line 2370)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 2371)
    # Processing the call arguments (line 2371)
    str_466325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2371, 25), 'str', 'XB must be a 2-dimensional array.')
    # Processing the call keyword arguments (line 2371)
    kwargs_466326 = {}
    # Getting the type of 'ValueError' (line 2371)
    ValueError_466324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2371, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 2371)
    ValueError_call_result_466327 = invoke(stypy.reporting.localization.Localization(__file__, 2371, 14), ValueError_466324, *[str_466325], **kwargs_466326)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2371, 8), ValueError_call_result_466327, 'raise parameter', BaseException)
    # SSA join for if statement (line 2370)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_466328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2372, 9), 'int')
    # Getting the type of 's' (line 2372)
    s_466329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2372, 7), 's')
    # Obtaining the member '__getitem__' of a type (line 2372)
    getitem___466330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2372, 7), s_466329, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2372)
    subscript_call_result_466331 = invoke(stypy.reporting.localization.Localization(__file__, 2372, 7), getitem___466330, int_466328)
    
    
    # Obtaining the type of the subscript
    int_466332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2372, 18), 'int')
    # Getting the type of 'sB' (line 2372)
    sB_466333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2372, 15), 'sB')
    # Obtaining the member '__getitem__' of a type (line 2372)
    getitem___466334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2372, 15), sB_466333, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2372)
    subscript_call_result_466335 = invoke(stypy.reporting.localization.Localization(__file__, 2372, 15), getitem___466334, int_466332)
    
    # Applying the binary operator '!=' (line 2372)
    result_ne_466336 = python_operator(stypy.reporting.localization.Localization(__file__, 2372, 7), '!=', subscript_call_result_466331, subscript_call_result_466335)
    
    # Testing the type of an if condition (line 2372)
    if_condition_466337 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2372, 4), result_ne_466336)
    # Assigning a type to the variable 'if_condition_466337' (line 2372)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2372, 4), 'if_condition_466337', if_condition_466337)
    # SSA begins for if statement (line 2372)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 2373)
    # Processing the call arguments (line 2373)
    str_466339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2373, 25), 'str', 'XA and XB must have the same number of columns (i.e. feature dimension.)')
    # Processing the call keyword arguments (line 2373)
    kwargs_466340 = {}
    # Getting the type of 'ValueError' (line 2373)
    ValueError_466338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2373, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 2373)
    ValueError_call_result_466341 = invoke(stypy.reporting.localization.Localization(__file__, 2373, 14), ValueError_466338, *[str_466339], **kwargs_466340)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2373, 8), ValueError_call_result_466341, 'raise parameter', BaseException)
    # SSA join for if statement (line 2372)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Name (line 2376):
    
    # Assigning a Subscript to a Name (line 2376):
    
    # Obtaining the type of the subscript
    int_466342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2376, 11), 'int')
    # Getting the type of 's' (line 2376)
    s_466343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2376, 9), 's')
    # Obtaining the member '__getitem__' of a type (line 2376)
    getitem___466344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2376, 9), s_466343, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2376)
    subscript_call_result_466345 = invoke(stypy.reporting.localization.Localization(__file__, 2376, 9), getitem___466344, int_466342)
    
    # Assigning a type to the variable 'mA' (line 2376)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2376, 4), 'mA', subscript_call_result_466345)
    
    # Assigning a Subscript to a Name (line 2377):
    
    # Assigning a Subscript to a Name (line 2377):
    
    # Obtaining the type of the subscript
    int_466346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2377, 12), 'int')
    # Getting the type of 'sB' (line 2377)
    sB_466347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2377, 9), 'sB')
    # Obtaining the member '__getitem__' of a type (line 2377)
    getitem___466348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2377, 9), sB_466347, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2377)
    subscript_call_result_466349 = invoke(stypy.reporting.localization.Localization(__file__, 2377, 9), getitem___466348, int_466346)
    
    # Assigning a type to the variable 'mB' (line 2377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2377, 4), 'mB', subscript_call_result_466349)
    
    # Assigning a Subscript to a Name (line 2378):
    
    # Assigning a Subscript to a Name (line 2378):
    
    # Obtaining the type of the subscript
    int_466350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2378, 10), 'int')
    # Getting the type of 's' (line 2378)
    s_466351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2378, 8), 's')
    # Obtaining the member '__getitem__' of a type (line 2378)
    getitem___466352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2378, 8), s_466351, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2378)
    subscript_call_result_466353 = invoke(stypy.reporting.localization.Localization(__file__, 2378, 8), getitem___466352, int_466350)
    
    # Assigning a type to the variable 'n' (line 2378)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2378, 4), 'n', subscript_call_result_466353)
    
    # Assigning a Call to a Name (line 2379):
    
    # Assigning a Call to a Name (line 2379):
    
    # Call to pop(...): (line 2379)
    # Processing the call arguments (line 2379)
    str_466356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2379, 21), 'str', 'out')
    # Getting the type of 'None' (line 2379)
    None_466357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2379, 28), 'None', False)
    # Processing the call keyword arguments (line 2379)
    kwargs_466358 = {}
    # Getting the type of 'kwargs' (line 2379)
    kwargs_466354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2379, 10), 'kwargs', False)
    # Obtaining the member 'pop' of a type (line 2379)
    pop_466355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2379, 10), kwargs_466354, 'pop')
    # Calling pop(args, kwargs) (line 2379)
    pop_call_result_466359 = invoke(stypy.reporting.localization.Localization(__file__, 2379, 10), pop_466355, *[str_466356, None_466357], **kwargs_466358)
    
    # Assigning a type to the variable 'out' (line 2379)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2379, 4), 'out', pop_call_result_466359)
    
    # Type idiom detected: calculating its left and rigth part (line 2380)
    # Getting the type of 'out' (line 2380)
    out_466360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2380, 7), 'out')
    # Getting the type of 'None' (line 2380)
    None_466361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2380, 14), 'None')
    
    (may_be_466362, more_types_in_union_466363) = may_be_none(out_466360, None_466361)

    if may_be_466362:

        if more_types_in_union_466363:
            # Runtime conditional SSA (line 2380)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 2381):
        
        # Assigning a Call to a Name (line 2381):
        
        # Call to empty(...): (line 2381)
        # Processing the call arguments (line 2381)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2381)
        tuple_466366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2381, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2381)
        # Adding element type (line 2381)
        # Getting the type of 'mA' (line 2381)
        mA_466367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 23), 'mA', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2381, 23), tuple_466366, mA_466367)
        # Adding element type (line 2381)
        # Getting the type of 'mB' (line 2381)
        mB_466368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 27), 'mB', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2381, 23), tuple_466366, mB_466368)
        
        # Processing the call keyword arguments (line 2381)
        # Getting the type of 'np' (line 2381)
        np_466369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 38), 'np', False)
        # Obtaining the member 'double' of a type (line 2381)
        double_466370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2381, 38), np_466369, 'double')
        keyword_466371 = double_466370
        kwargs_466372 = {'dtype': keyword_466371}
        # Getting the type of 'np' (line 2381)
        np_466364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2381, 13), 'np', False)
        # Obtaining the member 'empty' of a type (line 2381)
        empty_466365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2381, 13), np_466364, 'empty')
        # Calling empty(args, kwargs) (line 2381)
        empty_call_result_466373 = invoke(stypy.reporting.localization.Localization(__file__, 2381, 13), empty_466365, *[tuple_466366], **kwargs_466372)
        
        # Assigning a type to the variable 'dm' (line 2381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2381, 8), 'dm', empty_call_result_466373)

        if more_types_in_union_466363:
            # Runtime conditional SSA for else branch (line 2380)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_466362) or more_types_in_union_466363):
        
        
        # Getting the type of 'out' (line 2383)
        out_466374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 11), 'out')
        # Obtaining the member 'shape' of a type (line 2383)
        shape_466375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2383, 11), out_466374, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2383)
        tuple_466376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2383, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2383)
        # Adding element type (line 2383)
        # Getting the type of 'mA' (line 2383)
        mA_466377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 25), 'mA')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2383, 25), tuple_466376, mA_466377)
        # Adding element type (line 2383)
        # Getting the type of 'mB' (line 2383)
        mB_466378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 29), 'mB')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2383, 25), tuple_466376, mB_466378)
        
        # Applying the binary operator '!=' (line 2383)
        result_ne_466379 = python_operator(stypy.reporting.localization.Localization(__file__, 2383, 11), '!=', shape_466375, tuple_466376)
        
        # Testing the type of an if condition (line 2383)
        if_condition_466380 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2383, 8), result_ne_466379)
        # Assigning a type to the variable 'if_condition_466380' (line 2383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2383, 8), 'if_condition_466380', if_condition_466380)
        # SSA begins for if statement (line 2383)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 2384)
        # Processing the call arguments (line 2384)
        str_466382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2384, 29), 'str', 'Output array has incorrect shape.')
        # Processing the call keyword arguments (line 2384)
        kwargs_466383 = {}
        # Getting the type of 'ValueError' (line 2384)
        ValueError_466381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2384, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 2384)
        ValueError_call_result_466384 = invoke(stypy.reporting.localization.Localization(__file__, 2384, 18), ValueError_466381, *[str_466382], **kwargs_466383)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2384, 12), ValueError_call_result_466384, 'raise parameter', BaseException)
        # SSA join for if statement (line 2383)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'out' (line 2385)
        out_466385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 15), 'out')
        # Obtaining the member 'flags' of a type (line 2385)
        flags_466386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2385, 15), out_466385, 'flags')
        # Obtaining the member 'c_contiguous' of a type (line 2385)
        c_contiguous_466387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2385, 15), flags_466386, 'c_contiguous')
        # Applying the 'not' unary operator (line 2385)
        result_not__466388 = python_operator(stypy.reporting.localization.Localization(__file__, 2385, 11), 'not', c_contiguous_466387)
        
        # Testing the type of an if condition (line 2385)
        if_condition_466389 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2385, 8), result_not__466388)
        # Assigning a type to the variable 'if_condition_466389' (line 2385)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2385, 8), 'if_condition_466389', if_condition_466389)
        # SSA begins for if statement (line 2385)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 2386)
        # Processing the call arguments (line 2386)
        str_466391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2386, 29), 'str', 'Output array must be C-contiguous.')
        # Processing the call keyword arguments (line 2386)
        kwargs_466392 = {}
        # Getting the type of 'ValueError' (line 2386)
        ValueError_466390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 2386)
        ValueError_call_result_466393 = invoke(stypy.reporting.localization.Localization(__file__, 2386, 18), ValueError_466390, *[str_466391], **kwargs_466392)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2386, 12), ValueError_call_result_466393, 'raise parameter', BaseException)
        # SSA join for if statement (line 2385)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'out' (line 2387)
        out_466394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 11), 'out')
        # Obtaining the member 'dtype' of a type (line 2387)
        dtype_466395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2387, 11), out_466394, 'dtype')
        # Getting the type of 'np' (line 2387)
        np_466396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 24), 'np')
        # Obtaining the member 'double' of a type (line 2387)
        double_466397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2387, 24), np_466396, 'double')
        # Applying the binary operator '!=' (line 2387)
        result_ne_466398 = python_operator(stypy.reporting.localization.Localization(__file__, 2387, 11), '!=', dtype_466395, double_466397)
        
        # Testing the type of an if condition (line 2387)
        if_condition_466399 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2387, 8), result_ne_466398)
        # Assigning a type to the variable 'if_condition_466399' (line 2387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2387, 8), 'if_condition_466399', if_condition_466399)
        # SSA begins for if statement (line 2387)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 2388)
        # Processing the call arguments (line 2388)
        str_466401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2388, 29), 'str', 'Output array must be double type.')
        # Processing the call keyword arguments (line 2388)
        kwargs_466402 = {}
        # Getting the type of 'ValueError' (line 2388)
        ValueError_466400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2388, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 2388)
        ValueError_call_result_466403 = invoke(stypy.reporting.localization.Localization(__file__, 2388, 18), ValueError_466400, *[str_466401], **kwargs_466402)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2388, 12), ValueError_call_result_466403, 'raise parameter', BaseException)
        # SSA join for if statement (line 2387)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Name (line 2389):
        
        # Assigning a Name to a Name (line 2389):
        # Getting the type of 'out' (line 2389)
        out_466404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2389, 13), 'out')
        # Assigning a type to the variable 'dm' (line 2389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2389, 8), 'dm', out_466404)

        if (may_be_466362 and more_types_in_union_466363):
            # SSA join for if statement (line 2380)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'metric' (line 2392)
    metric_466405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2392, 7), 'metric')
    
    # Obtaining the type of the subscript
    str_466406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2392, 26), 'str', 'minkowski')
    # Getting the type of '_METRICS' (line 2392)
    _METRICS_466407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2392, 17), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 2392)
    getitem___466408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2392, 17), _METRICS_466407, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2392)
    subscript_call_result_466409 = invoke(stypy.reporting.localization.Localization(__file__, 2392, 17), getitem___466408, str_466406)
    
    # Obtaining the member 'aka' of a type (line 2392)
    aka_466410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2392, 17), subscript_call_result_466409, 'aka')
    # Applying the binary operator 'in' (line 2392)
    result_contains_466411 = python_operator(stypy.reporting.localization.Localization(__file__, 2392, 7), 'in', metric_466405, aka_466410)
    
    
    # Getting the type of 'metric' (line 2393)
    metric_466412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2393, 7), 'metric')
    
    # Obtaining the type of the subscript
    str_466413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2393, 26), 'str', 'wminkowski')
    # Getting the type of '_METRICS' (line 2393)
    _METRICS_466414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2393, 17), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 2393)
    getitem___466415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2393, 17), _METRICS_466414, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2393)
    subscript_call_result_466416 = invoke(stypy.reporting.localization.Localization(__file__, 2393, 17), getitem___466415, str_466413)
    
    # Obtaining the member 'aka' of a type (line 2393)
    aka_466417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2393, 17), subscript_call_result_466416, 'aka')
    # Applying the binary operator 'in' (line 2393)
    result_contains_466418 = python_operator(stypy.reporting.localization.Localization(__file__, 2393, 7), 'in', metric_466412, aka_466417)
    
    # Applying the binary operator 'or' (line 2392)
    result_or_keyword_466419 = python_operator(stypy.reporting.localization.Localization(__file__, 2392, 7), 'or', result_contains_466411, result_contains_466418)
    
    # Getting the type of 'metric' (line 2394)
    metric_466420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2394, 7), 'metric')
    
    # Obtaining an instance of the builtin type 'list' (line 2394)
    list_466421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2394, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2394)
    # Adding element type (line 2394)
    str_466422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2394, 18), 'str', 'test_minkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2394, 17), list_466421, str_466422)
    # Adding element type (line 2394)
    str_466423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2394, 36), 'str', 'test_wminkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2394, 17), list_466421, str_466423)
    
    # Applying the binary operator 'in' (line 2394)
    result_contains_466424 = python_operator(stypy.reporting.localization.Localization(__file__, 2394, 7), 'in', metric_466420, list_466421)
    
    # Applying the binary operator 'or' (line 2392)
    result_or_keyword_466425 = python_operator(stypy.reporting.localization.Localization(__file__, 2392, 7), 'or', result_or_keyword_466419, result_contains_466424)
    
    # Getting the type of 'metric' (line 2395)
    metric_466426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 7), 'metric')
    
    # Obtaining an instance of the builtin type 'list' (line 2395)
    list_466427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2395, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2395)
    # Adding element type (line 2395)
    # Getting the type of 'minkowski' (line 2395)
    minkowski_466428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 18), 'minkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2395, 17), list_466427, minkowski_466428)
    # Adding element type (line 2395)
    # Getting the type of 'wminkowski' (line 2395)
    wminkowski_466429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 29), 'wminkowski')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2395, 17), list_466427, wminkowski_466429)
    
    # Applying the binary operator 'in' (line 2395)
    result_contains_466430 = python_operator(stypy.reporting.localization.Localization(__file__, 2395, 7), 'in', metric_466426, list_466427)
    
    # Applying the binary operator 'or' (line 2392)
    result_or_keyword_466431 = python_operator(stypy.reporting.localization.Localization(__file__, 2392, 7), 'or', result_or_keyword_466425, result_contains_466430)
    
    # Testing the type of an if condition (line 2392)
    if_condition_466432 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2392, 4), result_or_keyword_466431)
    # Assigning a type to the variable 'if_condition_466432' (line 2392)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2392, 4), 'if_condition_466432', if_condition_466432)
    # SSA begins for if statement (line 2392)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 2396):
    
    # Assigning a List to a Name (line 2396):
    
    # Obtaining an instance of the builtin type 'list' (line 2396)
    list_466433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2396, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2396)
    # Adding element type (line 2396)
    str_466434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2396, 28), 'str', 'V')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2396, 27), list_466433, str_466434)
    # Adding element type (line 2396)
    str_466435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2396, 33), 'str', 'VI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2396, 27), list_466433, str_466435)
    
    # Assigning a type to the variable 'kwargs_blacklist' (line 2396)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2396, 8), 'kwargs_blacklist', list_466433)
    # SSA branch for the else part of an if statement (line 2392)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'metric' (line 2397)
    metric_466436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 9), 'metric')
    
    # Obtaining the type of the subscript
    str_466437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2397, 28), 'str', 'seuclidean')
    # Getting the type of '_METRICS' (line 2397)
    _METRICS_466438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 19), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 2397)
    getitem___466439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2397, 19), _METRICS_466438, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2397)
    subscript_call_result_466440 = invoke(stypy.reporting.localization.Localization(__file__, 2397, 19), getitem___466439, str_466437)
    
    # Obtaining the member 'aka' of a type (line 2397)
    aka_466441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2397, 19), subscript_call_result_466440, 'aka')
    # Applying the binary operator 'in' (line 2397)
    result_contains_466442 = python_operator(stypy.reporting.localization.Localization(__file__, 2397, 9), 'in', metric_466436, aka_466441)
    
    
    # Getting the type of 'metric' (line 2398)
    metric_466443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 9), 'metric')
    str_466444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2398, 19), 'str', 'test_seuclidean')
    # Applying the binary operator '==' (line 2398)
    result_eq_466445 = python_operator(stypy.reporting.localization.Localization(__file__, 2398, 9), '==', metric_466443, str_466444)
    
    # Applying the binary operator 'or' (line 2397)
    result_or_keyword_466446 = python_operator(stypy.reporting.localization.Localization(__file__, 2397, 9), 'or', result_contains_466442, result_eq_466445)
    
    # Getting the type of 'metric' (line 2398)
    metric_466447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 40), 'metric')
    # Getting the type of 'seuclidean' (line 2398)
    seuclidean_466448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 50), 'seuclidean')
    # Applying the binary operator '==' (line 2398)
    result_eq_466449 = python_operator(stypy.reporting.localization.Localization(__file__, 2398, 40), '==', metric_466447, seuclidean_466448)
    
    # Applying the binary operator 'or' (line 2397)
    result_or_keyword_466450 = python_operator(stypy.reporting.localization.Localization(__file__, 2397, 9), 'or', result_or_keyword_466446, result_eq_466449)
    
    # Testing the type of an if condition (line 2397)
    if_condition_466451 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2397, 8), result_or_keyword_466450)
    # Assigning a type to the variable 'if_condition_466451' (line 2397)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2397, 8), 'if_condition_466451', if_condition_466451)
    # SSA begins for if statement (line 2397)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 2399):
    
    # Assigning a List to a Name (line 2399):
    
    # Obtaining an instance of the builtin type 'list' (line 2399)
    list_466452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2399, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2399)
    # Adding element type (line 2399)
    str_466453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2399, 28), 'str', 'p')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2399, 27), list_466452, str_466453)
    # Adding element type (line 2399)
    str_466454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2399, 33), 'str', 'w')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2399, 27), list_466452, str_466454)
    # Adding element type (line 2399)
    str_466455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2399, 38), 'str', 'VI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2399, 27), list_466452, str_466455)
    
    # Assigning a type to the variable 'kwargs_blacklist' (line 2399)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2399, 8), 'kwargs_blacklist', list_466452)
    # SSA branch for the else part of an if statement (line 2397)
    module_type_store.open_ssa_branch('else')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'metric' (line 2400)
    metric_466456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2400, 9), 'metric')
    
    # Obtaining the type of the subscript
    str_466457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2400, 28), 'str', 'mahalanobis')
    # Getting the type of '_METRICS' (line 2400)
    _METRICS_466458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2400, 19), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 2400)
    getitem___466459 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2400, 19), _METRICS_466458, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2400)
    subscript_call_result_466460 = invoke(stypy.reporting.localization.Localization(__file__, 2400, 19), getitem___466459, str_466457)
    
    # Obtaining the member 'aka' of a type (line 2400)
    aka_466461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2400, 19), subscript_call_result_466460, 'aka')
    # Applying the binary operator 'in' (line 2400)
    result_contains_466462 = python_operator(stypy.reporting.localization.Localization(__file__, 2400, 9), 'in', metric_466456, aka_466461)
    
    
    # Getting the type of 'metric' (line 2401)
    metric_466463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2401, 9), 'metric')
    str_466464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2401, 19), 'str', 'test_mahalanobis')
    # Applying the binary operator '==' (line 2401)
    result_eq_466465 = python_operator(stypy.reporting.localization.Localization(__file__, 2401, 9), '==', metric_466463, str_466464)
    
    # Applying the binary operator 'or' (line 2400)
    result_or_keyword_466466 = python_operator(stypy.reporting.localization.Localization(__file__, 2400, 9), 'or', result_contains_466462, result_eq_466465)
    
    # Getting the type of 'metric' (line 2401)
    metric_466467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2401, 41), 'metric')
    # Getting the type of 'mahalanobis' (line 2401)
    mahalanobis_466468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2401, 51), 'mahalanobis')
    # Applying the binary operator '==' (line 2401)
    result_eq_466469 = python_operator(stypy.reporting.localization.Localization(__file__, 2401, 41), '==', metric_466467, mahalanobis_466468)
    
    # Applying the binary operator 'or' (line 2400)
    result_or_keyword_466470 = python_operator(stypy.reporting.localization.Localization(__file__, 2400, 9), 'or', result_or_keyword_466466, result_eq_466469)
    
    # Testing the type of an if condition (line 2400)
    if_condition_466471 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2400, 8), result_or_keyword_466470)
    # Assigning a type to the variable 'if_condition_466471' (line 2400)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2400, 8), 'if_condition_466471', if_condition_466471)
    # SSA begins for if statement (line 2400)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a List to a Name (line 2402):
    
    # Assigning a List to a Name (line 2402):
    
    # Obtaining an instance of the builtin type 'list' (line 2402)
    list_466472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2402, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2402)
    # Adding element type (line 2402)
    str_466473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2402, 28), 'str', 'p')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2402, 27), list_466472, str_466473)
    # Adding element type (line 2402)
    str_466474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2402, 33), 'str', 'w')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2402, 27), list_466472, str_466474)
    # Adding element type (line 2402)
    str_466475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2402, 38), 'str', 'V')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2402, 27), list_466472, str_466475)
    
    # Assigning a type to the variable 'kwargs_blacklist' (line 2402)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2402, 8), 'kwargs_blacklist', list_466472)
    # SSA branch for the else part of an if statement (line 2400)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a List to a Name (line 2404):
    
    # Assigning a List to a Name (line 2404):
    
    # Obtaining an instance of the builtin type 'list' (line 2404)
    list_466476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2404, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 2404)
    # Adding element type (line 2404)
    str_466477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2404, 28), 'str', 'p')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2404, 27), list_466476, str_466477)
    # Adding element type (line 2404)
    str_466478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2404, 33), 'str', 'V')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2404, 27), list_466476, str_466478)
    # Adding element type (line 2404)
    str_466479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2404, 38), 'str', 'VI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2404, 27), list_466476, str_466479)
    
    # Assigning a type to the variable 'kwargs_blacklist' (line 2404)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2404, 8), 'kwargs_blacklist', list_466476)
    # SSA join for if statement (line 2400)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2397)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2392)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to _filter_deprecated_kwargs(...): (line 2406)
    # Processing the call arguments (line 2406)
    # Getting the type of 'kwargs' (line 2406)
    kwargs_466481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2406, 30), 'kwargs', False)
    # Getting the type of 'kwargs_blacklist' (line 2406)
    kwargs_blacklist_466482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2406, 38), 'kwargs_blacklist', False)
    # Processing the call keyword arguments (line 2406)
    kwargs_466483 = {}
    # Getting the type of '_filter_deprecated_kwargs' (line 2406)
    _filter_deprecated_kwargs_466480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2406, 4), '_filter_deprecated_kwargs', False)
    # Calling _filter_deprecated_kwargs(args, kwargs) (line 2406)
    _filter_deprecated_kwargs_call_result_466484 = invoke(stypy.reporting.localization.Localization(__file__, 2406, 4), _filter_deprecated_kwargs_466480, *[kwargs_466481, kwargs_blacklist_466482], **kwargs_466483)
    
    
    
    # Call to callable(...): (line 2408)
    # Processing the call arguments (line 2408)
    # Getting the type of 'metric' (line 2408)
    metric_466486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2408, 16), 'metric', False)
    # Processing the call keyword arguments (line 2408)
    kwargs_466487 = {}
    # Getting the type of 'callable' (line 2408)
    callable_466485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2408, 7), 'callable', False)
    # Calling callable(args, kwargs) (line 2408)
    callable_call_result_466488 = invoke(stypy.reporting.localization.Localization(__file__, 2408, 7), callable_466485, *[metric_466486], **kwargs_466487)
    
    # Testing the type of an if condition (line 2408)
    if_condition_466489 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2408, 4), callable_call_result_466488)
    # Assigning a type to the variable 'if_condition_466489' (line 2408)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2408, 4), 'if_condition_466489', if_condition_466489)
    # SSA begins for if statement (line 2408)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2410):
    
    # Assigning a Call to a Name (line 2410):
    
    # Call to getattr(...): (line 2410)
    # Processing the call arguments (line 2410)
    # Getting the type of 'metric' (line 2410)
    metric_466491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2410, 23), 'metric', False)
    str_466492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2410, 31), 'str', '__name__')
    str_466493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2410, 43), 'str', 'Unknown')
    # Processing the call keyword arguments (line 2410)
    kwargs_466494 = {}
    # Getting the type of 'getattr' (line 2410)
    getattr_466490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2410, 15), 'getattr', False)
    # Calling getattr(args, kwargs) (line 2410)
    getattr_call_result_466495 = invoke(stypy.reporting.localization.Localization(__file__, 2410, 15), getattr_466490, *[metric_466491, str_466492, str_466493], **kwargs_466494)
    
    # Assigning a type to the variable 'mstr' (line 2410)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2410, 8), 'mstr', getattr_call_result_466495)
    
    # Assigning a Call to a Name (line 2411):
    
    # Assigning a Call to a Name (line 2411):
    
    # Call to get(...): (line 2411)
    # Processing the call arguments (line 2411)
    # Getting the type of 'mstr' (line 2411)
    mstr_466498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2411, 40), 'mstr', False)
    # Getting the type of 'None' (line 2411)
    None_466499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2411, 46), 'None', False)
    # Processing the call keyword arguments (line 2411)
    kwargs_466500 = {}
    # Getting the type of '_METRIC_ALIAS' (line 2411)
    _METRIC_ALIAS_466496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2411, 22), '_METRIC_ALIAS', False)
    # Obtaining the member 'get' of a type (line 2411)
    get_466497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2411, 22), _METRIC_ALIAS_466496, 'get')
    # Calling get(args, kwargs) (line 2411)
    get_call_result_466501 = invoke(stypy.reporting.localization.Localization(__file__, 2411, 22), get_466497, *[mstr_466498, None_466499], **kwargs_466500)
    
    # Assigning a type to the variable 'metric_name' (line 2411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2411, 8), 'metric_name', get_call_result_466501)
    
    # Assigning a Call to a Tuple (line 2413):
    
    # Assigning a Subscript to a Name (line 2413):
    
    # Obtaining the type of the subscript
    int_466502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2413, 8), 'int')
    
    # Call to _validate_cdist_input(...): (line 2413)
    # Processing the call arguments (line 2413)
    # Getting the type of 'XA' (line 2413)
    XA_466504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 52), 'XA', False)
    # Getting the type of 'XB' (line 2413)
    XB_466505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 56), 'XB', False)
    # Getting the type of 'mA' (line 2413)
    mA_466506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 60), 'mA', False)
    # Getting the type of 'mB' (line 2413)
    mB_466507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 64), 'mB', False)
    # Getting the type of 'n' (line 2413)
    n_466508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 68), 'n', False)
    # Getting the type of 'metric_name' (line 2414)
    metric_name_466509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 52), 'metric_name', False)
    # Processing the call keyword arguments (line 2413)
    # Getting the type of 'kwargs' (line 2414)
    kwargs_466510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 67), 'kwargs', False)
    kwargs_466511 = {'kwargs_466510': kwargs_466510}
    # Getting the type of '_validate_cdist_input' (line 2413)
    _validate_cdist_input_466503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 30), '_validate_cdist_input', False)
    # Calling _validate_cdist_input(args, kwargs) (line 2413)
    _validate_cdist_input_call_result_466512 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 30), _validate_cdist_input_466503, *[XA_466504, XB_466505, mA_466506, mB_466507, n_466508, metric_name_466509], **kwargs_466511)
    
    # Obtaining the member '__getitem__' of a type (line 2413)
    getitem___466513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2413, 8), _validate_cdist_input_call_result_466512, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2413)
    subscript_call_result_466514 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 8), getitem___466513, int_466502)
    
    # Assigning a type to the variable 'tuple_var_assignment_462818' (line 2413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'tuple_var_assignment_462818', subscript_call_result_466514)
    
    # Assigning a Subscript to a Name (line 2413):
    
    # Obtaining the type of the subscript
    int_466515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2413, 8), 'int')
    
    # Call to _validate_cdist_input(...): (line 2413)
    # Processing the call arguments (line 2413)
    # Getting the type of 'XA' (line 2413)
    XA_466517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 52), 'XA', False)
    # Getting the type of 'XB' (line 2413)
    XB_466518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 56), 'XB', False)
    # Getting the type of 'mA' (line 2413)
    mA_466519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 60), 'mA', False)
    # Getting the type of 'mB' (line 2413)
    mB_466520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 64), 'mB', False)
    # Getting the type of 'n' (line 2413)
    n_466521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 68), 'n', False)
    # Getting the type of 'metric_name' (line 2414)
    metric_name_466522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 52), 'metric_name', False)
    # Processing the call keyword arguments (line 2413)
    # Getting the type of 'kwargs' (line 2414)
    kwargs_466523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 67), 'kwargs', False)
    kwargs_466524 = {'kwargs_466523': kwargs_466523}
    # Getting the type of '_validate_cdist_input' (line 2413)
    _validate_cdist_input_466516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 30), '_validate_cdist_input', False)
    # Calling _validate_cdist_input(args, kwargs) (line 2413)
    _validate_cdist_input_call_result_466525 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 30), _validate_cdist_input_466516, *[XA_466517, XB_466518, mA_466519, mB_466520, n_466521, metric_name_466522], **kwargs_466524)
    
    # Obtaining the member '__getitem__' of a type (line 2413)
    getitem___466526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2413, 8), _validate_cdist_input_call_result_466525, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2413)
    subscript_call_result_466527 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 8), getitem___466526, int_466515)
    
    # Assigning a type to the variable 'tuple_var_assignment_462819' (line 2413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'tuple_var_assignment_462819', subscript_call_result_466527)
    
    # Assigning a Subscript to a Name (line 2413):
    
    # Obtaining the type of the subscript
    int_466528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2413, 8), 'int')
    
    # Call to _validate_cdist_input(...): (line 2413)
    # Processing the call arguments (line 2413)
    # Getting the type of 'XA' (line 2413)
    XA_466530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 52), 'XA', False)
    # Getting the type of 'XB' (line 2413)
    XB_466531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 56), 'XB', False)
    # Getting the type of 'mA' (line 2413)
    mA_466532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 60), 'mA', False)
    # Getting the type of 'mB' (line 2413)
    mB_466533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 64), 'mB', False)
    # Getting the type of 'n' (line 2413)
    n_466534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 68), 'n', False)
    # Getting the type of 'metric_name' (line 2414)
    metric_name_466535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 52), 'metric_name', False)
    # Processing the call keyword arguments (line 2413)
    # Getting the type of 'kwargs' (line 2414)
    kwargs_466536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 67), 'kwargs', False)
    kwargs_466537 = {'kwargs_466536': kwargs_466536}
    # Getting the type of '_validate_cdist_input' (line 2413)
    _validate_cdist_input_466529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 30), '_validate_cdist_input', False)
    # Calling _validate_cdist_input(args, kwargs) (line 2413)
    _validate_cdist_input_call_result_466538 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 30), _validate_cdist_input_466529, *[XA_466530, XB_466531, mA_466532, mB_466533, n_466534, metric_name_466535], **kwargs_466537)
    
    # Obtaining the member '__getitem__' of a type (line 2413)
    getitem___466539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2413, 8), _validate_cdist_input_call_result_466538, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2413)
    subscript_call_result_466540 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 8), getitem___466539, int_466528)
    
    # Assigning a type to the variable 'tuple_var_assignment_462820' (line 2413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'tuple_var_assignment_462820', subscript_call_result_466540)
    
    # Assigning a Subscript to a Name (line 2413):
    
    # Obtaining the type of the subscript
    int_466541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2413, 8), 'int')
    
    # Call to _validate_cdist_input(...): (line 2413)
    # Processing the call arguments (line 2413)
    # Getting the type of 'XA' (line 2413)
    XA_466543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 52), 'XA', False)
    # Getting the type of 'XB' (line 2413)
    XB_466544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 56), 'XB', False)
    # Getting the type of 'mA' (line 2413)
    mA_466545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 60), 'mA', False)
    # Getting the type of 'mB' (line 2413)
    mB_466546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 64), 'mB', False)
    # Getting the type of 'n' (line 2413)
    n_466547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 68), 'n', False)
    # Getting the type of 'metric_name' (line 2414)
    metric_name_466548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 52), 'metric_name', False)
    # Processing the call keyword arguments (line 2413)
    # Getting the type of 'kwargs' (line 2414)
    kwargs_466549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 67), 'kwargs', False)
    kwargs_466550 = {'kwargs_466549': kwargs_466549}
    # Getting the type of '_validate_cdist_input' (line 2413)
    _validate_cdist_input_466542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 30), '_validate_cdist_input', False)
    # Calling _validate_cdist_input(args, kwargs) (line 2413)
    _validate_cdist_input_call_result_466551 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 30), _validate_cdist_input_466542, *[XA_466543, XB_466544, mA_466545, mB_466546, n_466547, metric_name_466548], **kwargs_466550)
    
    # Obtaining the member '__getitem__' of a type (line 2413)
    getitem___466552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2413, 8), _validate_cdist_input_call_result_466551, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2413)
    subscript_call_result_466553 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 8), getitem___466552, int_466541)
    
    # Assigning a type to the variable 'tuple_var_assignment_462821' (line 2413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'tuple_var_assignment_462821', subscript_call_result_466553)
    
    # Assigning a Name to a Name (line 2413):
    # Getting the type of 'tuple_var_assignment_462818' (line 2413)
    tuple_var_assignment_462818_466554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'tuple_var_assignment_462818')
    # Assigning a type to the variable 'XA' (line 2413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'XA', tuple_var_assignment_462818_466554)
    
    # Assigning a Name to a Name (line 2413):
    # Getting the type of 'tuple_var_assignment_462819' (line 2413)
    tuple_var_assignment_462819_466555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'tuple_var_assignment_462819')
    # Assigning a type to the variable 'XB' (line 2413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 12), 'XB', tuple_var_assignment_462819_466555)
    
    # Assigning a Name to a Name (line 2413):
    # Getting the type of 'tuple_var_assignment_462820' (line 2413)
    tuple_var_assignment_462820_466556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'tuple_var_assignment_462820')
    # Assigning a type to the variable 'typ' (line 2413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 16), 'typ', tuple_var_assignment_462820_466556)
    
    # Assigning a Name to a Name (line 2413):
    # Getting the type of 'tuple_var_assignment_462821' (line 2413)
    tuple_var_assignment_462821_466557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'tuple_var_assignment_462821')
    # Assigning a type to the variable 'kwargs' (line 2413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 21), 'kwargs', tuple_var_assignment_462821_466557)
    
    
    # Call to xrange(...): (line 2416)
    # Processing the call arguments (line 2416)
    int_466559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2416, 24), 'int')
    # Getting the type of 'mA' (line 2416)
    mA_466560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2416, 27), 'mA', False)
    # Processing the call keyword arguments (line 2416)
    kwargs_466561 = {}
    # Getting the type of 'xrange' (line 2416)
    xrange_466558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2416, 17), 'xrange', False)
    # Calling xrange(args, kwargs) (line 2416)
    xrange_call_result_466562 = invoke(stypy.reporting.localization.Localization(__file__, 2416, 17), xrange_466558, *[int_466559, mA_466560], **kwargs_466561)
    
    # Testing the type of a for loop iterable (line 2416)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2416, 8), xrange_call_result_466562)
    # Getting the type of the for loop variable (line 2416)
    for_loop_var_466563 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2416, 8), xrange_call_result_466562)
    # Assigning a type to the variable 'i' (line 2416)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2416, 8), 'i', for_loop_var_466563)
    # SSA begins for a for statement (line 2416)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to xrange(...): (line 2417)
    # Processing the call arguments (line 2417)
    int_466565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2417, 28), 'int')
    # Getting the type of 'mB' (line 2417)
    mB_466566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 31), 'mB', False)
    # Processing the call keyword arguments (line 2417)
    kwargs_466567 = {}
    # Getting the type of 'xrange' (line 2417)
    xrange_466564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 21), 'xrange', False)
    # Calling xrange(args, kwargs) (line 2417)
    xrange_call_result_466568 = invoke(stypy.reporting.localization.Localization(__file__, 2417, 21), xrange_466564, *[int_466565, mB_466566], **kwargs_466567)
    
    # Testing the type of a for loop iterable (line 2417)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2417, 12), xrange_call_result_466568)
    # Getting the type of the for loop variable (line 2417)
    for_loop_var_466569 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2417, 12), xrange_call_result_466568)
    # Assigning a type to the variable 'j' (line 2417)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2417, 12), 'j', for_loop_var_466569)
    # SSA begins for a for statement (line 2417)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Subscript (line 2418):
    
    # Assigning a Call to a Subscript (line 2418):
    
    # Call to metric(...): (line 2418)
    # Processing the call arguments (line 2418)
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 2418)
    i_466571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 37), 'i', False)
    # Getting the type of 'XA' (line 2418)
    XA_466572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 34), 'XA', False)
    # Obtaining the member '__getitem__' of a type (line 2418)
    getitem___466573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2418, 34), XA_466572, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2418)
    subscript_call_result_466574 = invoke(stypy.reporting.localization.Localization(__file__, 2418, 34), getitem___466573, i_466571)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 2418)
    j_466575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 44), 'j', False)
    # Getting the type of 'XB' (line 2418)
    XB_466576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 41), 'XB', False)
    # Obtaining the member '__getitem__' of a type (line 2418)
    getitem___466577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2418, 41), XB_466576, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2418)
    subscript_call_result_466578 = invoke(stypy.reporting.localization.Localization(__file__, 2418, 41), getitem___466577, j_466575)
    
    # Processing the call keyword arguments (line 2418)
    # Getting the type of 'kwargs' (line 2418)
    kwargs_466579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 50), 'kwargs', False)
    kwargs_466580 = {'kwargs_466579': kwargs_466579}
    # Getting the type of 'metric' (line 2418)
    metric_466570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 27), 'metric', False)
    # Calling metric(args, kwargs) (line 2418)
    metric_call_result_466581 = invoke(stypy.reporting.localization.Localization(__file__, 2418, 27), metric_466570, *[subscript_call_result_466574, subscript_call_result_466578], **kwargs_466580)
    
    # Getting the type of 'dm' (line 2418)
    dm_466582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 16), 'dm')
    
    # Obtaining an instance of the builtin type 'tuple' (line 2418)
    tuple_466583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2418, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 2418)
    # Adding element type (line 2418)
    # Getting the type of 'i' (line 2418)
    i_466584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 19), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2418, 19), tuple_466583, i_466584)
    # Adding element type (line 2418)
    # Getting the type of 'j' (line 2418)
    j_466585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 22), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2418, 19), tuple_466583, j_466585)
    
    # Storing an element on a container (line 2418)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2418, 16), dm_466582, (tuple_466583, metric_call_result_466581))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2408)
    module_type_store.open_ssa_branch('else')
    
    
    # Call to isinstance(...): (line 2420)
    # Processing the call arguments (line 2420)
    # Getting the type of 'metric' (line 2420)
    metric_466587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 20), 'metric', False)
    # Getting the type of 'string_types' (line 2420)
    string_types_466588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 28), 'string_types', False)
    # Processing the call keyword arguments (line 2420)
    kwargs_466589 = {}
    # Getting the type of 'isinstance' (line 2420)
    isinstance_466586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 9), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 2420)
    isinstance_call_result_466590 = invoke(stypy.reporting.localization.Localization(__file__, 2420, 9), isinstance_466586, *[metric_466587, string_types_466588], **kwargs_466589)
    
    # Testing the type of an if condition (line 2420)
    if_condition_466591 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2420, 9), isinstance_call_result_466590)
    # Assigning a type to the variable 'if_condition_466591' (line 2420)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2420, 9), 'if_condition_466591', if_condition_466591)
    # SSA begins for if statement (line 2420)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2421):
    
    # Assigning a Call to a Name (line 2421):
    
    # Call to lower(...): (line 2421)
    # Processing the call keyword arguments (line 2421)
    kwargs_466594 = {}
    # Getting the type of 'metric' (line 2421)
    metric_466592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2421, 15), 'metric', False)
    # Obtaining the member 'lower' of a type (line 2421)
    lower_466593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2421, 15), metric_466592, 'lower')
    # Calling lower(args, kwargs) (line 2421)
    lower_call_result_466595 = invoke(stypy.reporting.localization.Localization(__file__, 2421, 15), lower_466593, *[], **kwargs_466594)
    
    # Assigning a type to the variable 'mstr' (line 2421)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2421, 8), 'mstr', lower_call_result_466595)
    
    
    # Evaluating a boolean operation
    
    str_466596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2424, 11), 'str', 'w')
    # Getting the type of 'kwargs' (line 2424)
    kwargs_466597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2424, 18), 'kwargs')
    # Applying the binary operator 'in' (line 2424)
    result_contains_466598 = python_operator(stypy.reporting.localization.Localization(__file__, 2424, 11), 'in', str_466596, kwargs_466597)
    
    
    
    # Call to startswith(...): (line 2424)
    # Processing the call arguments (line 2424)
    str_466601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2424, 49), 'str', 'test_')
    # Processing the call keyword arguments (line 2424)
    kwargs_466602 = {}
    # Getting the type of 'mstr' (line 2424)
    mstr_466599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2424, 33), 'mstr', False)
    # Obtaining the member 'startswith' of a type (line 2424)
    startswith_466600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2424, 33), mstr_466599, 'startswith')
    # Calling startswith(args, kwargs) (line 2424)
    startswith_call_result_466603 = invoke(stypy.reporting.localization.Localization(__file__, 2424, 33), startswith_466600, *[str_466601], **kwargs_466602)
    
    # Applying the 'not' unary operator (line 2424)
    result_not__466604 = python_operator(stypy.reporting.localization.Localization(__file__, 2424, 29), 'not', startswith_call_result_466603)
    
    # Applying the binary operator 'and' (line 2424)
    result_and_keyword_466605 = python_operator(stypy.reporting.localization.Localization(__file__, 2424, 11), 'and', result_contains_466598, result_not__466604)
    
    # Testing the type of an if condition (line 2424)
    if_condition_466606 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2424, 8), result_and_keyword_466605)
    # Assigning a type to the variable 'if_condition_466606' (line 2424)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2424, 8), 'if_condition_466606', if_condition_466606)
    # SSA begins for if statement (line 2424)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'mstr' (line 2425)
    mstr_466607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2425, 15), 'mstr')
    
    # Obtaining the type of the subscript
    str_466608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2425, 32), 'str', 'seuclidean')
    # Getting the type of '_METRICS' (line 2425)
    _METRICS_466609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2425, 23), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 2425)
    getitem___466610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2425, 23), _METRICS_466609, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2425)
    subscript_call_result_466611 = invoke(stypy.reporting.localization.Localization(__file__, 2425, 23), getitem___466610, str_466608)
    
    # Obtaining the member 'aka' of a type (line 2425)
    aka_466612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2425, 23), subscript_call_result_466611, 'aka')
    # Applying the binary operator 'in' (line 2425)
    result_contains_466613 = python_operator(stypy.reporting.localization.Localization(__file__, 2425, 15), 'in', mstr_466607, aka_466612)
    
    
    # Getting the type of 'mstr' (line 2426)
    mstr_466614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 15), 'mstr')
    
    # Obtaining the type of the subscript
    str_466615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2426, 32), 'str', 'mahalanobis')
    # Getting the type of '_METRICS' (line 2426)
    _METRICS_466616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 23), '_METRICS')
    # Obtaining the member '__getitem__' of a type (line 2426)
    getitem___466617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2426, 23), _METRICS_466616, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 2426)
    subscript_call_result_466618 = invoke(stypy.reporting.localization.Localization(__file__, 2426, 23), getitem___466617, str_466615)
    
    # Obtaining the member 'aka' of a type (line 2426)
    aka_466619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2426, 23), subscript_call_result_466618, 'aka')
    # Applying the binary operator 'in' (line 2426)
    result_contains_466620 = python_operator(stypy.reporting.localization.Localization(__file__, 2426, 15), 'in', mstr_466614, aka_466619)
    
    # Applying the binary operator 'or' (line 2425)
    result_or_keyword_466621 = python_operator(stypy.reporting.localization.Localization(__file__, 2425, 15), 'or', result_contains_466613, result_contains_466620)
    
    # Testing the type of an if condition (line 2425)
    if_condition_466622 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2425, 12), result_or_keyword_466621)
    # Assigning a type to the variable 'if_condition_466622' (line 2425)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2425, 12), 'if_condition_466622', if_condition_466622)
    # SSA begins for if statement (line 2425)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 2427)
    # Processing the call arguments (line 2427)
    str_466624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2427, 33), 'str', 'metric %s incompatible with weights')
    # Getting the type of 'mstr' (line 2427)
    mstr_466625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2427, 73), 'mstr', False)
    # Applying the binary operator '%' (line 2427)
    result_mod_466626 = python_operator(stypy.reporting.localization.Localization(__file__, 2427, 33), '%', str_466624, mstr_466625)
    
    # Processing the call keyword arguments (line 2427)
    kwargs_466627 = {}
    # Getting the type of 'ValueError' (line 2427)
    ValueError_466623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2427, 22), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 2427)
    ValueError_call_result_466628 = invoke(stypy.reporting.localization.Localization(__file__, 2427, 22), ValueError_466623, *[result_mod_466626], **kwargs_466627)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2427, 16), ValueError_call_result_466628, 'raise parameter', BaseException)
    # SSA join for if statement (line 2425)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Subscript (line 2429):
    
    # Assigning a Name to a Subscript (line 2429):
    # Getting the type of 'out' (line 2429)
    out_466629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2429, 28), 'out')
    # Getting the type of 'kwargs' (line 2429)
    kwargs_466630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2429, 12), 'kwargs')
    str_466631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2429, 19), 'str', 'out')
    # Storing an element on a container (line 2429)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2429, 12), kwargs_466630, (str_466631, out_466629))
    
    # Assigning a BinOp to a Name (line 2430):
    
    # Assigning a BinOp to a Name (line 2430):
    str_466632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2430, 19), 'str', 'test_%s')
    # Getting the type of 'mstr' (line 2430)
    mstr_466633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2430, 31), 'mstr')
    # Applying the binary operator '%' (line 2430)
    result_mod_466634 = python_operator(stypy.reporting.localization.Localization(__file__, 2430, 19), '%', str_466632, mstr_466633)
    
    # Assigning a type to the variable 'mstr' (line 2430)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2430, 12), 'mstr', result_mod_466634)
    # SSA join for if statement (line 2424)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2432):
    
    # Assigning a Call to a Name (line 2432):
    
    # Call to get(...): (line 2432)
    # Processing the call arguments (line 2432)
    # Getting the type of 'mstr' (line 2432)
    mstr_466637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2432, 40), 'mstr', False)
    # Getting the type of 'None' (line 2432)
    None_466638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2432, 46), 'None', False)
    # Processing the call keyword arguments (line 2432)
    kwargs_466639 = {}
    # Getting the type of '_METRIC_ALIAS' (line 2432)
    _METRIC_ALIAS_466635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2432, 22), '_METRIC_ALIAS', False)
    # Obtaining the member 'get' of a type (line 2432)
    get_466636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2432, 22), _METRIC_ALIAS_466635, 'get')
    # Calling get(args, kwargs) (line 2432)
    get_call_result_466640 = invoke(stypy.reporting.localization.Localization(__file__, 2432, 22), get_466636, *[mstr_466637, None_466638], **kwargs_466639)
    
    # Assigning a type to the variable 'metric_name' (line 2432)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2432, 8), 'metric_name', get_call_result_466640)
    
    # Type idiom detected: calculating its left and rigth part (line 2433)
    # Getting the type of 'metric_name' (line 2433)
    metric_name_466641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2433, 8), 'metric_name')
    # Getting the type of 'None' (line 2433)
    None_466642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2433, 30), 'None')
    
    (may_be_466643, more_types_in_union_466644) = may_not_be_none(metric_name_466641, None_466642)

    if may_be_466643:

        if more_types_in_union_466644:
            # Runtime conditional SSA (line 2433)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Tuple (line 2434):
        
        # Assigning a Subscript to a Name (line 2434):
        
        # Obtaining the type of the subscript
        int_466645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2434, 12), 'int')
        
        # Call to _validate_cdist_input(...): (line 2434)
        # Processing the call arguments (line 2434)
        # Getting the type of 'XA' (line 2434)
        XA_466647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 56), 'XA', False)
        # Getting the type of 'XB' (line 2434)
        XB_466648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 60), 'XB', False)
        # Getting the type of 'mA' (line 2434)
        mA_466649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 64), 'mA', False)
        # Getting the type of 'mB' (line 2434)
        mB_466650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 68), 'mB', False)
        # Getting the type of 'n' (line 2434)
        n_466651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 72), 'n', False)
        # Getting the type of 'metric_name' (line 2435)
        metric_name_466652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 56), 'metric_name', False)
        # Processing the call keyword arguments (line 2434)
        # Getting the type of 'kwargs' (line 2435)
        kwargs_466653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 71), 'kwargs', False)
        kwargs_466654 = {'kwargs_466653': kwargs_466653}
        # Getting the type of '_validate_cdist_input' (line 2434)
        _validate_cdist_input_466646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 34), '_validate_cdist_input', False)
        # Calling _validate_cdist_input(args, kwargs) (line 2434)
        _validate_cdist_input_call_result_466655 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 34), _validate_cdist_input_466646, *[XA_466647, XB_466648, mA_466649, mB_466650, n_466651, metric_name_466652], **kwargs_466654)
        
        # Obtaining the member '__getitem__' of a type (line 2434)
        getitem___466656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2434, 12), _validate_cdist_input_call_result_466655, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2434)
        subscript_call_result_466657 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 12), getitem___466656, int_466645)
        
        # Assigning a type to the variable 'tuple_var_assignment_462822' (line 2434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'tuple_var_assignment_462822', subscript_call_result_466657)
        
        # Assigning a Subscript to a Name (line 2434):
        
        # Obtaining the type of the subscript
        int_466658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2434, 12), 'int')
        
        # Call to _validate_cdist_input(...): (line 2434)
        # Processing the call arguments (line 2434)
        # Getting the type of 'XA' (line 2434)
        XA_466660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 56), 'XA', False)
        # Getting the type of 'XB' (line 2434)
        XB_466661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 60), 'XB', False)
        # Getting the type of 'mA' (line 2434)
        mA_466662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 64), 'mA', False)
        # Getting the type of 'mB' (line 2434)
        mB_466663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 68), 'mB', False)
        # Getting the type of 'n' (line 2434)
        n_466664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 72), 'n', False)
        # Getting the type of 'metric_name' (line 2435)
        metric_name_466665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 56), 'metric_name', False)
        # Processing the call keyword arguments (line 2434)
        # Getting the type of 'kwargs' (line 2435)
        kwargs_466666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 71), 'kwargs', False)
        kwargs_466667 = {'kwargs_466666': kwargs_466666}
        # Getting the type of '_validate_cdist_input' (line 2434)
        _validate_cdist_input_466659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 34), '_validate_cdist_input', False)
        # Calling _validate_cdist_input(args, kwargs) (line 2434)
        _validate_cdist_input_call_result_466668 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 34), _validate_cdist_input_466659, *[XA_466660, XB_466661, mA_466662, mB_466663, n_466664, metric_name_466665], **kwargs_466667)
        
        # Obtaining the member '__getitem__' of a type (line 2434)
        getitem___466669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2434, 12), _validate_cdist_input_call_result_466668, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2434)
        subscript_call_result_466670 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 12), getitem___466669, int_466658)
        
        # Assigning a type to the variable 'tuple_var_assignment_462823' (line 2434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'tuple_var_assignment_462823', subscript_call_result_466670)
        
        # Assigning a Subscript to a Name (line 2434):
        
        # Obtaining the type of the subscript
        int_466671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2434, 12), 'int')
        
        # Call to _validate_cdist_input(...): (line 2434)
        # Processing the call arguments (line 2434)
        # Getting the type of 'XA' (line 2434)
        XA_466673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 56), 'XA', False)
        # Getting the type of 'XB' (line 2434)
        XB_466674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 60), 'XB', False)
        # Getting the type of 'mA' (line 2434)
        mA_466675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 64), 'mA', False)
        # Getting the type of 'mB' (line 2434)
        mB_466676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 68), 'mB', False)
        # Getting the type of 'n' (line 2434)
        n_466677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 72), 'n', False)
        # Getting the type of 'metric_name' (line 2435)
        metric_name_466678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 56), 'metric_name', False)
        # Processing the call keyword arguments (line 2434)
        # Getting the type of 'kwargs' (line 2435)
        kwargs_466679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 71), 'kwargs', False)
        kwargs_466680 = {'kwargs_466679': kwargs_466679}
        # Getting the type of '_validate_cdist_input' (line 2434)
        _validate_cdist_input_466672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 34), '_validate_cdist_input', False)
        # Calling _validate_cdist_input(args, kwargs) (line 2434)
        _validate_cdist_input_call_result_466681 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 34), _validate_cdist_input_466672, *[XA_466673, XB_466674, mA_466675, mB_466676, n_466677, metric_name_466678], **kwargs_466680)
        
        # Obtaining the member '__getitem__' of a type (line 2434)
        getitem___466682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2434, 12), _validate_cdist_input_call_result_466681, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2434)
        subscript_call_result_466683 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 12), getitem___466682, int_466671)
        
        # Assigning a type to the variable 'tuple_var_assignment_462824' (line 2434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'tuple_var_assignment_462824', subscript_call_result_466683)
        
        # Assigning a Subscript to a Name (line 2434):
        
        # Obtaining the type of the subscript
        int_466684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2434, 12), 'int')
        
        # Call to _validate_cdist_input(...): (line 2434)
        # Processing the call arguments (line 2434)
        # Getting the type of 'XA' (line 2434)
        XA_466686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 56), 'XA', False)
        # Getting the type of 'XB' (line 2434)
        XB_466687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 60), 'XB', False)
        # Getting the type of 'mA' (line 2434)
        mA_466688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 64), 'mA', False)
        # Getting the type of 'mB' (line 2434)
        mB_466689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 68), 'mB', False)
        # Getting the type of 'n' (line 2434)
        n_466690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 72), 'n', False)
        # Getting the type of 'metric_name' (line 2435)
        metric_name_466691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 56), 'metric_name', False)
        # Processing the call keyword arguments (line 2434)
        # Getting the type of 'kwargs' (line 2435)
        kwargs_466692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2435, 71), 'kwargs', False)
        kwargs_466693 = {'kwargs_466692': kwargs_466692}
        # Getting the type of '_validate_cdist_input' (line 2434)
        _validate_cdist_input_466685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 34), '_validate_cdist_input', False)
        # Calling _validate_cdist_input(args, kwargs) (line 2434)
        _validate_cdist_input_call_result_466694 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 34), _validate_cdist_input_466685, *[XA_466686, XB_466687, mA_466688, mB_466689, n_466690, metric_name_466691], **kwargs_466693)
        
        # Obtaining the member '__getitem__' of a type (line 2434)
        getitem___466695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2434, 12), _validate_cdist_input_call_result_466694, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2434)
        subscript_call_result_466696 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 12), getitem___466695, int_466684)
        
        # Assigning a type to the variable 'tuple_var_assignment_462825' (line 2434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'tuple_var_assignment_462825', subscript_call_result_466696)
        
        # Assigning a Name to a Name (line 2434):
        # Getting the type of 'tuple_var_assignment_462822' (line 2434)
        tuple_var_assignment_462822_466697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'tuple_var_assignment_462822')
        # Assigning a type to the variable 'XA' (line 2434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'XA', tuple_var_assignment_462822_466697)
        
        # Assigning a Name to a Name (line 2434):
        # Getting the type of 'tuple_var_assignment_462823' (line 2434)
        tuple_var_assignment_462823_466698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'tuple_var_assignment_462823')
        # Assigning a type to the variable 'XB' (line 2434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 16), 'XB', tuple_var_assignment_462823_466698)
        
        # Assigning a Name to a Name (line 2434):
        # Getting the type of 'tuple_var_assignment_462824' (line 2434)
        tuple_var_assignment_462824_466699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'tuple_var_assignment_462824')
        # Assigning a type to the variable 'typ' (line 2434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 20), 'typ', tuple_var_assignment_462824_466699)
        
        # Assigning a Name to a Name (line 2434):
        # Getting the type of 'tuple_var_assignment_462825' (line 2434)
        tuple_var_assignment_462825_466700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'tuple_var_assignment_462825')
        # Assigning a type to the variable 'kwargs' (line 2434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 25), 'kwargs', tuple_var_assignment_462825_466700)
        
        # Assigning a Call to a Name (line 2437):
        
        # Assigning a Call to a Name (line 2437):
        
        # Call to getattr(...): (line 2437)
        # Processing the call arguments (line 2437)
        # Getting the type of '_distance_wrap' (line 2437)
        _distance_wrap_466702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2437, 31), '_distance_wrap', False)
        str_466703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2438, 31), 'str', 'cdist_%s_%s_wrap')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2438)
        tuple_466704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2438, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2438)
        # Adding element type (line 2438)
        # Getting the type of 'metric_name' (line 2438)
        metric_name_466705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 53), 'metric_name', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2438, 53), tuple_466704, metric_name_466705)
        # Adding element type (line 2438)
        # Getting the type of 'typ' (line 2438)
        typ_466706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2438, 66), 'typ', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2438, 53), tuple_466704, typ_466706)
        
        # Applying the binary operator '%' (line 2438)
        result_mod_466707 = python_operator(stypy.reporting.localization.Localization(__file__, 2438, 31), '%', str_466703, tuple_466704)
        
        # Processing the call keyword arguments (line 2437)
        kwargs_466708 = {}
        # Getting the type of 'getattr' (line 2437)
        getattr_466701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2437, 23), 'getattr', False)
        # Calling getattr(args, kwargs) (line 2437)
        getattr_call_result_466709 = invoke(stypy.reporting.localization.Localization(__file__, 2437, 23), getattr_466701, *[_distance_wrap_466702, result_mod_466707], **kwargs_466708)
        
        # Assigning a type to the variable 'cdist_fn' (line 2437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2437, 12), 'cdist_fn', getattr_call_result_466709)
        
        # Call to cdist_fn(...): (line 2439)
        # Processing the call arguments (line 2439)
        # Getting the type of 'XA' (line 2439)
        XA_466711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 21), 'XA', False)
        # Getting the type of 'XB' (line 2439)
        XB_466712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 25), 'XB', False)
        # Getting the type of 'dm' (line 2439)
        dm_466713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 29), 'dm', False)
        # Processing the call keyword arguments (line 2439)
        # Getting the type of 'kwargs' (line 2439)
        kwargs_466714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 35), 'kwargs', False)
        kwargs_466715 = {'kwargs_466714': kwargs_466714}
        # Getting the type of 'cdist_fn' (line 2439)
        cdist_fn_466710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 12), 'cdist_fn', False)
        # Calling cdist_fn(args, kwargs) (line 2439)
        cdist_fn_call_result_466716 = invoke(stypy.reporting.localization.Localization(__file__, 2439, 12), cdist_fn_466710, *[XA_466711, XB_466712, dm_466713], **kwargs_466715)
        
        # Getting the type of 'dm' (line 2440)
        dm_466717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2440, 19), 'dm')
        # Assigning a type to the variable 'stypy_return_type' (line 2440)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2440, 12), 'stypy_return_type', dm_466717)

        if more_types_in_union_466644:
            # Runtime conditional SSA for else branch (line 2433)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_466643) or more_types_in_union_466644):
        
        
        # Call to startswith(...): (line 2442)
        # Processing the call arguments (line 2442)
        str_466720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2442, 29), 'str', 'test_')
        # Processing the call keyword arguments (line 2442)
        kwargs_466721 = {}
        # Getting the type of 'mstr' (line 2442)
        mstr_466718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2442, 13), 'mstr', False)
        # Obtaining the member 'startswith' of a type (line 2442)
        startswith_466719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2442, 13), mstr_466718, 'startswith')
        # Calling startswith(args, kwargs) (line 2442)
        startswith_call_result_466722 = invoke(stypy.reporting.localization.Localization(__file__, 2442, 13), startswith_466719, *[str_466720], **kwargs_466721)
        
        # Testing the type of an if condition (line 2442)
        if_condition_466723 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2442, 13), startswith_call_result_466722)
        # Assigning a type to the variable 'if_condition_466723' (line 2442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2442, 13), 'if_condition_466723', if_condition_466723)
        # SSA begins for if statement (line 2442)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'mstr' (line 2443)
        mstr_466724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2443, 15), 'mstr')
        # Getting the type of '_TEST_METRICS' (line 2443)
        _TEST_METRICS_466725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2443, 23), '_TEST_METRICS')
        # Applying the binary operator 'in' (line 2443)
        result_contains_466726 = python_operator(stypy.reporting.localization.Localization(__file__, 2443, 15), 'in', mstr_466724, _TEST_METRICS_466725)
        
        # Testing the type of an if condition (line 2443)
        if_condition_466727 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2443, 12), result_contains_466726)
        # Assigning a type to the variable 'if_condition_466727' (line 2443)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2443, 12), 'if_condition_466727', if_condition_466727)
        # SSA begins for if statement (line 2443)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2444):
        
        # Assigning a Call to a Name (line 2444):
        
        # Call to cdist(...): (line 2444)
        # Processing the call arguments (line 2444)
        # Getting the type of 'XA' (line 2444)
        XA_466729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2444, 27), 'XA', False)
        # Getting the type of 'XB' (line 2444)
        XB_466730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2444, 31), 'XB', False)
        
        # Obtaining the type of the subscript
        # Getting the type of 'mstr' (line 2444)
        mstr_466731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2444, 49), 'mstr', False)
        # Getting the type of '_TEST_METRICS' (line 2444)
        _TEST_METRICS_466732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2444, 35), '_TEST_METRICS', False)
        # Obtaining the member '__getitem__' of a type (line 2444)
        getitem___466733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2444, 35), _TEST_METRICS_466732, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2444)
        subscript_call_result_466734 = invoke(stypy.reporting.localization.Localization(__file__, 2444, 35), getitem___466733, mstr_466731)
        
        # Processing the call keyword arguments (line 2444)
        # Getting the type of 'kwargs' (line 2444)
        kwargs_466735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2444, 58), 'kwargs', False)
        kwargs_466736 = {'kwargs_466735': kwargs_466735}
        # Getting the type of 'cdist' (line 2444)
        cdist_466728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2444, 21), 'cdist', False)
        # Calling cdist(args, kwargs) (line 2444)
        cdist_call_result_466737 = invoke(stypy.reporting.localization.Localization(__file__, 2444, 21), cdist_466728, *[XA_466729, XB_466730, subscript_call_result_466734], **kwargs_466736)
        
        # Assigning a type to the variable 'dm' (line 2444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2444, 16), 'dm', cdist_call_result_466737)
        # SSA branch for the else part of an if statement (line 2443)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 2446)
        # Processing the call arguments (line 2446)
        str_466739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2446, 33), 'str', 'Unknown "Test" Distance Metric: %s')
        
        # Obtaining the type of the subscript
        int_466740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2446, 77), 'int')
        slice_466741 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2446, 72), int_466740, None, None)
        # Getting the type of 'mstr' (line 2446)
        mstr_466742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2446, 72), 'mstr', False)
        # Obtaining the member '__getitem__' of a type (line 2446)
        getitem___466743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2446, 72), mstr_466742, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2446)
        subscript_call_result_466744 = invoke(stypy.reporting.localization.Localization(__file__, 2446, 72), getitem___466743, slice_466741)
        
        # Applying the binary operator '%' (line 2446)
        result_mod_466745 = python_operator(stypy.reporting.localization.Localization(__file__, 2446, 33), '%', str_466739, subscript_call_result_466744)
        
        # Processing the call keyword arguments (line 2446)
        kwargs_466746 = {}
        # Getting the type of 'ValueError' (line 2446)
        ValueError_466738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2446, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 2446)
        ValueError_call_result_466747 = invoke(stypy.reporting.localization.Localization(__file__, 2446, 22), ValueError_466738, *[result_mod_466745], **kwargs_466746)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2446, 16), ValueError_call_result_466747, 'raise parameter', BaseException)
        # SSA join for if statement (line 2443)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 2442)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 2448)
        # Processing the call arguments (line 2448)
        str_466749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2448, 29), 'str', 'Unknown Distance Metric: %s')
        # Getting the type of 'mstr' (line 2448)
        mstr_466750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2448, 61), 'mstr', False)
        # Applying the binary operator '%' (line 2448)
        result_mod_466751 = python_operator(stypy.reporting.localization.Localization(__file__, 2448, 29), '%', str_466749, mstr_466750)
        
        # Processing the call keyword arguments (line 2448)
        kwargs_466752 = {}
        # Getting the type of 'ValueError' (line 2448)
        ValueError_466748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2448, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 2448)
        ValueError_call_result_466753 = invoke(stypy.reporting.localization.Localization(__file__, 2448, 18), ValueError_466748, *[result_mod_466751], **kwargs_466752)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2448, 12), ValueError_call_result_466753, 'raise parameter', BaseException)
        # SSA join for if statement (line 2442)
        module_type_store = module_type_store.join_ssa_context()
        

        if (may_be_466643 and more_types_in_union_466644):
            # SSA join for if statement (line 2433)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA branch for the else part of an if statement (line 2420)
    module_type_store.open_ssa_branch('else')
    
    # Call to TypeError(...): (line 2450)
    # Processing the call arguments (line 2450)
    str_466755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2450, 24), 'str', '2nd argument metric must be a string identifier or a function.')
    # Processing the call keyword arguments (line 2450)
    kwargs_466756 = {}
    # Getting the type of 'TypeError' (line 2450)
    TypeError_466754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2450, 14), 'TypeError', False)
    # Calling TypeError(args, kwargs) (line 2450)
    TypeError_call_result_466757 = invoke(stypy.reporting.localization.Localization(__file__, 2450, 14), TypeError_466754, *[str_466755], **kwargs_466756)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2450, 8), TypeError_call_result_466757, 'raise parameter', BaseException)
    # SSA join for if statement (line 2420)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2408)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'dm' (line 2452)
    dm_466758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2452, 11), 'dm')
    # Assigning a type to the variable 'stypy_return_type' (line 2452)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2452, 4), 'stypy_return_type', dm_466758)
    
    # ################# End of 'cdist(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'cdist' in the type store
    # Getting the type of 'stypy_return_type' (line 2060)
    stypy_return_type_466759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2060, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_466759)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'cdist'
    return stypy_return_type_466759

# Assigning a type to the variable 'cdist' (line 2060)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2060, 0), 'cdist', cdist)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
