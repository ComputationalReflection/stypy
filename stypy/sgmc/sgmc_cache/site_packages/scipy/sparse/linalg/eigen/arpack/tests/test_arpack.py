
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: from __future__ import division, print_function, absolute_import
2: 
3: __usage__ = '''
4: To run tests locally:
5:   python tests/test_arpack.py [-l<int>] [-v<int>]
6: 
7: '''
8: 
9: import threading
10: 
11: import numpy as np
12: 
13: from numpy.testing import (assert_allclose, assert_array_almost_equal_nulp,
14:                            assert_equal, assert_array_equal)
15: from pytest import raises as assert_raises
16: 
17: from numpy import dot, conj, random
18: from scipy.linalg import eig, eigh
19: from scipy.sparse import csc_matrix, csr_matrix, isspmatrix, diags
20: from scipy.sparse.linalg import LinearOperator, aslinearoperator
21: from scipy.sparse.linalg.eigen.arpack import eigs, eigsh, svds, \
22:      ArpackNoConvergence, arpack
23: 
24: from scipy.linalg import svd, hilbert
25: 
26: from scipy._lib._gcutils import assert_deallocated
27: 
28: 
29: # precision for tests
30: _ndigits = {'f': 3, 'd': 11, 'F': 3, 'D': 11}
31: 
32: 
33: def _get_test_tolerance(type_char, mattype=None):
34:     '''
35:     Return tolerance values suitable for a given test:
36: 
37:     Parameters
38:     ----------
39:     type_char : {'f', 'd', 'F', 'D'}
40:         Data type in ARPACK eigenvalue problem
41:     mattype : {csr_matrix, aslinearoperator, asarray}, optional
42:         Linear operator type
43: 
44:     Returns
45:     -------
46:     tol
47:         Tolerance to pass to the ARPACK routine
48:     rtol
49:         Relative tolerance for outputs
50:     atol
51:         Absolute tolerance for outputs
52: 
53:     '''
54: 
55:     rtol = {'f': 3000 * np.finfo(np.float32).eps,
56:             'F': 3000 * np.finfo(np.float32).eps,
57:             'd': 2000 * np.finfo(np.float64).eps,
58:             'D': 2000 * np.finfo(np.float64).eps}[type_char]
59:     atol = rtol
60:     tol = 0
61: 
62:     if mattype is aslinearoperator and type_char in ('f', 'F'):
63:         # iterative methods in single precision: worse errors
64:         # also: bump ARPACK tolerance so that the iterative method converges
65:         tol = 30 * np.finfo(np.float32).eps
66:         rtol *= 5
67: 
68:     if mattype is csr_matrix and type_char in ('f', 'F'):
69:         # sparse in single precision: worse errors
70:         rtol *= 5
71: 
72:     return tol, rtol, atol
73: 
74: 
75: def generate_matrix(N, complex=False, hermitian=False,
76:                     pos_definite=False, sparse=False):
77:     M = np.random.random((N,N))
78:     if complex:
79:         M = M + 1j * np.random.random((N,N))
80: 
81:     if hermitian:
82:         if pos_definite:
83:             if sparse:
84:                 i = np.arange(N)
85:                 j = np.random.randint(N, size=N-2)
86:                 i, j = np.meshgrid(i, j)
87:                 M[i,j] = 0
88:             M = np.dot(M.conj(), M.T)
89:         else:
90:             M = np.dot(M.conj(), M.T)
91:             if sparse:
92:                 i = np.random.randint(N, size=N * N // 4)
93:                 j = np.random.randint(N, size=N * N // 4)
94:                 ind = np.where(i == j)
95:                 j[ind] = (j[ind] + 1) % N
96:                 M[i,j] = 0
97:                 M[j,i] = 0
98:     else:
99:         if sparse:
100:             i = np.random.randint(N, size=N * N // 2)
101:             j = np.random.randint(N, size=N * N // 2)
102:             M[i,j] = 0
103:     return M
104: 
105: 
106: def _aslinearoperator_with_dtype(m):
107:     m = aslinearoperator(m)
108:     if not hasattr(m, 'dtype'):
109:         x = np.zeros(m.shape[1])
110:         m.dtype = (m * x).dtype
111:     return m
112: 
113: 
114: def assert_allclose_cc(actual, desired, **kw):
115:     '''Almost equal or complex conjugates almost equal'''
116:     try:
117:         assert_allclose(actual, desired, **kw)
118:     except:
119:         assert_allclose(actual, conj(desired), **kw)
120: 
121: 
122: def argsort_which(eval, typ, k, which,
123:                   sigma=None, OPpart=None, mode=None):
124:     '''Return sorted indices of eigenvalues using the "which" keyword
125:     from eigs and eigsh'''
126:     if sigma is None:
127:         reval = np.round(eval, decimals=_ndigits[typ])
128:     else:
129:         if mode is None or mode == 'normal':
130:             if OPpart is None:
131:                 reval = 1. / (eval - sigma)
132:             elif OPpart == 'r':
133:                 reval = 0.5 * (1. / (eval - sigma)
134:                                + 1. / (eval - np.conj(sigma)))
135:             elif OPpart == 'i':
136:                 reval = -0.5j * (1. / (eval - sigma)
137:                                  - 1. / (eval - np.conj(sigma)))
138:         elif mode == 'cayley':
139:             reval = (eval + sigma) / (eval - sigma)
140:         elif mode == 'buckling':
141:             reval = eval / (eval - sigma)
142:         else:
143:             raise ValueError("mode='%s' not recognized" % mode)
144: 
145:         reval = np.round(reval, decimals=_ndigits[typ])
146: 
147:     if which in ['LM', 'SM']:
148:         ind = np.argsort(abs(reval))
149:     elif which in ['LR', 'SR', 'LA', 'SA', 'BE']:
150:         ind = np.argsort(np.real(reval))
151:     elif which in ['LI', 'SI']:
152:         # for LI,SI ARPACK returns largest,smallest abs(imaginary) why?
153:         if typ.islower():
154:             ind = np.argsort(abs(np.imag(reval)))
155:         else:
156:             ind = np.argsort(np.imag(reval))
157:     else:
158:         raise ValueError("which='%s' is unrecognized" % which)
159: 
160:     if which in ['LM', 'LA', 'LR', 'LI']:
161:         return ind[-k:]
162:     elif which in ['SM', 'SA', 'SR', 'SI']:
163:         return ind[:k]
164:     elif which == 'BE':
165:         return np.concatenate((ind[:k//2], ind[k//2-k:]))
166: 
167: 
168: def eval_evec(symmetric, d, typ, k, which, v0=None, sigma=None,
169:               mattype=np.asarray, OPpart=None, mode='normal'):
170:     general = ('bmat' in d)
171: 
172:     if symmetric:
173:         eigs_func = eigsh
174:     else:
175:         eigs_func = eigs
176: 
177:     if general:
178:         err = ("error for %s:general, typ=%s, which=%s, sigma=%s, "
179:                "mattype=%s, OPpart=%s, mode=%s" % (eigs_func.__name__,
180:                                                    typ, which, sigma,
181:                                                    mattype.__name__,
182:                                                    OPpart, mode))
183:     else:
184:         err = ("error for %s:standard, typ=%s, which=%s, sigma=%s, "
185:                "mattype=%s, OPpart=%s, mode=%s" % (eigs_func.__name__,
186:                                                    typ, which, sigma,
187:                                                    mattype.__name__,
188:                                                    OPpart, mode))
189: 
190:     a = d['mat'].astype(typ)
191:     ac = mattype(a)
192: 
193:     if general:
194:         b = d['bmat'].astype(typ.lower())
195:         bc = mattype(b)
196: 
197:     # get exact eigenvalues
198:     exact_eval = d['eval'].astype(typ.upper())
199:     ind = argsort_which(exact_eval, typ, k, which,
200:                         sigma, OPpart, mode)
201:     exact_eval = exact_eval[ind]
202: 
203:     # compute arpack eigenvalues
204:     kwargs = dict(which=which, v0=v0, sigma=sigma)
205:     if eigs_func is eigsh:
206:         kwargs['mode'] = mode
207:     else:
208:         kwargs['OPpart'] = OPpart
209: 
210:     # compute suitable tolerances
211:     kwargs['tol'], rtol, atol = _get_test_tolerance(typ, mattype)
212: 
213:     # on rare occasions, ARPACK routines return results that are proper
214:     # eigenvalues and -vectors, but not necessarily the ones requested in
215:     # the parameter which. This is inherent to the Krylov methods, and
216:     # should not be treated as a failure. If such a rare situation
217:     # occurs, the calculation is tried again (but at most a few times).
218:     ntries = 0
219:     while ntries < 5:
220:         # solve
221:         if general:
222:             try:
223:                 eval, evec = eigs_func(ac, k, bc, **kwargs)
224:             except ArpackNoConvergence:
225:                 kwargs['maxiter'] = 20*a.shape[0]
226:                 eval, evec = eigs_func(ac, k, bc, **kwargs)
227:         else:
228:             try:
229:                 eval, evec = eigs_func(ac, k, **kwargs)
230:             except ArpackNoConvergence:
231:                 kwargs['maxiter'] = 20*a.shape[0]
232:                 eval, evec = eigs_func(ac, k, **kwargs)
233: 
234:         ind = argsort_which(eval, typ, k, which,
235:                             sigma, OPpart, mode)
236:         eval = eval[ind]
237:         evec = evec[:,ind]
238: 
239:         # check eigenvectors
240:         LHS = np.dot(a, evec)
241:         if general:
242:             RHS = eval * np.dot(b, evec)
243:         else:
244:             RHS = eval * evec
245: 
246:             assert_allclose(LHS, RHS, rtol=rtol, atol=atol, err_msg=err)
247: 
248:         try:
249:             # check eigenvalues
250:             assert_allclose_cc(eval, exact_eval, rtol=rtol, atol=atol,
251:                                err_msg=err)
252:             break
253:         except AssertionError:
254:             ntries += 1
255: 
256:     # check eigenvalues
257:     assert_allclose_cc(eval, exact_eval, rtol=rtol, atol=atol, err_msg=err)
258: 
259: 
260: class DictWithRepr(dict):
261:     def __init__(self, name):
262:         self.name = name
263: 
264:     def __repr__(self):
265:         return "<%s>" % self.name
266: 
267: 
268: class SymmetricParams:
269:     def __init__(self):
270:         self.eigs = eigsh
271:         self.which = ['LM', 'SM', 'LA', 'SA', 'BE']
272:         self.mattypes = [csr_matrix, aslinearoperator, np.asarray]
273:         self.sigmas_modes = {None: ['normal'],
274:                              0.5: ['normal', 'buckling', 'cayley']}
275: 
276:         # generate matrices
277:         # these should all be float32 so that the eigenvalues
278:         # are the same in float32 and float64
279:         N = 6
280:         np.random.seed(2300)
281:         Ar = generate_matrix(N, hermitian=True,
282:                              pos_definite=True).astype('f').astype('d')
283:         M = generate_matrix(N, hermitian=True,
284:                             pos_definite=True).astype('f').astype('d')
285:         Ac = generate_matrix(N, hermitian=True, pos_definite=True,
286:                              complex=True).astype('F').astype('D')
287:         v0 = np.random.random(N)
288: 
289:         # standard symmetric problem
290:         SS = DictWithRepr("std-symmetric")
291:         SS['mat'] = Ar
292:         SS['v0'] = v0
293:         SS['eval'] = eigh(SS['mat'], eigvals_only=True)
294: 
295:         # general symmetric problem
296:         GS = DictWithRepr("gen-symmetric")
297:         GS['mat'] = Ar
298:         GS['bmat'] = M
299:         GS['v0'] = v0
300:         GS['eval'] = eigh(GS['mat'], GS['bmat'], eigvals_only=True)
301: 
302:         # standard hermitian problem
303:         SH = DictWithRepr("std-hermitian")
304:         SH['mat'] = Ac
305:         SH['v0'] = v0
306:         SH['eval'] = eigh(SH['mat'], eigvals_only=True)
307: 
308:         # general hermitian problem
309:         GH = DictWithRepr("gen-hermitian")
310:         GH['mat'] = Ac
311:         GH['bmat'] = M
312:         GH['v0'] = v0
313:         GH['eval'] = eigh(GH['mat'], GH['bmat'], eigvals_only=True)
314: 
315:         self.real_test_cases = [SS, GS]
316:         self.complex_test_cases = [SH, GH]
317: 
318: 
319: class NonSymmetricParams:
320:     def __init__(self):
321:         self.eigs = eigs
322:         self.which = ['LM', 'LR', 'LI']  # , 'SM', 'LR', 'SR', 'LI', 'SI']
323:         self.mattypes = [csr_matrix, aslinearoperator, np.asarray]
324:         self.sigmas_OPparts = {None: [None],
325:                                0.1: ['r'],
326:                                0.1 + 0.1j: ['r', 'i']}
327: 
328:         # generate matrices
329:         # these should all be float32 so that the eigenvalues
330:         # are the same in float32 and float64
331:         N = 6
332:         np.random.seed(2300)
333:         Ar = generate_matrix(N).astype('f').astype('d')
334:         M = generate_matrix(N, hermitian=True,
335:                             pos_definite=True).astype('f').astype('d')
336:         Ac = generate_matrix(N, complex=True).astype('F').astype('D')
337:         v0 = np.random.random(N)
338: 
339:         # standard real nonsymmetric problem
340:         SNR = DictWithRepr("std-real-nonsym")
341:         SNR['mat'] = Ar
342:         SNR['v0'] = v0
343:         SNR['eval'] = eig(SNR['mat'], left=False, right=False)
344: 
345:         # general real nonsymmetric problem
346:         GNR = DictWithRepr("gen-real-nonsym")
347:         GNR['mat'] = Ar
348:         GNR['bmat'] = M
349:         GNR['v0'] = v0
350:         GNR['eval'] = eig(GNR['mat'], GNR['bmat'], left=False, right=False)
351: 
352:         # standard complex nonsymmetric problem
353:         SNC = DictWithRepr("std-cmplx-nonsym")
354:         SNC['mat'] = Ac
355:         SNC['v0'] = v0
356:         SNC['eval'] = eig(SNC['mat'], left=False, right=False)
357: 
358:         # general complex nonsymmetric problem
359:         GNC = DictWithRepr("gen-cmplx-nonsym")
360:         GNC['mat'] = Ac
361:         GNC['bmat'] = M
362:         GNC['v0'] = v0
363:         GNC['eval'] = eig(GNC['mat'], GNC['bmat'], left=False, right=False)
364: 
365:         self.real_test_cases = [SNR, GNR]
366:         self.complex_test_cases = [SNC, GNC]
367: 
368: 
369: def test_symmetric_modes():
370:     params = SymmetricParams()
371:     k = 2
372:     symmetric = True
373:     for D in params.real_test_cases:
374:         for typ in 'fd':
375:             for which in params.which:
376:                 for mattype in params.mattypes:
377:                     for (sigma, modes) in params.sigmas_modes.items():
378:                         for mode in modes:
379:                             eval_evec(symmetric, D, typ, k, which,
380:                                       None, sigma, mattype, None, mode)
381: 
382: 
383: def test_hermitian_modes():
384:     params = SymmetricParams()
385:     k = 2
386:     symmetric = True
387:     for D in params.complex_test_cases:
388:         for typ in 'FD':
389:             for which in params.which:
390:                 if which == 'BE':
391:                     continue  # BE invalid for complex
392:                 for mattype in params.mattypes:
393:                     for sigma in params.sigmas_modes:
394:                         eval_evec(symmetric, D, typ, k, which,
395:                                   None, sigma, mattype)
396: 
397: 
398: def test_symmetric_starting_vector():
399:     params = SymmetricParams()
400:     symmetric = True
401:     for k in [1, 2, 3, 4, 5]:
402:         for D in params.real_test_cases:
403:             for typ in 'fd':
404:                 v0 = random.rand(len(D['v0'])).astype(typ)
405:                 eval_evec(symmetric, D, typ, k, 'LM', v0)
406: 
407: 
408: def test_symmetric_no_convergence():
409:     np.random.seed(1234)
410:     m = generate_matrix(30, hermitian=True, pos_definite=True)
411:     tol, rtol, atol = _get_test_tolerance('d')
412:     try:
413:         w, v = eigsh(m, 4, which='LM', v0=m[:, 0], maxiter=5, tol=tol, ncv=9)
414:         raise AssertionError("Spurious no-error exit")
415:     except ArpackNoConvergence as err:
416:         k = len(err.eigenvalues)
417:         if k <= 0:
418:             raise AssertionError("Spurious no-eigenvalues-found case")
419:         w, v = err.eigenvalues, err.eigenvectors
420:         assert_allclose(dot(m, v), w * v, rtol=rtol, atol=atol)
421: 
422: 
423: def test_real_nonsymmetric_modes():
424:     params = NonSymmetricParams()
425:     k = 2
426:     symmetric = False
427:     for D in params.real_test_cases:
428:         for typ in 'fd':
429:             for which in params.which:
430:                 for mattype in params.mattypes:
431:                     for sigma, OPparts in params.sigmas_OPparts.items():
432:                         for OPpart in OPparts:
433:                             eval_evec(symmetric, D, typ, k, which,
434:                                       None, sigma, mattype, OPpart)
435: 
436: 
437: def test_complex_nonsymmetric_modes():
438:     params = NonSymmetricParams()
439:     k = 2
440:     symmetric = False
441:     for D in params.complex_test_cases:
442:         for typ in 'DF':
443:             for which in params.which:
444:                 for mattype in params.mattypes:
445:                     for sigma in params.sigmas_OPparts:
446:                         eval_evec(symmetric, D, typ, k, which,
447:                                   None, sigma, mattype)
448: 
449: 
450: def test_standard_nonsymmetric_starting_vector():
451:     params = NonSymmetricParams()
452:     sigma = None
453:     symmetric = False
454:     for k in [1, 2, 3, 4]:
455:         for d in params.complex_test_cases:
456:             for typ in 'FD':
457:                 A = d['mat']
458:                 n = A.shape[0]
459:                 v0 = random.rand(n).astype(typ)
460:                 eval_evec(symmetric, d, typ, k, "LM", v0, sigma)
461: 
462: 
463: def test_general_nonsymmetric_starting_vector():
464:     params = NonSymmetricParams()
465:     sigma = None
466:     symmetric = False
467:     for k in [1, 2, 3, 4]:
468:         for d in params.complex_test_cases:
469:             for typ in 'FD':
470:                 A = d['mat']
471:                 n = A.shape[0]
472:                 v0 = random.rand(n).astype(typ)
473:                 eval_evec(symmetric, d, typ, k, "LM", v0, sigma)
474: 
475: 
476: def test_standard_nonsymmetric_no_convergence():
477:     np.random.seed(1234)
478:     m = generate_matrix(30, complex=True)
479:     tol, rtol, atol = _get_test_tolerance('d')
480:     try:
481:         w, v = eigs(m, 4, which='LM', v0=m[:, 0], maxiter=5, tol=tol)
482:         raise AssertionError("Spurious no-error exit")
483:     except ArpackNoConvergence as err:
484:         k = len(err.eigenvalues)
485:         if k <= 0:
486:             raise AssertionError("Spurious no-eigenvalues-found case")
487:         w, v = err.eigenvalues, err.eigenvectors
488:         for ww, vv in zip(w, v.T):
489:             assert_allclose(dot(m, vv), ww * vv, rtol=rtol, atol=atol)
490: 
491: 
492: def test_eigen_bad_shapes():
493:     # A is not square.
494:     A = csc_matrix(np.zeros((2, 3)))
495:     assert_raises(ValueError, eigs, A)
496: 
497: 
498: def test_eigen_bad_kwargs():
499:     # Test eigen on wrong keyword argument
500:     A = csc_matrix(np.zeros((2, 2)))
501:     assert_raises(ValueError, eigs, A, which='XX')
502: 
503: 
504: def test_ticket_1459_arpack_crash():
505:     for dtype in [np.float32, np.float64]:
506:         # XXX: this test does not seem to catch the issue for float32,
507:         #      but we made the same fix there, just to be sure
508: 
509:         N = 6
510:         k = 2
511: 
512:         np.random.seed(2301)
513:         A = np.random.random((N, N)).astype(dtype)
514:         v0 = np.array([-0.71063568258907849895, -0.83185111795729227424,
515:                        -0.34365925382227402451, 0.46122533684552280420,
516:                        -0.58001341115969040629, -0.78844877570084292984e-01],
517:                       dtype=dtype)
518: 
519:         # Should not crash:
520:         evals, evecs = eigs(A, k, v0=v0)
521: 
522: 
523: #----------------------------------------------------------------------
524: # sparse SVD tests
525: 
526: def sorted_svd(m, k, which='LM'):
527:     # Compute svd of a dense matrix m, and return singular vectors/values
528:     # sorted.
529:     if isspmatrix(m):
530:         m = m.todense()
531:     u, s, vh = svd(m)
532:     if which == 'LM':
533:         ii = np.argsort(s)[-k:]
534:     elif which == 'SM':
535:         ii = np.argsort(s)[:k]
536:     else:
537:         raise ValueError("unknown which=%r" % (which,))
538: 
539:     return u[:, ii], s[ii], vh[ii]
540: 
541: 
542: def svd_estimate(u, s, vh):
543:     return np.dot(u, np.dot(np.diag(s), vh))
544: 
545: 
546: def svd_test_input_check():
547:     x = np.array([[1, 2, 3],
548:                   [3, 4, 3],
549:                   [1, 0, 2],
550:                   [0, 0, 1]], float)
551: 
552:     assert_raises(ValueError, svds, x, k=-1)
553:     assert_raises(ValueError, svds, x, k=0)
554:     assert_raises(ValueError, svds, x, k=10)
555:     assert_raises(ValueError, svds, x, k=x.shape[0])
556:     assert_raises(ValueError, svds, x, k=x.shape[1])
557:     assert_raises(ValueError, svds, x.T, k=x.shape[0])
558:     assert_raises(ValueError, svds, x.T, k=x.shape[1])
559: 
560: 
561: def test_svd_simple_real():
562:     x = np.array([[1, 2, 3],
563:                   [3, 4, 3],
564:                   [1, 0, 2],
565:                   [0, 0, 1]], float)
566:     y = np.array([[1, 2, 3, 8],
567:                   [3, 4, 3, 5],
568:                   [1, 0, 2, 3],
569:                   [0, 0, 1, 0]], float)
570:     z = csc_matrix(x)
571: 
572:     for m in [x.T, x, y, z, z.T]:
573:         for k in range(1, min(m.shape)):
574:             u, s, vh = sorted_svd(m, k)
575:             su, ss, svh = svds(m, k)
576: 
577:             m_hat = svd_estimate(u, s, vh)
578:             sm_hat = svd_estimate(su, ss, svh)
579: 
580:             assert_array_almost_equal_nulp(m_hat, sm_hat, nulp=1000)
581: 
582: 
583: def test_svd_simple_complex():
584:     x = np.array([[1, 2, 3],
585:                   [3, 4, 3],
586:                   [1 + 1j, 0, 2],
587:                   [0, 0, 1]], complex)
588:     y = np.array([[1, 2, 3, 8 + 5j],
589:                   [3 - 2j, 4, 3, 5],
590:                   [1, 0, 2, 3],
591:                   [0, 0, 1, 0]], complex)
592:     z = csc_matrix(x)
593: 
594:     for m in [x, x.T.conjugate(), x.T, y, y.conjugate(), z, z.T]:
595:         for k in range(1, min(m.shape) - 1):
596:             u, s, vh = sorted_svd(m, k)
597:             su, ss, svh = svds(m, k)
598: 
599:             m_hat = svd_estimate(u, s, vh)
600:             sm_hat = svd_estimate(su, ss, svh)
601: 
602:             assert_array_almost_equal_nulp(m_hat, sm_hat, nulp=1000)
603: 
604: 
605: def test_svd_maxiter():
606:     # check that maxiter works as expected
607:     x = hilbert(6)
608:     # ARPACK shouldn't converge on such an ill-conditioned matrix with just
609:     # one iteration
610:     assert_raises(ArpackNoConvergence, svds, x, 1, maxiter=1, ncv=3)
611:     # but 100 iterations should be more than enough
612:     u, s, vt = svds(x, 1, maxiter=100, ncv=3)
613:     assert_allclose(s, [1.7], atol=0.5)
614: 
615: 
616: def test_svd_return():
617:     # check that the return_singular_vectors parameter works as expected
618:     x = hilbert(6)
619:     _, s, _ = sorted_svd(x, 2)
620:     ss = svds(x, 2, return_singular_vectors=False)
621:     assert_allclose(s, ss)
622: 
623: 
624: def test_svd_which():
625:     # check that the which parameter works as expected
626:     x = hilbert(6)
627:     for which in ['LM', 'SM']:
628:         _, s, _ = sorted_svd(x, 2, which=which)
629:         ss = svds(x, 2, which=which, return_singular_vectors=False)
630:         ss.sort()
631:         assert_allclose(s, ss, atol=np.sqrt(1e-15))
632: 
633: 
634: def test_svd_v0():
635:     # check that the v0 parameter works as expected
636:     x = np.array([[1, 2, 3, 4], [5, 6, 7, 8]], float)
637: 
638:     u, s, vh = svds(x, 1)
639:     u2, s2, vh2 = svds(x, 1, v0=u[:,0])
640: 
641:     assert_allclose(s, s2, atol=np.sqrt(1e-15))
642: 
643: 
644: def _check_svds(A, k, U, s, VH):
645:     n, m = A.shape
646: 
647:     # Check shapes.
648:     assert_equal(U.shape, (n, k))
649:     assert_equal(s.shape, (k,))
650:     assert_equal(VH.shape, (k, m))
651: 
652:     # Check that the original matrix can be reconstituted.
653:     A_rebuilt = (U*s).dot(VH)
654:     assert_equal(A_rebuilt.shape, A.shape)
655:     assert_allclose(A_rebuilt, A)
656: 
657:     # Check that U is a semi-orthogonal matrix.
658:     UH_U = np.dot(U.T.conj(), U)
659:     assert_equal(UH_U.shape, (k, k))
660:     assert_allclose(UH_U, np.identity(k), atol=1e-12)
661: 
662:     # Check that V is a semi-orthogonal matrix.
663:     VH_V = np.dot(VH, VH.T.conj())
664:     assert_equal(VH_V.shape, (k, k))
665:     assert_allclose(VH_V, np.identity(k), atol=1e-12)
666: 
667: 
668: def test_svd_LM_ones_matrix():
669:     # Check that svds can deal with matrix_rank less than k in LM mode.
670:     k = 3
671:     for n, m in (6, 5), (5, 5), (5, 6):
672:         for t in float, complex:
673:             A = np.ones((n, m), dtype=t)
674:             U, s, VH = svds(A, k)
675: 
676:             # Check some generic properties of svd.
677:             _check_svds(A, k, U, s, VH)
678: 
679:             # Check that the largest singular value is near sqrt(n*m)
680:             # and the other singular values have been forced to zero.
681:             assert_allclose(np.max(s), np.sqrt(n*m))
682:             assert_array_equal(sorted(s)[:-1], 0)
683: 
684: 
685: def test_svd_LM_zeros_matrix():
686:     # Check that svds can deal with matrices containing only zeros.
687:     k = 1
688:     for n, m in (3, 4), (4, 4), (4, 3):
689:         for t in float, complex:
690:             A = np.zeros((n, m), dtype=t)
691:             U, s, VH = svds(A, k)
692: 
693:             # Check some generic properties of svd.
694:             _check_svds(A, k, U, s, VH)
695: 
696:             # Check that the singular values are zero.
697:             assert_array_equal(s, 0)
698: 
699: 
700: def test_svd_LM_zeros_matrix_gh_3452():
701:     # Regression test for a github issue.
702:     # https://github.com/scipy/scipy/issues/3452
703:     # Note that for complex dype the size of this matrix is too small for k=1.
704:     n, m, k = 4, 2, 1
705:     A = np.zeros((n, m))
706:     U, s, VH = svds(A, k)
707: 
708:     # Check some generic properties of svd.
709:     _check_svds(A, k, U, s, VH)
710: 
711:     # Check that the singular values are zero.
712:     assert_array_equal(s, 0)
713: 
714: 
715: class CheckingLinearOperator(LinearOperator):
716:     def __init__(self, A):
717:         self.A = A
718:         self.dtype = A.dtype
719:         self.shape = A.shape
720: 
721:     def _matvec(self, x):
722:         assert_equal(max(x.shape), np.size(x))
723:         return self.A.dot(x)
724: 
725:     def _rmatvec(self, x):
726:         assert_equal(max(x.shape), np.size(x))
727:         return self.A.T.conjugate().dot(x)
728: 
729: 
730: def test_svd_linop():
731:     nmks = [(6, 7, 3),
732:             (9, 5, 4),
733:             (10, 8, 5)]
734: 
735:     def reorder(args):
736:         U, s, VH = args
737:         j = np.argsort(s)
738:         return U[:,j], s[j], VH[j,:]
739: 
740:     for n, m, k in nmks:
741:         # Test svds on a LinearOperator.
742:         A = np.random.RandomState(52).randn(n, m)
743:         L = CheckingLinearOperator(A)
744: 
745:         v0 = np.ones(min(A.shape))
746: 
747:         U1, s1, VH1 = reorder(svds(A, k, v0=v0))
748:         U2, s2, VH2 = reorder(svds(L, k, v0=v0))
749: 
750:         assert_allclose(np.abs(U1), np.abs(U2))
751:         assert_allclose(s1, s2)
752:         assert_allclose(np.abs(VH1), np.abs(VH2))
753:         assert_allclose(np.dot(U1, np.dot(np.diag(s1), VH1)),
754:                         np.dot(U2, np.dot(np.diag(s2), VH2)))
755: 
756:         # Try again with which="SM".
757:         A = np.random.RandomState(1909).randn(n, m)
758:         L = CheckingLinearOperator(A)
759: 
760:         U1, s1, VH1 = reorder(svds(A, k, which="SM"))
761:         U2, s2, VH2 = reorder(svds(L, k, which="SM"))
762: 
763:         assert_allclose(np.abs(U1), np.abs(U2))
764:         assert_allclose(s1, s2)
765:         assert_allclose(np.abs(VH1), np.abs(VH2))
766:         assert_allclose(np.dot(U1, np.dot(np.diag(s1), VH1)),
767:                         np.dot(U2, np.dot(np.diag(s2), VH2)))
768: 
769:         if k < min(n, m) - 1:
770:             # Complex input and explicit which="LM".
771:             for (dt, eps) in [(complex, 1e-7), (np.complex64, 1e-3)]:
772:                 rng = np.random.RandomState(1648)
773:                 A = (rng.randn(n, m) + 1j * rng.randn(n, m)).astype(dt)
774:                 L = CheckingLinearOperator(A)
775: 
776:                 U1, s1, VH1 = reorder(svds(A, k, which="LM"))
777:                 U2, s2, VH2 = reorder(svds(L, k, which="LM"))
778: 
779:                 assert_allclose(np.abs(U1), np.abs(U2), rtol=eps)
780:                 assert_allclose(s1, s2, rtol=eps)
781:                 assert_allclose(np.abs(VH1), np.abs(VH2), rtol=eps)
782:                 assert_allclose(np.dot(U1, np.dot(np.diag(s1), VH1)),
783:                                 np.dot(U2, np.dot(np.diag(s2), VH2)), rtol=eps)
784: 
785: 
786: def test_linearoperator_deallocation():
787:     # Check that the linear operators used by the Arpack wrappers are
788:     # deallocatable by reference counting -- they are big objects, so
789:     # Python's cyclic GC may not collect them fast enough before
790:     # running out of memory if eigs/eigsh are called in a tight loop.
791: 
792:     M_d = np.eye(10)
793:     M_s = csc_matrix(M_d)
794:     M_o = aslinearoperator(M_d)
795: 
796:     with assert_deallocated(lambda: arpack.SpLuInv(M_s)):
797:         pass
798:     with assert_deallocated(lambda: arpack.LuInv(M_d)):
799:         pass
800:     with assert_deallocated(lambda: arpack.IterInv(M_s)):
801:         pass
802:     with assert_deallocated(lambda: arpack.IterOpInv(M_o, None, 0.3)):
803:         pass
804:     with assert_deallocated(lambda: arpack.IterOpInv(M_o, M_o, 0.3)):
805:         pass
806: 
807: 
808: def test_svds_partial_return():
809:     x = np.array([[1, 2, 3],
810:                   [3, 4, 3],
811:                   [1, 0, 2],
812:                   [0, 0, 1]], float)
813:     # test vertical matrix
814:     z = csr_matrix(x)
815:     vh_full = svds(z, 2)[-1]
816:     vh_partial = svds(z, 2, return_singular_vectors='vh')[-1]
817:     dvh = np.linalg.norm(np.abs(vh_full) - np.abs(vh_partial))
818:     if dvh > 1e-10:
819:         raise AssertionError('right eigenvector matrices differ when using return_singular_vectors parameter')
820:     if svds(z, 2, return_singular_vectors='vh')[0] is not None:
821:         raise AssertionError('left eigenvector matrix was computed when it should not have been')
822:     # test horizontal matrix
823:     z = csr_matrix(x.T)
824:     u_full = svds(z, 2)[0]
825:     u_partial = svds(z, 2, return_singular_vectors='vh')[0]
826:     du = np.linalg.norm(np.abs(u_full) - np.abs(u_partial))
827:     if du > 1e-10:
828:         raise AssertionError('left eigenvector matrices differ when using return_singular_vectors parameter')
829:     if svds(z, 2, return_singular_vectors='u')[-1] is not None:
830:         raise AssertionError('right eigenvector matrix was computed when it should not have been')
831: 
832: def test_svds_wrong_eigen_type():
833:     # Regression test for a github issue.
834:     # https://github.com/scipy/scipy/issues/4590
835:     # Function was not checking for eigenvalue type and unintended
836:     # values could be returned.
837:     x = np.array([[1, 2, 3],
838:                   [3, 4, 3],
839:                   [1, 0, 2],
840:                   [0, 0, 1]], float)
841:     assert_raises(ValueError, svds, x, 1, which='LA')
842: 
843: 
844: def test_parallel_threads():
845:     results = []
846:     v0 = np.random.rand(50)
847: 
848:     def worker():
849:         x = diags([1, -2, 1], [-1, 0, 1], shape=(50, 50))
850:         w, v = eigs(x, k=3, v0=v0)
851:         results.append(w)
852: 
853:         w, v = eigsh(x, k=3, v0=v0)
854:         results.append(w)
855: 
856:     threads = [threading.Thread(target=worker) for k in range(10)]
857:     for t in threads:
858:         t.start()
859:     for t in threads:
860:         t.join()
861: 
862:     worker()
863: 
864:     for r in results:
865:         assert_allclose(r, results[-1])
866: 
867: 
868: def test_reentering():
869:     # Just some linear operator that calls eigs recursively
870:     def A_matvec(x):
871:         x = diags([1, -2, 1], [-1, 0, 1], shape=(50, 50))
872:         w, v = eigs(x, k=1)
873:         return v / w[0]
874:     A = LinearOperator(matvec=A_matvec, dtype=float, shape=(50, 50))
875: 
876:     # The Fortran code is not reentrant, so this fails (gracefully, not crashing)
877:     assert_raises(RuntimeError, eigs, A, k=1)
878:     assert_raises(RuntimeError, eigsh, A, k=1)
879: 
880: 
881: def test_regression_arpackng_1315():
882:     # Check that issue arpack-ng/#1315 is not present.
883:     # Adapted from arpack-ng/TESTS/bug_1315_single.c
884:     # If this fails, then the installed ARPACK library is faulty.
885: 
886:     for dtype in [np.float32, np.float64]:
887:         np.random.seed(1234)
888: 
889:         w0 = np.arange(1, 1000+1).astype(dtype)
890:         A = diags([w0], [0], shape=(1000, 1000))
891: 
892:         v0 = np.random.rand(1000).astype(dtype)
893:         w, v = eigs(A, k=9, ncv=2*9+1, which="LM", v0=v0)
894: 
895:         assert_allclose(np.sort(w), np.sort(w0[-9:]),
896:                         rtol=1e-4)
897: 
898: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################


# Assigning a Str to a Name (line 3):

# Assigning a Str to a Name (line 3):
str_401409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, (-1)), 'str', '\nTo run tests locally:\n  python tests/test_arpack.py [-l<int>] [-v<int>]\n\n')
# Assigning a type to the variable '__usage__' (line 3)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3, 0), '__usage__', str_401409)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 9, 0))

# 'import threading' statement (line 9)
import threading

import_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'threading', threading, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 11, 0))

# 'import numpy' statement (line 11)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401410 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'numpy')

if (type(import_401410) is not StypyTypeError):

    if (import_401410 != 'pyd_module'):
        __import__(import_401410)
        sys_modules_401411 = sys.modules[import_401410]
        import_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'np', sys_modules_401411.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 11)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 11, 0), 'numpy', import_401410)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 13, 0))

# 'from numpy.testing import assert_allclose, assert_array_almost_equal_nulp, assert_equal, assert_array_equal' statement (line 13)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401412 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'numpy.testing')

if (type(import_401412) is not StypyTypeError):

    if (import_401412 != 'pyd_module'):
        __import__(import_401412)
        sys_modules_401413 = sys.modules[import_401412]
        import_from_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'numpy.testing', sys_modules_401413.module_type_store, module_type_store, ['assert_allclose', 'assert_array_almost_equal_nulp', 'assert_equal', 'assert_array_equal'])
        nest_module(stypy.reporting.localization.Localization(__file__, 13, 0), __file__, sys_modules_401413, sys_modules_401413.module_type_store, module_type_store)
    else:
        from numpy.testing import assert_allclose, assert_array_almost_equal_nulp, assert_equal, assert_array_equal

        import_from_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'numpy.testing', None, module_type_store, ['assert_allclose', 'assert_array_almost_equal_nulp', 'assert_equal', 'assert_array_equal'], [assert_allclose, assert_array_almost_equal_nulp, assert_equal, assert_array_equal])

else:
    # Assigning a type to the variable 'numpy.testing' (line 13)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 13, 0), 'numpy.testing', import_401412)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 15, 0))

# 'from pytest import assert_raises' statement (line 15)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401414 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'pytest')

if (type(import_401414) is not StypyTypeError):

    if (import_401414 != 'pyd_module'):
        __import__(import_401414)
        sys_modules_401415 = sys.modules[import_401414]
        import_from_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'pytest', sys_modules_401415.module_type_store, module_type_store, ['raises'])
        nest_module(stypy.reporting.localization.Localization(__file__, 15, 0), __file__, sys_modules_401415, sys_modules_401415.module_type_store, module_type_store)
    else:
        from pytest import raises as assert_raises

        import_from_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'pytest', None, module_type_store, ['raises'], [assert_raises])

else:
    # Assigning a type to the variable 'pytest' (line 15)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 15, 0), 'pytest', import_401414)

# Adding an alias
module_type_store.add_alias('assert_raises', 'raises')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 17, 0))

# 'from numpy import dot, conj, random' statement (line 17)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401416 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'numpy')

if (type(import_401416) is not StypyTypeError):

    if (import_401416 != 'pyd_module'):
        __import__(import_401416)
        sys_modules_401417 = sys.modules[import_401416]
        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'numpy', sys_modules_401417.module_type_store, module_type_store, ['dot', 'conj', 'random'])
        nest_module(stypy.reporting.localization.Localization(__file__, 17, 0), __file__, sys_modules_401417, sys_modules_401417.module_type_store, module_type_store)
    else:
        from numpy import dot, conj, random

        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'numpy', None, module_type_store, ['dot', 'conj', 'random'], [dot, conj, random])

else:
    # Assigning a type to the variable 'numpy' (line 17)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 17, 0), 'numpy', import_401416)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 18, 0))

# 'from scipy.linalg import eig, eigh' statement (line 18)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401418 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy.linalg')

if (type(import_401418) is not StypyTypeError):

    if (import_401418 != 'pyd_module'):
        __import__(import_401418)
        sys_modules_401419 = sys.modules[import_401418]
        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy.linalg', sys_modules_401419.module_type_store, module_type_store, ['eig', 'eigh'])
        nest_module(stypy.reporting.localization.Localization(__file__, 18, 0), __file__, sys_modules_401419, sys_modules_401419.module_type_store, module_type_store)
    else:
        from scipy.linalg import eig, eigh

        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy.linalg', None, module_type_store, ['eig', 'eigh'], [eig, eigh])

else:
    # Assigning a type to the variable 'scipy.linalg' (line 18)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy.linalg', import_401418)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 19, 0))

# 'from scipy.sparse import csc_matrix, csr_matrix, isspmatrix, diags' statement (line 19)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401420 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.sparse')

if (type(import_401420) is not StypyTypeError):

    if (import_401420 != 'pyd_module'):
        __import__(import_401420)
        sys_modules_401421 = sys.modules[import_401420]
        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.sparse', sys_modules_401421.module_type_store, module_type_store, ['csc_matrix', 'csr_matrix', 'isspmatrix', 'diags'])
        nest_module(stypy.reporting.localization.Localization(__file__, 19, 0), __file__, sys_modules_401421, sys_modules_401421.module_type_store, module_type_store)
    else:
        from scipy.sparse import csc_matrix, csr_matrix, isspmatrix, diags

        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.sparse', None, module_type_store, ['csc_matrix', 'csr_matrix', 'isspmatrix', 'diags'], [csc_matrix, csr_matrix, isspmatrix, diags])

else:
    # Assigning a type to the variable 'scipy.sparse' (line 19)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy.sparse', import_401420)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 20, 0))

# 'from scipy.sparse.linalg import LinearOperator, aslinearoperator' statement (line 20)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401422 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'scipy.sparse.linalg')

if (type(import_401422) is not StypyTypeError):

    if (import_401422 != 'pyd_module'):
        __import__(import_401422)
        sys_modules_401423 = sys.modules[import_401422]
        import_from_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'scipy.sparse.linalg', sys_modules_401423.module_type_store, module_type_store, ['LinearOperator', 'aslinearoperator'])
        nest_module(stypy.reporting.localization.Localization(__file__, 20, 0), __file__, sys_modules_401423, sys_modules_401423.module_type_store, module_type_store)
    else:
        from scipy.sparse.linalg import LinearOperator, aslinearoperator

        import_from_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'scipy.sparse.linalg', None, module_type_store, ['LinearOperator', 'aslinearoperator'], [LinearOperator, aslinearoperator])

else:
    # Assigning a type to the variable 'scipy.sparse.linalg' (line 20)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 0), 'scipy.sparse.linalg', import_401422)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 21, 0))

# 'from scipy.sparse.linalg.eigen.arpack import eigs, eigsh, svds, ArpackNoConvergence, arpack' statement (line 21)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401424 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'scipy.sparse.linalg.eigen.arpack')

if (type(import_401424) is not StypyTypeError):

    if (import_401424 != 'pyd_module'):
        __import__(import_401424)
        sys_modules_401425 = sys.modules[import_401424]
        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'scipy.sparse.linalg.eigen.arpack', sys_modules_401425.module_type_store, module_type_store, ['eigs', 'eigsh', 'svds', 'ArpackNoConvergence', 'arpack'])
        nest_module(stypy.reporting.localization.Localization(__file__, 21, 0), __file__, sys_modules_401425, sys_modules_401425.module_type_store, module_type_store)
    else:
        from scipy.sparse.linalg.eigen.arpack import eigs, eigsh, svds, ArpackNoConvergence, arpack

        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'scipy.sparse.linalg.eigen.arpack', None, module_type_store, ['eigs', 'eigsh', 'svds', 'ArpackNoConvergence', 'arpack'], [eigs, eigsh, svds, ArpackNoConvergence, arpack])

else:
    # Assigning a type to the variable 'scipy.sparse.linalg.eigen.arpack' (line 21)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 0), 'scipy.sparse.linalg.eigen.arpack', import_401424)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 24, 0))

# 'from scipy.linalg import svd, hilbert' statement (line 24)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401426 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'scipy.linalg')

if (type(import_401426) is not StypyTypeError):

    if (import_401426 != 'pyd_module'):
        __import__(import_401426)
        sys_modules_401427 = sys.modules[import_401426]
        import_from_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'scipy.linalg', sys_modules_401427.module_type_store, module_type_store, ['svd', 'hilbert'])
        nest_module(stypy.reporting.localization.Localization(__file__, 24, 0), __file__, sys_modules_401427, sys_modules_401427.module_type_store, module_type_store)
    else:
        from scipy.linalg import svd, hilbert

        import_from_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'scipy.linalg', None, module_type_store, ['svd', 'hilbert'], [svd, hilbert])

else:
    # Assigning a type to the variable 'scipy.linalg' (line 24)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 0), 'scipy.linalg', import_401426)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 26, 0))

# 'from scipy._lib._gcutils import assert_deallocated' statement (line 26)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')
import_401428 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'scipy._lib._gcutils')

if (type(import_401428) is not StypyTypeError):

    if (import_401428 != 'pyd_module'):
        __import__(import_401428)
        sys_modules_401429 = sys.modules[import_401428]
        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'scipy._lib._gcutils', sys_modules_401429.module_type_store, module_type_store, ['assert_deallocated'])
        nest_module(stypy.reporting.localization.Localization(__file__, 26, 0), __file__, sys_modules_401429, sys_modules_401429.module_type_store, module_type_store)
    else:
        from scipy._lib._gcutils import assert_deallocated

        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'scipy._lib._gcutils', None, module_type_store, ['assert_deallocated'], [assert_deallocated])

else:
    # Assigning a type to the variable 'scipy._lib._gcutils' (line 26)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 0), 'scipy._lib._gcutils', import_401428)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/tests/')


# Assigning a Dict to a Name (line 30):

# Assigning a Dict to a Name (line 30):

# Obtaining an instance of the builtin type 'dict' (line 30)
dict_401430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 11), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 30)
# Adding element type (key, value) (line 30)
str_401431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 12), 'str', 'f')
int_401432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 17), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 30, 11), dict_401430, (str_401431, int_401432))
# Adding element type (key, value) (line 30)
str_401433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 20), 'str', 'd')
int_401434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 25), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 30, 11), dict_401430, (str_401433, int_401434))
# Adding element type (key, value) (line 30)
str_401435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 29), 'str', 'F')
int_401436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 34), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 30, 11), dict_401430, (str_401435, int_401436))
# Adding element type (key, value) (line 30)
str_401437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 37), 'str', 'D')
int_401438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 42), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 30, 11), dict_401430, (str_401437, int_401438))

# Assigning a type to the variable '_ndigits' (line 30)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 0), '_ndigits', dict_401430)

@norecursion
def _get_test_tolerance(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 33)
    None_401439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 33, 43), 'None')
    defaults = [None_401439]
    # Create a new context for function '_get_test_tolerance'
    module_type_store = module_type_store.open_function_context('_get_test_tolerance', 33, 0, False)
    
    # Passed parameters checking function
    _get_test_tolerance.stypy_localization = localization
    _get_test_tolerance.stypy_type_of_self = None
    _get_test_tolerance.stypy_type_store = module_type_store
    _get_test_tolerance.stypy_function_name = '_get_test_tolerance'
    _get_test_tolerance.stypy_param_names_list = ['type_char', 'mattype']
    _get_test_tolerance.stypy_varargs_param_name = None
    _get_test_tolerance.stypy_kwargs_param_name = None
    _get_test_tolerance.stypy_call_defaults = defaults
    _get_test_tolerance.stypy_call_varargs = varargs
    _get_test_tolerance.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_get_test_tolerance', ['type_char', 'mattype'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_get_test_tolerance', localization, ['type_char', 'mattype'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_get_test_tolerance(...)' code ##################

    str_401440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, (-1)), 'str', "\n    Return tolerance values suitable for a given test:\n\n    Parameters\n    ----------\n    type_char : {'f', 'd', 'F', 'D'}\n        Data type in ARPACK eigenvalue problem\n    mattype : {csr_matrix, aslinearoperator, asarray}, optional\n        Linear operator type\n\n    Returns\n    -------\n    tol\n        Tolerance to pass to the ARPACK routine\n    rtol\n        Relative tolerance for outputs\n    atol\n        Absolute tolerance for outputs\n\n    ")
    
    # Assigning a Subscript to a Name (line 55):
    
    # Assigning a Subscript to a Name (line 55):
    
    # Obtaining the type of the subscript
    # Getting the type of 'type_char' (line 58)
    type_char_401441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 50), 'type_char')
    
    # Obtaining an instance of the builtin type 'dict' (line 55)
    dict_401442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 11), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 55)
    # Adding element type (key, value) (line 55)
    str_401443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 12), 'str', 'f')
    int_401444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 17), 'int')
    
    # Call to finfo(...): (line 55)
    # Processing the call arguments (line 55)
    # Getting the type of 'np' (line 55)
    np_401447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 33), 'np', False)
    # Obtaining the member 'float32' of a type (line 55)
    float32_401448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 33), np_401447, 'float32')
    # Processing the call keyword arguments (line 55)
    kwargs_401449 = {}
    # Getting the type of 'np' (line 55)
    np_401445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 24), 'np', False)
    # Obtaining the member 'finfo' of a type (line 55)
    finfo_401446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 24), np_401445, 'finfo')
    # Calling finfo(args, kwargs) (line 55)
    finfo_call_result_401450 = invoke(stypy.reporting.localization.Localization(__file__, 55, 24), finfo_401446, *[float32_401448], **kwargs_401449)
    
    # Obtaining the member 'eps' of a type (line 55)
    eps_401451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 24), finfo_call_result_401450, 'eps')
    # Applying the binary operator '*' (line 55)
    result_mul_401452 = python_operator(stypy.reporting.localization.Localization(__file__, 55, 17), '*', int_401444, eps_401451)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 55, 11), dict_401442, (str_401443, result_mul_401452))
    # Adding element type (key, value) (line 55)
    str_401453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 12), 'str', 'F')
    int_401454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 17), 'int')
    
    # Call to finfo(...): (line 56)
    # Processing the call arguments (line 56)
    # Getting the type of 'np' (line 56)
    np_401457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 33), 'np', False)
    # Obtaining the member 'float32' of a type (line 56)
    float32_401458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 56, 33), np_401457, 'float32')
    # Processing the call keyword arguments (line 56)
    kwargs_401459 = {}
    # Getting the type of 'np' (line 56)
    np_401455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 24), 'np', False)
    # Obtaining the member 'finfo' of a type (line 56)
    finfo_401456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 56, 24), np_401455, 'finfo')
    # Calling finfo(args, kwargs) (line 56)
    finfo_call_result_401460 = invoke(stypy.reporting.localization.Localization(__file__, 56, 24), finfo_401456, *[float32_401458], **kwargs_401459)
    
    # Obtaining the member 'eps' of a type (line 56)
    eps_401461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 56, 24), finfo_call_result_401460, 'eps')
    # Applying the binary operator '*' (line 56)
    result_mul_401462 = python_operator(stypy.reporting.localization.Localization(__file__, 56, 17), '*', int_401454, eps_401461)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 55, 11), dict_401442, (str_401453, result_mul_401462))
    # Adding element type (key, value) (line 55)
    str_401463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 12), 'str', 'd')
    int_401464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 17), 'int')
    
    # Call to finfo(...): (line 57)
    # Processing the call arguments (line 57)
    # Getting the type of 'np' (line 57)
    np_401467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 33), 'np', False)
    # Obtaining the member 'float64' of a type (line 57)
    float64_401468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 33), np_401467, 'float64')
    # Processing the call keyword arguments (line 57)
    kwargs_401469 = {}
    # Getting the type of 'np' (line 57)
    np_401465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 24), 'np', False)
    # Obtaining the member 'finfo' of a type (line 57)
    finfo_401466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 24), np_401465, 'finfo')
    # Calling finfo(args, kwargs) (line 57)
    finfo_call_result_401470 = invoke(stypy.reporting.localization.Localization(__file__, 57, 24), finfo_401466, *[float64_401468], **kwargs_401469)
    
    # Obtaining the member 'eps' of a type (line 57)
    eps_401471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 24), finfo_call_result_401470, 'eps')
    # Applying the binary operator '*' (line 57)
    result_mul_401472 = python_operator(stypy.reporting.localization.Localization(__file__, 57, 17), '*', int_401464, eps_401471)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 55, 11), dict_401442, (str_401463, result_mul_401472))
    # Adding element type (key, value) (line 55)
    str_401473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 58, 12), 'str', 'D')
    int_401474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 58, 17), 'int')
    
    # Call to finfo(...): (line 58)
    # Processing the call arguments (line 58)
    # Getting the type of 'np' (line 58)
    np_401477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 33), 'np', False)
    # Obtaining the member 'float64' of a type (line 58)
    float64_401478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 58, 33), np_401477, 'float64')
    # Processing the call keyword arguments (line 58)
    kwargs_401479 = {}
    # Getting the type of 'np' (line 58)
    np_401475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 24), 'np', False)
    # Obtaining the member 'finfo' of a type (line 58)
    finfo_401476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 58, 24), np_401475, 'finfo')
    # Calling finfo(args, kwargs) (line 58)
    finfo_call_result_401480 = invoke(stypy.reporting.localization.Localization(__file__, 58, 24), finfo_401476, *[float64_401478], **kwargs_401479)
    
    # Obtaining the member 'eps' of a type (line 58)
    eps_401481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 58, 24), finfo_call_result_401480, 'eps')
    # Applying the binary operator '*' (line 58)
    result_mul_401482 = python_operator(stypy.reporting.localization.Localization(__file__, 58, 17), '*', int_401474, eps_401481)
    
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 55, 11), dict_401442, (str_401473, result_mul_401482))
    
    # Obtaining the member '__getitem__' of a type (line 55)
    getitem___401483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 11), dict_401442, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 55)
    subscript_call_result_401484 = invoke(stypy.reporting.localization.Localization(__file__, 55, 11), getitem___401483, type_char_401441)
    
    # Assigning a type to the variable 'rtol' (line 55)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 55, 4), 'rtol', subscript_call_result_401484)
    
    # Assigning a Name to a Name (line 59):
    
    # Assigning a Name to a Name (line 59):
    # Getting the type of 'rtol' (line 59)
    rtol_401485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 11), 'rtol')
    # Assigning a type to the variable 'atol' (line 59)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 59, 4), 'atol', rtol_401485)
    
    # Assigning a Num to a Name (line 60):
    
    # Assigning a Num to a Name (line 60):
    int_401486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 60, 10), 'int')
    # Assigning a type to the variable 'tol' (line 60)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 60, 4), 'tol', int_401486)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'mattype' (line 62)
    mattype_401487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 7), 'mattype')
    # Getting the type of 'aslinearoperator' (line 62)
    aslinearoperator_401488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 18), 'aslinearoperator')
    # Applying the binary operator 'is' (line 62)
    result_is__401489 = python_operator(stypy.reporting.localization.Localization(__file__, 62, 7), 'is', mattype_401487, aslinearoperator_401488)
    
    
    # Getting the type of 'type_char' (line 62)
    type_char_401490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 39), 'type_char')
    
    # Obtaining an instance of the builtin type 'tuple' (line 62)
    tuple_401491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 62, 53), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 62)
    # Adding element type (line 62)
    str_401492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 62, 53), 'str', 'f')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 53), tuple_401491, str_401492)
    # Adding element type (line 62)
    str_401493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 62, 58), 'str', 'F')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 53), tuple_401491, str_401493)
    
    # Applying the binary operator 'in' (line 62)
    result_contains_401494 = python_operator(stypy.reporting.localization.Localization(__file__, 62, 39), 'in', type_char_401490, tuple_401491)
    
    # Applying the binary operator 'and' (line 62)
    result_and_keyword_401495 = python_operator(stypy.reporting.localization.Localization(__file__, 62, 7), 'and', result_is__401489, result_contains_401494)
    
    # Testing the type of an if condition (line 62)
    if_condition_401496 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 62, 4), result_and_keyword_401495)
    # Assigning a type to the variable 'if_condition_401496' (line 62)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 62, 4), 'if_condition_401496', if_condition_401496)
    # SSA begins for if statement (line 62)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 65):
    
    # Assigning a BinOp to a Name (line 65):
    int_401497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 65, 14), 'int')
    
    # Call to finfo(...): (line 65)
    # Processing the call arguments (line 65)
    # Getting the type of 'np' (line 65)
    np_401500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 28), 'np', False)
    # Obtaining the member 'float32' of a type (line 65)
    float32_401501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 65, 28), np_401500, 'float32')
    # Processing the call keyword arguments (line 65)
    kwargs_401502 = {}
    # Getting the type of 'np' (line 65)
    np_401498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 19), 'np', False)
    # Obtaining the member 'finfo' of a type (line 65)
    finfo_401499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 65, 19), np_401498, 'finfo')
    # Calling finfo(args, kwargs) (line 65)
    finfo_call_result_401503 = invoke(stypy.reporting.localization.Localization(__file__, 65, 19), finfo_401499, *[float32_401501], **kwargs_401502)
    
    # Obtaining the member 'eps' of a type (line 65)
    eps_401504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 65, 19), finfo_call_result_401503, 'eps')
    # Applying the binary operator '*' (line 65)
    result_mul_401505 = python_operator(stypy.reporting.localization.Localization(__file__, 65, 14), '*', int_401497, eps_401504)
    
    # Assigning a type to the variable 'tol' (line 65)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 'tol', result_mul_401505)
    
    # Getting the type of 'rtol' (line 66)
    rtol_401506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 8), 'rtol')
    int_401507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 16), 'int')
    # Applying the binary operator '*=' (line 66)
    result_imul_401508 = python_operator(stypy.reporting.localization.Localization(__file__, 66, 8), '*=', rtol_401506, int_401507)
    # Assigning a type to the variable 'rtol' (line 66)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 66, 8), 'rtol', result_imul_401508)
    
    # SSA join for if statement (line 62)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'mattype' (line 68)
    mattype_401509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 7), 'mattype')
    # Getting the type of 'csr_matrix' (line 68)
    csr_matrix_401510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 18), 'csr_matrix')
    # Applying the binary operator 'is' (line 68)
    result_is__401511 = python_operator(stypy.reporting.localization.Localization(__file__, 68, 7), 'is', mattype_401509, csr_matrix_401510)
    
    
    # Getting the type of 'type_char' (line 68)
    type_char_401512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 33), 'type_char')
    
    # Obtaining an instance of the builtin type 'tuple' (line 68)
    tuple_401513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 68, 47), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 68)
    # Adding element type (line 68)
    str_401514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 68, 47), 'str', 'f')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 68, 47), tuple_401513, str_401514)
    # Adding element type (line 68)
    str_401515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 68, 52), 'str', 'F')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 68, 47), tuple_401513, str_401515)
    
    # Applying the binary operator 'in' (line 68)
    result_contains_401516 = python_operator(stypy.reporting.localization.Localization(__file__, 68, 33), 'in', type_char_401512, tuple_401513)
    
    # Applying the binary operator 'and' (line 68)
    result_and_keyword_401517 = python_operator(stypy.reporting.localization.Localization(__file__, 68, 7), 'and', result_is__401511, result_contains_401516)
    
    # Testing the type of an if condition (line 68)
    if_condition_401518 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 68, 4), result_and_keyword_401517)
    # Assigning a type to the variable 'if_condition_401518' (line 68)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 4), 'if_condition_401518', if_condition_401518)
    # SSA begins for if statement (line 68)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'rtol' (line 70)
    rtol_401519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 8), 'rtol')
    int_401520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, 16), 'int')
    # Applying the binary operator '*=' (line 70)
    result_imul_401521 = python_operator(stypy.reporting.localization.Localization(__file__, 70, 8), '*=', rtol_401519, int_401520)
    # Assigning a type to the variable 'rtol' (line 70)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 70, 8), 'rtol', result_imul_401521)
    
    # SSA join for if statement (line 68)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 72)
    tuple_401522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 72, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 72)
    # Adding element type (line 72)
    # Getting the type of 'tol' (line 72)
    tol_401523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 11), 'tol')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 72, 11), tuple_401522, tol_401523)
    # Adding element type (line 72)
    # Getting the type of 'rtol' (line 72)
    rtol_401524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 16), 'rtol')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 72, 11), tuple_401522, rtol_401524)
    # Adding element type (line 72)
    # Getting the type of 'atol' (line 72)
    atol_401525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 22), 'atol')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 72, 11), tuple_401522, atol_401525)
    
    # Assigning a type to the variable 'stypy_return_type' (line 72)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 4), 'stypy_return_type', tuple_401522)
    
    # ################# End of '_get_test_tolerance(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_get_test_tolerance' in the type store
    # Getting the type of 'stypy_return_type' (line 33)
    stypy_return_type_401526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 33, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_401526)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_get_test_tolerance'
    return stypy_return_type_401526

# Assigning a type to the variable '_get_test_tolerance' (line 33)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 0), '_get_test_tolerance', _get_test_tolerance)

@norecursion
def generate_matrix(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'False' (line 75)
    False_401527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 31), 'False')
    # Getting the type of 'False' (line 75)
    False_401528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 48), 'False')
    # Getting the type of 'False' (line 76)
    False_401529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 33), 'False')
    # Getting the type of 'False' (line 76)
    False_401530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 47), 'False')
    defaults = [False_401527, False_401528, False_401529, False_401530]
    # Create a new context for function 'generate_matrix'
    module_type_store = module_type_store.open_function_context('generate_matrix', 75, 0, False)
    
    # Passed parameters checking function
    generate_matrix.stypy_localization = localization
    generate_matrix.stypy_type_of_self = None
    generate_matrix.stypy_type_store = module_type_store
    generate_matrix.stypy_function_name = 'generate_matrix'
    generate_matrix.stypy_param_names_list = ['N', 'complex', 'hermitian', 'pos_definite', 'sparse']
    generate_matrix.stypy_varargs_param_name = None
    generate_matrix.stypy_kwargs_param_name = None
    generate_matrix.stypy_call_defaults = defaults
    generate_matrix.stypy_call_varargs = varargs
    generate_matrix.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'generate_matrix', ['N', 'complex', 'hermitian', 'pos_definite', 'sparse'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'generate_matrix', localization, ['N', 'complex', 'hermitian', 'pos_definite', 'sparse'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'generate_matrix(...)' code ##################

    
    # Assigning a Call to a Name (line 77):
    
    # Assigning a Call to a Name (line 77):
    
    # Call to random(...): (line 77)
    # Processing the call arguments (line 77)
    
    # Obtaining an instance of the builtin type 'tuple' (line 77)
    tuple_401534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 26), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 77)
    # Adding element type (line 77)
    # Getting the type of 'N' (line 77)
    N_401535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 26), 'N', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 26), tuple_401534, N_401535)
    # Adding element type (line 77)
    # Getting the type of 'N' (line 77)
    N_401536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 28), 'N', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 77, 26), tuple_401534, N_401536)
    
    # Processing the call keyword arguments (line 77)
    kwargs_401537 = {}
    # Getting the type of 'np' (line 77)
    np_401531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'np', False)
    # Obtaining the member 'random' of a type (line 77)
    random_401532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 77, 8), np_401531, 'random')
    # Obtaining the member 'random' of a type (line 77)
    random_401533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 77, 8), random_401532, 'random')
    # Calling random(args, kwargs) (line 77)
    random_call_result_401538 = invoke(stypy.reporting.localization.Localization(__file__, 77, 8), random_401533, *[tuple_401534], **kwargs_401537)
    
    # Assigning a type to the variable 'M' (line 77)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 4), 'M', random_call_result_401538)
    
    # Getting the type of 'complex' (line 78)
    complex_401539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 7), 'complex')
    # Testing the type of an if condition (line 78)
    if_condition_401540 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 78, 4), complex_401539)
    # Assigning a type to the variable 'if_condition_401540' (line 78)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 4), 'if_condition_401540', if_condition_401540)
    # SSA begins for if statement (line 78)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 79):
    
    # Assigning a BinOp to a Name (line 79):
    # Getting the type of 'M' (line 79)
    M_401541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 12), 'M')
    complex_401542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 79, 16), 'complex')
    
    # Call to random(...): (line 79)
    # Processing the call arguments (line 79)
    
    # Obtaining an instance of the builtin type 'tuple' (line 79)
    tuple_401546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 79, 39), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 79)
    # Adding element type (line 79)
    # Getting the type of 'N' (line 79)
    N_401547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 39), 'N', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 79, 39), tuple_401546, N_401547)
    # Adding element type (line 79)
    # Getting the type of 'N' (line 79)
    N_401548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 41), 'N', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 79, 39), tuple_401546, N_401548)
    
    # Processing the call keyword arguments (line 79)
    kwargs_401549 = {}
    # Getting the type of 'np' (line 79)
    np_401543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 21), 'np', False)
    # Obtaining the member 'random' of a type (line 79)
    random_401544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 79, 21), np_401543, 'random')
    # Obtaining the member 'random' of a type (line 79)
    random_401545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 79, 21), random_401544, 'random')
    # Calling random(args, kwargs) (line 79)
    random_call_result_401550 = invoke(stypy.reporting.localization.Localization(__file__, 79, 21), random_401545, *[tuple_401546], **kwargs_401549)
    
    # Applying the binary operator '*' (line 79)
    result_mul_401551 = python_operator(stypy.reporting.localization.Localization(__file__, 79, 16), '*', complex_401542, random_call_result_401550)
    
    # Applying the binary operator '+' (line 79)
    result_add_401552 = python_operator(stypy.reporting.localization.Localization(__file__, 79, 12), '+', M_401541, result_mul_401551)
    
    # Assigning a type to the variable 'M' (line 79)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 79, 8), 'M', result_add_401552)
    # SSA join for if statement (line 78)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'hermitian' (line 81)
    hermitian_401553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 7), 'hermitian')
    # Testing the type of an if condition (line 81)
    if_condition_401554 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 81, 4), hermitian_401553)
    # Assigning a type to the variable 'if_condition_401554' (line 81)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 4), 'if_condition_401554', if_condition_401554)
    # SSA begins for if statement (line 81)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'pos_definite' (line 82)
    pos_definite_401555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 11), 'pos_definite')
    # Testing the type of an if condition (line 82)
    if_condition_401556 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 82, 8), pos_definite_401555)
    # Assigning a type to the variable 'if_condition_401556' (line 82)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 8), 'if_condition_401556', if_condition_401556)
    # SSA begins for if statement (line 82)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'sparse' (line 83)
    sparse_401557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 15), 'sparse')
    # Testing the type of an if condition (line 83)
    if_condition_401558 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 83, 12), sparse_401557)
    # Assigning a type to the variable 'if_condition_401558' (line 83)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 12), 'if_condition_401558', if_condition_401558)
    # SSA begins for if statement (line 83)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 84):
    
    # Assigning a Call to a Name (line 84):
    
    # Call to arange(...): (line 84)
    # Processing the call arguments (line 84)
    # Getting the type of 'N' (line 84)
    N_401561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 30), 'N', False)
    # Processing the call keyword arguments (line 84)
    kwargs_401562 = {}
    # Getting the type of 'np' (line 84)
    np_401559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 20), 'np', False)
    # Obtaining the member 'arange' of a type (line 84)
    arange_401560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 20), np_401559, 'arange')
    # Calling arange(args, kwargs) (line 84)
    arange_call_result_401563 = invoke(stypy.reporting.localization.Localization(__file__, 84, 20), arange_401560, *[N_401561], **kwargs_401562)
    
    # Assigning a type to the variable 'i' (line 84)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 16), 'i', arange_call_result_401563)
    
    # Assigning a Call to a Name (line 85):
    
    # Assigning a Call to a Name (line 85):
    
    # Call to randint(...): (line 85)
    # Processing the call arguments (line 85)
    # Getting the type of 'N' (line 85)
    N_401567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 38), 'N', False)
    # Processing the call keyword arguments (line 85)
    # Getting the type of 'N' (line 85)
    N_401568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 46), 'N', False)
    int_401569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 48), 'int')
    # Applying the binary operator '-' (line 85)
    result_sub_401570 = python_operator(stypy.reporting.localization.Localization(__file__, 85, 46), '-', N_401568, int_401569)
    
    keyword_401571 = result_sub_401570
    kwargs_401572 = {'size': keyword_401571}
    # Getting the type of 'np' (line 85)
    np_401564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 20), 'np', False)
    # Obtaining the member 'random' of a type (line 85)
    random_401565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 85, 20), np_401564, 'random')
    # Obtaining the member 'randint' of a type (line 85)
    randint_401566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 85, 20), random_401565, 'randint')
    # Calling randint(args, kwargs) (line 85)
    randint_call_result_401573 = invoke(stypy.reporting.localization.Localization(__file__, 85, 20), randint_401566, *[N_401567], **kwargs_401572)
    
    # Assigning a type to the variable 'j' (line 85)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 16), 'j', randint_call_result_401573)
    
    # Assigning a Call to a Tuple (line 86):
    
    # Assigning a Subscript to a Name (line 86):
    
    # Obtaining the type of the subscript
    int_401574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 16), 'int')
    
    # Call to meshgrid(...): (line 86)
    # Processing the call arguments (line 86)
    # Getting the type of 'i' (line 86)
    i_401577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 35), 'i', False)
    # Getting the type of 'j' (line 86)
    j_401578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 38), 'j', False)
    # Processing the call keyword arguments (line 86)
    kwargs_401579 = {}
    # Getting the type of 'np' (line 86)
    np_401575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 23), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 86)
    meshgrid_401576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 23), np_401575, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 86)
    meshgrid_call_result_401580 = invoke(stypy.reporting.localization.Localization(__file__, 86, 23), meshgrid_401576, *[i_401577, j_401578], **kwargs_401579)
    
    # Obtaining the member '__getitem__' of a type (line 86)
    getitem___401581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 16), meshgrid_call_result_401580, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 86)
    subscript_call_result_401582 = invoke(stypy.reporting.localization.Localization(__file__, 86, 16), getitem___401581, int_401574)
    
    # Assigning a type to the variable 'tuple_var_assignment_401307' (line 86)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'tuple_var_assignment_401307', subscript_call_result_401582)
    
    # Assigning a Subscript to a Name (line 86):
    
    # Obtaining the type of the subscript
    int_401583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 16), 'int')
    
    # Call to meshgrid(...): (line 86)
    # Processing the call arguments (line 86)
    # Getting the type of 'i' (line 86)
    i_401586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 35), 'i', False)
    # Getting the type of 'j' (line 86)
    j_401587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 38), 'j', False)
    # Processing the call keyword arguments (line 86)
    kwargs_401588 = {}
    # Getting the type of 'np' (line 86)
    np_401584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 23), 'np', False)
    # Obtaining the member 'meshgrid' of a type (line 86)
    meshgrid_401585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 23), np_401584, 'meshgrid')
    # Calling meshgrid(args, kwargs) (line 86)
    meshgrid_call_result_401589 = invoke(stypy.reporting.localization.Localization(__file__, 86, 23), meshgrid_401585, *[i_401586, j_401587], **kwargs_401588)
    
    # Obtaining the member '__getitem__' of a type (line 86)
    getitem___401590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 16), meshgrid_call_result_401589, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 86)
    subscript_call_result_401591 = invoke(stypy.reporting.localization.Localization(__file__, 86, 16), getitem___401590, int_401583)
    
    # Assigning a type to the variable 'tuple_var_assignment_401308' (line 86)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'tuple_var_assignment_401308', subscript_call_result_401591)
    
    # Assigning a Name to a Name (line 86):
    # Getting the type of 'tuple_var_assignment_401307' (line 86)
    tuple_var_assignment_401307_401592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'tuple_var_assignment_401307')
    # Assigning a type to the variable 'i' (line 86)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'i', tuple_var_assignment_401307_401592)
    
    # Assigning a Name to a Name (line 86):
    # Getting the type of 'tuple_var_assignment_401308' (line 86)
    tuple_var_assignment_401308_401593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'tuple_var_assignment_401308')
    # Assigning a type to the variable 'j' (line 86)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 19), 'j', tuple_var_assignment_401308_401593)
    
    # Assigning a Num to a Subscript (line 87):
    
    # Assigning a Num to a Subscript (line 87):
    int_401594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 87, 25), 'int')
    # Getting the type of 'M' (line 87)
    M_401595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 16), 'M')
    
    # Obtaining an instance of the builtin type 'tuple' (line 87)
    tuple_401596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 87, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 87)
    # Adding element type (line 87)
    # Getting the type of 'i' (line 87)
    i_401597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 18), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 87, 18), tuple_401596, i_401597)
    # Adding element type (line 87)
    # Getting the type of 'j' (line 87)
    j_401598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 20), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 87, 18), tuple_401596, j_401598)
    
    # Storing an element on a container (line 87)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 87, 16), M_401595, (tuple_401596, int_401594))
    # SSA join for if statement (line 83)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 88):
    
    # Assigning a Call to a Name (line 88):
    
    # Call to dot(...): (line 88)
    # Processing the call arguments (line 88)
    
    # Call to conj(...): (line 88)
    # Processing the call keyword arguments (line 88)
    kwargs_401603 = {}
    # Getting the type of 'M' (line 88)
    M_401601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 23), 'M', False)
    # Obtaining the member 'conj' of a type (line 88)
    conj_401602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 88, 23), M_401601, 'conj')
    # Calling conj(args, kwargs) (line 88)
    conj_call_result_401604 = invoke(stypy.reporting.localization.Localization(__file__, 88, 23), conj_401602, *[], **kwargs_401603)
    
    # Getting the type of 'M' (line 88)
    M_401605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 33), 'M', False)
    # Obtaining the member 'T' of a type (line 88)
    T_401606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 88, 33), M_401605, 'T')
    # Processing the call keyword arguments (line 88)
    kwargs_401607 = {}
    # Getting the type of 'np' (line 88)
    np_401599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 16), 'np', False)
    # Obtaining the member 'dot' of a type (line 88)
    dot_401600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 88, 16), np_401599, 'dot')
    # Calling dot(args, kwargs) (line 88)
    dot_call_result_401608 = invoke(stypy.reporting.localization.Localization(__file__, 88, 16), dot_401600, *[conj_call_result_401604, T_401606], **kwargs_401607)
    
    # Assigning a type to the variable 'M' (line 88)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 12), 'M', dot_call_result_401608)
    # SSA branch for the else part of an if statement (line 82)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 90):
    
    # Assigning a Call to a Name (line 90):
    
    # Call to dot(...): (line 90)
    # Processing the call arguments (line 90)
    
    # Call to conj(...): (line 90)
    # Processing the call keyword arguments (line 90)
    kwargs_401613 = {}
    # Getting the type of 'M' (line 90)
    M_401611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 23), 'M', False)
    # Obtaining the member 'conj' of a type (line 90)
    conj_401612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 23), M_401611, 'conj')
    # Calling conj(args, kwargs) (line 90)
    conj_call_result_401614 = invoke(stypy.reporting.localization.Localization(__file__, 90, 23), conj_401612, *[], **kwargs_401613)
    
    # Getting the type of 'M' (line 90)
    M_401615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 33), 'M', False)
    # Obtaining the member 'T' of a type (line 90)
    T_401616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 33), M_401615, 'T')
    # Processing the call keyword arguments (line 90)
    kwargs_401617 = {}
    # Getting the type of 'np' (line 90)
    np_401609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 16), 'np', False)
    # Obtaining the member 'dot' of a type (line 90)
    dot_401610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 16), np_401609, 'dot')
    # Calling dot(args, kwargs) (line 90)
    dot_call_result_401618 = invoke(stypy.reporting.localization.Localization(__file__, 90, 16), dot_401610, *[conj_call_result_401614, T_401616], **kwargs_401617)
    
    # Assigning a type to the variable 'M' (line 90)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 12), 'M', dot_call_result_401618)
    
    # Getting the type of 'sparse' (line 91)
    sparse_401619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 15), 'sparse')
    # Testing the type of an if condition (line 91)
    if_condition_401620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 91, 12), sparse_401619)
    # Assigning a type to the variable 'if_condition_401620' (line 91)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 12), 'if_condition_401620', if_condition_401620)
    # SSA begins for if statement (line 91)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 92):
    
    # Assigning a Call to a Name (line 92):
    
    # Call to randint(...): (line 92)
    # Processing the call arguments (line 92)
    # Getting the type of 'N' (line 92)
    N_401624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 38), 'N', False)
    # Processing the call keyword arguments (line 92)
    # Getting the type of 'N' (line 92)
    N_401625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 46), 'N', False)
    # Getting the type of 'N' (line 92)
    N_401626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 50), 'N', False)
    # Applying the binary operator '*' (line 92)
    result_mul_401627 = python_operator(stypy.reporting.localization.Localization(__file__, 92, 46), '*', N_401625, N_401626)
    
    int_401628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 55), 'int')
    # Applying the binary operator '//' (line 92)
    result_floordiv_401629 = python_operator(stypy.reporting.localization.Localization(__file__, 92, 52), '//', result_mul_401627, int_401628)
    
    keyword_401630 = result_floordiv_401629
    kwargs_401631 = {'size': keyword_401630}
    # Getting the type of 'np' (line 92)
    np_401621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 20), 'np', False)
    # Obtaining the member 'random' of a type (line 92)
    random_401622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 92, 20), np_401621, 'random')
    # Obtaining the member 'randint' of a type (line 92)
    randint_401623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 92, 20), random_401622, 'randint')
    # Calling randint(args, kwargs) (line 92)
    randint_call_result_401632 = invoke(stypy.reporting.localization.Localization(__file__, 92, 20), randint_401623, *[N_401624], **kwargs_401631)
    
    # Assigning a type to the variable 'i' (line 92)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 16), 'i', randint_call_result_401632)
    
    # Assigning a Call to a Name (line 93):
    
    # Assigning a Call to a Name (line 93):
    
    # Call to randint(...): (line 93)
    # Processing the call arguments (line 93)
    # Getting the type of 'N' (line 93)
    N_401636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 38), 'N', False)
    # Processing the call keyword arguments (line 93)
    # Getting the type of 'N' (line 93)
    N_401637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 46), 'N', False)
    # Getting the type of 'N' (line 93)
    N_401638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 50), 'N', False)
    # Applying the binary operator '*' (line 93)
    result_mul_401639 = python_operator(stypy.reporting.localization.Localization(__file__, 93, 46), '*', N_401637, N_401638)
    
    int_401640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 93, 55), 'int')
    # Applying the binary operator '//' (line 93)
    result_floordiv_401641 = python_operator(stypy.reporting.localization.Localization(__file__, 93, 52), '//', result_mul_401639, int_401640)
    
    keyword_401642 = result_floordiv_401641
    kwargs_401643 = {'size': keyword_401642}
    # Getting the type of 'np' (line 93)
    np_401633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 20), 'np', False)
    # Obtaining the member 'random' of a type (line 93)
    random_401634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 93, 20), np_401633, 'random')
    # Obtaining the member 'randint' of a type (line 93)
    randint_401635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 93, 20), random_401634, 'randint')
    # Calling randint(args, kwargs) (line 93)
    randint_call_result_401644 = invoke(stypy.reporting.localization.Localization(__file__, 93, 20), randint_401635, *[N_401636], **kwargs_401643)
    
    # Assigning a type to the variable 'j' (line 93)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 16), 'j', randint_call_result_401644)
    
    # Assigning a Call to a Name (line 94):
    
    # Assigning a Call to a Name (line 94):
    
    # Call to where(...): (line 94)
    # Processing the call arguments (line 94)
    
    # Getting the type of 'i' (line 94)
    i_401647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 31), 'i', False)
    # Getting the type of 'j' (line 94)
    j_401648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 36), 'j', False)
    # Applying the binary operator '==' (line 94)
    result_eq_401649 = python_operator(stypy.reporting.localization.Localization(__file__, 94, 31), '==', i_401647, j_401648)
    
    # Processing the call keyword arguments (line 94)
    kwargs_401650 = {}
    # Getting the type of 'np' (line 94)
    np_401645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 22), 'np', False)
    # Obtaining the member 'where' of a type (line 94)
    where_401646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 94, 22), np_401645, 'where')
    # Calling where(args, kwargs) (line 94)
    where_call_result_401651 = invoke(stypy.reporting.localization.Localization(__file__, 94, 22), where_401646, *[result_eq_401649], **kwargs_401650)
    
    # Assigning a type to the variable 'ind' (line 94)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 94, 16), 'ind', where_call_result_401651)
    
    # Assigning a BinOp to a Subscript (line 95):
    
    # Assigning a BinOp to a Subscript (line 95):
    
    # Obtaining the type of the subscript
    # Getting the type of 'ind' (line 95)
    ind_401652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 28), 'ind')
    # Getting the type of 'j' (line 95)
    j_401653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 26), 'j')
    # Obtaining the member '__getitem__' of a type (line 95)
    getitem___401654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 95, 26), j_401653, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 95)
    subscript_call_result_401655 = invoke(stypy.reporting.localization.Localization(__file__, 95, 26), getitem___401654, ind_401652)
    
    int_401656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 35), 'int')
    # Applying the binary operator '+' (line 95)
    result_add_401657 = python_operator(stypy.reporting.localization.Localization(__file__, 95, 26), '+', subscript_call_result_401655, int_401656)
    
    # Getting the type of 'N' (line 95)
    N_401658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 40), 'N')
    # Applying the binary operator '%' (line 95)
    result_mod_401659 = python_operator(stypy.reporting.localization.Localization(__file__, 95, 25), '%', result_add_401657, N_401658)
    
    # Getting the type of 'j' (line 95)
    j_401660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 16), 'j')
    # Getting the type of 'ind' (line 95)
    ind_401661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 18), 'ind')
    # Storing an element on a container (line 95)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 95, 16), j_401660, (ind_401661, result_mod_401659))
    
    # Assigning a Num to a Subscript (line 96):
    
    # Assigning a Num to a Subscript (line 96):
    int_401662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 25), 'int')
    # Getting the type of 'M' (line 96)
    M_401663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 16), 'M')
    
    # Obtaining an instance of the builtin type 'tuple' (line 96)
    tuple_401664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 96)
    # Adding element type (line 96)
    # Getting the type of 'i' (line 96)
    i_401665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 18), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 18), tuple_401664, i_401665)
    # Adding element type (line 96)
    # Getting the type of 'j' (line 96)
    j_401666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 20), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 18), tuple_401664, j_401666)
    
    # Storing an element on a container (line 96)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), M_401663, (tuple_401664, int_401662))
    
    # Assigning a Num to a Subscript (line 97):
    
    # Assigning a Num to a Subscript (line 97):
    int_401667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 25), 'int')
    # Getting the type of 'M' (line 97)
    M_401668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 16), 'M')
    
    # Obtaining an instance of the builtin type 'tuple' (line 97)
    tuple_401669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 97)
    # Adding element type (line 97)
    # Getting the type of 'j' (line 97)
    j_401670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 18), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 97, 18), tuple_401669, j_401670)
    # Adding element type (line 97)
    # Getting the type of 'i' (line 97)
    i_401671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 20), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 97, 18), tuple_401669, i_401671)
    
    # Storing an element on a container (line 97)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 97, 16), M_401668, (tuple_401669, int_401667))
    # SSA join for if statement (line 91)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 82)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 81)
    module_type_store.open_ssa_branch('else')
    
    # Getting the type of 'sparse' (line 99)
    sparse_401672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 11), 'sparse')
    # Testing the type of an if condition (line 99)
    if_condition_401673 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 99, 8), sparse_401672)
    # Assigning a type to the variable 'if_condition_401673' (line 99)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'if_condition_401673', if_condition_401673)
    # SSA begins for if statement (line 99)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 100):
    
    # Assigning a Call to a Name (line 100):
    
    # Call to randint(...): (line 100)
    # Processing the call arguments (line 100)
    # Getting the type of 'N' (line 100)
    N_401677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 34), 'N', False)
    # Processing the call keyword arguments (line 100)
    # Getting the type of 'N' (line 100)
    N_401678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 42), 'N', False)
    # Getting the type of 'N' (line 100)
    N_401679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 46), 'N', False)
    # Applying the binary operator '*' (line 100)
    result_mul_401680 = python_operator(stypy.reporting.localization.Localization(__file__, 100, 42), '*', N_401678, N_401679)
    
    int_401681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 100, 51), 'int')
    # Applying the binary operator '//' (line 100)
    result_floordiv_401682 = python_operator(stypy.reporting.localization.Localization(__file__, 100, 48), '//', result_mul_401680, int_401681)
    
    keyword_401683 = result_floordiv_401682
    kwargs_401684 = {'size': keyword_401683}
    # Getting the type of 'np' (line 100)
    np_401674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 16), 'np', False)
    # Obtaining the member 'random' of a type (line 100)
    random_401675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 100, 16), np_401674, 'random')
    # Obtaining the member 'randint' of a type (line 100)
    randint_401676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 100, 16), random_401675, 'randint')
    # Calling randint(args, kwargs) (line 100)
    randint_call_result_401685 = invoke(stypy.reporting.localization.Localization(__file__, 100, 16), randint_401676, *[N_401677], **kwargs_401684)
    
    # Assigning a type to the variable 'i' (line 100)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 12), 'i', randint_call_result_401685)
    
    # Assigning a Call to a Name (line 101):
    
    # Assigning a Call to a Name (line 101):
    
    # Call to randint(...): (line 101)
    # Processing the call arguments (line 101)
    # Getting the type of 'N' (line 101)
    N_401689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 34), 'N', False)
    # Processing the call keyword arguments (line 101)
    # Getting the type of 'N' (line 101)
    N_401690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 42), 'N', False)
    # Getting the type of 'N' (line 101)
    N_401691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 46), 'N', False)
    # Applying the binary operator '*' (line 101)
    result_mul_401692 = python_operator(stypy.reporting.localization.Localization(__file__, 101, 42), '*', N_401690, N_401691)
    
    int_401693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 101, 51), 'int')
    # Applying the binary operator '//' (line 101)
    result_floordiv_401694 = python_operator(stypy.reporting.localization.Localization(__file__, 101, 48), '//', result_mul_401692, int_401693)
    
    keyword_401695 = result_floordiv_401694
    kwargs_401696 = {'size': keyword_401695}
    # Getting the type of 'np' (line 101)
    np_401686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 16), 'np', False)
    # Obtaining the member 'random' of a type (line 101)
    random_401687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 101, 16), np_401686, 'random')
    # Obtaining the member 'randint' of a type (line 101)
    randint_401688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 101, 16), random_401687, 'randint')
    # Calling randint(args, kwargs) (line 101)
    randint_call_result_401697 = invoke(stypy.reporting.localization.Localization(__file__, 101, 16), randint_401688, *[N_401689], **kwargs_401696)
    
    # Assigning a type to the variable 'j' (line 101)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 12), 'j', randint_call_result_401697)
    
    # Assigning a Num to a Subscript (line 102):
    
    # Assigning a Num to a Subscript (line 102):
    int_401698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 21), 'int')
    # Getting the type of 'M' (line 102)
    M_401699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 12), 'M')
    
    # Obtaining an instance of the builtin type 'tuple' (line 102)
    tuple_401700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 14), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 102)
    # Adding element type (line 102)
    # Getting the type of 'i' (line 102)
    i_401701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 14), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 102, 14), tuple_401700, i_401701)
    # Adding element type (line 102)
    # Getting the type of 'j' (line 102)
    j_401702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 16), 'j')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 102, 14), tuple_401700, j_401702)
    
    # Storing an element on a container (line 102)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 102, 12), M_401699, (tuple_401700, int_401698))
    # SSA join for if statement (line 99)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 81)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'M' (line 103)
    M_401703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 11), 'M')
    # Assigning a type to the variable 'stypy_return_type' (line 103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 4), 'stypy_return_type', M_401703)
    
    # ################# End of 'generate_matrix(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'generate_matrix' in the type store
    # Getting the type of 'stypy_return_type' (line 75)
    stypy_return_type_401704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_401704)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'generate_matrix'
    return stypy_return_type_401704

# Assigning a type to the variable 'generate_matrix' (line 75)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 0), 'generate_matrix', generate_matrix)

@norecursion
def _aslinearoperator_with_dtype(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_aslinearoperator_with_dtype'
    module_type_store = module_type_store.open_function_context('_aslinearoperator_with_dtype', 106, 0, False)
    
    # Passed parameters checking function
    _aslinearoperator_with_dtype.stypy_localization = localization
    _aslinearoperator_with_dtype.stypy_type_of_self = None
    _aslinearoperator_with_dtype.stypy_type_store = module_type_store
    _aslinearoperator_with_dtype.stypy_function_name = '_aslinearoperator_with_dtype'
    _aslinearoperator_with_dtype.stypy_param_names_list = ['m']
    _aslinearoperator_with_dtype.stypy_varargs_param_name = None
    _aslinearoperator_with_dtype.stypy_kwargs_param_name = None
    _aslinearoperator_with_dtype.stypy_call_defaults = defaults
    _aslinearoperator_with_dtype.stypy_call_varargs = varargs
    _aslinearoperator_with_dtype.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_aslinearoperator_with_dtype', ['m'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_aslinearoperator_with_dtype', localization, ['m'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_aslinearoperator_with_dtype(...)' code ##################

    
    # Assigning a Call to a Name (line 107):
    
    # Assigning a Call to a Name (line 107):
    
    # Call to aslinearoperator(...): (line 107)
    # Processing the call arguments (line 107)
    # Getting the type of 'm' (line 107)
    m_401706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 25), 'm', False)
    # Processing the call keyword arguments (line 107)
    kwargs_401707 = {}
    # Getting the type of 'aslinearoperator' (line 107)
    aslinearoperator_401705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'aslinearoperator', False)
    # Calling aslinearoperator(args, kwargs) (line 107)
    aslinearoperator_call_result_401708 = invoke(stypy.reporting.localization.Localization(__file__, 107, 8), aslinearoperator_401705, *[m_401706], **kwargs_401707)
    
    # Assigning a type to the variable 'm' (line 107)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 4), 'm', aslinearoperator_call_result_401708)
    
    # Type idiom detected: calculating its left and rigth part (line 108)
    str_401709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 22), 'str', 'dtype')
    # Getting the type of 'm' (line 108)
    m_401710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 19), 'm')
    
    (may_be_401711, more_types_in_union_401712) = may_not_provide_member(str_401709, m_401710)

    if may_be_401711:

        if more_types_in_union_401712:
            # Runtime conditional SSA (line 108)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'm' (line 108)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 4), 'm', remove_member_provider_from_union(m_401710, 'dtype'))
        
        # Assigning a Call to a Name (line 109):
        
        # Assigning a Call to a Name (line 109):
        
        # Call to zeros(...): (line 109)
        # Processing the call arguments (line 109)
        
        # Obtaining the type of the subscript
        int_401715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 29), 'int')
        # Getting the type of 'm' (line 109)
        m_401716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 21), 'm', False)
        # Obtaining the member 'shape' of a type (line 109)
        shape_401717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 21), m_401716, 'shape')
        # Obtaining the member '__getitem__' of a type (line 109)
        getitem___401718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 21), shape_401717, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 109)
        subscript_call_result_401719 = invoke(stypy.reporting.localization.Localization(__file__, 109, 21), getitem___401718, int_401715)
        
        # Processing the call keyword arguments (line 109)
        kwargs_401720 = {}
        # Getting the type of 'np' (line 109)
        np_401713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 109)
        zeros_401714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 12), np_401713, 'zeros')
        # Calling zeros(args, kwargs) (line 109)
        zeros_call_result_401721 = invoke(stypy.reporting.localization.Localization(__file__, 109, 12), zeros_401714, *[subscript_call_result_401719], **kwargs_401720)
        
        # Assigning a type to the variable 'x' (line 109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 8), 'x', zeros_call_result_401721)
        
        # Assigning a Attribute to a Attribute (line 110):
        
        # Assigning a Attribute to a Attribute (line 110):
        # Getting the type of 'm' (line 110)
        m_401722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 19), 'm')
        # Getting the type of 'x' (line 110)
        x_401723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 23), 'x')
        # Applying the binary operator '*' (line 110)
        result_mul_401724 = python_operator(stypy.reporting.localization.Localization(__file__, 110, 19), '*', m_401722, x_401723)
        
        # Obtaining the member 'dtype' of a type (line 110)
        dtype_401725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 19), result_mul_401724, 'dtype')
        # Getting the type of 'm' (line 110)
        m_401726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 8), 'm')
        # Setting the type of the member 'dtype' of a type (line 110)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 8), m_401726, 'dtype', dtype_401725)

        if more_types_in_union_401712:
            # SSA join for if statement (line 108)
            module_type_store = module_type_store.join_ssa_context()


    
    # Getting the type of 'm' (line 111)
    m_401727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 11), 'm')
    # Assigning a type to the variable 'stypy_return_type' (line 111)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 111, 4), 'stypy_return_type', m_401727)
    
    # ################# End of '_aslinearoperator_with_dtype(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_aslinearoperator_with_dtype' in the type store
    # Getting the type of 'stypy_return_type' (line 106)
    stypy_return_type_401728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_401728)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_aslinearoperator_with_dtype'
    return stypy_return_type_401728

# Assigning a type to the variable '_aslinearoperator_with_dtype' (line 106)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 0), '_aslinearoperator_with_dtype', _aslinearoperator_with_dtype)

@norecursion
def assert_allclose_cc(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'assert_allclose_cc'
    module_type_store = module_type_store.open_function_context('assert_allclose_cc', 114, 0, False)
    
    # Passed parameters checking function
    assert_allclose_cc.stypy_localization = localization
    assert_allclose_cc.stypy_type_of_self = None
    assert_allclose_cc.stypy_type_store = module_type_store
    assert_allclose_cc.stypy_function_name = 'assert_allclose_cc'
    assert_allclose_cc.stypy_param_names_list = ['actual', 'desired']
    assert_allclose_cc.stypy_varargs_param_name = None
    assert_allclose_cc.stypy_kwargs_param_name = 'kw'
    assert_allclose_cc.stypy_call_defaults = defaults
    assert_allclose_cc.stypy_call_varargs = varargs
    assert_allclose_cc.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'assert_allclose_cc', ['actual', 'desired'], None, 'kw', defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'assert_allclose_cc', localization, ['actual', 'desired'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'assert_allclose_cc(...)' code ##################

    str_401729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 4), 'str', 'Almost equal or complex conjugates almost equal')
    
    
    # SSA begins for try-except statement (line 116)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to assert_allclose(...): (line 117)
    # Processing the call arguments (line 117)
    # Getting the type of 'actual' (line 117)
    actual_401731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 24), 'actual', False)
    # Getting the type of 'desired' (line 117)
    desired_401732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 32), 'desired', False)
    # Processing the call keyword arguments (line 117)
    # Getting the type of 'kw' (line 117)
    kw_401733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 43), 'kw', False)
    kwargs_401734 = {'kw_401733': kw_401733}
    # Getting the type of 'assert_allclose' (line 117)
    assert_allclose_401730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 117)
    assert_allclose_call_result_401735 = invoke(stypy.reporting.localization.Localization(__file__, 117, 8), assert_allclose_401730, *[actual_401731, desired_401732], **kwargs_401734)
    
    # SSA branch for the except part of a try statement (line 116)
    # SSA branch for the except '<any exception>' branch of a try statement (line 116)
    module_type_store.open_ssa_branch('except')
    
    # Call to assert_allclose(...): (line 119)
    # Processing the call arguments (line 119)
    # Getting the type of 'actual' (line 119)
    actual_401737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 24), 'actual', False)
    
    # Call to conj(...): (line 119)
    # Processing the call arguments (line 119)
    # Getting the type of 'desired' (line 119)
    desired_401739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 37), 'desired', False)
    # Processing the call keyword arguments (line 119)
    kwargs_401740 = {}
    # Getting the type of 'conj' (line 119)
    conj_401738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 32), 'conj', False)
    # Calling conj(args, kwargs) (line 119)
    conj_call_result_401741 = invoke(stypy.reporting.localization.Localization(__file__, 119, 32), conj_401738, *[desired_401739], **kwargs_401740)
    
    # Processing the call keyword arguments (line 119)
    # Getting the type of 'kw' (line 119)
    kw_401742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 49), 'kw', False)
    kwargs_401743 = {'kw_401742': kw_401742}
    # Getting the type of 'assert_allclose' (line 119)
    assert_allclose_401736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 119)
    assert_allclose_call_result_401744 = invoke(stypy.reporting.localization.Localization(__file__, 119, 8), assert_allclose_401736, *[actual_401737, conj_call_result_401741], **kwargs_401743)
    
    # SSA join for try-except statement (line 116)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'assert_allclose_cc(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'assert_allclose_cc' in the type store
    # Getting the type of 'stypy_return_type' (line 114)
    stypy_return_type_401745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_401745)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'assert_allclose_cc'
    return stypy_return_type_401745

# Assigning a type to the variable 'assert_allclose_cc' (line 114)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 114, 0), 'assert_allclose_cc', assert_allclose_cc)

@norecursion
def argsort_which(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 123)
    None_401746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 24), 'None')
    # Getting the type of 'None' (line 123)
    None_401747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 37), 'None')
    # Getting the type of 'None' (line 123)
    None_401748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 48), 'None')
    defaults = [None_401746, None_401747, None_401748]
    # Create a new context for function 'argsort_which'
    module_type_store = module_type_store.open_function_context('argsort_which', 122, 0, False)
    
    # Passed parameters checking function
    argsort_which.stypy_localization = localization
    argsort_which.stypy_type_of_self = None
    argsort_which.stypy_type_store = module_type_store
    argsort_which.stypy_function_name = 'argsort_which'
    argsort_which.stypy_param_names_list = ['eval', 'typ', 'k', 'which', 'sigma', 'OPpart', 'mode']
    argsort_which.stypy_varargs_param_name = None
    argsort_which.stypy_kwargs_param_name = None
    argsort_which.stypy_call_defaults = defaults
    argsort_which.stypy_call_varargs = varargs
    argsort_which.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'argsort_which', ['eval', 'typ', 'k', 'which', 'sigma', 'OPpart', 'mode'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'argsort_which', localization, ['eval', 'typ', 'k', 'which', 'sigma', 'OPpart', 'mode'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'argsort_which(...)' code ##################

    str_401749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, (-1)), 'str', 'Return sorted indices of eigenvalues using the "which" keyword\n    from eigs and eigsh')
    
    # Type idiom detected: calculating its left and rigth part (line 126)
    # Getting the type of 'sigma' (line 126)
    sigma_401750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 7), 'sigma')
    # Getting the type of 'None' (line 126)
    None_401751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 16), 'None')
    
    (may_be_401752, more_types_in_union_401753) = may_be_none(sigma_401750, None_401751)

    if may_be_401752:

        if more_types_in_union_401753:
            # Runtime conditional SSA (line 126)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 127):
        
        # Assigning a Call to a Name (line 127):
        
        # Call to round(...): (line 127)
        # Processing the call arguments (line 127)
        # Getting the type of 'eval' (line 127)
        eval_401756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 25), 'eval', False)
        # Processing the call keyword arguments (line 127)
        
        # Obtaining the type of the subscript
        # Getting the type of 'typ' (line 127)
        typ_401757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 49), 'typ', False)
        # Getting the type of '_ndigits' (line 127)
        _ndigits_401758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 40), '_ndigits', False)
        # Obtaining the member '__getitem__' of a type (line 127)
        getitem___401759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 127, 40), _ndigits_401758, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 127)
        subscript_call_result_401760 = invoke(stypy.reporting.localization.Localization(__file__, 127, 40), getitem___401759, typ_401757)
        
        keyword_401761 = subscript_call_result_401760
        kwargs_401762 = {'decimals': keyword_401761}
        # Getting the type of 'np' (line 127)
        np_401754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 16), 'np', False)
        # Obtaining the member 'round' of a type (line 127)
        round_401755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 127, 16), np_401754, 'round')
        # Calling round(args, kwargs) (line 127)
        round_call_result_401763 = invoke(stypy.reporting.localization.Localization(__file__, 127, 16), round_401755, *[eval_401756], **kwargs_401762)
        
        # Assigning a type to the variable 'reval' (line 127)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 127, 8), 'reval', round_call_result_401763)

        if more_types_in_union_401753:
            # Runtime conditional SSA for else branch (line 126)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_401752) or more_types_in_union_401753):
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'mode' (line 129)
        mode_401764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 11), 'mode')
        # Getting the type of 'None' (line 129)
        None_401765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 19), 'None')
        # Applying the binary operator 'is' (line 129)
        result_is__401766 = python_operator(stypy.reporting.localization.Localization(__file__, 129, 11), 'is', mode_401764, None_401765)
        
        
        # Getting the type of 'mode' (line 129)
        mode_401767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 27), 'mode')
        str_401768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 35), 'str', 'normal')
        # Applying the binary operator '==' (line 129)
        result_eq_401769 = python_operator(stypy.reporting.localization.Localization(__file__, 129, 27), '==', mode_401767, str_401768)
        
        # Applying the binary operator 'or' (line 129)
        result_or_keyword_401770 = python_operator(stypy.reporting.localization.Localization(__file__, 129, 11), 'or', result_is__401766, result_eq_401769)
        
        # Testing the type of an if condition (line 129)
        if_condition_401771 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 129, 8), result_or_keyword_401770)
        # Assigning a type to the variable 'if_condition_401771' (line 129)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 129, 8), 'if_condition_401771', if_condition_401771)
        # SSA begins for if statement (line 129)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 130)
        # Getting the type of 'OPpart' (line 130)
        OPpart_401772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 15), 'OPpart')
        # Getting the type of 'None' (line 130)
        None_401773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 25), 'None')
        
        (may_be_401774, more_types_in_union_401775) = may_be_none(OPpart_401772, None_401773)

        if may_be_401774:

            if more_types_in_union_401775:
                # Runtime conditional SSA (line 130)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 131):
            
            # Assigning a BinOp to a Name (line 131):
            float_401776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 24), 'float')
            # Getting the type of 'eval' (line 131)
            eval_401777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 30), 'eval')
            # Getting the type of 'sigma' (line 131)
            sigma_401778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 37), 'sigma')
            # Applying the binary operator '-' (line 131)
            result_sub_401779 = python_operator(stypy.reporting.localization.Localization(__file__, 131, 30), '-', eval_401777, sigma_401778)
            
            # Applying the binary operator 'div' (line 131)
            result_div_401780 = python_operator(stypy.reporting.localization.Localization(__file__, 131, 24), 'div', float_401776, result_sub_401779)
            
            # Assigning a type to the variable 'reval' (line 131)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 131, 16), 'reval', result_div_401780)

            if more_types_in_union_401775:
                # Runtime conditional SSA for else branch (line 130)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_401774) or more_types_in_union_401775):
            
            
            # Getting the type of 'OPpart' (line 132)
            OPpart_401781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 17), 'OPpart')
            str_401782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 27), 'str', 'r')
            # Applying the binary operator '==' (line 132)
            result_eq_401783 = python_operator(stypy.reporting.localization.Localization(__file__, 132, 17), '==', OPpart_401781, str_401782)
            
            # Testing the type of an if condition (line 132)
            if_condition_401784 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 132, 17), result_eq_401783)
            # Assigning a type to the variable 'if_condition_401784' (line 132)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 17), 'if_condition_401784', if_condition_401784)
            # SSA begins for if statement (line 132)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 133):
            
            # Assigning a BinOp to a Name (line 133):
            float_401785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 24), 'float')
            float_401786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 31), 'float')
            # Getting the type of 'eval' (line 133)
            eval_401787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 37), 'eval')
            # Getting the type of 'sigma' (line 133)
            sigma_401788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 44), 'sigma')
            # Applying the binary operator '-' (line 133)
            result_sub_401789 = python_operator(stypy.reporting.localization.Localization(__file__, 133, 37), '-', eval_401787, sigma_401788)
            
            # Applying the binary operator 'div' (line 133)
            result_div_401790 = python_operator(stypy.reporting.localization.Localization(__file__, 133, 31), 'div', float_401786, result_sub_401789)
            
            float_401791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 33), 'float')
            # Getting the type of 'eval' (line 134)
            eval_401792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 39), 'eval')
            
            # Call to conj(...): (line 134)
            # Processing the call arguments (line 134)
            # Getting the type of 'sigma' (line 134)
            sigma_401795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 54), 'sigma', False)
            # Processing the call keyword arguments (line 134)
            kwargs_401796 = {}
            # Getting the type of 'np' (line 134)
            np_401793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 46), 'np', False)
            # Obtaining the member 'conj' of a type (line 134)
            conj_401794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 46), np_401793, 'conj')
            # Calling conj(args, kwargs) (line 134)
            conj_call_result_401797 = invoke(stypy.reporting.localization.Localization(__file__, 134, 46), conj_401794, *[sigma_401795], **kwargs_401796)
            
            # Applying the binary operator '-' (line 134)
            result_sub_401798 = python_operator(stypy.reporting.localization.Localization(__file__, 134, 39), '-', eval_401792, conj_call_result_401797)
            
            # Applying the binary operator 'div' (line 134)
            result_div_401799 = python_operator(stypy.reporting.localization.Localization(__file__, 134, 33), 'div', float_401791, result_sub_401798)
            
            # Applying the binary operator '+' (line 133)
            result_add_401800 = python_operator(stypy.reporting.localization.Localization(__file__, 133, 31), '+', result_div_401790, result_div_401799)
            
            # Applying the binary operator '*' (line 133)
            result_mul_401801 = python_operator(stypy.reporting.localization.Localization(__file__, 133, 24), '*', float_401785, result_add_401800)
            
            # Assigning a type to the variable 'reval' (line 133)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 133, 16), 'reval', result_mul_401801)
            # SSA branch for the else part of an if statement (line 132)
            module_type_store.open_ssa_branch('else')
            
            
            # Getting the type of 'OPpart' (line 135)
            OPpart_401802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 17), 'OPpart')
            str_401803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 27), 'str', 'i')
            # Applying the binary operator '==' (line 135)
            result_eq_401804 = python_operator(stypy.reporting.localization.Localization(__file__, 135, 17), '==', OPpart_401802, str_401803)
            
            # Testing the type of an if condition (line 135)
            if_condition_401805 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 135, 17), result_eq_401804)
            # Assigning a type to the variable 'if_condition_401805' (line 135)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 135, 17), 'if_condition_401805', if_condition_401805)
            # SSA begins for if statement (line 135)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 136):
            
            # Assigning a BinOp to a Name (line 136):
            complex_401806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 24), 'complex')
            float_401807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 33), 'float')
            # Getting the type of 'eval' (line 136)
            eval_401808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 39), 'eval')
            # Getting the type of 'sigma' (line 136)
            sigma_401809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 46), 'sigma')
            # Applying the binary operator '-' (line 136)
            result_sub_401810 = python_operator(stypy.reporting.localization.Localization(__file__, 136, 39), '-', eval_401808, sigma_401809)
            
            # Applying the binary operator 'div' (line 136)
            result_div_401811 = python_operator(stypy.reporting.localization.Localization(__file__, 136, 33), 'div', float_401807, result_sub_401810)
            
            float_401812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 35), 'float')
            # Getting the type of 'eval' (line 137)
            eval_401813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 41), 'eval')
            
            # Call to conj(...): (line 137)
            # Processing the call arguments (line 137)
            # Getting the type of 'sigma' (line 137)
            sigma_401816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 56), 'sigma', False)
            # Processing the call keyword arguments (line 137)
            kwargs_401817 = {}
            # Getting the type of 'np' (line 137)
            np_401814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 48), 'np', False)
            # Obtaining the member 'conj' of a type (line 137)
            conj_401815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 137, 48), np_401814, 'conj')
            # Calling conj(args, kwargs) (line 137)
            conj_call_result_401818 = invoke(stypy.reporting.localization.Localization(__file__, 137, 48), conj_401815, *[sigma_401816], **kwargs_401817)
            
            # Applying the binary operator '-' (line 137)
            result_sub_401819 = python_operator(stypy.reporting.localization.Localization(__file__, 137, 41), '-', eval_401813, conj_call_result_401818)
            
            # Applying the binary operator 'div' (line 137)
            result_div_401820 = python_operator(stypy.reporting.localization.Localization(__file__, 137, 35), 'div', float_401812, result_sub_401819)
            
            # Applying the binary operator '-' (line 136)
            result_sub_401821 = python_operator(stypy.reporting.localization.Localization(__file__, 136, 33), '-', result_div_401811, result_div_401820)
            
            # Applying the binary operator '*' (line 136)
            result_mul_401822 = python_operator(stypy.reporting.localization.Localization(__file__, 136, 24), '*', complex_401806, result_sub_401821)
            
            # Assigning a type to the variable 'reval' (line 136)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 136, 16), 'reval', result_mul_401822)
            # SSA join for if statement (line 135)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for if statement (line 132)
            module_type_store = module_type_store.join_ssa_context()
            

            if (may_be_401774 and more_types_in_union_401775):
                # SSA join for if statement (line 130)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA branch for the else part of an if statement (line 129)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 138)
        mode_401823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 13), 'mode')
        str_401824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 21), 'str', 'cayley')
        # Applying the binary operator '==' (line 138)
        result_eq_401825 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 13), '==', mode_401823, str_401824)
        
        # Testing the type of an if condition (line 138)
        if_condition_401826 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 138, 13), result_eq_401825)
        # Assigning a type to the variable 'if_condition_401826' (line 138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 13), 'if_condition_401826', if_condition_401826)
        # SSA begins for if statement (line 138)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 139):
        
        # Assigning a BinOp to a Name (line 139):
        # Getting the type of 'eval' (line 139)
        eval_401827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 21), 'eval')
        # Getting the type of 'sigma' (line 139)
        sigma_401828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 28), 'sigma')
        # Applying the binary operator '+' (line 139)
        result_add_401829 = python_operator(stypy.reporting.localization.Localization(__file__, 139, 21), '+', eval_401827, sigma_401828)
        
        # Getting the type of 'eval' (line 139)
        eval_401830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 38), 'eval')
        # Getting the type of 'sigma' (line 139)
        sigma_401831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 45), 'sigma')
        # Applying the binary operator '-' (line 139)
        result_sub_401832 = python_operator(stypy.reporting.localization.Localization(__file__, 139, 38), '-', eval_401830, sigma_401831)
        
        # Applying the binary operator 'div' (line 139)
        result_div_401833 = python_operator(stypy.reporting.localization.Localization(__file__, 139, 20), 'div', result_add_401829, result_sub_401832)
        
        # Assigning a type to the variable 'reval' (line 139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 139, 12), 'reval', result_div_401833)
        # SSA branch for the else part of an if statement (line 138)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 140)
        mode_401834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 13), 'mode')
        str_401835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 21), 'str', 'buckling')
        # Applying the binary operator '==' (line 140)
        result_eq_401836 = python_operator(stypy.reporting.localization.Localization(__file__, 140, 13), '==', mode_401834, str_401835)
        
        # Testing the type of an if condition (line 140)
        if_condition_401837 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 140, 13), result_eq_401836)
        # Assigning a type to the variable 'if_condition_401837' (line 140)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 140, 13), 'if_condition_401837', if_condition_401837)
        # SSA begins for if statement (line 140)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 141):
        
        # Assigning a BinOp to a Name (line 141):
        # Getting the type of 'eval' (line 141)
        eval_401838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 20), 'eval')
        # Getting the type of 'eval' (line 141)
        eval_401839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 28), 'eval')
        # Getting the type of 'sigma' (line 141)
        sigma_401840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 35), 'sigma')
        # Applying the binary operator '-' (line 141)
        result_sub_401841 = python_operator(stypy.reporting.localization.Localization(__file__, 141, 28), '-', eval_401839, sigma_401840)
        
        # Applying the binary operator 'div' (line 141)
        result_div_401842 = python_operator(stypy.reporting.localization.Localization(__file__, 141, 20), 'div', eval_401838, result_sub_401841)
        
        # Assigning a type to the variable 'reval' (line 141)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 12), 'reval', result_div_401842)
        # SSA branch for the else part of an if statement (line 140)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 143)
        # Processing the call arguments (line 143)
        str_401844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 29), 'str', "mode='%s' not recognized")
        # Getting the type of 'mode' (line 143)
        mode_401845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 58), 'mode', False)
        # Applying the binary operator '%' (line 143)
        result_mod_401846 = python_operator(stypy.reporting.localization.Localization(__file__, 143, 29), '%', str_401844, mode_401845)
        
        # Processing the call keyword arguments (line 143)
        kwargs_401847 = {}
        # Getting the type of 'ValueError' (line 143)
        ValueError_401843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 143)
        ValueError_call_result_401848 = invoke(stypy.reporting.localization.Localization(__file__, 143, 18), ValueError_401843, *[result_mod_401846], **kwargs_401847)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 143, 12), ValueError_call_result_401848, 'raise parameter', BaseException)
        # SSA join for if statement (line 140)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 138)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 129)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 145):
        
        # Assigning a Call to a Name (line 145):
        
        # Call to round(...): (line 145)
        # Processing the call arguments (line 145)
        # Getting the type of 'reval' (line 145)
        reval_401851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 25), 'reval', False)
        # Processing the call keyword arguments (line 145)
        
        # Obtaining the type of the subscript
        # Getting the type of 'typ' (line 145)
        typ_401852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 50), 'typ', False)
        # Getting the type of '_ndigits' (line 145)
        _ndigits_401853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 41), '_ndigits', False)
        # Obtaining the member '__getitem__' of a type (line 145)
        getitem___401854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 145, 41), _ndigits_401853, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 145)
        subscript_call_result_401855 = invoke(stypy.reporting.localization.Localization(__file__, 145, 41), getitem___401854, typ_401852)
        
        keyword_401856 = subscript_call_result_401855
        kwargs_401857 = {'decimals': keyword_401856}
        # Getting the type of 'np' (line 145)
        np_401849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 16), 'np', False)
        # Obtaining the member 'round' of a type (line 145)
        round_401850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 145, 16), np_401849, 'round')
        # Calling round(args, kwargs) (line 145)
        round_call_result_401858 = invoke(stypy.reporting.localization.Localization(__file__, 145, 16), round_401850, *[reval_401851], **kwargs_401857)
        
        # Assigning a type to the variable 'reval' (line 145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 8), 'reval', round_call_result_401858)

        if (may_be_401752 and more_types_in_union_401753):
            # SSA join for if statement (line 126)
            module_type_store = module_type_store.join_ssa_context()


    
    
    
    # Getting the type of 'which' (line 147)
    which_401859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 7), 'which')
    
    # Obtaining an instance of the builtin type 'list' (line 147)
    list_401860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 147)
    # Adding element type (line 147)
    str_401861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 17), 'str', 'LM')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 147, 16), list_401860, str_401861)
    # Adding element type (line 147)
    str_401862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 23), 'str', 'SM')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 147, 16), list_401860, str_401862)
    
    # Applying the binary operator 'in' (line 147)
    result_contains_401863 = python_operator(stypy.reporting.localization.Localization(__file__, 147, 7), 'in', which_401859, list_401860)
    
    # Testing the type of an if condition (line 147)
    if_condition_401864 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 147, 4), result_contains_401863)
    # Assigning a type to the variable 'if_condition_401864' (line 147)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 4), 'if_condition_401864', if_condition_401864)
    # SSA begins for if statement (line 147)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 148):
    
    # Assigning a Call to a Name (line 148):
    
    # Call to argsort(...): (line 148)
    # Processing the call arguments (line 148)
    
    # Call to abs(...): (line 148)
    # Processing the call arguments (line 148)
    # Getting the type of 'reval' (line 148)
    reval_401868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 29), 'reval', False)
    # Processing the call keyword arguments (line 148)
    kwargs_401869 = {}
    # Getting the type of 'abs' (line 148)
    abs_401867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 25), 'abs', False)
    # Calling abs(args, kwargs) (line 148)
    abs_call_result_401870 = invoke(stypy.reporting.localization.Localization(__file__, 148, 25), abs_401867, *[reval_401868], **kwargs_401869)
    
    # Processing the call keyword arguments (line 148)
    kwargs_401871 = {}
    # Getting the type of 'np' (line 148)
    np_401865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 14), 'np', False)
    # Obtaining the member 'argsort' of a type (line 148)
    argsort_401866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 14), np_401865, 'argsort')
    # Calling argsort(args, kwargs) (line 148)
    argsort_call_result_401872 = invoke(stypy.reporting.localization.Localization(__file__, 148, 14), argsort_401866, *[abs_call_result_401870], **kwargs_401871)
    
    # Assigning a type to the variable 'ind' (line 148)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 148, 8), 'ind', argsort_call_result_401872)
    # SSA branch for the else part of an if statement (line 147)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'which' (line 149)
    which_401873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 9), 'which')
    
    # Obtaining an instance of the builtin type 'list' (line 149)
    list_401874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 149)
    # Adding element type (line 149)
    str_401875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 19), 'str', 'LR')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 18), list_401874, str_401875)
    # Adding element type (line 149)
    str_401876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 25), 'str', 'SR')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 18), list_401874, str_401876)
    # Adding element type (line 149)
    str_401877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 31), 'str', 'LA')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 18), list_401874, str_401877)
    # Adding element type (line 149)
    str_401878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 37), 'str', 'SA')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 18), list_401874, str_401878)
    # Adding element type (line 149)
    str_401879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 43), 'str', 'BE')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 18), list_401874, str_401879)
    
    # Applying the binary operator 'in' (line 149)
    result_contains_401880 = python_operator(stypy.reporting.localization.Localization(__file__, 149, 9), 'in', which_401873, list_401874)
    
    # Testing the type of an if condition (line 149)
    if_condition_401881 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 149, 9), result_contains_401880)
    # Assigning a type to the variable 'if_condition_401881' (line 149)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 149, 9), 'if_condition_401881', if_condition_401881)
    # SSA begins for if statement (line 149)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 150):
    
    # Assigning a Call to a Name (line 150):
    
    # Call to argsort(...): (line 150)
    # Processing the call arguments (line 150)
    
    # Call to real(...): (line 150)
    # Processing the call arguments (line 150)
    # Getting the type of 'reval' (line 150)
    reval_401886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 33), 'reval', False)
    # Processing the call keyword arguments (line 150)
    kwargs_401887 = {}
    # Getting the type of 'np' (line 150)
    np_401884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 25), 'np', False)
    # Obtaining the member 'real' of a type (line 150)
    real_401885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 25), np_401884, 'real')
    # Calling real(args, kwargs) (line 150)
    real_call_result_401888 = invoke(stypy.reporting.localization.Localization(__file__, 150, 25), real_401885, *[reval_401886], **kwargs_401887)
    
    # Processing the call keyword arguments (line 150)
    kwargs_401889 = {}
    # Getting the type of 'np' (line 150)
    np_401882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 14), 'np', False)
    # Obtaining the member 'argsort' of a type (line 150)
    argsort_401883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 14), np_401882, 'argsort')
    # Calling argsort(args, kwargs) (line 150)
    argsort_call_result_401890 = invoke(stypy.reporting.localization.Localization(__file__, 150, 14), argsort_401883, *[real_call_result_401888], **kwargs_401889)
    
    # Assigning a type to the variable 'ind' (line 150)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 150, 8), 'ind', argsort_call_result_401890)
    # SSA branch for the else part of an if statement (line 149)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'which' (line 151)
    which_401891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 9), 'which')
    
    # Obtaining an instance of the builtin type 'list' (line 151)
    list_401892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 151)
    # Adding element type (line 151)
    str_401893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 19), 'str', 'LI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 18), list_401892, str_401893)
    # Adding element type (line 151)
    str_401894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 25), 'str', 'SI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 18), list_401892, str_401894)
    
    # Applying the binary operator 'in' (line 151)
    result_contains_401895 = python_operator(stypy.reporting.localization.Localization(__file__, 151, 9), 'in', which_401891, list_401892)
    
    # Testing the type of an if condition (line 151)
    if_condition_401896 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 151, 9), result_contains_401895)
    # Assigning a type to the variable 'if_condition_401896' (line 151)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 9), 'if_condition_401896', if_condition_401896)
    # SSA begins for if statement (line 151)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Call to islower(...): (line 153)
    # Processing the call keyword arguments (line 153)
    kwargs_401899 = {}
    # Getting the type of 'typ' (line 153)
    typ_401897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 11), 'typ', False)
    # Obtaining the member 'islower' of a type (line 153)
    islower_401898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 11), typ_401897, 'islower')
    # Calling islower(args, kwargs) (line 153)
    islower_call_result_401900 = invoke(stypy.reporting.localization.Localization(__file__, 153, 11), islower_401898, *[], **kwargs_401899)
    
    # Testing the type of an if condition (line 153)
    if_condition_401901 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 153, 8), islower_call_result_401900)
    # Assigning a type to the variable 'if_condition_401901' (line 153)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'if_condition_401901', if_condition_401901)
    # SSA begins for if statement (line 153)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 154):
    
    # Assigning a Call to a Name (line 154):
    
    # Call to argsort(...): (line 154)
    # Processing the call arguments (line 154)
    
    # Call to abs(...): (line 154)
    # Processing the call arguments (line 154)
    
    # Call to imag(...): (line 154)
    # Processing the call arguments (line 154)
    # Getting the type of 'reval' (line 154)
    reval_401907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 41), 'reval', False)
    # Processing the call keyword arguments (line 154)
    kwargs_401908 = {}
    # Getting the type of 'np' (line 154)
    np_401905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 33), 'np', False)
    # Obtaining the member 'imag' of a type (line 154)
    imag_401906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 33), np_401905, 'imag')
    # Calling imag(args, kwargs) (line 154)
    imag_call_result_401909 = invoke(stypy.reporting.localization.Localization(__file__, 154, 33), imag_401906, *[reval_401907], **kwargs_401908)
    
    # Processing the call keyword arguments (line 154)
    kwargs_401910 = {}
    # Getting the type of 'abs' (line 154)
    abs_401904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 29), 'abs', False)
    # Calling abs(args, kwargs) (line 154)
    abs_call_result_401911 = invoke(stypy.reporting.localization.Localization(__file__, 154, 29), abs_401904, *[imag_call_result_401909], **kwargs_401910)
    
    # Processing the call keyword arguments (line 154)
    kwargs_401912 = {}
    # Getting the type of 'np' (line 154)
    np_401902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 18), 'np', False)
    # Obtaining the member 'argsort' of a type (line 154)
    argsort_401903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 18), np_401902, 'argsort')
    # Calling argsort(args, kwargs) (line 154)
    argsort_call_result_401913 = invoke(stypy.reporting.localization.Localization(__file__, 154, 18), argsort_401903, *[abs_call_result_401911], **kwargs_401912)
    
    # Assigning a type to the variable 'ind' (line 154)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 154, 12), 'ind', argsort_call_result_401913)
    # SSA branch for the else part of an if statement (line 153)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 156):
    
    # Assigning a Call to a Name (line 156):
    
    # Call to argsort(...): (line 156)
    # Processing the call arguments (line 156)
    
    # Call to imag(...): (line 156)
    # Processing the call arguments (line 156)
    # Getting the type of 'reval' (line 156)
    reval_401918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 37), 'reval', False)
    # Processing the call keyword arguments (line 156)
    kwargs_401919 = {}
    # Getting the type of 'np' (line 156)
    np_401916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 29), 'np', False)
    # Obtaining the member 'imag' of a type (line 156)
    imag_401917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 156, 29), np_401916, 'imag')
    # Calling imag(args, kwargs) (line 156)
    imag_call_result_401920 = invoke(stypy.reporting.localization.Localization(__file__, 156, 29), imag_401917, *[reval_401918], **kwargs_401919)
    
    # Processing the call keyword arguments (line 156)
    kwargs_401921 = {}
    # Getting the type of 'np' (line 156)
    np_401914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 18), 'np', False)
    # Obtaining the member 'argsort' of a type (line 156)
    argsort_401915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 156, 18), np_401914, 'argsort')
    # Calling argsort(args, kwargs) (line 156)
    argsort_call_result_401922 = invoke(stypy.reporting.localization.Localization(__file__, 156, 18), argsort_401915, *[imag_call_result_401920], **kwargs_401921)
    
    # Assigning a type to the variable 'ind' (line 156)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 12), 'ind', argsort_call_result_401922)
    # SSA join for if statement (line 153)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 151)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 158)
    # Processing the call arguments (line 158)
    str_401924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 25), 'str', "which='%s' is unrecognized")
    # Getting the type of 'which' (line 158)
    which_401925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 56), 'which', False)
    # Applying the binary operator '%' (line 158)
    result_mod_401926 = python_operator(stypy.reporting.localization.Localization(__file__, 158, 25), '%', str_401924, which_401925)
    
    # Processing the call keyword arguments (line 158)
    kwargs_401927 = {}
    # Getting the type of 'ValueError' (line 158)
    ValueError_401923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 158)
    ValueError_call_result_401928 = invoke(stypy.reporting.localization.Localization(__file__, 158, 14), ValueError_401923, *[result_mod_401926], **kwargs_401927)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 158, 8), ValueError_call_result_401928, 'raise parameter', BaseException)
    # SSA join for if statement (line 151)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 149)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 147)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'which' (line 160)
    which_401929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 7), 'which')
    
    # Obtaining an instance of the builtin type 'list' (line 160)
    list_401930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 16), 'list')
    # Adding type elements to the builtin type 'list' instance (line 160)
    # Adding element type (line 160)
    str_401931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 17), 'str', 'LM')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 16), list_401930, str_401931)
    # Adding element type (line 160)
    str_401932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 23), 'str', 'LA')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 16), list_401930, str_401932)
    # Adding element type (line 160)
    str_401933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 29), 'str', 'LR')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 16), list_401930, str_401933)
    # Adding element type (line 160)
    str_401934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 35), 'str', 'LI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 16), list_401930, str_401934)
    
    # Applying the binary operator 'in' (line 160)
    result_contains_401935 = python_operator(stypy.reporting.localization.Localization(__file__, 160, 7), 'in', which_401929, list_401930)
    
    # Testing the type of an if condition (line 160)
    if_condition_401936 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 160, 4), result_contains_401935)
    # Assigning a type to the variable 'if_condition_401936' (line 160)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 160, 4), 'if_condition_401936', if_condition_401936)
    # SSA begins for if statement (line 160)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining the type of the subscript
    
    # Getting the type of 'k' (line 161)
    k_401937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 20), 'k')
    # Applying the 'usub' unary operator (line 161)
    result___neg___401938 = python_operator(stypy.reporting.localization.Localization(__file__, 161, 19), 'usub', k_401937)
    
    slice_401939 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 161, 15), result___neg___401938, None, None)
    # Getting the type of 'ind' (line 161)
    ind_401940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 15), 'ind')
    # Obtaining the member '__getitem__' of a type (line 161)
    getitem___401941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 161, 15), ind_401940, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 161)
    subscript_call_result_401942 = invoke(stypy.reporting.localization.Localization(__file__, 161, 15), getitem___401941, slice_401939)
    
    # Assigning a type to the variable 'stypy_return_type' (line 161)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 161, 8), 'stypy_return_type', subscript_call_result_401942)
    # SSA branch for the else part of an if statement (line 160)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'which' (line 162)
    which_401943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 9), 'which')
    
    # Obtaining an instance of the builtin type 'list' (line 162)
    list_401944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 162)
    # Adding element type (line 162)
    str_401945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 19), 'str', 'SM')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 18), list_401944, str_401945)
    # Adding element type (line 162)
    str_401946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 25), 'str', 'SA')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 18), list_401944, str_401946)
    # Adding element type (line 162)
    str_401947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 31), 'str', 'SR')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 18), list_401944, str_401947)
    # Adding element type (line 162)
    str_401948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 37), 'str', 'SI')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 18), list_401944, str_401948)
    
    # Applying the binary operator 'in' (line 162)
    result_contains_401949 = python_operator(stypy.reporting.localization.Localization(__file__, 162, 9), 'in', which_401943, list_401944)
    
    # Testing the type of an if condition (line 162)
    if_condition_401950 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 162, 9), result_contains_401949)
    # Assigning a type to the variable 'if_condition_401950' (line 162)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 162, 9), 'if_condition_401950', if_condition_401950)
    # SSA begins for if statement (line 162)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 163)
    k_401951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 20), 'k')
    slice_401952 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 163, 15), None, k_401951, None)
    # Getting the type of 'ind' (line 163)
    ind_401953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 15), 'ind')
    # Obtaining the member '__getitem__' of a type (line 163)
    getitem___401954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 15), ind_401953, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 163)
    subscript_call_result_401955 = invoke(stypy.reporting.localization.Localization(__file__, 163, 15), getitem___401954, slice_401952)
    
    # Assigning a type to the variable 'stypy_return_type' (line 163)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 163, 8), 'stypy_return_type', subscript_call_result_401955)
    # SSA branch for the else part of an if statement (line 162)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'which' (line 164)
    which_401956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 9), 'which')
    str_401957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 18), 'str', 'BE')
    # Applying the binary operator '==' (line 164)
    result_eq_401958 = python_operator(stypy.reporting.localization.Localization(__file__, 164, 9), '==', which_401956, str_401957)
    
    # Testing the type of an if condition (line 164)
    if_condition_401959 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 164, 9), result_eq_401958)
    # Assigning a type to the variable 'if_condition_401959' (line 164)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 9), 'if_condition_401959', if_condition_401959)
    # SSA begins for if statement (line 164)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to concatenate(...): (line 165)
    # Processing the call arguments (line 165)
    
    # Obtaining an instance of the builtin type 'tuple' (line 165)
    tuple_401962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 165)
    # Adding element type (line 165)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 165)
    k_401963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 36), 'k', False)
    int_401964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 39), 'int')
    # Applying the binary operator '//' (line 165)
    result_floordiv_401965 = python_operator(stypy.reporting.localization.Localization(__file__, 165, 36), '//', k_401963, int_401964)
    
    slice_401966 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 165, 31), None, result_floordiv_401965, None)
    # Getting the type of 'ind' (line 165)
    ind_401967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 31), 'ind', False)
    # Obtaining the member '__getitem__' of a type (line 165)
    getitem___401968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 31), ind_401967, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 165)
    subscript_call_result_401969 = invoke(stypy.reporting.localization.Localization(__file__, 165, 31), getitem___401968, slice_401966)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 31), tuple_401962, subscript_call_result_401969)
    # Adding element type (line 165)
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 165)
    k_401970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 47), 'k', False)
    int_401971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 50), 'int')
    # Applying the binary operator '//' (line 165)
    result_floordiv_401972 = python_operator(stypy.reporting.localization.Localization(__file__, 165, 47), '//', k_401970, int_401971)
    
    # Getting the type of 'k' (line 165)
    k_401973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 52), 'k', False)
    # Applying the binary operator '-' (line 165)
    result_sub_401974 = python_operator(stypy.reporting.localization.Localization(__file__, 165, 47), '-', result_floordiv_401972, k_401973)
    
    slice_401975 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 165, 43), result_sub_401974, None, None)
    # Getting the type of 'ind' (line 165)
    ind_401976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 43), 'ind', False)
    # Obtaining the member '__getitem__' of a type (line 165)
    getitem___401977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 43), ind_401976, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 165)
    subscript_call_result_401978 = invoke(stypy.reporting.localization.Localization(__file__, 165, 43), getitem___401977, slice_401975)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 31), tuple_401962, subscript_call_result_401978)
    
    # Processing the call keyword arguments (line 165)
    kwargs_401979 = {}
    # Getting the type of 'np' (line 165)
    np_401960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 15), 'np', False)
    # Obtaining the member 'concatenate' of a type (line 165)
    concatenate_401961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 15), np_401960, 'concatenate')
    # Calling concatenate(args, kwargs) (line 165)
    concatenate_call_result_401980 = invoke(stypy.reporting.localization.Localization(__file__, 165, 15), concatenate_401961, *[tuple_401962], **kwargs_401979)
    
    # Assigning a type to the variable 'stypy_return_type' (line 165)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 8), 'stypy_return_type', concatenate_call_result_401980)
    # SSA join for if statement (line 164)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 162)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 160)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'argsort_which(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'argsort_which' in the type store
    # Getting the type of 'stypy_return_type' (line 122)
    stypy_return_type_401981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_401981)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'argsort_which'
    return stypy_return_type_401981

# Assigning a type to the variable 'argsort_which' (line 122)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 122, 0), 'argsort_which', argsort_which)

@norecursion
def eval_evec(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 168)
    None_401982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 46), 'None')
    # Getting the type of 'None' (line 168)
    None_401983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 58), 'None')
    # Getting the type of 'np' (line 169)
    np_401984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 22), 'np')
    # Obtaining the member 'asarray' of a type (line 169)
    asarray_401985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 169, 22), np_401984, 'asarray')
    # Getting the type of 'None' (line 169)
    None_401986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 41), 'None')
    str_401987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 52), 'str', 'normal')
    defaults = [None_401982, None_401983, asarray_401985, None_401986, str_401987]
    # Create a new context for function 'eval_evec'
    module_type_store = module_type_store.open_function_context('eval_evec', 168, 0, False)
    
    # Passed parameters checking function
    eval_evec.stypy_localization = localization
    eval_evec.stypy_type_of_self = None
    eval_evec.stypy_type_store = module_type_store
    eval_evec.stypy_function_name = 'eval_evec'
    eval_evec.stypy_param_names_list = ['symmetric', 'd', 'typ', 'k', 'which', 'v0', 'sigma', 'mattype', 'OPpart', 'mode']
    eval_evec.stypy_varargs_param_name = None
    eval_evec.stypy_kwargs_param_name = None
    eval_evec.stypy_call_defaults = defaults
    eval_evec.stypy_call_varargs = varargs
    eval_evec.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'eval_evec', ['symmetric', 'd', 'typ', 'k', 'which', 'v0', 'sigma', 'mattype', 'OPpart', 'mode'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'eval_evec', localization, ['symmetric', 'd', 'typ', 'k', 'which', 'v0', 'sigma', 'mattype', 'OPpart', 'mode'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'eval_evec(...)' code ##################

    
    # Assigning a Compare to a Name (line 170):
    
    # Assigning a Compare to a Name (line 170):
    
    str_401988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 15), 'str', 'bmat')
    # Getting the type of 'd' (line 170)
    d_401989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 25), 'd')
    # Applying the binary operator 'in' (line 170)
    result_contains_401990 = python_operator(stypy.reporting.localization.Localization(__file__, 170, 15), 'in', str_401988, d_401989)
    
    # Assigning a type to the variable 'general' (line 170)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 4), 'general', result_contains_401990)
    
    # Getting the type of 'symmetric' (line 172)
    symmetric_401991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 7), 'symmetric')
    # Testing the type of an if condition (line 172)
    if_condition_401992 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 172, 4), symmetric_401991)
    # Assigning a type to the variable 'if_condition_401992' (line 172)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 4), 'if_condition_401992', if_condition_401992)
    # SSA begins for if statement (line 172)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 173):
    
    # Assigning a Name to a Name (line 173):
    # Getting the type of 'eigsh' (line 173)
    eigsh_401993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 20), 'eigsh')
    # Assigning a type to the variable 'eigs_func' (line 173)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 173, 8), 'eigs_func', eigsh_401993)
    # SSA branch for the else part of an if statement (line 172)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 175):
    
    # Assigning a Name to a Name (line 175):
    # Getting the type of 'eigs' (line 175)
    eigs_401994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 20), 'eigs')
    # Assigning a type to the variable 'eigs_func' (line 175)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 8), 'eigs_func', eigs_401994)
    # SSA join for if statement (line 172)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'general' (line 177)
    general_401995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 7), 'general')
    # Testing the type of an if condition (line 177)
    if_condition_401996 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 177, 4), general_401995)
    # Assigning a type to the variable 'if_condition_401996' (line 177)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 4), 'if_condition_401996', if_condition_401996)
    # SSA begins for if statement (line 177)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 178):
    
    # Assigning a BinOp to a Name (line 178):
    str_401997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 178, 15), 'str', 'error for %s:general, typ=%s, which=%s, sigma=%s, mattype=%s, OPpart=%s, mode=%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 179)
    tuple_401998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 51), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 179)
    # Adding element type (line 179)
    # Getting the type of 'eigs_func' (line 179)
    eigs_func_401999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 51), 'eigs_func')
    # Obtaining the member '__name__' of a type (line 179)
    name___402000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 179, 51), eigs_func_401999, '__name__')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 51), tuple_401998, name___402000)
    # Adding element type (line 179)
    # Getting the type of 'typ' (line 180)
    typ_402001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 51), 'typ')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 51), tuple_401998, typ_402001)
    # Adding element type (line 179)
    # Getting the type of 'which' (line 180)
    which_402002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 56), 'which')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 51), tuple_401998, which_402002)
    # Adding element type (line 179)
    # Getting the type of 'sigma' (line 180)
    sigma_402003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 63), 'sigma')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 51), tuple_401998, sigma_402003)
    # Adding element type (line 179)
    # Getting the type of 'mattype' (line 181)
    mattype_402004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 51), 'mattype')
    # Obtaining the member '__name__' of a type (line 181)
    name___402005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 51), mattype_402004, '__name__')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 51), tuple_401998, name___402005)
    # Adding element type (line 179)
    # Getting the type of 'OPpart' (line 182)
    OPpart_402006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 51), 'OPpart')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 51), tuple_401998, OPpart_402006)
    # Adding element type (line 179)
    # Getting the type of 'mode' (line 182)
    mode_402007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 59), 'mode')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 51), tuple_401998, mode_402007)
    
    # Applying the binary operator '%' (line 178)
    result_mod_402008 = python_operator(stypy.reporting.localization.Localization(__file__, 178, 15), '%', str_401997, tuple_401998)
    
    # Assigning a type to the variable 'err' (line 178)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 8), 'err', result_mod_402008)
    # SSA branch for the else part of an if statement (line 177)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 184):
    
    # Assigning a BinOp to a Name (line 184):
    str_402009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 15), 'str', 'error for %s:standard, typ=%s, which=%s, sigma=%s, mattype=%s, OPpart=%s, mode=%s')
    
    # Obtaining an instance of the builtin type 'tuple' (line 185)
    tuple_402010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 185, 51), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 185)
    # Adding element type (line 185)
    # Getting the type of 'eigs_func' (line 185)
    eigs_func_402011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 51), 'eigs_func')
    # Obtaining the member '__name__' of a type (line 185)
    name___402012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 51), eigs_func_402011, '__name__')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 185, 51), tuple_402010, name___402012)
    # Adding element type (line 185)
    # Getting the type of 'typ' (line 186)
    typ_402013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 51), 'typ')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 185, 51), tuple_402010, typ_402013)
    # Adding element type (line 185)
    # Getting the type of 'which' (line 186)
    which_402014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 56), 'which')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 185, 51), tuple_402010, which_402014)
    # Adding element type (line 185)
    # Getting the type of 'sigma' (line 186)
    sigma_402015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 63), 'sigma')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 185, 51), tuple_402010, sigma_402015)
    # Adding element type (line 185)
    # Getting the type of 'mattype' (line 187)
    mattype_402016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 51), 'mattype')
    # Obtaining the member '__name__' of a type (line 187)
    name___402017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 51), mattype_402016, '__name__')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 185, 51), tuple_402010, name___402017)
    # Adding element type (line 185)
    # Getting the type of 'OPpart' (line 188)
    OPpart_402018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 51), 'OPpart')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 185, 51), tuple_402010, OPpart_402018)
    # Adding element type (line 185)
    # Getting the type of 'mode' (line 188)
    mode_402019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 59), 'mode')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 185, 51), tuple_402010, mode_402019)
    
    # Applying the binary operator '%' (line 184)
    result_mod_402020 = python_operator(stypy.reporting.localization.Localization(__file__, 184, 15), '%', str_402009, tuple_402010)
    
    # Assigning a type to the variable 'err' (line 184)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 8), 'err', result_mod_402020)
    # SSA join for if statement (line 177)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 190):
    
    # Assigning a Call to a Name (line 190):
    
    # Call to astype(...): (line 190)
    # Processing the call arguments (line 190)
    # Getting the type of 'typ' (line 190)
    typ_402026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 24), 'typ', False)
    # Processing the call keyword arguments (line 190)
    kwargs_402027 = {}
    
    # Obtaining the type of the subscript
    str_402021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 10), 'str', 'mat')
    # Getting the type of 'd' (line 190)
    d_402022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'd', False)
    # Obtaining the member '__getitem__' of a type (line 190)
    getitem___402023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 8), d_402022, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 190)
    subscript_call_result_402024 = invoke(stypy.reporting.localization.Localization(__file__, 190, 8), getitem___402023, str_402021)
    
    # Obtaining the member 'astype' of a type (line 190)
    astype_402025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 8), subscript_call_result_402024, 'astype')
    # Calling astype(args, kwargs) (line 190)
    astype_call_result_402028 = invoke(stypy.reporting.localization.Localization(__file__, 190, 8), astype_402025, *[typ_402026], **kwargs_402027)
    
    # Assigning a type to the variable 'a' (line 190)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 4), 'a', astype_call_result_402028)
    
    # Assigning a Call to a Name (line 191):
    
    # Assigning a Call to a Name (line 191):
    
    # Call to mattype(...): (line 191)
    # Processing the call arguments (line 191)
    # Getting the type of 'a' (line 191)
    a_402030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 17), 'a', False)
    # Processing the call keyword arguments (line 191)
    kwargs_402031 = {}
    # Getting the type of 'mattype' (line 191)
    mattype_402029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 9), 'mattype', False)
    # Calling mattype(args, kwargs) (line 191)
    mattype_call_result_402032 = invoke(stypy.reporting.localization.Localization(__file__, 191, 9), mattype_402029, *[a_402030], **kwargs_402031)
    
    # Assigning a type to the variable 'ac' (line 191)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 4), 'ac', mattype_call_result_402032)
    
    # Getting the type of 'general' (line 193)
    general_402033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 7), 'general')
    # Testing the type of an if condition (line 193)
    if_condition_402034 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 193, 4), general_402033)
    # Assigning a type to the variable 'if_condition_402034' (line 193)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 4), 'if_condition_402034', if_condition_402034)
    # SSA begins for if statement (line 193)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 194):
    
    # Assigning a Call to a Name (line 194):
    
    # Call to astype(...): (line 194)
    # Processing the call arguments (line 194)
    
    # Call to lower(...): (line 194)
    # Processing the call keyword arguments (line 194)
    kwargs_402042 = {}
    # Getting the type of 'typ' (line 194)
    typ_402040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 29), 'typ', False)
    # Obtaining the member 'lower' of a type (line 194)
    lower_402041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 29), typ_402040, 'lower')
    # Calling lower(args, kwargs) (line 194)
    lower_call_result_402043 = invoke(stypy.reporting.localization.Localization(__file__, 194, 29), lower_402041, *[], **kwargs_402042)
    
    # Processing the call keyword arguments (line 194)
    kwargs_402044 = {}
    
    # Obtaining the type of the subscript
    str_402035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 14), 'str', 'bmat')
    # Getting the type of 'd' (line 194)
    d_402036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 12), 'd', False)
    # Obtaining the member '__getitem__' of a type (line 194)
    getitem___402037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 12), d_402036, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 194)
    subscript_call_result_402038 = invoke(stypy.reporting.localization.Localization(__file__, 194, 12), getitem___402037, str_402035)
    
    # Obtaining the member 'astype' of a type (line 194)
    astype_402039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 12), subscript_call_result_402038, 'astype')
    # Calling astype(args, kwargs) (line 194)
    astype_call_result_402045 = invoke(stypy.reporting.localization.Localization(__file__, 194, 12), astype_402039, *[lower_call_result_402043], **kwargs_402044)
    
    # Assigning a type to the variable 'b' (line 194)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 194, 8), 'b', astype_call_result_402045)
    
    # Assigning a Call to a Name (line 195):
    
    # Assigning a Call to a Name (line 195):
    
    # Call to mattype(...): (line 195)
    # Processing the call arguments (line 195)
    # Getting the type of 'b' (line 195)
    b_402047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 21), 'b', False)
    # Processing the call keyword arguments (line 195)
    kwargs_402048 = {}
    # Getting the type of 'mattype' (line 195)
    mattype_402046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 13), 'mattype', False)
    # Calling mattype(args, kwargs) (line 195)
    mattype_call_result_402049 = invoke(stypy.reporting.localization.Localization(__file__, 195, 13), mattype_402046, *[b_402047], **kwargs_402048)
    
    # Assigning a type to the variable 'bc' (line 195)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'bc', mattype_call_result_402049)
    # SSA join for if statement (line 193)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 198):
    
    # Assigning a Call to a Name (line 198):
    
    # Call to astype(...): (line 198)
    # Processing the call arguments (line 198)
    
    # Call to upper(...): (line 198)
    # Processing the call keyword arguments (line 198)
    kwargs_402057 = {}
    # Getting the type of 'typ' (line 198)
    typ_402055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 34), 'typ', False)
    # Obtaining the member 'upper' of a type (line 198)
    upper_402056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 34), typ_402055, 'upper')
    # Calling upper(args, kwargs) (line 198)
    upper_call_result_402058 = invoke(stypy.reporting.localization.Localization(__file__, 198, 34), upper_402056, *[], **kwargs_402057)
    
    # Processing the call keyword arguments (line 198)
    kwargs_402059 = {}
    
    # Obtaining the type of the subscript
    str_402050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 19), 'str', 'eval')
    # Getting the type of 'd' (line 198)
    d_402051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 17), 'd', False)
    # Obtaining the member '__getitem__' of a type (line 198)
    getitem___402052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 17), d_402051, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 198)
    subscript_call_result_402053 = invoke(stypy.reporting.localization.Localization(__file__, 198, 17), getitem___402052, str_402050)
    
    # Obtaining the member 'astype' of a type (line 198)
    astype_402054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 17), subscript_call_result_402053, 'astype')
    # Calling astype(args, kwargs) (line 198)
    astype_call_result_402060 = invoke(stypy.reporting.localization.Localization(__file__, 198, 17), astype_402054, *[upper_call_result_402058], **kwargs_402059)
    
    # Assigning a type to the variable 'exact_eval' (line 198)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 4), 'exact_eval', astype_call_result_402060)
    
    # Assigning a Call to a Name (line 199):
    
    # Assigning a Call to a Name (line 199):
    
    # Call to argsort_which(...): (line 199)
    # Processing the call arguments (line 199)
    # Getting the type of 'exact_eval' (line 199)
    exact_eval_402062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 24), 'exact_eval', False)
    # Getting the type of 'typ' (line 199)
    typ_402063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 36), 'typ', False)
    # Getting the type of 'k' (line 199)
    k_402064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 41), 'k', False)
    # Getting the type of 'which' (line 199)
    which_402065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 44), 'which', False)
    # Getting the type of 'sigma' (line 200)
    sigma_402066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 24), 'sigma', False)
    # Getting the type of 'OPpart' (line 200)
    OPpart_402067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 31), 'OPpart', False)
    # Getting the type of 'mode' (line 200)
    mode_402068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 39), 'mode', False)
    # Processing the call keyword arguments (line 199)
    kwargs_402069 = {}
    # Getting the type of 'argsort_which' (line 199)
    argsort_which_402061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 10), 'argsort_which', False)
    # Calling argsort_which(args, kwargs) (line 199)
    argsort_which_call_result_402070 = invoke(stypy.reporting.localization.Localization(__file__, 199, 10), argsort_which_402061, *[exact_eval_402062, typ_402063, k_402064, which_402065, sigma_402066, OPpart_402067, mode_402068], **kwargs_402069)
    
    # Assigning a type to the variable 'ind' (line 199)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 199, 4), 'ind', argsort_which_call_result_402070)
    
    # Assigning a Subscript to a Name (line 201):
    
    # Assigning a Subscript to a Name (line 201):
    
    # Obtaining the type of the subscript
    # Getting the type of 'ind' (line 201)
    ind_402071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 28), 'ind')
    # Getting the type of 'exact_eval' (line 201)
    exact_eval_402072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 17), 'exact_eval')
    # Obtaining the member '__getitem__' of a type (line 201)
    getitem___402073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 17), exact_eval_402072, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 201)
    subscript_call_result_402074 = invoke(stypy.reporting.localization.Localization(__file__, 201, 17), getitem___402073, ind_402071)
    
    # Assigning a type to the variable 'exact_eval' (line 201)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 4), 'exact_eval', subscript_call_result_402074)
    
    # Assigning a Call to a Name (line 204):
    
    # Assigning a Call to a Name (line 204):
    
    # Call to dict(...): (line 204)
    # Processing the call keyword arguments (line 204)
    # Getting the type of 'which' (line 204)
    which_402076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 24), 'which', False)
    keyword_402077 = which_402076
    # Getting the type of 'v0' (line 204)
    v0_402078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 34), 'v0', False)
    keyword_402079 = v0_402078
    # Getting the type of 'sigma' (line 204)
    sigma_402080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 44), 'sigma', False)
    keyword_402081 = sigma_402080
    kwargs_402082 = {'v0': keyword_402079, 'sigma': keyword_402081, 'which': keyword_402077}
    # Getting the type of 'dict' (line 204)
    dict_402075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 13), 'dict', False)
    # Calling dict(args, kwargs) (line 204)
    dict_call_result_402083 = invoke(stypy.reporting.localization.Localization(__file__, 204, 13), dict_402075, *[], **kwargs_402082)
    
    # Assigning a type to the variable 'kwargs' (line 204)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 204, 4), 'kwargs', dict_call_result_402083)
    
    
    # Getting the type of 'eigs_func' (line 205)
    eigs_func_402084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 7), 'eigs_func')
    # Getting the type of 'eigsh' (line 205)
    eigsh_402085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 20), 'eigsh')
    # Applying the binary operator 'is' (line 205)
    result_is__402086 = python_operator(stypy.reporting.localization.Localization(__file__, 205, 7), 'is', eigs_func_402084, eigsh_402085)
    
    # Testing the type of an if condition (line 205)
    if_condition_402087 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 205, 4), result_is__402086)
    # Assigning a type to the variable 'if_condition_402087' (line 205)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 4), 'if_condition_402087', if_condition_402087)
    # SSA begins for if statement (line 205)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Subscript (line 206):
    
    # Assigning a Name to a Subscript (line 206):
    # Getting the type of 'mode' (line 206)
    mode_402088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 25), 'mode')
    # Getting the type of 'kwargs' (line 206)
    kwargs_402089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'kwargs')
    str_402090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 15), 'str', 'mode')
    # Storing an element on a container (line 206)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 206, 8), kwargs_402089, (str_402090, mode_402088))
    # SSA branch for the else part of an if statement (line 205)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Subscript (line 208):
    
    # Assigning a Name to a Subscript (line 208):
    # Getting the type of 'OPpart' (line 208)
    OPpart_402091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 27), 'OPpart')
    # Getting the type of 'kwargs' (line 208)
    kwargs_402092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 8), 'kwargs')
    str_402093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 15), 'str', 'OPpart')
    # Storing an element on a container (line 208)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 8), kwargs_402092, (str_402093, OPpart_402091))
    # SSA join for if statement (line 205)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 211):
    
    # Assigning a Subscript to a Name (line 211):
    
    # Obtaining the type of the subscript
    int_402094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 4), 'int')
    
    # Call to _get_test_tolerance(...): (line 211)
    # Processing the call arguments (line 211)
    # Getting the type of 'typ' (line 211)
    typ_402096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 52), 'typ', False)
    # Getting the type of 'mattype' (line 211)
    mattype_402097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 57), 'mattype', False)
    # Processing the call keyword arguments (line 211)
    kwargs_402098 = {}
    # Getting the type of '_get_test_tolerance' (line 211)
    _get_test_tolerance_402095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 32), '_get_test_tolerance', False)
    # Calling _get_test_tolerance(args, kwargs) (line 211)
    _get_test_tolerance_call_result_402099 = invoke(stypy.reporting.localization.Localization(__file__, 211, 32), _get_test_tolerance_402095, *[typ_402096, mattype_402097], **kwargs_402098)
    
    # Obtaining the member '__getitem__' of a type (line 211)
    getitem___402100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 211, 4), _get_test_tolerance_call_result_402099, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 211)
    subscript_call_result_402101 = invoke(stypy.reporting.localization.Localization(__file__, 211, 4), getitem___402100, int_402094)
    
    # Assigning a type to the variable 'tuple_var_assignment_401309' (line 211)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'tuple_var_assignment_401309', subscript_call_result_402101)
    
    # Assigning a Subscript to a Name (line 211):
    
    # Obtaining the type of the subscript
    int_402102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 4), 'int')
    
    # Call to _get_test_tolerance(...): (line 211)
    # Processing the call arguments (line 211)
    # Getting the type of 'typ' (line 211)
    typ_402104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 52), 'typ', False)
    # Getting the type of 'mattype' (line 211)
    mattype_402105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 57), 'mattype', False)
    # Processing the call keyword arguments (line 211)
    kwargs_402106 = {}
    # Getting the type of '_get_test_tolerance' (line 211)
    _get_test_tolerance_402103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 32), '_get_test_tolerance', False)
    # Calling _get_test_tolerance(args, kwargs) (line 211)
    _get_test_tolerance_call_result_402107 = invoke(stypy.reporting.localization.Localization(__file__, 211, 32), _get_test_tolerance_402103, *[typ_402104, mattype_402105], **kwargs_402106)
    
    # Obtaining the member '__getitem__' of a type (line 211)
    getitem___402108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 211, 4), _get_test_tolerance_call_result_402107, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 211)
    subscript_call_result_402109 = invoke(stypy.reporting.localization.Localization(__file__, 211, 4), getitem___402108, int_402102)
    
    # Assigning a type to the variable 'tuple_var_assignment_401310' (line 211)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'tuple_var_assignment_401310', subscript_call_result_402109)
    
    # Assigning a Subscript to a Name (line 211):
    
    # Obtaining the type of the subscript
    int_402110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 4), 'int')
    
    # Call to _get_test_tolerance(...): (line 211)
    # Processing the call arguments (line 211)
    # Getting the type of 'typ' (line 211)
    typ_402112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 52), 'typ', False)
    # Getting the type of 'mattype' (line 211)
    mattype_402113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 57), 'mattype', False)
    # Processing the call keyword arguments (line 211)
    kwargs_402114 = {}
    # Getting the type of '_get_test_tolerance' (line 211)
    _get_test_tolerance_402111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 32), '_get_test_tolerance', False)
    # Calling _get_test_tolerance(args, kwargs) (line 211)
    _get_test_tolerance_call_result_402115 = invoke(stypy.reporting.localization.Localization(__file__, 211, 32), _get_test_tolerance_402111, *[typ_402112, mattype_402113], **kwargs_402114)
    
    # Obtaining the member '__getitem__' of a type (line 211)
    getitem___402116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 211, 4), _get_test_tolerance_call_result_402115, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 211)
    subscript_call_result_402117 = invoke(stypy.reporting.localization.Localization(__file__, 211, 4), getitem___402116, int_402110)
    
    # Assigning a type to the variable 'tuple_var_assignment_401311' (line 211)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'tuple_var_assignment_401311', subscript_call_result_402117)
    
    # Assigning a Name to a Subscript (line 211):
    # Getting the type of 'tuple_var_assignment_401309' (line 211)
    tuple_var_assignment_401309_402118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'tuple_var_assignment_401309')
    # Getting the type of 'kwargs' (line 211)
    kwargs_402119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'kwargs')
    str_402120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 11), 'str', 'tol')
    # Storing an element on a container (line 211)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 4), kwargs_402119, (str_402120, tuple_var_assignment_401309_402118))
    
    # Assigning a Name to a Name (line 211):
    # Getting the type of 'tuple_var_assignment_401310' (line 211)
    tuple_var_assignment_401310_402121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'tuple_var_assignment_401310')
    # Assigning a type to the variable 'rtol' (line 211)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 19), 'rtol', tuple_var_assignment_401310_402121)
    
    # Assigning a Name to a Name (line 211):
    # Getting the type of 'tuple_var_assignment_401311' (line 211)
    tuple_var_assignment_401311_402122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'tuple_var_assignment_401311')
    # Assigning a type to the variable 'atol' (line 211)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 25), 'atol', tuple_var_assignment_401311_402122)
    
    # Assigning a Num to a Name (line 218):
    
    # Assigning a Num to a Name (line 218):
    int_402123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 218, 13), 'int')
    # Assigning a type to the variable 'ntries' (line 218)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 4), 'ntries', int_402123)
    
    
    # Getting the type of 'ntries' (line 219)
    ntries_402124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 10), 'ntries')
    int_402125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 19), 'int')
    # Applying the binary operator '<' (line 219)
    result_lt_402126 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 10), '<', ntries_402124, int_402125)
    
    # Testing the type of an if condition (line 219)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 219, 4), result_lt_402126)
    # SSA begins for while statement (line 219)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Getting the type of 'general' (line 221)
    general_402127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 11), 'general')
    # Testing the type of an if condition (line 221)
    if_condition_402128 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 221, 8), general_402127)
    # Assigning a type to the variable 'if_condition_402128' (line 221)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 221, 8), 'if_condition_402128', if_condition_402128)
    # SSA begins for if statement (line 221)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # SSA begins for try-except statement (line 222)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Tuple (line 223):
    
    # Assigning a Subscript to a Name (line 223):
    
    # Obtaining the type of the subscript
    int_402129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 16), 'int')
    
    # Call to eigs_func(...): (line 223)
    # Processing the call arguments (line 223)
    # Getting the type of 'ac' (line 223)
    ac_402131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 39), 'ac', False)
    # Getting the type of 'k' (line 223)
    k_402132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 43), 'k', False)
    # Getting the type of 'bc' (line 223)
    bc_402133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 46), 'bc', False)
    # Processing the call keyword arguments (line 223)
    # Getting the type of 'kwargs' (line 223)
    kwargs_402134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 52), 'kwargs', False)
    kwargs_402135 = {'kwargs_402134': kwargs_402134}
    # Getting the type of 'eigs_func' (line 223)
    eigs_func_402130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 29), 'eigs_func', False)
    # Calling eigs_func(args, kwargs) (line 223)
    eigs_func_call_result_402136 = invoke(stypy.reporting.localization.Localization(__file__, 223, 29), eigs_func_402130, *[ac_402131, k_402132, bc_402133], **kwargs_402135)
    
    # Obtaining the member '__getitem__' of a type (line 223)
    getitem___402137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 16), eigs_func_call_result_402136, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 223)
    subscript_call_result_402138 = invoke(stypy.reporting.localization.Localization(__file__, 223, 16), getitem___402137, int_402129)
    
    # Assigning a type to the variable 'tuple_var_assignment_401312' (line 223)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 16), 'tuple_var_assignment_401312', subscript_call_result_402138)
    
    # Assigning a Subscript to a Name (line 223):
    
    # Obtaining the type of the subscript
    int_402139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 16), 'int')
    
    # Call to eigs_func(...): (line 223)
    # Processing the call arguments (line 223)
    # Getting the type of 'ac' (line 223)
    ac_402141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 39), 'ac', False)
    # Getting the type of 'k' (line 223)
    k_402142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 43), 'k', False)
    # Getting the type of 'bc' (line 223)
    bc_402143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 46), 'bc', False)
    # Processing the call keyword arguments (line 223)
    # Getting the type of 'kwargs' (line 223)
    kwargs_402144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 52), 'kwargs', False)
    kwargs_402145 = {'kwargs_402144': kwargs_402144}
    # Getting the type of 'eigs_func' (line 223)
    eigs_func_402140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 29), 'eigs_func', False)
    # Calling eigs_func(args, kwargs) (line 223)
    eigs_func_call_result_402146 = invoke(stypy.reporting.localization.Localization(__file__, 223, 29), eigs_func_402140, *[ac_402141, k_402142, bc_402143], **kwargs_402145)
    
    # Obtaining the member '__getitem__' of a type (line 223)
    getitem___402147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 16), eigs_func_call_result_402146, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 223)
    subscript_call_result_402148 = invoke(stypy.reporting.localization.Localization(__file__, 223, 16), getitem___402147, int_402139)
    
    # Assigning a type to the variable 'tuple_var_assignment_401313' (line 223)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 16), 'tuple_var_assignment_401313', subscript_call_result_402148)
    
    # Assigning a Name to a Name (line 223):
    # Getting the type of 'tuple_var_assignment_401312' (line 223)
    tuple_var_assignment_401312_402149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 16), 'tuple_var_assignment_401312')
    # Assigning a type to the variable 'eval' (line 223)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 16), 'eval', tuple_var_assignment_401312_402149)
    
    # Assigning a Name to a Name (line 223):
    # Getting the type of 'tuple_var_assignment_401313' (line 223)
    tuple_var_assignment_401313_402150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 16), 'tuple_var_assignment_401313')
    # Assigning a type to the variable 'evec' (line 223)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 22), 'evec', tuple_var_assignment_401313_402150)
    # SSA branch for the except part of a try statement (line 222)
    # SSA branch for the except 'ArpackNoConvergence' branch of a try statement (line 222)
    module_type_store.open_ssa_branch('except')
    
    # Assigning a BinOp to a Subscript (line 225):
    
    # Assigning a BinOp to a Subscript (line 225):
    int_402151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 36), 'int')
    
    # Obtaining the type of the subscript
    int_402152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 47), 'int')
    # Getting the type of 'a' (line 225)
    a_402153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 39), 'a')
    # Obtaining the member 'shape' of a type (line 225)
    shape_402154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 39), a_402153, 'shape')
    # Obtaining the member '__getitem__' of a type (line 225)
    getitem___402155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 39), shape_402154, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 225)
    subscript_call_result_402156 = invoke(stypy.reporting.localization.Localization(__file__, 225, 39), getitem___402155, int_402152)
    
    # Applying the binary operator '*' (line 225)
    result_mul_402157 = python_operator(stypy.reporting.localization.Localization(__file__, 225, 36), '*', int_402151, subscript_call_result_402156)
    
    # Getting the type of 'kwargs' (line 225)
    kwargs_402158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 16), 'kwargs')
    str_402159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 23), 'str', 'maxiter')
    # Storing an element on a container (line 225)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 225, 16), kwargs_402158, (str_402159, result_mul_402157))
    
    # Assigning a Call to a Tuple (line 226):
    
    # Assigning a Subscript to a Name (line 226):
    
    # Obtaining the type of the subscript
    int_402160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 16), 'int')
    
    # Call to eigs_func(...): (line 226)
    # Processing the call arguments (line 226)
    # Getting the type of 'ac' (line 226)
    ac_402162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 39), 'ac', False)
    # Getting the type of 'k' (line 226)
    k_402163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 43), 'k', False)
    # Getting the type of 'bc' (line 226)
    bc_402164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 46), 'bc', False)
    # Processing the call keyword arguments (line 226)
    # Getting the type of 'kwargs' (line 226)
    kwargs_402165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 52), 'kwargs', False)
    kwargs_402166 = {'kwargs_402165': kwargs_402165}
    # Getting the type of 'eigs_func' (line 226)
    eigs_func_402161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 29), 'eigs_func', False)
    # Calling eigs_func(args, kwargs) (line 226)
    eigs_func_call_result_402167 = invoke(stypy.reporting.localization.Localization(__file__, 226, 29), eigs_func_402161, *[ac_402162, k_402163, bc_402164], **kwargs_402166)
    
    # Obtaining the member '__getitem__' of a type (line 226)
    getitem___402168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 16), eigs_func_call_result_402167, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 226)
    subscript_call_result_402169 = invoke(stypy.reporting.localization.Localization(__file__, 226, 16), getitem___402168, int_402160)
    
    # Assigning a type to the variable 'tuple_var_assignment_401314' (line 226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 16), 'tuple_var_assignment_401314', subscript_call_result_402169)
    
    # Assigning a Subscript to a Name (line 226):
    
    # Obtaining the type of the subscript
    int_402170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 16), 'int')
    
    # Call to eigs_func(...): (line 226)
    # Processing the call arguments (line 226)
    # Getting the type of 'ac' (line 226)
    ac_402172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 39), 'ac', False)
    # Getting the type of 'k' (line 226)
    k_402173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 43), 'k', False)
    # Getting the type of 'bc' (line 226)
    bc_402174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 46), 'bc', False)
    # Processing the call keyword arguments (line 226)
    # Getting the type of 'kwargs' (line 226)
    kwargs_402175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 52), 'kwargs', False)
    kwargs_402176 = {'kwargs_402175': kwargs_402175}
    # Getting the type of 'eigs_func' (line 226)
    eigs_func_402171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 29), 'eigs_func', False)
    # Calling eigs_func(args, kwargs) (line 226)
    eigs_func_call_result_402177 = invoke(stypy.reporting.localization.Localization(__file__, 226, 29), eigs_func_402171, *[ac_402172, k_402173, bc_402174], **kwargs_402176)
    
    # Obtaining the member '__getitem__' of a type (line 226)
    getitem___402178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 16), eigs_func_call_result_402177, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 226)
    subscript_call_result_402179 = invoke(stypy.reporting.localization.Localization(__file__, 226, 16), getitem___402178, int_402170)
    
    # Assigning a type to the variable 'tuple_var_assignment_401315' (line 226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 16), 'tuple_var_assignment_401315', subscript_call_result_402179)
    
    # Assigning a Name to a Name (line 226):
    # Getting the type of 'tuple_var_assignment_401314' (line 226)
    tuple_var_assignment_401314_402180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 16), 'tuple_var_assignment_401314')
    # Assigning a type to the variable 'eval' (line 226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 16), 'eval', tuple_var_assignment_401314_402180)
    
    # Assigning a Name to a Name (line 226):
    # Getting the type of 'tuple_var_assignment_401315' (line 226)
    tuple_var_assignment_401315_402181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 16), 'tuple_var_assignment_401315')
    # Assigning a type to the variable 'evec' (line 226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 22), 'evec', tuple_var_assignment_401315_402181)
    # SSA join for try-except statement (line 222)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 221)
    module_type_store.open_ssa_branch('else')
    
    
    # SSA begins for try-except statement (line 228)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Tuple (line 229):
    
    # Assigning a Subscript to a Name (line 229):
    
    # Obtaining the type of the subscript
    int_402182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 16), 'int')
    
    # Call to eigs_func(...): (line 229)
    # Processing the call arguments (line 229)
    # Getting the type of 'ac' (line 229)
    ac_402184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 39), 'ac', False)
    # Getting the type of 'k' (line 229)
    k_402185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 43), 'k', False)
    # Processing the call keyword arguments (line 229)
    # Getting the type of 'kwargs' (line 229)
    kwargs_402186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 48), 'kwargs', False)
    kwargs_402187 = {'kwargs_402186': kwargs_402186}
    # Getting the type of 'eigs_func' (line 229)
    eigs_func_402183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 29), 'eigs_func', False)
    # Calling eigs_func(args, kwargs) (line 229)
    eigs_func_call_result_402188 = invoke(stypy.reporting.localization.Localization(__file__, 229, 29), eigs_func_402183, *[ac_402184, k_402185], **kwargs_402187)
    
    # Obtaining the member '__getitem__' of a type (line 229)
    getitem___402189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 16), eigs_func_call_result_402188, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 229)
    subscript_call_result_402190 = invoke(stypy.reporting.localization.Localization(__file__, 229, 16), getitem___402189, int_402182)
    
    # Assigning a type to the variable 'tuple_var_assignment_401316' (line 229)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 16), 'tuple_var_assignment_401316', subscript_call_result_402190)
    
    # Assigning a Subscript to a Name (line 229):
    
    # Obtaining the type of the subscript
    int_402191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 16), 'int')
    
    # Call to eigs_func(...): (line 229)
    # Processing the call arguments (line 229)
    # Getting the type of 'ac' (line 229)
    ac_402193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 39), 'ac', False)
    # Getting the type of 'k' (line 229)
    k_402194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 43), 'k', False)
    # Processing the call keyword arguments (line 229)
    # Getting the type of 'kwargs' (line 229)
    kwargs_402195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 48), 'kwargs', False)
    kwargs_402196 = {'kwargs_402195': kwargs_402195}
    # Getting the type of 'eigs_func' (line 229)
    eigs_func_402192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 29), 'eigs_func', False)
    # Calling eigs_func(args, kwargs) (line 229)
    eigs_func_call_result_402197 = invoke(stypy.reporting.localization.Localization(__file__, 229, 29), eigs_func_402192, *[ac_402193, k_402194], **kwargs_402196)
    
    # Obtaining the member '__getitem__' of a type (line 229)
    getitem___402198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 16), eigs_func_call_result_402197, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 229)
    subscript_call_result_402199 = invoke(stypy.reporting.localization.Localization(__file__, 229, 16), getitem___402198, int_402191)
    
    # Assigning a type to the variable 'tuple_var_assignment_401317' (line 229)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 16), 'tuple_var_assignment_401317', subscript_call_result_402199)
    
    # Assigning a Name to a Name (line 229):
    # Getting the type of 'tuple_var_assignment_401316' (line 229)
    tuple_var_assignment_401316_402200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 16), 'tuple_var_assignment_401316')
    # Assigning a type to the variable 'eval' (line 229)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 16), 'eval', tuple_var_assignment_401316_402200)
    
    # Assigning a Name to a Name (line 229):
    # Getting the type of 'tuple_var_assignment_401317' (line 229)
    tuple_var_assignment_401317_402201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 16), 'tuple_var_assignment_401317')
    # Assigning a type to the variable 'evec' (line 229)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 22), 'evec', tuple_var_assignment_401317_402201)
    # SSA branch for the except part of a try statement (line 228)
    # SSA branch for the except 'ArpackNoConvergence' branch of a try statement (line 228)
    module_type_store.open_ssa_branch('except')
    
    # Assigning a BinOp to a Subscript (line 231):
    
    # Assigning a BinOp to a Subscript (line 231):
    int_402202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 36), 'int')
    
    # Obtaining the type of the subscript
    int_402203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 47), 'int')
    # Getting the type of 'a' (line 231)
    a_402204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 39), 'a')
    # Obtaining the member 'shape' of a type (line 231)
    shape_402205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 231, 39), a_402204, 'shape')
    # Obtaining the member '__getitem__' of a type (line 231)
    getitem___402206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 231, 39), shape_402205, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 231)
    subscript_call_result_402207 = invoke(stypy.reporting.localization.Localization(__file__, 231, 39), getitem___402206, int_402203)
    
    # Applying the binary operator '*' (line 231)
    result_mul_402208 = python_operator(stypy.reporting.localization.Localization(__file__, 231, 36), '*', int_402202, subscript_call_result_402207)
    
    # Getting the type of 'kwargs' (line 231)
    kwargs_402209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 16), 'kwargs')
    str_402210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 23), 'str', 'maxiter')
    # Storing an element on a container (line 231)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 16), kwargs_402209, (str_402210, result_mul_402208))
    
    # Assigning a Call to a Tuple (line 232):
    
    # Assigning a Subscript to a Name (line 232):
    
    # Obtaining the type of the subscript
    int_402211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 16), 'int')
    
    # Call to eigs_func(...): (line 232)
    # Processing the call arguments (line 232)
    # Getting the type of 'ac' (line 232)
    ac_402213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 39), 'ac', False)
    # Getting the type of 'k' (line 232)
    k_402214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 43), 'k', False)
    # Processing the call keyword arguments (line 232)
    # Getting the type of 'kwargs' (line 232)
    kwargs_402215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 48), 'kwargs', False)
    kwargs_402216 = {'kwargs_402215': kwargs_402215}
    # Getting the type of 'eigs_func' (line 232)
    eigs_func_402212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 29), 'eigs_func', False)
    # Calling eigs_func(args, kwargs) (line 232)
    eigs_func_call_result_402217 = invoke(stypy.reporting.localization.Localization(__file__, 232, 29), eigs_func_402212, *[ac_402213, k_402214], **kwargs_402216)
    
    # Obtaining the member '__getitem__' of a type (line 232)
    getitem___402218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 16), eigs_func_call_result_402217, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 232)
    subscript_call_result_402219 = invoke(stypy.reporting.localization.Localization(__file__, 232, 16), getitem___402218, int_402211)
    
    # Assigning a type to the variable 'tuple_var_assignment_401318' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 16), 'tuple_var_assignment_401318', subscript_call_result_402219)
    
    # Assigning a Subscript to a Name (line 232):
    
    # Obtaining the type of the subscript
    int_402220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 16), 'int')
    
    # Call to eigs_func(...): (line 232)
    # Processing the call arguments (line 232)
    # Getting the type of 'ac' (line 232)
    ac_402222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 39), 'ac', False)
    # Getting the type of 'k' (line 232)
    k_402223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 43), 'k', False)
    # Processing the call keyword arguments (line 232)
    # Getting the type of 'kwargs' (line 232)
    kwargs_402224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 48), 'kwargs', False)
    kwargs_402225 = {'kwargs_402224': kwargs_402224}
    # Getting the type of 'eigs_func' (line 232)
    eigs_func_402221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 29), 'eigs_func', False)
    # Calling eigs_func(args, kwargs) (line 232)
    eigs_func_call_result_402226 = invoke(stypy.reporting.localization.Localization(__file__, 232, 29), eigs_func_402221, *[ac_402222, k_402223], **kwargs_402225)
    
    # Obtaining the member '__getitem__' of a type (line 232)
    getitem___402227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 16), eigs_func_call_result_402226, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 232)
    subscript_call_result_402228 = invoke(stypy.reporting.localization.Localization(__file__, 232, 16), getitem___402227, int_402220)
    
    # Assigning a type to the variable 'tuple_var_assignment_401319' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 16), 'tuple_var_assignment_401319', subscript_call_result_402228)
    
    # Assigning a Name to a Name (line 232):
    # Getting the type of 'tuple_var_assignment_401318' (line 232)
    tuple_var_assignment_401318_402229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 16), 'tuple_var_assignment_401318')
    # Assigning a type to the variable 'eval' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 16), 'eval', tuple_var_assignment_401318_402229)
    
    # Assigning a Name to a Name (line 232):
    # Getting the type of 'tuple_var_assignment_401319' (line 232)
    tuple_var_assignment_401319_402230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 16), 'tuple_var_assignment_401319')
    # Assigning a type to the variable 'evec' (line 232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 22), 'evec', tuple_var_assignment_401319_402230)
    # SSA join for try-except statement (line 228)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 221)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 234):
    
    # Assigning a Call to a Name (line 234):
    
    # Call to argsort_which(...): (line 234)
    # Processing the call arguments (line 234)
    # Getting the type of 'eval' (line 234)
    eval_402232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 28), 'eval', False)
    # Getting the type of 'typ' (line 234)
    typ_402233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 34), 'typ', False)
    # Getting the type of 'k' (line 234)
    k_402234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 39), 'k', False)
    # Getting the type of 'which' (line 234)
    which_402235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 42), 'which', False)
    # Getting the type of 'sigma' (line 235)
    sigma_402236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 28), 'sigma', False)
    # Getting the type of 'OPpart' (line 235)
    OPpart_402237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 35), 'OPpart', False)
    # Getting the type of 'mode' (line 235)
    mode_402238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 43), 'mode', False)
    # Processing the call keyword arguments (line 234)
    kwargs_402239 = {}
    # Getting the type of 'argsort_which' (line 234)
    argsort_which_402231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 14), 'argsort_which', False)
    # Calling argsort_which(args, kwargs) (line 234)
    argsort_which_call_result_402240 = invoke(stypy.reporting.localization.Localization(__file__, 234, 14), argsort_which_402231, *[eval_402232, typ_402233, k_402234, which_402235, sigma_402236, OPpart_402237, mode_402238], **kwargs_402239)
    
    # Assigning a type to the variable 'ind' (line 234)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'ind', argsort_which_call_result_402240)
    
    # Assigning a Subscript to a Name (line 236):
    
    # Assigning a Subscript to a Name (line 236):
    
    # Obtaining the type of the subscript
    # Getting the type of 'ind' (line 236)
    ind_402241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 20), 'ind')
    # Getting the type of 'eval' (line 236)
    eval_402242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 15), 'eval')
    # Obtaining the member '__getitem__' of a type (line 236)
    getitem___402243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 15), eval_402242, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 236)
    subscript_call_result_402244 = invoke(stypy.reporting.localization.Localization(__file__, 236, 15), getitem___402243, ind_402241)
    
    # Assigning a type to the variable 'eval' (line 236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'eval', subscript_call_result_402244)
    
    # Assigning a Subscript to a Name (line 237):
    
    # Assigning a Subscript to a Name (line 237):
    
    # Obtaining the type of the subscript
    slice_402245 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 237, 15), None, None, None)
    # Getting the type of 'ind' (line 237)
    ind_402246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 22), 'ind')
    # Getting the type of 'evec' (line 237)
    evec_402247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 15), 'evec')
    # Obtaining the member '__getitem__' of a type (line 237)
    getitem___402248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 15), evec_402247, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 237)
    subscript_call_result_402249 = invoke(stypy.reporting.localization.Localization(__file__, 237, 15), getitem___402248, (slice_402245, ind_402246))
    
    # Assigning a type to the variable 'evec' (line 237)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'evec', subscript_call_result_402249)
    
    # Assigning a Call to a Name (line 240):
    
    # Assigning a Call to a Name (line 240):
    
    # Call to dot(...): (line 240)
    # Processing the call arguments (line 240)
    # Getting the type of 'a' (line 240)
    a_402252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 21), 'a', False)
    # Getting the type of 'evec' (line 240)
    evec_402253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 24), 'evec', False)
    # Processing the call keyword arguments (line 240)
    kwargs_402254 = {}
    # Getting the type of 'np' (line 240)
    np_402250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 14), 'np', False)
    # Obtaining the member 'dot' of a type (line 240)
    dot_402251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 14), np_402250, 'dot')
    # Calling dot(args, kwargs) (line 240)
    dot_call_result_402255 = invoke(stypy.reporting.localization.Localization(__file__, 240, 14), dot_402251, *[a_402252, evec_402253], **kwargs_402254)
    
    # Assigning a type to the variable 'LHS' (line 240)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 8), 'LHS', dot_call_result_402255)
    
    # Getting the type of 'general' (line 241)
    general_402256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 11), 'general')
    # Testing the type of an if condition (line 241)
    if_condition_402257 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 241, 8), general_402256)
    # Assigning a type to the variable 'if_condition_402257' (line 241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 8), 'if_condition_402257', if_condition_402257)
    # SSA begins for if statement (line 241)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 242):
    
    # Assigning a BinOp to a Name (line 242):
    # Getting the type of 'eval' (line 242)
    eval_402258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 18), 'eval')
    
    # Call to dot(...): (line 242)
    # Processing the call arguments (line 242)
    # Getting the type of 'b' (line 242)
    b_402261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 32), 'b', False)
    # Getting the type of 'evec' (line 242)
    evec_402262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 35), 'evec', False)
    # Processing the call keyword arguments (line 242)
    kwargs_402263 = {}
    # Getting the type of 'np' (line 242)
    np_402259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 25), 'np', False)
    # Obtaining the member 'dot' of a type (line 242)
    dot_402260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 25), np_402259, 'dot')
    # Calling dot(args, kwargs) (line 242)
    dot_call_result_402264 = invoke(stypy.reporting.localization.Localization(__file__, 242, 25), dot_402260, *[b_402261, evec_402262], **kwargs_402263)
    
    # Applying the binary operator '*' (line 242)
    result_mul_402265 = python_operator(stypy.reporting.localization.Localization(__file__, 242, 18), '*', eval_402258, dot_call_result_402264)
    
    # Assigning a type to the variable 'RHS' (line 242)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 12), 'RHS', result_mul_402265)
    # SSA branch for the else part of an if statement (line 241)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 244):
    
    # Assigning a BinOp to a Name (line 244):
    # Getting the type of 'eval' (line 244)
    eval_402266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 18), 'eval')
    # Getting the type of 'evec' (line 244)
    evec_402267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 25), 'evec')
    # Applying the binary operator '*' (line 244)
    result_mul_402268 = python_operator(stypy.reporting.localization.Localization(__file__, 244, 18), '*', eval_402266, evec_402267)
    
    # Assigning a type to the variable 'RHS' (line 244)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 12), 'RHS', result_mul_402268)
    
    # Call to assert_allclose(...): (line 246)
    # Processing the call arguments (line 246)
    # Getting the type of 'LHS' (line 246)
    LHS_402270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 28), 'LHS', False)
    # Getting the type of 'RHS' (line 246)
    RHS_402271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 33), 'RHS', False)
    # Processing the call keyword arguments (line 246)
    # Getting the type of 'rtol' (line 246)
    rtol_402272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 43), 'rtol', False)
    keyword_402273 = rtol_402272
    # Getting the type of 'atol' (line 246)
    atol_402274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 54), 'atol', False)
    keyword_402275 = atol_402274
    # Getting the type of 'err' (line 246)
    err_402276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 68), 'err', False)
    keyword_402277 = err_402276
    kwargs_402278 = {'rtol': keyword_402273, 'err_msg': keyword_402277, 'atol': keyword_402275}
    # Getting the type of 'assert_allclose' (line 246)
    assert_allclose_402269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 246)
    assert_allclose_call_result_402279 = invoke(stypy.reporting.localization.Localization(__file__, 246, 12), assert_allclose_402269, *[LHS_402270, RHS_402271], **kwargs_402278)
    
    # SSA join for if statement (line 241)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # SSA begins for try-except statement (line 248)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Call to assert_allclose_cc(...): (line 250)
    # Processing the call arguments (line 250)
    # Getting the type of 'eval' (line 250)
    eval_402281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 31), 'eval', False)
    # Getting the type of 'exact_eval' (line 250)
    exact_eval_402282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 37), 'exact_eval', False)
    # Processing the call keyword arguments (line 250)
    # Getting the type of 'rtol' (line 250)
    rtol_402283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 54), 'rtol', False)
    keyword_402284 = rtol_402283
    # Getting the type of 'atol' (line 250)
    atol_402285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 65), 'atol', False)
    keyword_402286 = atol_402285
    # Getting the type of 'err' (line 251)
    err_402287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 39), 'err', False)
    keyword_402288 = err_402287
    kwargs_402289 = {'rtol': keyword_402284, 'err_msg': keyword_402288, 'atol': keyword_402286}
    # Getting the type of 'assert_allclose_cc' (line 250)
    assert_allclose_cc_402280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 12), 'assert_allclose_cc', False)
    # Calling assert_allclose_cc(args, kwargs) (line 250)
    assert_allclose_cc_call_result_402290 = invoke(stypy.reporting.localization.Localization(__file__, 250, 12), assert_allclose_cc_402280, *[eval_402281, exact_eval_402282], **kwargs_402289)
    
    # SSA branch for the except part of a try statement (line 248)
    # SSA branch for the except 'AssertionError' branch of a try statement (line 248)
    module_type_store.open_ssa_branch('except')
    
    # Getting the type of 'ntries' (line 254)
    ntries_402291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'ntries')
    int_402292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 22), 'int')
    # Applying the binary operator '+=' (line 254)
    result_iadd_402293 = python_operator(stypy.reporting.localization.Localization(__file__, 254, 12), '+=', ntries_402291, int_402292)
    # Assigning a type to the variable 'ntries' (line 254)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'ntries', result_iadd_402293)
    
    # SSA join for try-except statement (line 248)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for while statement (line 219)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to assert_allclose_cc(...): (line 257)
    # Processing the call arguments (line 257)
    # Getting the type of 'eval' (line 257)
    eval_402295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 23), 'eval', False)
    # Getting the type of 'exact_eval' (line 257)
    exact_eval_402296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 29), 'exact_eval', False)
    # Processing the call keyword arguments (line 257)
    # Getting the type of 'rtol' (line 257)
    rtol_402297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 46), 'rtol', False)
    keyword_402298 = rtol_402297
    # Getting the type of 'atol' (line 257)
    atol_402299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 57), 'atol', False)
    keyword_402300 = atol_402299
    # Getting the type of 'err' (line 257)
    err_402301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 71), 'err', False)
    keyword_402302 = err_402301
    kwargs_402303 = {'rtol': keyword_402298, 'err_msg': keyword_402302, 'atol': keyword_402300}
    # Getting the type of 'assert_allclose_cc' (line 257)
    assert_allclose_cc_402294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 4), 'assert_allclose_cc', False)
    # Calling assert_allclose_cc(args, kwargs) (line 257)
    assert_allclose_cc_call_result_402304 = invoke(stypy.reporting.localization.Localization(__file__, 257, 4), assert_allclose_cc_402294, *[eval_402295, exact_eval_402296], **kwargs_402303)
    
    
    # ################# End of 'eval_evec(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'eval_evec' in the type store
    # Getting the type of 'stypy_return_type' (line 168)
    stypy_return_type_402305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_402305)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'eval_evec'
    return stypy_return_type_402305

# Assigning a type to the variable 'eval_evec' (line 168)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 0), 'eval_evec', eval_evec)
# Declaration of the 'DictWithRepr' class
# Getting the type of 'dict' (line 260)
dict_402306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 19), 'dict')

class DictWithRepr(dict_402306, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 261, 4, False)
        # Assigning a type to the variable 'self' (line 262)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DictWithRepr.__init__', ['name'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['name'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 262):
        
        # Assigning a Name to a Attribute (line 262):
        # Getting the type of 'name' (line 262)
        name_402307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 20), 'name')
        # Getting the type of 'self' (line 262)
        self_402308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 8), 'self')
        # Setting the type of the member 'name' of a type (line 262)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 8), self_402308, 'name', name_402307)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def stypy__repr__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__repr__'
        module_type_store = module_type_store.open_function_context('__repr__', 264, 4, False)
        # Assigning a type to the variable 'self' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_localization', localization)
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_type_store', module_type_store)
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_function_name', 'DictWithRepr.stypy__repr__')
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_param_names_list', [])
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_varargs_param_name', None)
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_call_defaults', defaults)
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_call_varargs', varargs)
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        DictWithRepr.stypy__repr__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'DictWithRepr.stypy__repr__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__repr__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__repr__(...)' code ##################

        str_402309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 15), 'str', '<%s>')
        # Getting the type of 'self' (line 265)
        self_402310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 24), 'self')
        # Obtaining the member 'name' of a type (line 265)
        name_402311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 24), self_402310, 'name')
        # Applying the binary operator '%' (line 265)
        result_mod_402312 = python_operator(stypy.reporting.localization.Localization(__file__, 265, 15), '%', str_402309, name_402311)
        
        # Assigning a type to the variable 'stypy_return_type' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 8), 'stypy_return_type', result_mod_402312)
        
        # ################# End of '__repr__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__repr__' in the type store
        # Getting the type of 'stypy_return_type' (line 264)
        stypy_return_type_402313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_402313)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__repr__'
        return stypy_return_type_402313


# Assigning a type to the variable 'DictWithRepr' (line 260)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 0), 'DictWithRepr', DictWithRepr)
# Declaration of the 'SymmetricParams' class

class SymmetricParams:

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 269, 4, False)
        # Assigning a type to the variable 'self' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SymmetricParams.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 270):
        
        # Assigning a Name to a Attribute (line 270):
        # Getting the type of 'eigsh' (line 270)
        eigsh_402314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 20), 'eigsh')
        # Getting the type of 'self' (line 270)
        self_402315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'self')
        # Setting the type of the member 'eigs' of a type (line 270)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 8), self_402315, 'eigs', eigsh_402314)
        
        # Assigning a List to a Attribute (line 271):
        
        # Assigning a List to a Attribute (line 271):
        
        # Obtaining an instance of the builtin type 'list' (line 271)
        list_402316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 271)
        # Adding element type (line 271)
        str_402317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 22), 'str', 'LM')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 21), list_402316, str_402317)
        # Adding element type (line 271)
        str_402318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 28), 'str', 'SM')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 21), list_402316, str_402318)
        # Adding element type (line 271)
        str_402319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 34), 'str', 'LA')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 21), list_402316, str_402319)
        # Adding element type (line 271)
        str_402320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 40), 'str', 'SA')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 21), list_402316, str_402320)
        # Adding element type (line 271)
        str_402321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 46), 'str', 'BE')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 21), list_402316, str_402321)
        
        # Getting the type of 'self' (line 271)
        self_402322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 8), 'self')
        # Setting the type of the member 'which' of a type (line 271)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 8), self_402322, 'which', list_402316)
        
        # Assigning a List to a Attribute (line 272):
        
        # Assigning a List to a Attribute (line 272):
        
        # Obtaining an instance of the builtin type 'list' (line 272)
        list_402323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 272)
        # Adding element type (line 272)
        # Getting the type of 'csr_matrix' (line 272)
        csr_matrix_402324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 25), 'csr_matrix')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 24), list_402323, csr_matrix_402324)
        # Adding element type (line 272)
        # Getting the type of 'aslinearoperator' (line 272)
        aslinearoperator_402325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 37), 'aslinearoperator')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 24), list_402323, aslinearoperator_402325)
        # Adding element type (line 272)
        # Getting the type of 'np' (line 272)
        np_402326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 55), 'np')
        # Obtaining the member 'asarray' of a type (line 272)
        asarray_402327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 55), np_402326, 'asarray')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 24), list_402323, asarray_402327)
        
        # Getting the type of 'self' (line 272)
        self_402328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 8), 'self')
        # Setting the type of the member 'mattypes' of a type (line 272)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 8), self_402328, 'mattypes', list_402323)
        
        # Assigning a Dict to a Attribute (line 273):
        
        # Assigning a Dict to a Attribute (line 273):
        
        # Obtaining an instance of the builtin type 'dict' (line 273)
        dict_402329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 28), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 273)
        # Adding element type (key, value) (line 273)
        # Getting the type of 'None' (line 273)
        None_402330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 29), 'None')
        
        # Obtaining an instance of the builtin type 'list' (line 273)
        list_402331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 273)
        # Adding element type (line 273)
        str_402332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 36), 'str', 'normal')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 273, 35), list_402331, str_402332)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 273, 28), dict_402329, (None_402330, list_402331))
        # Adding element type (key, value) (line 273)
        float_402333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 29), 'float')
        
        # Obtaining an instance of the builtin type 'list' (line 274)
        list_402334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 274)
        # Adding element type (line 274)
        str_402335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 35), 'str', 'normal')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 274, 34), list_402334, str_402335)
        # Adding element type (line 274)
        str_402336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 45), 'str', 'buckling')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 274, 34), list_402334, str_402336)
        # Adding element type (line 274)
        str_402337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 57), 'str', 'cayley')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 274, 34), list_402334, str_402337)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 273, 28), dict_402329, (float_402333, list_402334))
        
        # Getting the type of 'self' (line 273)
        self_402338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 8), 'self')
        # Setting the type of the member 'sigmas_modes' of a type (line 273)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 8), self_402338, 'sigmas_modes', dict_402329)
        
        # Assigning a Num to a Name (line 279):
        
        # Assigning a Num to a Name (line 279):
        int_402339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 12), 'int')
        # Assigning a type to the variable 'N' (line 279)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'N', int_402339)
        
        # Call to seed(...): (line 280)
        # Processing the call arguments (line 280)
        int_402343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 23), 'int')
        # Processing the call keyword arguments (line 280)
        kwargs_402344 = {}
        # Getting the type of 'np' (line 280)
        np_402340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 280)
        random_402341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 8), np_402340, 'random')
        # Obtaining the member 'seed' of a type (line 280)
        seed_402342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 8), random_402341, 'seed')
        # Calling seed(args, kwargs) (line 280)
        seed_call_result_402345 = invoke(stypy.reporting.localization.Localization(__file__, 280, 8), seed_402342, *[int_402343], **kwargs_402344)
        
        
        # Assigning a Call to a Name (line 281):
        
        # Assigning a Call to a Name (line 281):
        
        # Call to astype(...): (line 281)
        # Processing the call arguments (line 281)
        str_402359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 282, 67), 'str', 'd')
        # Processing the call keyword arguments (line 281)
        kwargs_402360 = {}
        
        # Call to astype(...): (line 281)
        # Processing the call arguments (line 281)
        str_402355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 282, 55), 'str', 'f')
        # Processing the call keyword arguments (line 281)
        kwargs_402356 = {}
        
        # Call to generate_matrix(...): (line 281)
        # Processing the call arguments (line 281)
        # Getting the type of 'N' (line 281)
        N_402347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 29), 'N', False)
        # Processing the call keyword arguments (line 281)
        # Getting the type of 'True' (line 281)
        True_402348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 42), 'True', False)
        keyword_402349 = True_402348
        # Getting the type of 'True' (line 282)
        True_402350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 42), 'True', False)
        keyword_402351 = True_402350
        kwargs_402352 = {'hermitian': keyword_402349, 'pos_definite': keyword_402351}
        # Getting the type of 'generate_matrix' (line 281)
        generate_matrix_402346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 13), 'generate_matrix', False)
        # Calling generate_matrix(args, kwargs) (line 281)
        generate_matrix_call_result_402353 = invoke(stypy.reporting.localization.Localization(__file__, 281, 13), generate_matrix_402346, *[N_402347], **kwargs_402352)
        
        # Obtaining the member 'astype' of a type (line 281)
        astype_402354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 13), generate_matrix_call_result_402353, 'astype')
        # Calling astype(args, kwargs) (line 281)
        astype_call_result_402357 = invoke(stypy.reporting.localization.Localization(__file__, 281, 13), astype_402354, *[str_402355], **kwargs_402356)
        
        # Obtaining the member 'astype' of a type (line 281)
        astype_402358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 13), astype_call_result_402357, 'astype')
        # Calling astype(args, kwargs) (line 281)
        astype_call_result_402361 = invoke(stypy.reporting.localization.Localization(__file__, 281, 13), astype_402358, *[str_402359], **kwargs_402360)
        
        # Assigning a type to the variable 'Ar' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'Ar', astype_call_result_402361)
        
        # Assigning a Call to a Name (line 283):
        
        # Assigning a Call to a Name (line 283):
        
        # Call to astype(...): (line 283)
        # Processing the call arguments (line 283)
        str_402375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 66), 'str', 'd')
        # Processing the call keyword arguments (line 283)
        kwargs_402376 = {}
        
        # Call to astype(...): (line 283)
        # Processing the call arguments (line 283)
        str_402371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 54), 'str', 'f')
        # Processing the call keyword arguments (line 283)
        kwargs_402372 = {}
        
        # Call to generate_matrix(...): (line 283)
        # Processing the call arguments (line 283)
        # Getting the type of 'N' (line 283)
        N_402363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 28), 'N', False)
        # Processing the call keyword arguments (line 283)
        # Getting the type of 'True' (line 283)
        True_402364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 41), 'True', False)
        keyword_402365 = True_402364
        # Getting the type of 'True' (line 284)
        True_402366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 41), 'True', False)
        keyword_402367 = True_402366
        kwargs_402368 = {'hermitian': keyword_402365, 'pos_definite': keyword_402367}
        # Getting the type of 'generate_matrix' (line 283)
        generate_matrix_402362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 12), 'generate_matrix', False)
        # Calling generate_matrix(args, kwargs) (line 283)
        generate_matrix_call_result_402369 = invoke(stypy.reporting.localization.Localization(__file__, 283, 12), generate_matrix_402362, *[N_402363], **kwargs_402368)
        
        # Obtaining the member 'astype' of a type (line 283)
        astype_402370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 283, 12), generate_matrix_call_result_402369, 'astype')
        # Calling astype(args, kwargs) (line 283)
        astype_call_result_402373 = invoke(stypy.reporting.localization.Localization(__file__, 283, 12), astype_402370, *[str_402371], **kwargs_402372)
        
        # Obtaining the member 'astype' of a type (line 283)
        astype_402374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 283, 12), astype_call_result_402373, 'astype')
        # Calling astype(args, kwargs) (line 283)
        astype_call_result_402377 = invoke(stypy.reporting.localization.Localization(__file__, 283, 12), astype_402374, *[str_402375], **kwargs_402376)
        
        # Assigning a type to the variable 'M' (line 283)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 283, 8), 'M', astype_call_result_402377)
        
        # Assigning a Call to a Name (line 285):
        
        # Assigning a Call to a Name (line 285):
        
        # Call to astype(...): (line 285)
        # Processing the call arguments (line 285)
        str_402393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 62), 'str', 'D')
        # Processing the call keyword arguments (line 285)
        kwargs_402394 = {}
        
        # Call to astype(...): (line 285)
        # Processing the call arguments (line 285)
        str_402389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 50), 'str', 'F')
        # Processing the call keyword arguments (line 285)
        kwargs_402390 = {}
        
        # Call to generate_matrix(...): (line 285)
        # Processing the call arguments (line 285)
        # Getting the type of 'N' (line 285)
        N_402379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 29), 'N', False)
        # Processing the call keyword arguments (line 285)
        # Getting the type of 'True' (line 285)
        True_402380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 42), 'True', False)
        keyword_402381 = True_402380
        # Getting the type of 'True' (line 285)
        True_402382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 61), 'True', False)
        keyword_402383 = True_402382
        # Getting the type of 'True' (line 286)
        True_402384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 37), 'True', False)
        keyword_402385 = True_402384
        kwargs_402386 = {'hermitian': keyword_402381, 'complex': keyword_402385, 'pos_definite': keyword_402383}
        # Getting the type of 'generate_matrix' (line 285)
        generate_matrix_402378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 13), 'generate_matrix', False)
        # Calling generate_matrix(args, kwargs) (line 285)
        generate_matrix_call_result_402387 = invoke(stypy.reporting.localization.Localization(__file__, 285, 13), generate_matrix_402378, *[N_402379], **kwargs_402386)
        
        # Obtaining the member 'astype' of a type (line 285)
        astype_402388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 285, 13), generate_matrix_call_result_402387, 'astype')
        # Calling astype(args, kwargs) (line 285)
        astype_call_result_402391 = invoke(stypy.reporting.localization.Localization(__file__, 285, 13), astype_402388, *[str_402389], **kwargs_402390)
        
        # Obtaining the member 'astype' of a type (line 285)
        astype_402392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 285, 13), astype_call_result_402391, 'astype')
        # Calling astype(args, kwargs) (line 285)
        astype_call_result_402395 = invoke(stypy.reporting.localization.Localization(__file__, 285, 13), astype_402392, *[str_402393], **kwargs_402394)
        
        # Assigning a type to the variable 'Ac' (line 285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 8), 'Ac', astype_call_result_402395)
        
        # Assigning a Call to a Name (line 287):
        
        # Assigning a Call to a Name (line 287):
        
        # Call to random(...): (line 287)
        # Processing the call arguments (line 287)
        # Getting the type of 'N' (line 287)
        N_402399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 30), 'N', False)
        # Processing the call keyword arguments (line 287)
        kwargs_402400 = {}
        # Getting the type of 'np' (line 287)
        np_402396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 13), 'np', False)
        # Obtaining the member 'random' of a type (line 287)
        random_402397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 13), np_402396, 'random')
        # Obtaining the member 'random' of a type (line 287)
        random_402398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 13), random_402397, 'random')
        # Calling random(args, kwargs) (line 287)
        random_call_result_402401 = invoke(stypy.reporting.localization.Localization(__file__, 287, 13), random_402398, *[N_402399], **kwargs_402400)
        
        # Assigning a type to the variable 'v0' (line 287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 287, 8), 'v0', random_call_result_402401)
        
        # Assigning a Call to a Name (line 290):
        
        # Assigning a Call to a Name (line 290):
        
        # Call to DictWithRepr(...): (line 290)
        # Processing the call arguments (line 290)
        str_402403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 290, 26), 'str', 'std-symmetric')
        # Processing the call keyword arguments (line 290)
        kwargs_402404 = {}
        # Getting the type of 'DictWithRepr' (line 290)
        DictWithRepr_402402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 13), 'DictWithRepr', False)
        # Calling DictWithRepr(args, kwargs) (line 290)
        DictWithRepr_call_result_402405 = invoke(stypy.reporting.localization.Localization(__file__, 290, 13), DictWithRepr_402402, *[str_402403], **kwargs_402404)
        
        # Assigning a type to the variable 'SS' (line 290)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 8), 'SS', DictWithRepr_call_result_402405)
        
        # Assigning a Name to a Subscript (line 291):
        
        # Assigning a Name to a Subscript (line 291):
        # Getting the type of 'Ar' (line 291)
        Ar_402406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 20), 'Ar')
        # Getting the type of 'SS' (line 291)
        SS_402407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 8), 'SS')
        str_402408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 11), 'str', 'mat')
        # Storing an element on a container (line 291)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 291, 8), SS_402407, (str_402408, Ar_402406))
        
        # Assigning a Name to a Subscript (line 292):
        
        # Assigning a Name to a Subscript (line 292):
        # Getting the type of 'v0' (line 292)
        v0_402409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 19), 'v0')
        # Getting the type of 'SS' (line 292)
        SS_402410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'SS')
        str_402411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 11), 'str', 'v0')
        # Storing an element on a container (line 292)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 292, 8), SS_402410, (str_402411, v0_402409))
        
        # Assigning a Call to a Subscript (line 293):
        
        # Assigning a Call to a Subscript (line 293):
        
        # Call to eigh(...): (line 293)
        # Processing the call arguments (line 293)
        
        # Obtaining the type of the subscript
        str_402413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 29), 'str', 'mat')
        # Getting the type of 'SS' (line 293)
        SS_402414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 26), 'SS', False)
        # Obtaining the member '__getitem__' of a type (line 293)
        getitem___402415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 26), SS_402414, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 293)
        subscript_call_result_402416 = invoke(stypy.reporting.localization.Localization(__file__, 293, 26), getitem___402415, str_402413)
        
        # Processing the call keyword arguments (line 293)
        # Getting the type of 'True' (line 293)
        True_402417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 50), 'True', False)
        keyword_402418 = True_402417
        kwargs_402419 = {'eigvals_only': keyword_402418}
        # Getting the type of 'eigh' (line 293)
        eigh_402412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 21), 'eigh', False)
        # Calling eigh(args, kwargs) (line 293)
        eigh_call_result_402420 = invoke(stypy.reporting.localization.Localization(__file__, 293, 21), eigh_402412, *[subscript_call_result_402416], **kwargs_402419)
        
        # Getting the type of 'SS' (line 293)
        SS_402421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 8), 'SS')
        str_402422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 11), 'str', 'eval')
        # Storing an element on a container (line 293)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 293, 8), SS_402421, (str_402422, eigh_call_result_402420))
        
        # Assigning a Call to a Name (line 296):
        
        # Assigning a Call to a Name (line 296):
        
        # Call to DictWithRepr(...): (line 296)
        # Processing the call arguments (line 296)
        str_402424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 26), 'str', 'gen-symmetric')
        # Processing the call keyword arguments (line 296)
        kwargs_402425 = {}
        # Getting the type of 'DictWithRepr' (line 296)
        DictWithRepr_402423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 13), 'DictWithRepr', False)
        # Calling DictWithRepr(args, kwargs) (line 296)
        DictWithRepr_call_result_402426 = invoke(stypy.reporting.localization.Localization(__file__, 296, 13), DictWithRepr_402423, *[str_402424], **kwargs_402425)
        
        # Assigning a type to the variable 'GS' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'GS', DictWithRepr_call_result_402426)
        
        # Assigning a Name to a Subscript (line 297):
        
        # Assigning a Name to a Subscript (line 297):
        # Getting the type of 'Ar' (line 297)
        Ar_402427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 20), 'Ar')
        # Getting the type of 'GS' (line 297)
        GS_402428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 8), 'GS')
        str_402429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 297, 11), 'str', 'mat')
        # Storing an element on a container (line 297)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 297, 8), GS_402428, (str_402429, Ar_402427))
        
        # Assigning a Name to a Subscript (line 298):
        
        # Assigning a Name to a Subscript (line 298):
        # Getting the type of 'M' (line 298)
        M_402430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 21), 'M')
        # Getting the type of 'GS' (line 298)
        GS_402431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 8), 'GS')
        str_402432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 298, 11), 'str', 'bmat')
        # Storing an element on a container (line 298)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 298, 8), GS_402431, (str_402432, M_402430))
        
        # Assigning a Name to a Subscript (line 299):
        
        # Assigning a Name to a Subscript (line 299):
        # Getting the type of 'v0' (line 299)
        v0_402433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 19), 'v0')
        # Getting the type of 'GS' (line 299)
        GS_402434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 8), 'GS')
        str_402435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 11), 'str', 'v0')
        # Storing an element on a container (line 299)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 299, 8), GS_402434, (str_402435, v0_402433))
        
        # Assigning a Call to a Subscript (line 300):
        
        # Assigning a Call to a Subscript (line 300):
        
        # Call to eigh(...): (line 300)
        # Processing the call arguments (line 300)
        
        # Obtaining the type of the subscript
        str_402437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 29), 'str', 'mat')
        # Getting the type of 'GS' (line 300)
        GS_402438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 26), 'GS', False)
        # Obtaining the member '__getitem__' of a type (line 300)
        getitem___402439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 26), GS_402438, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 300)
        subscript_call_result_402440 = invoke(stypy.reporting.localization.Localization(__file__, 300, 26), getitem___402439, str_402437)
        
        
        # Obtaining the type of the subscript
        str_402441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 40), 'str', 'bmat')
        # Getting the type of 'GS' (line 300)
        GS_402442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 37), 'GS', False)
        # Obtaining the member '__getitem__' of a type (line 300)
        getitem___402443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 37), GS_402442, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 300)
        subscript_call_result_402444 = invoke(stypy.reporting.localization.Localization(__file__, 300, 37), getitem___402443, str_402441)
        
        # Processing the call keyword arguments (line 300)
        # Getting the type of 'True' (line 300)
        True_402445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 62), 'True', False)
        keyword_402446 = True_402445
        kwargs_402447 = {'eigvals_only': keyword_402446}
        # Getting the type of 'eigh' (line 300)
        eigh_402436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 21), 'eigh', False)
        # Calling eigh(args, kwargs) (line 300)
        eigh_call_result_402448 = invoke(stypy.reporting.localization.Localization(__file__, 300, 21), eigh_402436, *[subscript_call_result_402440, subscript_call_result_402444], **kwargs_402447)
        
        # Getting the type of 'GS' (line 300)
        GS_402449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 8), 'GS')
        str_402450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 11), 'str', 'eval')
        # Storing an element on a container (line 300)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 8), GS_402449, (str_402450, eigh_call_result_402448))
        
        # Assigning a Call to a Name (line 303):
        
        # Assigning a Call to a Name (line 303):
        
        # Call to DictWithRepr(...): (line 303)
        # Processing the call arguments (line 303)
        str_402452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 26), 'str', 'std-hermitian')
        # Processing the call keyword arguments (line 303)
        kwargs_402453 = {}
        # Getting the type of 'DictWithRepr' (line 303)
        DictWithRepr_402451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 13), 'DictWithRepr', False)
        # Calling DictWithRepr(args, kwargs) (line 303)
        DictWithRepr_call_result_402454 = invoke(stypy.reporting.localization.Localization(__file__, 303, 13), DictWithRepr_402451, *[str_402452], **kwargs_402453)
        
        # Assigning a type to the variable 'SH' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'SH', DictWithRepr_call_result_402454)
        
        # Assigning a Name to a Subscript (line 304):
        
        # Assigning a Name to a Subscript (line 304):
        # Getting the type of 'Ac' (line 304)
        Ac_402455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 20), 'Ac')
        # Getting the type of 'SH' (line 304)
        SH_402456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 8), 'SH')
        str_402457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, 11), 'str', 'mat')
        # Storing an element on a container (line 304)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 304, 8), SH_402456, (str_402457, Ac_402455))
        
        # Assigning a Name to a Subscript (line 305):
        
        # Assigning a Name to a Subscript (line 305):
        # Getting the type of 'v0' (line 305)
        v0_402458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 19), 'v0')
        # Getting the type of 'SH' (line 305)
        SH_402459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 8), 'SH')
        str_402460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 305, 11), 'str', 'v0')
        # Storing an element on a container (line 305)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 305, 8), SH_402459, (str_402460, v0_402458))
        
        # Assigning a Call to a Subscript (line 306):
        
        # Assigning a Call to a Subscript (line 306):
        
        # Call to eigh(...): (line 306)
        # Processing the call arguments (line 306)
        
        # Obtaining the type of the subscript
        str_402462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 29), 'str', 'mat')
        # Getting the type of 'SH' (line 306)
        SH_402463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 26), 'SH', False)
        # Obtaining the member '__getitem__' of a type (line 306)
        getitem___402464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 26), SH_402463, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 306)
        subscript_call_result_402465 = invoke(stypy.reporting.localization.Localization(__file__, 306, 26), getitem___402464, str_402462)
        
        # Processing the call keyword arguments (line 306)
        # Getting the type of 'True' (line 306)
        True_402466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 50), 'True', False)
        keyword_402467 = True_402466
        kwargs_402468 = {'eigvals_only': keyword_402467}
        # Getting the type of 'eigh' (line 306)
        eigh_402461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 21), 'eigh', False)
        # Calling eigh(args, kwargs) (line 306)
        eigh_call_result_402469 = invoke(stypy.reporting.localization.Localization(__file__, 306, 21), eigh_402461, *[subscript_call_result_402465], **kwargs_402468)
        
        # Getting the type of 'SH' (line 306)
        SH_402470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'SH')
        str_402471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 11), 'str', 'eval')
        # Storing an element on a container (line 306)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 306, 8), SH_402470, (str_402471, eigh_call_result_402469))
        
        # Assigning a Call to a Name (line 309):
        
        # Assigning a Call to a Name (line 309):
        
        # Call to DictWithRepr(...): (line 309)
        # Processing the call arguments (line 309)
        str_402473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 309, 26), 'str', 'gen-hermitian')
        # Processing the call keyword arguments (line 309)
        kwargs_402474 = {}
        # Getting the type of 'DictWithRepr' (line 309)
        DictWithRepr_402472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 13), 'DictWithRepr', False)
        # Calling DictWithRepr(args, kwargs) (line 309)
        DictWithRepr_call_result_402475 = invoke(stypy.reporting.localization.Localization(__file__, 309, 13), DictWithRepr_402472, *[str_402473], **kwargs_402474)
        
        # Assigning a type to the variable 'GH' (line 309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 8), 'GH', DictWithRepr_call_result_402475)
        
        # Assigning a Name to a Subscript (line 310):
        
        # Assigning a Name to a Subscript (line 310):
        # Getting the type of 'Ac' (line 310)
        Ac_402476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 20), 'Ac')
        # Getting the type of 'GH' (line 310)
        GH_402477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 8), 'GH')
        str_402478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 11), 'str', 'mat')
        # Storing an element on a container (line 310)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 310, 8), GH_402477, (str_402478, Ac_402476))
        
        # Assigning a Name to a Subscript (line 311):
        
        # Assigning a Name to a Subscript (line 311):
        # Getting the type of 'M' (line 311)
        M_402479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 21), 'M')
        # Getting the type of 'GH' (line 311)
        GH_402480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'GH')
        str_402481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 311, 11), 'str', 'bmat')
        # Storing an element on a container (line 311)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 311, 8), GH_402480, (str_402481, M_402479))
        
        # Assigning a Name to a Subscript (line 312):
        
        # Assigning a Name to a Subscript (line 312):
        # Getting the type of 'v0' (line 312)
        v0_402482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 19), 'v0')
        # Getting the type of 'GH' (line 312)
        GH_402483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'GH')
        str_402484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 11), 'str', 'v0')
        # Storing an element on a container (line 312)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 312, 8), GH_402483, (str_402484, v0_402482))
        
        # Assigning a Call to a Subscript (line 313):
        
        # Assigning a Call to a Subscript (line 313):
        
        # Call to eigh(...): (line 313)
        # Processing the call arguments (line 313)
        
        # Obtaining the type of the subscript
        str_402486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 29), 'str', 'mat')
        # Getting the type of 'GH' (line 313)
        GH_402487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 26), 'GH', False)
        # Obtaining the member '__getitem__' of a type (line 313)
        getitem___402488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 26), GH_402487, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 313)
        subscript_call_result_402489 = invoke(stypy.reporting.localization.Localization(__file__, 313, 26), getitem___402488, str_402486)
        
        
        # Obtaining the type of the subscript
        str_402490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 40), 'str', 'bmat')
        # Getting the type of 'GH' (line 313)
        GH_402491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 37), 'GH', False)
        # Obtaining the member '__getitem__' of a type (line 313)
        getitem___402492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 37), GH_402491, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 313)
        subscript_call_result_402493 = invoke(stypy.reporting.localization.Localization(__file__, 313, 37), getitem___402492, str_402490)
        
        # Processing the call keyword arguments (line 313)
        # Getting the type of 'True' (line 313)
        True_402494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 62), 'True', False)
        keyword_402495 = True_402494
        kwargs_402496 = {'eigvals_only': keyword_402495}
        # Getting the type of 'eigh' (line 313)
        eigh_402485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 21), 'eigh', False)
        # Calling eigh(args, kwargs) (line 313)
        eigh_call_result_402497 = invoke(stypy.reporting.localization.Localization(__file__, 313, 21), eigh_402485, *[subscript_call_result_402489, subscript_call_result_402493], **kwargs_402496)
        
        # Getting the type of 'GH' (line 313)
        GH_402498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 8), 'GH')
        str_402499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 11), 'str', 'eval')
        # Storing an element on a container (line 313)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 313, 8), GH_402498, (str_402499, eigh_call_result_402497))
        
        # Assigning a List to a Attribute (line 315):
        
        # Assigning a List to a Attribute (line 315):
        
        # Obtaining an instance of the builtin type 'list' (line 315)
        list_402500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 315)
        # Adding element type (line 315)
        # Getting the type of 'SS' (line 315)
        SS_402501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 32), 'SS')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 315, 31), list_402500, SS_402501)
        # Adding element type (line 315)
        # Getting the type of 'GS' (line 315)
        GS_402502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 36), 'GS')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 315, 31), list_402500, GS_402502)
        
        # Getting the type of 'self' (line 315)
        self_402503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 8), 'self')
        # Setting the type of the member 'real_test_cases' of a type (line 315)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 315, 8), self_402503, 'real_test_cases', list_402500)
        
        # Assigning a List to a Attribute (line 316):
        
        # Assigning a List to a Attribute (line 316):
        
        # Obtaining an instance of the builtin type 'list' (line 316)
        list_402504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 316)
        # Adding element type (line 316)
        # Getting the type of 'SH' (line 316)
        SH_402505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 35), 'SH')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 316, 34), list_402504, SH_402505)
        # Adding element type (line 316)
        # Getting the type of 'GH' (line 316)
        GH_402506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 39), 'GH')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 316, 34), list_402504, GH_402506)
        
        # Getting the type of 'self' (line 316)
        self_402507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 8), 'self')
        # Setting the type of the member 'complex_test_cases' of a type (line 316)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 8), self_402507, 'complex_test_cases', list_402504)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'SymmetricParams' (line 268)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 0), 'SymmetricParams', SymmetricParams)
# Declaration of the 'NonSymmetricParams' class

class NonSymmetricParams:

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 320, 4, False)
        # Assigning a type to the variable 'self' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'NonSymmetricParams.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 321):
        
        # Assigning a Name to a Attribute (line 321):
        # Getting the type of 'eigs' (line 321)
        eigs_402508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 20), 'eigs')
        # Getting the type of 'self' (line 321)
        self_402509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 8), 'self')
        # Setting the type of the member 'eigs' of a type (line 321)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 8), self_402509, 'eigs', eigs_402508)
        
        # Assigning a List to a Attribute (line 322):
        
        # Assigning a List to a Attribute (line 322):
        
        # Obtaining an instance of the builtin type 'list' (line 322)
        list_402510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 322)
        # Adding element type (line 322)
        str_402511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 22), 'str', 'LM')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 21), list_402510, str_402511)
        # Adding element type (line 322)
        str_402512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 28), 'str', 'LR')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 21), list_402510, str_402512)
        # Adding element type (line 322)
        str_402513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 34), 'str', 'LI')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 21), list_402510, str_402513)
        
        # Getting the type of 'self' (line 322)
        self_402514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 8), 'self')
        # Setting the type of the member 'which' of a type (line 322)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 8), self_402514, 'which', list_402510)
        
        # Assigning a List to a Attribute (line 323):
        
        # Assigning a List to a Attribute (line 323):
        
        # Obtaining an instance of the builtin type 'list' (line 323)
        list_402515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 323)
        # Adding element type (line 323)
        # Getting the type of 'csr_matrix' (line 323)
        csr_matrix_402516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 25), 'csr_matrix')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 323, 24), list_402515, csr_matrix_402516)
        # Adding element type (line 323)
        # Getting the type of 'aslinearoperator' (line 323)
        aslinearoperator_402517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 37), 'aslinearoperator')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 323, 24), list_402515, aslinearoperator_402517)
        # Adding element type (line 323)
        # Getting the type of 'np' (line 323)
        np_402518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 55), 'np')
        # Obtaining the member 'asarray' of a type (line 323)
        asarray_402519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 55), np_402518, 'asarray')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 323, 24), list_402515, asarray_402519)
        
        # Getting the type of 'self' (line 323)
        self_402520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 8), 'self')
        # Setting the type of the member 'mattypes' of a type (line 323)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 8), self_402520, 'mattypes', list_402515)
        
        # Assigning a Dict to a Attribute (line 324):
        
        # Assigning a Dict to a Attribute (line 324):
        
        # Obtaining an instance of the builtin type 'dict' (line 324)
        dict_402521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 30), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 324)
        # Adding element type (key, value) (line 324)
        # Getting the type of 'None' (line 324)
        None_402522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 31), 'None')
        
        # Obtaining an instance of the builtin type 'list' (line 324)
        list_402523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 37), 'list')
        # Adding type elements to the builtin type 'list' instance (line 324)
        # Adding element type (line 324)
        # Getting the type of 'None' (line 324)
        None_402524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 38), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 324, 37), list_402523, None_402524)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 324, 30), dict_402521, (None_402522, list_402523))
        # Adding element type (key, value) (line 324)
        float_402525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 31), 'float')
        
        # Obtaining an instance of the builtin type 'list' (line 325)
        list_402526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 325)
        # Adding element type (line 325)
        str_402527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 37), 'str', 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 325, 36), list_402526, str_402527)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 324, 30), dict_402521, (float_402525, list_402526))
        # Adding element type (key, value) (line 324)
        float_402528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 31), 'float')
        complex_402529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 37), 'complex')
        # Applying the binary operator '+' (line 326)
        result_add_402530 = python_operator(stypy.reporting.localization.Localization(__file__, 326, 31), '+', float_402528, complex_402529)
        
        
        # Obtaining an instance of the builtin type 'list' (line 326)
        list_402531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 326)
        # Adding element type (line 326)
        str_402532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 44), 'str', 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 43), list_402531, str_402532)
        # Adding element type (line 326)
        str_402533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 49), 'str', 'i')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 43), list_402531, str_402533)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 324, 30), dict_402521, (result_add_402530, list_402531))
        
        # Getting the type of 'self' (line 324)
        self_402534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 8), 'self')
        # Setting the type of the member 'sigmas_OPparts' of a type (line 324)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 8), self_402534, 'sigmas_OPparts', dict_402521)
        
        # Assigning a Num to a Name (line 331):
        
        # Assigning a Num to a Name (line 331):
        int_402535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 12), 'int')
        # Assigning a type to the variable 'N' (line 331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 331, 8), 'N', int_402535)
        
        # Call to seed(...): (line 332)
        # Processing the call arguments (line 332)
        int_402539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, 23), 'int')
        # Processing the call keyword arguments (line 332)
        kwargs_402540 = {}
        # Getting the type of 'np' (line 332)
        np_402536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 332)
        random_402537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 8), np_402536, 'random')
        # Obtaining the member 'seed' of a type (line 332)
        seed_402538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 8), random_402537, 'seed')
        # Calling seed(args, kwargs) (line 332)
        seed_call_result_402541 = invoke(stypy.reporting.localization.Localization(__file__, 332, 8), seed_402538, *[int_402539], **kwargs_402540)
        
        
        # Assigning a Call to a Name (line 333):
        
        # Assigning a Call to a Name (line 333):
        
        # Call to astype(...): (line 333)
        # Processing the call arguments (line 333)
        str_402551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 51), 'str', 'd')
        # Processing the call keyword arguments (line 333)
        kwargs_402552 = {}
        
        # Call to astype(...): (line 333)
        # Processing the call arguments (line 333)
        str_402547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 39), 'str', 'f')
        # Processing the call keyword arguments (line 333)
        kwargs_402548 = {}
        
        # Call to generate_matrix(...): (line 333)
        # Processing the call arguments (line 333)
        # Getting the type of 'N' (line 333)
        N_402543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 29), 'N', False)
        # Processing the call keyword arguments (line 333)
        kwargs_402544 = {}
        # Getting the type of 'generate_matrix' (line 333)
        generate_matrix_402542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 13), 'generate_matrix', False)
        # Calling generate_matrix(args, kwargs) (line 333)
        generate_matrix_call_result_402545 = invoke(stypy.reporting.localization.Localization(__file__, 333, 13), generate_matrix_402542, *[N_402543], **kwargs_402544)
        
        # Obtaining the member 'astype' of a type (line 333)
        astype_402546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 13), generate_matrix_call_result_402545, 'astype')
        # Calling astype(args, kwargs) (line 333)
        astype_call_result_402549 = invoke(stypy.reporting.localization.Localization(__file__, 333, 13), astype_402546, *[str_402547], **kwargs_402548)
        
        # Obtaining the member 'astype' of a type (line 333)
        astype_402550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 13), astype_call_result_402549, 'astype')
        # Calling astype(args, kwargs) (line 333)
        astype_call_result_402553 = invoke(stypy.reporting.localization.Localization(__file__, 333, 13), astype_402550, *[str_402551], **kwargs_402552)
        
        # Assigning a type to the variable 'Ar' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'Ar', astype_call_result_402553)
        
        # Assigning a Call to a Name (line 334):
        
        # Assigning a Call to a Name (line 334):
        
        # Call to astype(...): (line 334)
        # Processing the call arguments (line 334)
        str_402567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 66), 'str', 'd')
        # Processing the call keyword arguments (line 334)
        kwargs_402568 = {}
        
        # Call to astype(...): (line 334)
        # Processing the call arguments (line 334)
        str_402563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 54), 'str', 'f')
        # Processing the call keyword arguments (line 334)
        kwargs_402564 = {}
        
        # Call to generate_matrix(...): (line 334)
        # Processing the call arguments (line 334)
        # Getting the type of 'N' (line 334)
        N_402555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 28), 'N', False)
        # Processing the call keyword arguments (line 334)
        # Getting the type of 'True' (line 334)
        True_402556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 41), 'True', False)
        keyword_402557 = True_402556
        # Getting the type of 'True' (line 335)
        True_402558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 41), 'True', False)
        keyword_402559 = True_402558
        kwargs_402560 = {'hermitian': keyword_402557, 'pos_definite': keyword_402559}
        # Getting the type of 'generate_matrix' (line 334)
        generate_matrix_402554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 12), 'generate_matrix', False)
        # Calling generate_matrix(args, kwargs) (line 334)
        generate_matrix_call_result_402561 = invoke(stypy.reporting.localization.Localization(__file__, 334, 12), generate_matrix_402554, *[N_402555], **kwargs_402560)
        
        # Obtaining the member 'astype' of a type (line 334)
        astype_402562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 12), generate_matrix_call_result_402561, 'astype')
        # Calling astype(args, kwargs) (line 334)
        astype_call_result_402565 = invoke(stypy.reporting.localization.Localization(__file__, 334, 12), astype_402562, *[str_402563], **kwargs_402564)
        
        # Obtaining the member 'astype' of a type (line 334)
        astype_402566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 12), astype_call_result_402565, 'astype')
        # Calling astype(args, kwargs) (line 334)
        astype_call_result_402569 = invoke(stypy.reporting.localization.Localization(__file__, 334, 12), astype_402566, *[str_402567], **kwargs_402568)
        
        # Assigning a type to the variable 'M' (line 334)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 334, 8), 'M', astype_call_result_402569)
        
        # Assigning a Call to a Name (line 336):
        
        # Assigning a Call to a Name (line 336):
        
        # Call to astype(...): (line 336)
        # Processing the call arguments (line 336)
        str_402581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 65), 'str', 'D')
        # Processing the call keyword arguments (line 336)
        kwargs_402582 = {}
        
        # Call to astype(...): (line 336)
        # Processing the call arguments (line 336)
        str_402577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 53), 'str', 'F')
        # Processing the call keyword arguments (line 336)
        kwargs_402578 = {}
        
        # Call to generate_matrix(...): (line 336)
        # Processing the call arguments (line 336)
        # Getting the type of 'N' (line 336)
        N_402571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 29), 'N', False)
        # Processing the call keyword arguments (line 336)
        # Getting the type of 'True' (line 336)
        True_402572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 40), 'True', False)
        keyword_402573 = True_402572
        kwargs_402574 = {'complex': keyword_402573}
        # Getting the type of 'generate_matrix' (line 336)
        generate_matrix_402570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 13), 'generate_matrix', False)
        # Calling generate_matrix(args, kwargs) (line 336)
        generate_matrix_call_result_402575 = invoke(stypy.reporting.localization.Localization(__file__, 336, 13), generate_matrix_402570, *[N_402571], **kwargs_402574)
        
        # Obtaining the member 'astype' of a type (line 336)
        astype_402576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 13), generate_matrix_call_result_402575, 'astype')
        # Calling astype(args, kwargs) (line 336)
        astype_call_result_402579 = invoke(stypy.reporting.localization.Localization(__file__, 336, 13), astype_402576, *[str_402577], **kwargs_402578)
        
        # Obtaining the member 'astype' of a type (line 336)
        astype_402580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 13), astype_call_result_402579, 'astype')
        # Calling astype(args, kwargs) (line 336)
        astype_call_result_402583 = invoke(stypy.reporting.localization.Localization(__file__, 336, 13), astype_402580, *[str_402581], **kwargs_402582)
        
        # Assigning a type to the variable 'Ac' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'Ac', astype_call_result_402583)
        
        # Assigning a Call to a Name (line 337):
        
        # Assigning a Call to a Name (line 337):
        
        # Call to random(...): (line 337)
        # Processing the call arguments (line 337)
        # Getting the type of 'N' (line 337)
        N_402587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 30), 'N', False)
        # Processing the call keyword arguments (line 337)
        kwargs_402588 = {}
        # Getting the type of 'np' (line 337)
        np_402584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 13), 'np', False)
        # Obtaining the member 'random' of a type (line 337)
        random_402585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 13), np_402584, 'random')
        # Obtaining the member 'random' of a type (line 337)
        random_402586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 13), random_402585, 'random')
        # Calling random(args, kwargs) (line 337)
        random_call_result_402589 = invoke(stypy.reporting.localization.Localization(__file__, 337, 13), random_402586, *[N_402587], **kwargs_402588)
        
        # Assigning a type to the variable 'v0' (line 337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 8), 'v0', random_call_result_402589)
        
        # Assigning a Call to a Name (line 340):
        
        # Assigning a Call to a Name (line 340):
        
        # Call to DictWithRepr(...): (line 340)
        # Processing the call arguments (line 340)
        str_402591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 27), 'str', 'std-real-nonsym')
        # Processing the call keyword arguments (line 340)
        kwargs_402592 = {}
        # Getting the type of 'DictWithRepr' (line 340)
        DictWithRepr_402590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 14), 'DictWithRepr', False)
        # Calling DictWithRepr(args, kwargs) (line 340)
        DictWithRepr_call_result_402593 = invoke(stypy.reporting.localization.Localization(__file__, 340, 14), DictWithRepr_402590, *[str_402591], **kwargs_402592)
        
        # Assigning a type to the variable 'SNR' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'SNR', DictWithRepr_call_result_402593)
        
        # Assigning a Name to a Subscript (line 341):
        
        # Assigning a Name to a Subscript (line 341):
        # Getting the type of 'Ar' (line 341)
        Ar_402594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 21), 'Ar')
        # Getting the type of 'SNR' (line 341)
        SNR_402595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 8), 'SNR')
        str_402596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 12), 'str', 'mat')
        # Storing an element on a container (line 341)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 8), SNR_402595, (str_402596, Ar_402594))
        
        # Assigning a Name to a Subscript (line 342):
        
        # Assigning a Name to a Subscript (line 342):
        # Getting the type of 'v0' (line 342)
        v0_402597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 20), 'v0')
        # Getting the type of 'SNR' (line 342)
        SNR_402598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'SNR')
        str_402599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 12), 'str', 'v0')
        # Storing an element on a container (line 342)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 8), SNR_402598, (str_402599, v0_402597))
        
        # Assigning a Call to a Subscript (line 343):
        
        # Assigning a Call to a Subscript (line 343):
        
        # Call to eig(...): (line 343)
        # Processing the call arguments (line 343)
        
        # Obtaining the type of the subscript
        str_402601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 30), 'str', 'mat')
        # Getting the type of 'SNR' (line 343)
        SNR_402602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 26), 'SNR', False)
        # Obtaining the member '__getitem__' of a type (line 343)
        getitem___402603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 26), SNR_402602, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 343)
        subscript_call_result_402604 = invoke(stypy.reporting.localization.Localization(__file__, 343, 26), getitem___402603, str_402601)
        
        # Processing the call keyword arguments (line 343)
        # Getting the type of 'False' (line 343)
        False_402605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 43), 'False', False)
        keyword_402606 = False_402605
        # Getting the type of 'False' (line 343)
        False_402607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 56), 'False', False)
        keyword_402608 = False_402607
        kwargs_402609 = {'right': keyword_402608, 'left': keyword_402606}
        # Getting the type of 'eig' (line 343)
        eig_402600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 22), 'eig', False)
        # Calling eig(args, kwargs) (line 343)
        eig_call_result_402610 = invoke(stypy.reporting.localization.Localization(__file__, 343, 22), eig_402600, *[subscript_call_result_402604], **kwargs_402609)
        
        # Getting the type of 'SNR' (line 343)
        SNR_402611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 8), 'SNR')
        str_402612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 12), 'str', 'eval')
        # Storing an element on a container (line 343)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 343, 8), SNR_402611, (str_402612, eig_call_result_402610))
        
        # Assigning a Call to a Name (line 346):
        
        # Assigning a Call to a Name (line 346):
        
        # Call to DictWithRepr(...): (line 346)
        # Processing the call arguments (line 346)
        str_402614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 27), 'str', 'gen-real-nonsym')
        # Processing the call keyword arguments (line 346)
        kwargs_402615 = {}
        # Getting the type of 'DictWithRepr' (line 346)
        DictWithRepr_402613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 14), 'DictWithRepr', False)
        # Calling DictWithRepr(args, kwargs) (line 346)
        DictWithRepr_call_result_402616 = invoke(stypy.reporting.localization.Localization(__file__, 346, 14), DictWithRepr_402613, *[str_402614], **kwargs_402615)
        
        # Assigning a type to the variable 'GNR' (line 346)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 346, 8), 'GNR', DictWithRepr_call_result_402616)
        
        # Assigning a Name to a Subscript (line 347):
        
        # Assigning a Name to a Subscript (line 347):
        # Getting the type of 'Ar' (line 347)
        Ar_402617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 21), 'Ar')
        # Getting the type of 'GNR' (line 347)
        GNR_402618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 8), 'GNR')
        str_402619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 12), 'str', 'mat')
        # Storing an element on a container (line 347)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 347, 8), GNR_402618, (str_402619, Ar_402617))
        
        # Assigning a Name to a Subscript (line 348):
        
        # Assigning a Name to a Subscript (line 348):
        # Getting the type of 'M' (line 348)
        M_402620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 22), 'M')
        # Getting the type of 'GNR' (line 348)
        GNR_402621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 8), 'GNR')
        str_402622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 12), 'str', 'bmat')
        # Storing an element on a container (line 348)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 348, 8), GNR_402621, (str_402622, M_402620))
        
        # Assigning a Name to a Subscript (line 349):
        
        # Assigning a Name to a Subscript (line 349):
        # Getting the type of 'v0' (line 349)
        v0_402623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 20), 'v0')
        # Getting the type of 'GNR' (line 349)
        GNR_402624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 8), 'GNR')
        str_402625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 12), 'str', 'v0')
        # Storing an element on a container (line 349)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 349, 8), GNR_402624, (str_402625, v0_402623))
        
        # Assigning a Call to a Subscript (line 350):
        
        # Assigning a Call to a Subscript (line 350):
        
        # Call to eig(...): (line 350)
        # Processing the call arguments (line 350)
        
        # Obtaining the type of the subscript
        str_402627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 30), 'str', 'mat')
        # Getting the type of 'GNR' (line 350)
        GNR_402628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 26), 'GNR', False)
        # Obtaining the member '__getitem__' of a type (line 350)
        getitem___402629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 26), GNR_402628, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 350)
        subscript_call_result_402630 = invoke(stypy.reporting.localization.Localization(__file__, 350, 26), getitem___402629, str_402627)
        
        
        # Obtaining the type of the subscript
        str_402631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 42), 'str', 'bmat')
        # Getting the type of 'GNR' (line 350)
        GNR_402632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 38), 'GNR', False)
        # Obtaining the member '__getitem__' of a type (line 350)
        getitem___402633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 38), GNR_402632, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 350)
        subscript_call_result_402634 = invoke(stypy.reporting.localization.Localization(__file__, 350, 38), getitem___402633, str_402631)
        
        # Processing the call keyword arguments (line 350)
        # Getting the type of 'False' (line 350)
        False_402635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 56), 'False', False)
        keyword_402636 = False_402635
        # Getting the type of 'False' (line 350)
        False_402637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 69), 'False', False)
        keyword_402638 = False_402637
        kwargs_402639 = {'right': keyword_402638, 'left': keyword_402636}
        # Getting the type of 'eig' (line 350)
        eig_402626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 22), 'eig', False)
        # Calling eig(args, kwargs) (line 350)
        eig_call_result_402640 = invoke(stypy.reporting.localization.Localization(__file__, 350, 22), eig_402626, *[subscript_call_result_402630, subscript_call_result_402634], **kwargs_402639)
        
        # Getting the type of 'GNR' (line 350)
        GNR_402641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 8), 'GNR')
        str_402642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 12), 'str', 'eval')
        # Storing an element on a container (line 350)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 8), GNR_402641, (str_402642, eig_call_result_402640))
        
        # Assigning a Call to a Name (line 353):
        
        # Assigning a Call to a Name (line 353):
        
        # Call to DictWithRepr(...): (line 353)
        # Processing the call arguments (line 353)
        str_402644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 27), 'str', 'std-cmplx-nonsym')
        # Processing the call keyword arguments (line 353)
        kwargs_402645 = {}
        # Getting the type of 'DictWithRepr' (line 353)
        DictWithRepr_402643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 14), 'DictWithRepr', False)
        # Calling DictWithRepr(args, kwargs) (line 353)
        DictWithRepr_call_result_402646 = invoke(stypy.reporting.localization.Localization(__file__, 353, 14), DictWithRepr_402643, *[str_402644], **kwargs_402645)
        
        # Assigning a type to the variable 'SNC' (line 353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 8), 'SNC', DictWithRepr_call_result_402646)
        
        # Assigning a Name to a Subscript (line 354):
        
        # Assigning a Name to a Subscript (line 354):
        # Getting the type of 'Ac' (line 354)
        Ac_402647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 21), 'Ac')
        # Getting the type of 'SNC' (line 354)
        SNC_402648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 8), 'SNC')
        str_402649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 12), 'str', 'mat')
        # Storing an element on a container (line 354)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 8), SNC_402648, (str_402649, Ac_402647))
        
        # Assigning a Name to a Subscript (line 355):
        
        # Assigning a Name to a Subscript (line 355):
        # Getting the type of 'v0' (line 355)
        v0_402650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 20), 'v0')
        # Getting the type of 'SNC' (line 355)
        SNC_402651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'SNC')
        str_402652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 12), 'str', 'v0')
        # Storing an element on a container (line 355)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 355, 8), SNC_402651, (str_402652, v0_402650))
        
        # Assigning a Call to a Subscript (line 356):
        
        # Assigning a Call to a Subscript (line 356):
        
        # Call to eig(...): (line 356)
        # Processing the call arguments (line 356)
        
        # Obtaining the type of the subscript
        str_402654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 30), 'str', 'mat')
        # Getting the type of 'SNC' (line 356)
        SNC_402655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 26), 'SNC', False)
        # Obtaining the member '__getitem__' of a type (line 356)
        getitem___402656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 26), SNC_402655, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 356)
        subscript_call_result_402657 = invoke(stypy.reporting.localization.Localization(__file__, 356, 26), getitem___402656, str_402654)
        
        # Processing the call keyword arguments (line 356)
        # Getting the type of 'False' (line 356)
        False_402658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 43), 'False', False)
        keyword_402659 = False_402658
        # Getting the type of 'False' (line 356)
        False_402660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 56), 'False', False)
        keyword_402661 = False_402660
        kwargs_402662 = {'right': keyword_402661, 'left': keyword_402659}
        # Getting the type of 'eig' (line 356)
        eig_402653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 22), 'eig', False)
        # Calling eig(args, kwargs) (line 356)
        eig_call_result_402663 = invoke(stypy.reporting.localization.Localization(__file__, 356, 22), eig_402653, *[subscript_call_result_402657], **kwargs_402662)
        
        # Getting the type of 'SNC' (line 356)
        SNC_402664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'SNC')
        str_402665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 12), 'str', 'eval')
        # Storing an element on a container (line 356)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 356, 8), SNC_402664, (str_402665, eig_call_result_402663))
        
        # Assigning a Call to a Name (line 359):
        
        # Assigning a Call to a Name (line 359):
        
        # Call to DictWithRepr(...): (line 359)
        # Processing the call arguments (line 359)
        str_402667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 27), 'str', 'gen-cmplx-nonsym')
        # Processing the call keyword arguments (line 359)
        kwargs_402668 = {}
        # Getting the type of 'DictWithRepr' (line 359)
        DictWithRepr_402666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 14), 'DictWithRepr', False)
        # Calling DictWithRepr(args, kwargs) (line 359)
        DictWithRepr_call_result_402669 = invoke(stypy.reporting.localization.Localization(__file__, 359, 14), DictWithRepr_402666, *[str_402667], **kwargs_402668)
        
        # Assigning a type to the variable 'GNC' (line 359)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 359, 8), 'GNC', DictWithRepr_call_result_402669)
        
        # Assigning a Name to a Subscript (line 360):
        
        # Assigning a Name to a Subscript (line 360):
        # Getting the type of 'Ac' (line 360)
        Ac_402670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 21), 'Ac')
        # Getting the type of 'GNC' (line 360)
        GNC_402671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 8), 'GNC')
        str_402672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 12), 'str', 'mat')
        # Storing an element on a container (line 360)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 8), GNC_402671, (str_402672, Ac_402670))
        
        # Assigning a Name to a Subscript (line 361):
        
        # Assigning a Name to a Subscript (line 361):
        # Getting the type of 'M' (line 361)
        M_402673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 22), 'M')
        # Getting the type of 'GNC' (line 361)
        GNC_402674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 8), 'GNC')
        str_402675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 12), 'str', 'bmat')
        # Storing an element on a container (line 361)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 361, 8), GNC_402674, (str_402675, M_402673))
        
        # Assigning a Name to a Subscript (line 362):
        
        # Assigning a Name to a Subscript (line 362):
        # Getting the type of 'v0' (line 362)
        v0_402676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 20), 'v0')
        # Getting the type of 'GNC' (line 362)
        GNC_402677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'GNC')
        str_402678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 12), 'str', 'v0')
        # Storing an element on a container (line 362)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 362, 8), GNC_402677, (str_402678, v0_402676))
        
        # Assigning a Call to a Subscript (line 363):
        
        # Assigning a Call to a Subscript (line 363):
        
        # Call to eig(...): (line 363)
        # Processing the call arguments (line 363)
        
        # Obtaining the type of the subscript
        str_402680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 30), 'str', 'mat')
        # Getting the type of 'GNC' (line 363)
        GNC_402681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 26), 'GNC', False)
        # Obtaining the member '__getitem__' of a type (line 363)
        getitem___402682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 26), GNC_402681, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 363)
        subscript_call_result_402683 = invoke(stypy.reporting.localization.Localization(__file__, 363, 26), getitem___402682, str_402680)
        
        
        # Obtaining the type of the subscript
        str_402684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 42), 'str', 'bmat')
        # Getting the type of 'GNC' (line 363)
        GNC_402685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 38), 'GNC', False)
        # Obtaining the member '__getitem__' of a type (line 363)
        getitem___402686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 38), GNC_402685, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 363)
        subscript_call_result_402687 = invoke(stypy.reporting.localization.Localization(__file__, 363, 38), getitem___402686, str_402684)
        
        # Processing the call keyword arguments (line 363)
        # Getting the type of 'False' (line 363)
        False_402688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 56), 'False', False)
        keyword_402689 = False_402688
        # Getting the type of 'False' (line 363)
        False_402690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 69), 'False', False)
        keyword_402691 = False_402690
        kwargs_402692 = {'right': keyword_402691, 'left': keyword_402689}
        # Getting the type of 'eig' (line 363)
        eig_402679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 22), 'eig', False)
        # Calling eig(args, kwargs) (line 363)
        eig_call_result_402693 = invoke(stypy.reporting.localization.Localization(__file__, 363, 22), eig_402679, *[subscript_call_result_402683, subscript_call_result_402687], **kwargs_402692)
        
        # Getting the type of 'GNC' (line 363)
        GNC_402694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 8), 'GNC')
        str_402695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 12), 'str', 'eval')
        # Storing an element on a container (line 363)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 8), GNC_402694, (str_402695, eig_call_result_402693))
        
        # Assigning a List to a Attribute (line 365):
        
        # Assigning a List to a Attribute (line 365):
        
        # Obtaining an instance of the builtin type 'list' (line 365)
        list_402696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 365)
        # Adding element type (line 365)
        # Getting the type of 'SNR' (line 365)
        SNR_402697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 32), 'SNR')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 365, 31), list_402696, SNR_402697)
        # Adding element type (line 365)
        # Getting the type of 'GNR' (line 365)
        GNR_402698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 37), 'GNR')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 365, 31), list_402696, GNR_402698)
        
        # Getting the type of 'self' (line 365)
        self_402699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 8), 'self')
        # Setting the type of the member 'real_test_cases' of a type (line 365)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 8), self_402699, 'real_test_cases', list_402696)
        
        # Assigning a List to a Attribute (line 366):
        
        # Assigning a List to a Attribute (line 366):
        
        # Obtaining an instance of the builtin type 'list' (line 366)
        list_402700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 366)
        # Adding element type (line 366)
        # Getting the type of 'SNC' (line 366)
        SNC_402701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 35), 'SNC')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 366, 34), list_402700, SNC_402701)
        # Adding element type (line 366)
        # Getting the type of 'GNC' (line 366)
        GNC_402702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 40), 'GNC')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 366, 34), list_402700, GNC_402702)
        
        # Getting the type of 'self' (line 366)
        self_402703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 8), 'self')
        # Setting the type of the member 'complex_test_cases' of a type (line 366)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 8), self_402703, 'complex_test_cases', list_402700)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'NonSymmetricParams' (line 319)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 0), 'NonSymmetricParams', NonSymmetricParams)

@norecursion
def test_symmetric_modes(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_symmetric_modes'
    module_type_store = module_type_store.open_function_context('test_symmetric_modes', 369, 0, False)
    
    # Passed parameters checking function
    test_symmetric_modes.stypy_localization = localization
    test_symmetric_modes.stypy_type_of_self = None
    test_symmetric_modes.stypy_type_store = module_type_store
    test_symmetric_modes.stypy_function_name = 'test_symmetric_modes'
    test_symmetric_modes.stypy_param_names_list = []
    test_symmetric_modes.stypy_varargs_param_name = None
    test_symmetric_modes.stypy_kwargs_param_name = None
    test_symmetric_modes.stypy_call_defaults = defaults
    test_symmetric_modes.stypy_call_varargs = varargs
    test_symmetric_modes.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_symmetric_modes', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_symmetric_modes', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_symmetric_modes(...)' code ##################

    
    # Assigning a Call to a Name (line 370):
    
    # Assigning a Call to a Name (line 370):
    
    # Call to SymmetricParams(...): (line 370)
    # Processing the call keyword arguments (line 370)
    kwargs_402705 = {}
    # Getting the type of 'SymmetricParams' (line 370)
    SymmetricParams_402704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 13), 'SymmetricParams', False)
    # Calling SymmetricParams(args, kwargs) (line 370)
    SymmetricParams_call_result_402706 = invoke(stypy.reporting.localization.Localization(__file__, 370, 13), SymmetricParams_402704, *[], **kwargs_402705)
    
    # Assigning a type to the variable 'params' (line 370)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 4), 'params', SymmetricParams_call_result_402706)
    
    # Assigning a Num to a Name (line 371):
    
    # Assigning a Num to a Name (line 371):
    int_402707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 8), 'int')
    # Assigning a type to the variable 'k' (line 371)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 371, 4), 'k', int_402707)
    
    # Assigning a Name to a Name (line 372):
    
    # Assigning a Name to a Name (line 372):
    # Getting the type of 'True' (line 372)
    True_402708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 16), 'True')
    # Assigning a type to the variable 'symmetric' (line 372)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 4), 'symmetric', True_402708)
    
    # Getting the type of 'params' (line 373)
    params_402709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 13), 'params')
    # Obtaining the member 'real_test_cases' of a type (line 373)
    real_test_cases_402710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 13), params_402709, 'real_test_cases')
    # Testing the type of a for loop iterable (line 373)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 373, 4), real_test_cases_402710)
    # Getting the type of the for loop variable (line 373)
    for_loop_var_402711 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 373, 4), real_test_cases_402710)
    # Assigning a type to the variable 'D' (line 373)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 4), 'D', for_loop_var_402711)
    # SSA begins for a for statement (line 373)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    str_402712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 19), 'str', 'fd')
    # Testing the type of a for loop iterable (line 374)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 374, 8), str_402712)
    # Getting the type of the for loop variable (line 374)
    for_loop_var_402713 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 374, 8), str_402712)
    # Assigning a type to the variable 'typ' (line 374)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'typ', for_loop_var_402713)
    # SSA begins for a for statement (line 374)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 375)
    params_402714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 25), 'params')
    # Obtaining the member 'which' of a type (line 375)
    which_402715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 25), params_402714, 'which')
    # Testing the type of a for loop iterable (line 375)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 375, 12), which_402715)
    # Getting the type of the for loop variable (line 375)
    for_loop_var_402716 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 375, 12), which_402715)
    # Assigning a type to the variable 'which' (line 375)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 12), 'which', for_loop_var_402716)
    # SSA begins for a for statement (line 375)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 376)
    params_402717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 31), 'params')
    # Obtaining the member 'mattypes' of a type (line 376)
    mattypes_402718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 31), params_402717, 'mattypes')
    # Testing the type of a for loop iterable (line 376)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 376, 16), mattypes_402718)
    # Getting the type of the for loop variable (line 376)
    for_loop_var_402719 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 376, 16), mattypes_402718)
    # Assigning a type to the variable 'mattype' (line 376)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 16), 'mattype', for_loop_var_402719)
    # SSA begins for a for statement (line 376)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to items(...): (line 377)
    # Processing the call keyword arguments (line 377)
    kwargs_402723 = {}
    # Getting the type of 'params' (line 377)
    params_402720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 42), 'params', False)
    # Obtaining the member 'sigmas_modes' of a type (line 377)
    sigmas_modes_402721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 42), params_402720, 'sigmas_modes')
    # Obtaining the member 'items' of a type (line 377)
    items_402722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 42), sigmas_modes_402721, 'items')
    # Calling items(args, kwargs) (line 377)
    items_call_result_402724 = invoke(stypy.reporting.localization.Localization(__file__, 377, 42), items_402722, *[], **kwargs_402723)
    
    # Testing the type of a for loop iterable (line 377)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 377, 20), items_call_result_402724)
    # Getting the type of the for loop variable (line 377)
    for_loop_var_402725 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 377, 20), items_call_result_402724)
    # Assigning a type to the variable 'sigma' (line 377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 20), 'sigma', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 377, 20), for_loop_var_402725))
    # Assigning a type to the variable 'modes' (line 377)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 20), 'modes', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 377, 20), for_loop_var_402725))
    # SSA begins for a for statement (line 377)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'modes' (line 378)
    modes_402726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 36), 'modes')
    # Testing the type of a for loop iterable (line 378)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 378, 24), modes_402726)
    # Getting the type of the for loop variable (line 378)
    for_loop_var_402727 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 378, 24), modes_402726)
    # Assigning a type to the variable 'mode' (line 378)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 24), 'mode', for_loop_var_402727)
    # SSA begins for a for statement (line 378)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to eval_evec(...): (line 379)
    # Processing the call arguments (line 379)
    # Getting the type of 'symmetric' (line 379)
    symmetric_402729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 38), 'symmetric', False)
    # Getting the type of 'D' (line 379)
    D_402730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 49), 'D', False)
    # Getting the type of 'typ' (line 379)
    typ_402731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 52), 'typ', False)
    # Getting the type of 'k' (line 379)
    k_402732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 57), 'k', False)
    # Getting the type of 'which' (line 379)
    which_402733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 60), 'which', False)
    # Getting the type of 'None' (line 380)
    None_402734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 38), 'None', False)
    # Getting the type of 'sigma' (line 380)
    sigma_402735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 44), 'sigma', False)
    # Getting the type of 'mattype' (line 380)
    mattype_402736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 51), 'mattype', False)
    # Getting the type of 'None' (line 380)
    None_402737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 60), 'None', False)
    # Getting the type of 'mode' (line 380)
    mode_402738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 66), 'mode', False)
    # Processing the call keyword arguments (line 379)
    kwargs_402739 = {}
    # Getting the type of 'eval_evec' (line 379)
    eval_evec_402728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 28), 'eval_evec', False)
    # Calling eval_evec(args, kwargs) (line 379)
    eval_evec_call_result_402740 = invoke(stypy.reporting.localization.Localization(__file__, 379, 28), eval_evec_402728, *[symmetric_402729, D_402730, typ_402731, k_402732, which_402733, None_402734, sigma_402735, mattype_402736, None_402737, mode_402738], **kwargs_402739)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_symmetric_modes(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_symmetric_modes' in the type store
    # Getting the type of 'stypy_return_type' (line 369)
    stypy_return_type_402741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_402741)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_symmetric_modes'
    return stypy_return_type_402741

# Assigning a type to the variable 'test_symmetric_modes' (line 369)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 0), 'test_symmetric_modes', test_symmetric_modes)

@norecursion
def test_hermitian_modes(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_hermitian_modes'
    module_type_store = module_type_store.open_function_context('test_hermitian_modes', 383, 0, False)
    
    # Passed parameters checking function
    test_hermitian_modes.stypy_localization = localization
    test_hermitian_modes.stypy_type_of_self = None
    test_hermitian_modes.stypy_type_store = module_type_store
    test_hermitian_modes.stypy_function_name = 'test_hermitian_modes'
    test_hermitian_modes.stypy_param_names_list = []
    test_hermitian_modes.stypy_varargs_param_name = None
    test_hermitian_modes.stypy_kwargs_param_name = None
    test_hermitian_modes.stypy_call_defaults = defaults
    test_hermitian_modes.stypy_call_varargs = varargs
    test_hermitian_modes.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_hermitian_modes', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_hermitian_modes', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_hermitian_modes(...)' code ##################

    
    # Assigning a Call to a Name (line 384):
    
    # Assigning a Call to a Name (line 384):
    
    # Call to SymmetricParams(...): (line 384)
    # Processing the call keyword arguments (line 384)
    kwargs_402743 = {}
    # Getting the type of 'SymmetricParams' (line 384)
    SymmetricParams_402742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 13), 'SymmetricParams', False)
    # Calling SymmetricParams(args, kwargs) (line 384)
    SymmetricParams_call_result_402744 = invoke(stypy.reporting.localization.Localization(__file__, 384, 13), SymmetricParams_402742, *[], **kwargs_402743)
    
    # Assigning a type to the variable 'params' (line 384)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 384, 4), 'params', SymmetricParams_call_result_402744)
    
    # Assigning a Num to a Name (line 385):
    
    # Assigning a Num to a Name (line 385):
    int_402745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 8), 'int')
    # Assigning a type to the variable 'k' (line 385)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 385, 4), 'k', int_402745)
    
    # Assigning a Name to a Name (line 386):
    
    # Assigning a Name to a Name (line 386):
    # Getting the type of 'True' (line 386)
    True_402746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 16), 'True')
    # Assigning a type to the variable 'symmetric' (line 386)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 4), 'symmetric', True_402746)
    
    # Getting the type of 'params' (line 387)
    params_402747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 13), 'params')
    # Obtaining the member 'complex_test_cases' of a type (line 387)
    complex_test_cases_402748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 13), params_402747, 'complex_test_cases')
    # Testing the type of a for loop iterable (line 387)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 387, 4), complex_test_cases_402748)
    # Getting the type of the for loop variable (line 387)
    for_loop_var_402749 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 387, 4), complex_test_cases_402748)
    # Assigning a type to the variable 'D' (line 387)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 4), 'D', for_loop_var_402749)
    # SSA begins for a for statement (line 387)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    str_402750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 19), 'str', 'FD')
    # Testing the type of a for loop iterable (line 388)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 388, 8), str_402750)
    # Getting the type of the for loop variable (line 388)
    for_loop_var_402751 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 388, 8), str_402750)
    # Assigning a type to the variable 'typ' (line 388)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 388, 8), 'typ', for_loop_var_402751)
    # SSA begins for a for statement (line 388)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 389)
    params_402752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 25), 'params')
    # Obtaining the member 'which' of a type (line 389)
    which_402753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 25), params_402752, 'which')
    # Testing the type of a for loop iterable (line 389)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 389, 12), which_402753)
    # Getting the type of the for loop variable (line 389)
    for_loop_var_402754 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 389, 12), which_402753)
    # Assigning a type to the variable 'which' (line 389)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 12), 'which', for_loop_var_402754)
    # SSA begins for a for statement (line 389)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'which' (line 390)
    which_402755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 19), 'which')
    str_402756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 28), 'str', 'BE')
    # Applying the binary operator '==' (line 390)
    result_eq_402757 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 19), '==', which_402755, str_402756)
    
    # Testing the type of an if condition (line 390)
    if_condition_402758 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 390, 16), result_eq_402757)
    # Assigning a type to the variable 'if_condition_402758' (line 390)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'if_condition_402758', if_condition_402758)
    # SSA begins for if statement (line 390)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 390)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'params' (line 392)
    params_402759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 31), 'params')
    # Obtaining the member 'mattypes' of a type (line 392)
    mattypes_402760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 31), params_402759, 'mattypes')
    # Testing the type of a for loop iterable (line 392)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 392, 16), mattypes_402760)
    # Getting the type of the for loop variable (line 392)
    for_loop_var_402761 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 392, 16), mattypes_402760)
    # Assigning a type to the variable 'mattype' (line 392)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'mattype', for_loop_var_402761)
    # SSA begins for a for statement (line 392)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 393)
    params_402762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 33), 'params')
    # Obtaining the member 'sigmas_modes' of a type (line 393)
    sigmas_modes_402763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 33), params_402762, 'sigmas_modes')
    # Testing the type of a for loop iterable (line 393)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 393, 20), sigmas_modes_402763)
    # Getting the type of the for loop variable (line 393)
    for_loop_var_402764 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 393, 20), sigmas_modes_402763)
    # Assigning a type to the variable 'sigma' (line 393)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 20), 'sigma', for_loop_var_402764)
    # SSA begins for a for statement (line 393)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to eval_evec(...): (line 394)
    # Processing the call arguments (line 394)
    # Getting the type of 'symmetric' (line 394)
    symmetric_402766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 34), 'symmetric', False)
    # Getting the type of 'D' (line 394)
    D_402767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 45), 'D', False)
    # Getting the type of 'typ' (line 394)
    typ_402768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 48), 'typ', False)
    # Getting the type of 'k' (line 394)
    k_402769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 53), 'k', False)
    # Getting the type of 'which' (line 394)
    which_402770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 56), 'which', False)
    # Getting the type of 'None' (line 395)
    None_402771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 34), 'None', False)
    # Getting the type of 'sigma' (line 395)
    sigma_402772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 40), 'sigma', False)
    # Getting the type of 'mattype' (line 395)
    mattype_402773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 47), 'mattype', False)
    # Processing the call keyword arguments (line 394)
    kwargs_402774 = {}
    # Getting the type of 'eval_evec' (line 394)
    eval_evec_402765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 24), 'eval_evec', False)
    # Calling eval_evec(args, kwargs) (line 394)
    eval_evec_call_result_402775 = invoke(stypy.reporting.localization.Localization(__file__, 394, 24), eval_evec_402765, *[symmetric_402766, D_402767, typ_402768, k_402769, which_402770, None_402771, sigma_402772, mattype_402773], **kwargs_402774)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_hermitian_modes(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_hermitian_modes' in the type store
    # Getting the type of 'stypy_return_type' (line 383)
    stypy_return_type_402776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_402776)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_hermitian_modes'
    return stypy_return_type_402776

# Assigning a type to the variable 'test_hermitian_modes' (line 383)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 0), 'test_hermitian_modes', test_hermitian_modes)

@norecursion
def test_symmetric_starting_vector(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_symmetric_starting_vector'
    module_type_store = module_type_store.open_function_context('test_symmetric_starting_vector', 398, 0, False)
    
    # Passed parameters checking function
    test_symmetric_starting_vector.stypy_localization = localization
    test_symmetric_starting_vector.stypy_type_of_self = None
    test_symmetric_starting_vector.stypy_type_store = module_type_store
    test_symmetric_starting_vector.stypy_function_name = 'test_symmetric_starting_vector'
    test_symmetric_starting_vector.stypy_param_names_list = []
    test_symmetric_starting_vector.stypy_varargs_param_name = None
    test_symmetric_starting_vector.stypy_kwargs_param_name = None
    test_symmetric_starting_vector.stypy_call_defaults = defaults
    test_symmetric_starting_vector.stypy_call_varargs = varargs
    test_symmetric_starting_vector.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_symmetric_starting_vector', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_symmetric_starting_vector', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_symmetric_starting_vector(...)' code ##################

    
    # Assigning a Call to a Name (line 399):
    
    # Assigning a Call to a Name (line 399):
    
    # Call to SymmetricParams(...): (line 399)
    # Processing the call keyword arguments (line 399)
    kwargs_402778 = {}
    # Getting the type of 'SymmetricParams' (line 399)
    SymmetricParams_402777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 13), 'SymmetricParams', False)
    # Calling SymmetricParams(args, kwargs) (line 399)
    SymmetricParams_call_result_402779 = invoke(stypy.reporting.localization.Localization(__file__, 399, 13), SymmetricParams_402777, *[], **kwargs_402778)
    
    # Assigning a type to the variable 'params' (line 399)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 4), 'params', SymmetricParams_call_result_402779)
    
    # Assigning a Name to a Name (line 400):
    
    # Assigning a Name to a Name (line 400):
    # Getting the type of 'True' (line 400)
    True_402780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 16), 'True')
    # Assigning a type to the variable 'symmetric' (line 400)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 400, 4), 'symmetric', True_402780)
    
    
    # Obtaining an instance of the builtin type 'list' (line 401)
    list_402781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 401)
    # Adding element type (line 401)
    int_402782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 14), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 401, 13), list_402781, int_402782)
    # Adding element type (line 401)
    int_402783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 401, 13), list_402781, int_402783)
    # Adding element type (line 401)
    int_402784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 401, 13), list_402781, int_402784)
    # Adding element type (line 401)
    int_402785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 23), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 401, 13), list_402781, int_402785)
    # Adding element type (line 401)
    int_402786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 26), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 401, 13), list_402781, int_402786)
    
    # Testing the type of a for loop iterable (line 401)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 401, 4), list_402781)
    # Getting the type of the for loop variable (line 401)
    for_loop_var_402787 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 401, 4), list_402781)
    # Assigning a type to the variable 'k' (line 401)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 4), 'k', for_loop_var_402787)
    # SSA begins for a for statement (line 401)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 402)
    params_402788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 17), 'params')
    # Obtaining the member 'real_test_cases' of a type (line 402)
    real_test_cases_402789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 402, 17), params_402788, 'real_test_cases')
    # Testing the type of a for loop iterable (line 402)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 402, 8), real_test_cases_402789)
    # Getting the type of the for loop variable (line 402)
    for_loop_var_402790 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 402, 8), real_test_cases_402789)
    # Assigning a type to the variable 'D' (line 402)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 402, 8), 'D', for_loop_var_402790)
    # SSA begins for a for statement (line 402)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    str_402791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 23), 'str', 'fd')
    # Testing the type of a for loop iterable (line 403)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 403, 12), str_402791)
    # Getting the type of the for loop variable (line 403)
    for_loop_var_402792 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 403, 12), str_402791)
    # Assigning a type to the variable 'typ' (line 403)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 12), 'typ', for_loop_var_402792)
    # SSA begins for a for statement (line 403)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 404):
    
    # Assigning a Call to a Name (line 404):
    
    # Call to astype(...): (line 404)
    # Processing the call arguments (line 404)
    # Getting the type of 'typ' (line 404)
    typ_402805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 54), 'typ', False)
    # Processing the call keyword arguments (line 404)
    kwargs_402806 = {}
    
    # Call to rand(...): (line 404)
    # Processing the call arguments (line 404)
    
    # Call to len(...): (line 404)
    # Processing the call arguments (line 404)
    
    # Obtaining the type of the subscript
    str_402796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 404, 39), 'str', 'v0')
    # Getting the type of 'D' (line 404)
    D_402797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 37), 'D', False)
    # Obtaining the member '__getitem__' of a type (line 404)
    getitem___402798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 37), D_402797, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 404)
    subscript_call_result_402799 = invoke(stypy.reporting.localization.Localization(__file__, 404, 37), getitem___402798, str_402796)
    
    # Processing the call keyword arguments (line 404)
    kwargs_402800 = {}
    # Getting the type of 'len' (line 404)
    len_402795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 33), 'len', False)
    # Calling len(args, kwargs) (line 404)
    len_call_result_402801 = invoke(stypy.reporting.localization.Localization(__file__, 404, 33), len_402795, *[subscript_call_result_402799], **kwargs_402800)
    
    # Processing the call keyword arguments (line 404)
    kwargs_402802 = {}
    # Getting the type of 'random' (line 404)
    random_402793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 21), 'random', False)
    # Obtaining the member 'rand' of a type (line 404)
    rand_402794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 21), random_402793, 'rand')
    # Calling rand(args, kwargs) (line 404)
    rand_call_result_402803 = invoke(stypy.reporting.localization.Localization(__file__, 404, 21), rand_402794, *[len_call_result_402801], **kwargs_402802)
    
    # Obtaining the member 'astype' of a type (line 404)
    astype_402804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 21), rand_call_result_402803, 'astype')
    # Calling astype(args, kwargs) (line 404)
    astype_call_result_402807 = invoke(stypy.reporting.localization.Localization(__file__, 404, 21), astype_402804, *[typ_402805], **kwargs_402806)
    
    # Assigning a type to the variable 'v0' (line 404)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 16), 'v0', astype_call_result_402807)
    
    # Call to eval_evec(...): (line 405)
    # Processing the call arguments (line 405)
    # Getting the type of 'symmetric' (line 405)
    symmetric_402809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 26), 'symmetric', False)
    # Getting the type of 'D' (line 405)
    D_402810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 37), 'D', False)
    # Getting the type of 'typ' (line 405)
    typ_402811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 40), 'typ', False)
    # Getting the type of 'k' (line 405)
    k_402812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 45), 'k', False)
    str_402813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 48), 'str', 'LM')
    # Getting the type of 'v0' (line 405)
    v0_402814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 54), 'v0', False)
    # Processing the call keyword arguments (line 405)
    kwargs_402815 = {}
    # Getting the type of 'eval_evec' (line 405)
    eval_evec_402808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 16), 'eval_evec', False)
    # Calling eval_evec(args, kwargs) (line 405)
    eval_evec_call_result_402816 = invoke(stypy.reporting.localization.Localization(__file__, 405, 16), eval_evec_402808, *[symmetric_402809, D_402810, typ_402811, k_402812, str_402813, v0_402814], **kwargs_402815)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_symmetric_starting_vector(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_symmetric_starting_vector' in the type store
    # Getting the type of 'stypy_return_type' (line 398)
    stypy_return_type_402817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_402817)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_symmetric_starting_vector'
    return stypy_return_type_402817

# Assigning a type to the variable 'test_symmetric_starting_vector' (line 398)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 398, 0), 'test_symmetric_starting_vector', test_symmetric_starting_vector)

@norecursion
def test_symmetric_no_convergence(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_symmetric_no_convergence'
    module_type_store = module_type_store.open_function_context('test_symmetric_no_convergence', 408, 0, False)
    
    # Passed parameters checking function
    test_symmetric_no_convergence.stypy_localization = localization
    test_symmetric_no_convergence.stypy_type_of_self = None
    test_symmetric_no_convergence.stypy_type_store = module_type_store
    test_symmetric_no_convergence.stypy_function_name = 'test_symmetric_no_convergence'
    test_symmetric_no_convergence.stypy_param_names_list = []
    test_symmetric_no_convergence.stypy_varargs_param_name = None
    test_symmetric_no_convergence.stypy_kwargs_param_name = None
    test_symmetric_no_convergence.stypy_call_defaults = defaults
    test_symmetric_no_convergence.stypy_call_varargs = varargs
    test_symmetric_no_convergence.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_symmetric_no_convergence', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_symmetric_no_convergence', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_symmetric_no_convergence(...)' code ##################

    
    # Call to seed(...): (line 409)
    # Processing the call arguments (line 409)
    int_402821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 19), 'int')
    # Processing the call keyword arguments (line 409)
    kwargs_402822 = {}
    # Getting the type of 'np' (line 409)
    np_402818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 4), 'np', False)
    # Obtaining the member 'random' of a type (line 409)
    random_402819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 409, 4), np_402818, 'random')
    # Obtaining the member 'seed' of a type (line 409)
    seed_402820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 409, 4), random_402819, 'seed')
    # Calling seed(args, kwargs) (line 409)
    seed_call_result_402823 = invoke(stypy.reporting.localization.Localization(__file__, 409, 4), seed_402820, *[int_402821], **kwargs_402822)
    
    
    # Assigning a Call to a Name (line 410):
    
    # Assigning a Call to a Name (line 410):
    
    # Call to generate_matrix(...): (line 410)
    # Processing the call arguments (line 410)
    int_402825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 24), 'int')
    # Processing the call keyword arguments (line 410)
    # Getting the type of 'True' (line 410)
    True_402826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 38), 'True', False)
    keyword_402827 = True_402826
    # Getting the type of 'True' (line 410)
    True_402828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 57), 'True', False)
    keyword_402829 = True_402828
    kwargs_402830 = {'hermitian': keyword_402827, 'pos_definite': keyword_402829}
    # Getting the type of 'generate_matrix' (line 410)
    generate_matrix_402824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 8), 'generate_matrix', False)
    # Calling generate_matrix(args, kwargs) (line 410)
    generate_matrix_call_result_402831 = invoke(stypy.reporting.localization.Localization(__file__, 410, 8), generate_matrix_402824, *[int_402825], **kwargs_402830)
    
    # Assigning a type to the variable 'm' (line 410)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 4), 'm', generate_matrix_call_result_402831)
    
    # Assigning a Call to a Tuple (line 411):
    
    # Assigning a Subscript to a Name (line 411):
    
    # Obtaining the type of the subscript
    int_402832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 4), 'int')
    
    # Call to _get_test_tolerance(...): (line 411)
    # Processing the call arguments (line 411)
    str_402834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 42), 'str', 'd')
    # Processing the call keyword arguments (line 411)
    kwargs_402835 = {}
    # Getting the type of '_get_test_tolerance' (line 411)
    _get_test_tolerance_402833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 22), '_get_test_tolerance', False)
    # Calling _get_test_tolerance(args, kwargs) (line 411)
    _get_test_tolerance_call_result_402836 = invoke(stypy.reporting.localization.Localization(__file__, 411, 22), _get_test_tolerance_402833, *[str_402834], **kwargs_402835)
    
    # Obtaining the member '__getitem__' of a type (line 411)
    getitem___402837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 4), _get_test_tolerance_call_result_402836, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 411)
    subscript_call_result_402838 = invoke(stypy.reporting.localization.Localization(__file__, 411, 4), getitem___402837, int_402832)
    
    # Assigning a type to the variable 'tuple_var_assignment_401320' (line 411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'tuple_var_assignment_401320', subscript_call_result_402838)
    
    # Assigning a Subscript to a Name (line 411):
    
    # Obtaining the type of the subscript
    int_402839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 4), 'int')
    
    # Call to _get_test_tolerance(...): (line 411)
    # Processing the call arguments (line 411)
    str_402841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 42), 'str', 'd')
    # Processing the call keyword arguments (line 411)
    kwargs_402842 = {}
    # Getting the type of '_get_test_tolerance' (line 411)
    _get_test_tolerance_402840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 22), '_get_test_tolerance', False)
    # Calling _get_test_tolerance(args, kwargs) (line 411)
    _get_test_tolerance_call_result_402843 = invoke(stypy.reporting.localization.Localization(__file__, 411, 22), _get_test_tolerance_402840, *[str_402841], **kwargs_402842)
    
    # Obtaining the member '__getitem__' of a type (line 411)
    getitem___402844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 4), _get_test_tolerance_call_result_402843, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 411)
    subscript_call_result_402845 = invoke(stypy.reporting.localization.Localization(__file__, 411, 4), getitem___402844, int_402839)
    
    # Assigning a type to the variable 'tuple_var_assignment_401321' (line 411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'tuple_var_assignment_401321', subscript_call_result_402845)
    
    # Assigning a Subscript to a Name (line 411):
    
    # Obtaining the type of the subscript
    int_402846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 4), 'int')
    
    # Call to _get_test_tolerance(...): (line 411)
    # Processing the call arguments (line 411)
    str_402848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 42), 'str', 'd')
    # Processing the call keyword arguments (line 411)
    kwargs_402849 = {}
    # Getting the type of '_get_test_tolerance' (line 411)
    _get_test_tolerance_402847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 22), '_get_test_tolerance', False)
    # Calling _get_test_tolerance(args, kwargs) (line 411)
    _get_test_tolerance_call_result_402850 = invoke(stypy.reporting.localization.Localization(__file__, 411, 22), _get_test_tolerance_402847, *[str_402848], **kwargs_402849)
    
    # Obtaining the member '__getitem__' of a type (line 411)
    getitem___402851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 4), _get_test_tolerance_call_result_402850, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 411)
    subscript_call_result_402852 = invoke(stypy.reporting.localization.Localization(__file__, 411, 4), getitem___402851, int_402846)
    
    # Assigning a type to the variable 'tuple_var_assignment_401322' (line 411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'tuple_var_assignment_401322', subscript_call_result_402852)
    
    # Assigning a Name to a Name (line 411):
    # Getting the type of 'tuple_var_assignment_401320' (line 411)
    tuple_var_assignment_401320_402853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'tuple_var_assignment_401320')
    # Assigning a type to the variable 'tol' (line 411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'tol', tuple_var_assignment_401320_402853)
    
    # Assigning a Name to a Name (line 411):
    # Getting the type of 'tuple_var_assignment_401321' (line 411)
    tuple_var_assignment_401321_402854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'tuple_var_assignment_401321')
    # Assigning a type to the variable 'rtol' (line 411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 9), 'rtol', tuple_var_assignment_401321_402854)
    
    # Assigning a Name to a Name (line 411):
    # Getting the type of 'tuple_var_assignment_401322' (line 411)
    tuple_var_assignment_401322_402855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'tuple_var_assignment_401322')
    # Assigning a type to the variable 'atol' (line 411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 15), 'atol', tuple_var_assignment_401322_402855)
    
    
    # SSA begins for try-except statement (line 412)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Tuple (line 413):
    
    # Assigning a Subscript to a Name (line 413):
    
    # Obtaining the type of the subscript
    int_402856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 8), 'int')
    
    # Call to eigsh(...): (line 413)
    # Processing the call arguments (line 413)
    # Getting the type of 'm' (line 413)
    m_402858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 21), 'm', False)
    int_402859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 24), 'int')
    # Processing the call keyword arguments (line 413)
    str_402860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 33), 'str', 'LM')
    keyword_402861 = str_402860
    
    # Obtaining the type of the subscript
    slice_402862 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 413, 42), None, None, None)
    int_402863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 47), 'int')
    # Getting the type of 'm' (line 413)
    m_402864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 42), 'm', False)
    # Obtaining the member '__getitem__' of a type (line 413)
    getitem___402865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 42), m_402864, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 413)
    subscript_call_result_402866 = invoke(stypy.reporting.localization.Localization(__file__, 413, 42), getitem___402865, (slice_402862, int_402863))
    
    keyword_402867 = subscript_call_result_402866
    int_402868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 59), 'int')
    keyword_402869 = int_402868
    # Getting the type of 'tol' (line 413)
    tol_402870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 66), 'tol', False)
    keyword_402871 = tol_402870
    int_402872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 75), 'int')
    keyword_402873 = int_402872
    kwargs_402874 = {'v0': keyword_402867, 'ncv': keyword_402873, 'tol': keyword_402871, 'which': keyword_402861, 'maxiter': keyword_402869}
    # Getting the type of 'eigsh' (line 413)
    eigsh_402857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 15), 'eigsh', False)
    # Calling eigsh(args, kwargs) (line 413)
    eigsh_call_result_402875 = invoke(stypy.reporting.localization.Localization(__file__, 413, 15), eigsh_402857, *[m_402858, int_402859], **kwargs_402874)
    
    # Obtaining the member '__getitem__' of a type (line 413)
    getitem___402876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 8), eigsh_call_result_402875, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 413)
    subscript_call_result_402877 = invoke(stypy.reporting.localization.Localization(__file__, 413, 8), getitem___402876, int_402856)
    
    # Assigning a type to the variable 'tuple_var_assignment_401323' (line 413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 413, 8), 'tuple_var_assignment_401323', subscript_call_result_402877)
    
    # Assigning a Subscript to a Name (line 413):
    
    # Obtaining the type of the subscript
    int_402878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 8), 'int')
    
    # Call to eigsh(...): (line 413)
    # Processing the call arguments (line 413)
    # Getting the type of 'm' (line 413)
    m_402880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 21), 'm', False)
    int_402881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 24), 'int')
    # Processing the call keyword arguments (line 413)
    str_402882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 33), 'str', 'LM')
    keyword_402883 = str_402882
    
    # Obtaining the type of the subscript
    slice_402884 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 413, 42), None, None, None)
    int_402885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 47), 'int')
    # Getting the type of 'm' (line 413)
    m_402886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 42), 'm', False)
    # Obtaining the member '__getitem__' of a type (line 413)
    getitem___402887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 42), m_402886, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 413)
    subscript_call_result_402888 = invoke(stypy.reporting.localization.Localization(__file__, 413, 42), getitem___402887, (slice_402884, int_402885))
    
    keyword_402889 = subscript_call_result_402888
    int_402890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 59), 'int')
    keyword_402891 = int_402890
    # Getting the type of 'tol' (line 413)
    tol_402892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 66), 'tol', False)
    keyword_402893 = tol_402892
    int_402894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 413, 75), 'int')
    keyword_402895 = int_402894
    kwargs_402896 = {'v0': keyword_402889, 'ncv': keyword_402895, 'tol': keyword_402893, 'which': keyword_402883, 'maxiter': keyword_402891}
    # Getting the type of 'eigsh' (line 413)
    eigsh_402879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 15), 'eigsh', False)
    # Calling eigsh(args, kwargs) (line 413)
    eigsh_call_result_402897 = invoke(stypy.reporting.localization.Localization(__file__, 413, 15), eigsh_402879, *[m_402880, int_402881], **kwargs_402896)
    
    # Obtaining the member '__getitem__' of a type (line 413)
    getitem___402898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 8), eigsh_call_result_402897, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 413)
    subscript_call_result_402899 = invoke(stypy.reporting.localization.Localization(__file__, 413, 8), getitem___402898, int_402878)
    
    # Assigning a type to the variable 'tuple_var_assignment_401324' (line 413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 413, 8), 'tuple_var_assignment_401324', subscript_call_result_402899)
    
    # Assigning a Name to a Name (line 413):
    # Getting the type of 'tuple_var_assignment_401323' (line 413)
    tuple_var_assignment_401323_402900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 8), 'tuple_var_assignment_401323')
    # Assigning a type to the variable 'w' (line 413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 413, 8), 'w', tuple_var_assignment_401323_402900)
    
    # Assigning a Name to a Name (line 413):
    # Getting the type of 'tuple_var_assignment_401324' (line 413)
    tuple_var_assignment_401324_402901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 8), 'tuple_var_assignment_401324')
    # Assigning a type to the variable 'v' (line 413)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 413, 11), 'v', tuple_var_assignment_401324_402901)
    
    # Call to AssertionError(...): (line 414)
    # Processing the call arguments (line 414)
    str_402903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 29), 'str', 'Spurious no-error exit')
    # Processing the call keyword arguments (line 414)
    kwargs_402904 = {}
    # Getting the type of 'AssertionError' (line 414)
    AssertionError_402902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 14), 'AssertionError', False)
    # Calling AssertionError(args, kwargs) (line 414)
    AssertionError_call_result_402905 = invoke(stypy.reporting.localization.Localization(__file__, 414, 14), AssertionError_402902, *[str_402903], **kwargs_402904)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 414, 8), AssertionError_call_result_402905, 'raise parameter', BaseException)
    # SSA branch for the except part of a try statement (line 412)
    # SSA branch for the except 'ArpackNoConvergence' branch of a try statement (line 412)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'ArpackNoConvergence' (line 415)
    ArpackNoConvergence_402906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 11), 'ArpackNoConvergence')
    # Assigning a type to the variable 'err' (line 415)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 415, 4), 'err', ArpackNoConvergence_402906)
    
    # Assigning a Call to a Name (line 416):
    
    # Assigning a Call to a Name (line 416):
    
    # Call to len(...): (line 416)
    # Processing the call arguments (line 416)
    # Getting the type of 'err' (line 416)
    err_402908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 16), 'err', False)
    # Obtaining the member 'eigenvalues' of a type (line 416)
    eigenvalues_402909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 16), err_402908, 'eigenvalues')
    # Processing the call keyword arguments (line 416)
    kwargs_402910 = {}
    # Getting the type of 'len' (line 416)
    len_402907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 12), 'len', False)
    # Calling len(args, kwargs) (line 416)
    len_call_result_402911 = invoke(stypy.reporting.localization.Localization(__file__, 416, 12), len_402907, *[eigenvalues_402909], **kwargs_402910)
    
    # Assigning a type to the variable 'k' (line 416)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'k', len_call_result_402911)
    
    
    # Getting the type of 'k' (line 417)
    k_402912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 11), 'k')
    int_402913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 16), 'int')
    # Applying the binary operator '<=' (line 417)
    result_le_402914 = python_operator(stypy.reporting.localization.Localization(__file__, 417, 11), '<=', k_402912, int_402913)
    
    # Testing the type of an if condition (line 417)
    if_condition_402915 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 417, 8), result_le_402914)
    # Assigning a type to the variable 'if_condition_402915' (line 417)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 8), 'if_condition_402915', if_condition_402915)
    # SSA begins for if statement (line 417)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to AssertionError(...): (line 418)
    # Processing the call arguments (line 418)
    str_402917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 33), 'str', 'Spurious no-eigenvalues-found case')
    # Processing the call keyword arguments (line 418)
    kwargs_402918 = {}
    # Getting the type of 'AssertionError' (line 418)
    AssertionError_402916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 18), 'AssertionError', False)
    # Calling AssertionError(args, kwargs) (line 418)
    AssertionError_call_result_402919 = invoke(stypy.reporting.localization.Localization(__file__, 418, 18), AssertionError_402916, *[str_402917], **kwargs_402918)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 418, 12), AssertionError_call_result_402919, 'raise parameter', BaseException)
    # SSA join for if statement (line 417)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Tuple to a Tuple (line 419):
    
    # Assigning a Attribute to a Name (line 419):
    # Getting the type of 'err' (line 419)
    err_402920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 15), 'err')
    # Obtaining the member 'eigenvalues' of a type (line 419)
    eigenvalues_402921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 15), err_402920, 'eigenvalues')
    # Assigning a type to the variable 'tuple_assignment_401325' (line 419)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'tuple_assignment_401325', eigenvalues_402921)
    
    # Assigning a Attribute to a Name (line 419):
    # Getting the type of 'err' (line 419)
    err_402922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 32), 'err')
    # Obtaining the member 'eigenvectors' of a type (line 419)
    eigenvectors_402923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 32), err_402922, 'eigenvectors')
    # Assigning a type to the variable 'tuple_assignment_401326' (line 419)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'tuple_assignment_401326', eigenvectors_402923)
    
    # Assigning a Name to a Name (line 419):
    # Getting the type of 'tuple_assignment_401325' (line 419)
    tuple_assignment_401325_402924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'tuple_assignment_401325')
    # Assigning a type to the variable 'w' (line 419)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'w', tuple_assignment_401325_402924)
    
    # Assigning a Name to a Name (line 419):
    # Getting the type of 'tuple_assignment_401326' (line 419)
    tuple_assignment_401326_402925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'tuple_assignment_401326')
    # Assigning a type to the variable 'v' (line 419)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 11), 'v', tuple_assignment_401326_402925)
    
    # Call to assert_allclose(...): (line 420)
    # Processing the call arguments (line 420)
    
    # Call to dot(...): (line 420)
    # Processing the call arguments (line 420)
    # Getting the type of 'm' (line 420)
    m_402928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 28), 'm', False)
    # Getting the type of 'v' (line 420)
    v_402929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 31), 'v', False)
    # Processing the call keyword arguments (line 420)
    kwargs_402930 = {}
    # Getting the type of 'dot' (line 420)
    dot_402927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 24), 'dot', False)
    # Calling dot(args, kwargs) (line 420)
    dot_call_result_402931 = invoke(stypy.reporting.localization.Localization(__file__, 420, 24), dot_402927, *[m_402928, v_402929], **kwargs_402930)
    
    # Getting the type of 'w' (line 420)
    w_402932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 35), 'w', False)
    # Getting the type of 'v' (line 420)
    v_402933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 39), 'v', False)
    # Applying the binary operator '*' (line 420)
    result_mul_402934 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 35), '*', w_402932, v_402933)
    
    # Processing the call keyword arguments (line 420)
    # Getting the type of 'rtol' (line 420)
    rtol_402935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 47), 'rtol', False)
    keyword_402936 = rtol_402935
    # Getting the type of 'atol' (line 420)
    atol_402937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 58), 'atol', False)
    keyword_402938 = atol_402937
    kwargs_402939 = {'rtol': keyword_402936, 'atol': keyword_402938}
    # Getting the type of 'assert_allclose' (line 420)
    assert_allclose_402926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 420)
    assert_allclose_call_result_402940 = invoke(stypy.reporting.localization.Localization(__file__, 420, 8), assert_allclose_402926, *[dot_call_result_402931, result_mul_402934], **kwargs_402939)
    
    # SSA join for try-except statement (line 412)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_symmetric_no_convergence(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_symmetric_no_convergence' in the type store
    # Getting the type of 'stypy_return_type' (line 408)
    stypy_return_type_402941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_402941)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_symmetric_no_convergence'
    return stypy_return_type_402941

# Assigning a type to the variable 'test_symmetric_no_convergence' (line 408)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 408, 0), 'test_symmetric_no_convergence', test_symmetric_no_convergence)

@norecursion
def test_real_nonsymmetric_modes(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_real_nonsymmetric_modes'
    module_type_store = module_type_store.open_function_context('test_real_nonsymmetric_modes', 423, 0, False)
    
    # Passed parameters checking function
    test_real_nonsymmetric_modes.stypy_localization = localization
    test_real_nonsymmetric_modes.stypy_type_of_self = None
    test_real_nonsymmetric_modes.stypy_type_store = module_type_store
    test_real_nonsymmetric_modes.stypy_function_name = 'test_real_nonsymmetric_modes'
    test_real_nonsymmetric_modes.stypy_param_names_list = []
    test_real_nonsymmetric_modes.stypy_varargs_param_name = None
    test_real_nonsymmetric_modes.stypy_kwargs_param_name = None
    test_real_nonsymmetric_modes.stypy_call_defaults = defaults
    test_real_nonsymmetric_modes.stypy_call_varargs = varargs
    test_real_nonsymmetric_modes.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_real_nonsymmetric_modes', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_real_nonsymmetric_modes', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_real_nonsymmetric_modes(...)' code ##################

    
    # Assigning a Call to a Name (line 424):
    
    # Assigning a Call to a Name (line 424):
    
    # Call to NonSymmetricParams(...): (line 424)
    # Processing the call keyword arguments (line 424)
    kwargs_402943 = {}
    # Getting the type of 'NonSymmetricParams' (line 424)
    NonSymmetricParams_402942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 13), 'NonSymmetricParams', False)
    # Calling NonSymmetricParams(args, kwargs) (line 424)
    NonSymmetricParams_call_result_402944 = invoke(stypy.reporting.localization.Localization(__file__, 424, 13), NonSymmetricParams_402942, *[], **kwargs_402943)
    
    # Assigning a type to the variable 'params' (line 424)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 4), 'params', NonSymmetricParams_call_result_402944)
    
    # Assigning a Num to a Name (line 425):
    
    # Assigning a Num to a Name (line 425):
    int_402945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 8), 'int')
    # Assigning a type to the variable 'k' (line 425)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 4), 'k', int_402945)
    
    # Assigning a Name to a Name (line 426):
    
    # Assigning a Name to a Name (line 426):
    # Getting the type of 'False' (line 426)
    False_402946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 16), 'False')
    # Assigning a type to the variable 'symmetric' (line 426)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 426, 4), 'symmetric', False_402946)
    
    # Getting the type of 'params' (line 427)
    params_402947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 13), 'params')
    # Obtaining the member 'real_test_cases' of a type (line 427)
    real_test_cases_402948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 427, 13), params_402947, 'real_test_cases')
    # Testing the type of a for loop iterable (line 427)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 427, 4), real_test_cases_402948)
    # Getting the type of the for loop variable (line 427)
    for_loop_var_402949 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 427, 4), real_test_cases_402948)
    # Assigning a type to the variable 'D' (line 427)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 427, 4), 'D', for_loop_var_402949)
    # SSA begins for a for statement (line 427)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    str_402950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 19), 'str', 'fd')
    # Testing the type of a for loop iterable (line 428)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 428, 8), str_402950)
    # Getting the type of the for loop variable (line 428)
    for_loop_var_402951 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 428, 8), str_402950)
    # Assigning a type to the variable 'typ' (line 428)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'typ', for_loop_var_402951)
    # SSA begins for a for statement (line 428)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 429)
    params_402952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 25), 'params')
    # Obtaining the member 'which' of a type (line 429)
    which_402953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 429, 25), params_402952, 'which')
    # Testing the type of a for loop iterable (line 429)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 429, 12), which_402953)
    # Getting the type of the for loop variable (line 429)
    for_loop_var_402954 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 429, 12), which_402953)
    # Assigning a type to the variable 'which' (line 429)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 429, 12), 'which', for_loop_var_402954)
    # SSA begins for a for statement (line 429)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 430)
    params_402955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 31), 'params')
    # Obtaining the member 'mattypes' of a type (line 430)
    mattypes_402956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 31), params_402955, 'mattypes')
    # Testing the type of a for loop iterable (line 430)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 430, 16), mattypes_402956)
    # Getting the type of the for loop variable (line 430)
    for_loop_var_402957 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 430, 16), mattypes_402956)
    # Assigning a type to the variable 'mattype' (line 430)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 16), 'mattype', for_loop_var_402957)
    # SSA begins for a for statement (line 430)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to items(...): (line 431)
    # Processing the call keyword arguments (line 431)
    kwargs_402961 = {}
    # Getting the type of 'params' (line 431)
    params_402958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 42), 'params', False)
    # Obtaining the member 'sigmas_OPparts' of a type (line 431)
    sigmas_OPparts_402959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 42), params_402958, 'sigmas_OPparts')
    # Obtaining the member 'items' of a type (line 431)
    items_402960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 42), sigmas_OPparts_402959, 'items')
    # Calling items(args, kwargs) (line 431)
    items_call_result_402962 = invoke(stypy.reporting.localization.Localization(__file__, 431, 42), items_402960, *[], **kwargs_402961)
    
    # Testing the type of a for loop iterable (line 431)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 431, 20), items_call_result_402962)
    # Getting the type of the for loop variable (line 431)
    for_loop_var_402963 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 431, 20), items_call_result_402962)
    # Assigning a type to the variable 'sigma' (line 431)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 431, 20), 'sigma', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 20), for_loop_var_402963))
    # Assigning a type to the variable 'OPparts' (line 431)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 431, 20), 'OPparts', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 20), for_loop_var_402963))
    # SSA begins for a for statement (line 431)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'OPparts' (line 432)
    OPparts_402964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 38), 'OPparts')
    # Testing the type of a for loop iterable (line 432)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 432, 24), OPparts_402964)
    # Getting the type of the for loop variable (line 432)
    for_loop_var_402965 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 432, 24), OPparts_402964)
    # Assigning a type to the variable 'OPpart' (line 432)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 24), 'OPpart', for_loop_var_402965)
    # SSA begins for a for statement (line 432)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to eval_evec(...): (line 433)
    # Processing the call arguments (line 433)
    # Getting the type of 'symmetric' (line 433)
    symmetric_402967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 38), 'symmetric', False)
    # Getting the type of 'D' (line 433)
    D_402968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 49), 'D', False)
    # Getting the type of 'typ' (line 433)
    typ_402969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 52), 'typ', False)
    # Getting the type of 'k' (line 433)
    k_402970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 57), 'k', False)
    # Getting the type of 'which' (line 433)
    which_402971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 60), 'which', False)
    # Getting the type of 'None' (line 434)
    None_402972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 38), 'None', False)
    # Getting the type of 'sigma' (line 434)
    sigma_402973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 44), 'sigma', False)
    # Getting the type of 'mattype' (line 434)
    mattype_402974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 51), 'mattype', False)
    # Getting the type of 'OPpart' (line 434)
    OPpart_402975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 60), 'OPpart', False)
    # Processing the call keyword arguments (line 433)
    kwargs_402976 = {}
    # Getting the type of 'eval_evec' (line 433)
    eval_evec_402966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 28), 'eval_evec', False)
    # Calling eval_evec(args, kwargs) (line 433)
    eval_evec_call_result_402977 = invoke(stypy.reporting.localization.Localization(__file__, 433, 28), eval_evec_402966, *[symmetric_402967, D_402968, typ_402969, k_402970, which_402971, None_402972, sigma_402973, mattype_402974, OPpart_402975], **kwargs_402976)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_real_nonsymmetric_modes(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_real_nonsymmetric_modes' in the type store
    # Getting the type of 'stypy_return_type' (line 423)
    stypy_return_type_402978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_402978)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_real_nonsymmetric_modes'
    return stypy_return_type_402978

# Assigning a type to the variable 'test_real_nonsymmetric_modes' (line 423)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 423, 0), 'test_real_nonsymmetric_modes', test_real_nonsymmetric_modes)

@norecursion
def test_complex_nonsymmetric_modes(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_complex_nonsymmetric_modes'
    module_type_store = module_type_store.open_function_context('test_complex_nonsymmetric_modes', 437, 0, False)
    
    # Passed parameters checking function
    test_complex_nonsymmetric_modes.stypy_localization = localization
    test_complex_nonsymmetric_modes.stypy_type_of_self = None
    test_complex_nonsymmetric_modes.stypy_type_store = module_type_store
    test_complex_nonsymmetric_modes.stypy_function_name = 'test_complex_nonsymmetric_modes'
    test_complex_nonsymmetric_modes.stypy_param_names_list = []
    test_complex_nonsymmetric_modes.stypy_varargs_param_name = None
    test_complex_nonsymmetric_modes.stypy_kwargs_param_name = None
    test_complex_nonsymmetric_modes.stypy_call_defaults = defaults
    test_complex_nonsymmetric_modes.stypy_call_varargs = varargs
    test_complex_nonsymmetric_modes.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_complex_nonsymmetric_modes', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_complex_nonsymmetric_modes', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_complex_nonsymmetric_modes(...)' code ##################

    
    # Assigning a Call to a Name (line 438):
    
    # Assigning a Call to a Name (line 438):
    
    # Call to NonSymmetricParams(...): (line 438)
    # Processing the call keyword arguments (line 438)
    kwargs_402980 = {}
    # Getting the type of 'NonSymmetricParams' (line 438)
    NonSymmetricParams_402979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 13), 'NonSymmetricParams', False)
    # Calling NonSymmetricParams(args, kwargs) (line 438)
    NonSymmetricParams_call_result_402981 = invoke(stypy.reporting.localization.Localization(__file__, 438, 13), NonSymmetricParams_402979, *[], **kwargs_402980)
    
    # Assigning a type to the variable 'params' (line 438)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 438, 4), 'params', NonSymmetricParams_call_result_402981)
    
    # Assigning a Num to a Name (line 439):
    
    # Assigning a Num to a Name (line 439):
    int_402982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 8), 'int')
    # Assigning a type to the variable 'k' (line 439)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 4), 'k', int_402982)
    
    # Assigning a Name to a Name (line 440):
    
    # Assigning a Name to a Name (line 440):
    # Getting the type of 'False' (line 440)
    False_402983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 16), 'False')
    # Assigning a type to the variable 'symmetric' (line 440)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 440, 4), 'symmetric', False_402983)
    
    # Getting the type of 'params' (line 441)
    params_402984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 13), 'params')
    # Obtaining the member 'complex_test_cases' of a type (line 441)
    complex_test_cases_402985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 13), params_402984, 'complex_test_cases')
    # Testing the type of a for loop iterable (line 441)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 441, 4), complex_test_cases_402985)
    # Getting the type of the for loop variable (line 441)
    for_loop_var_402986 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 441, 4), complex_test_cases_402985)
    # Assigning a type to the variable 'D' (line 441)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 4), 'D', for_loop_var_402986)
    # SSA begins for a for statement (line 441)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    str_402987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 19), 'str', 'DF')
    # Testing the type of a for loop iterable (line 442)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 442, 8), str_402987)
    # Getting the type of the for loop variable (line 442)
    for_loop_var_402988 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 442, 8), str_402987)
    # Assigning a type to the variable 'typ' (line 442)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 8), 'typ', for_loop_var_402988)
    # SSA begins for a for statement (line 442)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 443)
    params_402989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 25), 'params')
    # Obtaining the member 'which' of a type (line 443)
    which_402990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 25), params_402989, 'which')
    # Testing the type of a for loop iterable (line 443)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 443, 12), which_402990)
    # Getting the type of the for loop variable (line 443)
    for_loop_var_402991 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 443, 12), which_402990)
    # Assigning a type to the variable 'which' (line 443)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 12), 'which', for_loop_var_402991)
    # SSA begins for a for statement (line 443)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 444)
    params_402992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 31), 'params')
    # Obtaining the member 'mattypes' of a type (line 444)
    mattypes_402993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 31), params_402992, 'mattypes')
    # Testing the type of a for loop iterable (line 444)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 444, 16), mattypes_402993)
    # Getting the type of the for loop variable (line 444)
    for_loop_var_402994 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 444, 16), mattypes_402993)
    # Assigning a type to the variable 'mattype' (line 444)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'mattype', for_loop_var_402994)
    # SSA begins for a for statement (line 444)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 445)
    params_402995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 33), 'params')
    # Obtaining the member 'sigmas_OPparts' of a type (line 445)
    sigmas_OPparts_402996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 33), params_402995, 'sigmas_OPparts')
    # Testing the type of a for loop iterable (line 445)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 445, 20), sigmas_OPparts_402996)
    # Getting the type of the for loop variable (line 445)
    for_loop_var_402997 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 445, 20), sigmas_OPparts_402996)
    # Assigning a type to the variable 'sigma' (line 445)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 20), 'sigma', for_loop_var_402997)
    # SSA begins for a for statement (line 445)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to eval_evec(...): (line 446)
    # Processing the call arguments (line 446)
    # Getting the type of 'symmetric' (line 446)
    symmetric_402999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 34), 'symmetric', False)
    # Getting the type of 'D' (line 446)
    D_403000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 45), 'D', False)
    # Getting the type of 'typ' (line 446)
    typ_403001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 48), 'typ', False)
    # Getting the type of 'k' (line 446)
    k_403002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 53), 'k', False)
    # Getting the type of 'which' (line 446)
    which_403003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 56), 'which', False)
    # Getting the type of 'None' (line 447)
    None_403004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 34), 'None', False)
    # Getting the type of 'sigma' (line 447)
    sigma_403005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 40), 'sigma', False)
    # Getting the type of 'mattype' (line 447)
    mattype_403006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 47), 'mattype', False)
    # Processing the call keyword arguments (line 446)
    kwargs_403007 = {}
    # Getting the type of 'eval_evec' (line 446)
    eval_evec_402998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 24), 'eval_evec', False)
    # Calling eval_evec(args, kwargs) (line 446)
    eval_evec_call_result_403008 = invoke(stypy.reporting.localization.Localization(__file__, 446, 24), eval_evec_402998, *[symmetric_402999, D_403000, typ_403001, k_403002, which_403003, None_403004, sigma_403005, mattype_403006], **kwargs_403007)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_complex_nonsymmetric_modes(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_complex_nonsymmetric_modes' in the type store
    # Getting the type of 'stypy_return_type' (line 437)
    stypy_return_type_403009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403009)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_complex_nonsymmetric_modes'
    return stypy_return_type_403009

# Assigning a type to the variable 'test_complex_nonsymmetric_modes' (line 437)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 0), 'test_complex_nonsymmetric_modes', test_complex_nonsymmetric_modes)

@norecursion
def test_standard_nonsymmetric_starting_vector(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_standard_nonsymmetric_starting_vector'
    module_type_store = module_type_store.open_function_context('test_standard_nonsymmetric_starting_vector', 450, 0, False)
    
    # Passed parameters checking function
    test_standard_nonsymmetric_starting_vector.stypy_localization = localization
    test_standard_nonsymmetric_starting_vector.stypy_type_of_self = None
    test_standard_nonsymmetric_starting_vector.stypy_type_store = module_type_store
    test_standard_nonsymmetric_starting_vector.stypy_function_name = 'test_standard_nonsymmetric_starting_vector'
    test_standard_nonsymmetric_starting_vector.stypy_param_names_list = []
    test_standard_nonsymmetric_starting_vector.stypy_varargs_param_name = None
    test_standard_nonsymmetric_starting_vector.stypy_kwargs_param_name = None
    test_standard_nonsymmetric_starting_vector.stypy_call_defaults = defaults
    test_standard_nonsymmetric_starting_vector.stypy_call_varargs = varargs
    test_standard_nonsymmetric_starting_vector.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_standard_nonsymmetric_starting_vector', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_standard_nonsymmetric_starting_vector', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_standard_nonsymmetric_starting_vector(...)' code ##################

    
    # Assigning a Call to a Name (line 451):
    
    # Assigning a Call to a Name (line 451):
    
    # Call to NonSymmetricParams(...): (line 451)
    # Processing the call keyword arguments (line 451)
    kwargs_403011 = {}
    # Getting the type of 'NonSymmetricParams' (line 451)
    NonSymmetricParams_403010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 13), 'NonSymmetricParams', False)
    # Calling NonSymmetricParams(args, kwargs) (line 451)
    NonSymmetricParams_call_result_403012 = invoke(stypy.reporting.localization.Localization(__file__, 451, 13), NonSymmetricParams_403010, *[], **kwargs_403011)
    
    # Assigning a type to the variable 'params' (line 451)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 451, 4), 'params', NonSymmetricParams_call_result_403012)
    
    # Assigning a Name to a Name (line 452):
    
    # Assigning a Name to a Name (line 452):
    # Getting the type of 'None' (line 452)
    None_403013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 12), 'None')
    # Assigning a type to the variable 'sigma' (line 452)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 4), 'sigma', None_403013)
    
    # Assigning a Name to a Name (line 453):
    
    # Assigning a Name to a Name (line 453):
    # Getting the type of 'False' (line 453)
    False_403014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 16), 'False')
    # Assigning a type to the variable 'symmetric' (line 453)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 4), 'symmetric', False_403014)
    
    
    # Obtaining an instance of the builtin type 'list' (line 454)
    list_403015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 454)
    # Adding element type (line 454)
    int_403016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 14), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 454, 13), list_403015, int_403016)
    # Adding element type (line 454)
    int_403017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 454, 13), list_403015, int_403017)
    # Adding element type (line 454)
    int_403018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 454, 13), list_403015, int_403018)
    # Adding element type (line 454)
    int_403019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 23), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 454, 13), list_403015, int_403019)
    
    # Testing the type of a for loop iterable (line 454)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 454, 4), list_403015)
    # Getting the type of the for loop variable (line 454)
    for_loop_var_403020 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 454, 4), list_403015)
    # Assigning a type to the variable 'k' (line 454)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 454, 4), 'k', for_loop_var_403020)
    # SSA begins for a for statement (line 454)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 455)
    params_403021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 17), 'params')
    # Obtaining the member 'complex_test_cases' of a type (line 455)
    complex_test_cases_403022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 17), params_403021, 'complex_test_cases')
    # Testing the type of a for loop iterable (line 455)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 455, 8), complex_test_cases_403022)
    # Getting the type of the for loop variable (line 455)
    for_loop_var_403023 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 455, 8), complex_test_cases_403022)
    # Assigning a type to the variable 'd' (line 455)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 8), 'd', for_loop_var_403023)
    # SSA begins for a for statement (line 455)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    str_403024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 23), 'str', 'FD')
    # Testing the type of a for loop iterable (line 456)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 456, 12), str_403024)
    # Getting the type of the for loop variable (line 456)
    for_loop_var_403025 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 456, 12), str_403024)
    # Assigning a type to the variable 'typ' (line 456)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 12), 'typ', for_loop_var_403025)
    # SSA begins for a for statement (line 456)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Subscript to a Name (line 457):
    
    # Assigning a Subscript to a Name (line 457):
    
    # Obtaining the type of the subscript
    str_403026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 22), 'str', 'mat')
    # Getting the type of 'd' (line 457)
    d_403027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 20), 'd')
    # Obtaining the member '__getitem__' of a type (line 457)
    getitem___403028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 457, 20), d_403027, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 457)
    subscript_call_result_403029 = invoke(stypy.reporting.localization.Localization(__file__, 457, 20), getitem___403028, str_403026)
    
    # Assigning a type to the variable 'A' (line 457)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 457, 16), 'A', subscript_call_result_403029)
    
    # Assigning a Subscript to a Name (line 458):
    
    # Assigning a Subscript to a Name (line 458):
    
    # Obtaining the type of the subscript
    int_403030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 28), 'int')
    # Getting the type of 'A' (line 458)
    A_403031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 20), 'A')
    # Obtaining the member 'shape' of a type (line 458)
    shape_403032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 20), A_403031, 'shape')
    # Obtaining the member '__getitem__' of a type (line 458)
    getitem___403033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 20), shape_403032, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 458)
    subscript_call_result_403034 = invoke(stypy.reporting.localization.Localization(__file__, 458, 20), getitem___403033, int_403030)
    
    # Assigning a type to the variable 'n' (line 458)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 16), 'n', subscript_call_result_403034)
    
    # Assigning a Call to a Name (line 459):
    
    # Assigning a Call to a Name (line 459):
    
    # Call to astype(...): (line 459)
    # Processing the call arguments (line 459)
    # Getting the type of 'typ' (line 459)
    typ_403041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 43), 'typ', False)
    # Processing the call keyword arguments (line 459)
    kwargs_403042 = {}
    
    # Call to rand(...): (line 459)
    # Processing the call arguments (line 459)
    # Getting the type of 'n' (line 459)
    n_403037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 33), 'n', False)
    # Processing the call keyword arguments (line 459)
    kwargs_403038 = {}
    # Getting the type of 'random' (line 459)
    random_403035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 21), 'random', False)
    # Obtaining the member 'rand' of a type (line 459)
    rand_403036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 21), random_403035, 'rand')
    # Calling rand(args, kwargs) (line 459)
    rand_call_result_403039 = invoke(stypy.reporting.localization.Localization(__file__, 459, 21), rand_403036, *[n_403037], **kwargs_403038)
    
    # Obtaining the member 'astype' of a type (line 459)
    astype_403040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 21), rand_call_result_403039, 'astype')
    # Calling astype(args, kwargs) (line 459)
    astype_call_result_403043 = invoke(stypy.reporting.localization.Localization(__file__, 459, 21), astype_403040, *[typ_403041], **kwargs_403042)
    
    # Assigning a type to the variable 'v0' (line 459)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 16), 'v0', astype_call_result_403043)
    
    # Call to eval_evec(...): (line 460)
    # Processing the call arguments (line 460)
    # Getting the type of 'symmetric' (line 460)
    symmetric_403045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 26), 'symmetric', False)
    # Getting the type of 'd' (line 460)
    d_403046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 37), 'd', False)
    # Getting the type of 'typ' (line 460)
    typ_403047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 40), 'typ', False)
    # Getting the type of 'k' (line 460)
    k_403048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 45), 'k', False)
    str_403049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 48), 'str', 'LM')
    # Getting the type of 'v0' (line 460)
    v0_403050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 54), 'v0', False)
    # Getting the type of 'sigma' (line 460)
    sigma_403051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 58), 'sigma', False)
    # Processing the call keyword arguments (line 460)
    kwargs_403052 = {}
    # Getting the type of 'eval_evec' (line 460)
    eval_evec_403044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 16), 'eval_evec', False)
    # Calling eval_evec(args, kwargs) (line 460)
    eval_evec_call_result_403053 = invoke(stypy.reporting.localization.Localization(__file__, 460, 16), eval_evec_403044, *[symmetric_403045, d_403046, typ_403047, k_403048, str_403049, v0_403050, sigma_403051], **kwargs_403052)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_standard_nonsymmetric_starting_vector(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_standard_nonsymmetric_starting_vector' in the type store
    # Getting the type of 'stypy_return_type' (line 450)
    stypy_return_type_403054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403054)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_standard_nonsymmetric_starting_vector'
    return stypy_return_type_403054

# Assigning a type to the variable 'test_standard_nonsymmetric_starting_vector' (line 450)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 0), 'test_standard_nonsymmetric_starting_vector', test_standard_nonsymmetric_starting_vector)

@norecursion
def test_general_nonsymmetric_starting_vector(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_general_nonsymmetric_starting_vector'
    module_type_store = module_type_store.open_function_context('test_general_nonsymmetric_starting_vector', 463, 0, False)
    
    # Passed parameters checking function
    test_general_nonsymmetric_starting_vector.stypy_localization = localization
    test_general_nonsymmetric_starting_vector.stypy_type_of_self = None
    test_general_nonsymmetric_starting_vector.stypy_type_store = module_type_store
    test_general_nonsymmetric_starting_vector.stypy_function_name = 'test_general_nonsymmetric_starting_vector'
    test_general_nonsymmetric_starting_vector.stypy_param_names_list = []
    test_general_nonsymmetric_starting_vector.stypy_varargs_param_name = None
    test_general_nonsymmetric_starting_vector.stypy_kwargs_param_name = None
    test_general_nonsymmetric_starting_vector.stypy_call_defaults = defaults
    test_general_nonsymmetric_starting_vector.stypy_call_varargs = varargs
    test_general_nonsymmetric_starting_vector.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_general_nonsymmetric_starting_vector', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_general_nonsymmetric_starting_vector', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_general_nonsymmetric_starting_vector(...)' code ##################

    
    # Assigning a Call to a Name (line 464):
    
    # Assigning a Call to a Name (line 464):
    
    # Call to NonSymmetricParams(...): (line 464)
    # Processing the call keyword arguments (line 464)
    kwargs_403056 = {}
    # Getting the type of 'NonSymmetricParams' (line 464)
    NonSymmetricParams_403055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 13), 'NonSymmetricParams', False)
    # Calling NonSymmetricParams(args, kwargs) (line 464)
    NonSymmetricParams_call_result_403057 = invoke(stypy.reporting.localization.Localization(__file__, 464, 13), NonSymmetricParams_403055, *[], **kwargs_403056)
    
    # Assigning a type to the variable 'params' (line 464)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 4), 'params', NonSymmetricParams_call_result_403057)
    
    # Assigning a Name to a Name (line 465):
    
    # Assigning a Name to a Name (line 465):
    # Getting the type of 'None' (line 465)
    None_403058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 12), 'None')
    # Assigning a type to the variable 'sigma' (line 465)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 4), 'sigma', None_403058)
    
    # Assigning a Name to a Name (line 466):
    
    # Assigning a Name to a Name (line 466):
    # Getting the type of 'False' (line 466)
    False_403059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 16), 'False')
    # Assigning a type to the variable 'symmetric' (line 466)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 4), 'symmetric', False_403059)
    
    
    # Obtaining an instance of the builtin type 'list' (line 467)
    list_403060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 467)
    # Adding element type (line 467)
    int_403061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 14), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 13), list_403060, int_403061)
    # Adding element type (line 467)
    int_403062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 13), list_403060, int_403062)
    # Adding element type (line 467)
    int_403063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 13), list_403060, int_403063)
    # Adding element type (line 467)
    int_403064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 23), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 13), list_403060, int_403064)
    
    # Testing the type of a for loop iterable (line 467)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 467, 4), list_403060)
    # Getting the type of the for loop variable (line 467)
    for_loop_var_403065 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 467, 4), list_403060)
    # Assigning a type to the variable 'k' (line 467)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 467, 4), 'k', for_loop_var_403065)
    # SSA begins for a for statement (line 467)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'params' (line 468)
    params_403066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 17), 'params')
    # Obtaining the member 'complex_test_cases' of a type (line 468)
    complex_test_cases_403067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 17), params_403066, 'complex_test_cases')
    # Testing the type of a for loop iterable (line 468)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 468, 8), complex_test_cases_403067)
    # Getting the type of the for loop variable (line 468)
    for_loop_var_403068 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 468, 8), complex_test_cases_403067)
    # Assigning a type to the variable 'd' (line 468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'd', for_loop_var_403068)
    # SSA begins for a for statement (line 468)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    str_403069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 23), 'str', 'FD')
    # Testing the type of a for loop iterable (line 469)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 469, 12), str_403069)
    # Getting the type of the for loop variable (line 469)
    for_loop_var_403070 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 469, 12), str_403069)
    # Assigning a type to the variable 'typ' (line 469)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 469, 12), 'typ', for_loop_var_403070)
    # SSA begins for a for statement (line 469)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Subscript to a Name (line 470):
    
    # Assigning a Subscript to a Name (line 470):
    
    # Obtaining the type of the subscript
    str_403071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 22), 'str', 'mat')
    # Getting the type of 'd' (line 470)
    d_403072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 20), 'd')
    # Obtaining the member '__getitem__' of a type (line 470)
    getitem___403073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 20), d_403072, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 470)
    subscript_call_result_403074 = invoke(stypy.reporting.localization.Localization(__file__, 470, 20), getitem___403073, str_403071)
    
    # Assigning a type to the variable 'A' (line 470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 16), 'A', subscript_call_result_403074)
    
    # Assigning a Subscript to a Name (line 471):
    
    # Assigning a Subscript to a Name (line 471):
    
    # Obtaining the type of the subscript
    int_403075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 28), 'int')
    # Getting the type of 'A' (line 471)
    A_403076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 20), 'A')
    # Obtaining the member 'shape' of a type (line 471)
    shape_403077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 20), A_403076, 'shape')
    # Obtaining the member '__getitem__' of a type (line 471)
    getitem___403078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 20), shape_403077, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 471)
    subscript_call_result_403079 = invoke(stypy.reporting.localization.Localization(__file__, 471, 20), getitem___403078, int_403075)
    
    # Assigning a type to the variable 'n' (line 471)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 471, 16), 'n', subscript_call_result_403079)
    
    # Assigning a Call to a Name (line 472):
    
    # Assigning a Call to a Name (line 472):
    
    # Call to astype(...): (line 472)
    # Processing the call arguments (line 472)
    # Getting the type of 'typ' (line 472)
    typ_403086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 43), 'typ', False)
    # Processing the call keyword arguments (line 472)
    kwargs_403087 = {}
    
    # Call to rand(...): (line 472)
    # Processing the call arguments (line 472)
    # Getting the type of 'n' (line 472)
    n_403082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 33), 'n', False)
    # Processing the call keyword arguments (line 472)
    kwargs_403083 = {}
    # Getting the type of 'random' (line 472)
    random_403080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 21), 'random', False)
    # Obtaining the member 'rand' of a type (line 472)
    rand_403081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 21), random_403080, 'rand')
    # Calling rand(args, kwargs) (line 472)
    rand_call_result_403084 = invoke(stypy.reporting.localization.Localization(__file__, 472, 21), rand_403081, *[n_403082], **kwargs_403083)
    
    # Obtaining the member 'astype' of a type (line 472)
    astype_403085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 21), rand_call_result_403084, 'astype')
    # Calling astype(args, kwargs) (line 472)
    astype_call_result_403088 = invoke(stypy.reporting.localization.Localization(__file__, 472, 21), astype_403085, *[typ_403086], **kwargs_403087)
    
    # Assigning a type to the variable 'v0' (line 472)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'v0', astype_call_result_403088)
    
    # Call to eval_evec(...): (line 473)
    # Processing the call arguments (line 473)
    # Getting the type of 'symmetric' (line 473)
    symmetric_403090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 26), 'symmetric', False)
    # Getting the type of 'd' (line 473)
    d_403091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 37), 'd', False)
    # Getting the type of 'typ' (line 473)
    typ_403092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 40), 'typ', False)
    # Getting the type of 'k' (line 473)
    k_403093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 45), 'k', False)
    str_403094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 48), 'str', 'LM')
    # Getting the type of 'v0' (line 473)
    v0_403095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 54), 'v0', False)
    # Getting the type of 'sigma' (line 473)
    sigma_403096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 58), 'sigma', False)
    # Processing the call keyword arguments (line 473)
    kwargs_403097 = {}
    # Getting the type of 'eval_evec' (line 473)
    eval_evec_403089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 16), 'eval_evec', False)
    # Calling eval_evec(args, kwargs) (line 473)
    eval_evec_call_result_403098 = invoke(stypy.reporting.localization.Localization(__file__, 473, 16), eval_evec_403089, *[symmetric_403090, d_403091, typ_403092, k_403093, str_403094, v0_403095, sigma_403096], **kwargs_403097)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_general_nonsymmetric_starting_vector(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_general_nonsymmetric_starting_vector' in the type store
    # Getting the type of 'stypy_return_type' (line 463)
    stypy_return_type_403099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403099)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_general_nonsymmetric_starting_vector'
    return stypy_return_type_403099

# Assigning a type to the variable 'test_general_nonsymmetric_starting_vector' (line 463)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 463, 0), 'test_general_nonsymmetric_starting_vector', test_general_nonsymmetric_starting_vector)

@norecursion
def test_standard_nonsymmetric_no_convergence(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_standard_nonsymmetric_no_convergence'
    module_type_store = module_type_store.open_function_context('test_standard_nonsymmetric_no_convergence', 476, 0, False)
    
    # Passed parameters checking function
    test_standard_nonsymmetric_no_convergence.stypy_localization = localization
    test_standard_nonsymmetric_no_convergence.stypy_type_of_self = None
    test_standard_nonsymmetric_no_convergence.stypy_type_store = module_type_store
    test_standard_nonsymmetric_no_convergence.stypy_function_name = 'test_standard_nonsymmetric_no_convergence'
    test_standard_nonsymmetric_no_convergence.stypy_param_names_list = []
    test_standard_nonsymmetric_no_convergence.stypy_varargs_param_name = None
    test_standard_nonsymmetric_no_convergence.stypy_kwargs_param_name = None
    test_standard_nonsymmetric_no_convergence.stypy_call_defaults = defaults
    test_standard_nonsymmetric_no_convergence.stypy_call_varargs = varargs
    test_standard_nonsymmetric_no_convergence.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_standard_nonsymmetric_no_convergence', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_standard_nonsymmetric_no_convergence', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_standard_nonsymmetric_no_convergence(...)' code ##################

    
    # Call to seed(...): (line 477)
    # Processing the call arguments (line 477)
    int_403103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 477, 19), 'int')
    # Processing the call keyword arguments (line 477)
    kwargs_403104 = {}
    # Getting the type of 'np' (line 477)
    np_403100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 4), 'np', False)
    # Obtaining the member 'random' of a type (line 477)
    random_403101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 4), np_403100, 'random')
    # Obtaining the member 'seed' of a type (line 477)
    seed_403102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 4), random_403101, 'seed')
    # Calling seed(args, kwargs) (line 477)
    seed_call_result_403105 = invoke(stypy.reporting.localization.Localization(__file__, 477, 4), seed_403102, *[int_403103], **kwargs_403104)
    
    
    # Assigning a Call to a Name (line 478):
    
    # Assigning a Call to a Name (line 478):
    
    # Call to generate_matrix(...): (line 478)
    # Processing the call arguments (line 478)
    int_403107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 24), 'int')
    # Processing the call keyword arguments (line 478)
    # Getting the type of 'True' (line 478)
    True_403108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 36), 'True', False)
    keyword_403109 = True_403108
    kwargs_403110 = {'complex': keyword_403109}
    # Getting the type of 'generate_matrix' (line 478)
    generate_matrix_403106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'generate_matrix', False)
    # Calling generate_matrix(args, kwargs) (line 478)
    generate_matrix_call_result_403111 = invoke(stypy.reporting.localization.Localization(__file__, 478, 8), generate_matrix_403106, *[int_403107], **kwargs_403110)
    
    # Assigning a type to the variable 'm' (line 478)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 4), 'm', generate_matrix_call_result_403111)
    
    # Assigning a Call to a Tuple (line 479):
    
    # Assigning a Subscript to a Name (line 479):
    
    # Obtaining the type of the subscript
    int_403112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 4), 'int')
    
    # Call to _get_test_tolerance(...): (line 479)
    # Processing the call arguments (line 479)
    str_403114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 42), 'str', 'd')
    # Processing the call keyword arguments (line 479)
    kwargs_403115 = {}
    # Getting the type of '_get_test_tolerance' (line 479)
    _get_test_tolerance_403113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 22), '_get_test_tolerance', False)
    # Calling _get_test_tolerance(args, kwargs) (line 479)
    _get_test_tolerance_call_result_403116 = invoke(stypy.reporting.localization.Localization(__file__, 479, 22), _get_test_tolerance_403113, *[str_403114], **kwargs_403115)
    
    # Obtaining the member '__getitem__' of a type (line 479)
    getitem___403117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 4), _get_test_tolerance_call_result_403116, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 479)
    subscript_call_result_403118 = invoke(stypy.reporting.localization.Localization(__file__, 479, 4), getitem___403117, int_403112)
    
    # Assigning a type to the variable 'tuple_var_assignment_401327' (line 479)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 4), 'tuple_var_assignment_401327', subscript_call_result_403118)
    
    # Assigning a Subscript to a Name (line 479):
    
    # Obtaining the type of the subscript
    int_403119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 4), 'int')
    
    # Call to _get_test_tolerance(...): (line 479)
    # Processing the call arguments (line 479)
    str_403121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 42), 'str', 'd')
    # Processing the call keyword arguments (line 479)
    kwargs_403122 = {}
    # Getting the type of '_get_test_tolerance' (line 479)
    _get_test_tolerance_403120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 22), '_get_test_tolerance', False)
    # Calling _get_test_tolerance(args, kwargs) (line 479)
    _get_test_tolerance_call_result_403123 = invoke(stypy.reporting.localization.Localization(__file__, 479, 22), _get_test_tolerance_403120, *[str_403121], **kwargs_403122)
    
    # Obtaining the member '__getitem__' of a type (line 479)
    getitem___403124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 4), _get_test_tolerance_call_result_403123, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 479)
    subscript_call_result_403125 = invoke(stypy.reporting.localization.Localization(__file__, 479, 4), getitem___403124, int_403119)
    
    # Assigning a type to the variable 'tuple_var_assignment_401328' (line 479)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 4), 'tuple_var_assignment_401328', subscript_call_result_403125)
    
    # Assigning a Subscript to a Name (line 479):
    
    # Obtaining the type of the subscript
    int_403126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 4), 'int')
    
    # Call to _get_test_tolerance(...): (line 479)
    # Processing the call arguments (line 479)
    str_403128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 42), 'str', 'd')
    # Processing the call keyword arguments (line 479)
    kwargs_403129 = {}
    # Getting the type of '_get_test_tolerance' (line 479)
    _get_test_tolerance_403127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 22), '_get_test_tolerance', False)
    # Calling _get_test_tolerance(args, kwargs) (line 479)
    _get_test_tolerance_call_result_403130 = invoke(stypy.reporting.localization.Localization(__file__, 479, 22), _get_test_tolerance_403127, *[str_403128], **kwargs_403129)
    
    # Obtaining the member '__getitem__' of a type (line 479)
    getitem___403131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 4), _get_test_tolerance_call_result_403130, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 479)
    subscript_call_result_403132 = invoke(stypy.reporting.localization.Localization(__file__, 479, 4), getitem___403131, int_403126)
    
    # Assigning a type to the variable 'tuple_var_assignment_401329' (line 479)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 4), 'tuple_var_assignment_401329', subscript_call_result_403132)
    
    # Assigning a Name to a Name (line 479):
    # Getting the type of 'tuple_var_assignment_401327' (line 479)
    tuple_var_assignment_401327_403133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 4), 'tuple_var_assignment_401327')
    # Assigning a type to the variable 'tol' (line 479)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 4), 'tol', tuple_var_assignment_401327_403133)
    
    # Assigning a Name to a Name (line 479):
    # Getting the type of 'tuple_var_assignment_401328' (line 479)
    tuple_var_assignment_401328_403134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 4), 'tuple_var_assignment_401328')
    # Assigning a type to the variable 'rtol' (line 479)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 9), 'rtol', tuple_var_assignment_401328_403134)
    
    # Assigning a Name to a Name (line 479):
    # Getting the type of 'tuple_var_assignment_401329' (line 479)
    tuple_var_assignment_401329_403135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 4), 'tuple_var_assignment_401329')
    # Assigning a type to the variable 'atol' (line 479)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 15), 'atol', tuple_var_assignment_401329_403135)
    
    
    # SSA begins for try-except statement (line 480)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Tuple (line 481):
    
    # Assigning a Subscript to a Name (line 481):
    
    # Obtaining the type of the subscript
    int_403136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 8), 'int')
    
    # Call to eigs(...): (line 481)
    # Processing the call arguments (line 481)
    # Getting the type of 'm' (line 481)
    m_403138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 20), 'm', False)
    int_403139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 23), 'int')
    # Processing the call keyword arguments (line 481)
    str_403140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 32), 'str', 'LM')
    keyword_403141 = str_403140
    
    # Obtaining the type of the subscript
    slice_403142 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 481, 41), None, None, None)
    int_403143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 46), 'int')
    # Getting the type of 'm' (line 481)
    m_403144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 41), 'm', False)
    # Obtaining the member '__getitem__' of a type (line 481)
    getitem___403145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 41), m_403144, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 481)
    subscript_call_result_403146 = invoke(stypy.reporting.localization.Localization(__file__, 481, 41), getitem___403145, (slice_403142, int_403143))
    
    keyword_403147 = subscript_call_result_403146
    int_403148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 58), 'int')
    keyword_403149 = int_403148
    # Getting the type of 'tol' (line 481)
    tol_403150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 65), 'tol', False)
    keyword_403151 = tol_403150
    kwargs_403152 = {'v0': keyword_403147, 'tol': keyword_403151, 'which': keyword_403141, 'maxiter': keyword_403149}
    # Getting the type of 'eigs' (line 481)
    eigs_403137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 15), 'eigs', False)
    # Calling eigs(args, kwargs) (line 481)
    eigs_call_result_403153 = invoke(stypy.reporting.localization.Localization(__file__, 481, 15), eigs_403137, *[m_403138, int_403139], **kwargs_403152)
    
    # Obtaining the member '__getitem__' of a type (line 481)
    getitem___403154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 8), eigs_call_result_403153, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 481)
    subscript_call_result_403155 = invoke(stypy.reporting.localization.Localization(__file__, 481, 8), getitem___403154, int_403136)
    
    # Assigning a type to the variable 'tuple_var_assignment_401330' (line 481)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'tuple_var_assignment_401330', subscript_call_result_403155)
    
    # Assigning a Subscript to a Name (line 481):
    
    # Obtaining the type of the subscript
    int_403156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 8), 'int')
    
    # Call to eigs(...): (line 481)
    # Processing the call arguments (line 481)
    # Getting the type of 'm' (line 481)
    m_403158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 20), 'm', False)
    int_403159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 23), 'int')
    # Processing the call keyword arguments (line 481)
    str_403160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 32), 'str', 'LM')
    keyword_403161 = str_403160
    
    # Obtaining the type of the subscript
    slice_403162 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 481, 41), None, None, None)
    int_403163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 46), 'int')
    # Getting the type of 'm' (line 481)
    m_403164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 41), 'm', False)
    # Obtaining the member '__getitem__' of a type (line 481)
    getitem___403165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 41), m_403164, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 481)
    subscript_call_result_403166 = invoke(stypy.reporting.localization.Localization(__file__, 481, 41), getitem___403165, (slice_403162, int_403163))
    
    keyword_403167 = subscript_call_result_403166
    int_403168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 58), 'int')
    keyword_403169 = int_403168
    # Getting the type of 'tol' (line 481)
    tol_403170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 65), 'tol', False)
    keyword_403171 = tol_403170
    kwargs_403172 = {'v0': keyword_403167, 'tol': keyword_403171, 'which': keyword_403161, 'maxiter': keyword_403169}
    # Getting the type of 'eigs' (line 481)
    eigs_403157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 15), 'eigs', False)
    # Calling eigs(args, kwargs) (line 481)
    eigs_call_result_403173 = invoke(stypy.reporting.localization.Localization(__file__, 481, 15), eigs_403157, *[m_403158, int_403159], **kwargs_403172)
    
    # Obtaining the member '__getitem__' of a type (line 481)
    getitem___403174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 8), eigs_call_result_403173, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 481)
    subscript_call_result_403175 = invoke(stypy.reporting.localization.Localization(__file__, 481, 8), getitem___403174, int_403156)
    
    # Assigning a type to the variable 'tuple_var_assignment_401331' (line 481)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'tuple_var_assignment_401331', subscript_call_result_403175)
    
    # Assigning a Name to a Name (line 481):
    # Getting the type of 'tuple_var_assignment_401330' (line 481)
    tuple_var_assignment_401330_403176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'tuple_var_assignment_401330')
    # Assigning a type to the variable 'w' (line 481)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'w', tuple_var_assignment_401330_403176)
    
    # Assigning a Name to a Name (line 481):
    # Getting the type of 'tuple_var_assignment_401331' (line 481)
    tuple_var_assignment_401331_403177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'tuple_var_assignment_401331')
    # Assigning a type to the variable 'v' (line 481)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 11), 'v', tuple_var_assignment_401331_403177)
    
    # Call to AssertionError(...): (line 482)
    # Processing the call arguments (line 482)
    str_403179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 29), 'str', 'Spurious no-error exit')
    # Processing the call keyword arguments (line 482)
    kwargs_403180 = {}
    # Getting the type of 'AssertionError' (line 482)
    AssertionError_403178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 14), 'AssertionError', False)
    # Calling AssertionError(args, kwargs) (line 482)
    AssertionError_call_result_403181 = invoke(stypy.reporting.localization.Localization(__file__, 482, 14), AssertionError_403178, *[str_403179], **kwargs_403180)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 482, 8), AssertionError_call_result_403181, 'raise parameter', BaseException)
    # SSA branch for the except part of a try statement (line 480)
    # SSA branch for the except 'ArpackNoConvergence' branch of a try statement (line 480)
    # Storing handler type
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'ArpackNoConvergence' (line 483)
    ArpackNoConvergence_403182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 11), 'ArpackNoConvergence')
    # Assigning a type to the variable 'err' (line 483)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 4), 'err', ArpackNoConvergence_403182)
    
    # Assigning a Call to a Name (line 484):
    
    # Assigning a Call to a Name (line 484):
    
    # Call to len(...): (line 484)
    # Processing the call arguments (line 484)
    # Getting the type of 'err' (line 484)
    err_403184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 16), 'err', False)
    # Obtaining the member 'eigenvalues' of a type (line 484)
    eigenvalues_403185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 16), err_403184, 'eigenvalues')
    # Processing the call keyword arguments (line 484)
    kwargs_403186 = {}
    # Getting the type of 'len' (line 484)
    len_403183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 12), 'len', False)
    # Calling len(args, kwargs) (line 484)
    len_call_result_403187 = invoke(stypy.reporting.localization.Localization(__file__, 484, 12), len_403183, *[eigenvalues_403185], **kwargs_403186)
    
    # Assigning a type to the variable 'k' (line 484)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 8), 'k', len_call_result_403187)
    
    
    # Getting the type of 'k' (line 485)
    k_403188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 11), 'k')
    int_403189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 16), 'int')
    # Applying the binary operator '<=' (line 485)
    result_le_403190 = python_operator(stypy.reporting.localization.Localization(__file__, 485, 11), '<=', k_403188, int_403189)
    
    # Testing the type of an if condition (line 485)
    if_condition_403191 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 485, 8), result_le_403190)
    # Assigning a type to the variable 'if_condition_403191' (line 485)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'if_condition_403191', if_condition_403191)
    # SSA begins for if statement (line 485)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to AssertionError(...): (line 486)
    # Processing the call arguments (line 486)
    str_403193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 33), 'str', 'Spurious no-eigenvalues-found case')
    # Processing the call keyword arguments (line 486)
    kwargs_403194 = {}
    # Getting the type of 'AssertionError' (line 486)
    AssertionError_403192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 18), 'AssertionError', False)
    # Calling AssertionError(args, kwargs) (line 486)
    AssertionError_call_result_403195 = invoke(stypy.reporting.localization.Localization(__file__, 486, 18), AssertionError_403192, *[str_403193], **kwargs_403194)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 486, 12), AssertionError_call_result_403195, 'raise parameter', BaseException)
    # SSA join for if statement (line 485)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Tuple to a Tuple (line 487):
    
    # Assigning a Attribute to a Name (line 487):
    # Getting the type of 'err' (line 487)
    err_403196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 15), 'err')
    # Obtaining the member 'eigenvalues' of a type (line 487)
    eigenvalues_403197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 15), err_403196, 'eigenvalues')
    # Assigning a type to the variable 'tuple_assignment_401332' (line 487)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 8), 'tuple_assignment_401332', eigenvalues_403197)
    
    # Assigning a Attribute to a Name (line 487):
    # Getting the type of 'err' (line 487)
    err_403198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 32), 'err')
    # Obtaining the member 'eigenvectors' of a type (line 487)
    eigenvectors_403199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 32), err_403198, 'eigenvectors')
    # Assigning a type to the variable 'tuple_assignment_401333' (line 487)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 8), 'tuple_assignment_401333', eigenvectors_403199)
    
    # Assigning a Name to a Name (line 487):
    # Getting the type of 'tuple_assignment_401332' (line 487)
    tuple_assignment_401332_403200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 8), 'tuple_assignment_401332')
    # Assigning a type to the variable 'w' (line 487)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 8), 'w', tuple_assignment_401332_403200)
    
    # Assigning a Name to a Name (line 487):
    # Getting the type of 'tuple_assignment_401333' (line 487)
    tuple_assignment_401333_403201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 8), 'tuple_assignment_401333')
    # Assigning a type to the variable 'v' (line 487)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 11), 'v', tuple_assignment_401333_403201)
    
    
    # Call to zip(...): (line 488)
    # Processing the call arguments (line 488)
    # Getting the type of 'w' (line 488)
    w_403203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 26), 'w', False)
    # Getting the type of 'v' (line 488)
    v_403204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 29), 'v', False)
    # Obtaining the member 'T' of a type (line 488)
    T_403205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 29), v_403204, 'T')
    # Processing the call keyword arguments (line 488)
    kwargs_403206 = {}
    # Getting the type of 'zip' (line 488)
    zip_403202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 22), 'zip', False)
    # Calling zip(args, kwargs) (line 488)
    zip_call_result_403207 = invoke(stypy.reporting.localization.Localization(__file__, 488, 22), zip_403202, *[w_403203, T_403205], **kwargs_403206)
    
    # Testing the type of a for loop iterable (line 488)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 488, 8), zip_call_result_403207)
    # Getting the type of the for loop variable (line 488)
    for_loop_var_403208 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 488, 8), zip_call_result_403207)
    # Assigning a type to the variable 'ww' (line 488)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 8), 'ww', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 8), for_loop_var_403208))
    # Assigning a type to the variable 'vv' (line 488)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 8), 'vv', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 8), for_loop_var_403208))
    # SSA begins for a for statement (line 488)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to assert_allclose(...): (line 489)
    # Processing the call arguments (line 489)
    
    # Call to dot(...): (line 489)
    # Processing the call arguments (line 489)
    # Getting the type of 'm' (line 489)
    m_403211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 32), 'm', False)
    # Getting the type of 'vv' (line 489)
    vv_403212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 35), 'vv', False)
    # Processing the call keyword arguments (line 489)
    kwargs_403213 = {}
    # Getting the type of 'dot' (line 489)
    dot_403210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 28), 'dot', False)
    # Calling dot(args, kwargs) (line 489)
    dot_call_result_403214 = invoke(stypy.reporting.localization.Localization(__file__, 489, 28), dot_403210, *[m_403211, vv_403212], **kwargs_403213)
    
    # Getting the type of 'ww' (line 489)
    ww_403215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 40), 'ww', False)
    # Getting the type of 'vv' (line 489)
    vv_403216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 45), 'vv', False)
    # Applying the binary operator '*' (line 489)
    result_mul_403217 = python_operator(stypy.reporting.localization.Localization(__file__, 489, 40), '*', ww_403215, vv_403216)
    
    # Processing the call keyword arguments (line 489)
    # Getting the type of 'rtol' (line 489)
    rtol_403218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 54), 'rtol', False)
    keyword_403219 = rtol_403218
    # Getting the type of 'atol' (line 489)
    atol_403220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 65), 'atol', False)
    keyword_403221 = atol_403220
    kwargs_403222 = {'rtol': keyword_403219, 'atol': keyword_403221}
    # Getting the type of 'assert_allclose' (line 489)
    assert_allclose_403209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 12), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 489)
    assert_allclose_call_result_403223 = invoke(stypy.reporting.localization.Localization(__file__, 489, 12), assert_allclose_403209, *[dot_call_result_403214, result_mul_403217], **kwargs_403222)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for try-except statement (line 480)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_standard_nonsymmetric_no_convergence(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_standard_nonsymmetric_no_convergence' in the type store
    # Getting the type of 'stypy_return_type' (line 476)
    stypy_return_type_403224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403224)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_standard_nonsymmetric_no_convergence'
    return stypy_return_type_403224

# Assigning a type to the variable 'test_standard_nonsymmetric_no_convergence' (line 476)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 0), 'test_standard_nonsymmetric_no_convergence', test_standard_nonsymmetric_no_convergence)

@norecursion
def test_eigen_bad_shapes(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_eigen_bad_shapes'
    module_type_store = module_type_store.open_function_context('test_eigen_bad_shapes', 492, 0, False)
    
    # Passed parameters checking function
    test_eigen_bad_shapes.stypy_localization = localization
    test_eigen_bad_shapes.stypy_type_of_self = None
    test_eigen_bad_shapes.stypy_type_store = module_type_store
    test_eigen_bad_shapes.stypy_function_name = 'test_eigen_bad_shapes'
    test_eigen_bad_shapes.stypy_param_names_list = []
    test_eigen_bad_shapes.stypy_varargs_param_name = None
    test_eigen_bad_shapes.stypy_kwargs_param_name = None
    test_eigen_bad_shapes.stypy_call_defaults = defaults
    test_eigen_bad_shapes.stypy_call_varargs = varargs
    test_eigen_bad_shapes.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_eigen_bad_shapes', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_eigen_bad_shapes', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_eigen_bad_shapes(...)' code ##################

    
    # Assigning a Call to a Name (line 494):
    
    # Assigning a Call to a Name (line 494):
    
    # Call to csc_matrix(...): (line 494)
    # Processing the call arguments (line 494)
    
    # Call to zeros(...): (line 494)
    # Processing the call arguments (line 494)
    
    # Obtaining an instance of the builtin type 'tuple' (line 494)
    tuple_403228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 29), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 494)
    # Adding element type (line 494)
    int_403229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 29), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 29), tuple_403228, int_403229)
    # Adding element type (line 494)
    int_403230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 32), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 29), tuple_403228, int_403230)
    
    # Processing the call keyword arguments (line 494)
    kwargs_403231 = {}
    # Getting the type of 'np' (line 494)
    np_403226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 19), 'np', False)
    # Obtaining the member 'zeros' of a type (line 494)
    zeros_403227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 19), np_403226, 'zeros')
    # Calling zeros(args, kwargs) (line 494)
    zeros_call_result_403232 = invoke(stypy.reporting.localization.Localization(__file__, 494, 19), zeros_403227, *[tuple_403228], **kwargs_403231)
    
    # Processing the call keyword arguments (line 494)
    kwargs_403233 = {}
    # Getting the type of 'csc_matrix' (line 494)
    csc_matrix_403225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 8), 'csc_matrix', False)
    # Calling csc_matrix(args, kwargs) (line 494)
    csc_matrix_call_result_403234 = invoke(stypy.reporting.localization.Localization(__file__, 494, 8), csc_matrix_403225, *[zeros_call_result_403232], **kwargs_403233)
    
    # Assigning a type to the variable 'A' (line 494)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 4), 'A', csc_matrix_call_result_403234)
    
    # Call to assert_raises(...): (line 495)
    # Processing the call arguments (line 495)
    # Getting the type of 'ValueError' (line 495)
    ValueError_403236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 18), 'ValueError', False)
    # Getting the type of 'eigs' (line 495)
    eigs_403237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 30), 'eigs', False)
    # Getting the type of 'A' (line 495)
    A_403238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 36), 'A', False)
    # Processing the call keyword arguments (line 495)
    kwargs_403239 = {}
    # Getting the type of 'assert_raises' (line 495)
    assert_raises_403235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 495)
    assert_raises_call_result_403240 = invoke(stypy.reporting.localization.Localization(__file__, 495, 4), assert_raises_403235, *[ValueError_403236, eigs_403237, A_403238], **kwargs_403239)
    
    
    # ################# End of 'test_eigen_bad_shapes(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_eigen_bad_shapes' in the type store
    # Getting the type of 'stypy_return_type' (line 492)
    stypy_return_type_403241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403241)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_eigen_bad_shapes'
    return stypy_return_type_403241

# Assigning a type to the variable 'test_eigen_bad_shapes' (line 492)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 492, 0), 'test_eigen_bad_shapes', test_eigen_bad_shapes)

@norecursion
def test_eigen_bad_kwargs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_eigen_bad_kwargs'
    module_type_store = module_type_store.open_function_context('test_eigen_bad_kwargs', 498, 0, False)
    
    # Passed parameters checking function
    test_eigen_bad_kwargs.stypy_localization = localization
    test_eigen_bad_kwargs.stypy_type_of_self = None
    test_eigen_bad_kwargs.stypy_type_store = module_type_store
    test_eigen_bad_kwargs.stypy_function_name = 'test_eigen_bad_kwargs'
    test_eigen_bad_kwargs.stypy_param_names_list = []
    test_eigen_bad_kwargs.stypy_varargs_param_name = None
    test_eigen_bad_kwargs.stypy_kwargs_param_name = None
    test_eigen_bad_kwargs.stypy_call_defaults = defaults
    test_eigen_bad_kwargs.stypy_call_varargs = varargs
    test_eigen_bad_kwargs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_eigen_bad_kwargs', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_eigen_bad_kwargs', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_eigen_bad_kwargs(...)' code ##################

    
    # Assigning a Call to a Name (line 500):
    
    # Assigning a Call to a Name (line 500):
    
    # Call to csc_matrix(...): (line 500)
    # Processing the call arguments (line 500)
    
    # Call to zeros(...): (line 500)
    # Processing the call arguments (line 500)
    
    # Obtaining an instance of the builtin type 'tuple' (line 500)
    tuple_403245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 29), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 500)
    # Adding element type (line 500)
    int_403246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 29), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 500, 29), tuple_403245, int_403246)
    # Adding element type (line 500)
    int_403247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 32), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 500, 29), tuple_403245, int_403247)
    
    # Processing the call keyword arguments (line 500)
    kwargs_403248 = {}
    # Getting the type of 'np' (line 500)
    np_403243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 19), 'np', False)
    # Obtaining the member 'zeros' of a type (line 500)
    zeros_403244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 19), np_403243, 'zeros')
    # Calling zeros(args, kwargs) (line 500)
    zeros_call_result_403249 = invoke(stypy.reporting.localization.Localization(__file__, 500, 19), zeros_403244, *[tuple_403245], **kwargs_403248)
    
    # Processing the call keyword arguments (line 500)
    kwargs_403250 = {}
    # Getting the type of 'csc_matrix' (line 500)
    csc_matrix_403242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 8), 'csc_matrix', False)
    # Calling csc_matrix(args, kwargs) (line 500)
    csc_matrix_call_result_403251 = invoke(stypy.reporting.localization.Localization(__file__, 500, 8), csc_matrix_403242, *[zeros_call_result_403249], **kwargs_403250)
    
    # Assigning a type to the variable 'A' (line 500)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 4), 'A', csc_matrix_call_result_403251)
    
    # Call to assert_raises(...): (line 501)
    # Processing the call arguments (line 501)
    # Getting the type of 'ValueError' (line 501)
    ValueError_403253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 18), 'ValueError', False)
    # Getting the type of 'eigs' (line 501)
    eigs_403254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 30), 'eigs', False)
    # Getting the type of 'A' (line 501)
    A_403255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 36), 'A', False)
    # Processing the call keyword arguments (line 501)
    str_403256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 45), 'str', 'XX')
    keyword_403257 = str_403256
    kwargs_403258 = {'which': keyword_403257}
    # Getting the type of 'assert_raises' (line 501)
    assert_raises_403252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 501)
    assert_raises_call_result_403259 = invoke(stypy.reporting.localization.Localization(__file__, 501, 4), assert_raises_403252, *[ValueError_403253, eigs_403254, A_403255], **kwargs_403258)
    
    
    # ################# End of 'test_eigen_bad_kwargs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_eigen_bad_kwargs' in the type store
    # Getting the type of 'stypy_return_type' (line 498)
    stypy_return_type_403260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403260)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_eigen_bad_kwargs'
    return stypy_return_type_403260

# Assigning a type to the variable 'test_eigen_bad_kwargs' (line 498)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 0), 'test_eigen_bad_kwargs', test_eigen_bad_kwargs)

@norecursion
def test_ticket_1459_arpack_crash(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_ticket_1459_arpack_crash'
    module_type_store = module_type_store.open_function_context('test_ticket_1459_arpack_crash', 504, 0, False)
    
    # Passed parameters checking function
    test_ticket_1459_arpack_crash.stypy_localization = localization
    test_ticket_1459_arpack_crash.stypy_type_of_self = None
    test_ticket_1459_arpack_crash.stypy_type_store = module_type_store
    test_ticket_1459_arpack_crash.stypy_function_name = 'test_ticket_1459_arpack_crash'
    test_ticket_1459_arpack_crash.stypy_param_names_list = []
    test_ticket_1459_arpack_crash.stypy_varargs_param_name = None
    test_ticket_1459_arpack_crash.stypy_kwargs_param_name = None
    test_ticket_1459_arpack_crash.stypy_call_defaults = defaults
    test_ticket_1459_arpack_crash.stypy_call_varargs = varargs
    test_ticket_1459_arpack_crash.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_ticket_1459_arpack_crash', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_ticket_1459_arpack_crash', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_ticket_1459_arpack_crash(...)' code ##################

    
    
    # Obtaining an instance of the builtin type 'list' (line 505)
    list_403261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 505)
    # Adding element type (line 505)
    # Getting the type of 'np' (line 505)
    np_403262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 18), 'np')
    # Obtaining the member 'float32' of a type (line 505)
    float32_403263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 18), np_403262, 'float32')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 17), list_403261, float32_403263)
    # Adding element type (line 505)
    # Getting the type of 'np' (line 505)
    np_403264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 30), 'np')
    # Obtaining the member 'float64' of a type (line 505)
    float64_403265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 30), np_403264, 'float64')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 17), list_403261, float64_403265)
    
    # Testing the type of a for loop iterable (line 505)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 505, 4), list_403261)
    # Getting the type of the for loop variable (line 505)
    for_loop_var_403266 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 505, 4), list_403261)
    # Assigning a type to the variable 'dtype' (line 505)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 505, 4), 'dtype', for_loop_var_403266)
    # SSA begins for a for statement (line 505)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Num to a Name (line 509):
    
    # Assigning a Num to a Name (line 509):
    int_403267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 12), 'int')
    # Assigning a type to the variable 'N' (line 509)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 509, 8), 'N', int_403267)
    
    # Assigning a Num to a Name (line 510):
    
    # Assigning a Num to a Name (line 510):
    int_403268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 510, 12), 'int')
    # Assigning a type to the variable 'k' (line 510)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 8), 'k', int_403268)
    
    # Call to seed(...): (line 512)
    # Processing the call arguments (line 512)
    int_403272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 23), 'int')
    # Processing the call keyword arguments (line 512)
    kwargs_403273 = {}
    # Getting the type of 'np' (line 512)
    np_403269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 8), 'np', False)
    # Obtaining the member 'random' of a type (line 512)
    random_403270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 512, 8), np_403269, 'random')
    # Obtaining the member 'seed' of a type (line 512)
    seed_403271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 512, 8), random_403270, 'seed')
    # Calling seed(args, kwargs) (line 512)
    seed_call_result_403274 = invoke(stypy.reporting.localization.Localization(__file__, 512, 8), seed_403271, *[int_403272], **kwargs_403273)
    
    
    # Assigning a Call to a Name (line 513):
    
    # Assigning a Call to a Name (line 513):
    
    # Call to astype(...): (line 513)
    # Processing the call arguments (line 513)
    # Getting the type of 'dtype' (line 513)
    dtype_403284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 44), 'dtype', False)
    # Processing the call keyword arguments (line 513)
    kwargs_403285 = {}
    
    # Call to random(...): (line 513)
    # Processing the call arguments (line 513)
    
    # Obtaining an instance of the builtin type 'tuple' (line 513)
    tuple_403278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 30), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 513)
    # Adding element type (line 513)
    # Getting the type of 'N' (line 513)
    N_403279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 30), 'N', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 513, 30), tuple_403278, N_403279)
    # Adding element type (line 513)
    # Getting the type of 'N' (line 513)
    N_403280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 33), 'N', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 513, 30), tuple_403278, N_403280)
    
    # Processing the call keyword arguments (line 513)
    kwargs_403281 = {}
    # Getting the type of 'np' (line 513)
    np_403275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 12), 'np', False)
    # Obtaining the member 'random' of a type (line 513)
    random_403276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 12), np_403275, 'random')
    # Obtaining the member 'random' of a type (line 513)
    random_403277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 12), random_403276, 'random')
    # Calling random(args, kwargs) (line 513)
    random_call_result_403282 = invoke(stypy.reporting.localization.Localization(__file__, 513, 12), random_403277, *[tuple_403278], **kwargs_403281)
    
    # Obtaining the member 'astype' of a type (line 513)
    astype_403283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 12), random_call_result_403282, 'astype')
    # Calling astype(args, kwargs) (line 513)
    astype_call_result_403286 = invoke(stypy.reporting.localization.Localization(__file__, 513, 12), astype_403283, *[dtype_403284], **kwargs_403285)
    
    # Assigning a type to the variable 'A' (line 513)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'A', astype_call_result_403286)
    
    # Assigning a Call to a Name (line 514):
    
    # Assigning a Call to a Name (line 514):
    
    # Call to array(...): (line 514)
    # Processing the call arguments (line 514)
    
    # Obtaining an instance of the builtin type 'list' (line 514)
    list_403289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 22), 'list')
    # Adding type elements to the builtin type 'list' instance (line 514)
    # Adding element type (line 514)
    float_403290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 23), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 22), list_403289, float_403290)
    # Adding element type (line 514)
    float_403291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 48), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 22), list_403289, float_403291)
    # Adding element type (line 514)
    float_403292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 23), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 22), list_403289, float_403292)
    # Adding element type (line 514)
    float_403293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 48), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 22), list_403289, float_403293)
    # Adding element type (line 514)
    float_403294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, 23), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 22), list_403289, float_403294)
    # Adding element type (line 514)
    float_403295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, 48), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 22), list_403289, float_403295)
    
    # Processing the call keyword arguments (line 514)
    # Getting the type of 'dtype' (line 517)
    dtype_403296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 28), 'dtype', False)
    keyword_403297 = dtype_403296
    kwargs_403298 = {'dtype': keyword_403297}
    # Getting the type of 'np' (line 514)
    np_403287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 13), 'np', False)
    # Obtaining the member 'array' of a type (line 514)
    array_403288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 13), np_403287, 'array')
    # Calling array(args, kwargs) (line 514)
    array_call_result_403299 = invoke(stypy.reporting.localization.Localization(__file__, 514, 13), array_403288, *[list_403289], **kwargs_403298)
    
    # Assigning a type to the variable 'v0' (line 514)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'v0', array_call_result_403299)
    
    # Assigning a Call to a Tuple (line 520):
    
    # Assigning a Subscript to a Name (line 520):
    
    # Obtaining the type of the subscript
    int_403300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 520, 8), 'int')
    
    # Call to eigs(...): (line 520)
    # Processing the call arguments (line 520)
    # Getting the type of 'A' (line 520)
    A_403302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 28), 'A', False)
    # Getting the type of 'k' (line 520)
    k_403303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 31), 'k', False)
    # Processing the call keyword arguments (line 520)
    # Getting the type of 'v0' (line 520)
    v0_403304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 37), 'v0', False)
    keyword_403305 = v0_403304
    kwargs_403306 = {'v0': keyword_403305}
    # Getting the type of 'eigs' (line 520)
    eigs_403301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 23), 'eigs', False)
    # Calling eigs(args, kwargs) (line 520)
    eigs_call_result_403307 = invoke(stypy.reporting.localization.Localization(__file__, 520, 23), eigs_403301, *[A_403302, k_403303], **kwargs_403306)
    
    # Obtaining the member '__getitem__' of a type (line 520)
    getitem___403308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 520, 8), eigs_call_result_403307, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 520)
    subscript_call_result_403309 = invoke(stypy.reporting.localization.Localization(__file__, 520, 8), getitem___403308, int_403300)
    
    # Assigning a type to the variable 'tuple_var_assignment_401334' (line 520)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 8), 'tuple_var_assignment_401334', subscript_call_result_403309)
    
    # Assigning a Subscript to a Name (line 520):
    
    # Obtaining the type of the subscript
    int_403310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 520, 8), 'int')
    
    # Call to eigs(...): (line 520)
    # Processing the call arguments (line 520)
    # Getting the type of 'A' (line 520)
    A_403312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 28), 'A', False)
    # Getting the type of 'k' (line 520)
    k_403313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 31), 'k', False)
    # Processing the call keyword arguments (line 520)
    # Getting the type of 'v0' (line 520)
    v0_403314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 37), 'v0', False)
    keyword_403315 = v0_403314
    kwargs_403316 = {'v0': keyword_403315}
    # Getting the type of 'eigs' (line 520)
    eigs_403311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 23), 'eigs', False)
    # Calling eigs(args, kwargs) (line 520)
    eigs_call_result_403317 = invoke(stypy.reporting.localization.Localization(__file__, 520, 23), eigs_403311, *[A_403312, k_403313], **kwargs_403316)
    
    # Obtaining the member '__getitem__' of a type (line 520)
    getitem___403318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 520, 8), eigs_call_result_403317, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 520)
    subscript_call_result_403319 = invoke(stypy.reporting.localization.Localization(__file__, 520, 8), getitem___403318, int_403310)
    
    # Assigning a type to the variable 'tuple_var_assignment_401335' (line 520)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 8), 'tuple_var_assignment_401335', subscript_call_result_403319)
    
    # Assigning a Name to a Name (line 520):
    # Getting the type of 'tuple_var_assignment_401334' (line 520)
    tuple_var_assignment_401334_403320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 8), 'tuple_var_assignment_401334')
    # Assigning a type to the variable 'evals' (line 520)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 8), 'evals', tuple_var_assignment_401334_403320)
    
    # Assigning a Name to a Name (line 520):
    # Getting the type of 'tuple_var_assignment_401335' (line 520)
    tuple_var_assignment_401335_403321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 8), 'tuple_var_assignment_401335')
    # Assigning a type to the variable 'evecs' (line 520)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 15), 'evecs', tuple_var_assignment_401335_403321)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_ticket_1459_arpack_crash(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_ticket_1459_arpack_crash' in the type store
    # Getting the type of 'stypy_return_type' (line 504)
    stypy_return_type_403322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403322)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_ticket_1459_arpack_crash'
    return stypy_return_type_403322

# Assigning a type to the variable 'test_ticket_1459_arpack_crash' (line 504)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 504, 0), 'test_ticket_1459_arpack_crash', test_ticket_1459_arpack_crash)

@norecursion
def sorted_svd(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_403323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 526, 27), 'str', 'LM')
    defaults = [str_403323]
    # Create a new context for function 'sorted_svd'
    module_type_store = module_type_store.open_function_context('sorted_svd', 526, 0, False)
    
    # Passed parameters checking function
    sorted_svd.stypy_localization = localization
    sorted_svd.stypy_type_of_self = None
    sorted_svd.stypy_type_store = module_type_store
    sorted_svd.stypy_function_name = 'sorted_svd'
    sorted_svd.stypy_param_names_list = ['m', 'k', 'which']
    sorted_svd.stypy_varargs_param_name = None
    sorted_svd.stypy_kwargs_param_name = None
    sorted_svd.stypy_call_defaults = defaults
    sorted_svd.stypy_call_varargs = varargs
    sorted_svd.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'sorted_svd', ['m', 'k', 'which'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'sorted_svd', localization, ['m', 'k', 'which'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'sorted_svd(...)' code ##################

    
    
    # Call to isspmatrix(...): (line 529)
    # Processing the call arguments (line 529)
    # Getting the type of 'm' (line 529)
    m_403325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 18), 'm', False)
    # Processing the call keyword arguments (line 529)
    kwargs_403326 = {}
    # Getting the type of 'isspmatrix' (line 529)
    isspmatrix_403324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 7), 'isspmatrix', False)
    # Calling isspmatrix(args, kwargs) (line 529)
    isspmatrix_call_result_403327 = invoke(stypy.reporting.localization.Localization(__file__, 529, 7), isspmatrix_403324, *[m_403325], **kwargs_403326)
    
    # Testing the type of an if condition (line 529)
    if_condition_403328 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 529, 4), isspmatrix_call_result_403327)
    # Assigning a type to the variable 'if_condition_403328' (line 529)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 4), 'if_condition_403328', if_condition_403328)
    # SSA begins for if statement (line 529)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 530):
    
    # Assigning a Call to a Name (line 530):
    
    # Call to todense(...): (line 530)
    # Processing the call keyword arguments (line 530)
    kwargs_403331 = {}
    # Getting the type of 'm' (line 530)
    m_403329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 12), 'm', False)
    # Obtaining the member 'todense' of a type (line 530)
    todense_403330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 12), m_403329, 'todense')
    # Calling todense(args, kwargs) (line 530)
    todense_call_result_403332 = invoke(stypy.reporting.localization.Localization(__file__, 530, 12), todense_403330, *[], **kwargs_403331)
    
    # Assigning a type to the variable 'm' (line 530)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 530, 8), 'm', todense_call_result_403332)
    # SSA join for if statement (line 529)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Tuple (line 531):
    
    # Assigning a Subscript to a Name (line 531):
    
    # Obtaining the type of the subscript
    int_403333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 4), 'int')
    
    # Call to svd(...): (line 531)
    # Processing the call arguments (line 531)
    # Getting the type of 'm' (line 531)
    m_403335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 19), 'm', False)
    # Processing the call keyword arguments (line 531)
    kwargs_403336 = {}
    # Getting the type of 'svd' (line 531)
    svd_403334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 15), 'svd', False)
    # Calling svd(args, kwargs) (line 531)
    svd_call_result_403337 = invoke(stypy.reporting.localization.Localization(__file__, 531, 15), svd_403334, *[m_403335], **kwargs_403336)
    
    # Obtaining the member '__getitem__' of a type (line 531)
    getitem___403338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 4), svd_call_result_403337, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 531)
    subscript_call_result_403339 = invoke(stypy.reporting.localization.Localization(__file__, 531, 4), getitem___403338, int_403333)
    
    # Assigning a type to the variable 'tuple_var_assignment_401336' (line 531)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 4), 'tuple_var_assignment_401336', subscript_call_result_403339)
    
    # Assigning a Subscript to a Name (line 531):
    
    # Obtaining the type of the subscript
    int_403340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 4), 'int')
    
    # Call to svd(...): (line 531)
    # Processing the call arguments (line 531)
    # Getting the type of 'm' (line 531)
    m_403342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 19), 'm', False)
    # Processing the call keyword arguments (line 531)
    kwargs_403343 = {}
    # Getting the type of 'svd' (line 531)
    svd_403341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 15), 'svd', False)
    # Calling svd(args, kwargs) (line 531)
    svd_call_result_403344 = invoke(stypy.reporting.localization.Localization(__file__, 531, 15), svd_403341, *[m_403342], **kwargs_403343)
    
    # Obtaining the member '__getitem__' of a type (line 531)
    getitem___403345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 4), svd_call_result_403344, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 531)
    subscript_call_result_403346 = invoke(stypy.reporting.localization.Localization(__file__, 531, 4), getitem___403345, int_403340)
    
    # Assigning a type to the variable 'tuple_var_assignment_401337' (line 531)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 4), 'tuple_var_assignment_401337', subscript_call_result_403346)
    
    # Assigning a Subscript to a Name (line 531):
    
    # Obtaining the type of the subscript
    int_403347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 4), 'int')
    
    # Call to svd(...): (line 531)
    # Processing the call arguments (line 531)
    # Getting the type of 'm' (line 531)
    m_403349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 19), 'm', False)
    # Processing the call keyword arguments (line 531)
    kwargs_403350 = {}
    # Getting the type of 'svd' (line 531)
    svd_403348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 15), 'svd', False)
    # Calling svd(args, kwargs) (line 531)
    svd_call_result_403351 = invoke(stypy.reporting.localization.Localization(__file__, 531, 15), svd_403348, *[m_403349], **kwargs_403350)
    
    # Obtaining the member '__getitem__' of a type (line 531)
    getitem___403352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 4), svd_call_result_403351, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 531)
    subscript_call_result_403353 = invoke(stypy.reporting.localization.Localization(__file__, 531, 4), getitem___403352, int_403347)
    
    # Assigning a type to the variable 'tuple_var_assignment_401338' (line 531)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 4), 'tuple_var_assignment_401338', subscript_call_result_403353)
    
    # Assigning a Name to a Name (line 531):
    # Getting the type of 'tuple_var_assignment_401336' (line 531)
    tuple_var_assignment_401336_403354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 4), 'tuple_var_assignment_401336')
    # Assigning a type to the variable 'u' (line 531)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 4), 'u', tuple_var_assignment_401336_403354)
    
    # Assigning a Name to a Name (line 531):
    # Getting the type of 'tuple_var_assignment_401337' (line 531)
    tuple_var_assignment_401337_403355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 4), 'tuple_var_assignment_401337')
    # Assigning a type to the variable 's' (line 531)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 7), 's', tuple_var_assignment_401337_403355)
    
    # Assigning a Name to a Name (line 531):
    # Getting the type of 'tuple_var_assignment_401338' (line 531)
    tuple_var_assignment_401338_403356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 4), 'tuple_var_assignment_401338')
    # Assigning a type to the variable 'vh' (line 531)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 10), 'vh', tuple_var_assignment_401338_403356)
    
    
    # Getting the type of 'which' (line 532)
    which_403357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 7), 'which')
    str_403358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 16), 'str', 'LM')
    # Applying the binary operator '==' (line 532)
    result_eq_403359 = python_operator(stypy.reporting.localization.Localization(__file__, 532, 7), '==', which_403357, str_403358)
    
    # Testing the type of an if condition (line 532)
    if_condition_403360 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 532, 4), result_eq_403359)
    # Assigning a type to the variable 'if_condition_403360' (line 532)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 4), 'if_condition_403360', if_condition_403360)
    # SSA begins for if statement (line 532)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 533):
    
    # Assigning a Subscript to a Name (line 533):
    
    # Obtaining the type of the subscript
    
    # Getting the type of 'k' (line 533)
    k_403361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 28), 'k')
    # Applying the 'usub' unary operator (line 533)
    result___neg___403362 = python_operator(stypy.reporting.localization.Localization(__file__, 533, 27), 'usub', k_403361)
    
    slice_403363 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 533, 13), result___neg___403362, None, None)
    
    # Call to argsort(...): (line 533)
    # Processing the call arguments (line 533)
    # Getting the type of 's' (line 533)
    s_403366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 24), 's', False)
    # Processing the call keyword arguments (line 533)
    kwargs_403367 = {}
    # Getting the type of 'np' (line 533)
    np_403364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 13), 'np', False)
    # Obtaining the member 'argsort' of a type (line 533)
    argsort_403365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 13), np_403364, 'argsort')
    # Calling argsort(args, kwargs) (line 533)
    argsort_call_result_403368 = invoke(stypy.reporting.localization.Localization(__file__, 533, 13), argsort_403365, *[s_403366], **kwargs_403367)
    
    # Obtaining the member '__getitem__' of a type (line 533)
    getitem___403369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 13), argsort_call_result_403368, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 533)
    subscript_call_result_403370 = invoke(stypy.reporting.localization.Localization(__file__, 533, 13), getitem___403369, slice_403363)
    
    # Assigning a type to the variable 'ii' (line 533)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 533, 8), 'ii', subscript_call_result_403370)
    # SSA branch for the else part of an if statement (line 532)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'which' (line 534)
    which_403371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 9), 'which')
    str_403372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 18), 'str', 'SM')
    # Applying the binary operator '==' (line 534)
    result_eq_403373 = python_operator(stypy.reporting.localization.Localization(__file__, 534, 9), '==', which_403371, str_403372)
    
    # Testing the type of an if condition (line 534)
    if_condition_403374 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 534, 9), result_eq_403373)
    # Assigning a type to the variable 'if_condition_403374' (line 534)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 9), 'if_condition_403374', if_condition_403374)
    # SSA begins for if statement (line 534)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 535):
    
    # Assigning a Subscript to a Name (line 535):
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 535)
    k_403375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 28), 'k')
    slice_403376 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 535, 13), None, k_403375, None)
    
    # Call to argsort(...): (line 535)
    # Processing the call arguments (line 535)
    # Getting the type of 's' (line 535)
    s_403379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 24), 's', False)
    # Processing the call keyword arguments (line 535)
    kwargs_403380 = {}
    # Getting the type of 'np' (line 535)
    np_403377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 13), 'np', False)
    # Obtaining the member 'argsort' of a type (line 535)
    argsort_403378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 13), np_403377, 'argsort')
    # Calling argsort(args, kwargs) (line 535)
    argsort_call_result_403381 = invoke(stypy.reporting.localization.Localization(__file__, 535, 13), argsort_403378, *[s_403379], **kwargs_403380)
    
    # Obtaining the member '__getitem__' of a type (line 535)
    getitem___403382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 13), argsort_call_result_403381, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 535)
    subscript_call_result_403383 = invoke(stypy.reporting.localization.Localization(__file__, 535, 13), getitem___403382, slice_403376)
    
    # Assigning a type to the variable 'ii' (line 535)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 8), 'ii', subscript_call_result_403383)
    # SSA branch for the else part of an if statement (line 534)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 537)
    # Processing the call arguments (line 537)
    str_403385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, 25), 'str', 'unknown which=%r')
    
    # Obtaining an instance of the builtin type 'tuple' (line 537)
    tuple_403386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, 47), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 537)
    # Adding element type (line 537)
    # Getting the type of 'which' (line 537)
    which_403387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 47), 'which', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 537, 47), tuple_403386, which_403387)
    
    # Applying the binary operator '%' (line 537)
    result_mod_403388 = python_operator(stypy.reporting.localization.Localization(__file__, 537, 25), '%', str_403385, tuple_403386)
    
    # Processing the call keyword arguments (line 537)
    kwargs_403389 = {}
    # Getting the type of 'ValueError' (line 537)
    ValueError_403384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 537)
    ValueError_call_result_403390 = invoke(stypy.reporting.localization.Localization(__file__, 537, 14), ValueError_403384, *[result_mod_403388], **kwargs_403389)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 537, 8), ValueError_call_result_403390, 'raise parameter', BaseException)
    # SSA join for if statement (line 534)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 532)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 539)
    tuple_403391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 539)
    # Adding element type (line 539)
    
    # Obtaining the type of the subscript
    slice_403392 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 539, 11), None, None, None)
    # Getting the type of 'ii' (line 539)
    ii_403393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 16), 'ii')
    # Getting the type of 'u' (line 539)
    u_403394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 11), 'u')
    # Obtaining the member '__getitem__' of a type (line 539)
    getitem___403395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 11), u_403394, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 539)
    subscript_call_result_403396 = invoke(stypy.reporting.localization.Localization(__file__, 539, 11), getitem___403395, (slice_403392, ii_403393))
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 11), tuple_403391, subscript_call_result_403396)
    # Adding element type (line 539)
    
    # Obtaining the type of the subscript
    # Getting the type of 'ii' (line 539)
    ii_403397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 23), 'ii')
    # Getting the type of 's' (line 539)
    s_403398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 21), 's')
    # Obtaining the member '__getitem__' of a type (line 539)
    getitem___403399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 21), s_403398, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 539)
    subscript_call_result_403400 = invoke(stypy.reporting.localization.Localization(__file__, 539, 21), getitem___403399, ii_403397)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 11), tuple_403391, subscript_call_result_403400)
    # Adding element type (line 539)
    
    # Obtaining the type of the subscript
    # Getting the type of 'ii' (line 539)
    ii_403401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 31), 'ii')
    # Getting the type of 'vh' (line 539)
    vh_403402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 28), 'vh')
    # Obtaining the member '__getitem__' of a type (line 539)
    getitem___403403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 28), vh_403402, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 539)
    subscript_call_result_403404 = invoke(stypy.reporting.localization.Localization(__file__, 539, 28), getitem___403403, ii_403401)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 11), tuple_403391, subscript_call_result_403404)
    
    # Assigning a type to the variable 'stypy_return_type' (line 539)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 4), 'stypy_return_type', tuple_403391)
    
    # ################# End of 'sorted_svd(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'sorted_svd' in the type store
    # Getting the type of 'stypy_return_type' (line 526)
    stypy_return_type_403405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403405)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'sorted_svd'
    return stypy_return_type_403405

# Assigning a type to the variable 'sorted_svd' (line 526)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 526, 0), 'sorted_svd', sorted_svd)

@norecursion
def svd_estimate(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'svd_estimate'
    module_type_store = module_type_store.open_function_context('svd_estimate', 542, 0, False)
    
    # Passed parameters checking function
    svd_estimate.stypy_localization = localization
    svd_estimate.stypy_type_of_self = None
    svd_estimate.stypy_type_store = module_type_store
    svd_estimate.stypy_function_name = 'svd_estimate'
    svd_estimate.stypy_param_names_list = ['u', 's', 'vh']
    svd_estimate.stypy_varargs_param_name = None
    svd_estimate.stypy_kwargs_param_name = None
    svd_estimate.stypy_call_defaults = defaults
    svd_estimate.stypy_call_varargs = varargs
    svd_estimate.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'svd_estimate', ['u', 's', 'vh'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'svd_estimate', localization, ['u', 's', 'vh'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'svd_estimate(...)' code ##################

    
    # Call to dot(...): (line 543)
    # Processing the call arguments (line 543)
    # Getting the type of 'u' (line 543)
    u_403408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 18), 'u', False)
    
    # Call to dot(...): (line 543)
    # Processing the call arguments (line 543)
    
    # Call to diag(...): (line 543)
    # Processing the call arguments (line 543)
    # Getting the type of 's' (line 543)
    s_403413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 36), 's', False)
    # Processing the call keyword arguments (line 543)
    kwargs_403414 = {}
    # Getting the type of 'np' (line 543)
    np_403411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 28), 'np', False)
    # Obtaining the member 'diag' of a type (line 543)
    diag_403412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 28), np_403411, 'diag')
    # Calling diag(args, kwargs) (line 543)
    diag_call_result_403415 = invoke(stypy.reporting.localization.Localization(__file__, 543, 28), diag_403412, *[s_403413], **kwargs_403414)
    
    # Getting the type of 'vh' (line 543)
    vh_403416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 40), 'vh', False)
    # Processing the call keyword arguments (line 543)
    kwargs_403417 = {}
    # Getting the type of 'np' (line 543)
    np_403409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 21), 'np', False)
    # Obtaining the member 'dot' of a type (line 543)
    dot_403410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 21), np_403409, 'dot')
    # Calling dot(args, kwargs) (line 543)
    dot_call_result_403418 = invoke(stypy.reporting.localization.Localization(__file__, 543, 21), dot_403410, *[diag_call_result_403415, vh_403416], **kwargs_403417)
    
    # Processing the call keyword arguments (line 543)
    kwargs_403419 = {}
    # Getting the type of 'np' (line 543)
    np_403406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 11), 'np', False)
    # Obtaining the member 'dot' of a type (line 543)
    dot_403407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 11), np_403406, 'dot')
    # Calling dot(args, kwargs) (line 543)
    dot_call_result_403420 = invoke(stypy.reporting.localization.Localization(__file__, 543, 11), dot_403407, *[u_403408, dot_call_result_403418], **kwargs_403419)
    
    # Assigning a type to the variable 'stypy_return_type' (line 543)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 543, 4), 'stypy_return_type', dot_call_result_403420)
    
    # ################# End of 'svd_estimate(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'svd_estimate' in the type store
    # Getting the type of 'stypy_return_type' (line 542)
    stypy_return_type_403421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403421)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'svd_estimate'
    return stypy_return_type_403421

# Assigning a type to the variable 'svd_estimate' (line 542)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 0), 'svd_estimate', svd_estimate)

@norecursion
def svd_test_input_check(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'svd_test_input_check'
    module_type_store = module_type_store.open_function_context('svd_test_input_check', 546, 0, False)
    
    # Passed parameters checking function
    svd_test_input_check.stypy_localization = localization
    svd_test_input_check.stypy_type_of_self = None
    svd_test_input_check.stypy_type_store = module_type_store
    svd_test_input_check.stypy_function_name = 'svd_test_input_check'
    svd_test_input_check.stypy_param_names_list = []
    svd_test_input_check.stypy_varargs_param_name = None
    svd_test_input_check.stypy_kwargs_param_name = None
    svd_test_input_check.stypy_call_defaults = defaults
    svd_test_input_check.stypy_call_varargs = varargs
    svd_test_input_check.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'svd_test_input_check', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'svd_test_input_check', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'svd_test_input_check(...)' code ##################

    
    # Assigning a Call to a Name (line 547):
    
    # Assigning a Call to a Name (line 547):
    
    # Call to array(...): (line 547)
    # Processing the call arguments (line 547)
    
    # Obtaining an instance of the builtin type 'list' (line 547)
    list_403424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 547)
    # Adding element type (line 547)
    
    # Obtaining an instance of the builtin type 'list' (line 547)
    list_403425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 547)
    # Adding element type (line 547)
    int_403426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 18), list_403425, int_403426)
    # Adding element type (line 547)
    int_403427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 18), list_403425, int_403427)
    # Adding element type (line 547)
    int_403428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 18), list_403425, int_403428)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 17), list_403424, list_403425)
    # Adding element type (line 547)
    
    # Obtaining an instance of the builtin type 'list' (line 548)
    list_403429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 548)
    # Adding element type (line 548)
    int_403430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 18), list_403429, int_403430)
    # Adding element type (line 548)
    int_403431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 18), list_403429, int_403431)
    # Adding element type (line 548)
    int_403432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 18), list_403429, int_403432)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 17), list_403424, list_403429)
    # Adding element type (line 547)
    
    # Obtaining an instance of the builtin type 'list' (line 549)
    list_403433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 549)
    # Adding element type (line 549)
    int_403434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 18), list_403433, int_403434)
    # Adding element type (line 549)
    int_403435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 18), list_403433, int_403435)
    # Adding element type (line 549)
    int_403436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 18), list_403433, int_403436)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 17), list_403424, list_403433)
    # Adding element type (line 547)
    
    # Obtaining an instance of the builtin type 'list' (line 550)
    list_403437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 550)
    # Adding element type (line 550)
    int_403438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 550, 18), list_403437, int_403438)
    # Adding element type (line 550)
    int_403439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 550, 18), list_403437, int_403439)
    # Adding element type (line 550)
    int_403440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 550, 18), list_403437, int_403440)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 17), list_403424, list_403437)
    
    # Getting the type of 'float' (line 550)
    float_403441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 30), 'float', False)
    # Processing the call keyword arguments (line 547)
    kwargs_403442 = {}
    # Getting the type of 'np' (line 547)
    np_403422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'np', False)
    # Obtaining the member 'array' of a type (line 547)
    array_403423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 547, 8), np_403422, 'array')
    # Calling array(args, kwargs) (line 547)
    array_call_result_403443 = invoke(stypy.reporting.localization.Localization(__file__, 547, 8), array_403423, *[list_403424, float_403441], **kwargs_403442)
    
    # Assigning a type to the variable 'x' (line 547)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 4), 'x', array_call_result_403443)
    
    # Call to assert_raises(...): (line 552)
    # Processing the call arguments (line 552)
    # Getting the type of 'ValueError' (line 552)
    ValueError_403445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 18), 'ValueError', False)
    # Getting the type of 'svds' (line 552)
    svds_403446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 30), 'svds', False)
    # Getting the type of 'x' (line 552)
    x_403447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 36), 'x', False)
    # Processing the call keyword arguments (line 552)
    int_403448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 41), 'int')
    keyword_403449 = int_403448
    kwargs_403450 = {'k': keyword_403449}
    # Getting the type of 'assert_raises' (line 552)
    assert_raises_403444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 552)
    assert_raises_call_result_403451 = invoke(stypy.reporting.localization.Localization(__file__, 552, 4), assert_raises_403444, *[ValueError_403445, svds_403446, x_403447], **kwargs_403450)
    
    
    # Call to assert_raises(...): (line 553)
    # Processing the call arguments (line 553)
    # Getting the type of 'ValueError' (line 553)
    ValueError_403453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 18), 'ValueError', False)
    # Getting the type of 'svds' (line 553)
    svds_403454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 30), 'svds', False)
    # Getting the type of 'x' (line 553)
    x_403455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 36), 'x', False)
    # Processing the call keyword arguments (line 553)
    int_403456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 41), 'int')
    keyword_403457 = int_403456
    kwargs_403458 = {'k': keyword_403457}
    # Getting the type of 'assert_raises' (line 553)
    assert_raises_403452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 553)
    assert_raises_call_result_403459 = invoke(stypy.reporting.localization.Localization(__file__, 553, 4), assert_raises_403452, *[ValueError_403453, svds_403454, x_403455], **kwargs_403458)
    
    
    # Call to assert_raises(...): (line 554)
    # Processing the call arguments (line 554)
    # Getting the type of 'ValueError' (line 554)
    ValueError_403461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 18), 'ValueError', False)
    # Getting the type of 'svds' (line 554)
    svds_403462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 30), 'svds', False)
    # Getting the type of 'x' (line 554)
    x_403463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 36), 'x', False)
    # Processing the call keyword arguments (line 554)
    int_403464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 41), 'int')
    keyword_403465 = int_403464
    kwargs_403466 = {'k': keyword_403465}
    # Getting the type of 'assert_raises' (line 554)
    assert_raises_403460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 554)
    assert_raises_call_result_403467 = invoke(stypy.reporting.localization.Localization(__file__, 554, 4), assert_raises_403460, *[ValueError_403461, svds_403462, x_403463], **kwargs_403466)
    
    
    # Call to assert_raises(...): (line 555)
    # Processing the call arguments (line 555)
    # Getting the type of 'ValueError' (line 555)
    ValueError_403469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 18), 'ValueError', False)
    # Getting the type of 'svds' (line 555)
    svds_403470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 30), 'svds', False)
    # Getting the type of 'x' (line 555)
    x_403471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 36), 'x', False)
    # Processing the call keyword arguments (line 555)
    
    # Obtaining the type of the subscript
    int_403472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 49), 'int')
    # Getting the type of 'x' (line 555)
    x_403473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 41), 'x', False)
    # Obtaining the member 'shape' of a type (line 555)
    shape_403474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 41), x_403473, 'shape')
    # Obtaining the member '__getitem__' of a type (line 555)
    getitem___403475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 41), shape_403474, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 555)
    subscript_call_result_403476 = invoke(stypy.reporting.localization.Localization(__file__, 555, 41), getitem___403475, int_403472)
    
    keyword_403477 = subscript_call_result_403476
    kwargs_403478 = {'k': keyword_403477}
    # Getting the type of 'assert_raises' (line 555)
    assert_raises_403468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 555)
    assert_raises_call_result_403479 = invoke(stypy.reporting.localization.Localization(__file__, 555, 4), assert_raises_403468, *[ValueError_403469, svds_403470, x_403471], **kwargs_403478)
    
    
    # Call to assert_raises(...): (line 556)
    # Processing the call arguments (line 556)
    # Getting the type of 'ValueError' (line 556)
    ValueError_403481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 18), 'ValueError', False)
    # Getting the type of 'svds' (line 556)
    svds_403482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 30), 'svds', False)
    # Getting the type of 'x' (line 556)
    x_403483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 36), 'x', False)
    # Processing the call keyword arguments (line 556)
    
    # Obtaining the type of the subscript
    int_403484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 49), 'int')
    # Getting the type of 'x' (line 556)
    x_403485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 41), 'x', False)
    # Obtaining the member 'shape' of a type (line 556)
    shape_403486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 41), x_403485, 'shape')
    # Obtaining the member '__getitem__' of a type (line 556)
    getitem___403487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 41), shape_403486, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 556)
    subscript_call_result_403488 = invoke(stypy.reporting.localization.Localization(__file__, 556, 41), getitem___403487, int_403484)
    
    keyword_403489 = subscript_call_result_403488
    kwargs_403490 = {'k': keyword_403489}
    # Getting the type of 'assert_raises' (line 556)
    assert_raises_403480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 556)
    assert_raises_call_result_403491 = invoke(stypy.reporting.localization.Localization(__file__, 556, 4), assert_raises_403480, *[ValueError_403481, svds_403482, x_403483], **kwargs_403490)
    
    
    # Call to assert_raises(...): (line 557)
    # Processing the call arguments (line 557)
    # Getting the type of 'ValueError' (line 557)
    ValueError_403493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 18), 'ValueError', False)
    # Getting the type of 'svds' (line 557)
    svds_403494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 30), 'svds', False)
    # Getting the type of 'x' (line 557)
    x_403495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 36), 'x', False)
    # Obtaining the member 'T' of a type (line 557)
    T_403496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 36), x_403495, 'T')
    # Processing the call keyword arguments (line 557)
    
    # Obtaining the type of the subscript
    int_403497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 51), 'int')
    # Getting the type of 'x' (line 557)
    x_403498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 43), 'x', False)
    # Obtaining the member 'shape' of a type (line 557)
    shape_403499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 43), x_403498, 'shape')
    # Obtaining the member '__getitem__' of a type (line 557)
    getitem___403500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 43), shape_403499, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 557)
    subscript_call_result_403501 = invoke(stypy.reporting.localization.Localization(__file__, 557, 43), getitem___403500, int_403497)
    
    keyword_403502 = subscript_call_result_403501
    kwargs_403503 = {'k': keyword_403502}
    # Getting the type of 'assert_raises' (line 557)
    assert_raises_403492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 557)
    assert_raises_call_result_403504 = invoke(stypy.reporting.localization.Localization(__file__, 557, 4), assert_raises_403492, *[ValueError_403493, svds_403494, T_403496], **kwargs_403503)
    
    
    # Call to assert_raises(...): (line 558)
    # Processing the call arguments (line 558)
    # Getting the type of 'ValueError' (line 558)
    ValueError_403506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 18), 'ValueError', False)
    # Getting the type of 'svds' (line 558)
    svds_403507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 30), 'svds', False)
    # Getting the type of 'x' (line 558)
    x_403508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 36), 'x', False)
    # Obtaining the member 'T' of a type (line 558)
    T_403509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 36), x_403508, 'T')
    # Processing the call keyword arguments (line 558)
    
    # Obtaining the type of the subscript
    int_403510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 558, 51), 'int')
    # Getting the type of 'x' (line 558)
    x_403511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 43), 'x', False)
    # Obtaining the member 'shape' of a type (line 558)
    shape_403512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 43), x_403511, 'shape')
    # Obtaining the member '__getitem__' of a type (line 558)
    getitem___403513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 43), shape_403512, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 558)
    subscript_call_result_403514 = invoke(stypy.reporting.localization.Localization(__file__, 558, 43), getitem___403513, int_403510)
    
    keyword_403515 = subscript_call_result_403514
    kwargs_403516 = {'k': keyword_403515}
    # Getting the type of 'assert_raises' (line 558)
    assert_raises_403505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 558)
    assert_raises_call_result_403517 = invoke(stypy.reporting.localization.Localization(__file__, 558, 4), assert_raises_403505, *[ValueError_403506, svds_403507, T_403509], **kwargs_403516)
    
    
    # ################# End of 'svd_test_input_check(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'svd_test_input_check' in the type store
    # Getting the type of 'stypy_return_type' (line 546)
    stypy_return_type_403518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403518)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'svd_test_input_check'
    return stypy_return_type_403518

# Assigning a type to the variable 'svd_test_input_check' (line 546)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 0), 'svd_test_input_check', svd_test_input_check)

@norecursion
def test_svd_simple_real(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_simple_real'
    module_type_store = module_type_store.open_function_context('test_svd_simple_real', 561, 0, False)
    
    # Passed parameters checking function
    test_svd_simple_real.stypy_localization = localization
    test_svd_simple_real.stypy_type_of_self = None
    test_svd_simple_real.stypy_type_store = module_type_store
    test_svd_simple_real.stypy_function_name = 'test_svd_simple_real'
    test_svd_simple_real.stypy_param_names_list = []
    test_svd_simple_real.stypy_varargs_param_name = None
    test_svd_simple_real.stypy_kwargs_param_name = None
    test_svd_simple_real.stypy_call_defaults = defaults
    test_svd_simple_real.stypy_call_varargs = varargs
    test_svd_simple_real.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_simple_real', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_simple_real', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_simple_real(...)' code ##################

    
    # Assigning a Call to a Name (line 562):
    
    # Assigning a Call to a Name (line 562):
    
    # Call to array(...): (line 562)
    # Processing the call arguments (line 562)
    
    # Obtaining an instance of the builtin type 'list' (line 562)
    list_403521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 562)
    # Adding element type (line 562)
    
    # Obtaining an instance of the builtin type 'list' (line 562)
    list_403522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 562)
    # Adding element type (line 562)
    int_403523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 18), list_403522, int_403523)
    # Adding element type (line 562)
    int_403524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 18), list_403522, int_403524)
    # Adding element type (line 562)
    int_403525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 18), list_403522, int_403525)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 17), list_403521, list_403522)
    # Adding element type (line 562)
    
    # Obtaining an instance of the builtin type 'list' (line 563)
    list_403526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 563)
    # Adding element type (line 563)
    int_403527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 18), list_403526, int_403527)
    # Adding element type (line 563)
    int_403528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 18), list_403526, int_403528)
    # Adding element type (line 563)
    int_403529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 18), list_403526, int_403529)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 17), list_403521, list_403526)
    # Adding element type (line 562)
    
    # Obtaining an instance of the builtin type 'list' (line 564)
    list_403530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 564)
    # Adding element type (line 564)
    int_403531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 18), list_403530, int_403531)
    # Adding element type (line 564)
    int_403532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 18), list_403530, int_403532)
    # Adding element type (line 564)
    int_403533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 18), list_403530, int_403533)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 17), list_403521, list_403530)
    # Adding element type (line 562)
    
    # Obtaining an instance of the builtin type 'list' (line 565)
    list_403534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 565)
    # Adding element type (line 565)
    int_403535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 18), list_403534, int_403535)
    # Adding element type (line 565)
    int_403536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 18), list_403534, int_403536)
    # Adding element type (line 565)
    int_403537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 18), list_403534, int_403537)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 17), list_403521, list_403534)
    
    # Getting the type of 'float' (line 565)
    float_403538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 30), 'float', False)
    # Processing the call keyword arguments (line 562)
    kwargs_403539 = {}
    # Getting the type of 'np' (line 562)
    np_403519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 8), 'np', False)
    # Obtaining the member 'array' of a type (line 562)
    array_403520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 8), np_403519, 'array')
    # Calling array(args, kwargs) (line 562)
    array_call_result_403540 = invoke(stypy.reporting.localization.Localization(__file__, 562, 8), array_403520, *[list_403521, float_403538], **kwargs_403539)
    
    # Assigning a type to the variable 'x' (line 562)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 4), 'x', array_call_result_403540)
    
    # Assigning a Call to a Name (line 566):
    
    # Assigning a Call to a Name (line 566):
    
    # Call to array(...): (line 566)
    # Processing the call arguments (line 566)
    
    # Obtaining an instance of the builtin type 'list' (line 566)
    list_403543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 566)
    # Adding element type (line 566)
    
    # Obtaining an instance of the builtin type 'list' (line 566)
    list_403544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 566)
    # Adding element type (line 566)
    int_403545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 18), list_403544, int_403545)
    # Adding element type (line 566)
    int_403546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 18), list_403544, int_403546)
    # Adding element type (line 566)
    int_403547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 18), list_403544, int_403547)
    # Adding element type (line 566)
    int_403548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 18), list_403544, int_403548)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 17), list_403543, list_403544)
    # Adding element type (line 566)
    
    # Obtaining an instance of the builtin type 'list' (line 567)
    list_403549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 567)
    # Adding element type (line 567)
    int_403550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 18), list_403549, int_403550)
    # Adding element type (line 567)
    int_403551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 18), list_403549, int_403551)
    # Adding element type (line 567)
    int_403552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 18), list_403549, int_403552)
    # Adding element type (line 567)
    int_403553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 18), list_403549, int_403553)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 17), list_403543, list_403549)
    # Adding element type (line 566)
    
    # Obtaining an instance of the builtin type 'list' (line 568)
    list_403554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 568)
    # Adding element type (line 568)
    int_403555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 18), list_403554, int_403555)
    # Adding element type (line 568)
    int_403556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 18), list_403554, int_403556)
    # Adding element type (line 568)
    int_403557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 18), list_403554, int_403557)
    # Adding element type (line 568)
    int_403558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 568, 18), list_403554, int_403558)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 17), list_403543, list_403554)
    # Adding element type (line 566)
    
    # Obtaining an instance of the builtin type 'list' (line 569)
    list_403559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 569)
    # Adding element type (line 569)
    int_403560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 18), list_403559, int_403560)
    # Adding element type (line 569)
    int_403561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 18), list_403559, int_403561)
    # Adding element type (line 569)
    int_403562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 18), list_403559, int_403562)
    # Adding element type (line 569)
    int_403563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 18), list_403559, int_403563)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 17), list_403543, list_403559)
    
    # Getting the type of 'float' (line 569)
    float_403564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 33), 'float', False)
    # Processing the call keyword arguments (line 566)
    kwargs_403565 = {}
    # Getting the type of 'np' (line 566)
    np_403541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'np', False)
    # Obtaining the member 'array' of a type (line 566)
    array_403542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 8), np_403541, 'array')
    # Calling array(args, kwargs) (line 566)
    array_call_result_403566 = invoke(stypy.reporting.localization.Localization(__file__, 566, 8), array_403542, *[list_403543, float_403564], **kwargs_403565)
    
    # Assigning a type to the variable 'y' (line 566)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 4), 'y', array_call_result_403566)
    
    # Assigning a Call to a Name (line 570):
    
    # Assigning a Call to a Name (line 570):
    
    # Call to csc_matrix(...): (line 570)
    # Processing the call arguments (line 570)
    # Getting the type of 'x' (line 570)
    x_403568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 19), 'x', False)
    # Processing the call keyword arguments (line 570)
    kwargs_403569 = {}
    # Getting the type of 'csc_matrix' (line 570)
    csc_matrix_403567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 8), 'csc_matrix', False)
    # Calling csc_matrix(args, kwargs) (line 570)
    csc_matrix_call_result_403570 = invoke(stypy.reporting.localization.Localization(__file__, 570, 8), csc_matrix_403567, *[x_403568], **kwargs_403569)
    
    # Assigning a type to the variable 'z' (line 570)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 570, 4), 'z', csc_matrix_call_result_403570)
    
    
    # Obtaining an instance of the builtin type 'list' (line 572)
    list_403571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 572)
    # Adding element type (line 572)
    # Getting the type of 'x' (line 572)
    x_403572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 14), 'x')
    # Obtaining the member 'T' of a type (line 572)
    T_403573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 14), x_403572, 'T')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 13), list_403571, T_403573)
    # Adding element type (line 572)
    # Getting the type of 'x' (line 572)
    x_403574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 19), 'x')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 13), list_403571, x_403574)
    # Adding element type (line 572)
    # Getting the type of 'y' (line 572)
    y_403575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 22), 'y')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 13), list_403571, y_403575)
    # Adding element type (line 572)
    # Getting the type of 'z' (line 572)
    z_403576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 25), 'z')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 13), list_403571, z_403576)
    # Adding element type (line 572)
    # Getting the type of 'z' (line 572)
    z_403577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 28), 'z')
    # Obtaining the member 'T' of a type (line 572)
    T_403578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 28), z_403577, 'T')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 13), list_403571, T_403578)
    
    # Testing the type of a for loop iterable (line 572)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 572, 4), list_403571)
    # Getting the type of the for loop variable (line 572)
    for_loop_var_403579 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 572, 4), list_403571)
    # Assigning a type to the variable 'm' (line 572)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 4), 'm', for_loop_var_403579)
    # SSA begins for a for statement (line 572)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to range(...): (line 573)
    # Processing the call arguments (line 573)
    int_403581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 23), 'int')
    
    # Call to min(...): (line 573)
    # Processing the call arguments (line 573)
    # Getting the type of 'm' (line 573)
    m_403583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 30), 'm', False)
    # Obtaining the member 'shape' of a type (line 573)
    shape_403584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 30), m_403583, 'shape')
    # Processing the call keyword arguments (line 573)
    kwargs_403585 = {}
    # Getting the type of 'min' (line 573)
    min_403582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 26), 'min', False)
    # Calling min(args, kwargs) (line 573)
    min_call_result_403586 = invoke(stypy.reporting.localization.Localization(__file__, 573, 26), min_403582, *[shape_403584], **kwargs_403585)
    
    # Processing the call keyword arguments (line 573)
    kwargs_403587 = {}
    # Getting the type of 'range' (line 573)
    range_403580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 17), 'range', False)
    # Calling range(args, kwargs) (line 573)
    range_call_result_403588 = invoke(stypy.reporting.localization.Localization(__file__, 573, 17), range_403580, *[int_403581, min_call_result_403586], **kwargs_403587)
    
    # Testing the type of a for loop iterable (line 573)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 573, 8), range_call_result_403588)
    # Getting the type of the for loop variable (line 573)
    for_loop_var_403589 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 573, 8), range_call_result_403588)
    # Assigning a type to the variable 'k' (line 573)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 573, 8), 'k', for_loop_var_403589)
    # SSA begins for a for statement (line 573)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Tuple (line 574):
    
    # Assigning a Subscript to a Name (line 574):
    
    # Obtaining the type of the subscript
    int_403590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 12), 'int')
    
    # Call to sorted_svd(...): (line 574)
    # Processing the call arguments (line 574)
    # Getting the type of 'm' (line 574)
    m_403592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 34), 'm', False)
    # Getting the type of 'k' (line 574)
    k_403593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 37), 'k', False)
    # Processing the call keyword arguments (line 574)
    kwargs_403594 = {}
    # Getting the type of 'sorted_svd' (line 574)
    sorted_svd_403591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 23), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 574)
    sorted_svd_call_result_403595 = invoke(stypy.reporting.localization.Localization(__file__, 574, 23), sorted_svd_403591, *[m_403592, k_403593], **kwargs_403594)
    
    # Obtaining the member '__getitem__' of a type (line 574)
    getitem___403596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 12), sorted_svd_call_result_403595, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 574)
    subscript_call_result_403597 = invoke(stypy.reporting.localization.Localization(__file__, 574, 12), getitem___403596, int_403590)
    
    # Assigning a type to the variable 'tuple_var_assignment_401339' (line 574)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 12), 'tuple_var_assignment_401339', subscript_call_result_403597)
    
    # Assigning a Subscript to a Name (line 574):
    
    # Obtaining the type of the subscript
    int_403598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 12), 'int')
    
    # Call to sorted_svd(...): (line 574)
    # Processing the call arguments (line 574)
    # Getting the type of 'm' (line 574)
    m_403600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 34), 'm', False)
    # Getting the type of 'k' (line 574)
    k_403601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 37), 'k', False)
    # Processing the call keyword arguments (line 574)
    kwargs_403602 = {}
    # Getting the type of 'sorted_svd' (line 574)
    sorted_svd_403599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 23), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 574)
    sorted_svd_call_result_403603 = invoke(stypy.reporting.localization.Localization(__file__, 574, 23), sorted_svd_403599, *[m_403600, k_403601], **kwargs_403602)
    
    # Obtaining the member '__getitem__' of a type (line 574)
    getitem___403604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 12), sorted_svd_call_result_403603, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 574)
    subscript_call_result_403605 = invoke(stypy.reporting.localization.Localization(__file__, 574, 12), getitem___403604, int_403598)
    
    # Assigning a type to the variable 'tuple_var_assignment_401340' (line 574)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 12), 'tuple_var_assignment_401340', subscript_call_result_403605)
    
    # Assigning a Subscript to a Name (line 574):
    
    # Obtaining the type of the subscript
    int_403606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 12), 'int')
    
    # Call to sorted_svd(...): (line 574)
    # Processing the call arguments (line 574)
    # Getting the type of 'm' (line 574)
    m_403608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 34), 'm', False)
    # Getting the type of 'k' (line 574)
    k_403609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 37), 'k', False)
    # Processing the call keyword arguments (line 574)
    kwargs_403610 = {}
    # Getting the type of 'sorted_svd' (line 574)
    sorted_svd_403607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 23), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 574)
    sorted_svd_call_result_403611 = invoke(stypy.reporting.localization.Localization(__file__, 574, 23), sorted_svd_403607, *[m_403608, k_403609], **kwargs_403610)
    
    # Obtaining the member '__getitem__' of a type (line 574)
    getitem___403612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 12), sorted_svd_call_result_403611, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 574)
    subscript_call_result_403613 = invoke(stypy.reporting.localization.Localization(__file__, 574, 12), getitem___403612, int_403606)
    
    # Assigning a type to the variable 'tuple_var_assignment_401341' (line 574)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 12), 'tuple_var_assignment_401341', subscript_call_result_403613)
    
    # Assigning a Name to a Name (line 574):
    # Getting the type of 'tuple_var_assignment_401339' (line 574)
    tuple_var_assignment_401339_403614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 12), 'tuple_var_assignment_401339')
    # Assigning a type to the variable 'u' (line 574)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 12), 'u', tuple_var_assignment_401339_403614)
    
    # Assigning a Name to a Name (line 574):
    # Getting the type of 'tuple_var_assignment_401340' (line 574)
    tuple_var_assignment_401340_403615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 12), 'tuple_var_assignment_401340')
    # Assigning a type to the variable 's' (line 574)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 15), 's', tuple_var_assignment_401340_403615)
    
    # Assigning a Name to a Name (line 574):
    # Getting the type of 'tuple_var_assignment_401341' (line 574)
    tuple_var_assignment_401341_403616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 12), 'tuple_var_assignment_401341')
    # Assigning a type to the variable 'vh' (line 574)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 18), 'vh', tuple_var_assignment_401341_403616)
    
    # Assigning a Call to a Tuple (line 575):
    
    # Assigning a Subscript to a Name (line 575):
    
    # Obtaining the type of the subscript
    int_403617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 12), 'int')
    
    # Call to svds(...): (line 575)
    # Processing the call arguments (line 575)
    # Getting the type of 'm' (line 575)
    m_403619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 31), 'm', False)
    # Getting the type of 'k' (line 575)
    k_403620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 34), 'k', False)
    # Processing the call keyword arguments (line 575)
    kwargs_403621 = {}
    # Getting the type of 'svds' (line 575)
    svds_403618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 26), 'svds', False)
    # Calling svds(args, kwargs) (line 575)
    svds_call_result_403622 = invoke(stypy.reporting.localization.Localization(__file__, 575, 26), svds_403618, *[m_403619, k_403620], **kwargs_403621)
    
    # Obtaining the member '__getitem__' of a type (line 575)
    getitem___403623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 12), svds_call_result_403622, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 575)
    subscript_call_result_403624 = invoke(stypy.reporting.localization.Localization(__file__, 575, 12), getitem___403623, int_403617)
    
    # Assigning a type to the variable 'tuple_var_assignment_401342' (line 575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'tuple_var_assignment_401342', subscript_call_result_403624)
    
    # Assigning a Subscript to a Name (line 575):
    
    # Obtaining the type of the subscript
    int_403625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 12), 'int')
    
    # Call to svds(...): (line 575)
    # Processing the call arguments (line 575)
    # Getting the type of 'm' (line 575)
    m_403627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 31), 'm', False)
    # Getting the type of 'k' (line 575)
    k_403628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 34), 'k', False)
    # Processing the call keyword arguments (line 575)
    kwargs_403629 = {}
    # Getting the type of 'svds' (line 575)
    svds_403626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 26), 'svds', False)
    # Calling svds(args, kwargs) (line 575)
    svds_call_result_403630 = invoke(stypy.reporting.localization.Localization(__file__, 575, 26), svds_403626, *[m_403627, k_403628], **kwargs_403629)
    
    # Obtaining the member '__getitem__' of a type (line 575)
    getitem___403631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 12), svds_call_result_403630, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 575)
    subscript_call_result_403632 = invoke(stypy.reporting.localization.Localization(__file__, 575, 12), getitem___403631, int_403625)
    
    # Assigning a type to the variable 'tuple_var_assignment_401343' (line 575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'tuple_var_assignment_401343', subscript_call_result_403632)
    
    # Assigning a Subscript to a Name (line 575):
    
    # Obtaining the type of the subscript
    int_403633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 12), 'int')
    
    # Call to svds(...): (line 575)
    # Processing the call arguments (line 575)
    # Getting the type of 'm' (line 575)
    m_403635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 31), 'm', False)
    # Getting the type of 'k' (line 575)
    k_403636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 34), 'k', False)
    # Processing the call keyword arguments (line 575)
    kwargs_403637 = {}
    # Getting the type of 'svds' (line 575)
    svds_403634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 26), 'svds', False)
    # Calling svds(args, kwargs) (line 575)
    svds_call_result_403638 = invoke(stypy.reporting.localization.Localization(__file__, 575, 26), svds_403634, *[m_403635, k_403636], **kwargs_403637)
    
    # Obtaining the member '__getitem__' of a type (line 575)
    getitem___403639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 12), svds_call_result_403638, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 575)
    subscript_call_result_403640 = invoke(stypy.reporting.localization.Localization(__file__, 575, 12), getitem___403639, int_403633)
    
    # Assigning a type to the variable 'tuple_var_assignment_401344' (line 575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'tuple_var_assignment_401344', subscript_call_result_403640)
    
    # Assigning a Name to a Name (line 575):
    # Getting the type of 'tuple_var_assignment_401342' (line 575)
    tuple_var_assignment_401342_403641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'tuple_var_assignment_401342')
    # Assigning a type to the variable 'su' (line 575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'su', tuple_var_assignment_401342_403641)
    
    # Assigning a Name to a Name (line 575):
    # Getting the type of 'tuple_var_assignment_401343' (line 575)
    tuple_var_assignment_401343_403642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'tuple_var_assignment_401343')
    # Assigning a type to the variable 'ss' (line 575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 16), 'ss', tuple_var_assignment_401343_403642)
    
    # Assigning a Name to a Name (line 575):
    # Getting the type of 'tuple_var_assignment_401344' (line 575)
    tuple_var_assignment_401344_403643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'tuple_var_assignment_401344')
    # Assigning a type to the variable 'svh' (line 575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 20), 'svh', tuple_var_assignment_401344_403643)
    
    # Assigning a Call to a Name (line 577):
    
    # Assigning a Call to a Name (line 577):
    
    # Call to svd_estimate(...): (line 577)
    # Processing the call arguments (line 577)
    # Getting the type of 'u' (line 577)
    u_403645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 33), 'u', False)
    # Getting the type of 's' (line 577)
    s_403646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 36), 's', False)
    # Getting the type of 'vh' (line 577)
    vh_403647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 39), 'vh', False)
    # Processing the call keyword arguments (line 577)
    kwargs_403648 = {}
    # Getting the type of 'svd_estimate' (line 577)
    svd_estimate_403644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 20), 'svd_estimate', False)
    # Calling svd_estimate(args, kwargs) (line 577)
    svd_estimate_call_result_403649 = invoke(stypy.reporting.localization.Localization(__file__, 577, 20), svd_estimate_403644, *[u_403645, s_403646, vh_403647], **kwargs_403648)
    
    # Assigning a type to the variable 'm_hat' (line 577)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 577, 12), 'm_hat', svd_estimate_call_result_403649)
    
    # Assigning a Call to a Name (line 578):
    
    # Assigning a Call to a Name (line 578):
    
    # Call to svd_estimate(...): (line 578)
    # Processing the call arguments (line 578)
    # Getting the type of 'su' (line 578)
    su_403651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 34), 'su', False)
    # Getting the type of 'ss' (line 578)
    ss_403652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 38), 'ss', False)
    # Getting the type of 'svh' (line 578)
    svh_403653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 42), 'svh', False)
    # Processing the call keyword arguments (line 578)
    kwargs_403654 = {}
    # Getting the type of 'svd_estimate' (line 578)
    svd_estimate_403650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 21), 'svd_estimate', False)
    # Calling svd_estimate(args, kwargs) (line 578)
    svd_estimate_call_result_403655 = invoke(stypy.reporting.localization.Localization(__file__, 578, 21), svd_estimate_403650, *[su_403651, ss_403652, svh_403653], **kwargs_403654)
    
    # Assigning a type to the variable 'sm_hat' (line 578)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 12), 'sm_hat', svd_estimate_call_result_403655)
    
    # Call to assert_array_almost_equal_nulp(...): (line 580)
    # Processing the call arguments (line 580)
    # Getting the type of 'm_hat' (line 580)
    m_hat_403657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 43), 'm_hat', False)
    # Getting the type of 'sm_hat' (line 580)
    sm_hat_403658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 50), 'sm_hat', False)
    # Processing the call keyword arguments (line 580)
    int_403659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 63), 'int')
    keyword_403660 = int_403659
    kwargs_403661 = {'nulp': keyword_403660}
    # Getting the type of 'assert_array_almost_equal_nulp' (line 580)
    assert_array_almost_equal_nulp_403656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 12), 'assert_array_almost_equal_nulp', False)
    # Calling assert_array_almost_equal_nulp(args, kwargs) (line 580)
    assert_array_almost_equal_nulp_call_result_403662 = invoke(stypy.reporting.localization.Localization(__file__, 580, 12), assert_array_almost_equal_nulp_403656, *[m_hat_403657, sm_hat_403658], **kwargs_403661)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_svd_simple_real(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_simple_real' in the type store
    # Getting the type of 'stypy_return_type' (line 561)
    stypy_return_type_403663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403663)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_simple_real'
    return stypy_return_type_403663

# Assigning a type to the variable 'test_svd_simple_real' (line 561)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 0), 'test_svd_simple_real', test_svd_simple_real)

@norecursion
def test_svd_simple_complex(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_simple_complex'
    module_type_store = module_type_store.open_function_context('test_svd_simple_complex', 583, 0, False)
    
    # Passed parameters checking function
    test_svd_simple_complex.stypy_localization = localization
    test_svd_simple_complex.stypy_type_of_self = None
    test_svd_simple_complex.stypy_type_store = module_type_store
    test_svd_simple_complex.stypy_function_name = 'test_svd_simple_complex'
    test_svd_simple_complex.stypy_param_names_list = []
    test_svd_simple_complex.stypy_varargs_param_name = None
    test_svd_simple_complex.stypy_kwargs_param_name = None
    test_svd_simple_complex.stypy_call_defaults = defaults
    test_svd_simple_complex.stypy_call_varargs = varargs
    test_svd_simple_complex.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_simple_complex', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_simple_complex', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_simple_complex(...)' code ##################

    
    # Assigning a Call to a Name (line 584):
    
    # Assigning a Call to a Name (line 584):
    
    # Call to array(...): (line 584)
    # Processing the call arguments (line 584)
    
    # Obtaining an instance of the builtin type 'list' (line 584)
    list_403666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 584)
    # Adding element type (line 584)
    
    # Obtaining an instance of the builtin type 'list' (line 584)
    list_403667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 584)
    # Adding element type (line 584)
    int_403668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 18), list_403667, int_403668)
    # Adding element type (line 584)
    int_403669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 18), list_403667, int_403669)
    # Adding element type (line 584)
    int_403670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 18), list_403667, int_403670)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 17), list_403666, list_403667)
    # Adding element type (line 584)
    
    # Obtaining an instance of the builtin type 'list' (line 585)
    list_403671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 585)
    # Adding element type (line 585)
    int_403672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 18), list_403671, int_403672)
    # Adding element type (line 585)
    int_403673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 18), list_403671, int_403673)
    # Adding element type (line 585)
    int_403674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 18), list_403671, int_403674)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 17), list_403666, list_403671)
    # Adding element type (line 584)
    
    # Obtaining an instance of the builtin type 'list' (line 586)
    list_403675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 586)
    # Adding element type (line 586)
    int_403676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 19), 'int')
    complex_403677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 23), 'complex')
    # Applying the binary operator '+' (line 586)
    result_add_403678 = python_operator(stypy.reporting.localization.Localization(__file__, 586, 19), '+', int_403676, complex_403677)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 18), list_403675, result_add_403678)
    # Adding element type (line 586)
    int_403679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 27), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 18), list_403675, int_403679)
    # Adding element type (line 586)
    int_403680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 30), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 18), list_403675, int_403680)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 17), list_403666, list_403675)
    # Adding element type (line 584)
    
    # Obtaining an instance of the builtin type 'list' (line 587)
    list_403681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 587)
    # Adding element type (line 587)
    int_403682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 587, 18), list_403681, int_403682)
    # Adding element type (line 587)
    int_403683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 587, 18), list_403681, int_403683)
    # Adding element type (line 587)
    int_403684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 587, 18), list_403681, int_403684)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 17), list_403666, list_403681)
    
    # Getting the type of 'complex' (line 587)
    complex_403685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 30), 'complex', False)
    # Processing the call keyword arguments (line 584)
    kwargs_403686 = {}
    # Getting the type of 'np' (line 584)
    np_403664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'np', False)
    # Obtaining the member 'array' of a type (line 584)
    array_403665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 8), np_403664, 'array')
    # Calling array(args, kwargs) (line 584)
    array_call_result_403687 = invoke(stypy.reporting.localization.Localization(__file__, 584, 8), array_403665, *[list_403666, complex_403685], **kwargs_403686)
    
    # Assigning a type to the variable 'x' (line 584)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 4), 'x', array_call_result_403687)
    
    # Assigning a Call to a Name (line 588):
    
    # Assigning a Call to a Name (line 588):
    
    # Call to array(...): (line 588)
    # Processing the call arguments (line 588)
    
    # Obtaining an instance of the builtin type 'list' (line 588)
    list_403690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 588)
    # Adding element type (line 588)
    
    # Obtaining an instance of the builtin type 'list' (line 588)
    list_403691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 588)
    # Adding element type (line 588)
    int_403692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 18), list_403691, int_403692)
    # Adding element type (line 588)
    int_403693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 18), list_403691, int_403693)
    # Adding element type (line 588)
    int_403694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 18), list_403691, int_403694)
    # Adding element type (line 588)
    int_403695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 28), 'int')
    complex_403696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 32), 'complex')
    # Applying the binary operator '+' (line 588)
    result_add_403697 = python_operator(stypy.reporting.localization.Localization(__file__, 588, 28), '+', int_403695, complex_403696)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 18), list_403691, result_add_403697)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 17), list_403690, list_403691)
    # Adding element type (line 588)
    
    # Obtaining an instance of the builtin type 'list' (line 589)
    list_403698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 589)
    # Adding element type (line 589)
    int_403699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 19), 'int')
    complex_403700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 23), 'complex')
    # Applying the binary operator '-' (line 589)
    result_sub_403701 = python_operator(stypy.reporting.localization.Localization(__file__, 589, 19), '-', int_403699, complex_403700)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 18), list_403698, result_sub_403701)
    # Adding element type (line 589)
    int_403702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 27), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 18), list_403698, int_403702)
    # Adding element type (line 589)
    int_403703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 30), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 18), list_403698, int_403703)
    # Adding element type (line 589)
    int_403704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 33), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 589, 18), list_403698, int_403704)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 17), list_403690, list_403698)
    # Adding element type (line 588)
    
    # Obtaining an instance of the builtin type 'list' (line 590)
    list_403705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 590)
    # Adding element type (line 590)
    int_403706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 18), list_403705, int_403706)
    # Adding element type (line 590)
    int_403707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 18), list_403705, int_403707)
    # Adding element type (line 590)
    int_403708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 18), list_403705, int_403708)
    # Adding element type (line 590)
    int_403709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 18), list_403705, int_403709)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 17), list_403690, list_403705)
    # Adding element type (line 588)
    
    # Obtaining an instance of the builtin type 'list' (line 591)
    list_403710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 591)
    # Adding element type (line 591)
    int_403711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 18), list_403710, int_403711)
    # Adding element type (line 591)
    int_403712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 18), list_403710, int_403712)
    # Adding element type (line 591)
    int_403713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 18), list_403710, int_403713)
    # Adding element type (line 591)
    int_403714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 18), list_403710, int_403714)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 17), list_403690, list_403710)
    
    # Getting the type of 'complex' (line 591)
    complex_403715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 33), 'complex', False)
    # Processing the call keyword arguments (line 588)
    kwargs_403716 = {}
    # Getting the type of 'np' (line 588)
    np_403688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 8), 'np', False)
    # Obtaining the member 'array' of a type (line 588)
    array_403689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 8), np_403688, 'array')
    # Calling array(args, kwargs) (line 588)
    array_call_result_403717 = invoke(stypy.reporting.localization.Localization(__file__, 588, 8), array_403689, *[list_403690, complex_403715], **kwargs_403716)
    
    # Assigning a type to the variable 'y' (line 588)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 588, 4), 'y', array_call_result_403717)
    
    # Assigning a Call to a Name (line 592):
    
    # Assigning a Call to a Name (line 592):
    
    # Call to csc_matrix(...): (line 592)
    # Processing the call arguments (line 592)
    # Getting the type of 'x' (line 592)
    x_403719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 19), 'x', False)
    # Processing the call keyword arguments (line 592)
    kwargs_403720 = {}
    # Getting the type of 'csc_matrix' (line 592)
    csc_matrix_403718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 8), 'csc_matrix', False)
    # Calling csc_matrix(args, kwargs) (line 592)
    csc_matrix_call_result_403721 = invoke(stypy.reporting.localization.Localization(__file__, 592, 8), csc_matrix_403718, *[x_403719], **kwargs_403720)
    
    # Assigning a type to the variable 'z' (line 592)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 4), 'z', csc_matrix_call_result_403721)
    
    
    # Obtaining an instance of the builtin type 'list' (line 594)
    list_403722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 13), 'list')
    # Adding type elements to the builtin type 'list' instance (line 594)
    # Adding element type (line 594)
    # Getting the type of 'x' (line 594)
    x_403723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 14), 'x')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 13), list_403722, x_403723)
    # Adding element type (line 594)
    
    # Call to conjugate(...): (line 594)
    # Processing the call keyword arguments (line 594)
    kwargs_403727 = {}
    # Getting the type of 'x' (line 594)
    x_403724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 17), 'x', False)
    # Obtaining the member 'T' of a type (line 594)
    T_403725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 17), x_403724, 'T')
    # Obtaining the member 'conjugate' of a type (line 594)
    conjugate_403726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 17), T_403725, 'conjugate')
    # Calling conjugate(args, kwargs) (line 594)
    conjugate_call_result_403728 = invoke(stypy.reporting.localization.Localization(__file__, 594, 17), conjugate_403726, *[], **kwargs_403727)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 13), list_403722, conjugate_call_result_403728)
    # Adding element type (line 594)
    # Getting the type of 'x' (line 594)
    x_403729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 34), 'x')
    # Obtaining the member 'T' of a type (line 594)
    T_403730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 34), x_403729, 'T')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 13), list_403722, T_403730)
    # Adding element type (line 594)
    # Getting the type of 'y' (line 594)
    y_403731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 39), 'y')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 13), list_403722, y_403731)
    # Adding element type (line 594)
    
    # Call to conjugate(...): (line 594)
    # Processing the call keyword arguments (line 594)
    kwargs_403734 = {}
    # Getting the type of 'y' (line 594)
    y_403732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 42), 'y', False)
    # Obtaining the member 'conjugate' of a type (line 594)
    conjugate_403733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 42), y_403732, 'conjugate')
    # Calling conjugate(args, kwargs) (line 594)
    conjugate_call_result_403735 = invoke(stypy.reporting.localization.Localization(__file__, 594, 42), conjugate_403733, *[], **kwargs_403734)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 13), list_403722, conjugate_call_result_403735)
    # Adding element type (line 594)
    # Getting the type of 'z' (line 594)
    z_403736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 57), 'z')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 13), list_403722, z_403736)
    # Adding element type (line 594)
    # Getting the type of 'z' (line 594)
    z_403737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 60), 'z')
    # Obtaining the member 'T' of a type (line 594)
    T_403738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 60), z_403737, 'T')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 594, 13), list_403722, T_403738)
    
    # Testing the type of a for loop iterable (line 594)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 594, 4), list_403722)
    # Getting the type of the for loop variable (line 594)
    for_loop_var_403739 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 594, 4), list_403722)
    # Assigning a type to the variable 'm' (line 594)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 4), 'm', for_loop_var_403739)
    # SSA begins for a for statement (line 594)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to range(...): (line 595)
    # Processing the call arguments (line 595)
    int_403741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 23), 'int')
    
    # Call to min(...): (line 595)
    # Processing the call arguments (line 595)
    # Getting the type of 'm' (line 595)
    m_403743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 30), 'm', False)
    # Obtaining the member 'shape' of a type (line 595)
    shape_403744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 30), m_403743, 'shape')
    # Processing the call keyword arguments (line 595)
    kwargs_403745 = {}
    # Getting the type of 'min' (line 595)
    min_403742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 26), 'min', False)
    # Calling min(args, kwargs) (line 595)
    min_call_result_403746 = invoke(stypy.reporting.localization.Localization(__file__, 595, 26), min_403742, *[shape_403744], **kwargs_403745)
    
    int_403747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 41), 'int')
    # Applying the binary operator '-' (line 595)
    result_sub_403748 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 26), '-', min_call_result_403746, int_403747)
    
    # Processing the call keyword arguments (line 595)
    kwargs_403749 = {}
    # Getting the type of 'range' (line 595)
    range_403740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 17), 'range', False)
    # Calling range(args, kwargs) (line 595)
    range_call_result_403750 = invoke(stypy.reporting.localization.Localization(__file__, 595, 17), range_403740, *[int_403741, result_sub_403748], **kwargs_403749)
    
    # Testing the type of a for loop iterable (line 595)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 595, 8), range_call_result_403750)
    # Getting the type of the for loop variable (line 595)
    for_loop_var_403751 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 595, 8), range_call_result_403750)
    # Assigning a type to the variable 'k' (line 595)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'k', for_loop_var_403751)
    # SSA begins for a for statement (line 595)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Tuple (line 596):
    
    # Assigning a Subscript to a Name (line 596):
    
    # Obtaining the type of the subscript
    int_403752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 12), 'int')
    
    # Call to sorted_svd(...): (line 596)
    # Processing the call arguments (line 596)
    # Getting the type of 'm' (line 596)
    m_403754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 34), 'm', False)
    # Getting the type of 'k' (line 596)
    k_403755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 37), 'k', False)
    # Processing the call keyword arguments (line 596)
    kwargs_403756 = {}
    # Getting the type of 'sorted_svd' (line 596)
    sorted_svd_403753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 23), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 596)
    sorted_svd_call_result_403757 = invoke(stypy.reporting.localization.Localization(__file__, 596, 23), sorted_svd_403753, *[m_403754, k_403755], **kwargs_403756)
    
    # Obtaining the member '__getitem__' of a type (line 596)
    getitem___403758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 12), sorted_svd_call_result_403757, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 596)
    subscript_call_result_403759 = invoke(stypy.reporting.localization.Localization(__file__, 596, 12), getitem___403758, int_403752)
    
    # Assigning a type to the variable 'tuple_var_assignment_401345' (line 596)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'tuple_var_assignment_401345', subscript_call_result_403759)
    
    # Assigning a Subscript to a Name (line 596):
    
    # Obtaining the type of the subscript
    int_403760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 12), 'int')
    
    # Call to sorted_svd(...): (line 596)
    # Processing the call arguments (line 596)
    # Getting the type of 'm' (line 596)
    m_403762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 34), 'm', False)
    # Getting the type of 'k' (line 596)
    k_403763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 37), 'k', False)
    # Processing the call keyword arguments (line 596)
    kwargs_403764 = {}
    # Getting the type of 'sorted_svd' (line 596)
    sorted_svd_403761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 23), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 596)
    sorted_svd_call_result_403765 = invoke(stypy.reporting.localization.Localization(__file__, 596, 23), sorted_svd_403761, *[m_403762, k_403763], **kwargs_403764)
    
    # Obtaining the member '__getitem__' of a type (line 596)
    getitem___403766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 12), sorted_svd_call_result_403765, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 596)
    subscript_call_result_403767 = invoke(stypy.reporting.localization.Localization(__file__, 596, 12), getitem___403766, int_403760)
    
    # Assigning a type to the variable 'tuple_var_assignment_401346' (line 596)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'tuple_var_assignment_401346', subscript_call_result_403767)
    
    # Assigning a Subscript to a Name (line 596):
    
    # Obtaining the type of the subscript
    int_403768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 12), 'int')
    
    # Call to sorted_svd(...): (line 596)
    # Processing the call arguments (line 596)
    # Getting the type of 'm' (line 596)
    m_403770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 34), 'm', False)
    # Getting the type of 'k' (line 596)
    k_403771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 37), 'k', False)
    # Processing the call keyword arguments (line 596)
    kwargs_403772 = {}
    # Getting the type of 'sorted_svd' (line 596)
    sorted_svd_403769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 23), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 596)
    sorted_svd_call_result_403773 = invoke(stypy.reporting.localization.Localization(__file__, 596, 23), sorted_svd_403769, *[m_403770, k_403771], **kwargs_403772)
    
    # Obtaining the member '__getitem__' of a type (line 596)
    getitem___403774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 12), sorted_svd_call_result_403773, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 596)
    subscript_call_result_403775 = invoke(stypy.reporting.localization.Localization(__file__, 596, 12), getitem___403774, int_403768)
    
    # Assigning a type to the variable 'tuple_var_assignment_401347' (line 596)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'tuple_var_assignment_401347', subscript_call_result_403775)
    
    # Assigning a Name to a Name (line 596):
    # Getting the type of 'tuple_var_assignment_401345' (line 596)
    tuple_var_assignment_401345_403776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'tuple_var_assignment_401345')
    # Assigning a type to the variable 'u' (line 596)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'u', tuple_var_assignment_401345_403776)
    
    # Assigning a Name to a Name (line 596):
    # Getting the type of 'tuple_var_assignment_401346' (line 596)
    tuple_var_assignment_401346_403777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'tuple_var_assignment_401346')
    # Assigning a type to the variable 's' (line 596)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 15), 's', tuple_var_assignment_401346_403777)
    
    # Assigning a Name to a Name (line 596):
    # Getting the type of 'tuple_var_assignment_401347' (line 596)
    tuple_var_assignment_401347_403778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'tuple_var_assignment_401347')
    # Assigning a type to the variable 'vh' (line 596)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 18), 'vh', tuple_var_assignment_401347_403778)
    
    # Assigning a Call to a Tuple (line 597):
    
    # Assigning a Subscript to a Name (line 597):
    
    # Obtaining the type of the subscript
    int_403779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 12), 'int')
    
    # Call to svds(...): (line 597)
    # Processing the call arguments (line 597)
    # Getting the type of 'm' (line 597)
    m_403781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 31), 'm', False)
    # Getting the type of 'k' (line 597)
    k_403782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 34), 'k', False)
    # Processing the call keyword arguments (line 597)
    kwargs_403783 = {}
    # Getting the type of 'svds' (line 597)
    svds_403780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 26), 'svds', False)
    # Calling svds(args, kwargs) (line 597)
    svds_call_result_403784 = invoke(stypy.reporting.localization.Localization(__file__, 597, 26), svds_403780, *[m_403781, k_403782], **kwargs_403783)
    
    # Obtaining the member '__getitem__' of a type (line 597)
    getitem___403785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 12), svds_call_result_403784, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 597)
    subscript_call_result_403786 = invoke(stypy.reporting.localization.Localization(__file__, 597, 12), getitem___403785, int_403779)
    
    # Assigning a type to the variable 'tuple_var_assignment_401348' (line 597)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'tuple_var_assignment_401348', subscript_call_result_403786)
    
    # Assigning a Subscript to a Name (line 597):
    
    # Obtaining the type of the subscript
    int_403787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 12), 'int')
    
    # Call to svds(...): (line 597)
    # Processing the call arguments (line 597)
    # Getting the type of 'm' (line 597)
    m_403789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 31), 'm', False)
    # Getting the type of 'k' (line 597)
    k_403790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 34), 'k', False)
    # Processing the call keyword arguments (line 597)
    kwargs_403791 = {}
    # Getting the type of 'svds' (line 597)
    svds_403788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 26), 'svds', False)
    # Calling svds(args, kwargs) (line 597)
    svds_call_result_403792 = invoke(stypy.reporting.localization.Localization(__file__, 597, 26), svds_403788, *[m_403789, k_403790], **kwargs_403791)
    
    # Obtaining the member '__getitem__' of a type (line 597)
    getitem___403793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 12), svds_call_result_403792, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 597)
    subscript_call_result_403794 = invoke(stypy.reporting.localization.Localization(__file__, 597, 12), getitem___403793, int_403787)
    
    # Assigning a type to the variable 'tuple_var_assignment_401349' (line 597)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'tuple_var_assignment_401349', subscript_call_result_403794)
    
    # Assigning a Subscript to a Name (line 597):
    
    # Obtaining the type of the subscript
    int_403795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 12), 'int')
    
    # Call to svds(...): (line 597)
    # Processing the call arguments (line 597)
    # Getting the type of 'm' (line 597)
    m_403797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 31), 'm', False)
    # Getting the type of 'k' (line 597)
    k_403798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 34), 'k', False)
    # Processing the call keyword arguments (line 597)
    kwargs_403799 = {}
    # Getting the type of 'svds' (line 597)
    svds_403796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 26), 'svds', False)
    # Calling svds(args, kwargs) (line 597)
    svds_call_result_403800 = invoke(stypy.reporting.localization.Localization(__file__, 597, 26), svds_403796, *[m_403797, k_403798], **kwargs_403799)
    
    # Obtaining the member '__getitem__' of a type (line 597)
    getitem___403801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 12), svds_call_result_403800, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 597)
    subscript_call_result_403802 = invoke(stypy.reporting.localization.Localization(__file__, 597, 12), getitem___403801, int_403795)
    
    # Assigning a type to the variable 'tuple_var_assignment_401350' (line 597)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'tuple_var_assignment_401350', subscript_call_result_403802)
    
    # Assigning a Name to a Name (line 597):
    # Getting the type of 'tuple_var_assignment_401348' (line 597)
    tuple_var_assignment_401348_403803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'tuple_var_assignment_401348')
    # Assigning a type to the variable 'su' (line 597)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'su', tuple_var_assignment_401348_403803)
    
    # Assigning a Name to a Name (line 597):
    # Getting the type of 'tuple_var_assignment_401349' (line 597)
    tuple_var_assignment_401349_403804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'tuple_var_assignment_401349')
    # Assigning a type to the variable 'ss' (line 597)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 16), 'ss', tuple_var_assignment_401349_403804)
    
    # Assigning a Name to a Name (line 597):
    # Getting the type of 'tuple_var_assignment_401350' (line 597)
    tuple_var_assignment_401350_403805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'tuple_var_assignment_401350')
    # Assigning a type to the variable 'svh' (line 597)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 20), 'svh', tuple_var_assignment_401350_403805)
    
    # Assigning a Call to a Name (line 599):
    
    # Assigning a Call to a Name (line 599):
    
    # Call to svd_estimate(...): (line 599)
    # Processing the call arguments (line 599)
    # Getting the type of 'u' (line 599)
    u_403807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 33), 'u', False)
    # Getting the type of 's' (line 599)
    s_403808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 36), 's', False)
    # Getting the type of 'vh' (line 599)
    vh_403809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 39), 'vh', False)
    # Processing the call keyword arguments (line 599)
    kwargs_403810 = {}
    # Getting the type of 'svd_estimate' (line 599)
    svd_estimate_403806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 20), 'svd_estimate', False)
    # Calling svd_estimate(args, kwargs) (line 599)
    svd_estimate_call_result_403811 = invoke(stypy.reporting.localization.Localization(__file__, 599, 20), svd_estimate_403806, *[u_403807, s_403808, vh_403809], **kwargs_403810)
    
    # Assigning a type to the variable 'm_hat' (line 599)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 12), 'm_hat', svd_estimate_call_result_403811)
    
    # Assigning a Call to a Name (line 600):
    
    # Assigning a Call to a Name (line 600):
    
    # Call to svd_estimate(...): (line 600)
    # Processing the call arguments (line 600)
    # Getting the type of 'su' (line 600)
    su_403813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 34), 'su', False)
    # Getting the type of 'ss' (line 600)
    ss_403814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 38), 'ss', False)
    # Getting the type of 'svh' (line 600)
    svh_403815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 42), 'svh', False)
    # Processing the call keyword arguments (line 600)
    kwargs_403816 = {}
    # Getting the type of 'svd_estimate' (line 600)
    svd_estimate_403812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 21), 'svd_estimate', False)
    # Calling svd_estimate(args, kwargs) (line 600)
    svd_estimate_call_result_403817 = invoke(stypy.reporting.localization.Localization(__file__, 600, 21), svd_estimate_403812, *[su_403813, ss_403814, svh_403815], **kwargs_403816)
    
    # Assigning a type to the variable 'sm_hat' (line 600)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 600, 12), 'sm_hat', svd_estimate_call_result_403817)
    
    # Call to assert_array_almost_equal_nulp(...): (line 602)
    # Processing the call arguments (line 602)
    # Getting the type of 'm_hat' (line 602)
    m_hat_403819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 43), 'm_hat', False)
    # Getting the type of 'sm_hat' (line 602)
    sm_hat_403820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 50), 'sm_hat', False)
    # Processing the call keyword arguments (line 602)
    int_403821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 602, 63), 'int')
    keyword_403822 = int_403821
    kwargs_403823 = {'nulp': keyword_403822}
    # Getting the type of 'assert_array_almost_equal_nulp' (line 602)
    assert_array_almost_equal_nulp_403818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 12), 'assert_array_almost_equal_nulp', False)
    # Calling assert_array_almost_equal_nulp(args, kwargs) (line 602)
    assert_array_almost_equal_nulp_call_result_403824 = invoke(stypy.reporting.localization.Localization(__file__, 602, 12), assert_array_almost_equal_nulp_403818, *[m_hat_403819, sm_hat_403820], **kwargs_403823)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_svd_simple_complex(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_simple_complex' in the type store
    # Getting the type of 'stypy_return_type' (line 583)
    stypy_return_type_403825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403825)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_simple_complex'
    return stypy_return_type_403825

# Assigning a type to the variable 'test_svd_simple_complex' (line 583)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 0), 'test_svd_simple_complex', test_svd_simple_complex)

@norecursion
def test_svd_maxiter(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_maxiter'
    module_type_store = module_type_store.open_function_context('test_svd_maxiter', 605, 0, False)
    
    # Passed parameters checking function
    test_svd_maxiter.stypy_localization = localization
    test_svd_maxiter.stypy_type_of_self = None
    test_svd_maxiter.stypy_type_store = module_type_store
    test_svd_maxiter.stypy_function_name = 'test_svd_maxiter'
    test_svd_maxiter.stypy_param_names_list = []
    test_svd_maxiter.stypy_varargs_param_name = None
    test_svd_maxiter.stypy_kwargs_param_name = None
    test_svd_maxiter.stypy_call_defaults = defaults
    test_svd_maxiter.stypy_call_varargs = varargs
    test_svd_maxiter.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_maxiter', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_maxiter', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_maxiter(...)' code ##################

    
    # Assigning a Call to a Name (line 607):
    
    # Assigning a Call to a Name (line 607):
    
    # Call to hilbert(...): (line 607)
    # Processing the call arguments (line 607)
    int_403827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 16), 'int')
    # Processing the call keyword arguments (line 607)
    kwargs_403828 = {}
    # Getting the type of 'hilbert' (line 607)
    hilbert_403826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 8), 'hilbert', False)
    # Calling hilbert(args, kwargs) (line 607)
    hilbert_call_result_403829 = invoke(stypy.reporting.localization.Localization(__file__, 607, 8), hilbert_403826, *[int_403827], **kwargs_403828)
    
    # Assigning a type to the variable 'x' (line 607)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 607, 4), 'x', hilbert_call_result_403829)
    
    # Call to assert_raises(...): (line 610)
    # Processing the call arguments (line 610)
    # Getting the type of 'ArpackNoConvergence' (line 610)
    ArpackNoConvergence_403831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 18), 'ArpackNoConvergence', False)
    # Getting the type of 'svds' (line 610)
    svds_403832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 39), 'svds', False)
    # Getting the type of 'x' (line 610)
    x_403833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 45), 'x', False)
    int_403834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 48), 'int')
    # Processing the call keyword arguments (line 610)
    int_403835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 59), 'int')
    keyword_403836 = int_403835
    int_403837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 66), 'int')
    keyword_403838 = int_403837
    kwargs_403839 = {'ncv': keyword_403838, 'maxiter': keyword_403836}
    # Getting the type of 'assert_raises' (line 610)
    assert_raises_403830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 610)
    assert_raises_call_result_403840 = invoke(stypy.reporting.localization.Localization(__file__, 610, 4), assert_raises_403830, *[ArpackNoConvergence_403831, svds_403832, x_403833, int_403834], **kwargs_403839)
    
    
    # Assigning a Call to a Tuple (line 612):
    
    # Assigning a Subscript to a Name (line 612):
    
    # Obtaining the type of the subscript
    int_403841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 4), 'int')
    
    # Call to svds(...): (line 612)
    # Processing the call arguments (line 612)
    # Getting the type of 'x' (line 612)
    x_403843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 20), 'x', False)
    int_403844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 23), 'int')
    # Processing the call keyword arguments (line 612)
    int_403845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 34), 'int')
    keyword_403846 = int_403845
    int_403847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 43), 'int')
    keyword_403848 = int_403847
    kwargs_403849 = {'ncv': keyword_403848, 'maxiter': keyword_403846}
    # Getting the type of 'svds' (line 612)
    svds_403842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 15), 'svds', False)
    # Calling svds(args, kwargs) (line 612)
    svds_call_result_403850 = invoke(stypy.reporting.localization.Localization(__file__, 612, 15), svds_403842, *[x_403843, int_403844], **kwargs_403849)
    
    # Obtaining the member '__getitem__' of a type (line 612)
    getitem___403851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 4), svds_call_result_403850, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 612)
    subscript_call_result_403852 = invoke(stypy.reporting.localization.Localization(__file__, 612, 4), getitem___403851, int_403841)
    
    # Assigning a type to the variable 'tuple_var_assignment_401351' (line 612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'tuple_var_assignment_401351', subscript_call_result_403852)
    
    # Assigning a Subscript to a Name (line 612):
    
    # Obtaining the type of the subscript
    int_403853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 4), 'int')
    
    # Call to svds(...): (line 612)
    # Processing the call arguments (line 612)
    # Getting the type of 'x' (line 612)
    x_403855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 20), 'x', False)
    int_403856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 23), 'int')
    # Processing the call keyword arguments (line 612)
    int_403857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 34), 'int')
    keyword_403858 = int_403857
    int_403859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 43), 'int')
    keyword_403860 = int_403859
    kwargs_403861 = {'ncv': keyword_403860, 'maxiter': keyword_403858}
    # Getting the type of 'svds' (line 612)
    svds_403854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 15), 'svds', False)
    # Calling svds(args, kwargs) (line 612)
    svds_call_result_403862 = invoke(stypy.reporting.localization.Localization(__file__, 612, 15), svds_403854, *[x_403855, int_403856], **kwargs_403861)
    
    # Obtaining the member '__getitem__' of a type (line 612)
    getitem___403863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 4), svds_call_result_403862, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 612)
    subscript_call_result_403864 = invoke(stypy.reporting.localization.Localization(__file__, 612, 4), getitem___403863, int_403853)
    
    # Assigning a type to the variable 'tuple_var_assignment_401352' (line 612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'tuple_var_assignment_401352', subscript_call_result_403864)
    
    # Assigning a Subscript to a Name (line 612):
    
    # Obtaining the type of the subscript
    int_403865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 4), 'int')
    
    # Call to svds(...): (line 612)
    # Processing the call arguments (line 612)
    # Getting the type of 'x' (line 612)
    x_403867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 20), 'x', False)
    int_403868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 23), 'int')
    # Processing the call keyword arguments (line 612)
    int_403869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 34), 'int')
    keyword_403870 = int_403869
    int_403871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 43), 'int')
    keyword_403872 = int_403871
    kwargs_403873 = {'ncv': keyword_403872, 'maxiter': keyword_403870}
    # Getting the type of 'svds' (line 612)
    svds_403866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 15), 'svds', False)
    # Calling svds(args, kwargs) (line 612)
    svds_call_result_403874 = invoke(stypy.reporting.localization.Localization(__file__, 612, 15), svds_403866, *[x_403867, int_403868], **kwargs_403873)
    
    # Obtaining the member '__getitem__' of a type (line 612)
    getitem___403875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 4), svds_call_result_403874, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 612)
    subscript_call_result_403876 = invoke(stypy.reporting.localization.Localization(__file__, 612, 4), getitem___403875, int_403865)
    
    # Assigning a type to the variable 'tuple_var_assignment_401353' (line 612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'tuple_var_assignment_401353', subscript_call_result_403876)
    
    # Assigning a Name to a Name (line 612):
    # Getting the type of 'tuple_var_assignment_401351' (line 612)
    tuple_var_assignment_401351_403877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'tuple_var_assignment_401351')
    # Assigning a type to the variable 'u' (line 612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'u', tuple_var_assignment_401351_403877)
    
    # Assigning a Name to a Name (line 612):
    # Getting the type of 'tuple_var_assignment_401352' (line 612)
    tuple_var_assignment_401352_403878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'tuple_var_assignment_401352')
    # Assigning a type to the variable 's' (line 612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 7), 's', tuple_var_assignment_401352_403878)
    
    # Assigning a Name to a Name (line 612):
    # Getting the type of 'tuple_var_assignment_401353' (line 612)
    tuple_var_assignment_401353_403879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'tuple_var_assignment_401353')
    # Assigning a type to the variable 'vt' (line 612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 10), 'vt', tuple_var_assignment_401353_403879)
    
    # Call to assert_allclose(...): (line 613)
    # Processing the call arguments (line 613)
    # Getting the type of 's' (line 613)
    s_403881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 20), 's', False)
    
    # Obtaining an instance of the builtin type 'list' (line 613)
    list_403882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 23), 'list')
    # Adding type elements to the builtin type 'list' instance (line 613)
    # Adding element type (line 613)
    float_403883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 24), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 23), list_403882, float_403883)
    
    # Processing the call keyword arguments (line 613)
    float_403884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 35), 'float')
    keyword_403885 = float_403884
    kwargs_403886 = {'atol': keyword_403885}
    # Getting the type of 'assert_allclose' (line 613)
    assert_allclose_403880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 613)
    assert_allclose_call_result_403887 = invoke(stypy.reporting.localization.Localization(__file__, 613, 4), assert_allclose_403880, *[s_403881, list_403882], **kwargs_403886)
    
    
    # ################# End of 'test_svd_maxiter(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_maxiter' in the type store
    # Getting the type of 'stypy_return_type' (line 605)
    stypy_return_type_403888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403888)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_maxiter'
    return stypy_return_type_403888

# Assigning a type to the variable 'test_svd_maxiter' (line 605)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 605, 0), 'test_svd_maxiter', test_svd_maxiter)

@norecursion
def test_svd_return(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_return'
    module_type_store = module_type_store.open_function_context('test_svd_return', 616, 0, False)
    
    # Passed parameters checking function
    test_svd_return.stypy_localization = localization
    test_svd_return.stypy_type_of_self = None
    test_svd_return.stypy_type_store = module_type_store
    test_svd_return.stypy_function_name = 'test_svd_return'
    test_svd_return.stypy_param_names_list = []
    test_svd_return.stypy_varargs_param_name = None
    test_svd_return.stypy_kwargs_param_name = None
    test_svd_return.stypy_call_defaults = defaults
    test_svd_return.stypy_call_varargs = varargs
    test_svd_return.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_return', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_return', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_return(...)' code ##################

    
    # Assigning a Call to a Name (line 618):
    
    # Assigning a Call to a Name (line 618):
    
    # Call to hilbert(...): (line 618)
    # Processing the call arguments (line 618)
    int_403890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 16), 'int')
    # Processing the call keyword arguments (line 618)
    kwargs_403891 = {}
    # Getting the type of 'hilbert' (line 618)
    hilbert_403889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'hilbert', False)
    # Calling hilbert(args, kwargs) (line 618)
    hilbert_call_result_403892 = invoke(stypy.reporting.localization.Localization(__file__, 618, 8), hilbert_403889, *[int_403890], **kwargs_403891)
    
    # Assigning a type to the variable 'x' (line 618)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 4), 'x', hilbert_call_result_403892)
    
    # Assigning a Call to a Tuple (line 619):
    
    # Assigning a Subscript to a Name (line 619):
    
    # Obtaining the type of the subscript
    int_403893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 4), 'int')
    
    # Call to sorted_svd(...): (line 619)
    # Processing the call arguments (line 619)
    # Getting the type of 'x' (line 619)
    x_403895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 25), 'x', False)
    int_403896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 28), 'int')
    # Processing the call keyword arguments (line 619)
    kwargs_403897 = {}
    # Getting the type of 'sorted_svd' (line 619)
    sorted_svd_403894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 14), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 619)
    sorted_svd_call_result_403898 = invoke(stypy.reporting.localization.Localization(__file__, 619, 14), sorted_svd_403894, *[x_403895, int_403896], **kwargs_403897)
    
    # Obtaining the member '__getitem__' of a type (line 619)
    getitem___403899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 4), sorted_svd_call_result_403898, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 619)
    subscript_call_result_403900 = invoke(stypy.reporting.localization.Localization(__file__, 619, 4), getitem___403899, int_403893)
    
    # Assigning a type to the variable 'tuple_var_assignment_401354' (line 619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 4), 'tuple_var_assignment_401354', subscript_call_result_403900)
    
    # Assigning a Subscript to a Name (line 619):
    
    # Obtaining the type of the subscript
    int_403901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 4), 'int')
    
    # Call to sorted_svd(...): (line 619)
    # Processing the call arguments (line 619)
    # Getting the type of 'x' (line 619)
    x_403903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 25), 'x', False)
    int_403904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 28), 'int')
    # Processing the call keyword arguments (line 619)
    kwargs_403905 = {}
    # Getting the type of 'sorted_svd' (line 619)
    sorted_svd_403902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 14), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 619)
    sorted_svd_call_result_403906 = invoke(stypy.reporting.localization.Localization(__file__, 619, 14), sorted_svd_403902, *[x_403903, int_403904], **kwargs_403905)
    
    # Obtaining the member '__getitem__' of a type (line 619)
    getitem___403907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 4), sorted_svd_call_result_403906, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 619)
    subscript_call_result_403908 = invoke(stypy.reporting.localization.Localization(__file__, 619, 4), getitem___403907, int_403901)
    
    # Assigning a type to the variable 'tuple_var_assignment_401355' (line 619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 4), 'tuple_var_assignment_401355', subscript_call_result_403908)
    
    # Assigning a Subscript to a Name (line 619):
    
    # Obtaining the type of the subscript
    int_403909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 4), 'int')
    
    # Call to sorted_svd(...): (line 619)
    # Processing the call arguments (line 619)
    # Getting the type of 'x' (line 619)
    x_403911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 25), 'x', False)
    int_403912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 28), 'int')
    # Processing the call keyword arguments (line 619)
    kwargs_403913 = {}
    # Getting the type of 'sorted_svd' (line 619)
    sorted_svd_403910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 14), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 619)
    sorted_svd_call_result_403914 = invoke(stypy.reporting.localization.Localization(__file__, 619, 14), sorted_svd_403910, *[x_403911, int_403912], **kwargs_403913)
    
    # Obtaining the member '__getitem__' of a type (line 619)
    getitem___403915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 4), sorted_svd_call_result_403914, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 619)
    subscript_call_result_403916 = invoke(stypy.reporting.localization.Localization(__file__, 619, 4), getitem___403915, int_403909)
    
    # Assigning a type to the variable 'tuple_var_assignment_401356' (line 619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 4), 'tuple_var_assignment_401356', subscript_call_result_403916)
    
    # Assigning a Name to a Name (line 619):
    # Getting the type of 'tuple_var_assignment_401354' (line 619)
    tuple_var_assignment_401354_403917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 4), 'tuple_var_assignment_401354')
    # Assigning a type to the variable '_' (line 619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 4), '_', tuple_var_assignment_401354_403917)
    
    # Assigning a Name to a Name (line 619):
    # Getting the type of 'tuple_var_assignment_401355' (line 619)
    tuple_var_assignment_401355_403918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 4), 'tuple_var_assignment_401355')
    # Assigning a type to the variable 's' (line 619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 7), 's', tuple_var_assignment_401355_403918)
    
    # Assigning a Name to a Name (line 619):
    # Getting the type of 'tuple_var_assignment_401356' (line 619)
    tuple_var_assignment_401356_403919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 4), 'tuple_var_assignment_401356')
    # Assigning a type to the variable '_' (line 619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 10), '_', tuple_var_assignment_401356_403919)
    
    # Assigning a Call to a Name (line 620):
    
    # Assigning a Call to a Name (line 620):
    
    # Call to svds(...): (line 620)
    # Processing the call arguments (line 620)
    # Getting the type of 'x' (line 620)
    x_403921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 14), 'x', False)
    int_403922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 17), 'int')
    # Processing the call keyword arguments (line 620)
    # Getting the type of 'False' (line 620)
    False_403923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 44), 'False', False)
    keyword_403924 = False_403923
    kwargs_403925 = {'return_singular_vectors': keyword_403924}
    # Getting the type of 'svds' (line 620)
    svds_403920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 9), 'svds', False)
    # Calling svds(args, kwargs) (line 620)
    svds_call_result_403926 = invoke(stypy.reporting.localization.Localization(__file__, 620, 9), svds_403920, *[x_403921, int_403922], **kwargs_403925)
    
    # Assigning a type to the variable 'ss' (line 620)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 620, 4), 'ss', svds_call_result_403926)
    
    # Call to assert_allclose(...): (line 621)
    # Processing the call arguments (line 621)
    # Getting the type of 's' (line 621)
    s_403928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 20), 's', False)
    # Getting the type of 'ss' (line 621)
    ss_403929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 23), 'ss', False)
    # Processing the call keyword arguments (line 621)
    kwargs_403930 = {}
    # Getting the type of 'assert_allclose' (line 621)
    assert_allclose_403927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 621)
    assert_allclose_call_result_403931 = invoke(stypy.reporting.localization.Localization(__file__, 621, 4), assert_allclose_403927, *[s_403928, ss_403929], **kwargs_403930)
    
    
    # ################# End of 'test_svd_return(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_return' in the type store
    # Getting the type of 'stypy_return_type' (line 616)
    stypy_return_type_403932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403932)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_return'
    return stypy_return_type_403932

# Assigning a type to the variable 'test_svd_return' (line 616)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 0), 'test_svd_return', test_svd_return)

@norecursion
def test_svd_which(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_which'
    module_type_store = module_type_store.open_function_context('test_svd_which', 624, 0, False)
    
    # Passed parameters checking function
    test_svd_which.stypy_localization = localization
    test_svd_which.stypy_type_of_self = None
    test_svd_which.stypy_type_store = module_type_store
    test_svd_which.stypy_function_name = 'test_svd_which'
    test_svd_which.stypy_param_names_list = []
    test_svd_which.stypy_varargs_param_name = None
    test_svd_which.stypy_kwargs_param_name = None
    test_svd_which.stypy_call_defaults = defaults
    test_svd_which.stypy_call_varargs = varargs
    test_svd_which.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_which', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_which', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_which(...)' code ##################

    
    # Assigning a Call to a Name (line 626):
    
    # Assigning a Call to a Name (line 626):
    
    # Call to hilbert(...): (line 626)
    # Processing the call arguments (line 626)
    int_403934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 16), 'int')
    # Processing the call keyword arguments (line 626)
    kwargs_403935 = {}
    # Getting the type of 'hilbert' (line 626)
    hilbert_403933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'hilbert', False)
    # Calling hilbert(args, kwargs) (line 626)
    hilbert_call_result_403936 = invoke(stypy.reporting.localization.Localization(__file__, 626, 8), hilbert_403933, *[int_403934], **kwargs_403935)
    
    # Assigning a type to the variable 'x' (line 626)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 4), 'x', hilbert_call_result_403936)
    
    
    # Obtaining an instance of the builtin type 'list' (line 627)
    list_403937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 627)
    # Adding element type (line 627)
    str_403938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 18), 'str', 'LM')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 627, 17), list_403937, str_403938)
    # Adding element type (line 627)
    str_403939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 24), 'str', 'SM')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 627, 17), list_403937, str_403939)
    
    # Testing the type of a for loop iterable (line 627)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 627, 4), list_403937)
    # Getting the type of the for loop variable (line 627)
    for_loop_var_403940 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 627, 4), list_403937)
    # Assigning a type to the variable 'which' (line 627)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 4), 'which', for_loop_var_403940)
    # SSA begins for a for statement (line 627)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Tuple (line 628):
    
    # Assigning a Subscript to a Name (line 628):
    
    # Obtaining the type of the subscript
    int_403941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 8), 'int')
    
    # Call to sorted_svd(...): (line 628)
    # Processing the call arguments (line 628)
    # Getting the type of 'x' (line 628)
    x_403943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 29), 'x', False)
    int_403944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 32), 'int')
    # Processing the call keyword arguments (line 628)
    # Getting the type of 'which' (line 628)
    which_403945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 41), 'which', False)
    keyword_403946 = which_403945
    kwargs_403947 = {'which': keyword_403946}
    # Getting the type of 'sorted_svd' (line 628)
    sorted_svd_403942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 18), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 628)
    sorted_svd_call_result_403948 = invoke(stypy.reporting.localization.Localization(__file__, 628, 18), sorted_svd_403942, *[x_403943, int_403944], **kwargs_403947)
    
    # Obtaining the member '__getitem__' of a type (line 628)
    getitem___403949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 8), sorted_svd_call_result_403948, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 628)
    subscript_call_result_403950 = invoke(stypy.reporting.localization.Localization(__file__, 628, 8), getitem___403949, int_403941)
    
    # Assigning a type to the variable 'tuple_var_assignment_401357' (line 628)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'tuple_var_assignment_401357', subscript_call_result_403950)
    
    # Assigning a Subscript to a Name (line 628):
    
    # Obtaining the type of the subscript
    int_403951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 8), 'int')
    
    # Call to sorted_svd(...): (line 628)
    # Processing the call arguments (line 628)
    # Getting the type of 'x' (line 628)
    x_403953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 29), 'x', False)
    int_403954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 32), 'int')
    # Processing the call keyword arguments (line 628)
    # Getting the type of 'which' (line 628)
    which_403955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 41), 'which', False)
    keyword_403956 = which_403955
    kwargs_403957 = {'which': keyword_403956}
    # Getting the type of 'sorted_svd' (line 628)
    sorted_svd_403952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 18), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 628)
    sorted_svd_call_result_403958 = invoke(stypy.reporting.localization.Localization(__file__, 628, 18), sorted_svd_403952, *[x_403953, int_403954], **kwargs_403957)
    
    # Obtaining the member '__getitem__' of a type (line 628)
    getitem___403959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 8), sorted_svd_call_result_403958, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 628)
    subscript_call_result_403960 = invoke(stypy.reporting.localization.Localization(__file__, 628, 8), getitem___403959, int_403951)
    
    # Assigning a type to the variable 'tuple_var_assignment_401358' (line 628)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'tuple_var_assignment_401358', subscript_call_result_403960)
    
    # Assigning a Subscript to a Name (line 628):
    
    # Obtaining the type of the subscript
    int_403961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 8), 'int')
    
    # Call to sorted_svd(...): (line 628)
    # Processing the call arguments (line 628)
    # Getting the type of 'x' (line 628)
    x_403963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 29), 'x', False)
    int_403964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 32), 'int')
    # Processing the call keyword arguments (line 628)
    # Getting the type of 'which' (line 628)
    which_403965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 41), 'which', False)
    keyword_403966 = which_403965
    kwargs_403967 = {'which': keyword_403966}
    # Getting the type of 'sorted_svd' (line 628)
    sorted_svd_403962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 18), 'sorted_svd', False)
    # Calling sorted_svd(args, kwargs) (line 628)
    sorted_svd_call_result_403968 = invoke(stypy.reporting.localization.Localization(__file__, 628, 18), sorted_svd_403962, *[x_403963, int_403964], **kwargs_403967)
    
    # Obtaining the member '__getitem__' of a type (line 628)
    getitem___403969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 8), sorted_svd_call_result_403968, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 628)
    subscript_call_result_403970 = invoke(stypy.reporting.localization.Localization(__file__, 628, 8), getitem___403969, int_403961)
    
    # Assigning a type to the variable 'tuple_var_assignment_401359' (line 628)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'tuple_var_assignment_401359', subscript_call_result_403970)
    
    # Assigning a Name to a Name (line 628):
    # Getting the type of 'tuple_var_assignment_401357' (line 628)
    tuple_var_assignment_401357_403971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'tuple_var_assignment_401357')
    # Assigning a type to the variable '_' (line 628)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), '_', tuple_var_assignment_401357_403971)
    
    # Assigning a Name to a Name (line 628):
    # Getting the type of 'tuple_var_assignment_401358' (line 628)
    tuple_var_assignment_401358_403972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'tuple_var_assignment_401358')
    # Assigning a type to the variable 's' (line 628)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 11), 's', tuple_var_assignment_401358_403972)
    
    # Assigning a Name to a Name (line 628):
    # Getting the type of 'tuple_var_assignment_401359' (line 628)
    tuple_var_assignment_401359_403973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'tuple_var_assignment_401359')
    # Assigning a type to the variable '_' (line 628)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 14), '_', tuple_var_assignment_401359_403973)
    
    # Assigning a Call to a Name (line 629):
    
    # Assigning a Call to a Name (line 629):
    
    # Call to svds(...): (line 629)
    # Processing the call arguments (line 629)
    # Getting the type of 'x' (line 629)
    x_403975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 18), 'x', False)
    int_403976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 21), 'int')
    # Processing the call keyword arguments (line 629)
    # Getting the type of 'which' (line 629)
    which_403977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 30), 'which', False)
    keyword_403978 = which_403977
    # Getting the type of 'False' (line 629)
    False_403979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 61), 'False', False)
    keyword_403980 = False_403979
    kwargs_403981 = {'return_singular_vectors': keyword_403980, 'which': keyword_403978}
    # Getting the type of 'svds' (line 629)
    svds_403974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 13), 'svds', False)
    # Calling svds(args, kwargs) (line 629)
    svds_call_result_403982 = invoke(stypy.reporting.localization.Localization(__file__, 629, 13), svds_403974, *[x_403975, int_403976], **kwargs_403981)
    
    # Assigning a type to the variable 'ss' (line 629)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 629, 8), 'ss', svds_call_result_403982)
    
    # Call to sort(...): (line 630)
    # Processing the call keyword arguments (line 630)
    kwargs_403985 = {}
    # Getting the type of 'ss' (line 630)
    ss_403983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'ss', False)
    # Obtaining the member 'sort' of a type (line 630)
    sort_403984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 8), ss_403983, 'sort')
    # Calling sort(args, kwargs) (line 630)
    sort_call_result_403986 = invoke(stypy.reporting.localization.Localization(__file__, 630, 8), sort_403984, *[], **kwargs_403985)
    
    
    # Call to assert_allclose(...): (line 631)
    # Processing the call arguments (line 631)
    # Getting the type of 's' (line 631)
    s_403988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 24), 's', False)
    # Getting the type of 'ss' (line 631)
    ss_403989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 27), 'ss', False)
    # Processing the call keyword arguments (line 631)
    
    # Call to sqrt(...): (line 631)
    # Processing the call arguments (line 631)
    float_403992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 44), 'float')
    # Processing the call keyword arguments (line 631)
    kwargs_403993 = {}
    # Getting the type of 'np' (line 631)
    np_403990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 36), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 631)
    sqrt_403991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 36), np_403990, 'sqrt')
    # Calling sqrt(args, kwargs) (line 631)
    sqrt_call_result_403994 = invoke(stypy.reporting.localization.Localization(__file__, 631, 36), sqrt_403991, *[float_403992], **kwargs_403993)
    
    keyword_403995 = sqrt_call_result_403994
    kwargs_403996 = {'atol': keyword_403995}
    # Getting the type of 'assert_allclose' (line 631)
    assert_allclose_403987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 631)
    assert_allclose_call_result_403997 = invoke(stypy.reporting.localization.Localization(__file__, 631, 8), assert_allclose_403987, *[s_403988, ss_403989], **kwargs_403996)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_svd_which(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_which' in the type store
    # Getting the type of 'stypy_return_type' (line 624)
    stypy_return_type_403998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_403998)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_which'
    return stypy_return_type_403998

# Assigning a type to the variable 'test_svd_which' (line 624)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 624, 0), 'test_svd_which', test_svd_which)

@norecursion
def test_svd_v0(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_v0'
    module_type_store = module_type_store.open_function_context('test_svd_v0', 634, 0, False)
    
    # Passed parameters checking function
    test_svd_v0.stypy_localization = localization
    test_svd_v0.stypy_type_of_self = None
    test_svd_v0.stypy_type_store = module_type_store
    test_svd_v0.stypy_function_name = 'test_svd_v0'
    test_svd_v0.stypy_param_names_list = []
    test_svd_v0.stypy_varargs_param_name = None
    test_svd_v0.stypy_kwargs_param_name = None
    test_svd_v0.stypy_call_defaults = defaults
    test_svd_v0.stypy_call_varargs = varargs
    test_svd_v0.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_v0', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_v0', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_v0(...)' code ##################

    
    # Assigning a Call to a Name (line 636):
    
    # Assigning a Call to a Name (line 636):
    
    # Call to array(...): (line 636)
    # Processing the call arguments (line 636)
    
    # Obtaining an instance of the builtin type 'list' (line 636)
    list_404001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 636)
    # Adding element type (line 636)
    
    # Obtaining an instance of the builtin type 'list' (line 636)
    list_404002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 636)
    # Adding element type (line 636)
    int_404003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 18), list_404002, int_404003)
    # Adding element type (line 636)
    int_404004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 18), list_404002, int_404004)
    # Adding element type (line 636)
    int_404005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 18), list_404002, int_404005)
    # Adding element type (line 636)
    int_404006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 18), list_404002, int_404006)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 17), list_404001, list_404002)
    # Adding element type (line 636)
    
    # Obtaining an instance of the builtin type 'list' (line 636)
    list_404007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 32), 'list')
    # Adding type elements to the builtin type 'list' instance (line 636)
    # Adding element type (line 636)
    int_404008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 33), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 32), list_404007, int_404008)
    # Adding element type (line 636)
    int_404009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 36), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 32), list_404007, int_404009)
    # Adding element type (line 636)
    int_404010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 39), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 32), list_404007, int_404010)
    # Adding element type (line 636)
    int_404011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 42), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 32), list_404007, int_404011)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 17), list_404001, list_404007)
    
    # Getting the type of 'float' (line 636)
    float_404012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 47), 'float', False)
    # Processing the call keyword arguments (line 636)
    kwargs_404013 = {}
    # Getting the type of 'np' (line 636)
    np_403999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 8), 'np', False)
    # Obtaining the member 'array' of a type (line 636)
    array_404000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 636, 8), np_403999, 'array')
    # Calling array(args, kwargs) (line 636)
    array_call_result_404014 = invoke(stypy.reporting.localization.Localization(__file__, 636, 8), array_404000, *[list_404001, float_404012], **kwargs_404013)
    
    # Assigning a type to the variable 'x' (line 636)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 4), 'x', array_call_result_404014)
    
    # Assigning a Call to a Tuple (line 638):
    
    # Assigning a Subscript to a Name (line 638):
    
    # Obtaining the type of the subscript
    int_404015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 4), 'int')
    
    # Call to svds(...): (line 638)
    # Processing the call arguments (line 638)
    # Getting the type of 'x' (line 638)
    x_404017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 20), 'x', False)
    int_404018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 23), 'int')
    # Processing the call keyword arguments (line 638)
    kwargs_404019 = {}
    # Getting the type of 'svds' (line 638)
    svds_404016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 15), 'svds', False)
    # Calling svds(args, kwargs) (line 638)
    svds_call_result_404020 = invoke(stypy.reporting.localization.Localization(__file__, 638, 15), svds_404016, *[x_404017, int_404018], **kwargs_404019)
    
    # Obtaining the member '__getitem__' of a type (line 638)
    getitem___404021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 4), svds_call_result_404020, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 638)
    subscript_call_result_404022 = invoke(stypy.reporting.localization.Localization(__file__, 638, 4), getitem___404021, int_404015)
    
    # Assigning a type to the variable 'tuple_var_assignment_401360' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'tuple_var_assignment_401360', subscript_call_result_404022)
    
    # Assigning a Subscript to a Name (line 638):
    
    # Obtaining the type of the subscript
    int_404023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 4), 'int')
    
    # Call to svds(...): (line 638)
    # Processing the call arguments (line 638)
    # Getting the type of 'x' (line 638)
    x_404025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 20), 'x', False)
    int_404026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 23), 'int')
    # Processing the call keyword arguments (line 638)
    kwargs_404027 = {}
    # Getting the type of 'svds' (line 638)
    svds_404024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 15), 'svds', False)
    # Calling svds(args, kwargs) (line 638)
    svds_call_result_404028 = invoke(stypy.reporting.localization.Localization(__file__, 638, 15), svds_404024, *[x_404025, int_404026], **kwargs_404027)
    
    # Obtaining the member '__getitem__' of a type (line 638)
    getitem___404029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 4), svds_call_result_404028, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 638)
    subscript_call_result_404030 = invoke(stypy.reporting.localization.Localization(__file__, 638, 4), getitem___404029, int_404023)
    
    # Assigning a type to the variable 'tuple_var_assignment_401361' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'tuple_var_assignment_401361', subscript_call_result_404030)
    
    # Assigning a Subscript to a Name (line 638):
    
    # Obtaining the type of the subscript
    int_404031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 4), 'int')
    
    # Call to svds(...): (line 638)
    # Processing the call arguments (line 638)
    # Getting the type of 'x' (line 638)
    x_404033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 20), 'x', False)
    int_404034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 23), 'int')
    # Processing the call keyword arguments (line 638)
    kwargs_404035 = {}
    # Getting the type of 'svds' (line 638)
    svds_404032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 15), 'svds', False)
    # Calling svds(args, kwargs) (line 638)
    svds_call_result_404036 = invoke(stypy.reporting.localization.Localization(__file__, 638, 15), svds_404032, *[x_404033, int_404034], **kwargs_404035)
    
    # Obtaining the member '__getitem__' of a type (line 638)
    getitem___404037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 4), svds_call_result_404036, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 638)
    subscript_call_result_404038 = invoke(stypy.reporting.localization.Localization(__file__, 638, 4), getitem___404037, int_404031)
    
    # Assigning a type to the variable 'tuple_var_assignment_401362' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'tuple_var_assignment_401362', subscript_call_result_404038)
    
    # Assigning a Name to a Name (line 638):
    # Getting the type of 'tuple_var_assignment_401360' (line 638)
    tuple_var_assignment_401360_404039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'tuple_var_assignment_401360')
    # Assigning a type to the variable 'u' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'u', tuple_var_assignment_401360_404039)
    
    # Assigning a Name to a Name (line 638):
    # Getting the type of 'tuple_var_assignment_401361' (line 638)
    tuple_var_assignment_401361_404040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'tuple_var_assignment_401361')
    # Assigning a type to the variable 's' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 7), 's', tuple_var_assignment_401361_404040)
    
    # Assigning a Name to a Name (line 638):
    # Getting the type of 'tuple_var_assignment_401362' (line 638)
    tuple_var_assignment_401362_404041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 4), 'tuple_var_assignment_401362')
    # Assigning a type to the variable 'vh' (line 638)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 638, 10), 'vh', tuple_var_assignment_401362_404041)
    
    # Assigning a Call to a Tuple (line 639):
    
    # Assigning a Subscript to a Name (line 639):
    
    # Obtaining the type of the subscript
    int_404042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 4), 'int')
    
    # Call to svds(...): (line 639)
    # Processing the call arguments (line 639)
    # Getting the type of 'x' (line 639)
    x_404044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 23), 'x', False)
    int_404045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 26), 'int')
    # Processing the call keyword arguments (line 639)
    
    # Obtaining the type of the subscript
    slice_404046 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 639, 32), None, None, None)
    int_404047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 36), 'int')
    # Getting the type of 'u' (line 639)
    u_404048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 32), 'u', False)
    # Obtaining the member '__getitem__' of a type (line 639)
    getitem___404049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 32), u_404048, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 639)
    subscript_call_result_404050 = invoke(stypy.reporting.localization.Localization(__file__, 639, 32), getitem___404049, (slice_404046, int_404047))
    
    keyword_404051 = subscript_call_result_404050
    kwargs_404052 = {'v0': keyword_404051}
    # Getting the type of 'svds' (line 639)
    svds_404043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 18), 'svds', False)
    # Calling svds(args, kwargs) (line 639)
    svds_call_result_404053 = invoke(stypy.reporting.localization.Localization(__file__, 639, 18), svds_404043, *[x_404044, int_404045], **kwargs_404052)
    
    # Obtaining the member '__getitem__' of a type (line 639)
    getitem___404054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 4), svds_call_result_404053, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 639)
    subscript_call_result_404055 = invoke(stypy.reporting.localization.Localization(__file__, 639, 4), getitem___404054, int_404042)
    
    # Assigning a type to the variable 'tuple_var_assignment_401363' (line 639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'tuple_var_assignment_401363', subscript_call_result_404055)
    
    # Assigning a Subscript to a Name (line 639):
    
    # Obtaining the type of the subscript
    int_404056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 4), 'int')
    
    # Call to svds(...): (line 639)
    # Processing the call arguments (line 639)
    # Getting the type of 'x' (line 639)
    x_404058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 23), 'x', False)
    int_404059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 26), 'int')
    # Processing the call keyword arguments (line 639)
    
    # Obtaining the type of the subscript
    slice_404060 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 639, 32), None, None, None)
    int_404061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 36), 'int')
    # Getting the type of 'u' (line 639)
    u_404062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 32), 'u', False)
    # Obtaining the member '__getitem__' of a type (line 639)
    getitem___404063 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 32), u_404062, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 639)
    subscript_call_result_404064 = invoke(stypy.reporting.localization.Localization(__file__, 639, 32), getitem___404063, (slice_404060, int_404061))
    
    keyword_404065 = subscript_call_result_404064
    kwargs_404066 = {'v0': keyword_404065}
    # Getting the type of 'svds' (line 639)
    svds_404057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 18), 'svds', False)
    # Calling svds(args, kwargs) (line 639)
    svds_call_result_404067 = invoke(stypy.reporting.localization.Localization(__file__, 639, 18), svds_404057, *[x_404058, int_404059], **kwargs_404066)
    
    # Obtaining the member '__getitem__' of a type (line 639)
    getitem___404068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 4), svds_call_result_404067, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 639)
    subscript_call_result_404069 = invoke(stypy.reporting.localization.Localization(__file__, 639, 4), getitem___404068, int_404056)
    
    # Assigning a type to the variable 'tuple_var_assignment_401364' (line 639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'tuple_var_assignment_401364', subscript_call_result_404069)
    
    # Assigning a Subscript to a Name (line 639):
    
    # Obtaining the type of the subscript
    int_404070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 4), 'int')
    
    # Call to svds(...): (line 639)
    # Processing the call arguments (line 639)
    # Getting the type of 'x' (line 639)
    x_404072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 23), 'x', False)
    int_404073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 26), 'int')
    # Processing the call keyword arguments (line 639)
    
    # Obtaining the type of the subscript
    slice_404074 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 639, 32), None, None, None)
    int_404075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 36), 'int')
    # Getting the type of 'u' (line 639)
    u_404076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 32), 'u', False)
    # Obtaining the member '__getitem__' of a type (line 639)
    getitem___404077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 32), u_404076, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 639)
    subscript_call_result_404078 = invoke(stypy.reporting.localization.Localization(__file__, 639, 32), getitem___404077, (slice_404074, int_404075))
    
    keyword_404079 = subscript_call_result_404078
    kwargs_404080 = {'v0': keyword_404079}
    # Getting the type of 'svds' (line 639)
    svds_404071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 18), 'svds', False)
    # Calling svds(args, kwargs) (line 639)
    svds_call_result_404081 = invoke(stypy.reporting.localization.Localization(__file__, 639, 18), svds_404071, *[x_404072, int_404073], **kwargs_404080)
    
    # Obtaining the member '__getitem__' of a type (line 639)
    getitem___404082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 4), svds_call_result_404081, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 639)
    subscript_call_result_404083 = invoke(stypy.reporting.localization.Localization(__file__, 639, 4), getitem___404082, int_404070)
    
    # Assigning a type to the variable 'tuple_var_assignment_401365' (line 639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'tuple_var_assignment_401365', subscript_call_result_404083)
    
    # Assigning a Name to a Name (line 639):
    # Getting the type of 'tuple_var_assignment_401363' (line 639)
    tuple_var_assignment_401363_404084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'tuple_var_assignment_401363')
    # Assigning a type to the variable 'u2' (line 639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'u2', tuple_var_assignment_401363_404084)
    
    # Assigning a Name to a Name (line 639):
    # Getting the type of 'tuple_var_assignment_401364' (line 639)
    tuple_var_assignment_401364_404085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'tuple_var_assignment_401364')
    # Assigning a type to the variable 's2' (line 639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 's2', tuple_var_assignment_401364_404085)
    
    # Assigning a Name to a Name (line 639):
    # Getting the type of 'tuple_var_assignment_401365' (line 639)
    tuple_var_assignment_401365_404086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 4), 'tuple_var_assignment_401365')
    # Assigning a type to the variable 'vh2' (line 639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 12), 'vh2', tuple_var_assignment_401365_404086)
    
    # Call to assert_allclose(...): (line 641)
    # Processing the call arguments (line 641)
    # Getting the type of 's' (line 641)
    s_404088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 20), 's', False)
    # Getting the type of 's2' (line 641)
    s2_404089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 23), 's2', False)
    # Processing the call keyword arguments (line 641)
    
    # Call to sqrt(...): (line 641)
    # Processing the call arguments (line 641)
    float_404092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 40), 'float')
    # Processing the call keyword arguments (line 641)
    kwargs_404093 = {}
    # Getting the type of 'np' (line 641)
    np_404090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 32), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 641)
    sqrt_404091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 641, 32), np_404090, 'sqrt')
    # Calling sqrt(args, kwargs) (line 641)
    sqrt_call_result_404094 = invoke(stypy.reporting.localization.Localization(__file__, 641, 32), sqrt_404091, *[float_404092], **kwargs_404093)
    
    keyword_404095 = sqrt_call_result_404094
    kwargs_404096 = {'atol': keyword_404095}
    # Getting the type of 'assert_allclose' (line 641)
    assert_allclose_404087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 641)
    assert_allclose_call_result_404097 = invoke(stypy.reporting.localization.Localization(__file__, 641, 4), assert_allclose_404087, *[s_404088, s2_404089], **kwargs_404096)
    
    
    # ################# End of 'test_svd_v0(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_v0' in the type store
    # Getting the type of 'stypy_return_type' (line 634)
    stypy_return_type_404098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_404098)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_v0'
    return stypy_return_type_404098

# Assigning a type to the variable 'test_svd_v0' (line 634)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 0), 'test_svd_v0', test_svd_v0)

@norecursion
def _check_svds(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_check_svds'
    module_type_store = module_type_store.open_function_context('_check_svds', 644, 0, False)
    
    # Passed parameters checking function
    _check_svds.stypy_localization = localization
    _check_svds.stypy_type_of_self = None
    _check_svds.stypy_type_store = module_type_store
    _check_svds.stypy_function_name = '_check_svds'
    _check_svds.stypy_param_names_list = ['A', 'k', 'U', 's', 'VH']
    _check_svds.stypy_varargs_param_name = None
    _check_svds.stypy_kwargs_param_name = None
    _check_svds.stypy_call_defaults = defaults
    _check_svds.stypy_call_varargs = varargs
    _check_svds.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_check_svds', ['A', 'k', 'U', 's', 'VH'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_check_svds', localization, ['A', 'k', 'U', 's', 'VH'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_check_svds(...)' code ##################

    
    # Assigning a Attribute to a Tuple (line 645):
    
    # Assigning a Subscript to a Name (line 645):
    
    # Obtaining the type of the subscript
    int_404099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 4), 'int')
    # Getting the type of 'A' (line 645)
    A_404100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 11), 'A')
    # Obtaining the member 'shape' of a type (line 645)
    shape_404101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 645, 11), A_404100, 'shape')
    # Obtaining the member '__getitem__' of a type (line 645)
    getitem___404102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 645, 4), shape_404101, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 645)
    subscript_call_result_404103 = invoke(stypy.reporting.localization.Localization(__file__, 645, 4), getitem___404102, int_404099)
    
    # Assigning a type to the variable 'tuple_var_assignment_401366' (line 645)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 4), 'tuple_var_assignment_401366', subscript_call_result_404103)
    
    # Assigning a Subscript to a Name (line 645):
    
    # Obtaining the type of the subscript
    int_404104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 4), 'int')
    # Getting the type of 'A' (line 645)
    A_404105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 11), 'A')
    # Obtaining the member 'shape' of a type (line 645)
    shape_404106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 645, 11), A_404105, 'shape')
    # Obtaining the member '__getitem__' of a type (line 645)
    getitem___404107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 645, 4), shape_404106, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 645)
    subscript_call_result_404108 = invoke(stypy.reporting.localization.Localization(__file__, 645, 4), getitem___404107, int_404104)
    
    # Assigning a type to the variable 'tuple_var_assignment_401367' (line 645)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 4), 'tuple_var_assignment_401367', subscript_call_result_404108)
    
    # Assigning a Name to a Name (line 645):
    # Getting the type of 'tuple_var_assignment_401366' (line 645)
    tuple_var_assignment_401366_404109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 4), 'tuple_var_assignment_401366')
    # Assigning a type to the variable 'n' (line 645)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 4), 'n', tuple_var_assignment_401366_404109)
    
    # Assigning a Name to a Name (line 645):
    # Getting the type of 'tuple_var_assignment_401367' (line 645)
    tuple_var_assignment_401367_404110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 4), 'tuple_var_assignment_401367')
    # Assigning a type to the variable 'm' (line 645)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 7), 'm', tuple_var_assignment_401367_404110)
    
    # Call to assert_equal(...): (line 648)
    # Processing the call arguments (line 648)
    # Getting the type of 'U' (line 648)
    U_404112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 17), 'U', False)
    # Obtaining the member 'shape' of a type (line 648)
    shape_404113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 648, 17), U_404112, 'shape')
    
    # Obtaining an instance of the builtin type 'tuple' (line 648)
    tuple_404114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 648)
    # Adding element type (line 648)
    # Getting the type of 'n' (line 648)
    n_404115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 27), 'n', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 27), tuple_404114, n_404115)
    # Adding element type (line 648)
    # Getting the type of 'k' (line 648)
    k_404116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 30), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 648, 27), tuple_404114, k_404116)
    
    # Processing the call keyword arguments (line 648)
    kwargs_404117 = {}
    # Getting the type of 'assert_equal' (line 648)
    assert_equal_404111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 648)
    assert_equal_call_result_404118 = invoke(stypy.reporting.localization.Localization(__file__, 648, 4), assert_equal_404111, *[shape_404113, tuple_404114], **kwargs_404117)
    
    
    # Call to assert_equal(...): (line 649)
    # Processing the call arguments (line 649)
    # Getting the type of 's' (line 649)
    s_404120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 17), 's', False)
    # Obtaining the member 'shape' of a type (line 649)
    shape_404121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 17), s_404120, 'shape')
    
    # Obtaining an instance of the builtin type 'tuple' (line 649)
    tuple_404122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 649)
    # Adding element type (line 649)
    # Getting the type of 'k' (line 649)
    k_404123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 27), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 27), tuple_404122, k_404123)
    
    # Processing the call keyword arguments (line 649)
    kwargs_404124 = {}
    # Getting the type of 'assert_equal' (line 649)
    assert_equal_404119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 649)
    assert_equal_call_result_404125 = invoke(stypy.reporting.localization.Localization(__file__, 649, 4), assert_equal_404119, *[shape_404121, tuple_404122], **kwargs_404124)
    
    
    # Call to assert_equal(...): (line 650)
    # Processing the call arguments (line 650)
    # Getting the type of 'VH' (line 650)
    VH_404127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 17), 'VH', False)
    # Obtaining the member 'shape' of a type (line 650)
    shape_404128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 17), VH_404127, 'shape')
    
    # Obtaining an instance of the builtin type 'tuple' (line 650)
    tuple_404129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 650)
    # Adding element type (line 650)
    # Getting the type of 'k' (line 650)
    k_404130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 28), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 28), tuple_404129, k_404130)
    # Adding element type (line 650)
    # Getting the type of 'm' (line 650)
    m_404131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 31), 'm', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 28), tuple_404129, m_404131)
    
    # Processing the call keyword arguments (line 650)
    kwargs_404132 = {}
    # Getting the type of 'assert_equal' (line 650)
    assert_equal_404126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 650)
    assert_equal_call_result_404133 = invoke(stypy.reporting.localization.Localization(__file__, 650, 4), assert_equal_404126, *[shape_404128, tuple_404129], **kwargs_404132)
    
    
    # Assigning a Call to a Name (line 653):
    
    # Assigning a Call to a Name (line 653):
    
    # Call to dot(...): (line 653)
    # Processing the call arguments (line 653)
    # Getting the type of 'VH' (line 653)
    VH_404138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 26), 'VH', False)
    # Processing the call keyword arguments (line 653)
    kwargs_404139 = {}
    # Getting the type of 'U' (line 653)
    U_404134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 17), 'U', False)
    # Getting the type of 's' (line 653)
    s_404135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 19), 's', False)
    # Applying the binary operator '*' (line 653)
    result_mul_404136 = python_operator(stypy.reporting.localization.Localization(__file__, 653, 17), '*', U_404134, s_404135)
    
    # Obtaining the member 'dot' of a type (line 653)
    dot_404137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 17), result_mul_404136, 'dot')
    # Calling dot(args, kwargs) (line 653)
    dot_call_result_404140 = invoke(stypy.reporting.localization.Localization(__file__, 653, 17), dot_404137, *[VH_404138], **kwargs_404139)
    
    # Assigning a type to the variable 'A_rebuilt' (line 653)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 653, 4), 'A_rebuilt', dot_call_result_404140)
    
    # Call to assert_equal(...): (line 654)
    # Processing the call arguments (line 654)
    # Getting the type of 'A_rebuilt' (line 654)
    A_rebuilt_404142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 17), 'A_rebuilt', False)
    # Obtaining the member 'shape' of a type (line 654)
    shape_404143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 17), A_rebuilt_404142, 'shape')
    # Getting the type of 'A' (line 654)
    A_404144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 34), 'A', False)
    # Obtaining the member 'shape' of a type (line 654)
    shape_404145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 34), A_404144, 'shape')
    # Processing the call keyword arguments (line 654)
    kwargs_404146 = {}
    # Getting the type of 'assert_equal' (line 654)
    assert_equal_404141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 654)
    assert_equal_call_result_404147 = invoke(stypy.reporting.localization.Localization(__file__, 654, 4), assert_equal_404141, *[shape_404143, shape_404145], **kwargs_404146)
    
    
    # Call to assert_allclose(...): (line 655)
    # Processing the call arguments (line 655)
    # Getting the type of 'A_rebuilt' (line 655)
    A_rebuilt_404149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 20), 'A_rebuilt', False)
    # Getting the type of 'A' (line 655)
    A_404150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 31), 'A', False)
    # Processing the call keyword arguments (line 655)
    kwargs_404151 = {}
    # Getting the type of 'assert_allclose' (line 655)
    assert_allclose_404148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 655)
    assert_allclose_call_result_404152 = invoke(stypy.reporting.localization.Localization(__file__, 655, 4), assert_allclose_404148, *[A_rebuilt_404149, A_404150], **kwargs_404151)
    
    
    # Assigning a Call to a Name (line 658):
    
    # Assigning a Call to a Name (line 658):
    
    # Call to dot(...): (line 658)
    # Processing the call arguments (line 658)
    
    # Call to conj(...): (line 658)
    # Processing the call keyword arguments (line 658)
    kwargs_404158 = {}
    # Getting the type of 'U' (line 658)
    U_404155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 18), 'U', False)
    # Obtaining the member 'T' of a type (line 658)
    T_404156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 18), U_404155, 'T')
    # Obtaining the member 'conj' of a type (line 658)
    conj_404157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 18), T_404156, 'conj')
    # Calling conj(args, kwargs) (line 658)
    conj_call_result_404159 = invoke(stypy.reporting.localization.Localization(__file__, 658, 18), conj_404157, *[], **kwargs_404158)
    
    # Getting the type of 'U' (line 658)
    U_404160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 30), 'U', False)
    # Processing the call keyword arguments (line 658)
    kwargs_404161 = {}
    # Getting the type of 'np' (line 658)
    np_404153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 11), 'np', False)
    # Obtaining the member 'dot' of a type (line 658)
    dot_404154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 658, 11), np_404153, 'dot')
    # Calling dot(args, kwargs) (line 658)
    dot_call_result_404162 = invoke(stypy.reporting.localization.Localization(__file__, 658, 11), dot_404154, *[conj_call_result_404159, U_404160], **kwargs_404161)
    
    # Assigning a type to the variable 'UH_U' (line 658)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 658, 4), 'UH_U', dot_call_result_404162)
    
    # Call to assert_equal(...): (line 659)
    # Processing the call arguments (line 659)
    # Getting the type of 'UH_U' (line 659)
    UH_U_404164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 17), 'UH_U', False)
    # Obtaining the member 'shape' of a type (line 659)
    shape_404165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 659, 17), UH_U_404164, 'shape')
    
    # Obtaining an instance of the builtin type 'tuple' (line 659)
    tuple_404166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 30), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 659)
    # Adding element type (line 659)
    # Getting the type of 'k' (line 659)
    k_404167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 30), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 30), tuple_404166, k_404167)
    # Adding element type (line 659)
    # Getting the type of 'k' (line 659)
    k_404168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 33), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 30), tuple_404166, k_404168)
    
    # Processing the call keyword arguments (line 659)
    kwargs_404169 = {}
    # Getting the type of 'assert_equal' (line 659)
    assert_equal_404163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 659)
    assert_equal_call_result_404170 = invoke(stypy.reporting.localization.Localization(__file__, 659, 4), assert_equal_404163, *[shape_404165, tuple_404166], **kwargs_404169)
    
    
    # Call to assert_allclose(...): (line 660)
    # Processing the call arguments (line 660)
    # Getting the type of 'UH_U' (line 660)
    UH_U_404172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 20), 'UH_U', False)
    
    # Call to identity(...): (line 660)
    # Processing the call arguments (line 660)
    # Getting the type of 'k' (line 660)
    k_404175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 38), 'k', False)
    # Processing the call keyword arguments (line 660)
    kwargs_404176 = {}
    # Getting the type of 'np' (line 660)
    np_404173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 26), 'np', False)
    # Obtaining the member 'identity' of a type (line 660)
    identity_404174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 26), np_404173, 'identity')
    # Calling identity(args, kwargs) (line 660)
    identity_call_result_404177 = invoke(stypy.reporting.localization.Localization(__file__, 660, 26), identity_404174, *[k_404175], **kwargs_404176)
    
    # Processing the call keyword arguments (line 660)
    float_404178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 47), 'float')
    keyword_404179 = float_404178
    kwargs_404180 = {'atol': keyword_404179}
    # Getting the type of 'assert_allclose' (line 660)
    assert_allclose_404171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 660)
    assert_allclose_call_result_404181 = invoke(stypy.reporting.localization.Localization(__file__, 660, 4), assert_allclose_404171, *[UH_U_404172, identity_call_result_404177], **kwargs_404180)
    
    
    # Assigning a Call to a Name (line 663):
    
    # Assigning a Call to a Name (line 663):
    
    # Call to dot(...): (line 663)
    # Processing the call arguments (line 663)
    # Getting the type of 'VH' (line 663)
    VH_404184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 18), 'VH', False)
    
    # Call to conj(...): (line 663)
    # Processing the call keyword arguments (line 663)
    kwargs_404188 = {}
    # Getting the type of 'VH' (line 663)
    VH_404185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 22), 'VH', False)
    # Obtaining the member 'T' of a type (line 663)
    T_404186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 663, 22), VH_404185, 'T')
    # Obtaining the member 'conj' of a type (line 663)
    conj_404187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 663, 22), T_404186, 'conj')
    # Calling conj(args, kwargs) (line 663)
    conj_call_result_404189 = invoke(stypy.reporting.localization.Localization(__file__, 663, 22), conj_404187, *[], **kwargs_404188)
    
    # Processing the call keyword arguments (line 663)
    kwargs_404190 = {}
    # Getting the type of 'np' (line 663)
    np_404182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 11), 'np', False)
    # Obtaining the member 'dot' of a type (line 663)
    dot_404183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 663, 11), np_404182, 'dot')
    # Calling dot(args, kwargs) (line 663)
    dot_call_result_404191 = invoke(stypy.reporting.localization.Localization(__file__, 663, 11), dot_404183, *[VH_404184, conj_call_result_404189], **kwargs_404190)
    
    # Assigning a type to the variable 'VH_V' (line 663)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 663, 4), 'VH_V', dot_call_result_404191)
    
    # Call to assert_equal(...): (line 664)
    # Processing the call arguments (line 664)
    # Getting the type of 'VH_V' (line 664)
    VH_V_404193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 17), 'VH_V', False)
    # Obtaining the member 'shape' of a type (line 664)
    shape_404194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 664, 17), VH_V_404193, 'shape')
    
    # Obtaining an instance of the builtin type 'tuple' (line 664)
    tuple_404195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 664, 30), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 664)
    # Adding element type (line 664)
    # Getting the type of 'k' (line 664)
    k_404196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 30), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 664, 30), tuple_404195, k_404196)
    # Adding element type (line 664)
    # Getting the type of 'k' (line 664)
    k_404197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 33), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 664, 30), tuple_404195, k_404197)
    
    # Processing the call keyword arguments (line 664)
    kwargs_404198 = {}
    # Getting the type of 'assert_equal' (line 664)
    assert_equal_404192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 664)
    assert_equal_call_result_404199 = invoke(stypy.reporting.localization.Localization(__file__, 664, 4), assert_equal_404192, *[shape_404194, tuple_404195], **kwargs_404198)
    
    
    # Call to assert_allclose(...): (line 665)
    # Processing the call arguments (line 665)
    # Getting the type of 'VH_V' (line 665)
    VH_V_404201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 20), 'VH_V', False)
    
    # Call to identity(...): (line 665)
    # Processing the call arguments (line 665)
    # Getting the type of 'k' (line 665)
    k_404204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 38), 'k', False)
    # Processing the call keyword arguments (line 665)
    kwargs_404205 = {}
    # Getting the type of 'np' (line 665)
    np_404202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 26), 'np', False)
    # Obtaining the member 'identity' of a type (line 665)
    identity_404203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 26), np_404202, 'identity')
    # Calling identity(args, kwargs) (line 665)
    identity_call_result_404206 = invoke(stypy.reporting.localization.Localization(__file__, 665, 26), identity_404203, *[k_404204], **kwargs_404205)
    
    # Processing the call keyword arguments (line 665)
    float_404207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 47), 'float')
    keyword_404208 = float_404207
    kwargs_404209 = {'atol': keyword_404208}
    # Getting the type of 'assert_allclose' (line 665)
    assert_allclose_404200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 665)
    assert_allclose_call_result_404210 = invoke(stypy.reporting.localization.Localization(__file__, 665, 4), assert_allclose_404200, *[VH_V_404201, identity_call_result_404206], **kwargs_404209)
    
    
    # ################# End of '_check_svds(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_check_svds' in the type store
    # Getting the type of 'stypy_return_type' (line 644)
    stypy_return_type_404211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_404211)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_check_svds'
    return stypy_return_type_404211

# Assigning a type to the variable '_check_svds' (line 644)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 0), '_check_svds', _check_svds)

@norecursion
def test_svd_LM_ones_matrix(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_LM_ones_matrix'
    module_type_store = module_type_store.open_function_context('test_svd_LM_ones_matrix', 668, 0, False)
    
    # Passed parameters checking function
    test_svd_LM_ones_matrix.stypy_localization = localization
    test_svd_LM_ones_matrix.stypy_type_of_self = None
    test_svd_LM_ones_matrix.stypy_type_store = module_type_store
    test_svd_LM_ones_matrix.stypy_function_name = 'test_svd_LM_ones_matrix'
    test_svd_LM_ones_matrix.stypy_param_names_list = []
    test_svd_LM_ones_matrix.stypy_varargs_param_name = None
    test_svd_LM_ones_matrix.stypy_kwargs_param_name = None
    test_svd_LM_ones_matrix.stypy_call_defaults = defaults
    test_svd_LM_ones_matrix.stypy_call_varargs = varargs
    test_svd_LM_ones_matrix.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_LM_ones_matrix', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_LM_ones_matrix', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_LM_ones_matrix(...)' code ##################

    
    # Assigning a Num to a Name (line 670):
    
    # Assigning a Num to a Name (line 670):
    int_404212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 8), 'int')
    # Assigning a type to the variable 'k' (line 670)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 4), 'k', int_404212)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 671)
    tuple_404213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 671)
    # Adding element type (line 671)
    
    # Obtaining an instance of the builtin type 'tuple' (line 671)
    tuple_404214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 671)
    # Adding element type (line 671)
    int_404215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 17), tuple_404214, int_404215)
    # Adding element type (line 671)
    int_404216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 17), tuple_404214, int_404216)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 16), tuple_404213, tuple_404214)
    # Adding element type (line 671)
    
    # Obtaining an instance of the builtin type 'tuple' (line 671)
    tuple_404217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 25), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 671)
    # Adding element type (line 671)
    int_404218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 25), tuple_404217, int_404218)
    # Adding element type (line 671)
    int_404219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 25), tuple_404217, int_404219)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 16), tuple_404213, tuple_404217)
    # Adding element type (line 671)
    
    # Obtaining an instance of the builtin type 'tuple' (line 671)
    tuple_404220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 671)
    # Adding element type (line 671)
    int_404221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 33), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 33), tuple_404220, int_404221)
    # Adding element type (line 671)
    int_404222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 36), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 33), tuple_404220, int_404222)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 16), tuple_404213, tuple_404220)
    
    # Testing the type of a for loop iterable (line 671)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 671, 4), tuple_404213)
    # Getting the type of the for loop variable (line 671)
    for_loop_var_404223 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 671, 4), tuple_404213)
    # Assigning a type to the variable 'n' (line 671)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 671, 4), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 4), for_loop_var_404223))
    # Assigning a type to the variable 'm' (line 671)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 671, 4), 'm', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 671, 4), for_loop_var_404223))
    # SSA begins for a for statement (line 671)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 672)
    tuple_404224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 672)
    # Adding element type (line 672)
    # Getting the type of 'float' (line 672)
    float_404225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 672, 17), tuple_404224, float_404225)
    # Adding element type (line 672)
    # Getting the type of 'complex' (line 672)
    complex_404226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 24), 'complex')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 672, 17), tuple_404224, complex_404226)
    
    # Testing the type of a for loop iterable (line 672)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 672, 8), tuple_404224)
    # Getting the type of the for loop variable (line 672)
    for_loop_var_404227 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 672, 8), tuple_404224)
    # Assigning a type to the variable 't' (line 672)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 672, 8), 't', for_loop_var_404227)
    # SSA begins for a for statement (line 672)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 673):
    
    # Assigning a Call to a Name (line 673):
    
    # Call to ones(...): (line 673)
    # Processing the call arguments (line 673)
    
    # Obtaining an instance of the builtin type 'tuple' (line 673)
    tuple_404230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 25), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 673)
    # Adding element type (line 673)
    # Getting the type of 'n' (line 673)
    n_404231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 25), 'n', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 673, 25), tuple_404230, n_404231)
    # Adding element type (line 673)
    # Getting the type of 'm' (line 673)
    m_404232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 28), 'm', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 673, 25), tuple_404230, m_404232)
    
    # Processing the call keyword arguments (line 673)
    # Getting the type of 't' (line 673)
    t_404233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 38), 't', False)
    keyword_404234 = t_404233
    kwargs_404235 = {'dtype': keyword_404234}
    # Getting the type of 'np' (line 673)
    np_404228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 16), 'np', False)
    # Obtaining the member 'ones' of a type (line 673)
    ones_404229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 16), np_404228, 'ones')
    # Calling ones(args, kwargs) (line 673)
    ones_call_result_404236 = invoke(stypy.reporting.localization.Localization(__file__, 673, 16), ones_404229, *[tuple_404230], **kwargs_404235)
    
    # Assigning a type to the variable 'A' (line 673)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'A', ones_call_result_404236)
    
    # Assigning a Call to a Tuple (line 674):
    
    # Assigning a Subscript to a Name (line 674):
    
    # Obtaining the type of the subscript
    int_404237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 12), 'int')
    
    # Call to svds(...): (line 674)
    # Processing the call arguments (line 674)
    # Getting the type of 'A' (line 674)
    A_404239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 28), 'A', False)
    # Getting the type of 'k' (line 674)
    k_404240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 31), 'k', False)
    # Processing the call keyword arguments (line 674)
    kwargs_404241 = {}
    # Getting the type of 'svds' (line 674)
    svds_404238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 23), 'svds', False)
    # Calling svds(args, kwargs) (line 674)
    svds_call_result_404242 = invoke(stypy.reporting.localization.Localization(__file__, 674, 23), svds_404238, *[A_404239, k_404240], **kwargs_404241)
    
    # Obtaining the member '__getitem__' of a type (line 674)
    getitem___404243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 12), svds_call_result_404242, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 674)
    subscript_call_result_404244 = invoke(stypy.reporting.localization.Localization(__file__, 674, 12), getitem___404243, int_404237)
    
    # Assigning a type to the variable 'tuple_var_assignment_401368' (line 674)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'tuple_var_assignment_401368', subscript_call_result_404244)
    
    # Assigning a Subscript to a Name (line 674):
    
    # Obtaining the type of the subscript
    int_404245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 12), 'int')
    
    # Call to svds(...): (line 674)
    # Processing the call arguments (line 674)
    # Getting the type of 'A' (line 674)
    A_404247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 28), 'A', False)
    # Getting the type of 'k' (line 674)
    k_404248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 31), 'k', False)
    # Processing the call keyword arguments (line 674)
    kwargs_404249 = {}
    # Getting the type of 'svds' (line 674)
    svds_404246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 23), 'svds', False)
    # Calling svds(args, kwargs) (line 674)
    svds_call_result_404250 = invoke(stypy.reporting.localization.Localization(__file__, 674, 23), svds_404246, *[A_404247, k_404248], **kwargs_404249)
    
    # Obtaining the member '__getitem__' of a type (line 674)
    getitem___404251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 12), svds_call_result_404250, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 674)
    subscript_call_result_404252 = invoke(stypy.reporting.localization.Localization(__file__, 674, 12), getitem___404251, int_404245)
    
    # Assigning a type to the variable 'tuple_var_assignment_401369' (line 674)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'tuple_var_assignment_401369', subscript_call_result_404252)
    
    # Assigning a Subscript to a Name (line 674):
    
    # Obtaining the type of the subscript
    int_404253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 674, 12), 'int')
    
    # Call to svds(...): (line 674)
    # Processing the call arguments (line 674)
    # Getting the type of 'A' (line 674)
    A_404255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 28), 'A', False)
    # Getting the type of 'k' (line 674)
    k_404256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 31), 'k', False)
    # Processing the call keyword arguments (line 674)
    kwargs_404257 = {}
    # Getting the type of 'svds' (line 674)
    svds_404254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 23), 'svds', False)
    # Calling svds(args, kwargs) (line 674)
    svds_call_result_404258 = invoke(stypy.reporting.localization.Localization(__file__, 674, 23), svds_404254, *[A_404255, k_404256], **kwargs_404257)
    
    # Obtaining the member '__getitem__' of a type (line 674)
    getitem___404259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 12), svds_call_result_404258, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 674)
    subscript_call_result_404260 = invoke(stypy.reporting.localization.Localization(__file__, 674, 12), getitem___404259, int_404253)
    
    # Assigning a type to the variable 'tuple_var_assignment_401370' (line 674)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'tuple_var_assignment_401370', subscript_call_result_404260)
    
    # Assigning a Name to a Name (line 674):
    # Getting the type of 'tuple_var_assignment_401368' (line 674)
    tuple_var_assignment_401368_404261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'tuple_var_assignment_401368')
    # Assigning a type to the variable 'U' (line 674)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'U', tuple_var_assignment_401368_404261)
    
    # Assigning a Name to a Name (line 674):
    # Getting the type of 'tuple_var_assignment_401369' (line 674)
    tuple_var_assignment_401369_404262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'tuple_var_assignment_401369')
    # Assigning a type to the variable 's' (line 674)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 15), 's', tuple_var_assignment_401369_404262)
    
    # Assigning a Name to a Name (line 674):
    # Getting the type of 'tuple_var_assignment_401370' (line 674)
    tuple_var_assignment_401370_404263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'tuple_var_assignment_401370')
    # Assigning a type to the variable 'VH' (line 674)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 18), 'VH', tuple_var_assignment_401370_404263)
    
    # Call to _check_svds(...): (line 677)
    # Processing the call arguments (line 677)
    # Getting the type of 'A' (line 677)
    A_404265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 24), 'A', False)
    # Getting the type of 'k' (line 677)
    k_404266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 27), 'k', False)
    # Getting the type of 'U' (line 677)
    U_404267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 30), 'U', False)
    # Getting the type of 's' (line 677)
    s_404268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 33), 's', False)
    # Getting the type of 'VH' (line 677)
    VH_404269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 36), 'VH', False)
    # Processing the call keyword arguments (line 677)
    kwargs_404270 = {}
    # Getting the type of '_check_svds' (line 677)
    _check_svds_404264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 12), '_check_svds', False)
    # Calling _check_svds(args, kwargs) (line 677)
    _check_svds_call_result_404271 = invoke(stypy.reporting.localization.Localization(__file__, 677, 12), _check_svds_404264, *[A_404265, k_404266, U_404267, s_404268, VH_404269], **kwargs_404270)
    
    
    # Call to assert_allclose(...): (line 681)
    # Processing the call arguments (line 681)
    
    # Call to max(...): (line 681)
    # Processing the call arguments (line 681)
    # Getting the type of 's' (line 681)
    s_404275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 35), 's', False)
    # Processing the call keyword arguments (line 681)
    kwargs_404276 = {}
    # Getting the type of 'np' (line 681)
    np_404273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 28), 'np', False)
    # Obtaining the member 'max' of a type (line 681)
    max_404274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 681, 28), np_404273, 'max')
    # Calling max(args, kwargs) (line 681)
    max_call_result_404277 = invoke(stypy.reporting.localization.Localization(__file__, 681, 28), max_404274, *[s_404275], **kwargs_404276)
    
    
    # Call to sqrt(...): (line 681)
    # Processing the call arguments (line 681)
    # Getting the type of 'n' (line 681)
    n_404280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 47), 'n', False)
    # Getting the type of 'm' (line 681)
    m_404281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 49), 'm', False)
    # Applying the binary operator '*' (line 681)
    result_mul_404282 = python_operator(stypy.reporting.localization.Localization(__file__, 681, 47), '*', n_404280, m_404281)
    
    # Processing the call keyword arguments (line 681)
    kwargs_404283 = {}
    # Getting the type of 'np' (line 681)
    np_404278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 39), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 681)
    sqrt_404279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 681, 39), np_404278, 'sqrt')
    # Calling sqrt(args, kwargs) (line 681)
    sqrt_call_result_404284 = invoke(stypy.reporting.localization.Localization(__file__, 681, 39), sqrt_404279, *[result_mul_404282], **kwargs_404283)
    
    # Processing the call keyword arguments (line 681)
    kwargs_404285 = {}
    # Getting the type of 'assert_allclose' (line 681)
    assert_allclose_404272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 12), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 681)
    assert_allclose_call_result_404286 = invoke(stypy.reporting.localization.Localization(__file__, 681, 12), assert_allclose_404272, *[max_call_result_404277, sqrt_call_result_404284], **kwargs_404285)
    
    
    # Call to assert_array_equal(...): (line 682)
    # Processing the call arguments (line 682)
    
    # Obtaining the type of the subscript
    int_404288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 42), 'int')
    slice_404289 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 682, 31), None, int_404288, None)
    
    # Call to sorted(...): (line 682)
    # Processing the call arguments (line 682)
    # Getting the type of 's' (line 682)
    s_404291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 38), 's', False)
    # Processing the call keyword arguments (line 682)
    kwargs_404292 = {}
    # Getting the type of 'sorted' (line 682)
    sorted_404290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 31), 'sorted', False)
    # Calling sorted(args, kwargs) (line 682)
    sorted_call_result_404293 = invoke(stypy.reporting.localization.Localization(__file__, 682, 31), sorted_404290, *[s_404291], **kwargs_404292)
    
    # Obtaining the member '__getitem__' of a type (line 682)
    getitem___404294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 31), sorted_call_result_404293, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 682)
    subscript_call_result_404295 = invoke(stypy.reporting.localization.Localization(__file__, 682, 31), getitem___404294, slice_404289)
    
    int_404296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 682, 47), 'int')
    # Processing the call keyword arguments (line 682)
    kwargs_404297 = {}
    # Getting the type of 'assert_array_equal' (line 682)
    assert_array_equal_404287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 12), 'assert_array_equal', False)
    # Calling assert_array_equal(args, kwargs) (line 682)
    assert_array_equal_call_result_404298 = invoke(stypy.reporting.localization.Localization(__file__, 682, 12), assert_array_equal_404287, *[subscript_call_result_404295, int_404296], **kwargs_404297)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_svd_LM_ones_matrix(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_LM_ones_matrix' in the type store
    # Getting the type of 'stypy_return_type' (line 668)
    stypy_return_type_404299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_404299)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_LM_ones_matrix'
    return stypy_return_type_404299

# Assigning a type to the variable 'test_svd_LM_ones_matrix' (line 668)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 0), 'test_svd_LM_ones_matrix', test_svd_LM_ones_matrix)

@norecursion
def test_svd_LM_zeros_matrix(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_LM_zeros_matrix'
    module_type_store = module_type_store.open_function_context('test_svd_LM_zeros_matrix', 685, 0, False)
    
    # Passed parameters checking function
    test_svd_LM_zeros_matrix.stypy_localization = localization
    test_svd_LM_zeros_matrix.stypy_type_of_self = None
    test_svd_LM_zeros_matrix.stypy_type_store = module_type_store
    test_svd_LM_zeros_matrix.stypy_function_name = 'test_svd_LM_zeros_matrix'
    test_svd_LM_zeros_matrix.stypy_param_names_list = []
    test_svd_LM_zeros_matrix.stypy_varargs_param_name = None
    test_svd_LM_zeros_matrix.stypy_kwargs_param_name = None
    test_svd_LM_zeros_matrix.stypy_call_defaults = defaults
    test_svd_LM_zeros_matrix.stypy_call_varargs = varargs
    test_svd_LM_zeros_matrix.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_LM_zeros_matrix', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_LM_zeros_matrix', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_LM_zeros_matrix(...)' code ##################

    
    # Assigning a Num to a Name (line 687):
    
    # Assigning a Num to a Name (line 687):
    int_404300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 8), 'int')
    # Assigning a type to the variable 'k' (line 687)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 4), 'k', int_404300)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 688)
    tuple_404301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 16), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 688)
    # Adding element type (line 688)
    
    # Obtaining an instance of the builtin type 'tuple' (line 688)
    tuple_404302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 688)
    # Adding element type (line 688)
    int_404303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 17), tuple_404302, int_404303)
    # Adding element type (line 688)
    int_404304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 17), tuple_404302, int_404304)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 16), tuple_404301, tuple_404302)
    # Adding element type (line 688)
    
    # Obtaining an instance of the builtin type 'tuple' (line 688)
    tuple_404305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 25), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 688)
    # Adding element type (line 688)
    int_404306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 25), tuple_404305, int_404306)
    # Adding element type (line 688)
    int_404307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 25), tuple_404305, int_404307)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 16), tuple_404301, tuple_404305)
    # Adding element type (line 688)
    
    # Obtaining an instance of the builtin type 'tuple' (line 688)
    tuple_404308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 688)
    # Adding element type (line 688)
    int_404309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 33), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 33), tuple_404308, int_404309)
    # Adding element type (line 688)
    int_404310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 36), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 33), tuple_404308, int_404310)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 16), tuple_404301, tuple_404308)
    
    # Testing the type of a for loop iterable (line 688)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 688, 4), tuple_404301)
    # Getting the type of the for loop variable (line 688)
    for_loop_var_404311 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 688, 4), tuple_404301)
    # Assigning a type to the variable 'n' (line 688)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 4), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 4), for_loop_var_404311))
    # Assigning a type to the variable 'm' (line 688)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 4), 'm', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 4), for_loop_var_404311))
    # SSA begins for a for statement (line 688)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 689)
    tuple_404312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 689, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 689)
    # Adding element type (line 689)
    # Getting the type of 'float' (line 689)
    float_404313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 17), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 689, 17), tuple_404312, float_404313)
    # Adding element type (line 689)
    # Getting the type of 'complex' (line 689)
    complex_404314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 24), 'complex')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 689, 17), tuple_404312, complex_404314)
    
    # Testing the type of a for loop iterable (line 689)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 689, 8), tuple_404312)
    # Getting the type of the for loop variable (line 689)
    for_loop_var_404315 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 689, 8), tuple_404312)
    # Assigning a type to the variable 't' (line 689)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 't', for_loop_var_404315)
    # SSA begins for a for statement (line 689)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 690):
    
    # Assigning a Call to a Name (line 690):
    
    # Call to zeros(...): (line 690)
    # Processing the call arguments (line 690)
    
    # Obtaining an instance of the builtin type 'tuple' (line 690)
    tuple_404318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 26), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 690)
    # Adding element type (line 690)
    # Getting the type of 'n' (line 690)
    n_404319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 26), 'n', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 690, 26), tuple_404318, n_404319)
    # Adding element type (line 690)
    # Getting the type of 'm' (line 690)
    m_404320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 29), 'm', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 690, 26), tuple_404318, m_404320)
    
    # Processing the call keyword arguments (line 690)
    # Getting the type of 't' (line 690)
    t_404321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 39), 't', False)
    keyword_404322 = t_404321
    kwargs_404323 = {'dtype': keyword_404322}
    # Getting the type of 'np' (line 690)
    np_404316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 16), 'np', False)
    # Obtaining the member 'zeros' of a type (line 690)
    zeros_404317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 16), np_404316, 'zeros')
    # Calling zeros(args, kwargs) (line 690)
    zeros_call_result_404324 = invoke(stypy.reporting.localization.Localization(__file__, 690, 16), zeros_404317, *[tuple_404318], **kwargs_404323)
    
    # Assigning a type to the variable 'A' (line 690)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 12), 'A', zeros_call_result_404324)
    
    # Assigning a Call to a Tuple (line 691):
    
    # Assigning a Subscript to a Name (line 691):
    
    # Obtaining the type of the subscript
    int_404325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 12), 'int')
    
    # Call to svds(...): (line 691)
    # Processing the call arguments (line 691)
    # Getting the type of 'A' (line 691)
    A_404327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 28), 'A', False)
    # Getting the type of 'k' (line 691)
    k_404328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 31), 'k', False)
    # Processing the call keyword arguments (line 691)
    kwargs_404329 = {}
    # Getting the type of 'svds' (line 691)
    svds_404326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 23), 'svds', False)
    # Calling svds(args, kwargs) (line 691)
    svds_call_result_404330 = invoke(stypy.reporting.localization.Localization(__file__, 691, 23), svds_404326, *[A_404327, k_404328], **kwargs_404329)
    
    # Obtaining the member '__getitem__' of a type (line 691)
    getitem___404331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 12), svds_call_result_404330, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 691)
    subscript_call_result_404332 = invoke(stypy.reporting.localization.Localization(__file__, 691, 12), getitem___404331, int_404325)
    
    # Assigning a type to the variable 'tuple_var_assignment_401371' (line 691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'tuple_var_assignment_401371', subscript_call_result_404332)
    
    # Assigning a Subscript to a Name (line 691):
    
    # Obtaining the type of the subscript
    int_404333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 12), 'int')
    
    # Call to svds(...): (line 691)
    # Processing the call arguments (line 691)
    # Getting the type of 'A' (line 691)
    A_404335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 28), 'A', False)
    # Getting the type of 'k' (line 691)
    k_404336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 31), 'k', False)
    # Processing the call keyword arguments (line 691)
    kwargs_404337 = {}
    # Getting the type of 'svds' (line 691)
    svds_404334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 23), 'svds', False)
    # Calling svds(args, kwargs) (line 691)
    svds_call_result_404338 = invoke(stypy.reporting.localization.Localization(__file__, 691, 23), svds_404334, *[A_404335, k_404336], **kwargs_404337)
    
    # Obtaining the member '__getitem__' of a type (line 691)
    getitem___404339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 12), svds_call_result_404338, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 691)
    subscript_call_result_404340 = invoke(stypy.reporting.localization.Localization(__file__, 691, 12), getitem___404339, int_404333)
    
    # Assigning a type to the variable 'tuple_var_assignment_401372' (line 691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'tuple_var_assignment_401372', subscript_call_result_404340)
    
    # Assigning a Subscript to a Name (line 691):
    
    # Obtaining the type of the subscript
    int_404341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 12), 'int')
    
    # Call to svds(...): (line 691)
    # Processing the call arguments (line 691)
    # Getting the type of 'A' (line 691)
    A_404343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 28), 'A', False)
    # Getting the type of 'k' (line 691)
    k_404344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 31), 'k', False)
    # Processing the call keyword arguments (line 691)
    kwargs_404345 = {}
    # Getting the type of 'svds' (line 691)
    svds_404342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 23), 'svds', False)
    # Calling svds(args, kwargs) (line 691)
    svds_call_result_404346 = invoke(stypy.reporting.localization.Localization(__file__, 691, 23), svds_404342, *[A_404343, k_404344], **kwargs_404345)
    
    # Obtaining the member '__getitem__' of a type (line 691)
    getitem___404347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 12), svds_call_result_404346, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 691)
    subscript_call_result_404348 = invoke(stypy.reporting.localization.Localization(__file__, 691, 12), getitem___404347, int_404341)
    
    # Assigning a type to the variable 'tuple_var_assignment_401373' (line 691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'tuple_var_assignment_401373', subscript_call_result_404348)
    
    # Assigning a Name to a Name (line 691):
    # Getting the type of 'tuple_var_assignment_401371' (line 691)
    tuple_var_assignment_401371_404349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'tuple_var_assignment_401371')
    # Assigning a type to the variable 'U' (line 691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'U', tuple_var_assignment_401371_404349)
    
    # Assigning a Name to a Name (line 691):
    # Getting the type of 'tuple_var_assignment_401372' (line 691)
    tuple_var_assignment_401372_404350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'tuple_var_assignment_401372')
    # Assigning a type to the variable 's' (line 691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 15), 's', tuple_var_assignment_401372_404350)
    
    # Assigning a Name to a Name (line 691):
    # Getting the type of 'tuple_var_assignment_401373' (line 691)
    tuple_var_assignment_401373_404351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'tuple_var_assignment_401373')
    # Assigning a type to the variable 'VH' (line 691)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 18), 'VH', tuple_var_assignment_401373_404351)
    
    # Call to _check_svds(...): (line 694)
    # Processing the call arguments (line 694)
    # Getting the type of 'A' (line 694)
    A_404353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 24), 'A', False)
    # Getting the type of 'k' (line 694)
    k_404354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 27), 'k', False)
    # Getting the type of 'U' (line 694)
    U_404355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 30), 'U', False)
    # Getting the type of 's' (line 694)
    s_404356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 33), 's', False)
    # Getting the type of 'VH' (line 694)
    VH_404357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 36), 'VH', False)
    # Processing the call keyword arguments (line 694)
    kwargs_404358 = {}
    # Getting the type of '_check_svds' (line 694)
    _check_svds_404352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 12), '_check_svds', False)
    # Calling _check_svds(args, kwargs) (line 694)
    _check_svds_call_result_404359 = invoke(stypy.reporting.localization.Localization(__file__, 694, 12), _check_svds_404352, *[A_404353, k_404354, U_404355, s_404356, VH_404357], **kwargs_404358)
    
    
    # Call to assert_array_equal(...): (line 697)
    # Processing the call arguments (line 697)
    # Getting the type of 's' (line 697)
    s_404361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 31), 's', False)
    int_404362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 34), 'int')
    # Processing the call keyword arguments (line 697)
    kwargs_404363 = {}
    # Getting the type of 'assert_array_equal' (line 697)
    assert_array_equal_404360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 12), 'assert_array_equal', False)
    # Calling assert_array_equal(args, kwargs) (line 697)
    assert_array_equal_call_result_404364 = invoke(stypy.reporting.localization.Localization(__file__, 697, 12), assert_array_equal_404360, *[s_404361, int_404362], **kwargs_404363)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_svd_LM_zeros_matrix(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_LM_zeros_matrix' in the type store
    # Getting the type of 'stypy_return_type' (line 685)
    stypy_return_type_404365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_404365)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_LM_zeros_matrix'
    return stypy_return_type_404365

# Assigning a type to the variable 'test_svd_LM_zeros_matrix' (line 685)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 0), 'test_svd_LM_zeros_matrix', test_svd_LM_zeros_matrix)

@norecursion
def test_svd_LM_zeros_matrix_gh_3452(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_LM_zeros_matrix_gh_3452'
    module_type_store = module_type_store.open_function_context('test_svd_LM_zeros_matrix_gh_3452', 700, 0, False)
    
    # Passed parameters checking function
    test_svd_LM_zeros_matrix_gh_3452.stypy_localization = localization
    test_svd_LM_zeros_matrix_gh_3452.stypy_type_of_self = None
    test_svd_LM_zeros_matrix_gh_3452.stypy_type_store = module_type_store
    test_svd_LM_zeros_matrix_gh_3452.stypy_function_name = 'test_svd_LM_zeros_matrix_gh_3452'
    test_svd_LM_zeros_matrix_gh_3452.stypy_param_names_list = []
    test_svd_LM_zeros_matrix_gh_3452.stypy_varargs_param_name = None
    test_svd_LM_zeros_matrix_gh_3452.stypy_kwargs_param_name = None
    test_svd_LM_zeros_matrix_gh_3452.stypy_call_defaults = defaults
    test_svd_LM_zeros_matrix_gh_3452.stypy_call_varargs = varargs
    test_svd_LM_zeros_matrix_gh_3452.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_LM_zeros_matrix_gh_3452', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_LM_zeros_matrix_gh_3452', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_LM_zeros_matrix_gh_3452(...)' code ##################

    
    # Assigning a Tuple to a Tuple (line 704):
    
    # Assigning a Num to a Name (line 704):
    int_404366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 14), 'int')
    # Assigning a type to the variable 'tuple_assignment_401374' (line 704)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 4), 'tuple_assignment_401374', int_404366)
    
    # Assigning a Num to a Name (line 704):
    int_404367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 17), 'int')
    # Assigning a type to the variable 'tuple_assignment_401375' (line 704)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 4), 'tuple_assignment_401375', int_404367)
    
    # Assigning a Num to a Name (line 704):
    int_404368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 20), 'int')
    # Assigning a type to the variable 'tuple_assignment_401376' (line 704)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 4), 'tuple_assignment_401376', int_404368)
    
    # Assigning a Name to a Name (line 704):
    # Getting the type of 'tuple_assignment_401374' (line 704)
    tuple_assignment_401374_404369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 4), 'tuple_assignment_401374')
    # Assigning a type to the variable 'n' (line 704)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 4), 'n', tuple_assignment_401374_404369)
    
    # Assigning a Name to a Name (line 704):
    # Getting the type of 'tuple_assignment_401375' (line 704)
    tuple_assignment_401375_404370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 4), 'tuple_assignment_401375')
    # Assigning a type to the variable 'm' (line 704)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 7), 'm', tuple_assignment_401375_404370)
    
    # Assigning a Name to a Name (line 704):
    # Getting the type of 'tuple_assignment_401376' (line 704)
    tuple_assignment_401376_404371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 4), 'tuple_assignment_401376')
    # Assigning a type to the variable 'k' (line 704)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 10), 'k', tuple_assignment_401376_404371)
    
    # Assigning a Call to a Name (line 705):
    
    # Assigning a Call to a Name (line 705):
    
    # Call to zeros(...): (line 705)
    # Processing the call arguments (line 705)
    
    # Obtaining an instance of the builtin type 'tuple' (line 705)
    tuple_404374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 705)
    # Adding element type (line 705)
    # Getting the type of 'n' (line 705)
    n_404375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 18), 'n', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 705, 18), tuple_404374, n_404375)
    # Adding element type (line 705)
    # Getting the type of 'm' (line 705)
    m_404376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 21), 'm', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 705, 18), tuple_404374, m_404376)
    
    # Processing the call keyword arguments (line 705)
    kwargs_404377 = {}
    # Getting the type of 'np' (line 705)
    np_404372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'np', False)
    # Obtaining the member 'zeros' of a type (line 705)
    zeros_404373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 8), np_404372, 'zeros')
    # Calling zeros(args, kwargs) (line 705)
    zeros_call_result_404378 = invoke(stypy.reporting.localization.Localization(__file__, 705, 8), zeros_404373, *[tuple_404374], **kwargs_404377)
    
    # Assigning a type to the variable 'A' (line 705)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 4), 'A', zeros_call_result_404378)
    
    # Assigning a Call to a Tuple (line 706):
    
    # Assigning a Subscript to a Name (line 706):
    
    # Obtaining the type of the subscript
    int_404379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 4), 'int')
    
    # Call to svds(...): (line 706)
    # Processing the call arguments (line 706)
    # Getting the type of 'A' (line 706)
    A_404381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 20), 'A', False)
    # Getting the type of 'k' (line 706)
    k_404382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 23), 'k', False)
    # Processing the call keyword arguments (line 706)
    kwargs_404383 = {}
    # Getting the type of 'svds' (line 706)
    svds_404380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 15), 'svds', False)
    # Calling svds(args, kwargs) (line 706)
    svds_call_result_404384 = invoke(stypy.reporting.localization.Localization(__file__, 706, 15), svds_404380, *[A_404381, k_404382], **kwargs_404383)
    
    # Obtaining the member '__getitem__' of a type (line 706)
    getitem___404385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 4), svds_call_result_404384, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 706)
    subscript_call_result_404386 = invoke(stypy.reporting.localization.Localization(__file__, 706, 4), getitem___404385, int_404379)
    
    # Assigning a type to the variable 'tuple_var_assignment_401377' (line 706)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 706, 4), 'tuple_var_assignment_401377', subscript_call_result_404386)
    
    # Assigning a Subscript to a Name (line 706):
    
    # Obtaining the type of the subscript
    int_404387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 4), 'int')
    
    # Call to svds(...): (line 706)
    # Processing the call arguments (line 706)
    # Getting the type of 'A' (line 706)
    A_404389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 20), 'A', False)
    # Getting the type of 'k' (line 706)
    k_404390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 23), 'k', False)
    # Processing the call keyword arguments (line 706)
    kwargs_404391 = {}
    # Getting the type of 'svds' (line 706)
    svds_404388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 15), 'svds', False)
    # Calling svds(args, kwargs) (line 706)
    svds_call_result_404392 = invoke(stypy.reporting.localization.Localization(__file__, 706, 15), svds_404388, *[A_404389, k_404390], **kwargs_404391)
    
    # Obtaining the member '__getitem__' of a type (line 706)
    getitem___404393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 4), svds_call_result_404392, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 706)
    subscript_call_result_404394 = invoke(stypy.reporting.localization.Localization(__file__, 706, 4), getitem___404393, int_404387)
    
    # Assigning a type to the variable 'tuple_var_assignment_401378' (line 706)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 706, 4), 'tuple_var_assignment_401378', subscript_call_result_404394)
    
    # Assigning a Subscript to a Name (line 706):
    
    # Obtaining the type of the subscript
    int_404395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 4), 'int')
    
    # Call to svds(...): (line 706)
    # Processing the call arguments (line 706)
    # Getting the type of 'A' (line 706)
    A_404397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 20), 'A', False)
    # Getting the type of 'k' (line 706)
    k_404398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 23), 'k', False)
    # Processing the call keyword arguments (line 706)
    kwargs_404399 = {}
    # Getting the type of 'svds' (line 706)
    svds_404396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 15), 'svds', False)
    # Calling svds(args, kwargs) (line 706)
    svds_call_result_404400 = invoke(stypy.reporting.localization.Localization(__file__, 706, 15), svds_404396, *[A_404397, k_404398], **kwargs_404399)
    
    # Obtaining the member '__getitem__' of a type (line 706)
    getitem___404401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 4), svds_call_result_404400, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 706)
    subscript_call_result_404402 = invoke(stypy.reporting.localization.Localization(__file__, 706, 4), getitem___404401, int_404395)
    
    # Assigning a type to the variable 'tuple_var_assignment_401379' (line 706)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 706, 4), 'tuple_var_assignment_401379', subscript_call_result_404402)
    
    # Assigning a Name to a Name (line 706):
    # Getting the type of 'tuple_var_assignment_401377' (line 706)
    tuple_var_assignment_401377_404403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 4), 'tuple_var_assignment_401377')
    # Assigning a type to the variable 'U' (line 706)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 706, 4), 'U', tuple_var_assignment_401377_404403)
    
    # Assigning a Name to a Name (line 706):
    # Getting the type of 'tuple_var_assignment_401378' (line 706)
    tuple_var_assignment_401378_404404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 4), 'tuple_var_assignment_401378')
    # Assigning a type to the variable 's' (line 706)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 706, 7), 's', tuple_var_assignment_401378_404404)
    
    # Assigning a Name to a Name (line 706):
    # Getting the type of 'tuple_var_assignment_401379' (line 706)
    tuple_var_assignment_401379_404405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 4), 'tuple_var_assignment_401379')
    # Assigning a type to the variable 'VH' (line 706)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 706, 10), 'VH', tuple_var_assignment_401379_404405)
    
    # Call to _check_svds(...): (line 709)
    # Processing the call arguments (line 709)
    # Getting the type of 'A' (line 709)
    A_404407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 16), 'A', False)
    # Getting the type of 'k' (line 709)
    k_404408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 19), 'k', False)
    # Getting the type of 'U' (line 709)
    U_404409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 22), 'U', False)
    # Getting the type of 's' (line 709)
    s_404410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 25), 's', False)
    # Getting the type of 'VH' (line 709)
    VH_404411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 28), 'VH', False)
    # Processing the call keyword arguments (line 709)
    kwargs_404412 = {}
    # Getting the type of '_check_svds' (line 709)
    _check_svds_404406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 4), '_check_svds', False)
    # Calling _check_svds(args, kwargs) (line 709)
    _check_svds_call_result_404413 = invoke(stypy.reporting.localization.Localization(__file__, 709, 4), _check_svds_404406, *[A_404407, k_404408, U_404409, s_404410, VH_404411], **kwargs_404412)
    
    
    # Call to assert_array_equal(...): (line 712)
    # Processing the call arguments (line 712)
    # Getting the type of 's' (line 712)
    s_404415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 23), 's', False)
    int_404416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 26), 'int')
    # Processing the call keyword arguments (line 712)
    kwargs_404417 = {}
    # Getting the type of 'assert_array_equal' (line 712)
    assert_array_equal_404414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 4), 'assert_array_equal', False)
    # Calling assert_array_equal(args, kwargs) (line 712)
    assert_array_equal_call_result_404418 = invoke(stypy.reporting.localization.Localization(__file__, 712, 4), assert_array_equal_404414, *[s_404415, int_404416], **kwargs_404417)
    
    
    # ################# End of 'test_svd_LM_zeros_matrix_gh_3452(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_LM_zeros_matrix_gh_3452' in the type store
    # Getting the type of 'stypy_return_type' (line 700)
    stypy_return_type_404419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_404419)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_LM_zeros_matrix_gh_3452'
    return stypy_return_type_404419

# Assigning a type to the variable 'test_svd_LM_zeros_matrix_gh_3452' (line 700)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 0), 'test_svd_LM_zeros_matrix_gh_3452', test_svd_LM_zeros_matrix_gh_3452)
# Declaration of the 'CheckingLinearOperator' class
# Getting the type of 'LinearOperator' (line 715)
LinearOperator_404420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 29), 'LinearOperator')

class CheckingLinearOperator(LinearOperator_404420, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 716, 4, False)
        # Assigning a type to the variable 'self' (line 717)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 717, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'CheckingLinearOperator.__init__', ['A'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['A'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 717):
        
        # Assigning a Name to a Attribute (line 717):
        # Getting the type of 'A' (line 717)
        A_404421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 17), 'A')
        # Getting the type of 'self' (line 717)
        self_404422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 8), 'self')
        # Setting the type of the member 'A' of a type (line 717)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 8), self_404422, 'A', A_404421)
        
        # Assigning a Attribute to a Attribute (line 718):
        
        # Assigning a Attribute to a Attribute (line 718):
        # Getting the type of 'A' (line 718)
        A_404423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 21), 'A')
        # Obtaining the member 'dtype' of a type (line 718)
        dtype_404424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 21), A_404423, 'dtype')
        # Getting the type of 'self' (line 718)
        self_404425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 8), 'self')
        # Setting the type of the member 'dtype' of a type (line 718)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 8), self_404425, 'dtype', dtype_404424)
        
        # Assigning a Attribute to a Attribute (line 719):
        
        # Assigning a Attribute to a Attribute (line 719):
        # Getting the type of 'A' (line 719)
        A_404426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 21), 'A')
        # Obtaining the member 'shape' of a type (line 719)
        shape_404427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 21), A_404426, 'shape')
        # Getting the type of 'self' (line 719)
        self_404428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 8), 'self')
        # Setting the type of the member 'shape' of a type (line 719)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 8), self_404428, 'shape', shape_404427)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _matvec(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_matvec'
        module_type_store = module_type_store.open_function_context('_matvec', 721, 4, False)
        # Assigning a type to the variable 'self' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_localization', localization)
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_type_store', module_type_store)
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_function_name', 'CheckingLinearOperator._matvec')
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_param_names_list', ['x'])
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_varargs_param_name', None)
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_kwargs_param_name', None)
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_call_defaults', defaults)
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_call_varargs', varargs)
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        CheckingLinearOperator._matvec.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'CheckingLinearOperator._matvec', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_matvec', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_matvec(...)' code ##################

        
        # Call to assert_equal(...): (line 722)
        # Processing the call arguments (line 722)
        
        # Call to max(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'x' (line 722)
        x_404431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 25), 'x', False)
        # Obtaining the member 'shape' of a type (line 722)
        shape_404432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 25), x_404431, 'shape')
        # Processing the call keyword arguments (line 722)
        kwargs_404433 = {}
        # Getting the type of 'max' (line 722)
        max_404430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 21), 'max', False)
        # Calling max(args, kwargs) (line 722)
        max_call_result_404434 = invoke(stypy.reporting.localization.Localization(__file__, 722, 21), max_404430, *[shape_404432], **kwargs_404433)
        
        
        # Call to size(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'x' (line 722)
        x_404437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 43), 'x', False)
        # Processing the call keyword arguments (line 722)
        kwargs_404438 = {}
        # Getting the type of 'np' (line 722)
        np_404435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 35), 'np', False)
        # Obtaining the member 'size' of a type (line 722)
        size_404436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 35), np_404435, 'size')
        # Calling size(args, kwargs) (line 722)
        size_call_result_404439 = invoke(stypy.reporting.localization.Localization(__file__, 722, 35), size_404436, *[x_404437], **kwargs_404438)
        
        # Processing the call keyword arguments (line 722)
        kwargs_404440 = {}
        # Getting the type of 'assert_equal' (line 722)
        assert_equal_404429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 722)
        assert_equal_call_result_404441 = invoke(stypy.reporting.localization.Localization(__file__, 722, 8), assert_equal_404429, *[max_call_result_404434, size_call_result_404439], **kwargs_404440)
        
        
        # Call to dot(...): (line 723)
        # Processing the call arguments (line 723)
        # Getting the type of 'x' (line 723)
        x_404445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 26), 'x', False)
        # Processing the call keyword arguments (line 723)
        kwargs_404446 = {}
        # Getting the type of 'self' (line 723)
        self_404442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 15), 'self', False)
        # Obtaining the member 'A' of a type (line 723)
        A_404443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 15), self_404442, 'A')
        # Obtaining the member 'dot' of a type (line 723)
        dot_404444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 15), A_404443, 'dot')
        # Calling dot(args, kwargs) (line 723)
        dot_call_result_404447 = invoke(stypy.reporting.localization.Localization(__file__, 723, 15), dot_404444, *[x_404445], **kwargs_404446)
        
        # Assigning a type to the variable 'stypy_return_type' (line 723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 8), 'stypy_return_type', dot_call_result_404447)
        
        # ################# End of '_matvec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_matvec' in the type store
        # Getting the type of 'stypy_return_type' (line 721)
        stypy_return_type_404448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_404448)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_matvec'
        return stypy_return_type_404448


    @norecursion
    def _rmatvec(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_rmatvec'
        module_type_store = module_type_store.open_function_context('_rmatvec', 725, 4, False)
        # Assigning a type to the variable 'self' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_localization', localization)
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_type_store', module_type_store)
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_function_name', 'CheckingLinearOperator._rmatvec')
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_param_names_list', ['x'])
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_varargs_param_name', None)
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_kwargs_param_name', None)
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_call_defaults', defaults)
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_call_varargs', varargs)
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        CheckingLinearOperator._rmatvec.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'CheckingLinearOperator._rmatvec', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_rmatvec', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_rmatvec(...)' code ##################

        
        # Call to assert_equal(...): (line 726)
        # Processing the call arguments (line 726)
        
        # Call to max(...): (line 726)
        # Processing the call arguments (line 726)
        # Getting the type of 'x' (line 726)
        x_404451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 25), 'x', False)
        # Obtaining the member 'shape' of a type (line 726)
        shape_404452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 25), x_404451, 'shape')
        # Processing the call keyword arguments (line 726)
        kwargs_404453 = {}
        # Getting the type of 'max' (line 726)
        max_404450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 21), 'max', False)
        # Calling max(args, kwargs) (line 726)
        max_call_result_404454 = invoke(stypy.reporting.localization.Localization(__file__, 726, 21), max_404450, *[shape_404452], **kwargs_404453)
        
        
        # Call to size(...): (line 726)
        # Processing the call arguments (line 726)
        # Getting the type of 'x' (line 726)
        x_404457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 43), 'x', False)
        # Processing the call keyword arguments (line 726)
        kwargs_404458 = {}
        # Getting the type of 'np' (line 726)
        np_404455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 35), 'np', False)
        # Obtaining the member 'size' of a type (line 726)
        size_404456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 35), np_404455, 'size')
        # Calling size(args, kwargs) (line 726)
        size_call_result_404459 = invoke(stypy.reporting.localization.Localization(__file__, 726, 35), size_404456, *[x_404457], **kwargs_404458)
        
        # Processing the call keyword arguments (line 726)
        kwargs_404460 = {}
        # Getting the type of 'assert_equal' (line 726)
        assert_equal_404449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 726)
        assert_equal_call_result_404461 = invoke(stypy.reporting.localization.Localization(__file__, 726, 8), assert_equal_404449, *[max_call_result_404454, size_call_result_404459], **kwargs_404460)
        
        
        # Call to dot(...): (line 727)
        # Processing the call arguments (line 727)
        # Getting the type of 'x' (line 727)
        x_404469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 40), 'x', False)
        # Processing the call keyword arguments (line 727)
        kwargs_404470 = {}
        
        # Call to conjugate(...): (line 727)
        # Processing the call keyword arguments (line 727)
        kwargs_404466 = {}
        # Getting the type of 'self' (line 727)
        self_404462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 15), 'self', False)
        # Obtaining the member 'A' of a type (line 727)
        A_404463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 15), self_404462, 'A')
        # Obtaining the member 'T' of a type (line 727)
        T_404464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 15), A_404463, 'T')
        # Obtaining the member 'conjugate' of a type (line 727)
        conjugate_404465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 15), T_404464, 'conjugate')
        # Calling conjugate(args, kwargs) (line 727)
        conjugate_call_result_404467 = invoke(stypy.reporting.localization.Localization(__file__, 727, 15), conjugate_404465, *[], **kwargs_404466)
        
        # Obtaining the member 'dot' of a type (line 727)
        dot_404468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 15), conjugate_call_result_404467, 'dot')
        # Calling dot(args, kwargs) (line 727)
        dot_call_result_404471 = invoke(stypy.reporting.localization.Localization(__file__, 727, 15), dot_404468, *[x_404469], **kwargs_404470)
        
        # Assigning a type to the variable 'stypy_return_type' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 8), 'stypy_return_type', dot_call_result_404471)
        
        # ################# End of '_rmatvec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_rmatvec' in the type store
        # Getting the type of 'stypy_return_type' (line 725)
        stypy_return_type_404472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_404472)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_rmatvec'
        return stypy_return_type_404472


# Assigning a type to the variable 'CheckingLinearOperator' (line 715)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 0), 'CheckingLinearOperator', CheckingLinearOperator)

@norecursion
def test_svd_linop(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svd_linop'
    module_type_store = module_type_store.open_function_context('test_svd_linop', 730, 0, False)
    
    # Passed parameters checking function
    test_svd_linop.stypy_localization = localization
    test_svd_linop.stypy_type_of_self = None
    test_svd_linop.stypy_type_store = module_type_store
    test_svd_linop.stypy_function_name = 'test_svd_linop'
    test_svd_linop.stypy_param_names_list = []
    test_svd_linop.stypy_varargs_param_name = None
    test_svd_linop.stypy_kwargs_param_name = None
    test_svd_linop.stypy_call_defaults = defaults
    test_svd_linop.stypy_call_varargs = varargs
    test_svd_linop.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svd_linop', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svd_linop', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svd_linop(...)' code ##################

    
    # Assigning a List to a Name (line 731):
    
    # Assigning a List to a Name (line 731):
    
    # Obtaining an instance of the builtin type 'list' (line 731)
    list_404473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 731)
    # Adding element type (line 731)
    
    # Obtaining an instance of the builtin type 'tuple' (line 731)
    tuple_404474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 731)
    # Adding element type (line 731)
    int_404475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 13), tuple_404474, int_404475)
    # Adding element type (line 731)
    int_404476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 13), tuple_404474, int_404476)
    # Adding element type (line 731)
    int_404477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 13), tuple_404474, int_404477)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 11), list_404473, tuple_404474)
    # Adding element type (line 731)
    
    # Obtaining an instance of the builtin type 'tuple' (line 732)
    tuple_404478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 732)
    # Adding element type (line 732)
    int_404479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 13), tuple_404478, int_404479)
    # Adding element type (line 732)
    int_404480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 13), tuple_404478, int_404480)
    # Adding element type (line 732)
    int_404481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 13), tuple_404478, int_404481)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 11), list_404473, tuple_404478)
    # Adding element type (line 731)
    
    # Obtaining an instance of the builtin type 'tuple' (line 733)
    tuple_404482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 13), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 733)
    # Adding element type (line 733)
    int_404483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 733, 13), tuple_404482, int_404483)
    # Adding element type (line 733)
    int_404484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 17), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 733, 13), tuple_404482, int_404484)
    # Adding element type (line 733)
    int_404485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 733, 13), tuple_404482, int_404485)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 11), list_404473, tuple_404482)
    
    # Assigning a type to the variable 'nmks' (line 731)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 731, 4), 'nmks', list_404473)

    @norecursion
    def reorder(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'reorder'
        module_type_store = module_type_store.open_function_context('reorder', 735, 4, False)
        
        # Passed parameters checking function
        reorder.stypy_localization = localization
        reorder.stypy_type_of_self = None
        reorder.stypy_type_store = module_type_store
        reorder.stypy_function_name = 'reorder'
        reorder.stypy_param_names_list = ['args']
        reorder.stypy_varargs_param_name = None
        reorder.stypy_kwargs_param_name = None
        reorder.stypy_call_defaults = defaults
        reorder.stypy_call_varargs = varargs
        reorder.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'reorder', ['args'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'reorder', localization, ['args'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'reorder(...)' code ##################

        
        # Assigning a Name to a Tuple (line 736):
        
        # Assigning a Subscript to a Name (line 736):
        
        # Obtaining the type of the subscript
        int_404486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 8), 'int')
        # Getting the type of 'args' (line 736)
        args_404487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 19), 'args')
        # Obtaining the member '__getitem__' of a type (line 736)
        getitem___404488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 8), args_404487, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 736)
        subscript_call_result_404489 = invoke(stypy.reporting.localization.Localization(__file__, 736, 8), getitem___404488, int_404486)
        
        # Assigning a type to the variable 'tuple_var_assignment_401380' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'tuple_var_assignment_401380', subscript_call_result_404489)
        
        # Assigning a Subscript to a Name (line 736):
        
        # Obtaining the type of the subscript
        int_404490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 8), 'int')
        # Getting the type of 'args' (line 736)
        args_404491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 19), 'args')
        # Obtaining the member '__getitem__' of a type (line 736)
        getitem___404492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 8), args_404491, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 736)
        subscript_call_result_404493 = invoke(stypy.reporting.localization.Localization(__file__, 736, 8), getitem___404492, int_404490)
        
        # Assigning a type to the variable 'tuple_var_assignment_401381' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'tuple_var_assignment_401381', subscript_call_result_404493)
        
        # Assigning a Subscript to a Name (line 736):
        
        # Obtaining the type of the subscript
        int_404494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 8), 'int')
        # Getting the type of 'args' (line 736)
        args_404495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 19), 'args')
        # Obtaining the member '__getitem__' of a type (line 736)
        getitem___404496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 8), args_404495, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 736)
        subscript_call_result_404497 = invoke(stypy.reporting.localization.Localization(__file__, 736, 8), getitem___404496, int_404494)
        
        # Assigning a type to the variable 'tuple_var_assignment_401382' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'tuple_var_assignment_401382', subscript_call_result_404497)
        
        # Assigning a Name to a Name (line 736):
        # Getting the type of 'tuple_var_assignment_401380' (line 736)
        tuple_var_assignment_401380_404498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'tuple_var_assignment_401380')
        # Assigning a type to the variable 'U' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'U', tuple_var_assignment_401380_404498)
        
        # Assigning a Name to a Name (line 736):
        # Getting the type of 'tuple_var_assignment_401381' (line 736)
        tuple_var_assignment_401381_404499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'tuple_var_assignment_401381')
        # Assigning a type to the variable 's' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 11), 's', tuple_var_assignment_401381_404499)
        
        # Assigning a Name to a Name (line 736):
        # Getting the type of 'tuple_var_assignment_401382' (line 736)
        tuple_var_assignment_401382_404500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'tuple_var_assignment_401382')
        # Assigning a type to the variable 'VH' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 14), 'VH', tuple_var_assignment_401382_404500)
        
        # Assigning a Call to a Name (line 737):
        
        # Assigning a Call to a Name (line 737):
        
        # Call to argsort(...): (line 737)
        # Processing the call arguments (line 737)
        # Getting the type of 's' (line 737)
        s_404503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 23), 's', False)
        # Processing the call keyword arguments (line 737)
        kwargs_404504 = {}
        # Getting the type of 'np' (line 737)
        np_404501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 12), 'np', False)
        # Obtaining the member 'argsort' of a type (line 737)
        argsort_404502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 12), np_404501, 'argsort')
        # Calling argsort(args, kwargs) (line 737)
        argsort_call_result_404505 = invoke(stypy.reporting.localization.Localization(__file__, 737, 12), argsort_404502, *[s_404503], **kwargs_404504)
        
        # Assigning a type to the variable 'j' (line 737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 737, 8), 'j', argsort_call_result_404505)
        
        # Obtaining an instance of the builtin type 'tuple' (line 738)
        tuple_404506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 738)
        # Adding element type (line 738)
        
        # Obtaining the type of the subscript
        slice_404507 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 738, 15), None, None, None)
        # Getting the type of 'j' (line 738)
        j_404508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 19), 'j')
        # Getting the type of 'U' (line 738)
        U_404509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 15), 'U')
        # Obtaining the member '__getitem__' of a type (line 738)
        getitem___404510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 15), U_404509, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 738)
        subscript_call_result_404511 = invoke(stypy.reporting.localization.Localization(__file__, 738, 15), getitem___404510, (slice_404507, j_404508))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 15), tuple_404506, subscript_call_result_404511)
        # Adding element type (line 738)
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 738)
        j_404512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 25), 'j')
        # Getting the type of 's' (line 738)
        s_404513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 23), 's')
        # Obtaining the member '__getitem__' of a type (line 738)
        getitem___404514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 23), s_404513, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 738)
        subscript_call_result_404515 = invoke(stypy.reporting.localization.Localization(__file__, 738, 23), getitem___404514, j_404512)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 15), tuple_404506, subscript_call_result_404515)
        # Adding element type (line 738)
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 738)
        j_404516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 32), 'j')
        slice_404517 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 738, 29), None, None, None)
        # Getting the type of 'VH' (line 738)
        VH_404518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 29), 'VH')
        # Obtaining the member '__getitem__' of a type (line 738)
        getitem___404519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 29), VH_404518, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 738)
        subscript_call_result_404520 = invoke(stypy.reporting.localization.Localization(__file__, 738, 29), getitem___404519, (j_404516, slice_404517))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 15), tuple_404506, subscript_call_result_404520)
        
        # Assigning a type to the variable 'stypy_return_type' (line 738)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 738, 8), 'stypy_return_type', tuple_404506)
        
        # ################# End of 'reorder(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'reorder' in the type store
        # Getting the type of 'stypy_return_type' (line 735)
        stypy_return_type_404521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_404521)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'reorder'
        return stypy_return_type_404521

    # Assigning a type to the variable 'reorder' (line 735)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 4), 'reorder', reorder)
    
    # Getting the type of 'nmks' (line 740)
    nmks_404522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 19), 'nmks')
    # Testing the type of a for loop iterable (line 740)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 740, 4), nmks_404522)
    # Getting the type of the for loop variable (line 740)
    for_loop_var_404523 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 740, 4), nmks_404522)
    # Assigning a type to the variable 'n' (line 740)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 4), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 4), for_loop_var_404523))
    # Assigning a type to the variable 'm' (line 740)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 4), 'm', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 4), for_loop_var_404523))
    # Assigning a type to the variable 'k' (line 740)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 4), 'k', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 4), for_loop_var_404523))
    # SSA begins for a for statement (line 740)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 742):
    
    # Assigning a Call to a Name (line 742):
    
    # Call to randn(...): (line 742)
    # Processing the call arguments (line 742)
    # Getting the type of 'n' (line 742)
    n_404531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 44), 'n', False)
    # Getting the type of 'm' (line 742)
    m_404532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 47), 'm', False)
    # Processing the call keyword arguments (line 742)
    kwargs_404533 = {}
    
    # Call to RandomState(...): (line 742)
    # Processing the call arguments (line 742)
    int_404527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 34), 'int')
    # Processing the call keyword arguments (line 742)
    kwargs_404528 = {}
    # Getting the type of 'np' (line 742)
    np_404524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 12), 'np', False)
    # Obtaining the member 'random' of a type (line 742)
    random_404525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 12), np_404524, 'random')
    # Obtaining the member 'RandomState' of a type (line 742)
    RandomState_404526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 12), random_404525, 'RandomState')
    # Calling RandomState(args, kwargs) (line 742)
    RandomState_call_result_404529 = invoke(stypy.reporting.localization.Localization(__file__, 742, 12), RandomState_404526, *[int_404527], **kwargs_404528)
    
    # Obtaining the member 'randn' of a type (line 742)
    randn_404530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 12), RandomState_call_result_404529, 'randn')
    # Calling randn(args, kwargs) (line 742)
    randn_call_result_404534 = invoke(stypy.reporting.localization.Localization(__file__, 742, 12), randn_404530, *[n_404531, m_404532], **kwargs_404533)
    
    # Assigning a type to the variable 'A' (line 742)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 8), 'A', randn_call_result_404534)
    
    # Assigning a Call to a Name (line 743):
    
    # Assigning a Call to a Name (line 743):
    
    # Call to CheckingLinearOperator(...): (line 743)
    # Processing the call arguments (line 743)
    # Getting the type of 'A' (line 743)
    A_404536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 35), 'A', False)
    # Processing the call keyword arguments (line 743)
    kwargs_404537 = {}
    # Getting the type of 'CheckingLinearOperator' (line 743)
    CheckingLinearOperator_404535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 12), 'CheckingLinearOperator', False)
    # Calling CheckingLinearOperator(args, kwargs) (line 743)
    CheckingLinearOperator_call_result_404538 = invoke(stypy.reporting.localization.Localization(__file__, 743, 12), CheckingLinearOperator_404535, *[A_404536], **kwargs_404537)
    
    # Assigning a type to the variable 'L' (line 743)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'L', CheckingLinearOperator_call_result_404538)
    
    # Assigning a Call to a Name (line 745):
    
    # Assigning a Call to a Name (line 745):
    
    # Call to ones(...): (line 745)
    # Processing the call arguments (line 745)
    
    # Call to min(...): (line 745)
    # Processing the call arguments (line 745)
    # Getting the type of 'A' (line 745)
    A_404542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 25), 'A', False)
    # Obtaining the member 'shape' of a type (line 745)
    shape_404543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 25), A_404542, 'shape')
    # Processing the call keyword arguments (line 745)
    kwargs_404544 = {}
    # Getting the type of 'min' (line 745)
    min_404541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 21), 'min', False)
    # Calling min(args, kwargs) (line 745)
    min_call_result_404545 = invoke(stypy.reporting.localization.Localization(__file__, 745, 21), min_404541, *[shape_404543], **kwargs_404544)
    
    # Processing the call keyword arguments (line 745)
    kwargs_404546 = {}
    # Getting the type of 'np' (line 745)
    np_404539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 13), 'np', False)
    # Obtaining the member 'ones' of a type (line 745)
    ones_404540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 13), np_404539, 'ones')
    # Calling ones(args, kwargs) (line 745)
    ones_call_result_404547 = invoke(stypy.reporting.localization.Localization(__file__, 745, 13), ones_404540, *[min_call_result_404545], **kwargs_404546)
    
    # Assigning a type to the variable 'v0' (line 745)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'v0', ones_call_result_404547)
    
    # Assigning a Call to a Tuple (line 747):
    
    # Assigning a Subscript to a Name (line 747):
    
    # Obtaining the type of the subscript
    int_404548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 8), 'int')
    
    # Call to reorder(...): (line 747)
    # Processing the call arguments (line 747)
    
    # Call to svds(...): (line 747)
    # Processing the call arguments (line 747)
    # Getting the type of 'A' (line 747)
    A_404551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 35), 'A', False)
    # Getting the type of 'k' (line 747)
    k_404552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 38), 'k', False)
    # Processing the call keyword arguments (line 747)
    # Getting the type of 'v0' (line 747)
    v0_404553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 44), 'v0', False)
    keyword_404554 = v0_404553
    kwargs_404555 = {'v0': keyword_404554}
    # Getting the type of 'svds' (line 747)
    svds_404550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 747)
    svds_call_result_404556 = invoke(stypy.reporting.localization.Localization(__file__, 747, 30), svds_404550, *[A_404551, k_404552], **kwargs_404555)
    
    # Processing the call keyword arguments (line 747)
    kwargs_404557 = {}
    # Getting the type of 'reorder' (line 747)
    reorder_404549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 747)
    reorder_call_result_404558 = invoke(stypy.reporting.localization.Localization(__file__, 747, 22), reorder_404549, *[svds_call_result_404556], **kwargs_404557)
    
    # Obtaining the member '__getitem__' of a type (line 747)
    getitem___404559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 8), reorder_call_result_404558, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 747)
    subscript_call_result_404560 = invoke(stypy.reporting.localization.Localization(__file__, 747, 8), getitem___404559, int_404548)
    
    # Assigning a type to the variable 'tuple_var_assignment_401383' (line 747)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'tuple_var_assignment_401383', subscript_call_result_404560)
    
    # Assigning a Subscript to a Name (line 747):
    
    # Obtaining the type of the subscript
    int_404561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 8), 'int')
    
    # Call to reorder(...): (line 747)
    # Processing the call arguments (line 747)
    
    # Call to svds(...): (line 747)
    # Processing the call arguments (line 747)
    # Getting the type of 'A' (line 747)
    A_404564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 35), 'A', False)
    # Getting the type of 'k' (line 747)
    k_404565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 38), 'k', False)
    # Processing the call keyword arguments (line 747)
    # Getting the type of 'v0' (line 747)
    v0_404566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 44), 'v0', False)
    keyword_404567 = v0_404566
    kwargs_404568 = {'v0': keyword_404567}
    # Getting the type of 'svds' (line 747)
    svds_404563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 747)
    svds_call_result_404569 = invoke(stypy.reporting.localization.Localization(__file__, 747, 30), svds_404563, *[A_404564, k_404565], **kwargs_404568)
    
    # Processing the call keyword arguments (line 747)
    kwargs_404570 = {}
    # Getting the type of 'reorder' (line 747)
    reorder_404562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 747)
    reorder_call_result_404571 = invoke(stypy.reporting.localization.Localization(__file__, 747, 22), reorder_404562, *[svds_call_result_404569], **kwargs_404570)
    
    # Obtaining the member '__getitem__' of a type (line 747)
    getitem___404572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 8), reorder_call_result_404571, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 747)
    subscript_call_result_404573 = invoke(stypy.reporting.localization.Localization(__file__, 747, 8), getitem___404572, int_404561)
    
    # Assigning a type to the variable 'tuple_var_assignment_401384' (line 747)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'tuple_var_assignment_401384', subscript_call_result_404573)
    
    # Assigning a Subscript to a Name (line 747):
    
    # Obtaining the type of the subscript
    int_404574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 8), 'int')
    
    # Call to reorder(...): (line 747)
    # Processing the call arguments (line 747)
    
    # Call to svds(...): (line 747)
    # Processing the call arguments (line 747)
    # Getting the type of 'A' (line 747)
    A_404577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 35), 'A', False)
    # Getting the type of 'k' (line 747)
    k_404578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 38), 'k', False)
    # Processing the call keyword arguments (line 747)
    # Getting the type of 'v0' (line 747)
    v0_404579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 44), 'v0', False)
    keyword_404580 = v0_404579
    kwargs_404581 = {'v0': keyword_404580}
    # Getting the type of 'svds' (line 747)
    svds_404576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 747)
    svds_call_result_404582 = invoke(stypy.reporting.localization.Localization(__file__, 747, 30), svds_404576, *[A_404577, k_404578], **kwargs_404581)
    
    # Processing the call keyword arguments (line 747)
    kwargs_404583 = {}
    # Getting the type of 'reorder' (line 747)
    reorder_404575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 747)
    reorder_call_result_404584 = invoke(stypy.reporting.localization.Localization(__file__, 747, 22), reorder_404575, *[svds_call_result_404582], **kwargs_404583)
    
    # Obtaining the member '__getitem__' of a type (line 747)
    getitem___404585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 8), reorder_call_result_404584, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 747)
    subscript_call_result_404586 = invoke(stypy.reporting.localization.Localization(__file__, 747, 8), getitem___404585, int_404574)
    
    # Assigning a type to the variable 'tuple_var_assignment_401385' (line 747)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'tuple_var_assignment_401385', subscript_call_result_404586)
    
    # Assigning a Name to a Name (line 747):
    # Getting the type of 'tuple_var_assignment_401383' (line 747)
    tuple_var_assignment_401383_404587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'tuple_var_assignment_401383')
    # Assigning a type to the variable 'U1' (line 747)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'U1', tuple_var_assignment_401383_404587)
    
    # Assigning a Name to a Name (line 747):
    # Getting the type of 'tuple_var_assignment_401384' (line 747)
    tuple_var_assignment_401384_404588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'tuple_var_assignment_401384')
    # Assigning a type to the variable 's1' (line 747)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 12), 's1', tuple_var_assignment_401384_404588)
    
    # Assigning a Name to a Name (line 747):
    # Getting the type of 'tuple_var_assignment_401385' (line 747)
    tuple_var_assignment_401385_404589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'tuple_var_assignment_401385')
    # Assigning a type to the variable 'VH1' (line 747)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 16), 'VH1', tuple_var_assignment_401385_404589)
    
    # Assigning a Call to a Tuple (line 748):
    
    # Assigning a Subscript to a Name (line 748):
    
    # Obtaining the type of the subscript
    int_404590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 8), 'int')
    
    # Call to reorder(...): (line 748)
    # Processing the call arguments (line 748)
    
    # Call to svds(...): (line 748)
    # Processing the call arguments (line 748)
    # Getting the type of 'L' (line 748)
    L_404593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 35), 'L', False)
    # Getting the type of 'k' (line 748)
    k_404594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 38), 'k', False)
    # Processing the call keyword arguments (line 748)
    # Getting the type of 'v0' (line 748)
    v0_404595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 44), 'v0', False)
    keyword_404596 = v0_404595
    kwargs_404597 = {'v0': keyword_404596}
    # Getting the type of 'svds' (line 748)
    svds_404592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 748)
    svds_call_result_404598 = invoke(stypy.reporting.localization.Localization(__file__, 748, 30), svds_404592, *[L_404593, k_404594], **kwargs_404597)
    
    # Processing the call keyword arguments (line 748)
    kwargs_404599 = {}
    # Getting the type of 'reorder' (line 748)
    reorder_404591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 748)
    reorder_call_result_404600 = invoke(stypy.reporting.localization.Localization(__file__, 748, 22), reorder_404591, *[svds_call_result_404598], **kwargs_404599)
    
    # Obtaining the member '__getitem__' of a type (line 748)
    getitem___404601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 8), reorder_call_result_404600, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 748)
    subscript_call_result_404602 = invoke(stypy.reporting.localization.Localization(__file__, 748, 8), getitem___404601, int_404590)
    
    # Assigning a type to the variable 'tuple_var_assignment_401386' (line 748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 8), 'tuple_var_assignment_401386', subscript_call_result_404602)
    
    # Assigning a Subscript to a Name (line 748):
    
    # Obtaining the type of the subscript
    int_404603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 8), 'int')
    
    # Call to reorder(...): (line 748)
    # Processing the call arguments (line 748)
    
    # Call to svds(...): (line 748)
    # Processing the call arguments (line 748)
    # Getting the type of 'L' (line 748)
    L_404606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 35), 'L', False)
    # Getting the type of 'k' (line 748)
    k_404607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 38), 'k', False)
    # Processing the call keyword arguments (line 748)
    # Getting the type of 'v0' (line 748)
    v0_404608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 44), 'v0', False)
    keyword_404609 = v0_404608
    kwargs_404610 = {'v0': keyword_404609}
    # Getting the type of 'svds' (line 748)
    svds_404605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 748)
    svds_call_result_404611 = invoke(stypy.reporting.localization.Localization(__file__, 748, 30), svds_404605, *[L_404606, k_404607], **kwargs_404610)
    
    # Processing the call keyword arguments (line 748)
    kwargs_404612 = {}
    # Getting the type of 'reorder' (line 748)
    reorder_404604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 748)
    reorder_call_result_404613 = invoke(stypy.reporting.localization.Localization(__file__, 748, 22), reorder_404604, *[svds_call_result_404611], **kwargs_404612)
    
    # Obtaining the member '__getitem__' of a type (line 748)
    getitem___404614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 8), reorder_call_result_404613, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 748)
    subscript_call_result_404615 = invoke(stypy.reporting.localization.Localization(__file__, 748, 8), getitem___404614, int_404603)
    
    # Assigning a type to the variable 'tuple_var_assignment_401387' (line 748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 8), 'tuple_var_assignment_401387', subscript_call_result_404615)
    
    # Assigning a Subscript to a Name (line 748):
    
    # Obtaining the type of the subscript
    int_404616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 8), 'int')
    
    # Call to reorder(...): (line 748)
    # Processing the call arguments (line 748)
    
    # Call to svds(...): (line 748)
    # Processing the call arguments (line 748)
    # Getting the type of 'L' (line 748)
    L_404619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 35), 'L', False)
    # Getting the type of 'k' (line 748)
    k_404620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 38), 'k', False)
    # Processing the call keyword arguments (line 748)
    # Getting the type of 'v0' (line 748)
    v0_404621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 44), 'v0', False)
    keyword_404622 = v0_404621
    kwargs_404623 = {'v0': keyword_404622}
    # Getting the type of 'svds' (line 748)
    svds_404618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 748)
    svds_call_result_404624 = invoke(stypy.reporting.localization.Localization(__file__, 748, 30), svds_404618, *[L_404619, k_404620], **kwargs_404623)
    
    # Processing the call keyword arguments (line 748)
    kwargs_404625 = {}
    # Getting the type of 'reorder' (line 748)
    reorder_404617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 748)
    reorder_call_result_404626 = invoke(stypy.reporting.localization.Localization(__file__, 748, 22), reorder_404617, *[svds_call_result_404624], **kwargs_404625)
    
    # Obtaining the member '__getitem__' of a type (line 748)
    getitem___404627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 8), reorder_call_result_404626, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 748)
    subscript_call_result_404628 = invoke(stypy.reporting.localization.Localization(__file__, 748, 8), getitem___404627, int_404616)
    
    # Assigning a type to the variable 'tuple_var_assignment_401388' (line 748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 8), 'tuple_var_assignment_401388', subscript_call_result_404628)
    
    # Assigning a Name to a Name (line 748):
    # Getting the type of 'tuple_var_assignment_401386' (line 748)
    tuple_var_assignment_401386_404629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 8), 'tuple_var_assignment_401386')
    # Assigning a type to the variable 'U2' (line 748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 8), 'U2', tuple_var_assignment_401386_404629)
    
    # Assigning a Name to a Name (line 748):
    # Getting the type of 'tuple_var_assignment_401387' (line 748)
    tuple_var_assignment_401387_404630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 8), 'tuple_var_assignment_401387')
    # Assigning a type to the variable 's2' (line 748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 12), 's2', tuple_var_assignment_401387_404630)
    
    # Assigning a Name to a Name (line 748):
    # Getting the type of 'tuple_var_assignment_401388' (line 748)
    tuple_var_assignment_401388_404631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 8), 'tuple_var_assignment_401388')
    # Assigning a type to the variable 'VH2' (line 748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 16), 'VH2', tuple_var_assignment_401388_404631)
    
    # Call to assert_allclose(...): (line 750)
    # Processing the call arguments (line 750)
    
    # Call to abs(...): (line 750)
    # Processing the call arguments (line 750)
    # Getting the type of 'U1' (line 750)
    U1_404635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 31), 'U1', False)
    # Processing the call keyword arguments (line 750)
    kwargs_404636 = {}
    # Getting the type of 'np' (line 750)
    np_404633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 24), 'np', False)
    # Obtaining the member 'abs' of a type (line 750)
    abs_404634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 24), np_404633, 'abs')
    # Calling abs(args, kwargs) (line 750)
    abs_call_result_404637 = invoke(stypy.reporting.localization.Localization(__file__, 750, 24), abs_404634, *[U1_404635], **kwargs_404636)
    
    
    # Call to abs(...): (line 750)
    # Processing the call arguments (line 750)
    # Getting the type of 'U2' (line 750)
    U2_404640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 43), 'U2', False)
    # Processing the call keyword arguments (line 750)
    kwargs_404641 = {}
    # Getting the type of 'np' (line 750)
    np_404638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 36), 'np', False)
    # Obtaining the member 'abs' of a type (line 750)
    abs_404639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 36), np_404638, 'abs')
    # Calling abs(args, kwargs) (line 750)
    abs_call_result_404642 = invoke(stypy.reporting.localization.Localization(__file__, 750, 36), abs_404639, *[U2_404640], **kwargs_404641)
    
    # Processing the call keyword arguments (line 750)
    kwargs_404643 = {}
    # Getting the type of 'assert_allclose' (line 750)
    assert_allclose_404632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 750)
    assert_allclose_call_result_404644 = invoke(stypy.reporting.localization.Localization(__file__, 750, 8), assert_allclose_404632, *[abs_call_result_404637, abs_call_result_404642], **kwargs_404643)
    
    
    # Call to assert_allclose(...): (line 751)
    # Processing the call arguments (line 751)
    # Getting the type of 's1' (line 751)
    s1_404646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 24), 's1', False)
    # Getting the type of 's2' (line 751)
    s2_404647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 28), 's2', False)
    # Processing the call keyword arguments (line 751)
    kwargs_404648 = {}
    # Getting the type of 'assert_allclose' (line 751)
    assert_allclose_404645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 751)
    assert_allclose_call_result_404649 = invoke(stypy.reporting.localization.Localization(__file__, 751, 8), assert_allclose_404645, *[s1_404646, s2_404647], **kwargs_404648)
    
    
    # Call to assert_allclose(...): (line 752)
    # Processing the call arguments (line 752)
    
    # Call to abs(...): (line 752)
    # Processing the call arguments (line 752)
    # Getting the type of 'VH1' (line 752)
    VH1_404653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 31), 'VH1', False)
    # Processing the call keyword arguments (line 752)
    kwargs_404654 = {}
    # Getting the type of 'np' (line 752)
    np_404651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 24), 'np', False)
    # Obtaining the member 'abs' of a type (line 752)
    abs_404652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 24), np_404651, 'abs')
    # Calling abs(args, kwargs) (line 752)
    abs_call_result_404655 = invoke(stypy.reporting.localization.Localization(__file__, 752, 24), abs_404652, *[VH1_404653], **kwargs_404654)
    
    
    # Call to abs(...): (line 752)
    # Processing the call arguments (line 752)
    # Getting the type of 'VH2' (line 752)
    VH2_404658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 44), 'VH2', False)
    # Processing the call keyword arguments (line 752)
    kwargs_404659 = {}
    # Getting the type of 'np' (line 752)
    np_404656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 37), 'np', False)
    # Obtaining the member 'abs' of a type (line 752)
    abs_404657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 37), np_404656, 'abs')
    # Calling abs(args, kwargs) (line 752)
    abs_call_result_404660 = invoke(stypy.reporting.localization.Localization(__file__, 752, 37), abs_404657, *[VH2_404658], **kwargs_404659)
    
    # Processing the call keyword arguments (line 752)
    kwargs_404661 = {}
    # Getting the type of 'assert_allclose' (line 752)
    assert_allclose_404650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 752)
    assert_allclose_call_result_404662 = invoke(stypy.reporting.localization.Localization(__file__, 752, 8), assert_allclose_404650, *[abs_call_result_404655, abs_call_result_404660], **kwargs_404661)
    
    
    # Call to assert_allclose(...): (line 753)
    # Processing the call arguments (line 753)
    
    # Call to dot(...): (line 753)
    # Processing the call arguments (line 753)
    # Getting the type of 'U1' (line 753)
    U1_404666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 31), 'U1', False)
    
    # Call to dot(...): (line 753)
    # Processing the call arguments (line 753)
    
    # Call to diag(...): (line 753)
    # Processing the call arguments (line 753)
    # Getting the type of 's1' (line 753)
    s1_404671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 50), 's1', False)
    # Processing the call keyword arguments (line 753)
    kwargs_404672 = {}
    # Getting the type of 'np' (line 753)
    np_404669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 42), 'np', False)
    # Obtaining the member 'diag' of a type (line 753)
    diag_404670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 42), np_404669, 'diag')
    # Calling diag(args, kwargs) (line 753)
    diag_call_result_404673 = invoke(stypy.reporting.localization.Localization(__file__, 753, 42), diag_404670, *[s1_404671], **kwargs_404672)
    
    # Getting the type of 'VH1' (line 753)
    VH1_404674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 55), 'VH1', False)
    # Processing the call keyword arguments (line 753)
    kwargs_404675 = {}
    # Getting the type of 'np' (line 753)
    np_404667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 35), 'np', False)
    # Obtaining the member 'dot' of a type (line 753)
    dot_404668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 35), np_404667, 'dot')
    # Calling dot(args, kwargs) (line 753)
    dot_call_result_404676 = invoke(stypy.reporting.localization.Localization(__file__, 753, 35), dot_404668, *[diag_call_result_404673, VH1_404674], **kwargs_404675)
    
    # Processing the call keyword arguments (line 753)
    kwargs_404677 = {}
    # Getting the type of 'np' (line 753)
    np_404664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 24), 'np', False)
    # Obtaining the member 'dot' of a type (line 753)
    dot_404665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 24), np_404664, 'dot')
    # Calling dot(args, kwargs) (line 753)
    dot_call_result_404678 = invoke(stypy.reporting.localization.Localization(__file__, 753, 24), dot_404665, *[U1_404666, dot_call_result_404676], **kwargs_404677)
    
    
    # Call to dot(...): (line 754)
    # Processing the call arguments (line 754)
    # Getting the type of 'U2' (line 754)
    U2_404681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 31), 'U2', False)
    
    # Call to dot(...): (line 754)
    # Processing the call arguments (line 754)
    
    # Call to diag(...): (line 754)
    # Processing the call arguments (line 754)
    # Getting the type of 's2' (line 754)
    s2_404686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 50), 's2', False)
    # Processing the call keyword arguments (line 754)
    kwargs_404687 = {}
    # Getting the type of 'np' (line 754)
    np_404684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 42), 'np', False)
    # Obtaining the member 'diag' of a type (line 754)
    diag_404685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 42), np_404684, 'diag')
    # Calling diag(args, kwargs) (line 754)
    diag_call_result_404688 = invoke(stypy.reporting.localization.Localization(__file__, 754, 42), diag_404685, *[s2_404686], **kwargs_404687)
    
    # Getting the type of 'VH2' (line 754)
    VH2_404689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 55), 'VH2', False)
    # Processing the call keyword arguments (line 754)
    kwargs_404690 = {}
    # Getting the type of 'np' (line 754)
    np_404682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 35), 'np', False)
    # Obtaining the member 'dot' of a type (line 754)
    dot_404683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 35), np_404682, 'dot')
    # Calling dot(args, kwargs) (line 754)
    dot_call_result_404691 = invoke(stypy.reporting.localization.Localization(__file__, 754, 35), dot_404683, *[diag_call_result_404688, VH2_404689], **kwargs_404690)
    
    # Processing the call keyword arguments (line 754)
    kwargs_404692 = {}
    # Getting the type of 'np' (line 754)
    np_404679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 24), 'np', False)
    # Obtaining the member 'dot' of a type (line 754)
    dot_404680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 24), np_404679, 'dot')
    # Calling dot(args, kwargs) (line 754)
    dot_call_result_404693 = invoke(stypy.reporting.localization.Localization(__file__, 754, 24), dot_404680, *[U2_404681, dot_call_result_404691], **kwargs_404692)
    
    # Processing the call keyword arguments (line 753)
    kwargs_404694 = {}
    # Getting the type of 'assert_allclose' (line 753)
    assert_allclose_404663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 753)
    assert_allclose_call_result_404695 = invoke(stypy.reporting.localization.Localization(__file__, 753, 8), assert_allclose_404663, *[dot_call_result_404678, dot_call_result_404693], **kwargs_404694)
    
    
    # Assigning a Call to a Name (line 757):
    
    # Assigning a Call to a Name (line 757):
    
    # Call to randn(...): (line 757)
    # Processing the call arguments (line 757)
    # Getting the type of 'n' (line 757)
    n_404703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 46), 'n', False)
    # Getting the type of 'm' (line 757)
    m_404704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 49), 'm', False)
    # Processing the call keyword arguments (line 757)
    kwargs_404705 = {}
    
    # Call to RandomState(...): (line 757)
    # Processing the call arguments (line 757)
    int_404699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 34), 'int')
    # Processing the call keyword arguments (line 757)
    kwargs_404700 = {}
    # Getting the type of 'np' (line 757)
    np_404696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 12), 'np', False)
    # Obtaining the member 'random' of a type (line 757)
    random_404697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 12), np_404696, 'random')
    # Obtaining the member 'RandomState' of a type (line 757)
    RandomState_404698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 12), random_404697, 'RandomState')
    # Calling RandomState(args, kwargs) (line 757)
    RandomState_call_result_404701 = invoke(stypy.reporting.localization.Localization(__file__, 757, 12), RandomState_404698, *[int_404699], **kwargs_404700)
    
    # Obtaining the member 'randn' of a type (line 757)
    randn_404702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 12), RandomState_call_result_404701, 'randn')
    # Calling randn(args, kwargs) (line 757)
    randn_call_result_404706 = invoke(stypy.reporting.localization.Localization(__file__, 757, 12), randn_404702, *[n_404703, m_404704], **kwargs_404705)
    
    # Assigning a type to the variable 'A' (line 757)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 757, 8), 'A', randn_call_result_404706)
    
    # Assigning a Call to a Name (line 758):
    
    # Assigning a Call to a Name (line 758):
    
    # Call to CheckingLinearOperator(...): (line 758)
    # Processing the call arguments (line 758)
    # Getting the type of 'A' (line 758)
    A_404708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 35), 'A', False)
    # Processing the call keyword arguments (line 758)
    kwargs_404709 = {}
    # Getting the type of 'CheckingLinearOperator' (line 758)
    CheckingLinearOperator_404707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 12), 'CheckingLinearOperator', False)
    # Calling CheckingLinearOperator(args, kwargs) (line 758)
    CheckingLinearOperator_call_result_404710 = invoke(stypy.reporting.localization.Localization(__file__, 758, 12), CheckingLinearOperator_404707, *[A_404708], **kwargs_404709)
    
    # Assigning a type to the variable 'L' (line 758)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 758, 8), 'L', CheckingLinearOperator_call_result_404710)
    
    # Assigning a Call to a Tuple (line 760):
    
    # Assigning a Subscript to a Name (line 760):
    
    # Obtaining the type of the subscript
    int_404711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 8), 'int')
    
    # Call to reorder(...): (line 760)
    # Processing the call arguments (line 760)
    
    # Call to svds(...): (line 760)
    # Processing the call arguments (line 760)
    # Getting the type of 'A' (line 760)
    A_404714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 35), 'A', False)
    # Getting the type of 'k' (line 760)
    k_404715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 38), 'k', False)
    # Processing the call keyword arguments (line 760)
    str_404716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 47), 'str', 'SM')
    keyword_404717 = str_404716
    kwargs_404718 = {'which': keyword_404717}
    # Getting the type of 'svds' (line 760)
    svds_404713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 760)
    svds_call_result_404719 = invoke(stypy.reporting.localization.Localization(__file__, 760, 30), svds_404713, *[A_404714, k_404715], **kwargs_404718)
    
    # Processing the call keyword arguments (line 760)
    kwargs_404720 = {}
    # Getting the type of 'reorder' (line 760)
    reorder_404712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 760)
    reorder_call_result_404721 = invoke(stypy.reporting.localization.Localization(__file__, 760, 22), reorder_404712, *[svds_call_result_404719], **kwargs_404720)
    
    # Obtaining the member '__getitem__' of a type (line 760)
    getitem___404722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 8), reorder_call_result_404721, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 760)
    subscript_call_result_404723 = invoke(stypy.reporting.localization.Localization(__file__, 760, 8), getitem___404722, int_404711)
    
    # Assigning a type to the variable 'tuple_var_assignment_401389' (line 760)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_var_assignment_401389', subscript_call_result_404723)
    
    # Assigning a Subscript to a Name (line 760):
    
    # Obtaining the type of the subscript
    int_404724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 8), 'int')
    
    # Call to reorder(...): (line 760)
    # Processing the call arguments (line 760)
    
    # Call to svds(...): (line 760)
    # Processing the call arguments (line 760)
    # Getting the type of 'A' (line 760)
    A_404727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 35), 'A', False)
    # Getting the type of 'k' (line 760)
    k_404728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 38), 'k', False)
    # Processing the call keyword arguments (line 760)
    str_404729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 47), 'str', 'SM')
    keyword_404730 = str_404729
    kwargs_404731 = {'which': keyword_404730}
    # Getting the type of 'svds' (line 760)
    svds_404726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 760)
    svds_call_result_404732 = invoke(stypy.reporting.localization.Localization(__file__, 760, 30), svds_404726, *[A_404727, k_404728], **kwargs_404731)
    
    # Processing the call keyword arguments (line 760)
    kwargs_404733 = {}
    # Getting the type of 'reorder' (line 760)
    reorder_404725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 760)
    reorder_call_result_404734 = invoke(stypy.reporting.localization.Localization(__file__, 760, 22), reorder_404725, *[svds_call_result_404732], **kwargs_404733)
    
    # Obtaining the member '__getitem__' of a type (line 760)
    getitem___404735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 8), reorder_call_result_404734, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 760)
    subscript_call_result_404736 = invoke(stypy.reporting.localization.Localization(__file__, 760, 8), getitem___404735, int_404724)
    
    # Assigning a type to the variable 'tuple_var_assignment_401390' (line 760)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_var_assignment_401390', subscript_call_result_404736)
    
    # Assigning a Subscript to a Name (line 760):
    
    # Obtaining the type of the subscript
    int_404737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 8), 'int')
    
    # Call to reorder(...): (line 760)
    # Processing the call arguments (line 760)
    
    # Call to svds(...): (line 760)
    # Processing the call arguments (line 760)
    # Getting the type of 'A' (line 760)
    A_404740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 35), 'A', False)
    # Getting the type of 'k' (line 760)
    k_404741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 38), 'k', False)
    # Processing the call keyword arguments (line 760)
    str_404742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 47), 'str', 'SM')
    keyword_404743 = str_404742
    kwargs_404744 = {'which': keyword_404743}
    # Getting the type of 'svds' (line 760)
    svds_404739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 760)
    svds_call_result_404745 = invoke(stypy.reporting.localization.Localization(__file__, 760, 30), svds_404739, *[A_404740, k_404741], **kwargs_404744)
    
    # Processing the call keyword arguments (line 760)
    kwargs_404746 = {}
    # Getting the type of 'reorder' (line 760)
    reorder_404738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 760)
    reorder_call_result_404747 = invoke(stypy.reporting.localization.Localization(__file__, 760, 22), reorder_404738, *[svds_call_result_404745], **kwargs_404746)
    
    # Obtaining the member '__getitem__' of a type (line 760)
    getitem___404748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 8), reorder_call_result_404747, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 760)
    subscript_call_result_404749 = invoke(stypy.reporting.localization.Localization(__file__, 760, 8), getitem___404748, int_404737)
    
    # Assigning a type to the variable 'tuple_var_assignment_401391' (line 760)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_var_assignment_401391', subscript_call_result_404749)
    
    # Assigning a Name to a Name (line 760):
    # Getting the type of 'tuple_var_assignment_401389' (line 760)
    tuple_var_assignment_401389_404750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_var_assignment_401389')
    # Assigning a type to the variable 'U1' (line 760)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'U1', tuple_var_assignment_401389_404750)
    
    # Assigning a Name to a Name (line 760):
    # Getting the type of 'tuple_var_assignment_401390' (line 760)
    tuple_var_assignment_401390_404751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_var_assignment_401390')
    # Assigning a type to the variable 's1' (line 760)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 12), 's1', tuple_var_assignment_401390_404751)
    
    # Assigning a Name to a Name (line 760):
    # Getting the type of 'tuple_var_assignment_401391' (line 760)
    tuple_var_assignment_401391_404752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_var_assignment_401391')
    # Assigning a type to the variable 'VH1' (line 760)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 16), 'VH1', tuple_var_assignment_401391_404752)
    
    # Assigning a Call to a Tuple (line 761):
    
    # Assigning a Subscript to a Name (line 761):
    
    # Obtaining the type of the subscript
    int_404753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 8), 'int')
    
    # Call to reorder(...): (line 761)
    # Processing the call arguments (line 761)
    
    # Call to svds(...): (line 761)
    # Processing the call arguments (line 761)
    # Getting the type of 'L' (line 761)
    L_404756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 35), 'L', False)
    # Getting the type of 'k' (line 761)
    k_404757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 38), 'k', False)
    # Processing the call keyword arguments (line 761)
    str_404758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 47), 'str', 'SM')
    keyword_404759 = str_404758
    kwargs_404760 = {'which': keyword_404759}
    # Getting the type of 'svds' (line 761)
    svds_404755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 761)
    svds_call_result_404761 = invoke(stypy.reporting.localization.Localization(__file__, 761, 30), svds_404755, *[L_404756, k_404757], **kwargs_404760)
    
    # Processing the call keyword arguments (line 761)
    kwargs_404762 = {}
    # Getting the type of 'reorder' (line 761)
    reorder_404754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 761)
    reorder_call_result_404763 = invoke(stypy.reporting.localization.Localization(__file__, 761, 22), reorder_404754, *[svds_call_result_404761], **kwargs_404762)
    
    # Obtaining the member '__getitem__' of a type (line 761)
    getitem___404764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 8), reorder_call_result_404763, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 761)
    subscript_call_result_404765 = invoke(stypy.reporting.localization.Localization(__file__, 761, 8), getitem___404764, int_404753)
    
    # Assigning a type to the variable 'tuple_var_assignment_401392' (line 761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'tuple_var_assignment_401392', subscript_call_result_404765)
    
    # Assigning a Subscript to a Name (line 761):
    
    # Obtaining the type of the subscript
    int_404766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 8), 'int')
    
    # Call to reorder(...): (line 761)
    # Processing the call arguments (line 761)
    
    # Call to svds(...): (line 761)
    # Processing the call arguments (line 761)
    # Getting the type of 'L' (line 761)
    L_404769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 35), 'L', False)
    # Getting the type of 'k' (line 761)
    k_404770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 38), 'k', False)
    # Processing the call keyword arguments (line 761)
    str_404771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 47), 'str', 'SM')
    keyword_404772 = str_404771
    kwargs_404773 = {'which': keyword_404772}
    # Getting the type of 'svds' (line 761)
    svds_404768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 761)
    svds_call_result_404774 = invoke(stypy.reporting.localization.Localization(__file__, 761, 30), svds_404768, *[L_404769, k_404770], **kwargs_404773)
    
    # Processing the call keyword arguments (line 761)
    kwargs_404775 = {}
    # Getting the type of 'reorder' (line 761)
    reorder_404767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 761)
    reorder_call_result_404776 = invoke(stypy.reporting.localization.Localization(__file__, 761, 22), reorder_404767, *[svds_call_result_404774], **kwargs_404775)
    
    # Obtaining the member '__getitem__' of a type (line 761)
    getitem___404777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 8), reorder_call_result_404776, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 761)
    subscript_call_result_404778 = invoke(stypy.reporting.localization.Localization(__file__, 761, 8), getitem___404777, int_404766)
    
    # Assigning a type to the variable 'tuple_var_assignment_401393' (line 761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'tuple_var_assignment_401393', subscript_call_result_404778)
    
    # Assigning a Subscript to a Name (line 761):
    
    # Obtaining the type of the subscript
    int_404779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 8), 'int')
    
    # Call to reorder(...): (line 761)
    # Processing the call arguments (line 761)
    
    # Call to svds(...): (line 761)
    # Processing the call arguments (line 761)
    # Getting the type of 'L' (line 761)
    L_404782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 35), 'L', False)
    # Getting the type of 'k' (line 761)
    k_404783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 38), 'k', False)
    # Processing the call keyword arguments (line 761)
    str_404784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 47), 'str', 'SM')
    keyword_404785 = str_404784
    kwargs_404786 = {'which': keyword_404785}
    # Getting the type of 'svds' (line 761)
    svds_404781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 30), 'svds', False)
    # Calling svds(args, kwargs) (line 761)
    svds_call_result_404787 = invoke(stypy.reporting.localization.Localization(__file__, 761, 30), svds_404781, *[L_404782, k_404783], **kwargs_404786)
    
    # Processing the call keyword arguments (line 761)
    kwargs_404788 = {}
    # Getting the type of 'reorder' (line 761)
    reorder_404780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 22), 'reorder', False)
    # Calling reorder(args, kwargs) (line 761)
    reorder_call_result_404789 = invoke(stypy.reporting.localization.Localization(__file__, 761, 22), reorder_404780, *[svds_call_result_404787], **kwargs_404788)
    
    # Obtaining the member '__getitem__' of a type (line 761)
    getitem___404790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 8), reorder_call_result_404789, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 761)
    subscript_call_result_404791 = invoke(stypy.reporting.localization.Localization(__file__, 761, 8), getitem___404790, int_404779)
    
    # Assigning a type to the variable 'tuple_var_assignment_401394' (line 761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'tuple_var_assignment_401394', subscript_call_result_404791)
    
    # Assigning a Name to a Name (line 761):
    # Getting the type of 'tuple_var_assignment_401392' (line 761)
    tuple_var_assignment_401392_404792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'tuple_var_assignment_401392')
    # Assigning a type to the variable 'U2' (line 761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'U2', tuple_var_assignment_401392_404792)
    
    # Assigning a Name to a Name (line 761):
    # Getting the type of 'tuple_var_assignment_401393' (line 761)
    tuple_var_assignment_401393_404793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'tuple_var_assignment_401393')
    # Assigning a type to the variable 's2' (line 761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 12), 's2', tuple_var_assignment_401393_404793)
    
    # Assigning a Name to a Name (line 761):
    # Getting the type of 'tuple_var_assignment_401394' (line 761)
    tuple_var_assignment_401394_404794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 8), 'tuple_var_assignment_401394')
    # Assigning a type to the variable 'VH2' (line 761)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 16), 'VH2', tuple_var_assignment_401394_404794)
    
    # Call to assert_allclose(...): (line 763)
    # Processing the call arguments (line 763)
    
    # Call to abs(...): (line 763)
    # Processing the call arguments (line 763)
    # Getting the type of 'U1' (line 763)
    U1_404798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 31), 'U1', False)
    # Processing the call keyword arguments (line 763)
    kwargs_404799 = {}
    # Getting the type of 'np' (line 763)
    np_404796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 24), 'np', False)
    # Obtaining the member 'abs' of a type (line 763)
    abs_404797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 24), np_404796, 'abs')
    # Calling abs(args, kwargs) (line 763)
    abs_call_result_404800 = invoke(stypy.reporting.localization.Localization(__file__, 763, 24), abs_404797, *[U1_404798], **kwargs_404799)
    
    
    # Call to abs(...): (line 763)
    # Processing the call arguments (line 763)
    # Getting the type of 'U2' (line 763)
    U2_404803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 43), 'U2', False)
    # Processing the call keyword arguments (line 763)
    kwargs_404804 = {}
    # Getting the type of 'np' (line 763)
    np_404801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 36), 'np', False)
    # Obtaining the member 'abs' of a type (line 763)
    abs_404802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 36), np_404801, 'abs')
    # Calling abs(args, kwargs) (line 763)
    abs_call_result_404805 = invoke(stypy.reporting.localization.Localization(__file__, 763, 36), abs_404802, *[U2_404803], **kwargs_404804)
    
    # Processing the call keyword arguments (line 763)
    kwargs_404806 = {}
    # Getting the type of 'assert_allclose' (line 763)
    assert_allclose_404795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 763)
    assert_allclose_call_result_404807 = invoke(stypy.reporting.localization.Localization(__file__, 763, 8), assert_allclose_404795, *[abs_call_result_404800, abs_call_result_404805], **kwargs_404806)
    
    
    # Call to assert_allclose(...): (line 764)
    # Processing the call arguments (line 764)
    # Getting the type of 's1' (line 764)
    s1_404809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 24), 's1', False)
    # Getting the type of 's2' (line 764)
    s2_404810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 28), 's2', False)
    # Processing the call keyword arguments (line 764)
    kwargs_404811 = {}
    # Getting the type of 'assert_allclose' (line 764)
    assert_allclose_404808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 764)
    assert_allclose_call_result_404812 = invoke(stypy.reporting.localization.Localization(__file__, 764, 8), assert_allclose_404808, *[s1_404809, s2_404810], **kwargs_404811)
    
    
    # Call to assert_allclose(...): (line 765)
    # Processing the call arguments (line 765)
    
    # Call to abs(...): (line 765)
    # Processing the call arguments (line 765)
    # Getting the type of 'VH1' (line 765)
    VH1_404816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 31), 'VH1', False)
    # Processing the call keyword arguments (line 765)
    kwargs_404817 = {}
    # Getting the type of 'np' (line 765)
    np_404814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 24), 'np', False)
    # Obtaining the member 'abs' of a type (line 765)
    abs_404815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 24), np_404814, 'abs')
    # Calling abs(args, kwargs) (line 765)
    abs_call_result_404818 = invoke(stypy.reporting.localization.Localization(__file__, 765, 24), abs_404815, *[VH1_404816], **kwargs_404817)
    
    
    # Call to abs(...): (line 765)
    # Processing the call arguments (line 765)
    # Getting the type of 'VH2' (line 765)
    VH2_404821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 44), 'VH2', False)
    # Processing the call keyword arguments (line 765)
    kwargs_404822 = {}
    # Getting the type of 'np' (line 765)
    np_404819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 37), 'np', False)
    # Obtaining the member 'abs' of a type (line 765)
    abs_404820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 37), np_404819, 'abs')
    # Calling abs(args, kwargs) (line 765)
    abs_call_result_404823 = invoke(stypy.reporting.localization.Localization(__file__, 765, 37), abs_404820, *[VH2_404821], **kwargs_404822)
    
    # Processing the call keyword arguments (line 765)
    kwargs_404824 = {}
    # Getting the type of 'assert_allclose' (line 765)
    assert_allclose_404813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 765)
    assert_allclose_call_result_404825 = invoke(stypy.reporting.localization.Localization(__file__, 765, 8), assert_allclose_404813, *[abs_call_result_404818, abs_call_result_404823], **kwargs_404824)
    
    
    # Call to assert_allclose(...): (line 766)
    # Processing the call arguments (line 766)
    
    # Call to dot(...): (line 766)
    # Processing the call arguments (line 766)
    # Getting the type of 'U1' (line 766)
    U1_404829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 31), 'U1', False)
    
    # Call to dot(...): (line 766)
    # Processing the call arguments (line 766)
    
    # Call to diag(...): (line 766)
    # Processing the call arguments (line 766)
    # Getting the type of 's1' (line 766)
    s1_404834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 50), 's1', False)
    # Processing the call keyword arguments (line 766)
    kwargs_404835 = {}
    # Getting the type of 'np' (line 766)
    np_404832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 42), 'np', False)
    # Obtaining the member 'diag' of a type (line 766)
    diag_404833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 42), np_404832, 'diag')
    # Calling diag(args, kwargs) (line 766)
    diag_call_result_404836 = invoke(stypy.reporting.localization.Localization(__file__, 766, 42), diag_404833, *[s1_404834], **kwargs_404835)
    
    # Getting the type of 'VH1' (line 766)
    VH1_404837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 55), 'VH1', False)
    # Processing the call keyword arguments (line 766)
    kwargs_404838 = {}
    # Getting the type of 'np' (line 766)
    np_404830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 35), 'np', False)
    # Obtaining the member 'dot' of a type (line 766)
    dot_404831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 35), np_404830, 'dot')
    # Calling dot(args, kwargs) (line 766)
    dot_call_result_404839 = invoke(stypy.reporting.localization.Localization(__file__, 766, 35), dot_404831, *[diag_call_result_404836, VH1_404837], **kwargs_404838)
    
    # Processing the call keyword arguments (line 766)
    kwargs_404840 = {}
    # Getting the type of 'np' (line 766)
    np_404827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 24), 'np', False)
    # Obtaining the member 'dot' of a type (line 766)
    dot_404828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 24), np_404827, 'dot')
    # Calling dot(args, kwargs) (line 766)
    dot_call_result_404841 = invoke(stypy.reporting.localization.Localization(__file__, 766, 24), dot_404828, *[U1_404829, dot_call_result_404839], **kwargs_404840)
    
    
    # Call to dot(...): (line 767)
    # Processing the call arguments (line 767)
    # Getting the type of 'U2' (line 767)
    U2_404844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 31), 'U2', False)
    
    # Call to dot(...): (line 767)
    # Processing the call arguments (line 767)
    
    # Call to diag(...): (line 767)
    # Processing the call arguments (line 767)
    # Getting the type of 's2' (line 767)
    s2_404849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 50), 's2', False)
    # Processing the call keyword arguments (line 767)
    kwargs_404850 = {}
    # Getting the type of 'np' (line 767)
    np_404847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 42), 'np', False)
    # Obtaining the member 'diag' of a type (line 767)
    diag_404848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 42), np_404847, 'diag')
    # Calling diag(args, kwargs) (line 767)
    diag_call_result_404851 = invoke(stypy.reporting.localization.Localization(__file__, 767, 42), diag_404848, *[s2_404849], **kwargs_404850)
    
    # Getting the type of 'VH2' (line 767)
    VH2_404852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 55), 'VH2', False)
    # Processing the call keyword arguments (line 767)
    kwargs_404853 = {}
    # Getting the type of 'np' (line 767)
    np_404845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 35), 'np', False)
    # Obtaining the member 'dot' of a type (line 767)
    dot_404846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 35), np_404845, 'dot')
    # Calling dot(args, kwargs) (line 767)
    dot_call_result_404854 = invoke(stypy.reporting.localization.Localization(__file__, 767, 35), dot_404846, *[diag_call_result_404851, VH2_404852], **kwargs_404853)
    
    # Processing the call keyword arguments (line 767)
    kwargs_404855 = {}
    # Getting the type of 'np' (line 767)
    np_404842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 24), 'np', False)
    # Obtaining the member 'dot' of a type (line 767)
    dot_404843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 24), np_404842, 'dot')
    # Calling dot(args, kwargs) (line 767)
    dot_call_result_404856 = invoke(stypy.reporting.localization.Localization(__file__, 767, 24), dot_404843, *[U2_404844, dot_call_result_404854], **kwargs_404855)
    
    # Processing the call keyword arguments (line 766)
    kwargs_404857 = {}
    # Getting the type of 'assert_allclose' (line 766)
    assert_allclose_404826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 766)
    assert_allclose_call_result_404858 = invoke(stypy.reporting.localization.Localization(__file__, 766, 8), assert_allclose_404826, *[dot_call_result_404841, dot_call_result_404856], **kwargs_404857)
    
    
    
    # Getting the type of 'k' (line 769)
    k_404859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 11), 'k')
    
    # Call to min(...): (line 769)
    # Processing the call arguments (line 769)
    # Getting the type of 'n' (line 769)
    n_404861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 19), 'n', False)
    # Getting the type of 'm' (line 769)
    m_404862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 22), 'm', False)
    # Processing the call keyword arguments (line 769)
    kwargs_404863 = {}
    # Getting the type of 'min' (line 769)
    min_404860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 15), 'min', False)
    # Calling min(args, kwargs) (line 769)
    min_call_result_404864 = invoke(stypy.reporting.localization.Localization(__file__, 769, 15), min_404860, *[n_404861, m_404862], **kwargs_404863)
    
    int_404865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 27), 'int')
    # Applying the binary operator '-' (line 769)
    result_sub_404866 = python_operator(stypy.reporting.localization.Localization(__file__, 769, 15), '-', min_call_result_404864, int_404865)
    
    # Applying the binary operator '<' (line 769)
    result_lt_404867 = python_operator(stypy.reporting.localization.Localization(__file__, 769, 11), '<', k_404859, result_sub_404866)
    
    # Testing the type of an if condition (line 769)
    if_condition_404868 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 769, 8), result_lt_404867)
    # Assigning a type to the variable 'if_condition_404868' (line 769)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'if_condition_404868', if_condition_404868)
    # SSA begins for if statement (line 769)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Obtaining an instance of the builtin type 'list' (line 771)
    list_404869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 29), 'list')
    # Adding type elements to the builtin type 'list' instance (line 771)
    # Adding element type (line 771)
    
    # Obtaining an instance of the builtin type 'tuple' (line 771)
    tuple_404870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 31), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 771)
    # Adding element type (line 771)
    # Getting the type of 'complex' (line 771)
    complex_404871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 31), 'complex')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 31), tuple_404870, complex_404871)
    # Adding element type (line 771)
    float_404872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 40), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 31), tuple_404870, float_404872)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 29), list_404869, tuple_404870)
    # Adding element type (line 771)
    
    # Obtaining an instance of the builtin type 'tuple' (line 771)
    tuple_404873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 48), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 771)
    # Adding element type (line 771)
    # Getting the type of 'np' (line 771)
    np_404874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 48), 'np')
    # Obtaining the member 'complex64' of a type (line 771)
    complex64_404875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 771, 48), np_404874, 'complex64')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 48), tuple_404873, complex64_404875)
    # Adding element type (line 771)
    float_404876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 62), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 48), tuple_404873, float_404876)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 29), list_404869, tuple_404873)
    
    # Testing the type of a for loop iterable (line 771)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 771, 12), list_404869)
    # Getting the type of the for loop variable (line 771)
    for_loop_var_404877 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 771, 12), list_404869)
    # Assigning a type to the variable 'dt' (line 771)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 12), 'dt', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 12), for_loop_var_404877))
    # Assigning a type to the variable 'eps' (line 771)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 12), 'eps', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 12), for_loop_var_404877))
    # SSA begins for a for statement (line 771)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 772):
    
    # Assigning a Call to a Name (line 772):
    
    # Call to RandomState(...): (line 772)
    # Processing the call arguments (line 772)
    int_404881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 44), 'int')
    # Processing the call keyword arguments (line 772)
    kwargs_404882 = {}
    # Getting the type of 'np' (line 772)
    np_404878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 22), 'np', False)
    # Obtaining the member 'random' of a type (line 772)
    random_404879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 22), np_404878, 'random')
    # Obtaining the member 'RandomState' of a type (line 772)
    RandomState_404880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 22), random_404879, 'RandomState')
    # Calling RandomState(args, kwargs) (line 772)
    RandomState_call_result_404883 = invoke(stypy.reporting.localization.Localization(__file__, 772, 22), RandomState_404880, *[int_404881], **kwargs_404882)
    
    # Assigning a type to the variable 'rng' (line 772)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 16), 'rng', RandomState_call_result_404883)
    
    # Assigning a Call to a Name (line 773):
    
    # Assigning a Call to a Name (line 773):
    
    # Call to astype(...): (line 773)
    # Processing the call arguments (line 773)
    # Getting the type of 'dt' (line 773)
    dt_404900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 68), 'dt', False)
    # Processing the call keyword arguments (line 773)
    kwargs_404901 = {}
    
    # Call to randn(...): (line 773)
    # Processing the call arguments (line 773)
    # Getting the type of 'n' (line 773)
    n_404886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 31), 'n', False)
    # Getting the type of 'm' (line 773)
    m_404887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 34), 'm', False)
    # Processing the call keyword arguments (line 773)
    kwargs_404888 = {}
    # Getting the type of 'rng' (line 773)
    rng_404884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 21), 'rng', False)
    # Obtaining the member 'randn' of a type (line 773)
    randn_404885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 21), rng_404884, 'randn')
    # Calling randn(args, kwargs) (line 773)
    randn_call_result_404889 = invoke(stypy.reporting.localization.Localization(__file__, 773, 21), randn_404885, *[n_404886, m_404887], **kwargs_404888)
    
    complex_404890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 39), 'complex')
    
    # Call to randn(...): (line 773)
    # Processing the call arguments (line 773)
    # Getting the type of 'n' (line 773)
    n_404893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 54), 'n', False)
    # Getting the type of 'm' (line 773)
    m_404894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 57), 'm', False)
    # Processing the call keyword arguments (line 773)
    kwargs_404895 = {}
    # Getting the type of 'rng' (line 773)
    rng_404891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 44), 'rng', False)
    # Obtaining the member 'randn' of a type (line 773)
    randn_404892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 44), rng_404891, 'randn')
    # Calling randn(args, kwargs) (line 773)
    randn_call_result_404896 = invoke(stypy.reporting.localization.Localization(__file__, 773, 44), randn_404892, *[n_404893, m_404894], **kwargs_404895)
    
    # Applying the binary operator '*' (line 773)
    result_mul_404897 = python_operator(stypy.reporting.localization.Localization(__file__, 773, 39), '*', complex_404890, randn_call_result_404896)
    
    # Applying the binary operator '+' (line 773)
    result_add_404898 = python_operator(stypy.reporting.localization.Localization(__file__, 773, 21), '+', randn_call_result_404889, result_mul_404897)
    
    # Obtaining the member 'astype' of a type (line 773)
    astype_404899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 21), result_add_404898, 'astype')
    # Calling astype(args, kwargs) (line 773)
    astype_call_result_404902 = invoke(stypy.reporting.localization.Localization(__file__, 773, 21), astype_404899, *[dt_404900], **kwargs_404901)
    
    # Assigning a type to the variable 'A' (line 773)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 16), 'A', astype_call_result_404902)
    
    # Assigning a Call to a Name (line 774):
    
    # Assigning a Call to a Name (line 774):
    
    # Call to CheckingLinearOperator(...): (line 774)
    # Processing the call arguments (line 774)
    # Getting the type of 'A' (line 774)
    A_404904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 43), 'A', False)
    # Processing the call keyword arguments (line 774)
    kwargs_404905 = {}
    # Getting the type of 'CheckingLinearOperator' (line 774)
    CheckingLinearOperator_404903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 20), 'CheckingLinearOperator', False)
    # Calling CheckingLinearOperator(args, kwargs) (line 774)
    CheckingLinearOperator_call_result_404906 = invoke(stypy.reporting.localization.Localization(__file__, 774, 20), CheckingLinearOperator_404903, *[A_404904], **kwargs_404905)
    
    # Assigning a type to the variable 'L' (line 774)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 16), 'L', CheckingLinearOperator_call_result_404906)
    
    # Assigning a Call to a Tuple (line 776):
    
    # Assigning a Subscript to a Name (line 776):
    
    # Obtaining the type of the subscript
    int_404907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 16), 'int')
    
    # Call to reorder(...): (line 776)
    # Processing the call arguments (line 776)
    
    # Call to svds(...): (line 776)
    # Processing the call arguments (line 776)
    # Getting the type of 'A' (line 776)
    A_404910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 43), 'A', False)
    # Getting the type of 'k' (line 776)
    k_404911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 46), 'k', False)
    # Processing the call keyword arguments (line 776)
    str_404912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 55), 'str', 'LM')
    keyword_404913 = str_404912
    kwargs_404914 = {'which': keyword_404913}
    # Getting the type of 'svds' (line 776)
    svds_404909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 38), 'svds', False)
    # Calling svds(args, kwargs) (line 776)
    svds_call_result_404915 = invoke(stypy.reporting.localization.Localization(__file__, 776, 38), svds_404909, *[A_404910, k_404911], **kwargs_404914)
    
    # Processing the call keyword arguments (line 776)
    kwargs_404916 = {}
    # Getting the type of 'reorder' (line 776)
    reorder_404908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 30), 'reorder', False)
    # Calling reorder(args, kwargs) (line 776)
    reorder_call_result_404917 = invoke(stypy.reporting.localization.Localization(__file__, 776, 30), reorder_404908, *[svds_call_result_404915], **kwargs_404916)
    
    # Obtaining the member '__getitem__' of a type (line 776)
    getitem___404918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 16), reorder_call_result_404917, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 776)
    subscript_call_result_404919 = invoke(stypy.reporting.localization.Localization(__file__, 776, 16), getitem___404918, int_404907)
    
    # Assigning a type to the variable 'tuple_var_assignment_401395' (line 776)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'tuple_var_assignment_401395', subscript_call_result_404919)
    
    # Assigning a Subscript to a Name (line 776):
    
    # Obtaining the type of the subscript
    int_404920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 16), 'int')
    
    # Call to reorder(...): (line 776)
    # Processing the call arguments (line 776)
    
    # Call to svds(...): (line 776)
    # Processing the call arguments (line 776)
    # Getting the type of 'A' (line 776)
    A_404923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 43), 'A', False)
    # Getting the type of 'k' (line 776)
    k_404924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 46), 'k', False)
    # Processing the call keyword arguments (line 776)
    str_404925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 55), 'str', 'LM')
    keyword_404926 = str_404925
    kwargs_404927 = {'which': keyword_404926}
    # Getting the type of 'svds' (line 776)
    svds_404922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 38), 'svds', False)
    # Calling svds(args, kwargs) (line 776)
    svds_call_result_404928 = invoke(stypy.reporting.localization.Localization(__file__, 776, 38), svds_404922, *[A_404923, k_404924], **kwargs_404927)
    
    # Processing the call keyword arguments (line 776)
    kwargs_404929 = {}
    # Getting the type of 'reorder' (line 776)
    reorder_404921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 30), 'reorder', False)
    # Calling reorder(args, kwargs) (line 776)
    reorder_call_result_404930 = invoke(stypy.reporting.localization.Localization(__file__, 776, 30), reorder_404921, *[svds_call_result_404928], **kwargs_404929)
    
    # Obtaining the member '__getitem__' of a type (line 776)
    getitem___404931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 16), reorder_call_result_404930, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 776)
    subscript_call_result_404932 = invoke(stypy.reporting.localization.Localization(__file__, 776, 16), getitem___404931, int_404920)
    
    # Assigning a type to the variable 'tuple_var_assignment_401396' (line 776)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'tuple_var_assignment_401396', subscript_call_result_404932)
    
    # Assigning a Subscript to a Name (line 776):
    
    # Obtaining the type of the subscript
    int_404933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 16), 'int')
    
    # Call to reorder(...): (line 776)
    # Processing the call arguments (line 776)
    
    # Call to svds(...): (line 776)
    # Processing the call arguments (line 776)
    # Getting the type of 'A' (line 776)
    A_404936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 43), 'A', False)
    # Getting the type of 'k' (line 776)
    k_404937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 46), 'k', False)
    # Processing the call keyword arguments (line 776)
    str_404938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 55), 'str', 'LM')
    keyword_404939 = str_404938
    kwargs_404940 = {'which': keyword_404939}
    # Getting the type of 'svds' (line 776)
    svds_404935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 38), 'svds', False)
    # Calling svds(args, kwargs) (line 776)
    svds_call_result_404941 = invoke(stypy.reporting.localization.Localization(__file__, 776, 38), svds_404935, *[A_404936, k_404937], **kwargs_404940)
    
    # Processing the call keyword arguments (line 776)
    kwargs_404942 = {}
    # Getting the type of 'reorder' (line 776)
    reorder_404934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 30), 'reorder', False)
    # Calling reorder(args, kwargs) (line 776)
    reorder_call_result_404943 = invoke(stypy.reporting.localization.Localization(__file__, 776, 30), reorder_404934, *[svds_call_result_404941], **kwargs_404942)
    
    # Obtaining the member '__getitem__' of a type (line 776)
    getitem___404944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 16), reorder_call_result_404943, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 776)
    subscript_call_result_404945 = invoke(stypy.reporting.localization.Localization(__file__, 776, 16), getitem___404944, int_404933)
    
    # Assigning a type to the variable 'tuple_var_assignment_401397' (line 776)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'tuple_var_assignment_401397', subscript_call_result_404945)
    
    # Assigning a Name to a Name (line 776):
    # Getting the type of 'tuple_var_assignment_401395' (line 776)
    tuple_var_assignment_401395_404946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'tuple_var_assignment_401395')
    # Assigning a type to the variable 'U1' (line 776)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'U1', tuple_var_assignment_401395_404946)
    
    # Assigning a Name to a Name (line 776):
    # Getting the type of 'tuple_var_assignment_401396' (line 776)
    tuple_var_assignment_401396_404947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'tuple_var_assignment_401396')
    # Assigning a type to the variable 's1' (line 776)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 776, 20), 's1', tuple_var_assignment_401396_404947)
    
    # Assigning a Name to a Name (line 776):
    # Getting the type of 'tuple_var_assignment_401397' (line 776)
    tuple_var_assignment_401397_404948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'tuple_var_assignment_401397')
    # Assigning a type to the variable 'VH1' (line 776)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 776, 24), 'VH1', tuple_var_assignment_401397_404948)
    
    # Assigning a Call to a Tuple (line 777):
    
    # Assigning a Subscript to a Name (line 777):
    
    # Obtaining the type of the subscript
    int_404949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 16), 'int')
    
    # Call to reorder(...): (line 777)
    # Processing the call arguments (line 777)
    
    # Call to svds(...): (line 777)
    # Processing the call arguments (line 777)
    # Getting the type of 'L' (line 777)
    L_404952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 43), 'L', False)
    # Getting the type of 'k' (line 777)
    k_404953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 46), 'k', False)
    # Processing the call keyword arguments (line 777)
    str_404954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 55), 'str', 'LM')
    keyword_404955 = str_404954
    kwargs_404956 = {'which': keyword_404955}
    # Getting the type of 'svds' (line 777)
    svds_404951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 38), 'svds', False)
    # Calling svds(args, kwargs) (line 777)
    svds_call_result_404957 = invoke(stypy.reporting.localization.Localization(__file__, 777, 38), svds_404951, *[L_404952, k_404953], **kwargs_404956)
    
    # Processing the call keyword arguments (line 777)
    kwargs_404958 = {}
    # Getting the type of 'reorder' (line 777)
    reorder_404950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 30), 'reorder', False)
    # Calling reorder(args, kwargs) (line 777)
    reorder_call_result_404959 = invoke(stypy.reporting.localization.Localization(__file__, 777, 30), reorder_404950, *[svds_call_result_404957], **kwargs_404958)
    
    # Obtaining the member '__getitem__' of a type (line 777)
    getitem___404960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 16), reorder_call_result_404959, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 777)
    subscript_call_result_404961 = invoke(stypy.reporting.localization.Localization(__file__, 777, 16), getitem___404960, int_404949)
    
    # Assigning a type to the variable 'tuple_var_assignment_401398' (line 777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 16), 'tuple_var_assignment_401398', subscript_call_result_404961)
    
    # Assigning a Subscript to a Name (line 777):
    
    # Obtaining the type of the subscript
    int_404962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 16), 'int')
    
    # Call to reorder(...): (line 777)
    # Processing the call arguments (line 777)
    
    # Call to svds(...): (line 777)
    # Processing the call arguments (line 777)
    # Getting the type of 'L' (line 777)
    L_404965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 43), 'L', False)
    # Getting the type of 'k' (line 777)
    k_404966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 46), 'k', False)
    # Processing the call keyword arguments (line 777)
    str_404967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 55), 'str', 'LM')
    keyword_404968 = str_404967
    kwargs_404969 = {'which': keyword_404968}
    # Getting the type of 'svds' (line 777)
    svds_404964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 38), 'svds', False)
    # Calling svds(args, kwargs) (line 777)
    svds_call_result_404970 = invoke(stypy.reporting.localization.Localization(__file__, 777, 38), svds_404964, *[L_404965, k_404966], **kwargs_404969)
    
    # Processing the call keyword arguments (line 777)
    kwargs_404971 = {}
    # Getting the type of 'reorder' (line 777)
    reorder_404963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 30), 'reorder', False)
    # Calling reorder(args, kwargs) (line 777)
    reorder_call_result_404972 = invoke(stypy.reporting.localization.Localization(__file__, 777, 30), reorder_404963, *[svds_call_result_404970], **kwargs_404971)
    
    # Obtaining the member '__getitem__' of a type (line 777)
    getitem___404973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 16), reorder_call_result_404972, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 777)
    subscript_call_result_404974 = invoke(stypy.reporting.localization.Localization(__file__, 777, 16), getitem___404973, int_404962)
    
    # Assigning a type to the variable 'tuple_var_assignment_401399' (line 777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 16), 'tuple_var_assignment_401399', subscript_call_result_404974)
    
    # Assigning a Subscript to a Name (line 777):
    
    # Obtaining the type of the subscript
    int_404975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 16), 'int')
    
    # Call to reorder(...): (line 777)
    # Processing the call arguments (line 777)
    
    # Call to svds(...): (line 777)
    # Processing the call arguments (line 777)
    # Getting the type of 'L' (line 777)
    L_404978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 43), 'L', False)
    # Getting the type of 'k' (line 777)
    k_404979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 46), 'k', False)
    # Processing the call keyword arguments (line 777)
    str_404980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 55), 'str', 'LM')
    keyword_404981 = str_404980
    kwargs_404982 = {'which': keyword_404981}
    # Getting the type of 'svds' (line 777)
    svds_404977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 38), 'svds', False)
    # Calling svds(args, kwargs) (line 777)
    svds_call_result_404983 = invoke(stypy.reporting.localization.Localization(__file__, 777, 38), svds_404977, *[L_404978, k_404979], **kwargs_404982)
    
    # Processing the call keyword arguments (line 777)
    kwargs_404984 = {}
    # Getting the type of 'reorder' (line 777)
    reorder_404976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 30), 'reorder', False)
    # Calling reorder(args, kwargs) (line 777)
    reorder_call_result_404985 = invoke(stypy.reporting.localization.Localization(__file__, 777, 30), reorder_404976, *[svds_call_result_404983], **kwargs_404984)
    
    # Obtaining the member '__getitem__' of a type (line 777)
    getitem___404986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 16), reorder_call_result_404985, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 777)
    subscript_call_result_404987 = invoke(stypy.reporting.localization.Localization(__file__, 777, 16), getitem___404986, int_404975)
    
    # Assigning a type to the variable 'tuple_var_assignment_401400' (line 777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 16), 'tuple_var_assignment_401400', subscript_call_result_404987)
    
    # Assigning a Name to a Name (line 777):
    # Getting the type of 'tuple_var_assignment_401398' (line 777)
    tuple_var_assignment_401398_404988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 16), 'tuple_var_assignment_401398')
    # Assigning a type to the variable 'U2' (line 777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 16), 'U2', tuple_var_assignment_401398_404988)
    
    # Assigning a Name to a Name (line 777):
    # Getting the type of 'tuple_var_assignment_401399' (line 777)
    tuple_var_assignment_401399_404989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 16), 'tuple_var_assignment_401399')
    # Assigning a type to the variable 's2' (line 777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 20), 's2', tuple_var_assignment_401399_404989)
    
    # Assigning a Name to a Name (line 777):
    # Getting the type of 'tuple_var_assignment_401400' (line 777)
    tuple_var_assignment_401400_404990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 16), 'tuple_var_assignment_401400')
    # Assigning a type to the variable 'VH2' (line 777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 24), 'VH2', tuple_var_assignment_401400_404990)
    
    # Call to assert_allclose(...): (line 779)
    # Processing the call arguments (line 779)
    
    # Call to abs(...): (line 779)
    # Processing the call arguments (line 779)
    # Getting the type of 'U1' (line 779)
    U1_404994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 39), 'U1', False)
    # Processing the call keyword arguments (line 779)
    kwargs_404995 = {}
    # Getting the type of 'np' (line 779)
    np_404992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 32), 'np', False)
    # Obtaining the member 'abs' of a type (line 779)
    abs_404993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 32), np_404992, 'abs')
    # Calling abs(args, kwargs) (line 779)
    abs_call_result_404996 = invoke(stypy.reporting.localization.Localization(__file__, 779, 32), abs_404993, *[U1_404994], **kwargs_404995)
    
    
    # Call to abs(...): (line 779)
    # Processing the call arguments (line 779)
    # Getting the type of 'U2' (line 779)
    U2_404999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 51), 'U2', False)
    # Processing the call keyword arguments (line 779)
    kwargs_405000 = {}
    # Getting the type of 'np' (line 779)
    np_404997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 44), 'np', False)
    # Obtaining the member 'abs' of a type (line 779)
    abs_404998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 44), np_404997, 'abs')
    # Calling abs(args, kwargs) (line 779)
    abs_call_result_405001 = invoke(stypy.reporting.localization.Localization(__file__, 779, 44), abs_404998, *[U2_404999], **kwargs_405000)
    
    # Processing the call keyword arguments (line 779)
    # Getting the type of 'eps' (line 779)
    eps_405002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 61), 'eps', False)
    keyword_405003 = eps_405002
    kwargs_405004 = {'rtol': keyword_405003}
    # Getting the type of 'assert_allclose' (line 779)
    assert_allclose_404991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 16), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 779)
    assert_allclose_call_result_405005 = invoke(stypy.reporting.localization.Localization(__file__, 779, 16), assert_allclose_404991, *[abs_call_result_404996, abs_call_result_405001], **kwargs_405004)
    
    
    # Call to assert_allclose(...): (line 780)
    # Processing the call arguments (line 780)
    # Getting the type of 's1' (line 780)
    s1_405007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 32), 's1', False)
    # Getting the type of 's2' (line 780)
    s2_405008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 36), 's2', False)
    # Processing the call keyword arguments (line 780)
    # Getting the type of 'eps' (line 780)
    eps_405009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 45), 'eps', False)
    keyword_405010 = eps_405009
    kwargs_405011 = {'rtol': keyword_405010}
    # Getting the type of 'assert_allclose' (line 780)
    assert_allclose_405006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 16), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 780)
    assert_allclose_call_result_405012 = invoke(stypy.reporting.localization.Localization(__file__, 780, 16), assert_allclose_405006, *[s1_405007, s2_405008], **kwargs_405011)
    
    
    # Call to assert_allclose(...): (line 781)
    # Processing the call arguments (line 781)
    
    # Call to abs(...): (line 781)
    # Processing the call arguments (line 781)
    # Getting the type of 'VH1' (line 781)
    VH1_405016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 39), 'VH1', False)
    # Processing the call keyword arguments (line 781)
    kwargs_405017 = {}
    # Getting the type of 'np' (line 781)
    np_405014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 32), 'np', False)
    # Obtaining the member 'abs' of a type (line 781)
    abs_405015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 32), np_405014, 'abs')
    # Calling abs(args, kwargs) (line 781)
    abs_call_result_405018 = invoke(stypy.reporting.localization.Localization(__file__, 781, 32), abs_405015, *[VH1_405016], **kwargs_405017)
    
    
    # Call to abs(...): (line 781)
    # Processing the call arguments (line 781)
    # Getting the type of 'VH2' (line 781)
    VH2_405021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 52), 'VH2', False)
    # Processing the call keyword arguments (line 781)
    kwargs_405022 = {}
    # Getting the type of 'np' (line 781)
    np_405019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 45), 'np', False)
    # Obtaining the member 'abs' of a type (line 781)
    abs_405020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 45), np_405019, 'abs')
    # Calling abs(args, kwargs) (line 781)
    abs_call_result_405023 = invoke(stypy.reporting.localization.Localization(__file__, 781, 45), abs_405020, *[VH2_405021], **kwargs_405022)
    
    # Processing the call keyword arguments (line 781)
    # Getting the type of 'eps' (line 781)
    eps_405024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 63), 'eps', False)
    keyword_405025 = eps_405024
    kwargs_405026 = {'rtol': keyword_405025}
    # Getting the type of 'assert_allclose' (line 781)
    assert_allclose_405013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 16), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 781)
    assert_allclose_call_result_405027 = invoke(stypy.reporting.localization.Localization(__file__, 781, 16), assert_allclose_405013, *[abs_call_result_405018, abs_call_result_405023], **kwargs_405026)
    
    
    # Call to assert_allclose(...): (line 782)
    # Processing the call arguments (line 782)
    
    # Call to dot(...): (line 782)
    # Processing the call arguments (line 782)
    # Getting the type of 'U1' (line 782)
    U1_405031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 39), 'U1', False)
    
    # Call to dot(...): (line 782)
    # Processing the call arguments (line 782)
    
    # Call to diag(...): (line 782)
    # Processing the call arguments (line 782)
    # Getting the type of 's1' (line 782)
    s1_405036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 58), 's1', False)
    # Processing the call keyword arguments (line 782)
    kwargs_405037 = {}
    # Getting the type of 'np' (line 782)
    np_405034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 50), 'np', False)
    # Obtaining the member 'diag' of a type (line 782)
    diag_405035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 50), np_405034, 'diag')
    # Calling diag(args, kwargs) (line 782)
    diag_call_result_405038 = invoke(stypy.reporting.localization.Localization(__file__, 782, 50), diag_405035, *[s1_405036], **kwargs_405037)
    
    # Getting the type of 'VH1' (line 782)
    VH1_405039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 63), 'VH1', False)
    # Processing the call keyword arguments (line 782)
    kwargs_405040 = {}
    # Getting the type of 'np' (line 782)
    np_405032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 43), 'np', False)
    # Obtaining the member 'dot' of a type (line 782)
    dot_405033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 43), np_405032, 'dot')
    # Calling dot(args, kwargs) (line 782)
    dot_call_result_405041 = invoke(stypy.reporting.localization.Localization(__file__, 782, 43), dot_405033, *[diag_call_result_405038, VH1_405039], **kwargs_405040)
    
    # Processing the call keyword arguments (line 782)
    kwargs_405042 = {}
    # Getting the type of 'np' (line 782)
    np_405029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 32), 'np', False)
    # Obtaining the member 'dot' of a type (line 782)
    dot_405030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 32), np_405029, 'dot')
    # Calling dot(args, kwargs) (line 782)
    dot_call_result_405043 = invoke(stypy.reporting.localization.Localization(__file__, 782, 32), dot_405030, *[U1_405031, dot_call_result_405041], **kwargs_405042)
    
    
    # Call to dot(...): (line 783)
    # Processing the call arguments (line 783)
    # Getting the type of 'U2' (line 783)
    U2_405046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 39), 'U2', False)
    
    # Call to dot(...): (line 783)
    # Processing the call arguments (line 783)
    
    # Call to diag(...): (line 783)
    # Processing the call arguments (line 783)
    # Getting the type of 's2' (line 783)
    s2_405051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 58), 's2', False)
    # Processing the call keyword arguments (line 783)
    kwargs_405052 = {}
    # Getting the type of 'np' (line 783)
    np_405049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 50), 'np', False)
    # Obtaining the member 'diag' of a type (line 783)
    diag_405050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 50), np_405049, 'diag')
    # Calling diag(args, kwargs) (line 783)
    diag_call_result_405053 = invoke(stypy.reporting.localization.Localization(__file__, 783, 50), diag_405050, *[s2_405051], **kwargs_405052)
    
    # Getting the type of 'VH2' (line 783)
    VH2_405054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 63), 'VH2', False)
    # Processing the call keyword arguments (line 783)
    kwargs_405055 = {}
    # Getting the type of 'np' (line 783)
    np_405047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 43), 'np', False)
    # Obtaining the member 'dot' of a type (line 783)
    dot_405048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 43), np_405047, 'dot')
    # Calling dot(args, kwargs) (line 783)
    dot_call_result_405056 = invoke(stypy.reporting.localization.Localization(__file__, 783, 43), dot_405048, *[diag_call_result_405053, VH2_405054], **kwargs_405055)
    
    # Processing the call keyword arguments (line 783)
    kwargs_405057 = {}
    # Getting the type of 'np' (line 783)
    np_405044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 32), 'np', False)
    # Obtaining the member 'dot' of a type (line 783)
    dot_405045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 32), np_405044, 'dot')
    # Calling dot(args, kwargs) (line 783)
    dot_call_result_405058 = invoke(stypy.reporting.localization.Localization(__file__, 783, 32), dot_405045, *[U2_405046, dot_call_result_405056], **kwargs_405057)
    
    # Processing the call keyword arguments (line 782)
    # Getting the type of 'eps' (line 783)
    eps_405059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 75), 'eps', False)
    keyword_405060 = eps_405059
    kwargs_405061 = {'rtol': keyword_405060}
    # Getting the type of 'assert_allclose' (line 782)
    assert_allclose_405028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 16), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 782)
    assert_allclose_call_result_405062 = invoke(stypy.reporting.localization.Localization(__file__, 782, 16), assert_allclose_405028, *[dot_call_result_405043, dot_call_result_405058], **kwargs_405061)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 769)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_svd_linop(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svd_linop' in the type store
    # Getting the type of 'stypy_return_type' (line 730)
    stypy_return_type_405063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_405063)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svd_linop'
    return stypy_return_type_405063

# Assigning a type to the variable 'test_svd_linop' (line 730)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 0), 'test_svd_linop', test_svd_linop)

@norecursion
def test_linearoperator_deallocation(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_linearoperator_deallocation'
    module_type_store = module_type_store.open_function_context('test_linearoperator_deallocation', 786, 0, False)
    
    # Passed parameters checking function
    test_linearoperator_deallocation.stypy_localization = localization
    test_linearoperator_deallocation.stypy_type_of_self = None
    test_linearoperator_deallocation.stypy_type_store = module_type_store
    test_linearoperator_deallocation.stypy_function_name = 'test_linearoperator_deallocation'
    test_linearoperator_deallocation.stypy_param_names_list = []
    test_linearoperator_deallocation.stypy_varargs_param_name = None
    test_linearoperator_deallocation.stypy_kwargs_param_name = None
    test_linearoperator_deallocation.stypy_call_defaults = defaults
    test_linearoperator_deallocation.stypy_call_varargs = varargs
    test_linearoperator_deallocation.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_linearoperator_deallocation', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_linearoperator_deallocation', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_linearoperator_deallocation(...)' code ##################

    
    # Assigning a Call to a Name (line 792):
    
    # Assigning a Call to a Name (line 792):
    
    # Call to eye(...): (line 792)
    # Processing the call arguments (line 792)
    int_405066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 17), 'int')
    # Processing the call keyword arguments (line 792)
    kwargs_405067 = {}
    # Getting the type of 'np' (line 792)
    np_405064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 10), 'np', False)
    # Obtaining the member 'eye' of a type (line 792)
    eye_405065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 792, 10), np_405064, 'eye')
    # Calling eye(args, kwargs) (line 792)
    eye_call_result_405068 = invoke(stypy.reporting.localization.Localization(__file__, 792, 10), eye_405065, *[int_405066], **kwargs_405067)
    
    # Assigning a type to the variable 'M_d' (line 792)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 4), 'M_d', eye_call_result_405068)
    
    # Assigning a Call to a Name (line 793):
    
    # Assigning a Call to a Name (line 793):
    
    # Call to csc_matrix(...): (line 793)
    # Processing the call arguments (line 793)
    # Getting the type of 'M_d' (line 793)
    M_d_405070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 21), 'M_d', False)
    # Processing the call keyword arguments (line 793)
    kwargs_405071 = {}
    # Getting the type of 'csc_matrix' (line 793)
    csc_matrix_405069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 10), 'csc_matrix', False)
    # Calling csc_matrix(args, kwargs) (line 793)
    csc_matrix_call_result_405072 = invoke(stypy.reporting.localization.Localization(__file__, 793, 10), csc_matrix_405069, *[M_d_405070], **kwargs_405071)
    
    # Assigning a type to the variable 'M_s' (line 793)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 4), 'M_s', csc_matrix_call_result_405072)
    
    # Assigning a Call to a Name (line 794):
    
    # Assigning a Call to a Name (line 794):
    
    # Call to aslinearoperator(...): (line 794)
    # Processing the call arguments (line 794)
    # Getting the type of 'M_d' (line 794)
    M_d_405074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 27), 'M_d', False)
    # Processing the call keyword arguments (line 794)
    kwargs_405075 = {}
    # Getting the type of 'aslinearoperator' (line 794)
    aslinearoperator_405073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 10), 'aslinearoperator', False)
    # Calling aslinearoperator(args, kwargs) (line 794)
    aslinearoperator_call_result_405076 = invoke(stypy.reporting.localization.Localization(__file__, 794, 10), aslinearoperator_405073, *[M_d_405074], **kwargs_405075)
    
    # Assigning a type to the variable 'M_o' (line 794)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 4), 'M_o', aslinearoperator_call_result_405076)
    
    # Call to assert_deallocated(...): (line 796)
    # Processing the call arguments (line 796)

    @norecursion
    def _stypy_temp_lambda_217(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_217'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_217', 796, 28, True)
        # Passed parameters checking function
        _stypy_temp_lambda_217.stypy_localization = localization
        _stypy_temp_lambda_217.stypy_type_of_self = None
        _stypy_temp_lambda_217.stypy_type_store = module_type_store
        _stypy_temp_lambda_217.stypy_function_name = '_stypy_temp_lambda_217'
        _stypy_temp_lambda_217.stypy_param_names_list = []
        _stypy_temp_lambda_217.stypy_varargs_param_name = None
        _stypy_temp_lambda_217.stypy_kwargs_param_name = None
        _stypy_temp_lambda_217.stypy_call_defaults = defaults
        _stypy_temp_lambda_217.stypy_call_varargs = varargs
        _stypy_temp_lambda_217.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_217', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_217', [], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to SpLuInv(...): (line 796)
        # Processing the call arguments (line 796)
        # Getting the type of 'M_s' (line 796)
        M_s_405080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 51), 'M_s', False)
        # Processing the call keyword arguments (line 796)
        kwargs_405081 = {}
        # Getting the type of 'arpack' (line 796)
        arpack_405078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 36), 'arpack', False)
        # Obtaining the member 'SpLuInv' of a type (line 796)
        SpLuInv_405079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 36), arpack_405078, 'SpLuInv')
        # Calling SpLuInv(args, kwargs) (line 796)
        SpLuInv_call_result_405082 = invoke(stypy.reporting.localization.Localization(__file__, 796, 36), SpLuInv_405079, *[M_s_405080], **kwargs_405081)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 28), 'stypy_return_type', SpLuInv_call_result_405082)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_217' in the type store
        # Getting the type of 'stypy_return_type' (line 796)
        stypy_return_type_405083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 28), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_405083)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_217'
        return stypy_return_type_405083

    # Assigning a type to the variable '_stypy_temp_lambda_217' (line 796)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 28), '_stypy_temp_lambda_217', _stypy_temp_lambda_217)
    # Getting the type of '_stypy_temp_lambda_217' (line 796)
    _stypy_temp_lambda_217_405084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 28), '_stypy_temp_lambda_217')
    # Processing the call keyword arguments (line 796)
    kwargs_405085 = {}
    # Getting the type of 'assert_deallocated' (line 796)
    assert_deallocated_405077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 9), 'assert_deallocated', False)
    # Calling assert_deallocated(args, kwargs) (line 796)
    assert_deallocated_call_result_405086 = invoke(stypy.reporting.localization.Localization(__file__, 796, 9), assert_deallocated_405077, *[_stypy_temp_lambda_217_405084], **kwargs_405085)
    
    with_405087 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 796, 9), assert_deallocated_call_result_405086, 'with parameter', '__enter__', '__exit__')

    if with_405087:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 796)
        enter___405088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 9), assert_deallocated_call_result_405086, '__enter__')
        with_enter_405089 = invoke(stypy.reporting.localization.Localization(__file__, 796, 9), enter___405088)
        pass
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 796)
        exit___405090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 9), assert_deallocated_call_result_405086, '__exit__')
        with_exit_405091 = invoke(stypy.reporting.localization.Localization(__file__, 796, 9), exit___405090, None, None, None)

    
    # Call to assert_deallocated(...): (line 798)
    # Processing the call arguments (line 798)

    @norecursion
    def _stypy_temp_lambda_218(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_218'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_218', 798, 28, True)
        # Passed parameters checking function
        _stypy_temp_lambda_218.stypy_localization = localization
        _stypy_temp_lambda_218.stypy_type_of_self = None
        _stypy_temp_lambda_218.stypy_type_store = module_type_store
        _stypy_temp_lambda_218.stypy_function_name = '_stypy_temp_lambda_218'
        _stypy_temp_lambda_218.stypy_param_names_list = []
        _stypy_temp_lambda_218.stypy_varargs_param_name = None
        _stypy_temp_lambda_218.stypy_kwargs_param_name = None
        _stypy_temp_lambda_218.stypy_call_defaults = defaults
        _stypy_temp_lambda_218.stypy_call_varargs = varargs
        _stypy_temp_lambda_218.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_218', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_218', [], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to LuInv(...): (line 798)
        # Processing the call arguments (line 798)
        # Getting the type of 'M_d' (line 798)
        M_d_405095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 49), 'M_d', False)
        # Processing the call keyword arguments (line 798)
        kwargs_405096 = {}
        # Getting the type of 'arpack' (line 798)
        arpack_405093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 36), 'arpack', False)
        # Obtaining the member 'LuInv' of a type (line 798)
        LuInv_405094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 36), arpack_405093, 'LuInv')
        # Calling LuInv(args, kwargs) (line 798)
        LuInv_call_result_405097 = invoke(stypy.reporting.localization.Localization(__file__, 798, 36), LuInv_405094, *[M_d_405095], **kwargs_405096)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 28), 'stypy_return_type', LuInv_call_result_405097)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_218' in the type store
        # Getting the type of 'stypy_return_type' (line 798)
        stypy_return_type_405098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 28), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_405098)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_218'
        return stypy_return_type_405098

    # Assigning a type to the variable '_stypy_temp_lambda_218' (line 798)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 28), '_stypy_temp_lambda_218', _stypy_temp_lambda_218)
    # Getting the type of '_stypy_temp_lambda_218' (line 798)
    _stypy_temp_lambda_218_405099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 28), '_stypy_temp_lambda_218')
    # Processing the call keyword arguments (line 798)
    kwargs_405100 = {}
    # Getting the type of 'assert_deallocated' (line 798)
    assert_deallocated_405092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 9), 'assert_deallocated', False)
    # Calling assert_deallocated(args, kwargs) (line 798)
    assert_deallocated_call_result_405101 = invoke(stypy.reporting.localization.Localization(__file__, 798, 9), assert_deallocated_405092, *[_stypy_temp_lambda_218_405099], **kwargs_405100)
    
    with_405102 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 798, 9), assert_deallocated_call_result_405101, 'with parameter', '__enter__', '__exit__')

    if with_405102:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 798)
        enter___405103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 9), assert_deallocated_call_result_405101, '__enter__')
        with_enter_405104 = invoke(stypy.reporting.localization.Localization(__file__, 798, 9), enter___405103)
        pass
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 798)
        exit___405105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 9), assert_deallocated_call_result_405101, '__exit__')
        with_exit_405106 = invoke(stypy.reporting.localization.Localization(__file__, 798, 9), exit___405105, None, None, None)

    
    # Call to assert_deallocated(...): (line 800)
    # Processing the call arguments (line 800)

    @norecursion
    def _stypy_temp_lambda_219(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_219'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_219', 800, 28, True)
        # Passed parameters checking function
        _stypy_temp_lambda_219.stypy_localization = localization
        _stypy_temp_lambda_219.stypy_type_of_self = None
        _stypy_temp_lambda_219.stypy_type_store = module_type_store
        _stypy_temp_lambda_219.stypy_function_name = '_stypy_temp_lambda_219'
        _stypy_temp_lambda_219.stypy_param_names_list = []
        _stypy_temp_lambda_219.stypy_varargs_param_name = None
        _stypy_temp_lambda_219.stypy_kwargs_param_name = None
        _stypy_temp_lambda_219.stypy_call_defaults = defaults
        _stypy_temp_lambda_219.stypy_call_varargs = varargs
        _stypy_temp_lambda_219.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_219', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_219', [], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to IterInv(...): (line 800)
        # Processing the call arguments (line 800)
        # Getting the type of 'M_s' (line 800)
        M_s_405110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 51), 'M_s', False)
        # Processing the call keyword arguments (line 800)
        kwargs_405111 = {}
        # Getting the type of 'arpack' (line 800)
        arpack_405108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 36), 'arpack', False)
        # Obtaining the member 'IterInv' of a type (line 800)
        IterInv_405109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 36), arpack_405108, 'IterInv')
        # Calling IterInv(args, kwargs) (line 800)
        IterInv_call_result_405112 = invoke(stypy.reporting.localization.Localization(__file__, 800, 36), IterInv_405109, *[M_s_405110], **kwargs_405111)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 28), 'stypy_return_type', IterInv_call_result_405112)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_219' in the type store
        # Getting the type of 'stypy_return_type' (line 800)
        stypy_return_type_405113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 28), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_405113)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_219'
        return stypy_return_type_405113

    # Assigning a type to the variable '_stypy_temp_lambda_219' (line 800)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 28), '_stypy_temp_lambda_219', _stypy_temp_lambda_219)
    # Getting the type of '_stypy_temp_lambda_219' (line 800)
    _stypy_temp_lambda_219_405114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 28), '_stypy_temp_lambda_219')
    # Processing the call keyword arguments (line 800)
    kwargs_405115 = {}
    # Getting the type of 'assert_deallocated' (line 800)
    assert_deallocated_405107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 9), 'assert_deallocated', False)
    # Calling assert_deallocated(args, kwargs) (line 800)
    assert_deallocated_call_result_405116 = invoke(stypy.reporting.localization.Localization(__file__, 800, 9), assert_deallocated_405107, *[_stypy_temp_lambda_219_405114], **kwargs_405115)
    
    with_405117 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 800, 9), assert_deallocated_call_result_405116, 'with parameter', '__enter__', '__exit__')

    if with_405117:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 800)
        enter___405118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 9), assert_deallocated_call_result_405116, '__enter__')
        with_enter_405119 = invoke(stypy.reporting.localization.Localization(__file__, 800, 9), enter___405118)
        pass
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 800)
        exit___405120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 9), assert_deallocated_call_result_405116, '__exit__')
        with_exit_405121 = invoke(stypy.reporting.localization.Localization(__file__, 800, 9), exit___405120, None, None, None)

    
    # Call to assert_deallocated(...): (line 802)
    # Processing the call arguments (line 802)

    @norecursion
    def _stypy_temp_lambda_220(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_220'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_220', 802, 28, True)
        # Passed parameters checking function
        _stypy_temp_lambda_220.stypy_localization = localization
        _stypy_temp_lambda_220.stypy_type_of_self = None
        _stypy_temp_lambda_220.stypy_type_store = module_type_store
        _stypy_temp_lambda_220.stypy_function_name = '_stypy_temp_lambda_220'
        _stypy_temp_lambda_220.stypy_param_names_list = []
        _stypy_temp_lambda_220.stypy_varargs_param_name = None
        _stypy_temp_lambda_220.stypy_kwargs_param_name = None
        _stypy_temp_lambda_220.stypy_call_defaults = defaults
        _stypy_temp_lambda_220.stypy_call_varargs = varargs
        _stypy_temp_lambda_220.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_220', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_220', [], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to IterOpInv(...): (line 802)
        # Processing the call arguments (line 802)
        # Getting the type of 'M_o' (line 802)
        M_o_405125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 53), 'M_o', False)
        # Getting the type of 'None' (line 802)
        None_405126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 58), 'None', False)
        float_405127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 64), 'float')
        # Processing the call keyword arguments (line 802)
        kwargs_405128 = {}
        # Getting the type of 'arpack' (line 802)
        arpack_405123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 36), 'arpack', False)
        # Obtaining the member 'IterOpInv' of a type (line 802)
        IterOpInv_405124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 36), arpack_405123, 'IterOpInv')
        # Calling IterOpInv(args, kwargs) (line 802)
        IterOpInv_call_result_405129 = invoke(stypy.reporting.localization.Localization(__file__, 802, 36), IterOpInv_405124, *[M_o_405125, None_405126, float_405127], **kwargs_405128)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 28), 'stypy_return_type', IterOpInv_call_result_405129)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_220' in the type store
        # Getting the type of 'stypy_return_type' (line 802)
        stypy_return_type_405130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 28), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_405130)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_220'
        return stypy_return_type_405130

    # Assigning a type to the variable '_stypy_temp_lambda_220' (line 802)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 28), '_stypy_temp_lambda_220', _stypy_temp_lambda_220)
    # Getting the type of '_stypy_temp_lambda_220' (line 802)
    _stypy_temp_lambda_220_405131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 28), '_stypy_temp_lambda_220')
    # Processing the call keyword arguments (line 802)
    kwargs_405132 = {}
    # Getting the type of 'assert_deallocated' (line 802)
    assert_deallocated_405122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 9), 'assert_deallocated', False)
    # Calling assert_deallocated(args, kwargs) (line 802)
    assert_deallocated_call_result_405133 = invoke(stypy.reporting.localization.Localization(__file__, 802, 9), assert_deallocated_405122, *[_stypy_temp_lambda_220_405131], **kwargs_405132)
    
    with_405134 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 802, 9), assert_deallocated_call_result_405133, 'with parameter', '__enter__', '__exit__')

    if with_405134:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 802)
        enter___405135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 9), assert_deallocated_call_result_405133, '__enter__')
        with_enter_405136 = invoke(stypy.reporting.localization.Localization(__file__, 802, 9), enter___405135)
        pass
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 802)
        exit___405137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 9), assert_deallocated_call_result_405133, '__exit__')
        with_exit_405138 = invoke(stypy.reporting.localization.Localization(__file__, 802, 9), exit___405137, None, None, None)

    
    # Call to assert_deallocated(...): (line 804)
    # Processing the call arguments (line 804)

    @norecursion
    def _stypy_temp_lambda_221(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stypy_temp_lambda_221'
        module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_221', 804, 28, True)
        # Passed parameters checking function
        _stypy_temp_lambda_221.stypy_localization = localization
        _stypy_temp_lambda_221.stypy_type_of_self = None
        _stypy_temp_lambda_221.stypy_type_store = module_type_store
        _stypy_temp_lambda_221.stypy_function_name = '_stypy_temp_lambda_221'
        _stypy_temp_lambda_221.stypy_param_names_list = []
        _stypy_temp_lambda_221.stypy_varargs_param_name = None
        _stypy_temp_lambda_221.stypy_kwargs_param_name = None
        _stypy_temp_lambda_221.stypy_call_defaults = defaults
        _stypy_temp_lambda_221.stypy_call_varargs = varargs
        _stypy_temp_lambda_221.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_221', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Stacktrace push for error reporting
        localization.set_stack_trace('_stypy_temp_lambda_221', [], arguments)
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of the lambda function code ##################

        
        # Call to IterOpInv(...): (line 804)
        # Processing the call arguments (line 804)
        # Getting the type of 'M_o' (line 804)
        M_o_405142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 53), 'M_o', False)
        # Getting the type of 'M_o' (line 804)
        M_o_405143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 58), 'M_o', False)
        float_405144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 63), 'float')
        # Processing the call keyword arguments (line 804)
        kwargs_405145 = {}
        # Getting the type of 'arpack' (line 804)
        arpack_405140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 36), 'arpack', False)
        # Obtaining the member 'IterOpInv' of a type (line 804)
        IterOpInv_405141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 36), arpack_405140, 'IterOpInv')
        # Calling IterOpInv(args, kwargs) (line 804)
        IterOpInv_call_result_405146 = invoke(stypy.reporting.localization.Localization(__file__, 804, 36), IterOpInv_405141, *[M_o_405142, M_o_405143, float_405144], **kwargs_405145)
        
        # Assigning the return type of the lambda function
        # Assigning a type to the variable 'stypy_return_type' (line 804)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 28), 'stypy_return_type', IterOpInv_call_result_405146)
        
        # ################# End of the lambda function code ##################

        # Stacktrace pop (error reporting)
        localization.unset_stack_trace()
        
        # Storing the return type of function '_stypy_temp_lambda_221' in the type store
        # Getting the type of 'stypy_return_type' (line 804)
        stypy_return_type_405147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 28), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_405147)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stypy_temp_lambda_221'
        return stypy_return_type_405147

    # Assigning a type to the variable '_stypy_temp_lambda_221' (line 804)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 28), '_stypy_temp_lambda_221', _stypy_temp_lambda_221)
    # Getting the type of '_stypy_temp_lambda_221' (line 804)
    _stypy_temp_lambda_221_405148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 28), '_stypy_temp_lambda_221')
    # Processing the call keyword arguments (line 804)
    kwargs_405149 = {}
    # Getting the type of 'assert_deallocated' (line 804)
    assert_deallocated_405139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 9), 'assert_deallocated', False)
    # Calling assert_deallocated(args, kwargs) (line 804)
    assert_deallocated_call_result_405150 = invoke(stypy.reporting.localization.Localization(__file__, 804, 9), assert_deallocated_405139, *[_stypy_temp_lambda_221_405148], **kwargs_405149)
    
    with_405151 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 804, 9), assert_deallocated_call_result_405150, 'with parameter', '__enter__', '__exit__')

    if with_405151:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 804)
        enter___405152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 9), assert_deallocated_call_result_405150, '__enter__')
        with_enter_405153 = invoke(stypy.reporting.localization.Localization(__file__, 804, 9), enter___405152)
        pass
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 804)
        exit___405154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 9), assert_deallocated_call_result_405150, '__exit__')
        with_exit_405155 = invoke(stypy.reporting.localization.Localization(__file__, 804, 9), exit___405154, None, None, None)

    
    # ################# End of 'test_linearoperator_deallocation(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_linearoperator_deallocation' in the type store
    # Getting the type of 'stypy_return_type' (line 786)
    stypy_return_type_405156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_405156)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_linearoperator_deallocation'
    return stypy_return_type_405156

# Assigning a type to the variable 'test_linearoperator_deallocation' (line 786)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 0), 'test_linearoperator_deallocation', test_linearoperator_deallocation)

@norecursion
def test_svds_partial_return(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svds_partial_return'
    module_type_store = module_type_store.open_function_context('test_svds_partial_return', 808, 0, False)
    
    # Passed parameters checking function
    test_svds_partial_return.stypy_localization = localization
    test_svds_partial_return.stypy_type_of_self = None
    test_svds_partial_return.stypy_type_store = module_type_store
    test_svds_partial_return.stypy_function_name = 'test_svds_partial_return'
    test_svds_partial_return.stypy_param_names_list = []
    test_svds_partial_return.stypy_varargs_param_name = None
    test_svds_partial_return.stypy_kwargs_param_name = None
    test_svds_partial_return.stypy_call_defaults = defaults
    test_svds_partial_return.stypy_call_varargs = varargs
    test_svds_partial_return.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svds_partial_return', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svds_partial_return', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svds_partial_return(...)' code ##################

    
    # Assigning a Call to a Name (line 809):
    
    # Assigning a Call to a Name (line 809):
    
    # Call to array(...): (line 809)
    # Processing the call arguments (line 809)
    
    # Obtaining an instance of the builtin type 'list' (line 809)
    list_405159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 809)
    # Adding element type (line 809)
    
    # Obtaining an instance of the builtin type 'list' (line 809)
    list_405160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 809)
    # Adding element type (line 809)
    int_405161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 809, 18), list_405160, int_405161)
    # Adding element type (line 809)
    int_405162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 809, 18), list_405160, int_405162)
    # Adding element type (line 809)
    int_405163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 809, 18), list_405160, int_405163)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 809, 17), list_405159, list_405160)
    # Adding element type (line 809)
    
    # Obtaining an instance of the builtin type 'list' (line 810)
    list_405164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 810)
    # Adding element type (line 810)
    int_405165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 810, 18), list_405164, int_405165)
    # Adding element type (line 810)
    int_405166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 810, 18), list_405164, int_405166)
    # Adding element type (line 810)
    int_405167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 810, 18), list_405164, int_405167)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 809, 17), list_405159, list_405164)
    # Adding element type (line 809)
    
    # Obtaining an instance of the builtin type 'list' (line 811)
    list_405168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 811)
    # Adding element type (line 811)
    int_405169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 811, 18), list_405168, int_405169)
    # Adding element type (line 811)
    int_405170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 811, 18), list_405168, int_405170)
    # Adding element type (line 811)
    int_405171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 811, 18), list_405168, int_405171)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 809, 17), list_405159, list_405168)
    # Adding element type (line 809)
    
    # Obtaining an instance of the builtin type 'list' (line 812)
    list_405172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 812)
    # Adding element type (line 812)
    int_405173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 18), list_405172, int_405173)
    # Adding element type (line 812)
    int_405174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 18), list_405172, int_405174)
    # Adding element type (line 812)
    int_405175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 18), list_405172, int_405175)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 809, 17), list_405159, list_405172)
    
    # Getting the type of 'float' (line 812)
    float_405176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 30), 'float', False)
    # Processing the call keyword arguments (line 809)
    kwargs_405177 = {}
    # Getting the type of 'np' (line 809)
    np_405157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 8), 'np', False)
    # Obtaining the member 'array' of a type (line 809)
    array_405158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 8), np_405157, 'array')
    # Calling array(args, kwargs) (line 809)
    array_call_result_405178 = invoke(stypy.reporting.localization.Localization(__file__, 809, 8), array_405158, *[list_405159, float_405176], **kwargs_405177)
    
    # Assigning a type to the variable 'x' (line 809)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 4), 'x', array_call_result_405178)
    
    # Assigning a Call to a Name (line 814):
    
    # Assigning a Call to a Name (line 814):
    
    # Call to csr_matrix(...): (line 814)
    # Processing the call arguments (line 814)
    # Getting the type of 'x' (line 814)
    x_405180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 19), 'x', False)
    # Processing the call keyword arguments (line 814)
    kwargs_405181 = {}
    # Getting the type of 'csr_matrix' (line 814)
    csr_matrix_405179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 8), 'csr_matrix', False)
    # Calling csr_matrix(args, kwargs) (line 814)
    csr_matrix_call_result_405182 = invoke(stypy.reporting.localization.Localization(__file__, 814, 8), csr_matrix_405179, *[x_405180], **kwargs_405181)
    
    # Assigning a type to the variable 'z' (line 814)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 814, 4), 'z', csr_matrix_call_result_405182)
    
    # Assigning a Subscript to a Name (line 815):
    
    # Assigning a Subscript to a Name (line 815):
    
    # Obtaining the type of the subscript
    int_405183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 25), 'int')
    
    # Call to svds(...): (line 815)
    # Processing the call arguments (line 815)
    # Getting the type of 'z' (line 815)
    z_405185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 19), 'z', False)
    int_405186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 22), 'int')
    # Processing the call keyword arguments (line 815)
    kwargs_405187 = {}
    # Getting the type of 'svds' (line 815)
    svds_405184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 14), 'svds', False)
    # Calling svds(args, kwargs) (line 815)
    svds_call_result_405188 = invoke(stypy.reporting.localization.Localization(__file__, 815, 14), svds_405184, *[z_405185, int_405186], **kwargs_405187)
    
    # Obtaining the member '__getitem__' of a type (line 815)
    getitem___405189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 815, 14), svds_call_result_405188, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 815)
    subscript_call_result_405190 = invoke(stypy.reporting.localization.Localization(__file__, 815, 14), getitem___405189, int_405183)
    
    # Assigning a type to the variable 'vh_full' (line 815)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 815, 4), 'vh_full', subscript_call_result_405190)
    
    # Assigning a Subscript to a Name (line 816):
    
    # Assigning a Subscript to a Name (line 816):
    
    # Obtaining the type of the subscript
    int_405191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 58), 'int')
    
    # Call to svds(...): (line 816)
    # Processing the call arguments (line 816)
    # Getting the type of 'z' (line 816)
    z_405193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 22), 'z', False)
    int_405194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 25), 'int')
    # Processing the call keyword arguments (line 816)
    str_405195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 52), 'str', 'vh')
    keyword_405196 = str_405195
    kwargs_405197 = {'return_singular_vectors': keyword_405196}
    # Getting the type of 'svds' (line 816)
    svds_405192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 17), 'svds', False)
    # Calling svds(args, kwargs) (line 816)
    svds_call_result_405198 = invoke(stypy.reporting.localization.Localization(__file__, 816, 17), svds_405192, *[z_405193, int_405194], **kwargs_405197)
    
    # Obtaining the member '__getitem__' of a type (line 816)
    getitem___405199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 17), svds_call_result_405198, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 816)
    subscript_call_result_405200 = invoke(stypy.reporting.localization.Localization(__file__, 816, 17), getitem___405199, int_405191)
    
    # Assigning a type to the variable 'vh_partial' (line 816)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 4), 'vh_partial', subscript_call_result_405200)
    
    # Assigning a Call to a Name (line 817):
    
    # Assigning a Call to a Name (line 817):
    
    # Call to norm(...): (line 817)
    # Processing the call arguments (line 817)
    
    # Call to abs(...): (line 817)
    # Processing the call arguments (line 817)
    # Getting the type of 'vh_full' (line 817)
    vh_full_405206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 32), 'vh_full', False)
    # Processing the call keyword arguments (line 817)
    kwargs_405207 = {}
    # Getting the type of 'np' (line 817)
    np_405204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 25), 'np', False)
    # Obtaining the member 'abs' of a type (line 817)
    abs_405205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 25), np_405204, 'abs')
    # Calling abs(args, kwargs) (line 817)
    abs_call_result_405208 = invoke(stypy.reporting.localization.Localization(__file__, 817, 25), abs_405205, *[vh_full_405206], **kwargs_405207)
    
    
    # Call to abs(...): (line 817)
    # Processing the call arguments (line 817)
    # Getting the type of 'vh_partial' (line 817)
    vh_partial_405211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 50), 'vh_partial', False)
    # Processing the call keyword arguments (line 817)
    kwargs_405212 = {}
    # Getting the type of 'np' (line 817)
    np_405209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 43), 'np', False)
    # Obtaining the member 'abs' of a type (line 817)
    abs_405210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 43), np_405209, 'abs')
    # Calling abs(args, kwargs) (line 817)
    abs_call_result_405213 = invoke(stypy.reporting.localization.Localization(__file__, 817, 43), abs_405210, *[vh_partial_405211], **kwargs_405212)
    
    # Applying the binary operator '-' (line 817)
    result_sub_405214 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 25), '-', abs_call_result_405208, abs_call_result_405213)
    
    # Processing the call keyword arguments (line 817)
    kwargs_405215 = {}
    # Getting the type of 'np' (line 817)
    np_405201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 10), 'np', False)
    # Obtaining the member 'linalg' of a type (line 817)
    linalg_405202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 10), np_405201, 'linalg')
    # Obtaining the member 'norm' of a type (line 817)
    norm_405203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 10), linalg_405202, 'norm')
    # Calling norm(args, kwargs) (line 817)
    norm_call_result_405216 = invoke(stypy.reporting.localization.Localization(__file__, 817, 10), norm_405203, *[result_sub_405214], **kwargs_405215)
    
    # Assigning a type to the variable 'dvh' (line 817)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 817, 4), 'dvh', norm_call_result_405216)
    
    
    # Getting the type of 'dvh' (line 818)
    dvh_405217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 7), 'dvh')
    float_405218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 13), 'float')
    # Applying the binary operator '>' (line 818)
    result_gt_405219 = python_operator(stypy.reporting.localization.Localization(__file__, 818, 7), '>', dvh_405217, float_405218)
    
    # Testing the type of an if condition (line 818)
    if_condition_405220 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 818, 4), result_gt_405219)
    # Assigning a type to the variable 'if_condition_405220' (line 818)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 4), 'if_condition_405220', if_condition_405220)
    # SSA begins for if statement (line 818)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to AssertionError(...): (line 819)
    # Processing the call arguments (line 819)
    str_405222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 29), 'str', 'right eigenvector matrices differ when using return_singular_vectors parameter')
    # Processing the call keyword arguments (line 819)
    kwargs_405223 = {}
    # Getting the type of 'AssertionError' (line 819)
    AssertionError_405221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 14), 'AssertionError', False)
    # Calling AssertionError(args, kwargs) (line 819)
    AssertionError_call_result_405224 = invoke(stypy.reporting.localization.Localization(__file__, 819, 14), AssertionError_405221, *[str_405222], **kwargs_405223)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 819, 8), AssertionError_call_result_405224, 'raise parameter', BaseException)
    # SSA join for if statement (line 818)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_405225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 48), 'int')
    
    # Call to svds(...): (line 820)
    # Processing the call arguments (line 820)
    # Getting the type of 'z' (line 820)
    z_405227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 12), 'z', False)
    int_405228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 15), 'int')
    # Processing the call keyword arguments (line 820)
    str_405229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 42), 'str', 'vh')
    keyword_405230 = str_405229
    kwargs_405231 = {'return_singular_vectors': keyword_405230}
    # Getting the type of 'svds' (line 820)
    svds_405226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 7), 'svds', False)
    # Calling svds(args, kwargs) (line 820)
    svds_call_result_405232 = invoke(stypy.reporting.localization.Localization(__file__, 820, 7), svds_405226, *[z_405227, int_405228], **kwargs_405231)
    
    # Obtaining the member '__getitem__' of a type (line 820)
    getitem___405233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 7), svds_call_result_405232, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 820)
    subscript_call_result_405234 = invoke(stypy.reporting.localization.Localization(__file__, 820, 7), getitem___405233, int_405225)
    
    # Getting the type of 'None' (line 820)
    None_405235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 58), 'None')
    # Applying the binary operator 'isnot' (line 820)
    result_is_not_405236 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 7), 'isnot', subscript_call_result_405234, None_405235)
    
    # Testing the type of an if condition (line 820)
    if_condition_405237 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 820, 4), result_is_not_405236)
    # Assigning a type to the variable 'if_condition_405237' (line 820)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 4), 'if_condition_405237', if_condition_405237)
    # SSA begins for if statement (line 820)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to AssertionError(...): (line 821)
    # Processing the call arguments (line 821)
    str_405239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 29), 'str', 'left eigenvector matrix was computed when it should not have been')
    # Processing the call keyword arguments (line 821)
    kwargs_405240 = {}
    # Getting the type of 'AssertionError' (line 821)
    AssertionError_405238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 14), 'AssertionError', False)
    # Calling AssertionError(args, kwargs) (line 821)
    AssertionError_call_result_405241 = invoke(stypy.reporting.localization.Localization(__file__, 821, 14), AssertionError_405238, *[str_405239], **kwargs_405240)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 821, 8), AssertionError_call_result_405241, 'raise parameter', BaseException)
    # SSA join for if statement (line 820)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 823):
    
    # Assigning a Call to a Name (line 823):
    
    # Call to csr_matrix(...): (line 823)
    # Processing the call arguments (line 823)
    # Getting the type of 'x' (line 823)
    x_405243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 19), 'x', False)
    # Obtaining the member 'T' of a type (line 823)
    T_405244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 823, 19), x_405243, 'T')
    # Processing the call keyword arguments (line 823)
    kwargs_405245 = {}
    # Getting the type of 'csr_matrix' (line 823)
    csr_matrix_405242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 8), 'csr_matrix', False)
    # Calling csr_matrix(args, kwargs) (line 823)
    csr_matrix_call_result_405246 = invoke(stypy.reporting.localization.Localization(__file__, 823, 8), csr_matrix_405242, *[T_405244], **kwargs_405245)
    
    # Assigning a type to the variable 'z' (line 823)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 823, 4), 'z', csr_matrix_call_result_405246)
    
    # Assigning a Subscript to a Name (line 824):
    
    # Assigning a Subscript to a Name (line 824):
    
    # Obtaining the type of the subscript
    int_405247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 824, 24), 'int')
    
    # Call to svds(...): (line 824)
    # Processing the call arguments (line 824)
    # Getting the type of 'z' (line 824)
    z_405249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 18), 'z', False)
    int_405250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 824, 21), 'int')
    # Processing the call keyword arguments (line 824)
    kwargs_405251 = {}
    # Getting the type of 'svds' (line 824)
    svds_405248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 13), 'svds', False)
    # Calling svds(args, kwargs) (line 824)
    svds_call_result_405252 = invoke(stypy.reporting.localization.Localization(__file__, 824, 13), svds_405248, *[z_405249, int_405250], **kwargs_405251)
    
    # Obtaining the member '__getitem__' of a type (line 824)
    getitem___405253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 824, 13), svds_call_result_405252, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 824)
    subscript_call_result_405254 = invoke(stypy.reporting.localization.Localization(__file__, 824, 13), getitem___405253, int_405247)
    
    # Assigning a type to the variable 'u_full' (line 824)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 824, 4), 'u_full', subscript_call_result_405254)
    
    # Assigning a Subscript to a Name (line 825):
    
    # Assigning a Subscript to a Name (line 825):
    
    # Obtaining the type of the subscript
    int_405255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 57), 'int')
    
    # Call to svds(...): (line 825)
    # Processing the call arguments (line 825)
    # Getting the type of 'z' (line 825)
    z_405257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 21), 'z', False)
    int_405258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 24), 'int')
    # Processing the call keyword arguments (line 825)
    str_405259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 51), 'str', 'vh')
    keyword_405260 = str_405259
    kwargs_405261 = {'return_singular_vectors': keyword_405260}
    # Getting the type of 'svds' (line 825)
    svds_405256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 16), 'svds', False)
    # Calling svds(args, kwargs) (line 825)
    svds_call_result_405262 = invoke(stypy.reporting.localization.Localization(__file__, 825, 16), svds_405256, *[z_405257, int_405258], **kwargs_405261)
    
    # Obtaining the member '__getitem__' of a type (line 825)
    getitem___405263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 825, 16), svds_call_result_405262, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 825)
    subscript_call_result_405264 = invoke(stypy.reporting.localization.Localization(__file__, 825, 16), getitem___405263, int_405255)
    
    # Assigning a type to the variable 'u_partial' (line 825)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 825, 4), 'u_partial', subscript_call_result_405264)
    
    # Assigning a Call to a Name (line 826):
    
    # Assigning a Call to a Name (line 826):
    
    # Call to norm(...): (line 826)
    # Processing the call arguments (line 826)
    
    # Call to abs(...): (line 826)
    # Processing the call arguments (line 826)
    # Getting the type of 'u_full' (line 826)
    u_full_405270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 31), 'u_full', False)
    # Processing the call keyword arguments (line 826)
    kwargs_405271 = {}
    # Getting the type of 'np' (line 826)
    np_405268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 24), 'np', False)
    # Obtaining the member 'abs' of a type (line 826)
    abs_405269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 24), np_405268, 'abs')
    # Calling abs(args, kwargs) (line 826)
    abs_call_result_405272 = invoke(stypy.reporting.localization.Localization(__file__, 826, 24), abs_405269, *[u_full_405270], **kwargs_405271)
    
    
    # Call to abs(...): (line 826)
    # Processing the call arguments (line 826)
    # Getting the type of 'u_partial' (line 826)
    u_partial_405275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 48), 'u_partial', False)
    # Processing the call keyword arguments (line 826)
    kwargs_405276 = {}
    # Getting the type of 'np' (line 826)
    np_405273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 41), 'np', False)
    # Obtaining the member 'abs' of a type (line 826)
    abs_405274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 41), np_405273, 'abs')
    # Calling abs(args, kwargs) (line 826)
    abs_call_result_405277 = invoke(stypy.reporting.localization.Localization(__file__, 826, 41), abs_405274, *[u_partial_405275], **kwargs_405276)
    
    # Applying the binary operator '-' (line 826)
    result_sub_405278 = python_operator(stypy.reporting.localization.Localization(__file__, 826, 24), '-', abs_call_result_405272, abs_call_result_405277)
    
    # Processing the call keyword arguments (line 826)
    kwargs_405279 = {}
    # Getting the type of 'np' (line 826)
    np_405265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 9), 'np', False)
    # Obtaining the member 'linalg' of a type (line 826)
    linalg_405266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 9), np_405265, 'linalg')
    # Obtaining the member 'norm' of a type (line 826)
    norm_405267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 9), linalg_405266, 'norm')
    # Calling norm(args, kwargs) (line 826)
    norm_call_result_405280 = invoke(stypy.reporting.localization.Localization(__file__, 826, 9), norm_405267, *[result_sub_405278], **kwargs_405279)
    
    # Assigning a type to the variable 'du' (line 826)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 4), 'du', norm_call_result_405280)
    
    
    # Getting the type of 'du' (line 827)
    du_405281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 7), 'du')
    float_405282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 12), 'float')
    # Applying the binary operator '>' (line 827)
    result_gt_405283 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 7), '>', du_405281, float_405282)
    
    # Testing the type of an if condition (line 827)
    if_condition_405284 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 827, 4), result_gt_405283)
    # Assigning a type to the variable 'if_condition_405284' (line 827)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 827, 4), 'if_condition_405284', if_condition_405284)
    # SSA begins for if statement (line 827)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to AssertionError(...): (line 828)
    # Processing the call arguments (line 828)
    str_405286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 29), 'str', 'left eigenvector matrices differ when using return_singular_vectors parameter')
    # Processing the call keyword arguments (line 828)
    kwargs_405287 = {}
    # Getting the type of 'AssertionError' (line 828)
    AssertionError_405285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 14), 'AssertionError', False)
    # Calling AssertionError(args, kwargs) (line 828)
    AssertionError_call_result_405288 = invoke(stypy.reporting.localization.Localization(__file__, 828, 14), AssertionError_405285, *[str_405286], **kwargs_405287)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 828, 8), AssertionError_call_result_405288, 'raise parameter', BaseException)
    # SSA join for if statement (line 827)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_405289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 47), 'int')
    
    # Call to svds(...): (line 829)
    # Processing the call arguments (line 829)
    # Getting the type of 'z' (line 829)
    z_405291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 12), 'z', False)
    int_405292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 15), 'int')
    # Processing the call keyword arguments (line 829)
    str_405293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 42), 'str', 'u')
    keyword_405294 = str_405293
    kwargs_405295 = {'return_singular_vectors': keyword_405294}
    # Getting the type of 'svds' (line 829)
    svds_405290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 7), 'svds', False)
    # Calling svds(args, kwargs) (line 829)
    svds_call_result_405296 = invoke(stypy.reporting.localization.Localization(__file__, 829, 7), svds_405290, *[z_405291, int_405292], **kwargs_405295)
    
    # Obtaining the member '__getitem__' of a type (line 829)
    getitem___405297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 7), svds_call_result_405296, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 829)
    subscript_call_result_405298 = invoke(stypy.reporting.localization.Localization(__file__, 829, 7), getitem___405297, int_405289)
    
    # Getting the type of 'None' (line 829)
    None_405299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 58), 'None')
    # Applying the binary operator 'isnot' (line 829)
    result_is_not_405300 = python_operator(stypy.reporting.localization.Localization(__file__, 829, 7), 'isnot', subscript_call_result_405298, None_405299)
    
    # Testing the type of an if condition (line 829)
    if_condition_405301 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 829, 4), result_is_not_405300)
    # Assigning a type to the variable 'if_condition_405301' (line 829)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 829, 4), 'if_condition_405301', if_condition_405301)
    # SSA begins for if statement (line 829)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to AssertionError(...): (line 830)
    # Processing the call arguments (line 830)
    str_405303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 29), 'str', 'right eigenvector matrix was computed when it should not have been')
    # Processing the call keyword arguments (line 830)
    kwargs_405304 = {}
    # Getting the type of 'AssertionError' (line 830)
    AssertionError_405302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 14), 'AssertionError', False)
    # Calling AssertionError(args, kwargs) (line 830)
    AssertionError_call_result_405305 = invoke(stypy.reporting.localization.Localization(__file__, 830, 14), AssertionError_405302, *[str_405303], **kwargs_405304)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 830, 8), AssertionError_call_result_405305, 'raise parameter', BaseException)
    # SSA join for if statement (line 829)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_svds_partial_return(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svds_partial_return' in the type store
    # Getting the type of 'stypy_return_type' (line 808)
    stypy_return_type_405306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_405306)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svds_partial_return'
    return stypy_return_type_405306

# Assigning a type to the variable 'test_svds_partial_return' (line 808)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 0), 'test_svds_partial_return', test_svds_partial_return)

@norecursion
def test_svds_wrong_eigen_type(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_svds_wrong_eigen_type'
    module_type_store = module_type_store.open_function_context('test_svds_wrong_eigen_type', 832, 0, False)
    
    # Passed parameters checking function
    test_svds_wrong_eigen_type.stypy_localization = localization
    test_svds_wrong_eigen_type.stypy_type_of_self = None
    test_svds_wrong_eigen_type.stypy_type_store = module_type_store
    test_svds_wrong_eigen_type.stypy_function_name = 'test_svds_wrong_eigen_type'
    test_svds_wrong_eigen_type.stypy_param_names_list = []
    test_svds_wrong_eigen_type.stypy_varargs_param_name = None
    test_svds_wrong_eigen_type.stypy_kwargs_param_name = None
    test_svds_wrong_eigen_type.stypy_call_defaults = defaults
    test_svds_wrong_eigen_type.stypy_call_varargs = varargs
    test_svds_wrong_eigen_type.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_svds_wrong_eigen_type', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_svds_wrong_eigen_type', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_svds_wrong_eigen_type(...)' code ##################

    
    # Assigning a Call to a Name (line 837):
    
    # Assigning a Call to a Name (line 837):
    
    # Call to array(...): (line 837)
    # Processing the call arguments (line 837)
    
    # Obtaining an instance of the builtin type 'list' (line 837)
    list_405309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 837)
    # Adding element type (line 837)
    
    # Obtaining an instance of the builtin type 'list' (line 837)
    list_405310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 837)
    # Adding element type (line 837)
    int_405311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 18), list_405310, int_405311)
    # Adding element type (line 837)
    int_405312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 18), list_405310, int_405312)
    # Adding element type (line 837)
    int_405313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 18), list_405310, int_405313)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 17), list_405309, list_405310)
    # Adding element type (line 837)
    
    # Obtaining an instance of the builtin type 'list' (line 838)
    list_405314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 838)
    # Adding element type (line 838)
    int_405315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 18), list_405314, int_405315)
    # Adding element type (line 838)
    int_405316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 18), list_405314, int_405316)
    # Adding element type (line 838)
    int_405317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 18), list_405314, int_405317)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 17), list_405309, list_405314)
    # Adding element type (line 837)
    
    # Obtaining an instance of the builtin type 'list' (line 839)
    list_405318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 839)
    # Adding element type (line 839)
    int_405319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 839, 18), list_405318, int_405319)
    # Adding element type (line 839)
    int_405320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 839, 18), list_405318, int_405320)
    # Adding element type (line 839)
    int_405321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 839, 18), list_405318, int_405321)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 17), list_405309, list_405318)
    # Adding element type (line 837)
    
    # Obtaining an instance of the builtin type 'list' (line 840)
    list_405322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 840)
    # Adding element type (line 840)
    int_405323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 18), list_405322, int_405323)
    # Adding element type (line 840)
    int_405324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 18), list_405322, int_405324)
    # Adding element type (line 840)
    int_405325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 18), list_405322, int_405325)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 17), list_405309, list_405322)
    
    # Getting the type of 'float' (line 840)
    float_405326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 30), 'float', False)
    # Processing the call keyword arguments (line 837)
    kwargs_405327 = {}
    # Getting the type of 'np' (line 837)
    np_405307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 8), 'np', False)
    # Obtaining the member 'array' of a type (line 837)
    array_405308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 837, 8), np_405307, 'array')
    # Calling array(args, kwargs) (line 837)
    array_call_result_405328 = invoke(stypy.reporting.localization.Localization(__file__, 837, 8), array_405308, *[list_405309, float_405326], **kwargs_405327)
    
    # Assigning a type to the variable 'x' (line 837)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 837, 4), 'x', array_call_result_405328)
    
    # Call to assert_raises(...): (line 841)
    # Processing the call arguments (line 841)
    # Getting the type of 'ValueError' (line 841)
    ValueError_405330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 18), 'ValueError', False)
    # Getting the type of 'svds' (line 841)
    svds_405331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 30), 'svds', False)
    # Getting the type of 'x' (line 841)
    x_405332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 36), 'x', False)
    int_405333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 39), 'int')
    # Processing the call keyword arguments (line 841)
    str_405334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 48), 'str', 'LA')
    keyword_405335 = str_405334
    kwargs_405336 = {'which': keyword_405335}
    # Getting the type of 'assert_raises' (line 841)
    assert_raises_405329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 841)
    assert_raises_call_result_405337 = invoke(stypy.reporting.localization.Localization(__file__, 841, 4), assert_raises_405329, *[ValueError_405330, svds_405331, x_405332, int_405333], **kwargs_405336)
    
    
    # ################# End of 'test_svds_wrong_eigen_type(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_svds_wrong_eigen_type' in the type store
    # Getting the type of 'stypy_return_type' (line 832)
    stypy_return_type_405338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_405338)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_svds_wrong_eigen_type'
    return stypy_return_type_405338

# Assigning a type to the variable 'test_svds_wrong_eigen_type' (line 832)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 0), 'test_svds_wrong_eigen_type', test_svds_wrong_eigen_type)

@norecursion
def test_parallel_threads(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_parallel_threads'
    module_type_store = module_type_store.open_function_context('test_parallel_threads', 844, 0, False)
    
    # Passed parameters checking function
    test_parallel_threads.stypy_localization = localization
    test_parallel_threads.stypy_type_of_self = None
    test_parallel_threads.stypy_type_store = module_type_store
    test_parallel_threads.stypy_function_name = 'test_parallel_threads'
    test_parallel_threads.stypy_param_names_list = []
    test_parallel_threads.stypy_varargs_param_name = None
    test_parallel_threads.stypy_kwargs_param_name = None
    test_parallel_threads.stypy_call_defaults = defaults
    test_parallel_threads.stypy_call_varargs = varargs
    test_parallel_threads.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_parallel_threads', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_parallel_threads', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_parallel_threads(...)' code ##################

    
    # Assigning a List to a Name (line 845):
    
    # Assigning a List to a Name (line 845):
    
    # Obtaining an instance of the builtin type 'list' (line 845)
    list_405339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 845)
    
    # Assigning a type to the variable 'results' (line 845)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 4), 'results', list_405339)
    
    # Assigning a Call to a Name (line 846):
    
    # Assigning a Call to a Name (line 846):
    
    # Call to rand(...): (line 846)
    # Processing the call arguments (line 846)
    int_405343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 24), 'int')
    # Processing the call keyword arguments (line 846)
    kwargs_405344 = {}
    # Getting the type of 'np' (line 846)
    np_405340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 9), 'np', False)
    # Obtaining the member 'random' of a type (line 846)
    random_405341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 9), np_405340, 'random')
    # Obtaining the member 'rand' of a type (line 846)
    rand_405342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 9), random_405341, 'rand')
    # Calling rand(args, kwargs) (line 846)
    rand_call_result_405345 = invoke(stypy.reporting.localization.Localization(__file__, 846, 9), rand_405342, *[int_405343], **kwargs_405344)
    
    # Assigning a type to the variable 'v0' (line 846)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 4), 'v0', rand_call_result_405345)

    @norecursion
    def worker(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'worker'
        module_type_store = module_type_store.open_function_context('worker', 848, 4, False)
        
        # Passed parameters checking function
        worker.stypy_localization = localization
        worker.stypy_type_of_self = None
        worker.stypy_type_store = module_type_store
        worker.stypy_function_name = 'worker'
        worker.stypy_param_names_list = []
        worker.stypy_varargs_param_name = None
        worker.stypy_kwargs_param_name = None
        worker.stypy_call_defaults = defaults
        worker.stypy_call_varargs = varargs
        worker.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'worker', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'worker', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'worker(...)' code ##################

        
        # Assigning a Call to a Name (line 849):
        
        # Assigning a Call to a Name (line 849):
        
        # Call to diags(...): (line 849)
        # Processing the call arguments (line 849)
        
        # Obtaining an instance of the builtin type 'list' (line 849)
        list_405347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 849)
        # Adding element type (line 849)
        int_405348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 18), list_405347, int_405348)
        # Adding element type (line 849)
        int_405349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 18), list_405347, int_405349)
        # Adding element type (line 849)
        int_405350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 18), list_405347, int_405350)
        
        
        # Obtaining an instance of the builtin type 'list' (line 849)
        list_405351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 849)
        # Adding element type (line 849)
        int_405352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 30), list_405351, int_405352)
        # Adding element type (line 849)
        int_405353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 30), list_405351, int_405353)
        # Adding element type (line 849)
        int_405354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 30), list_405351, int_405354)
        
        # Processing the call keyword arguments (line 849)
        
        # Obtaining an instance of the builtin type 'tuple' (line 849)
        tuple_405355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 849)
        # Adding element type (line 849)
        int_405356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 49), tuple_405355, int_405356)
        # Adding element type (line 849)
        int_405357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 849, 49), tuple_405355, int_405357)
        
        keyword_405358 = tuple_405355
        kwargs_405359 = {'shape': keyword_405358}
        # Getting the type of 'diags' (line 849)
        diags_405346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'diags', False)
        # Calling diags(args, kwargs) (line 849)
        diags_call_result_405360 = invoke(stypy.reporting.localization.Localization(__file__, 849, 12), diags_405346, *[list_405347, list_405351], **kwargs_405359)
        
        # Assigning a type to the variable 'x' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 8), 'x', diags_call_result_405360)
        
        # Assigning a Call to a Tuple (line 850):
        
        # Assigning a Subscript to a Name (line 850):
        
        # Obtaining the type of the subscript
        int_405361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 8), 'int')
        
        # Call to eigs(...): (line 850)
        # Processing the call arguments (line 850)
        # Getting the type of 'x' (line 850)
        x_405363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 20), 'x', False)
        # Processing the call keyword arguments (line 850)
        int_405364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 25), 'int')
        keyword_405365 = int_405364
        # Getting the type of 'v0' (line 850)
        v0_405366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 31), 'v0', False)
        keyword_405367 = v0_405366
        kwargs_405368 = {'v0': keyword_405367, 'k': keyword_405365}
        # Getting the type of 'eigs' (line 850)
        eigs_405362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 15), 'eigs', False)
        # Calling eigs(args, kwargs) (line 850)
        eigs_call_result_405369 = invoke(stypy.reporting.localization.Localization(__file__, 850, 15), eigs_405362, *[x_405363], **kwargs_405368)
        
        # Obtaining the member '__getitem__' of a type (line 850)
        getitem___405370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 8), eigs_call_result_405369, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 850)
        subscript_call_result_405371 = invoke(stypy.reporting.localization.Localization(__file__, 850, 8), getitem___405370, int_405361)
        
        # Assigning a type to the variable 'tuple_var_assignment_401401' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'tuple_var_assignment_401401', subscript_call_result_405371)
        
        # Assigning a Subscript to a Name (line 850):
        
        # Obtaining the type of the subscript
        int_405372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 8), 'int')
        
        # Call to eigs(...): (line 850)
        # Processing the call arguments (line 850)
        # Getting the type of 'x' (line 850)
        x_405374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 20), 'x', False)
        # Processing the call keyword arguments (line 850)
        int_405375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 25), 'int')
        keyword_405376 = int_405375
        # Getting the type of 'v0' (line 850)
        v0_405377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 31), 'v0', False)
        keyword_405378 = v0_405377
        kwargs_405379 = {'v0': keyword_405378, 'k': keyword_405376}
        # Getting the type of 'eigs' (line 850)
        eigs_405373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 15), 'eigs', False)
        # Calling eigs(args, kwargs) (line 850)
        eigs_call_result_405380 = invoke(stypy.reporting.localization.Localization(__file__, 850, 15), eigs_405373, *[x_405374], **kwargs_405379)
        
        # Obtaining the member '__getitem__' of a type (line 850)
        getitem___405381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 8), eigs_call_result_405380, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 850)
        subscript_call_result_405382 = invoke(stypy.reporting.localization.Localization(__file__, 850, 8), getitem___405381, int_405372)
        
        # Assigning a type to the variable 'tuple_var_assignment_401402' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'tuple_var_assignment_401402', subscript_call_result_405382)
        
        # Assigning a Name to a Name (line 850):
        # Getting the type of 'tuple_var_assignment_401401' (line 850)
        tuple_var_assignment_401401_405383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'tuple_var_assignment_401401')
        # Assigning a type to the variable 'w' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'w', tuple_var_assignment_401401_405383)
        
        # Assigning a Name to a Name (line 850):
        # Getting the type of 'tuple_var_assignment_401402' (line 850)
        tuple_var_assignment_401402_405384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'tuple_var_assignment_401402')
        # Assigning a type to the variable 'v' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 11), 'v', tuple_var_assignment_401402_405384)
        
        # Call to append(...): (line 851)
        # Processing the call arguments (line 851)
        # Getting the type of 'w' (line 851)
        w_405387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 23), 'w', False)
        # Processing the call keyword arguments (line 851)
        kwargs_405388 = {}
        # Getting the type of 'results' (line 851)
        results_405385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 8), 'results', False)
        # Obtaining the member 'append' of a type (line 851)
        append_405386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 8), results_405385, 'append')
        # Calling append(args, kwargs) (line 851)
        append_call_result_405389 = invoke(stypy.reporting.localization.Localization(__file__, 851, 8), append_405386, *[w_405387], **kwargs_405388)
        
        
        # Assigning a Call to a Tuple (line 853):
        
        # Assigning a Subscript to a Name (line 853):
        
        # Obtaining the type of the subscript
        int_405390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 8), 'int')
        
        # Call to eigsh(...): (line 853)
        # Processing the call arguments (line 853)
        # Getting the type of 'x' (line 853)
        x_405392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 21), 'x', False)
        # Processing the call keyword arguments (line 853)
        int_405393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 26), 'int')
        keyword_405394 = int_405393
        # Getting the type of 'v0' (line 853)
        v0_405395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 32), 'v0', False)
        keyword_405396 = v0_405395
        kwargs_405397 = {'v0': keyword_405396, 'k': keyword_405394}
        # Getting the type of 'eigsh' (line 853)
        eigsh_405391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 15), 'eigsh', False)
        # Calling eigsh(args, kwargs) (line 853)
        eigsh_call_result_405398 = invoke(stypy.reporting.localization.Localization(__file__, 853, 15), eigsh_405391, *[x_405392], **kwargs_405397)
        
        # Obtaining the member '__getitem__' of a type (line 853)
        getitem___405399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 8), eigsh_call_result_405398, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 853)
        subscript_call_result_405400 = invoke(stypy.reporting.localization.Localization(__file__, 853, 8), getitem___405399, int_405390)
        
        # Assigning a type to the variable 'tuple_var_assignment_401403' (line 853)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 853, 8), 'tuple_var_assignment_401403', subscript_call_result_405400)
        
        # Assigning a Subscript to a Name (line 853):
        
        # Obtaining the type of the subscript
        int_405401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 8), 'int')
        
        # Call to eigsh(...): (line 853)
        # Processing the call arguments (line 853)
        # Getting the type of 'x' (line 853)
        x_405403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 21), 'x', False)
        # Processing the call keyword arguments (line 853)
        int_405404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 26), 'int')
        keyword_405405 = int_405404
        # Getting the type of 'v0' (line 853)
        v0_405406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 32), 'v0', False)
        keyword_405407 = v0_405406
        kwargs_405408 = {'v0': keyword_405407, 'k': keyword_405405}
        # Getting the type of 'eigsh' (line 853)
        eigsh_405402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 15), 'eigsh', False)
        # Calling eigsh(args, kwargs) (line 853)
        eigsh_call_result_405409 = invoke(stypy.reporting.localization.Localization(__file__, 853, 15), eigsh_405402, *[x_405403], **kwargs_405408)
        
        # Obtaining the member '__getitem__' of a type (line 853)
        getitem___405410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 8), eigsh_call_result_405409, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 853)
        subscript_call_result_405411 = invoke(stypy.reporting.localization.Localization(__file__, 853, 8), getitem___405410, int_405401)
        
        # Assigning a type to the variable 'tuple_var_assignment_401404' (line 853)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 853, 8), 'tuple_var_assignment_401404', subscript_call_result_405411)
        
        # Assigning a Name to a Name (line 853):
        # Getting the type of 'tuple_var_assignment_401403' (line 853)
        tuple_var_assignment_401403_405412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 8), 'tuple_var_assignment_401403')
        # Assigning a type to the variable 'w' (line 853)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 853, 8), 'w', tuple_var_assignment_401403_405412)
        
        # Assigning a Name to a Name (line 853):
        # Getting the type of 'tuple_var_assignment_401404' (line 853)
        tuple_var_assignment_401404_405413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 8), 'tuple_var_assignment_401404')
        # Assigning a type to the variable 'v' (line 853)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 853, 11), 'v', tuple_var_assignment_401404_405413)
        
        # Call to append(...): (line 854)
        # Processing the call arguments (line 854)
        # Getting the type of 'w' (line 854)
        w_405416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 23), 'w', False)
        # Processing the call keyword arguments (line 854)
        kwargs_405417 = {}
        # Getting the type of 'results' (line 854)
        results_405414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 8), 'results', False)
        # Obtaining the member 'append' of a type (line 854)
        append_405415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 8), results_405414, 'append')
        # Calling append(args, kwargs) (line 854)
        append_call_result_405418 = invoke(stypy.reporting.localization.Localization(__file__, 854, 8), append_405415, *[w_405416], **kwargs_405417)
        
        
        # ################# End of 'worker(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'worker' in the type store
        # Getting the type of 'stypy_return_type' (line 848)
        stypy_return_type_405419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_405419)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'worker'
        return stypy_return_type_405419

    # Assigning a type to the variable 'worker' (line 848)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 4), 'worker', worker)
    
    # Assigning a ListComp to a Name (line 856):
    
    # Assigning a ListComp to a Name (line 856):
    # Calculating list comprehension
    # Calculating comprehension expression
    
    # Call to range(...): (line 856)
    # Processing the call arguments (line 856)
    int_405427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 62), 'int')
    # Processing the call keyword arguments (line 856)
    kwargs_405428 = {}
    # Getting the type of 'range' (line 856)
    range_405426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 56), 'range', False)
    # Calling range(args, kwargs) (line 856)
    range_call_result_405429 = invoke(stypy.reporting.localization.Localization(__file__, 856, 56), range_405426, *[int_405427], **kwargs_405428)
    
    comprehension_405430 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 856, 15), range_call_result_405429)
    # Assigning a type to the variable 'k' (line 856)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 856, 15), 'k', comprehension_405430)
    
    # Call to Thread(...): (line 856)
    # Processing the call keyword arguments (line 856)
    # Getting the type of 'worker' (line 856)
    worker_405422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 39), 'worker', False)
    keyword_405423 = worker_405422
    kwargs_405424 = {'target': keyword_405423}
    # Getting the type of 'threading' (line 856)
    threading_405420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 15), 'threading', False)
    # Obtaining the member 'Thread' of a type (line 856)
    Thread_405421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 15), threading_405420, 'Thread')
    # Calling Thread(args, kwargs) (line 856)
    Thread_call_result_405425 = invoke(stypy.reporting.localization.Localization(__file__, 856, 15), Thread_405421, *[], **kwargs_405424)
    
    list_405431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 15), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 856, 15), list_405431, Thread_call_result_405425)
    # Assigning a type to the variable 'threads' (line 856)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 856, 4), 'threads', list_405431)
    
    # Getting the type of 'threads' (line 857)
    threads_405432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 13), 'threads')
    # Testing the type of a for loop iterable (line 857)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 857, 4), threads_405432)
    # Getting the type of the for loop variable (line 857)
    for_loop_var_405433 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 857, 4), threads_405432)
    # Assigning a type to the variable 't' (line 857)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 857, 4), 't', for_loop_var_405433)
    # SSA begins for a for statement (line 857)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to start(...): (line 858)
    # Processing the call keyword arguments (line 858)
    kwargs_405436 = {}
    # Getting the type of 't' (line 858)
    t_405434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 8), 't', False)
    # Obtaining the member 'start' of a type (line 858)
    start_405435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 8), t_405434, 'start')
    # Calling start(args, kwargs) (line 858)
    start_call_result_405437 = invoke(stypy.reporting.localization.Localization(__file__, 858, 8), start_405435, *[], **kwargs_405436)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'threads' (line 859)
    threads_405438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 13), 'threads')
    # Testing the type of a for loop iterable (line 859)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 859, 4), threads_405438)
    # Getting the type of the for loop variable (line 859)
    for_loop_var_405439 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 859, 4), threads_405438)
    # Assigning a type to the variable 't' (line 859)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 4), 't', for_loop_var_405439)
    # SSA begins for a for statement (line 859)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to join(...): (line 860)
    # Processing the call keyword arguments (line 860)
    kwargs_405442 = {}
    # Getting the type of 't' (line 860)
    t_405440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 8), 't', False)
    # Obtaining the member 'join' of a type (line 860)
    join_405441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 8), t_405440, 'join')
    # Calling join(args, kwargs) (line 860)
    join_call_result_405443 = invoke(stypy.reporting.localization.Localization(__file__, 860, 8), join_405441, *[], **kwargs_405442)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to worker(...): (line 862)
    # Processing the call keyword arguments (line 862)
    kwargs_405445 = {}
    # Getting the type of 'worker' (line 862)
    worker_405444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 4), 'worker', False)
    # Calling worker(args, kwargs) (line 862)
    worker_call_result_405446 = invoke(stypy.reporting.localization.Localization(__file__, 862, 4), worker_405444, *[], **kwargs_405445)
    
    
    # Getting the type of 'results' (line 864)
    results_405447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 13), 'results')
    # Testing the type of a for loop iterable (line 864)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 864, 4), results_405447)
    # Getting the type of the for loop variable (line 864)
    for_loop_var_405448 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 864, 4), results_405447)
    # Assigning a type to the variable 'r' (line 864)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 864, 4), 'r', for_loop_var_405448)
    # SSA begins for a for statement (line 864)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to assert_allclose(...): (line 865)
    # Processing the call arguments (line 865)
    # Getting the type of 'r' (line 865)
    r_405450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 24), 'r', False)
    
    # Obtaining the type of the subscript
    int_405451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 35), 'int')
    # Getting the type of 'results' (line 865)
    results_405452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 27), 'results', False)
    # Obtaining the member '__getitem__' of a type (line 865)
    getitem___405453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 27), results_405452, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 865)
    subscript_call_result_405454 = invoke(stypy.reporting.localization.Localization(__file__, 865, 27), getitem___405453, int_405451)
    
    # Processing the call keyword arguments (line 865)
    kwargs_405455 = {}
    # Getting the type of 'assert_allclose' (line 865)
    assert_allclose_405449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 865)
    assert_allclose_call_result_405456 = invoke(stypy.reporting.localization.Localization(__file__, 865, 8), assert_allclose_405449, *[r_405450, subscript_call_result_405454], **kwargs_405455)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_parallel_threads(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_parallel_threads' in the type store
    # Getting the type of 'stypy_return_type' (line 844)
    stypy_return_type_405457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_405457)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_parallel_threads'
    return stypy_return_type_405457

# Assigning a type to the variable 'test_parallel_threads' (line 844)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 0), 'test_parallel_threads', test_parallel_threads)

@norecursion
def test_reentering(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_reentering'
    module_type_store = module_type_store.open_function_context('test_reentering', 868, 0, False)
    
    # Passed parameters checking function
    test_reentering.stypy_localization = localization
    test_reentering.stypy_type_of_self = None
    test_reentering.stypy_type_store = module_type_store
    test_reentering.stypy_function_name = 'test_reentering'
    test_reentering.stypy_param_names_list = []
    test_reentering.stypy_varargs_param_name = None
    test_reentering.stypy_kwargs_param_name = None
    test_reentering.stypy_call_defaults = defaults
    test_reentering.stypy_call_varargs = varargs
    test_reentering.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_reentering', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_reentering', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_reentering(...)' code ##################


    @norecursion
    def A_matvec(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'A_matvec'
        module_type_store = module_type_store.open_function_context('A_matvec', 870, 4, False)
        
        # Passed parameters checking function
        A_matvec.stypy_localization = localization
        A_matvec.stypy_type_of_self = None
        A_matvec.stypy_type_store = module_type_store
        A_matvec.stypy_function_name = 'A_matvec'
        A_matvec.stypy_param_names_list = ['x']
        A_matvec.stypy_varargs_param_name = None
        A_matvec.stypy_kwargs_param_name = None
        A_matvec.stypy_call_defaults = defaults
        A_matvec.stypy_call_varargs = varargs
        A_matvec.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'A_matvec', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'A_matvec', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'A_matvec(...)' code ##################

        
        # Assigning a Call to a Name (line 871):
        
        # Assigning a Call to a Name (line 871):
        
        # Call to diags(...): (line 871)
        # Processing the call arguments (line 871)
        
        # Obtaining an instance of the builtin type 'list' (line 871)
        list_405459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 871)
        # Adding element type (line 871)
        int_405460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 18), list_405459, int_405460)
        # Adding element type (line 871)
        int_405461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 18), list_405459, int_405461)
        # Adding element type (line 871)
        int_405462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 18), list_405459, int_405462)
        
        
        # Obtaining an instance of the builtin type 'list' (line 871)
        list_405463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 871)
        # Adding element type (line 871)
        int_405464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 30), list_405463, int_405464)
        # Adding element type (line 871)
        int_405465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 30), list_405463, int_405465)
        # Adding element type (line 871)
        int_405466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 30), list_405463, int_405466)
        
        # Processing the call keyword arguments (line 871)
        
        # Obtaining an instance of the builtin type 'tuple' (line 871)
        tuple_405467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 871)
        # Adding element type (line 871)
        int_405468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 49), tuple_405467, int_405468)
        # Adding element type (line 871)
        int_405469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 49), tuple_405467, int_405469)
        
        keyword_405470 = tuple_405467
        kwargs_405471 = {'shape': keyword_405470}
        # Getting the type of 'diags' (line 871)
        diags_405458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 12), 'diags', False)
        # Calling diags(args, kwargs) (line 871)
        diags_call_result_405472 = invoke(stypy.reporting.localization.Localization(__file__, 871, 12), diags_405458, *[list_405459, list_405463], **kwargs_405471)
        
        # Assigning a type to the variable 'x' (line 871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 8), 'x', diags_call_result_405472)
        
        # Assigning a Call to a Tuple (line 872):
        
        # Assigning a Subscript to a Name (line 872):
        
        # Obtaining the type of the subscript
        int_405473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 8), 'int')
        
        # Call to eigs(...): (line 872)
        # Processing the call arguments (line 872)
        # Getting the type of 'x' (line 872)
        x_405475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 20), 'x', False)
        # Processing the call keyword arguments (line 872)
        int_405476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 25), 'int')
        keyword_405477 = int_405476
        kwargs_405478 = {'k': keyword_405477}
        # Getting the type of 'eigs' (line 872)
        eigs_405474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 15), 'eigs', False)
        # Calling eigs(args, kwargs) (line 872)
        eigs_call_result_405479 = invoke(stypy.reporting.localization.Localization(__file__, 872, 15), eigs_405474, *[x_405475], **kwargs_405478)
        
        # Obtaining the member '__getitem__' of a type (line 872)
        getitem___405480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 8), eigs_call_result_405479, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 872)
        subscript_call_result_405481 = invoke(stypy.reporting.localization.Localization(__file__, 872, 8), getitem___405480, int_405473)
        
        # Assigning a type to the variable 'tuple_var_assignment_401405' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 8), 'tuple_var_assignment_401405', subscript_call_result_405481)
        
        # Assigning a Subscript to a Name (line 872):
        
        # Obtaining the type of the subscript
        int_405482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 8), 'int')
        
        # Call to eigs(...): (line 872)
        # Processing the call arguments (line 872)
        # Getting the type of 'x' (line 872)
        x_405484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 20), 'x', False)
        # Processing the call keyword arguments (line 872)
        int_405485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 25), 'int')
        keyword_405486 = int_405485
        kwargs_405487 = {'k': keyword_405486}
        # Getting the type of 'eigs' (line 872)
        eigs_405483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 15), 'eigs', False)
        # Calling eigs(args, kwargs) (line 872)
        eigs_call_result_405488 = invoke(stypy.reporting.localization.Localization(__file__, 872, 15), eigs_405483, *[x_405484], **kwargs_405487)
        
        # Obtaining the member '__getitem__' of a type (line 872)
        getitem___405489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 8), eigs_call_result_405488, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 872)
        subscript_call_result_405490 = invoke(stypy.reporting.localization.Localization(__file__, 872, 8), getitem___405489, int_405482)
        
        # Assigning a type to the variable 'tuple_var_assignment_401406' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 8), 'tuple_var_assignment_401406', subscript_call_result_405490)
        
        # Assigning a Name to a Name (line 872):
        # Getting the type of 'tuple_var_assignment_401405' (line 872)
        tuple_var_assignment_401405_405491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 8), 'tuple_var_assignment_401405')
        # Assigning a type to the variable 'w' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 8), 'w', tuple_var_assignment_401405_405491)
        
        # Assigning a Name to a Name (line 872):
        # Getting the type of 'tuple_var_assignment_401406' (line 872)
        tuple_var_assignment_401406_405492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 8), 'tuple_var_assignment_401406')
        # Assigning a type to the variable 'v' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 11), 'v', tuple_var_assignment_401406_405492)
        # Getting the type of 'v' (line 873)
        v_405493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 15), 'v')
        
        # Obtaining the type of the subscript
        int_405494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 21), 'int')
        # Getting the type of 'w' (line 873)
        w_405495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 19), 'w')
        # Obtaining the member '__getitem__' of a type (line 873)
        getitem___405496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 19), w_405495, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 873)
        subscript_call_result_405497 = invoke(stypy.reporting.localization.Localization(__file__, 873, 19), getitem___405496, int_405494)
        
        # Applying the binary operator 'div' (line 873)
        result_div_405498 = python_operator(stypy.reporting.localization.Localization(__file__, 873, 15), 'div', v_405493, subscript_call_result_405497)
        
        # Assigning a type to the variable 'stypy_return_type' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'stypy_return_type', result_div_405498)
        
        # ################# End of 'A_matvec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'A_matvec' in the type store
        # Getting the type of 'stypy_return_type' (line 870)
        stypy_return_type_405499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_405499)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'A_matvec'
        return stypy_return_type_405499

    # Assigning a type to the variable 'A_matvec' (line 870)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 870, 4), 'A_matvec', A_matvec)
    
    # Assigning a Call to a Name (line 874):
    
    # Assigning a Call to a Name (line 874):
    
    # Call to LinearOperator(...): (line 874)
    # Processing the call keyword arguments (line 874)
    # Getting the type of 'A_matvec' (line 874)
    A_matvec_405501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 30), 'A_matvec', False)
    keyword_405502 = A_matvec_405501
    # Getting the type of 'float' (line 874)
    float_405503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 46), 'float', False)
    keyword_405504 = float_405503
    
    # Obtaining an instance of the builtin type 'tuple' (line 874)
    tuple_405505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 60), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 874)
    # Adding element type (line 874)
    int_405506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 60), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 874, 60), tuple_405505, int_405506)
    # Adding element type (line 874)
    int_405507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 64), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 874, 60), tuple_405505, int_405507)
    
    keyword_405508 = tuple_405505
    kwargs_405509 = {'dtype': keyword_405504, 'shape': keyword_405508, 'matvec': keyword_405502}
    # Getting the type of 'LinearOperator' (line 874)
    LinearOperator_405500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'LinearOperator', False)
    # Calling LinearOperator(args, kwargs) (line 874)
    LinearOperator_call_result_405510 = invoke(stypy.reporting.localization.Localization(__file__, 874, 8), LinearOperator_405500, *[], **kwargs_405509)
    
    # Assigning a type to the variable 'A' (line 874)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 4), 'A', LinearOperator_call_result_405510)
    
    # Call to assert_raises(...): (line 877)
    # Processing the call arguments (line 877)
    # Getting the type of 'RuntimeError' (line 877)
    RuntimeError_405512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 18), 'RuntimeError', False)
    # Getting the type of 'eigs' (line 877)
    eigs_405513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 32), 'eigs', False)
    # Getting the type of 'A' (line 877)
    A_405514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 38), 'A', False)
    # Processing the call keyword arguments (line 877)
    int_405515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 43), 'int')
    keyword_405516 = int_405515
    kwargs_405517 = {'k': keyword_405516}
    # Getting the type of 'assert_raises' (line 877)
    assert_raises_405511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 877)
    assert_raises_call_result_405518 = invoke(stypy.reporting.localization.Localization(__file__, 877, 4), assert_raises_405511, *[RuntimeError_405512, eigs_405513, A_405514], **kwargs_405517)
    
    
    # Call to assert_raises(...): (line 878)
    # Processing the call arguments (line 878)
    # Getting the type of 'RuntimeError' (line 878)
    RuntimeError_405520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 18), 'RuntimeError', False)
    # Getting the type of 'eigsh' (line 878)
    eigsh_405521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 32), 'eigsh', False)
    # Getting the type of 'A' (line 878)
    A_405522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 39), 'A', False)
    # Processing the call keyword arguments (line 878)
    int_405523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 878, 44), 'int')
    keyword_405524 = int_405523
    kwargs_405525 = {'k': keyword_405524}
    # Getting the type of 'assert_raises' (line 878)
    assert_raises_405519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 4), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 878)
    assert_raises_call_result_405526 = invoke(stypy.reporting.localization.Localization(__file__, 878, 4), assert_raises_405519, *[RuntimeError_405520, eigsh_405521, A_405522], **kwargs_405525)
    
    
    # ################# End of 'test_reentering(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_reentering' in the type store
    # Getting the type of 'stypy_return_type' (line 868)
    stypy_return_type_405527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_405527)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_reentering'
    return stypy_return_type_405527

# Assigning a type to the variable 'test_reentering' (line 868)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 868, 0), 'test_reentering', test_reentering)

@norecursion
def test_regression_arpackng_1315(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_regression_arpackng_1315'
    module_type_store = module_type_store.open_function_context('test_regression_arpackng_1315', 881, 0, False)
    
    # Passed parameters checking function
    test_regression_arpackng_1315.stypy_localization = localization
    test_regression_arpackng_1315.stypy_type_of_self = None
    test_regression_arpackng_1315.stypy_type_store = module_type_store
    test_regression_arpackng_1315.stypy_function_name = 'test_regression_arpackng_1315'
    test_regression_arpackng_1315.stypy_param_names_list = []
    test_regression_arpackng_1315.stypy_varargs_param_name = None
    test_regression_arpackng_1315.stypy_kwargs_param_name = None
    test_regression_arpackng_1315.stypy_call_defaults = defaults
    test_regression_arpackng_1315.stypy_call_varargs = varargs
    test_regression_arpackng_1315.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_regression_arpackng_1315', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_regression_arpackng_1315', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_regression_arpackng_1315(...)' code ##################

    
    
    # Obtaining an instance of the builtin type 'list' (line 886)
    list_405528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 886)
    # Adding element type (line 886)
    # Getting the type of 'np' (line 886)
    np_405529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 18), 'np')
    # Obtaining the member 'float32' of a type (line 886)
    float32_405530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 18), np_405529, 'float32')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 17), list_405528, float32_405530)
    # Adding element type (line 886)
    # Getting the type of 'np' (line 886)
    np_405531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 30), 'np')
    # Obtaining the member 'float64' of a type (line 886)
    float64_405532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 30), np_405531, 'float64')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 17), list_405528, float64_405532)
    
    # Testing the type of a for loop iterable (line 886)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 886, 4), list_405528)
    # Getting the type of the for loop variable (line 886)
    for_loop_var_405533 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 886, 4), list_405528)
    # Assigning a type to the variable 'dtype' (line 886)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 4), 'dtype', for_loop_var_405533)
    # SSA begins for a for statement (line 886)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to seed(...): (line 887)
    # Processing the call arguments (line 887)
    int_405537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 23), 'int')
    # Processing the call keyword arguments (line 887)
    kwargs_405538 = {}
    # Getting the type of 'np' (line 887)
    np_405534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'np', False)
    # Obtaining the member 'random' of a type (line 887)
    random_405535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 8), np_405534, 'random')
    # Obtaining the member 'seed' of a type (line 887)
    seed_405536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 8), random_405535, 'seed')
    # Calling seed(args, kwargs) (line 887)
    seed_call_result_405539 = invoke(stypy.reporting.localization.Localization(__file__, 887, 8), seed_405536, *[int_405537], **kwargs_405538)
    
    
    # Assigning a Call to a Name (line 889):
    
    # Assigning a Call to a Name (line 889):
    
    # Call to astype(...): (line 889)
    # Processing the call arguments (line 889)
    # Getting the type of 'dtype' (line 889)
    dtype_405549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 41), 'dtype', False)
    # Processing the call keyword arguments (line 889)
    kwargs_405550 = {}
    
    # Call to arange(...): (line 889)
    # Processing the call arguments (line 889)
    int_405542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 23), 'int')
    int_405543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 26), 'int')
    int_405544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 31), 'int')
    # Applying the binary operator '+' (line 889)
    result_add_405545 = python_operator(stypy.reporting.localization.Localization(__file__, 889, 26), '+', int_405543, int_405544)
    
    # Processing the call keyword arguments (line 889)
    kwargs_405546 = {}
    # Getting the type of 'np' (line 889)
    np_405540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 13), 'np', False)
    # Obtaining the member 'arange' of a type (line 889)
    arange_405541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 13), np_405540, 'arange')
    # Calling arange(args, kwargs) (line 889)
    arange_call_result_405547 = invoke(stypy.reporting.localization.Localization(__file__, 889, 13), arange_405541, *[int_405542, result_add_405545], **kwargs_405546)
    
    # Obtaining the member 'astype' of a type (line 889)
    astype_405548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 13), arange_call_result_405547, 'astype')
    # Calling astype(args, kwargs) (line 889)
    astype_call_result_405551 = invoke(stypy.reporting.localization.Localization(__file__, 889, 13), astype_405548, *[dtype_405549], **kwargs_405550)
    
    # Assigning a type to the variable 'w0' (line 889)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 8), 'w0', astype_call_result_405551)
    
    # Assigning a Call to a Name (line 890):
    
    # Assigning a Call to a Name (line 890):
    
    # Call to diags(...): (line 890)
    # Processing the call arguments (line 890)
    
    # Obtaining an instance of the builtin type 'list' (line 890)
    list_405553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 890)
    # Adding element type (line 890)
    # Getting the type of 'w0' (line 890)
    w0_405554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 19), 'w0', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 18), list_405553, w0_405554)
    
    
    # Obtaining an instance of the builtin type 'list' (line 890)
    list_405555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 24), 'list')
    # Adding type elements to the builtin type 'list' instance (line 890)
    # Adding element type (line 890)
    int_405556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 24), list_405555, int_405556)
    
    # Processing the call keyword arguments (line 890)
    
    # Obtaining an instance of the builtin type 'tuple' (line 890)
    tuple_405557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 890)
    # Adding element type (line 890)
    int_405558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 36), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 36), tuple_405557, int_405558)
    # Adding element type (line 890)
    int_405559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 42), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 36), tuple_405557, int_405559)
    
    keyword_405560 = tuple_405557
    kwargs_405561 = {'shape': keyword_405560}
    # Getting the type of 'diags' (line 890)
    diags_405552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 12), 'diags', False)
    # Calling diags(args, kwargs) (line 890)
    diags_call_result_405562 = invoke(stypy.reporting.localization.Localization(__file__, 890, 12), diags_405552, *[list_405553, list_405555], **kwargs_405561)
    
    # Assigning a type to the variable 'A' (line 890)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 890, 8), 'A', diags_call_result_405562)
    
    # Assigning a Call to a Name (line 892):
    
    # Assigning a Call to a Name (line 892):
    
    # Call to astype(...): (line 892)
    # Processing the call arguments (line 892)
    # Getting the type of 'dtype' (line 892)
    dtype_405570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 41), 'dtype', False)
    # Processing the call keyword arguments (line 892)
    kwargs_405571 = {}
    
    # Call to rand(...): (line 892)
    # Processing the call arguments (line 892)
    int_405566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 28), 'int')
    # Processing the call keyword arguments (line 892)
    kwargs_405567 = {}
    # Getting the type of 'np' (line 892)
    np_405563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 13), 'np', False)
    # Obtaining the member 'random' of a type (line 892)
    random_405564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 13), np_405563, 'random')
    # Obtaining the member 'rand' of a type (line 892)
    rand_405565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 13), random_405564, 'rand')
    # Calling rand(args, kwargs) (line 892)
    rand_call_result_405568 = invoke(stypy.reporting.localization.Localization(__file__, 892, 13), rand_405565, *[int_405566], **kwargs_405567)
    
    # Obtaining the member 'astype' of a type (line 892)
    astype_405569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 13), rand_call_result_405568, 'astype')
    # Calling astype(args, kwargs) (line 892)
    astype_call_result_405572 = invoke(stypy.reporting.localization.Localization(__file__, 892, 13), astype_405569, *[dtype_405570], **kwargs_405571)
    
    # Assigning a type to the variable 'v0' (line 892)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 892, 8), 'v0', astype_call_result_405572)
    
    # Assigning a Call to a Tuple (line 893):
    
    # Assigning a Subscript to a Name (line 893):
    
    # Obtaining the type of the subscript
    int_405573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 8), 'int')
    
    # Call to eigs(...): (line 893)
    # Processing the call arguments (line 893)
    # Getting the type of 'A' (line 893)
    A_405575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 20), 'A', False)
    # Processing the call keyword arguments (line 893)
    int_405576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 25), 'int')
    keyword_405577 = int_405576
    int_405578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 32), 'int')
    int_405579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 34), 'int')
    # Applying the binary operator '*' (line 893)
    result_mul_405580 = python_operator(stypy.reporting.localization.Localization(__file__, 893, 32), '*', int_405578, int_405579)
    
    int_405581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 36), 'int')
    # Applying the binary operator '+' (line 893)
    result_add_405582 = python_operator(stypy.reporting.localization.Localization(__file__, 893, 32), '+', result_mul_405580, int_405581)
    
    keyword_405583 = result_add_405582
    str_405584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 45), 'str', 'LM')
    keyword_405585 = str_405584
    # Getting the type of 'v0' (line 893)
    v0_405586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 54), 'v0', False)
    keyword_405587 = v0_405586
    kwargs_405588 = {'v0': keyword_405587, 'k': keyword_405577, 'which': keyword_405585, 'ncv': keyword_405583}
    # Getting the type of 'eigs' (line 893)
    eigs_405574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 15), 'eigs', False)
    # Calling eigs(args, kwargs) (line 893)
    eigs_call_result_405589 = invoke(stypy.reporting.localization.Localization(__file__, 893, 15), eigs_405574, *[A_405575], **kwargs_405588)
    
    # Obtaining the member '__getitem__' of a type (line 893)
    getitem___405590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 8), eigs_call_result_405589, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 893)
    subscript_call_result_405591 = invoke(stypy.reporting.localization.Localization(__file__, 893, 8), getitem___405590, int_405573)
    
    # Assigning a type to the variable 'tuple_var_assignment_401407' (line 893)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'tuple_var_assignment_401407', subscript_call_result_405591)
    
    # Assigning a Subscript to a Name (line 893):
    
    # Obtaining the type of the subscript
    int_405592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 8), 'int')
    
    # Call to eigs(...): (line 893)
    # Processing the call arguments (line 893)
    # Getting the type of 'A' (line 893)
    A_405594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 20), 'A', False)
    # Processing the call keyword arguments (line 893)
    int_405595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 25), 'int')
    keyword_405596 = int_405595
    int_405597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 32), 'int')
    int_405598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 34), 'int')
    # Applying the binary operator '*' (line 893)
    result_mul_405599 = python_operator(stypy.reporting.localization.Localization(__file__, 893, 32), '*', int_405597, int_405598)
    
    int_405600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 36), 'int')
    # Applying the binary operator '+' (line 893)
    result_add_405601 = python_operator(stypy.reporting.localization.Localization(__file__, 893, 32), '+', result_mul_405599, int_405600)
    
    keyword_405602 = result_add_405601
    str_405603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 45), 'str', 'LM')
    keyword_405604 = str_405603
    # Getting the type of 'v0' (line 893)
    v0_405605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 54), 'v0', False)
    keyword_405606 = v0_405605
    kwargs_405607 = {'v0': keyword_405606, 'k': keyword_405596, 'which': keyword_405604, 'ncv': keyword_405602}
    # Getting the type of 'eigs' (line 893)
    eigs_405593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 15), 'eigs', False)
    # Calling eigs(args, kwargs) (line 893)
    eigs_call_result_405608 = invoke(stypy.reporting.localization.Localization(__file__, 893, 15), eigs_405593, *[A_405594], **kwargs_405607)
    
    # Obtaining the member '__getitem__' of a type (line 893)
    getitem___405609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 8), eigs_call_result_405608, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 893)
    subscript_call_result_405610 = invoke(stypy.reporting.localization.Localization(__file__, 893, 8), getitem___405609, int_405592)
    
    # Assigning a type to the variable 'tuple_var_assignment_401408' (line 893)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'tuple_var_assignment_401408', subscript_call_result_405610)
    
    # Assigning a Name to a Name (line 893):
    # Getting the type of 'tuple_var_assignment_401407' (line 893)
    tuple_var_assignment_401407_405611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'tuple_var_assignment_401407')
    # Assigning a type to the variable 'w' (line 893)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'w', tuple_var_assignment_401407_405611)
    
    # Assigning a Name to a Name (line 893):
    # Getting the type of 'tuple_var_assignment_401408' (line 893)
    tuple_var_assignment_401408_405612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'tuple_var_assignment_401408')
    # Assigning a type to the variable 'v' (line 893)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 11), 'v', tuple_var_assignment_401408_405612)
    
    # Call to assert_allclose(...): (line 895)
    # Processing the call arguments (line 895)
    
    # Call to sort(...): (line 895)
    # Processing the call arguments (line 895)
    # Getting the type of 'w' (line 895)
    w_405616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 32), 'w', False)
    # Processing the call keyword arguments (line 895)
    kwargs_405617 = {}
    # Getting the type of 'np' (line 895)
    np_405614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 24), 'np', False)
    # Obtaining the member 'sort' of a type (line 895)
    sort_405615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 24), np_405614, 'sort')
    # Calling sort(args, kwargs) (line 895)
    sort_call_result_405618 = invoke(stypy.reporting.localization.Localization(__file__, 895, 24), sort_405615, *[w_405616], **kwargs_405617)
    
    
    # Call to sort(...): (line 895)
    # Processing the call arguments (line 895)
    
    # Obtaining the type of the subscript
    int_405621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 895, 47), 'int')
    slice_405622 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 895, 44), int_405621, None, None)
    # Getting the type of 'w0' (line 895)
    w0_405623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 44), 'w0', False)
    # Obtaining the member '__getitem__' of a type (line 895)
    getitem___405624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 44), w0_405623, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 895)
    subscript_call_result_405625 = invoke(stypy.reporting.localization.Localization(__file__, 895, 44), getitem___405624, slice_405622)
    
    # Processing the call keyword arguments (line 895)
    kwargs_405626 = {}
    # Getting the type of 'np' (line 895)
    np_405619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 36), 'np', False)
    # Obtaining the member 'sort' of a type (line 895)
    sort_405620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 36), np_405619, 'sort')
    # Calling sort(args, kwargs) (line 895)
    sort_call_result_405627 = invoke(stypy.reporting.localization.Localization(__file__, 895, 36), sort_405620, *[subscript_call_result_405625], **kwargs_405626)
    
    # Processing the call keyword arguments (line 895)
    float_405628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 29), 'float')
    keyword_405629 = float_405628
    kwargs_405630 = {'rtol': keyword_405629}
    # Getting the type of 'assert_allclose' (line 895)
    assert_allclose_405613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 895)
    assert_allclose_call_result_405631 = invoke(stypy.reporting.localization.Localization(__file__, 895, 8), assert_allclose_405613, *[sort_call_result_405618, sort_call_result_405627], **kwargs_405630)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_regression_arpackng_1315(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_regression_arpackng_1315' in the type store
    # Getting the type of 'stypy_return_type' (line 881)
    stypy_return_type_405632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_405632)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_regression_arpackng_1315'
    return stypy_return_type_405632

# Assigning a type to the variable 'test_regression_arpackng_1315' (line 881)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 881, 0), 'test_regression_arpackng_1315', test_regression_arpackng_1315)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
