
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''
2: Find a few eigenvectors and eigenvalues of a matrix.
3: 
4: 
5: Uses ARPACK: http://www.caam.rice.edu/software/ARPACK/
6: 
7: '''
8: # Wrapper implementation notes
9: #
10: # ARPACK Entry Points
11: # -------------------
12: # The entry points to ARPACK are
13: # - (s,d)seupd : single and double precision symmetric matrix
14: # - (s,d,c,z)neupd: single,double,complex,double complex general matrix
15: # This wrapper puts the *neupd (general matrix) interfaces in eigs()
16: # and the *seupd (symmetric matrix) in eigsh().
17: # There is no Hermetian complex/double complex interface.
18: # To find eigenvalues of a Hermetian matrix you
19: # must use eigs() and not eigsh()
20: # It might be desirable to handle the Hermetian case differently
21: # and, for example, return real eigenvalues.
22: 
23: # Number of eigenvalues returned and complex eigenvalues
24: # ------------------------------------------------------
25: # The ARPACK nonsymmetric real and double interface (s,d)naupd return
26: # eigenvalues and eigenvectors in real (float,double) arrays.
27: # Since the eigenvalues and eigenvectors are, in general, complex
28: # ARPACK puts the real and imaginary parts in consecutive entries
29: # in real-valued arrays.   This wrapper puts the real entries
30: # into complex data types and attempts to return the requested eigenvalues
31: # and eigenvectors.
32: 
33: 
34: # Solver modes
35: # ------------
36: # ARPACK and handle shifted and shift-inverse computations
37: # for eigenvalues by providing a shift (sigma) and a solver.
38: 
39: from __future__ import division, print_function, absolute_import
40: 
41: __docformat__ = "restructuredtext en"
42: 
43: __all__ = ['eigs', 'eigsh', 'svds', 'ArpackError', 'ArpackNoConvergence']
44: 
45: from . import _arpack
46: import numpy as np
47: from scipy.sparse.linalg.interface import aslinearoperator, LinearOperator
48: from scipy.sparse import eye, isspmatrix, isspmatrix_csr
49: from scipy.linalg import lu_factor, lu_solve
50: from scipy.sparse.sputils import isdense
51: from scipy.sparse.linalg import gmres, splu
52: from scipy._lib._util import _aligned_zeros
53: from scipy._lib._threadsafety import ReentrancyLock
54: 
55: 
56: _type_conv = {'f': 's', 'd': 'd', 'F': 'c', 'D': 'z'}
57: _ndigits = {'f': 5, 'd': 12, 'F': 5, 'D': 12}
58: 
59: DNAUPD_ERRORS = {
60:     0: "Normal exit.",
61:     1: "Maximum number of iterations taken. "
62:        "All possible eigenvalues of OP has been found. IPARAM(5) "
63:        "returns the number of wanted converged Ritz values.",
64:     2: "No longer an informational error. Deprecated starting "
65:        "with release 2 of ARPACK.",
66:     3: "No shifts could be applied during a cycle of the "
67:        "Implicitly restarted Arnoldi iteration. One possibility "
68:        "is to increase the size of NCV relative to NEV. ",
69:     -1: "N must be positive.",
70:     -2: "NEV must be positive.",
71:     -3: "NCV-NEV >= 2 and less than or equal to N.",
72:     -4: "The maximum number of Arnoldi update iterations allowed "
73:         "must be greater than zero.",
74:     -5: " WHICH must be one of 'LM', 'SM', 'LR', 'SR', 'LI', 'SI'",
75:     -6: "BMAT must be one of 'I' or 'G'.",
76:     -7: "Length of private work array WORKL is not sufficient.",
77:     -8: "Error return from LAPACK eigenvalue calculation;",
78:     -9: "Starting vector is zero.",
79:     -10: "IPARAM(7) must be 1,2,3,4.",
80:     -11: "IPARAM(7) = 1 and BMAT = 'G' are incompatible.",
81:     -12: "IPARAM(1) must be equal to 0 or 1.",
82:     -13: "NEV and WHICH = 'BE' are incompatible.",
83:     -9999: "Could not build an Arnoldi factorization. "
84:            "IPARAM(5) returns the size of the current Arnoldi "
85:            "factorization. The user is advised to check that "
86:            "enough workspace and array storage has been allocated."
87: }
88: 
89: SNAUPD_ERRORS = DNAUPD_ERRORS
90: 
91: ZNAUPD_ERRORS = DNAUPD_ERRORS.copy()
92: ZNAUPD_ERRORS[-10] = "IPARAM(7) must be 1,2,3."
93: 
94: CNAUPD_ERRORS = ZNAUPD_ERRORS
95: 
96: DSAUPD_ERRORS = {
97:     0: "Normal exit.",
98:     1: "Maximum number of iterations taken. "
99:        "All possible eigenvalues of OP has been found.",
100:     2: "No longer an informational error. Deprecated starting with "
101:        "release 2 of ARPACK.",
102:     3: "No shifts could be applied during a cycle of the Implicitly "
103:        "restarted Arnoldi iteration. One possibility is to increase "
104:        "the size of NCV relative to NEV. ",
105:     -1: "N must be positive.",
106:     -2: "NEV must be positive.",
107:     -3: "NCV must be greater than NEV and less than or equal to N.",
108:     -4: "The maximum number of Arnoldi update iterations allowed "
109:         "must be greater than zero.",
110:     -5: "WHICH must be one of 'LM', 'SM', 'LA', 'SA' or 'BE'.",
111:     -6: "BMAT must be one of 'I' or 'G'.",
112:     -7: "Length of private work array WORKL is not sufficient.",
113:     -8: "Error return from trid. eigenvalue calculation; "
114:         "Informational error from LAPACK routine dsteqr .",
115:     -9: "Starting vector is zero.",
116:     -10: "IPARAM(7) must be 1,2,3,4,5.",
117:     -11: "IPARAM(7) = 1 and BMAT = 'G' are incompatible.",
118:     -12: "IPARAM(1) must be equal to 0 or 1.",
119:     -13: "NEV and WHICH = 'BE' are incompatible. ",
120:     -9999: "Could not build an Arnoldi factorization. "
121:            "IPARAM(5) returns the size of the current Arnoldi "
122:            "factorization. The user is advised to check that "
123:            "enough workspace and array storage has been allocated.",
124: }
125: 
126: SSAUPD_ERRORS = DSAUPD_ERRORS
127: 
128: DNEUPD_ERRORS = {
129:     0: "Normal exit.",
130:     1: "The Schur form computed by LAPACK routine dlahqr "
131:        "could not be reordered by LAPACK routine dtrsen. "
132:        "Re-enter subroutine dneupd  with IPARAM(5)NCV and "
133:        "increase the size of the arrays DR and DI to have "
134:        "dimension at least dimension NCV and allocate at least NCV "
135:        "columns for Z. NOTE: Not necessary if Z and V share "
136:        "the same space. Please notify the authors if this error"
137:        "occurs.",
138:     -1: "N must be positive.",
139:     -2: "NEV must be positive.",
140:     -3: "NCV-NEV >= 2 and less than or equal to N.",
141:     -5: "WHICH must be one of 'LM', 'SM', 'LR', 'SR', 'LI', 'SI'",
142:     -6: "BMAT must be one of 'I' or 'G'.",
143:     -7: "Length of private work WORKL array is not sufficient.",
144:     -8: "Error return from calculation of a real Schur form. "
145:         "Informational error from LAPACK routine dlahqr .",
146:     -9: "Error return from calculation of eigenvectors. "
147:         "Informational error from LAPACK routine dtrevc.",
148:     -10: "IPARAM(7) must be 1,2,3,4.",
149:     -11: "IPARAM(7) = 1 and BMAT = 'G' are incompatible.",
150:     -12: "HOWMNY = 'S' not yet implemented",
151:     -13: "HOWMNY must be one of 'A' or 'P' if RVEC = .true.",
152:     -14: "DNAUPD  did not find any eigenvalues to sufficient "
153:          "accuracy.",
154:     -15: "DNEUPD got a different count of the number of converged "
155:          "Ritz values than DNAUPD got.  This indicates the user "
156:          "probably made an error in passing data from DNAUPD to "
157:          "DNEUPD or that the data was modified before entering "
158:          "DNEUPD",
159: }
160: 
161: SNEUPD_ERRORS = DNEUPD_ERRORS.copy()
162: SNEUPD_ERRORS[1] = ("The Schur form computed by LAPACK routine slahqr "
163:                     "could not be reordered by LAPACK routine strsen . "
164:                     "Re-enter subroutine dneupd  with IPARAM(5)=NCV and "
165:                     "increase the size of the arrays DR and DI to have "
166:                     "dimension at least dimension NCV and allocate at least "
167:                     "NCV columns for Z. NOTE: Not necessary if Z and V share "
168:                     "the same space. Please notify the authors if this error "
169:                     "occurs.")
170: SNEUPD_ERRORS[-14] = ("SNAUPD did not find any eigenvalues to sufficient "
171:                       "accuracy.")
172: SNEUPD_ERRORS[-15] = ("SNEUPD got a different count of the number of "
173:                       "converged Ritz values than SNAUPD got.  This indicates "
174:                       "the user probably made an error in passing data from "
175:                       "SNAUPD to SNEUPD or that the data was modified before "
176:                       "entering SNEUPD")
177: 
178: ZNEUPD_ERRORS = {0: "Normal exit.",
179:                  1: "The Schur form computed by LAPACK routine csheqr "
180:                     "could not be reordered by LAPACK routine ztrsen. "
181:                     "Re-enter subroutine zneupd with IPARAM(5)=NCV and "
182:                     "increase the size of the array D to have "
183:                     "dimension at least dimension NCV and allocate at least "
184:                     "NCV columns for Z. NOTE: Not necessary if Z and V share "
185:                     "the same space. Please notify the authors if this error "
186:                     "occurs.",
187:                  -1: "N must be positive.",
188:                  -2: "NEV must be positive.",
189:                  -3: "NCV-NEV >= 1 and less than or equal to N.",
190:                  -5: "WHICH must be one of 'LM', 'SM', 'LR', 'SR', 'LI', 'SI'",
191:                  -6: "BMAT must be one of 'I' or 'G'.",
192:                  -7: "Length of private work WORKL array is not sufficient.",
193:                  -8: "Error return from LAPACK eigenvalue calculation. "
194:                      "This should never happened.",
195:                  -9: "Error return from calculation of eigenvectors. "
196:                      "Informational error from LAPACK routine ztrevc.",
197:                  -10: "IPARAM(7) must be 1,2,3",
198:                  -11: "IPARAM(7) = 1 and BMAT = 'G' are incompatible.",
199:                  -12: "HOWMNY = 'S' not yet implemented",
200:                  -13: "HOWMNY must be one of 'A' or 'P' if RVEC = .true.",
201:                  -14: "ZNAUPD did not find any eigenvalues to sufficient "
202:                       "accuracy.",
203:                  -15: "ZNEUPD got a different count of the number of "
204:                       "converged Ritz values than ZNAUPD got.  This "
205:                       "indicates the user probably made an error in passing "
206:                       "data from ZNAUPD to ZNEUPD or that the data was "
207:                       "modified before entering ZNEUPD"
208:                  }
209: 
210: CNEUPD_ERRORS = ZNEUPD_ERRORS.copy()
211: CNEUPD_ERRORS[-14] = ("CNAUPD did not find any eigenvalues to sufficient "
212:                       "accuracy.")
213: CNEUPD_ERRORS[-15] = ("CNEUPD got a different count of the number of "
214:                       "converged Ritz values than CNAUPD got.  This indicates "
215:                       "the user probably made an error in passing data from "
216:                       "CNAUPD to CNEUPD or that the data was modified before "
217:                       "entering CNEUPD")
218: 
219: DSEUPD_ERRORS = {
220:     0: "Normal exit.",
221:     -1: "N must be positive.",
222:     -2: "NEV must be positive.",
223:     -3: "NCV must be greater than NEV and less than or equal to N.",
224:     -5: "WHICH must be one of 'LM', 'SM', 'LA', 'SA' or 'BE'.",
225:     -6: "BMAT must be one of 'I' or 'G'.",
226:     -7: "Length of private work WORKL array is not sufficient.",
227:     -8: ("Error return from trid. eigenvalue calculation; "
228:          "Information error from LAPACK routine dsteqr."),
229:     -9: "Starting vector is zero.",
230:     -10: "IPARAM(7) must be 1,2,3,4,5.",
231:     -11: "IPARAM(7) = 1 and BMAT = 'G' are incompatible.",
232:     -12: "NEV and WHICH = 'BE' are incompatible.",
233:     -14: "DSAUPD  did not find any eigenvalues to sufficient accuracy.",
234:     -15: "HOWMNY must be one of 'A' or 'S' if RVEC = .true.",
235:     -16: "HOWMNY = 'S' not yet implemented",
236:     -17: ("DSEUPD  got a different count of the number of converged "
237:           "Ritz values than DSAUPD  got.  This indicates the user "
238:           "probably made an error in passing data from DSAUPD  to "
239:           "DSEUPD  or that the data was modified before entering  "
240:           "DSEUPD.")
241: }
242: 
243: SSEUPD_ERRORS = DSEUPD_ERRORS.copy()
244: SSEUPD_ERRORS[-14] = ("SSAUPD  did not find any eigenvalues "
245:                       "to sufficient accuracy.")
246: SSEUPD_ERRORS[-17] = ("SSEUPD  got a different count of the number of "
247:                       "converged "
248:                       "Ritz values than SSAUPD  got.  This indicates the user "
249:                       "probably made an error in passing data from SSAUPD  to "
250:                       "SSEUPD  or that the data was modified before entering  "
251:                       "SSEUPD.")
252: 
253: _SAUPD_ERRORS = {'d': DSAUPD_ERRORS,
254:                  's': SSAUPD_ERRORS}
255: _NAUPD_ERRORS = {'d': DNAUPD_ERRORS,
256:                  's': SNAUPD_ERRORS,
257:                  'z': ZNAUPD_ERRORS,
258:                  'c': CNAUPD_ERRORS}
259: _SEUPD_ERRORS = {'d': DSEUPD_ERRORS,
260:                  's': SSEUPD_ERRORS}
261: _NEUPD_ERRORS = {'d': DNEUPD_ERRORS,
262:                  's': SNEUPD_ERRORS,
263:                  'z': ZNEUPD_ERRORS,
264:                  'c': CNEUPD_ERRORS}
265: 
266: # accepted values of parameter WHICH in _SEUPD
267: _SEUPD_WHICH = ['LM', 'SM', 'LA', 'SA', 'BE']
268: 
269: # accepted values of parameter WHICH in _NAUPD
270: _NEUPD_WHICH = ['LM', 'SM', 'LR', 'SR', 'LI', 'SI']
271: 
272: 
273: class ArpackError(RuntimeError):
274:     '''
275:     ARPACK error
276:     '''
277:     def __init__(self, info, infodict=_NAUPD_ERRORS):
278:         msg = infodict.get(info, "Unknown error")
279:         RuntimeError.__init__(self, "ARPACK error %d: %s" % (info, msg))
280: 
281: 
282: class ArpackNoConvergence(ArpackError):
283:     '''
284:     ARPACK iteration did not converge
285: 
286:     Attributes
287:     ----------
288:     eigenvalues : ndarray
289:         Partial result. Converged eigenvalues.
290:     eigenvectors : ndarray
291:         Partial result. Converged eigenvectors.
292: 
293:     '''
294:     def __init__(self, msg, eigenvalues, eigenvectors):
295:         ArpackError.__init__(self, -1, {-1: msg})
296:         self.eigenvalues = eigenvalues
297:         self.eigenvectors = eigenvectors
298: 
299: 
300: def choose_ncv(k):
301:     '''
302:     Choose number of lanczos vectors based on target number
303:     of singular/eigen values and vectors to compute, k.
304:     '''
305:     return max(2 * k + 1, 20)
306: 
307: 
308: class _ArpackParams(object):
309:     def __init__(self, n, k, tp, mode=1, sigma=None,
310:                  ncv=None, v0=None, maxiter=None, which="LM", tol=0):
311:         if k <= 0:
312:             raise ValueError("k must be positive, k=%d" % k)
313: 
314:         if maxiter is None:
315:             maxiter = n * 10
316:         if maxiter <= 0:
317:             raise ValueError("maxiter must be positive, maxiter=%d" % maxiter)
318: 
319:         if tp not in 'fdFD':
320:             raise ValueError("matrix type must be 'f', 'd', 'F', or 'D'")
321: 
322:         if v0 is not None:
323:             # ARPACK overwrites its initial resid,  make a copy
324:             self.resid = np.array(v0, copy=True)
325:             info = 1
326:         else:
327:             # ARPACK will use a random initial vector.
328:             self.resid = np.zeros(n, tp)
329:             info = 0
330: 
331:         if sigma is None:
332:             #sigma not used
333:             self.sigma = 0
334:         else:
335:             self.sigma = sigma
336: 
337:         if ncv is None:
338:             ncv = choose_ncv(k)
339:         ncv = min(ncv, n)
340: 
341:         self.v = np.zeros((n, ncv), tp)  # holds Ritz vectors
342:         self.iparam = np.zeros(11, "int")
343: 
344:         # set solver mode and parameters
345:         ishfts = 1
346:         self.mode = mode
347:         self.iparam[0] = ishfts
348:         self.iparam[2] = maxiter
349:         self.iparam[3] = 1
350:         self.iparam[6] = mode
351: 
352:         self.n = n
353:         self.tol = tol
354:         self.k = k
355:         self.maxiter = maxiter
356:         self.ncv = ncv
357:         self.which = which
358:         self.tp = tp
359:         self.info = info
360: 
361:         self.converged = False
362:         self.ido = 0
363: 
364:     def _raise_no_convergence(self):
365:         msg = "No convergence (%d iterations, %d/%d eigenvectors converged)"
366:         k_ok = self.iparam[4]
367:         num_iter = self.iparam[2]
368:         try:
369:             ev, vec = self.extract(True)
370:         except ArpackError as err:
371:             msg = "%s [%s]" % (msg, err)
372:             ev = np.zeros((0,))
373:             vec = np.zeros((self.n, 0))
374:             k_ok = 0
375:         raise ArpackNoConvergence(msg % (num_iter, k_ok, self.k), ev, vec)
376: 
377: 
378: class _SymmetricArpackParams(_ArpackParams):
379:     def __init__(self, n, k, tp, matvec, mode=1, M_matvec=None,
380:                  Minv_matvec=None, sigma=None,
381:                  ncv=None, v0=None, maxiter=None, which="LM", tol=0):
382:         # The following modes are supported:
383:         #  mode = 1:
384:         #    Solve the standard eigenvalue problem:
385:         #      A*x = lambda*x :
386:         #       A - symmetric
387:         #    Arguments should be
388:         #       matvec      = left multiplication by A
389:         #       M_matvec    = None [not used]
390:         #       Minv_matvec = None [not used]
391:         #
392:         #  mode = 2:
393:         #    Solve the general eigenvalue problem:
394:         #      A*x = lambda*M*x
395:         #       A - symmetric
396:         #       M - symmetric positive definite
397:         #    Arguments should be
398:         #       matvec      = left multiplication by A
399:         #       M_matvec    = left multiplication by M
400:         #       Minv_matvec = left multiplication by M^-1
401:         #
402:         #  mode = 3:
403:         #    Solve the general eigenvalue problem in shift-invert mode:
404:         #      A*x = lambda*M*x
405:         #       A - symmetric
406:         #       M - symmetric positive semi-definite
407:         #    Arguments should be
408:         #       matvec      = None [not used]
409:         #       M_matvec    = left multiplication by M
410:         #                     or None, if M is the identity
411:         #       Minv_matvec = left multiplication by [A-sigma*M]^-1
412:         #
413:         #  mode = 4:
414:         #    Solve the general eigenvalue problem in Buckling mode:
415:         #      A*x = lambda*AG*x
416:         #       A  - symmetric positive semi-definite
417:         #       AG - symmetric indefinite
418:         #    Arguments should be
419:         #       matvec      = left multiplication by A
420:         #       M_matvec    = None [not used]
421:         #       Minv_matvec = left multiplication by [A-sigma*AG]^-1
422:         #
423:         #  mode = 5:
424:         #    Solve the general eigenvalue problem in Cayley-transformed mode:
425:         #      A*x = lambda*M*x
426:         #       A - symmetric
427:         #       M - symmetric positive semi-definite
428:         #    Arguments should be
429:         #       matvec      = left multiplication by A
430:         #       M_matvec    = left multiplication by M
431:         #                     or None, if M is the identity
432:         #       Minv_matvec = left multiplication by [A-sigma*M]^-1
433:         if mode == 1:
434:             if matvec is None:
435:                 raise ValueError("matvec must be specified for mode=1")
436:             if M_matvec is not None:
437:                 raise ValueError("M_matvec cannot be specified for mode=1")
438:             if Minv_matvec is not None:
439:                 raise ValueError("Minv_matvec cannot be specified for mode=1")
440: 
441:             self.OP = matvec
442:             self.B = lambda x: x
443:             self.bmat = 'I'
444:         elif mode == 2:
445:             if matvec is None:
446:                 raise ValueError("matvec must be specified for mode=2")
447:             if M_matvec is None:
448:                 raise ValueError("M_matvec must be specified for mode=2")
449:             if Minv_matvec is None:
450:                 raise ValueError("Minv_matvec must be specified for mode=2")
451: 
452:             self.OP = lambda x: Minv_matvec(matvec(x))
453:             self.OPa = Minv_matvec
454:             self.OPb = matvec
455:             self.B = M_matvec
456:             self.bmat = 'G'
457:         elif mode == 3:
458:             if matvec is not None:
459:                 raise ValueError("matvec must not be specified for mode=3")
460:             if Minv_matvec is None:
461:                 raise ValueError("Minv_matvec must be specified for mode=3")
462: 
463:             if M_matvec is None:
464:                 self.OP = Minv_matvec
465:                 self.OPa = Minv_matvec
466:                 self.B = lambda x: x
467:                 self.bmat = 'I'
468:             else:
469:                 self.OP = lambda x: Minv_matvec(M_matvec(x))
470:                 self.OPa = Minv_matvec
471:                 self.B = M_matvec
472:                 self.bmat = 'G'
473:         elif mode == 4:
474:             if matvec is None:
475:                 raise ValueError("matvec must be specified for mode=4")
476:             if M_matvec is not None:
477:                 raise ValueError("M_matvec must not be specified for mode=4")
478:             if Minv_matvec is None:
479:                 raise ValueError("Minv_matvec must be specified for mode=4")
480:             self.OPa = Minv_matvec
481:             self.OP = lambda x: self.OPa(matvec(x))
482:             self.B = matvec
483:             self.bmat = 'G'
484:         elif mode == 5:
485:             if matvec is None:
486:                 raise ValueError("matvec must be specified for mode=5")
487:             if Minv_matvec is None:
488:                 raise ValueError("Minv_matvec must be specified for mode=5")
489: 
490:             self.OPa = Minv_matvec
491:             self.A_matvec = matvec
492: 
493:             if M_matvec is None:
494:                 self.OP = lambda x: Minv_matvec(matvec(x) + sigma * x)
495:                 self.B = lambda x: x
496:                 self.bmat = 'I'
497:             else:
498:                 self.OP = lambda x: Minv_matvec(matvec(x)
499:                                                 + sigma * M_matvec(x))
500:                 self.B = M_matvec
501:                 self.bmat = 'G'
502:         else:
503:             raise ValueError("mode=%i not implemented" % mode)
504: 
505:         if which not in _SEUPD_WHICH:
506:             raise ValueError("which must be one of %s"
507:                              % ' '.join(_SEUPD_WHICH))
508:         if k >= n:
509:             raise ValueError("k must be less than ndim(A), k=%d" % k)
510: 
511:         _ArpackParams.__init__(self, n, k, tp, mode, sigma,
512:                                ncv, v0, maxiter, which, tol)
513: 
514:         if self.ncv > n or self.ncv <= k:
515:             raise ValueError("ncv must be k<ncv<=n, ncv=%s" % self.ncv)
516: 
517:         # Use _aligned_zeros to work around a f2py bug in Numpy 1.9.1
518:         self.workd = _aligned_zeros(3 * n, self.tp)
519:         self.workl = _aligned_zeros(self.ncv * (self.ncv + 8), self.tp)
520: 
521:         ltr = _type_conv[self.tp]
522:         if ltr not in ["s", "d"]:
523:             raise ValueError("Input matrix is not real-valued.")
524: 
525:         self._arpack_solver = _arpack.__dict__[ltr + 'saupd']
526:         self._arpack_extract = _arpack.__dict__[ltr + 'seupd']
527: 
528:         self.iterate_infodict = _SAUPD_ERRORS[ltr]
529:         self.extract_infodict = _SEUPD_ERRORS[ltr]
530: 
531:         self.ipntr = np.zeros(11, "int")
532: 
533:     def iterate(self):
534:         self.ido, self.tol, self.resid, self.v, self.iparam, self.ipntr, self.info = \
535:             self._arpack_solver(self.ido, self.bmat, self.which, self.k,
536:                                 self.tol, self.resid, self.v, self.iparam,
537:                                 self.ipntr, self.workd, self.workl, self.info)
538: 
539:         xslice = slice(self.ipntr[0] - 1, self.ipntr[0] - 1 + self.n)
540:         yslice = slice(self.ipntr[1] - 1, self.ipntr[1] - 1 + self.n)
541:         if self.ido == -1:
542:             # initialization
543:             self.workd[yslice] = self.OP(self.workd[xslice])
544:         elif self.ido == 1:
545:             # compute y = Op*x
546:             if self.mode == 1:
547:                 self.workd[yslice] = self.OP(self.workd[xslice])
548:             elif self.mode == 2:
549:                 self.workd[xslice] = self.OPb(self.workd[xslice])
550:                 self.workd[yslice] = self.OPa(self.workd[xslice])
551:             elif self.mode == 5:
552:                 Bxslice = slice(self.ipntr[2] - 1, self.ipntr[2] - 1 + self.n)
553:                 Ax = self.A_matvec(self.workd[xslice])
554:                 self.workd[yslice] = self.OPa(Ax + (self.sigma *
555:                                                     self.workd[Bxslice]))
556:             else:
557:                 Bxslice = slice(self.ipntr[2] - 1, self.ipntr[2] - 1 + self.n)
558:                 self.workd[yslice] = self.OPa(self.workd[Bxslice])
559:         elif self.ido == 2:
560:             self.workd[yslice] = self.B(self.workd[xslice])
561:         elif self.ido == 3:
562:             raise ValueError("ARPACK requested user shifts.  Assure ISHIFT==0")
563:         else:
564:             self.converged = True
565: 
566:             if self.info == 0:
567:                 pass
568:             elif self.info == 1:
569:                 self._raise_no_convergence()
570:             else:
571:                 raise ArpackError(self.info, infodict=self.iterate_infodict)
572: 
573:     def extract(self, return_eigenvectors):
574:         rvec = return_eigenvectors
575:         ierr = 0
576:         howmny = 'A'  # return all eigenvectors
577:         sselect = np.zeros(self.ncv, 'int')  # unused
578:         d, z, ierr = self._arpack_extract(rvec, howmny, sselect, self.sigma,
579:                                           self.bmat, self.which, self.k,
580:                                           self.tol, self.resid, self.v,
581:                                           self.iparam[0:7], self.ipntr,
582:                                           self.workd[0:2 * self.n],
583:                                           self.workl, ierr)
584:         if ierr != 0:
585:             raise ArpackError(ierr, infodict=self.extract_infodict)
586:         k_ok = self.iparam[4]
587:         d = d[:k_ok]
588:         z = z[:, :k_ok]
589: 
590:         if return_eigenvectors:
591:             return d, z
592:         else:
593:             return d
594: 
595: 
596: class _UnsymmetricArpackParams(_ArpackParams):
597:     def __init__(self, n, k, tp, matvec, mode=1, M_matvec=None,
598:                  Minv_matvec=None, sigma=None,
599:                  ncv=None, v0=None, maxiter=None, which="LM", tol=0):
600:         # The following modes are supported:
601:         #  mode = 1:
602:         #    Solve the standard eigenvalue problem:
603:         #      A*x = lambda*x
604:         #       A - square matrix
605:         #    Arguments should be
606:         #       matvec      = left multiplication by A
607:         #       M_matvec    = None [not used]
608:         #       Minv_matvec = None [not used]
609:         #
610:         #  mode = 2:
611:         #    Solve the generalized eigenvalue problem:
612:         #      A*x = lambda*M*x
613:         #       A - square matrix
614:         #       M - symmetric, positive semi-definite
615:         #    Arguments should be
616:         #       matvec      = left multiplication by A
617:         #       M_matvec    = left multiplication by M
618:         #       Minv_matvec = left multiplication by M^-1
619:         #
620:         #  mode = 3,4:
621:         #    Solve the general eigenvalue problem in shift-invert mode:
622:         #      A*x = lambda*M*x
623:         #       A - square matrix
624:         #       M - symmetric, positive semi-definite
625:         #    Arguments should be
626:         #       matvec      = None [not used]
627:         #       M_matvec    = left multiplication by M
628:         #                     or None, if M is the identity
629:         #       Minv_matvec = left multiplication by [A-sigma*M]^-1
630:         #    if A is real and mode==3, use the real part of Minv_matvec
631:         #    if A is real and mode==4, use the imag part of Minv_matvec
632:         #    if A is complex and mode==3,
633:         #       use real and imag parts of Minv_matvec
634:         if mode == 1:
635:             if matvec is None:
636:                 raise ValueError("matvec must be specified for mode=1")
637:             if M_matvec is not None:
638:                 raise ValueError("M_matvec cannot be specified for mode=1")
639:             if Minv_matvec is not None:
640:                 raise ValueError("Minv_matvec cannot be specified for mode=1")
641: 
642:             self.OP = matvec
643:             self.B = lambda x: x
644:             self.bmat = 'I'
645:         elif mode == 2:
646:             if matvec is None:
647:                 raise ValueError("matvec must be specified for mode=2")
648:             if M_matvec is None:
649:                 raise ValueError("M_matvec must be specified for mode=2")
650:             if Minv_matvec is None:
651:                 raise ValueError("Minv_matvec must be specified for mode=2")
652: 
653:             self.OP = lambda x: Minv_matvec(matvec(x))
654:             self.OPa = Minv_matvec
655:             self.OPb = matvec
656:             self.B = M_matvec
657:             self.bmat = 'G'
658:         elif mode in (3, 4):
659:             if matvec is None:
660:                 raise ValueError("matvec must be specified "
661:                                  "for mode in (3,4)")
662:             if Minv_matvec is None:
663:                 raise ValueError("Minv_matvec must be specified "
664:                                  "for mode in (3,4)")
665: 
666:             self.matvec = matvec
667:             if tp in 'DF':  # complex type
668:                 if mode == 3:
669:                     self.OPa = Minv_matvec
670:                 else:
671:                     raise ValueError("mode=4 invalid for complex A")
672:             else:  # real type
673:                 if mode == 3:
674:                     self.OPa = lambda x: np.real(Minv_matvec(x))
675:                 else:
676:                     self.OPa = lambda x: np.imag(Minv_matvec(x))
677:             if M_matvec is None:
678:                 self.B = lambda x: x
679:                 self.bmat = 'I'
680:                 self.OP = self.OPa
681:             else:
682:                 self.B = M_matvec
683:                 self.bmat = 'G'
684:                 self.OP = lambda x: self.OPa(M_matvec(x))
685:         else:
686:             raise ValueError("mode=%i not implemented" % mode)
687: 
688:         if which not in _NEUPD_WHICH:
689:             raise ValueError("Parameter which must be one of %s"
690:                              % ' '.join(_NEUPD_WHICH))
691:         if k >= n - 1:
692:             raise ValueError("k must be less than ndim(A)-1, k=%d" % k)
693: 
694:         _ArpackParams.__init__(self, n, k, tp, mode, sigma,
695:                                ncv, v0, maxiter, which, tol)
696: 
697:         if self.ncv > n or self.ncv <= k + 1:
698:             raise ValueError("ncv must be k+1<ncv<=n, ncv=%s" % self.ncv)
699: 
700:         # Use _aligned_zeros to work around a f2py bug in Numpy 1.9.1
701:         self.workd = _aligned_zeros(3 * n, self.tp)
702:         self.workl = _aligned_zeros(3 * self.ncv * (self.ncv + 2), self.tp)
703: 
704:         ltr = _type_conv[self.tp]
705:         self._arpack_solver = _arpack.__dict__[ltr + 'naupd']
706:         self._arpack_extract = _arpack.__dict__[ltr + 'neupd']
707: 
708:         self.iterate_infodict = _NAUPD_ERRORS[ltr]
709:         self.extract_infodict = _NEUPD_ERRORS[ltr]
710: 
711:         self.ipntr = np.zeros(14, "int")
712: 
713:         if self.tp in 'FD':
714:             # Use _aligned_zeros to work around a f2py bug in Numpy 1.9.1
715:             self.rwork = _aligned_zeros(self.ncv, self.tp.lower())
716:         else:
717:             self.rwork = None
718: 
719:     def iterate(self):
720:         if self.tp in 'fd':
721:             self.ido, self.tol, self.resid, self.v, self.iparam, self.ipntr, self.info =\
722:                 self._arpack_solver(self.ido, self.bmat, self.which, self.k,
723:                                     self.tol, self.resid, self.v, self.iparam,
724:                                     self.ipntr, self.workd, self.workl,
725:                                     self.info)
726:         else:
727:             self.ido, self.tol, self.resid, self.v, self.iparam, self.ipntr, self.info =\
728:                 self._arpack_solver(self.ido, self.bmat, self.which, self.k,
729:                                     self.tol, self.resid, self.v, self.iparam,
730:                                     self.ipntr, self.workd, self.workl,
731:                                     self.rwork, self.info)
732: 
733:         xslice = slice(self.ipntr[0] - 1, self.ipntr[0] - 1 + self.n)
734:         yslice = slice(self.ipntr[1] - 1, self.ipntr[1] - 1 + self.n)
735:         if self.ido == -1:
736:             # initialization
737:             self.workd[yslice] = self.OP(self.workd[xslice])
738:         elif self.ido == 1:
739:             # compute y = Op*x
740:             if self.mode in (1, 2):
741:                 self.workd[yslice] = self.OP(self.workd[xslice])
742:             else:
743:                 Bxslice = slice(self.ipntr[2] - 1, self.ipntr[2] - 1 + self.n)
744:                 self.workd[yslice] = self.OPa(self.workd[Bxslice])
745:         elif self.ido == 2:
746:             self.workd[yslice] = self.B(self.workd[xslice])
747:         elif self.ido == 3:
748:             raise ValueError("ARPACK requested user shifts.  Assure ISHIFT==0")
749:         else:
750:             self.converged = True
751: 
752:             if self.info == 0:
753:                 pass
754:             elif self.info == 1:
755:                 self._raise_no_convergence()
756:             else:
757:                 raise ArpackError(self.info, infodict=self.iterate_infodict)
758: 
759:     def extract(self, return_eigenvectors):
760:         k, n = self.k, self.n
761: 
762:         ierr = 0
763:         howmny = 'A'  # return all eigenvectors
764:         sselect = np.zeros(self.ncv, 'int')  # unused
765:         sigmar = np.real(self.sigma)
766:         sigmai = np.imag(self.sigma)
767:         workev = np.zeros(3 * self.ncv, self.tp)
768: 
769:         if self.tp in 'fd':
770:             dr = np.zeros(k + 1, self.tp)
771:             di = np.zeros(k + 1, self.tp)
772:             zr = np.zeros((n, k + 1), self.tp)
773:             dr, di, zr, ierr = \
774:                 self._arpack_extract(return_eigenvectors,
775:                        howmny, sselect, sigmar, sigmai, workev,
776:                        self.bmat, self.which, k, self.tol, self.resid,
777:                        self.v, self.iparam, self.ipntr,
778:                        self.workd, self.workl, self.info)
779:             if ierr != 0:
780:                 raise ArpackError(ierr, infodict=self.extract_infodict)
781:             nreturned = self.iparam[4]  # number of good eigenvalues returned
782: 
783:             # Build complex eigenvalues from real and imaginary parts
784:             d = dr + 1.0j * di
785: 
786:             # Arrange the eigenvectors: complex eigenvectors are stored as
787:             # real,imaginary in consecutive columns
788:             z = zr.astype(self.tp.upper())
789: 
790:             # The ARPACK nonsymmetric real and double interface (s,d)naupd
791:             # return eigenvalues and eigenvectors in real (float,double)
792:             # arrays.
793: 
794:             # Efficiency: this should check that return_eigenvectors == True
795:             #  before going through this construction.
796:             if sigmai == 0:
797:                 i = 0
798:                 while i <= k:
799:                     # check if complex
800:                     if abs(d[i].imag) != 0:
801:                         # this is a complex conjugate pair with eigenvalues
802:                         # in consecutive columns
803:                         if i < k:
804:                             z[:, i] = zr[:, i] + 1.0j * zr[:, i + 1]
805:                             z[:, i + 1] = z[:, i].conjugate()
806:                             i += 1
807:                         else:
808:                             #last eigenvalue is complex: the imaginary part of
809:                             # the eigenvector has not been returned
810:                             #this can only happen if nreturned > k, so we'll
811:                             # throw out this case.
812:                             nreturned -= 1
813:                     i += 1
814: 
815:             else:
816:                 # real matrix, mode 3 or 4, imag(sigma) is nonzero:
817:                 # see remark 3 in <s,d>neupd.f
818:                 # Build complex eigenvalues from real and imaginary parts
819:                 i = 0
820:                 while i <= k:
821:                     if abs(d[i].imag) == 0:
822:                         d[i] = np.dot(zr[:, i], self.matvec(zr[:, i]))
823:                     else:
824:                         if i < k:
825:                             z[:, i] = zr[:, i] + 1.0j * zr[:, i + 1]
826:                             z[:, i + 1] = z[:, i].conjugate()
827:                             d[i] = ((np.dot(zr[:, i],
828:                                             self.matvec(zr[:, i]))
829:                                      + np.dot(zr[:, i + 1],
830:                                               self.matvec(zr[:, i + 1])))
831:                                     + 1j * (np.dot(zr[:, i],
832:                                                    self.matvec(zr[:, i + 1]))
833:                                             - np.dot(zr[:, i + 1],
834:                                                      self.matvec(zr[:, i]))))
835:                             d[i + 1] = d[i].conj()
836:                             i += 1
837:                         else:
838:                             #last eigenvalue is complex: the imaginary part of
839:                             # the eigenvector has not been returned
840:                             #this can only happen if nreturned > k, so we'll
841:                             # throw out this case.
842:                             nreturned -= 1
843:                     i += 1
844: 
845:             # Now we have k+1 possible eigenvalues and eigenvectors
846:             # Return the ones specified by the keyword "which"
847: 
848:             if nreturned <= k:
849:                 # we got less or equal as many eigenvalues we wanted
850:                 d = d[:nreturned]
851:                 z = z[:, :nreturned]
852:             else:
853:                 # we got one extra eigenvalue (likely a cc pair, but which?)
854:                 # cut at approx precision for sorting
855:                 rd = np.round(d, decimals=_ndigits[self.tp])
856:                 if self.which in ['LR', 'SR']:
857:                     ind = np.argsort(rd.real)
858:                 elif self.which in ['LI', 'SI']:
859:                     # for LI,SI ARPACK returns largest,smallest
860:                     # abs(imaginary) why?
861:                     ind = np.argsort(abs(rd.imag))
862:                 else:
863:                     ind = np.argsort(abs(rd))
864:                 if self.which in ['LR', 'LM', 'LI']:
865:                     d = d[ind[-k:]]
866:                     z = z[:, ind[-k:]]
867:                 if self.which in ['SR', 'SM', 'SI']:
868:                     d = d[ind[:k]]
869:                     z = z[:, ind[:k]]
870:         else:
871:             # complex is so much simpler...
872:             d, z, ierr =\
873:                     self._arpack_extract(return_eigenvectors,
874:                            howmny, sselect, self.sigma, workev,
875:                            self.bmat, self.which, k, self.tol, self.resid,
876:                            self.v, self.iparam, self.ipntr,
877:                            self.workd, self.workl, self.rwork, ierr)
878: 
879:             if ierr != 0:
880:                 raise ArpackError(ierr, infodict=self.extract_infodict)
881: 
882:             k_ok = self.iparam[4]
883:             d = d[:k_ok]
884:             z = z[:, :k_ok]
885: 
886:         if return_eigenvectors:
887:             return d, z
888:         else:
889:             return d
890: 
891: 
892: def _aslinearoperator_with_dtype(m):
893:     m = aslinearoperator(m)
894:     if not hasattr(m, 'dtype'):
895:         x = np.zeros(m.shape[1])
896:         m.dtype = (m * x).dtype
897:     return m
898: 
899: 
900: class SpLuInv(LinearOperator):
901:     '''
902:     SpLuInv:
903:        helper class to repeatedly solve M*x=b
904:        using a sparse LU-decopposition of M
905:     '''
906:     def __init__(self, M):
907:         self.M_lu = splu(M)
908:         self.shape = M.shape
909:         self.dtype = M.dtype
910:         self.isreal = not np.issubdtype(self.dtype, np.complexfloating)
911: 
912:     def _matvec(self, x):
913:         # careful here: splu.solve will throw away imaginary
914:         # part of x if M is real
915:         x = np.asarray(x)
916:         if self.isreal and np.issubdtype(x.dtype, np.complexfloating):
917:             return (self.M_lu.solve(np.real(x).astype(self.dtype))
918:                     + 1j * self.M_lu.solve(np.imag(x).astype(self.dtype)))
919:         else:
920:             return self.M_lu.solve(x.astype(self.dtype))
921: 
922: 
923: class LuInv(LinearOperator):
924:     '''
925:     LuInv:
926:        helper class to repeatedly solve M*x=b
927:        using an LU-decomposition of M
928:     '''
929:     def __init__(self, M):
930:         self.M_lu = lu_factor(M)
931:         self.shape = M.shape
932:         self.dtype = M.dtype
933: 
934:     def _matvec(self, x):
935:         return lu_solve(self.M_lu, x)
936: 
937: 
938: class IterInv(LinearOperator):
939:     '''
940:     IterInv:
941:        helper class to repeatedly solve M*x=b
942:        using an iterative method.
943:     '''
944:     def __init__(self, M, ifunc=gmres, tol=0):
945:         if tol <= 0:
946:             # when tol=0, ARPACK uses machine tolerance as calculated
947:             # by LAPACK's _LAMCH function.  We should match this
948:             tol = 2 * np.finfo(M.dtype).eps
949:         self.M = M
950:         self.ifunc = ifunc
951:         self.tol = tol
952:         if hasattr(M, 'dtype'):
953:             self.dtype = M.dtype
954:         else:
955:             x = np.zeros(M.shape[1])
956:             self.dtype = (M * x).dtype
957:         self.shape = M.shape
958: 
959:     def _matvec(self, x):
960:         b, info = self.ifunc(self.M, x, tol=self.tol)
961:         if info != 0:
962:             raise ValueError("Error in inverting M: function "
963:                              "%s did not converge (info = %i)."
964:                              % (self.ifunc.__name__, info))
965:         return b
966: 
967: 
968: class IterOpInv(LinearOperator):
969:     '''
970:     IterOpInv:
971:        helper class to repeatedly solve [A-sigma*M]*x = b
972:        using an iterative method
973:     '''
974:     def __init__(self, A, M, sigma, ifunc=gmres, tol=0):
975:         if tol <= 0:
976:             # when tol=0, ARPACK uses machine tolerance as calculated
977:             # by LAPACK's _LAMCH function.  We should match this
978:             tol = 2 * np.finfo(A.dtype).eps
979:         self.A = A
980:         self.M = M
981:         self.sigma = sigma
982:         self.ifunc = ifunc
983:         self.tol = tol
984: 
985:         def mult_func(x):
986:             return A.matvec(x) - sigma * M.matvec(x)
987: 
988:         def mult_func_M_None(x):
989:             return A.matvec(x) - sigma * x
990: 
991:         x = np.zeros(A.shape[1])
992:         if M is None:
993:             dtype = mult_func_M_None(x).dtype
994:             self.OP = LinearOperator(self.A.shape,
995:                                      mult_func_M_None,
996:                                      dtype=dtype)
997:         else:
998:             dtype = mult_func(x).dtype
999:             self.OP = LinearOperator(self.A.shape,
1000:                                      mult_func,
1001:                                      dtype=dtype)
1002:         self.shape = A.shape
1003: 
1004:     def _matvec(self, x):
1005:         b, info = self.ifunc(self.OP, x, tol=self.tol)
1006:         if info != 0:
1007:             raise ValueError("Error in inverting [A-sigma*M]: function "
1008:                              "%s did not converge (info = %i)."
1009:                              % (self.ifunc.__name__, info))
1010:         return b
1011: 
1012:     @property
1013:     def dtype(self):
1014:         return self.OP.dtype
1015: 
1016: 
1017: def get_inv_matvec(M, symmetric=False, tol=0):
1018:     if isdense(M):
1019:         return LuInv(M).matvec
1020:     elif isspmatrix(M):
1021:         if isspmatrix_csr(M) and symmetric:
1022:             M = M.T
1023:         return SpLuInv(M).matvec
1024:     else:
1025:         return IterInv(M, tol=tol).matvec
1026: 
1027: 
1028: def get_OPinv_matvec(A, M, sigma, symmetric=False, tol=0):
1029:     if sigma == 0:
1030:         return get_inv_matvec(A, symmetric=symmetric, tol=tol)
1031: 
1032:     if M is None:
1033:         #M is the identity matrix
1034:         if isdense(A):
1035:             if (np.issubdtype(A.dtype, np.complexfloating)
1036:                     or np.imag(sigma) == 0):
1037:                 A = np.copy(A)
1038:             else:
1039:                 A = A + 0j
1040:             A.flat[::A.shape[1] + 1] -= sigma
1041:             return LuInv(A).matvec
1042:         elif isspmatrix(A):
1043:             A = A - sigma * eye(A.shape[0])
1044:             if symmetric and isspmatrix_csr(A):
1045:                 A = A.T
1046:             return SpLuInv(A.tocsc()).matvec
1047:         else:
1048:             return IterOpInv(_aslinearoperator_with_dtype(A),
1049:                               M, sigma, tol=tol).matvec
1050:     else:
1051:         if ((not isdense(A) and not isspmatrix(A)) or
1052:                 (not isdense(M) and not isspmatrix(M))):
1053:             return IterOpInv(_aslinearoperator_with_dtype(A),
1054:                               _aslinearoperator_with_dtype(M),
1055:                               sigma, tol=tol).matvec
1056:         elif isdense(A) or isdense(M):
1057:             return LuInv(A - sigma * M).matvec
1058:         else:
1059:             OP = A - sigma * M
1060:             if symmetric and isspmatrix_csr(OP):
1061:                 OP = OP.T
1062:             return SpLuInv(OP.tocsc()).matvec
1063: 
1064: 
1065: # ARPACK is not threadsafe or reentrant (SAVE variables), so we need a
1066: # lock and a re-entering check.
1067: _ARPACK_LOCK = ReentrancyLock("Nested calls to eigs/eighs not allowed: "
1068:                               "ARPACK is not re-entrant")
1069: 
1070: 
1071: def eigs(A, k=6, M=None, sigma=None, which='LM', v0=None,
1072:          ncv=None, maxiter=None, tol=0, return_eigenvectors=True,
1073:          Minv=None, OPinv=None, OPpart=None):
1074:     '''
1075:     Find k eigenvalues and eigenvectors of the square matrix A.
1076: 
1077:     Solves ``A * x[i] = w[i] * x[i]``, the standard eigenvalue problem
1078:     for w[i] eigenvalues with corresponding eigenvectors x[i].
1079: 
1080:     If M is specified, solves ``A * x[i] = w[i] * M * x[i]``, the
1081:     generalized eigenvalue problem for w[i] eigenvalues
1082:     with corresponding eigenvectors x[i]
1083: 
1084:     Parameters
1085:     ----------
1086:     A : ndarray, sparse matrix or LinearOperator
1087:         An array, sparse matrix, or LinearOperator representing
1088:         the operation ``A * x``, where A is a real or complex square matrix.
1089:     k : int, optional
1090:         The number of eigenvalues and eigenvectors desired.
1091:         `k` must be smaller than N-1. It is not possible to compute all
1092:         eigenvectors of a matrix.
1093:     M : ndarray, sparse matrix or LinearOperator, optional
1094:         An array, sparse matrix, or LinearOperator representing
1095:         the operation M*x for the generalized eigenvalue problem
1096: 
1097:             A * x = w * M * x.
1098: 
1099:         M must represent a real, symmetric matrix if A is real, and must
1100:         represent a complex, hermitian matrix if A is complex. For best
1101:         results, the data type of M should be the same as that of A.
1102:         Additionally:
1103: 
1104:             If `sigma` is None, M is positive definite
1105: 
1106:             If sigma is specified, M is positive semi-definite
1107: 
1108:         If sigma is None, eigs requires an operator to compute the solution
1109:         of the linear equation ``M * x = b``.  This is done internally via a
1110:         (sparse) LU decomposition for an explicit matrix M, or via an
1111:         iterative solver for a general linear operator.  Alternatively,
1112:         the user can supply the matrix or operator Minv, which gives
1113:         ``x = Minv * b = M^-1 * b``.
1114:     sigma : real or complex, optional
1115:         Find eigenvalues near sigma using shift-invert mode.  This requires
1116:         an operator to compute the solution of the linear system
1117:         ``[A - sigma * M] * x = b``, where M is the identity matrix if
1118:         unspecified. This is computed internally via a (sparse) LU
1119:         decomposition for explicit matrices A & M, or via an iterative
1120:         solver if either A or M is a general linear operator.
1121:         Alternatively, the user can supply the matrix or operator OPinv,
1122:         which gives ``x = OPinv * b = [A - sigma * M]^-1 * b``.
1123:         For a real matrix A, shift-invert can either be done in imaginary
1124:         mode or real mode, specified by the parameter OPpart ('r' or 'i').
1125:         Note that when sigma is specified, the keyword 'which' (below)
1126:         refers to the shifted eigenvalues ``w'[i]`` where:
1127: 
1128:             If A is real and OPpart == 'r' (default),
1129:               ``w'[i] = 1/2 * [1/(w[i]-sigma) + 1/(w[i]-conj(sigma))]``.
1130: 
1131:             If A is real and OPpart == 'i',
1132:               ``w'[i] = 1/2i * [1/(w[i]-sigma) - 1/(w[i]-conj(sigma))]``.
1133: 
1134:             If A is complex, ``w'[i] = 1/(w[i]-sigma)``.
1135: 
1136:     v0 : ndarray, optional
1137:         Starting vector for iteration.
1138:         Default: random
1139:     ncv : int, optional
1140:         The number of Lanczos vectors generated
1141:         `ncv` must be greater than `k`; it is recommended that ``ncv > 2*k``.
1142:         Default: ``min(n, max(2*k + 1, 20))``
1143:     which : str, ['LM' | 'SM' | 'LR' | 'SR' | 'LI' | 'SI'], optional
1144:         Which `k` eigenvectors and eigenvalues to find:
1145: 
1146:             'LM' : largest magnitude
1147: 
1148:             'SM' : smallest magnitude
1149: 
1150:             'LR' : largest real part
1151: 
1152:             'SR' : smallest real part
1153: 
1154:             'LI' : largest imaginary part
1155: 
1156:             'SI' : smallest imaginary part
1157: 
1158:         When sigma != None, 'which' refers to the shifted eigenvalues w'[i]
1159:         (see discussion in 'sigma', above).  ARPACK is generally better
1160:         at finding large values than small values.  If small eigenvalues are
1161:         desired, consider using shift-invert mode for better performance.
1162:     maxiter : int, optional
1163:         Maximum number of Arnoldi update iterations allowed
1164:         Default: ``n*10``
1165:     tol : float, optional
1166:         Relative accuracy for eigenvalues (stopping criterion)
1167:         The default value of 0 implies machine precision.
1168:     return_eigenvectors : bool, optional
1169:         Return eigenvectors (True) in addition to eigenvalues
1170:     Minv : ndarray, sparse matrix or LinearOperator, optional
1171:         See notes in M, above.
1172:     OPinv : ndarray, sparse matrix or LinearOperator, optional
1173:         See notes in sigma, above.
1174:     OPpart : {'r' or 'i'}, optional
1175:         See notes in sigma, above
1176: 
1177:     Returns
1178:     -------
1179:     w : ndarray
1180:         Array of k eigenvalues.
1181:     v : ndarray
1182:         An array of `k` eigenvectors.
1183:         ``v[:, i]`` is the eigenvector corresponding to the eigenvalue w[i].
1184: 
1185:     Raises
1186:     ------
1187:     ArpackNoConvergence
1188:         When the requested convergence is not obtained.
1189:         The currently converged eigenvalues and eigenvectors can be found
1190:         as ``eigenvalues`` and ``eigenvectors`` attributes of the exception
1191:         object.
1192: 
1193:     See Also
1194:     --------
1195:     eigsh : eigenvalues and eigenvectors for symmetric matrix A
1196:     svds : singular value decomposition for a matrix A
1197: 
1198:     Notes
1199:     -----
1200:     This function is a wrapper to the ARPACK [1]_ SNEUPD, DNEUPD, CNEUPD,
1201:     ZNEUPD, functions which use the Implicitly Restarted Arnoldi Method to
1202:     find the eigenvalues and eigenvectors [2]_.
1203: 
1204:     References
1205:     ----------
1206:     .. [1] ARPACK Software, http://www.caam.rice.edu/software/ARPACK/
1207:     .. [2] R. B. Lehoucq, D. C. Sorensen, and C. Yang,  ARPACK USERS GUIDE:
1208:        Solution of Large Scale Eigenvalue Problems by Implicitly Restarted
1209:        Arnoldi Methods. SIAM, Philadelphia, PA, 1998.
1210: 
1211:     Examples
1212:     --------
1213:     Find 6 eigenvectors of the identity matrix:
1214: 
1215:     >>> import scipy.sparse as sparse
1216:     >>> id = np.eye(13)
1217:     >>> vals, vecs = sparse.linalg.eigs(id, k=6)
1218:     >>> vals
1219:     array([ 1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j])
1220:     >>> vecs.shape
1221:     (13, 6)
1222: 
1223:     '''
1224:     if A.shape[0] != A.shape[1]:
1225:         raise ValueError('expected square matrix (shape=%s)' % (A.shape,))
1226:     if M is not None:
1227:         if M.shape != A.shape:
1228:             raise ValueError('wrong M dimensions %s, should be %s'
1229:                              % (M.shape, A.shape))
1230:         if np.dtype(M.dtype).char.lower() != np.dtype(A.dtype).char.lower():
1231:             import warnings
1232:             warnings.warn('M does not have the same type precision as A. '
1233:                           'This may adversely affect ARPACK convergence')
1234:     n = A.shape[0]
1235: 
1236:     if k <= 0 or k >= n:
1237:         raise ValueError("k=%d must be between 1 and ndim(A)-1=%d"
1238:                          % (k, n - 1))
1239: 
1240:     if sigma is None:
1241:         matvec = _aslinearoperator_with_dtype(A).matvec
1242: 
1243:         if OPinv is not None:
1244:             raise ValueError("OPinv should not be specified "
1245:                              "with sigma = None.")
1246:         if OPpart is not None:
1247:             raise ValueError("OPpart should not be specified with "
1248:                              "sigma = None or complex A")
1249: 
1250:         if M is None:
1251:             #standard eigenvalue problem
1252:             mode = 1
1253:             M_matvec = None
1254:             Minv_matvec = None
1255:             if Minv is not None:
1256:                 raise ValueError("Minv should not be "
1257:                                  "specified with M = None.")
1258:         else:
1259:             #general eigenvalue problem
1260:             mode = 2
1261:             if Minv is None:
1262:                 Minv_matvec = get_inv_matvec(M, symmetric=True, tol=tol)
1263:             else:
1264:                 Minv = _aslinearoperator_with_dtype(Minv)
1265:                 Minv_matvec = Minv.matvec
1266:             M_matvec = _aslinearoperator_with_dtype(M).matvec
1267:     else:
1268:         #sigma is not None: shift-invert mode
1269:         if np.issubdtype(A.dtype, np.complexfloating):
1270:             if OPpart is not None:
1271:                 raise ValueError("OPpart should not be specified "
1272:                                  "with sigma=None or complex A")
1273:             mode = 3
1274:         elif OPpart is None or OPpart.lower() == 'r':
1275:             mode = 3
1276:         elif OPpart.lower() == 'i':
1277:             if np.imag(sigma) == 0:
1278:                 raise ValueError("OPpart cannot be 'i' if sigma is real")
1279:             mode = 4
1280:         else:
1281:             raise ValueError("OPpart must be one of ('r','i')")
1282: 
1283:         matvec = _aslinearoperator_with_dtype(A).matvec
1284:         if Minv is not None:
1285:             raise ValueError("Minv should not be specified when sigma is")
1286:         if OPinv is None:
1287:             Minv_matvec = get_OPinv_matvec(A, M, sigma,
1288:                                            symmetric=False, tol=tol)
1289:         else:
1290:             OPinv = _aslinearoperator_with_dtype(OPinv)
1291:             Minv_matvec = OPinv.matvec
1292:         if M is None:
1293:             M_matvec = None
1294:         else:
1295:             M_matvec = _aslinearoperator_with_dtype(M).matvec
1296: 
1297:     params = _UnsymmetricArpackParams(n, k, A.dtype.char, matvec, mode,
1298:                                       M_matvec, Minv_matvec, sigma,
1299:                                       ncv, v0, maxiter, which, tol)
1300: 
1301:     with _ARPACK_LOCK:
1302:         while not params.converged:
1303:             params.iterate()
1304: 
1305:         return params.extract(return_eigenvectors)
1306: 
1307: 
1308: def eigsh(A, k=6, M=None, sigma=None, which='LM', v0=None,
1309:           ncv=None, maxiter=None, tol=0, return_eigenvectors=True,
1310:           Minv=None, OPinv=None, mode='normal'):
1311:     '''
1312:     Find k eigenvalues and eigenvectors of the real symmetric square matrix
1313:     or complex hermitian matrix A.
1314: 
1315:     Solves ``A * x[i] = w[i] * x[i]``, the standard eigenvalue problem for
1316:     w[i] eigenvalues with corresponding eigenvectors x[i].
1317: 
1318:     If M is specified, solves ``A * x[i] = w[i] * M * x[i]``, the
1319:     generalized eigenvalue problem for w[i] eigenvalues
1320:     with corresponding eigenvectors x[i]
1321: 
1322:     Parameters
1323:     ----------
1324:     A : An N x N matrix, array, sparse matrix, or LinearOperator representing
1325:         the operation A * x, where A is a real symmetric matrix
1326:         For buckling mode (see below) A must additionally be positive-definite
1327:     k : int, optional
1328:         The number of eigenvalues and eigenvectors desired.
1329:         `k` must be smaller than N. It is not possible to compute all
1330:         eigenvectors of a matrix.
1331: 
1332:     Returns
1333:     -------
1334:     w : array
1335:         Array of k eigenvalues
1336:     v : array
1337:         An array representing the `k` eigenvectors.  The column ``v[:, i]`` is
1338:         the eigenvector corresponding to the eigenvalue ``w[i]``.
1339: 
1340:     Other Parameters
1341:     ----------------
1342:     M : An N x N matrix, array, sparse matrix, or linear operator representing
1343:         the operation M * x for the generalized eigenvalue problem
1344: 
1345:             A * x = w * M * x.
1346: 
1347:         M must represent a real, symmetric matrix if A is real, and must
1348:         represent a complex, hermitian matrix if A is complex. For best
1349:         results, the data type of M should be the same as that of A.
1350:         Additionally:
1351: 
1352:             If sigma is None, M is symmetric positive definite
1353: 
1354:             If sigma is specified, M is symmetric positive semi-definite
1355: 
1356:             In buckling mode, M is symmetric indefinite.
1357: 
1358:         If sigma is None, eigsh requires an operator to compute the solution
1359:         of the linear equation ``M * x = b``. This is done internally via a
1360:         (sparse) LU decomposition for an explicit matrix M, or via an
1361:         iterative solver for a general linear operator.  Alternatively,
1362:         the user can supply the matrix or operator Minv, which gives
1363:         ``x = Minv * b = M^-1 * b``.
1364:     sigma : real
1365:         Find eigenvalues near sigma using shift-invert mode.  This requires
1366:         an operator to compute the solution of the linear system
1367:         `[A - sigma * M] x = b`, where M is the identity matrix if
1368:         unspecified.  This is computed internally via a (sparse) LU
1369:         decomposition for explicit matrices A & M, or via an iterative
1370:         solver if either A or M is a general linear operator.
1371:         Alternatively, the user can supply the matrix or operator OPinv,
1372:         which gives ``x = OPinv * b = [A - sigma * M]^-1 * b``.
1373:         Note that when sigma is specified, the keyword 'which' refers to
1374:         the shifted eigenvalues ``w'[i]`` where:
1375: 
1376:             if mode == 'normal', ``w'[i] = 1 / (w[i] - sigma)``.
1377: 
1378:             if mode == 'cayley', ``w'[i] = (w[i] + sigma) / (w[i] - sigma)``.
1379: 
1380:             if mode == 'buckling', ``w'[i] = w[i] / (w[i] - sigma)``.
1381: 
1382:         (see further discussion in 'mode' below)
1383:     v0 : ndarray, optional
1384:         Starting vector for iteration.
1385:         Default: random
1386:     ncv : int, optional
1387:         The number of Lanczos vectors generated ncv must be greater than k and
1388:         smaller than n; it is recommended that ``ncv > 2*k``.
1389:         Default: ``min(n, max(2*k + 1, 20))``
1390:     which : str ['LM' | 'SM' | 'LA' | 'SA' | 'BE']
1391:         If A is a complex hermitian matrix, 'BE' is invalid.
1392:         Which `k` eigenvectors and eigenvalues to find:
1393: 
1394:             'LM' : Largest (in magnitude) eigenvalues
1395: 
1396:             'SM' : Smallest (in magnitude) eigenvalues
1397: 
1398:             'LA' : Largest (algebraic) eigenvalues
1399: 
1400:             'SA' : Smallest (algebraic) eigenvalues
1401: 
1402:             'BE' : Half (k/2) from each end of the spectrum
1403: 
1404:         When k is odd, return one more (k/2+1) from the high end.
1405:         When sigma != None, 'which' refers to the shifted eigenvalues ``w'[i]``
1406:         (see discussion in 'sigma', above).  ARPACK is generally better
1407:         at finding large values than small values.  If small eigenvalues are
1408:         desired, consider using shift-invert mode for better performance.
1409:     maxiter : int, optional
1410:         Maximum number of Arnoldi update iterations allowed
1411:         Default: ``n*10``
1412:     tol : float
1413:         Relative accuracy for eigenvalues (stopping criterion).
1414:         The default value of 0 implies machine precision.
1415:     Minv : N x N matrix, array, sparse matrix, or LinearOperator
1416:         See notes in M, above
1417:     OPinv : N x N matrix, array, sparse matrix, or LinearOperator
1418:         See notes in sigma, above.
1419:     return_eigenvectors : bool
1420:         Return eigenvectors (True) in addition to eigenvalues
1421:     mode : string ['normal' | 'buckling' | 'cayley']
1422:         Specify strategy to use for shift-invert mode.  This argument applies
1423:         only for real-valued A and sigma != None.  For shift-invert mode,
1424:         ARPACK internally solves the eigenvalue problem
1425:         ``OP * x'[i] = w'[i] * B * x'[i]``
1426:         and transforms the resulting Ritz vectors x'[i] and Ritz values w'[i]
1427:         into the desired eigenvectors and eigenvalues of the problem
1428:         ``A * x[i] = w[i] * M * x[i]``.
1429:         The modes are as follows:
1430: 
1431:             'normal' :
1432:                 OP = [A - sigma * M]^-1 * M,
1433:                 B = M,
1434:                 w'[i] = 1 / (w[i] - sigma)
1435: 
1436:             'buckling' :
1437:                 OP = [A - sigma * M]^-1 * A,
1438:                 B = A,
1439:                 w'[i] = w[i] / (w[i] - sigma)
1440: 
1441:             'cayley' :
1442:                 OP = [A - sigma * M]^-1 * [A + sigma * M],
1443:                 B = M,
1444:                 w'[i] = (w[i] + sigma) / (w[i] - sigma)
1445: 
1446:         The choice of mode will affect which eigenvalues are selected by
1447:         the keyword 'which', and can also impact the stability of
1448:         convergence (see [2] for a discussion)
1449: 
1450:     Raises
1451:     ------
1452:     ArpackNoConvergence
1453:         When the requested convergence is not obtained.
1454: 
1455:         The currently converged eigenvalues and eigenvectors can be found
1456:         as ``eigenvalues`` and ``eigenvectors`` attributes of the exception
1457:         object.
1458: 
1459:     See Also
1460:     --------
1461:     eigs : eigenvalues and eigenvectors for a general (nonsymmetric) matrix A
1462:     svds : singular value decomposition for a matrix A
1463: 
1464:     Notes
1465:     -----
1466:     This function is a wrapper to the ARPACK [1]_ SSEUPD and DSEUPD
1467:     functions which use the Implicitly Restarted Lanczos Method to
1468:     find the eigenvalues and eigenvectors [2]_.
1469: 
1470:     References
1471:     ----------
1472:     .. [1] ARPACK Software, http://www.caam.rice.edu/software/ARPACK/
1473:     .. [2] R. B. Lehoucq, D. C. Sorensen, and C. Yang,  ARPACK USERS GUIDE:
1474:        Solution of Large Scale Eigenvalue Problems by Implicitly Restarted
1475:        Arnoldi Methods. SIAM, Philadelphia, PA, 1998.
1476: 
1477:     Examples
1478:     --------
1479:     >>> import scipy.sparse as sparse
1480:     >>> id = np.eye(13)
1481:     >>> vals, vecs = sparse.linalg.eigsh(id, k=6)
1482:     >>> vals
1483:     array([ 1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j])
1484:     >>> vecs.shape
1485:     (13, 6)
1486: 
1487:     '''
1488:     # complex hermitian matrices should be solved with eigs
1489:     if np.issubdtype(A.dtype, np.complexfloating):
1490:         if mode != 'normal':
1491:             raise ValueError("mode=%s cannot be used with "
1492:                              "complex matrix A" % mode)
1493:         if which == 'BE':
1494:             raise ValueError("which='BE' cannot be used with complex matrix A")
1495:         elif which == 'LA':
1496:             which = 'LR'
1497:         elif which == 'SA':
1498:             which = 'SR'
1499:         ret = eigs(A, k, M=M, sigma=sigma, which=which, v0=v0,
1500:                    ncv=ncv, maxiter=maxiter, tol=tol,
1501:                    return_eigenvectors=return_eigenvectors, Minv=Minv,
1502:                    OPinv=OPinv)
1503: 
1504:         if return_eigenvectors:
1505:             return ret[0].real, ret[1]
1506:         else:
1507:             return ret.real
1508: 
1509:     if A.shape[0] != A.shape[1]:
1510:         raise ValueError('expected square matrix (shape=%s)' % (A.shape,))
1511:     if M is not None:
1512:         if M.shape != A.shape:
1513:             raise ValueError('wrong M dimensions %s, should be %s'
1514:                              % (M.shape, A.shape))
1515:         if np.dtype(M.dtype).char.lower() != np.dtype(A.dtype).char.lower():
1516:             import warnings
1517:             warnings.warn('M does not have the same type precision as A. '
1518:                           'This may adversely affect ARPACK convergence')
1519:     n = A.shape[0]
1520: 
1521:     if k <= 0 or k >= n:
1522:         raise ValueError("k must be between 1 and the order of the "
1523:                          "square input matrix.")
1524: 
1525:     if sigma is None:
1526:         A = _aslinearoperator_with_dtype(A)
1527:         matvec = A.matvec
1528: 
1529:         if OPinv is not None:
1530:             raise ValueError("OPinv should not be specified "
1531:                              "with sigma = None.")
1532:         if M is None:
1533:             #standard eigenvalue problem
1534:             mode = 1
1535:             M_matvec = None
1536:             Minv_matvec = None
1537:             if Minv is not None:
1538:                 raise ValueError("Minv should not be "
1539:                                  "specified with M = None.")
1540:         else:
1541:             #general eigenvalue problem
1542:             mode = 2
1543:             if Minv is None:
1544:                 Minv_matvec = get_inv_matvec(M, symmetric=True, tol=tol)
1545:             else:
1546:                 Minv = _aslinearoperator_with_dtype(Minv)
1547:                 Minv_matvec = Minv.matvec
1548:             M_matvec = _aslinearoperator_with_dtype(M).matvec
1549:     else:
1550:         # sigma is not None: shift-invert mode
1551:         if Minv is not None:
1552:             raise ValueError("Minv should not be specified when sigma is")
1553: 
1554:         # normal mode
1555:         if mode == 'normal':
1556:             mode = 3
1557:             matvec = None
1558:             if OPinv is None:
1559:                 Minv_matvec = get_OPinv_matvec(A, M, sigma,
1560:                                                symmetric=True, tol=tol)
1561:             else:
1562:                 OPinv = _aslinearoperator_with_dtype(OPinv)
1563:                 Minv_matvec = OPinv.matvec
1564:             if M is None:
1565:                 M_matvec = None
1566:             else:
1567:                 M = _aslinearoperator_with_dtype(M)
1568:                 M_matvec = M.matvec
1569: 
1570:         # buckling mode
1571:         elif mode == 'buckling':
1572:             mode = 4
1573:             if OPinv is None:
1574:                 Minv_matvec = get_OPinv_matvec(A, M, sigma,
1575:                                                symmetric=True, tol=tol)
1576:             else:
1577:                 Minv_matvec = _aslinearoperator_with_dtype(OPinv).matvec
1578:             matvec = _aslinearoperator_with_dtype(A).matvec
1579:             M_matvec = None
1580: 
1581:         # cayley-transform mode
1582:         elif mode == 'cayley':
1583:             mode = 5
1584:             matvec = _aslinearoperator_with_dtype(A).matvec
1585:             if OPinv is None:
1586:                 Minv_matvec = get_OPinv_matvec(A, M, sigma,
1587:                                                symmetric=True, tol=tol)
1588:             else:
1589:                 Minv_matvec = _aslinearoperator_with_dtype(OPinv).matvec
1590:             if M is None:
1591:                 M_matvec = None
1592:             else:
1593:                 M_matvec = _aslinearoperator_with_dtype(M).matvec
1594: 
1595:         # unrecognized mode
1596:         else:
1597:             raise ValueError("unrecognized mode '%s'" % mode)
1598: 
1599:     params = _SymmetricArpackParams(n, k, A.dtype.char, matvec, mode,
1600:                                     M_matvec, Minv_matvec, sigma,
1601:                                     ncv, v0, maxiter, which, tol)
1602: 
1603:     with _ARPACK_LOCK:
1604:         while not params.converged:
1605:             params.iterate()
1606: 
1607:         return params.extract(return_eigenvectors)
1608: 
1609: 
1610: def _augmented_orthonormal_cols(x, k):
1611:     # extract the shape of the x array
1612:     n, m = x.shape
1613:     # create the expanded array and copy x into it
1614:     y = np.empty((n, m+k), dtype=x.dtype)
1615:     y[:, :m] = x
1616:     # do some modified gram schmidt to add k random orthonormal vectors
1617:     for i in range(k):
1618:         # sample a random initial vector
1619:         v = np.random.randn(n)
1620:         if np.iscomplexobj(x):
1621:             v = v + 1j*np.random.randn(n)
1622:         # subtract projections onto the existing unit length vectors
1623:         for j in range(m+i):
1624:             u = y[:, j]
1625:             v -= (np.dot(v, u.conj()) / np.dot(u, u.conj())) * u
1626:         # normalize v
1627:         v /= np.sqrt(np.dot(v, v.conj()))
1628:         # add v into the output array
1629:         y[:, m+i] = v
1630:     # return the expanded array
1631:     return y
1632: 
1633: 
1634: def _augmented_orthonormal_rows(x, k):
1635:     return _augmented_orthonormal_cols(x.T, k).T
1636: 
1637: 
1638: def _herm(x):
1639:     return x.T.conj()
1640: 
1641: 
1642: def svds(A, k=6, ncv=None, tol=0, which='LM', v0=None,
1643:          maxiter=None, return_singular_vectors=True):
1644:     '''Compute the largest k singular values/vectors for a sparse matrix.
1645: 
1646:     Parameters
1647:     ----------
1648:     A : {sparse matrix, LinearOperator}
1649:         Array to compute the SVD on, of shape (M, N)
1650:     k : int, optional
1651:         Number of singular values and vectors to compute.
1652:         Must be 1 <= k < min(A.shape).
1653:     ncv : int, optional
1654:         The number of Lanczos vectors generated
1655:         ncv must be greater than k+1 and smaller than n;
1656:         it is recommended that ncv > 2*k
1657:         Default: ``min(n, max(2*k + 1, 20))``
1658:     tol : float, optional
1659:         Tolerance for singular values. Zero (default) means machine precision.
1660:     which : str, ['LM' | 'SM'], optional
1661:         Which `k` singular values to find:
1662: 
1663:             - 'LM' : largest singular values
1664:             - 'SM' : smallest singular values
1665: 
1666:         .. versionadded:: 0.12.0
1667:     v0 : ndarray, optional
1668:         Starting vector for iteration, of length min(A.shape). Should be an
1669:         (approximate) left singular vector if N > M and a right singular
1670:         vector otherwise.
1671:         Default: random
1672: 
1673:         .. versionadded:: 0.12.0
1674:     maxiter : int, optional
1675:         Maximum number of iterations.
1676: 
1677:         .. versionadded:: 0.12.0
1678:     return_singular_vectors : bool or str, optional
1679:         - True: return singular vectors (True) in addition to singular values.
1680: 
1681:         .. versionadded:: 0.12.0
1682: 
1683:         - "u": only return the u matrix, without computing vh (if N > M).
1684:         - "vh": only return the vh matrix, without computing u (if N <= M).
1685: 
1686:         .. versionadded:: 0.16.0
1687: 
1688:     Returns
1689:     -------
1690:     u : ndarray, shape=(M, k)
1691:         Unitary matrix having left singular vectors as columns.
1692:         If `return_singular_vectors` is "vh", this variable is not computed,
1693:         and None is returned instead.
1694:     s : ndarray, shape=(k,)
1695:         The singular values.
1696:     vt : ndarray, shape=(k, N)
1697:         Unitary matrix having right singular vectors as rows.
1698:         If `return_singular_vectors` is "u", this variable is not computed,
1699:         and None is returned instead.
1700: 
1701: 
1702:     Notes
1703:     -----
1704:     This is a naive implementation using ARPACK as an eigensolver
1705:     on A.H * A or A * A.H, depending on which one is more efficient.
1706: 
1707:     Examples
1708:     --------
1709:     >>> from scipy.sparse import csc_matrix
1710:     >>> from scipy.sparse.linalg import svds, eigs
1711:     >>> A = csc_matrix([[1, 0, 0], [5, 0, 2], [0, -1, 0], [0, 0, 3]], dtype=float)
1712:     >>> u, s, vt = svds(A, k=2)
1713:     >>> s
1714:     array([ 2.75193379,  5.6059665 ])
1715:     >>> np.sqrt(eigs(A.dot(A.T), k=2)[0]).real
1716:     array([ 5.6059665 ,  2.75193379])
1717:     '''
1718:     if not (isinstance(A, LinearOperator) or isspmatrix(A)):
1719:         A = np.asarray(A)
1720: 
1721:     n, m = A.shape
1722: 
1723:     if k <= 0 or k >= min(n, m):
1724:         raise ValueError("k must be between 1 and min(A.shape), k=%d" % k)
1725: 
1726:     if isinstance(A, LinearOperator):
1727:         if n > m:
1728:             X_dot = A.matvec
1729:             X_matmat = A.matmat
1730:             XH_dot = A.rmatvec
1731:         else:
1732:             X_dot = A.rmatvec
1733:             XH_dot = A.matvec
1734: 
1735:             dtype = getattr(A, 'dtype', None)
1736:             if dtype is None:
1737:                 dtype = A.dot(np.zeros([m,1])).dtype
1738: 
1739:             # A^H * V; works around lack of LinearOperator.adjoint.
1740:             # XXX This can be slow!
1741:             def X_matmat(V):
1742:                 out = np.empty((V.shape[1], m), dtype=dtype)
1743:                 for i, col in enumerate(V.T):
1744:                     out[i, :] = A.rmatvec(col.reshape(-1, 1)).T
1745:                 return out.T
1746: 
1747:     else:
1748:         if n > m:
1749:             X_dot = X_matmat = A.dot
1750:             XH_dot = _herm(A).dot
1751:         else:
1752:             XH_dot = A.dot
1753:             X_dot = X_matmat = _herm(A).dot
1754: 
1755:     def matvec_XH_X(x):
1756:         return XH_dot(X_dot(x))
1757: 
1758:     XH_X = LinearOperator(matvec=matvec_XH_X, dtype=A.dtype,
1759:                           shape=(min(A.shape), min(A.shape)))
1760: 
1761:     # Get a low rank approximation of the implicitly defined gramian matrix.
1762:     # This is not a stable way to approach the problem.
1763:     eigvals, eigvec = eigsh(XH_X, k=k, tol=tol ** 2, maxiter=maxiter,
1764:                                   ncv=ncv, which=which, v0=v0)
1765: 
1766:     # In 'LM' mode try to be clever about small eigenvalues.
1767:     # Otherwise in 'SM' mode do not try to be clever.
1768:     if which == 'LM':
1769: 
1770:         # Gramian matrices have real non-negative eigenvalues.
1771:         eigvals = np.maximum(eigvals.real, 0)
1772: 
1773:         # Use the sophisticated detection of small eigenvalues from pinvh.
1774:         t = eigvec.dtype.char.lower()
1775:         factor = {'f': 1E3, 'd': 1E6}
1776:         cond = factor[t] * np.finfo(t).eps
1777:         cutoff = cond * np.max(eigvals)
1778: 
1779:         # Get a mask indicating which eigenpairs are not degenerately tiny,
1780:         # and create the re-ordered array of thresholded singular values.
1781:         above_cutoff = (eigvals > cutoff)
1782:         nlarge = above_cutoff.sum()
1783:         nsmall = k - nlarge
1784:         slarge = np.sqrt(eigvals[above_cutoff])
1785:         s = np.zeros_like(eigvals)
1786:         s[:nlarge] = slarge
1787:         if not return_singular_vectors:
1788:             return s
1789: 
1790:         if n > m:
1791:             vlarge = eigvec[:, above_cutoff]
1792:             ularge = X_matmat(vlarge) / slarge if return_singular_vectors != 'vh' else None
1793:             vhlarge = _herm(vlarge)
1794:         else:
1795:             ularge = eigvec[:, above_cutoff]
1796:             vhlarge = _herm(X_matmat(ularge) / slarge) if return_singular_vectors != 'u' else None
1797: 
1798:         u = _augmented_orthonormal_cols(ularge, nsmall) if ularge is not None else None
1799:         vh = _augmented_orthonormal_rows(vhlarge, nsmall) if vhlarge is not None else None
1800: 
1801:     elif which == 'SM':
1802: 
1803:         s = np.sqrt(eigvals)
1804:         if not return_singular_vectors:
1805:             return s
1806: 
1807:         if n > m:
1808:             v = eigvec
1809:             u = X_matmat(v) / s if return_singular_vectors != 'vh' else None
1810:             vh = _herm(v)
1811:         else:
1812:             u = eigvec
1813:             vh = _herm(X_matmat(u) / s) if return_singular_vectors != 'u' else None
1814: 
1815:     else:
1816: 
1817:         raise ValueError("which must be either 'LM' or 'SM'.")
1818: 
1819:     return u, s, vh
1820: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_396039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, (-1)), 'str', '\nFind a few eigenvectors and eigenvalues of a matrix.\n\n\nUses ARPACK: http://www.caam.rice.edu/software/ARPACK/\n\n')

# Assigning a Str to a Name (line 41):

# Assigning a Str to a Name (line 41):
str_396040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 16), 'str', 'restructuredtext en')
# Assigning a type to the variable '__docformat__' (line 41)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 41, 0), '__docformat__', str_396040)

# Assigning a List to a Name (line 43):

# Assigning a List to a Name (line 43):
__all__ = ['eigs', 'eigsh', 'svds', 'ArpackError', 'ArpackNoConvergence']
module_type_store.set_exportable_members(['eigs', 'eigsh', 'svds', 'ArpackError', 'ArpackNoConvergence'])

# Obtaining an instance of the builtin type 'list' (line 43)
list_396041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 10), 'list')
# Adding type elements to the builtin type 'list' instance (line 43)
# Adding element type (line 43)
str_396042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 11), 'str', 'eigs')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 10), list_396041, str_396042)
# Adding element type (line 43)
str_396043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 19), 'str', 'eigsh')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 10), list_396041, str_396043)
# Adding element type (line 43)
str_396044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 28), 'str', 'svds')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 10), list_396041, str_396044)
# Adding element type (line 43)
str_396045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 36), 'str', 'ArpackError')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 10), list_396041, str_396045)
# Adding element type (line 43)
str_396046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 51), 'str', 'ArpackNoConvergence')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 10), list_396041, str_396046)

# Assigning a type to the variable '__all__' (line 43)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 0), '__all__', list_396041)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 45, 0))

# 'from scipy.sparse.linalg.eigen.arpack import _arpack' statement (line 45)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')
import_396047 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 45, 0), 'scipy.sparse.linalg.eigen.arpack')

if (type(import_396047) is not StypyTypeError):

    if (import_396047 != 'pyd_module'):
        __import__(import_396047)
        sys_modules_396048 = sys.modules[import_396047]
        import_from_module(stypy.reporting.localization.Localization(__file__, 45, 0), 'scipy.sparse.linalg.eigen.arpack', sys_modules_396048.module_type_store, module_type_store, ['_arpack'])
        nest_module(stypy.reporting.localization.Localization(__file__, 45, 0), __file__, sys_modules_396048, sys_modules_396048.module_type_store, module_type_store)
    else:
        from scipy.sparse.linalg.eigen.arpack import _arpack

        import_from_module(stypy.reporting.localization.Localization(__file__, 45, 0), 'scipy.sparse.linalg.eigen.arpack', None, module_type_store, ['_arpack'], [_arpack])

else:
    # Assigning a type to the variable 'scipy.sparse.linalg.eigen.arpack' (line 45)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 0), 'scipy.sparse.linalg.eigen.arpack', import_396047)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 46, 0))

# 'import numpy' statement (line 46)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')
import_396049 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 46, 0), 'numpy')

if (type(import_396049) is not StypyTypeError):

    if (import_396049 != 'pyd_module'):
        __import__(import_396049)
        sys_modules_396050 = sys.modules[import_396049]
        import_module(stypy.reporting.localization.Localization(__file__, 46, 0), 'np', sys_modules_396050.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 46, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 46)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 46, 0), 'numpy', import_396049)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 47, 0))

# 'from scipy.sparse.linalg.interface import aslinearoperator, LinearOperator' statement (line 47)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')
import_396051 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 47, 0), 'scipy.sparse.linalg.interface')

if (type(import_396051) is not StypyTypeError):

    if (import_396051 != 'pyd_module'):
        __import__(import_396051)
        sys_modules_396052 = sys.modules[import_396051]
        import_from_module(stypy.reporting.localization.Localization(__file__, 47, 0), 'scipy.sparse.linalg.interface', sys_modules_396052.module_type_store, module_type_store, ['aslinearoperator', 'LinearOperator'])
        nest_module(stypy.reporting.localization.Localization(__file__, 47, 0), __file__, sys_modules_396052, sys_modules_396052.module_type_store, module_type_store)
    else:
        from scipy.sparse.linalg.interface import aslinearoperator, LinearOperator

        import_from_module(stypy.reporting.localization.Localization(__file__, 47, 0), 'scipy.sparse.linalg.interface', None, module_type_store, ['aslinearoperator', 'LinearOperator'], [aslinearoperator, LinearOperator])

else:
    # Assigning a type to the variable 'scipy.sparse.linalg.interface' (line 47)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 47, 0), 'scipy.sparse.linalg.interface', import_396051)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 48, 0))

# 'from scipy.sparse import eye, isspmatrix, isspmatrix_csr' statement (line 48)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')
import_396053 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 48, 0), 'scipy.sparse')

if (type(import_396053) is not StypyTypeError):

    if (import_396053 != 'pyd_module'):
        __import__(import_396053)
        sys_modules_396054 = sys.modules[import_396053]
        import_from_module(stypy.reporting.localization.Localization(__file__, 48, 0), 'scipy.sparse', sys_modules_396054.module_type_store, module_type_store, ['eye', 'isspmatrix', 'isspmatrix_csr'])
        nest_module(stypy.reporting.localization.Localization(__file__, 48, 0), __file__, sys_modules_396054, sys_modules_396054.module_type_store, module_type_store)
    else:
        from scipy.sparse import eye, isspmatrix, isspmatrix_csr

        import_from_module(stypy.reporting.localization.Localization(__file__, 48, 0), 'scipy.sparse', None, module_type_store, ['eye', 'isspmatrix', 'isspmatrix_csr'], [eye, isspmatrix, isspmatrix_csr])

else:
    # Assigning a type to the variable 'scipy.sparse' (line 48)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 48, 0), 'scipy.sparse', import_396053)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 49, 0))

# 'from scipy.linalg import lu_factor, lu_solve' statement (line 49)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')
import_396055 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 49, 0), 'scipy.linalg')

if (type(import_396055) is not StypyTypeError):

    if (import_396055 != 'pyd_module'):
        __import__(import_396055)
        sys_modules_396056 = sys.modules[import_396055]
        import_from_module(stypy.reporting.localization.Localization(__file__, 49, 0), 'scipy.linalg', sys_modules_396056.module_type_store, module_type_store, ['lu_factor', 'lu_solve'])
        nest_module(stypy.reporting.localization.Localization(__file__, 49, 0), __file__, sys_modules_396056, sys_modules_396056.module_type_store, module_type_store)
    else:
        from scipy.linalg import lu_factor, lu_solve

        import_from_module(stypy.reporting.localization.Localization(__file__, 49, 0), 'scipy.linalg', None, module_type_store, ['lu_factor', 'lu_solve'], [lu_factor, lu_solve])

else:
    # Assigning a type to the variable 'scipy.linalg' (line 49)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 49, 0), 'scipy.linalg', import_396055)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 50, 0))

# 'from scipy.sparse.sputils import isdense' statement (line 50)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')
import_396057 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 50, 0), 'scipy.sparse.sputils')

if (type(import_396057) is not StypyTypeError):

    if (import_396057 != 'pyd_module'):
        __import__(import_396057)
        sys_modules_396058 = sys.modules[import_396057]
        import_from_module(stypy.reporting.localization.Localization(__file__, 50, 0), 'scipy.sparse.sputils', sys_modules_396058.module_type_store, module_type_store, ['isdense'])
        nest_module(stypy.reporting.localization.Localization(__file__, 50, 0), __file__, sys_modules_396058, sys_modules_396058.module_type_store, module_type_store)
    else:
        from scipy.sparse.sputils import isdense

        import_from_module(stypy.reporting.localization.Localization(__file__, 50, 0), 'scipy.sparse.sputils', None, module_type_store, ['isdense'], [isdense])

else:
    # Assigning a type to the variable 'scipy.sparse.sputils' (line 50)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 0), 'scipy.sparse.sputils', import_396057)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 51, 0))

# 'from scipy.sparse.linalg import gmres, splu' statement (line 51)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')
import_396059 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 51, 0), 'scipy.sparse.linalg')

if (type(import_396059) is not StypyTypeError):

    if (import_396059 != 'pyd_module'):
        __import__(import_396059)
        sys_modules_396060 = sys.modules[import_396059]
        import_from_module(stypy.reporting.localization.Localization(__file__, 51, 0), 'scipy.sparse.linalg', sys_modules_396060.module_type_store, module_type_store, ['gmres', 'splu'])
        nest_module(stypy.reporting.localization.Localization(__file__, 51, 0), __file__, sys_modules_396060, sys_modules_396060.module_type_store, module_type_store)
    else:
        from scipy.sparse.linalg import gmres, splu

        import_from_module(stypy.reporting.localization.Localization(__file__, 51, 0), 'scipy.sparse.linalg', None, module_type_store, ['gmres', 'splu'], [gmres, splu])

else:
    # Assigning a type to the variable 'scipy.sparse.linalg' (line 51)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 0), 'scipy.sparse.linalg', import_396059)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 52, 0))

# 'from scipy._lib._util import _aligned_zeros' statement (line 52)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')
import_396061 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 52, 0), 'scipy._lib._util')

if (type(import_396061) is not StypyTypeError):

    if (import_396061 != 'pyd_module'):
        __import__(import_396061)
        sys_modules_396062 = sys.modules[import_396061]
        import_from_module(stypy.reporting.localization.Localization(__file__, 52, 0), 'scipy._lib._util', sys_modules_396062.module_type_store, module_type_store, ['_aligned_zeros'])
        nest_module(stypy.reporting.localization.Localization(__file__, 52, 0), __file__, sys_modules_396062, sys_modules_396062.module_type_store, module_type_store)
    else:
        from scipy._lib._util import _aligned_zeros

        import_from_module(stypy.reporting.localization.Localization(__file__, 52, 0), 'scipy._lib._util', None, module_type_store, ['_aligned_zeros'], [_aligned_zeros])

else:
    # Assigning a type to the variable 'scipy._lib._util' (line 52)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 52, 0), 'scipy._lib._util', import_396061)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 53, 0))

# 'from scipy._lib._threadsafety import ReentrancyLock' statement (line 53)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')
import_396063 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 53, 0), 'scipy._lib._threadsafety')

if (type(import_396063) is not StypyTypeError):

    if (import_396063 != 'pyd_module'):
        __import__(import_396063)
        sys_modules_396064 = sys.modules[import_396063]
        import_from_module(stypy.reporting.localization.Localization(__file__, 53, 0), 'scipy._lib._threadsafety', sys_modules_396064.module_type_store, module_type_store, ['ReentrancyLock'])
        nest_module(stypy.reporting.localization.Localization(__file__, 53, 0), __file__, sys_modules_396064, sys_modules_396064.module_type_store, module_type_store)
    else:
        from scipy._lib._threadsafety import ReentrancyLock

        import_from_module(stypy.reporting.localization.Localization(__file__, 53, 0), 'scipy._lib._threadsafety', None, module_type_store, ['ReentrancyLock'], [ReentrancyLock])

else:
    # Assigning a type to the variable 'scipy._lib._threadsafety' (line 53)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 53, 0), 'scipy._lib._threadsafety', import_396063)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/sparse/linalg/eigen/arpack/')


# Assigning a Dict to a Name (line 56):

# Assigning a Dict to a Name (line 56):

# Obtaining an instance of the builtin type 'dict' (line 56)
dict_396065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 13), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 56)
# Adding element type (key, value) (line 56)
str_396066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 14), 'str', 'f')
str_396067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 19), 'str', 's')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 56, 13), dict_396065, (str_396066, str_396067))
# Adding element type (key, value) (line 56)
str_396068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 24), 'str', 'd')
str_396069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 29), 'str', 'd')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 56, 13), dict_396065, (str_396068, str_396069))
# Adding element type (key, value) (line 56)
str_396070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 34), 'str', 'F')
str_396071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 39), 'str', 'c')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 56, 13), dict_396065, (str_396070, str_396071))
# Adding element type (key, value) (line 56)
str_396072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 44), 'str', 'D')
str_396073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 56, 49), 'str', 'z')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 56, 13), dict_396065, (str_396072, str_396073))

# Assigning a type to the variable '_type_conv' (line 56)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 56, 0), '_type_conv', dict_396065)

# Assigning a Dict to a Name (line 57):

# Assigning a Dict to a Name (line 57):

# Obtaining an instance of the builtin type 'dict' (line 57)
dict_396074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 11), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 57)
# Adding element type (key, value) (line 57)
str_396075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 12), 'str', 'f')
int_396076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 17), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 57, 11), dict_396074, (str_396075, int_396076))
# Adding element type (key, value) (line 57)
str_396077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 20), 'str', 'd')
int_396078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 25), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 57, 11), dict_396074, (str_396077, int_396078))
# Adding element type (key, value) (line 57)
str_396079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 29), 'str', 'F')
int_396080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 34), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 57, 11), dict_396074, (str_396079, int_396080))
# Adding element type (key, value) (line 57)
str_396081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 37), 'str', 'D')
int_396082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 42), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 57, 11), dict_396074, (str_396081, int_396082))

# Assigning a type to the variable '_ndigits' (line 57)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 57, 0), '_ndigits', dict_396074)

# Assigning a Dict to a Name (line 59):

# Assigning a Dict to a Name (line 59):

# Obtaining an instance of the builtin type 'dict' (line 59)
dict_396083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 59)
# Adding element type (key, value) (line 59)
int_396084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 60, 4), 'int')
str_396085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 60, 7), 'str', 'Normal exit.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396084, str_396085))
# Adding element type (key, value) (line 59)
int_396086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 4), 'int')
str_396087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 7), 'str', 'Maximum number of iterations taken. All possible eigenvalues of OP has been found. IPARAM(5) returns the number of wanted converged Ritz values.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396086, str_396087))
# Adding element type (key, value) (line 59)
int_396088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 64, 4), 'int')
str_396089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 64, 7), 'str', 'No longer an informational error. Deprecated starting with release 2 of ARPACK.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396088, str_396089))
# Adding element type (key, value) (line 59)
int_396090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 4), 'int')
str_396091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 7), 'str', 'No shifts could be applied during a cycle of the Implicitly restarted Arnoldi iteration. One possibility is to increase the size of NCV relative to NEV. ')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396090, str_396091))
# Adding element type (key, value) (line 59)
int_396092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 69, 4), 'int')
str_396093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 69, 8), 'str', 'N must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396092, str_396093))
# Adding element type (key, value) (line 59)
int_396094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, 4), 'int')
str_396095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, 8), 'str', 'NEV must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396094, str_396095))
# Adding element type (key, value) (line 59)
int_396096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 71, 4), 'int')
str_396097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 71, 8), 'str', 'NCV-NEV >= 2 and less than or equal to N.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396096, str_396097))
# Adding element type (key, value) (line 59)
int_396098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 72, 4), 'int')
str_396099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 72, 8), 'str', 'The maximum number of Arnoldi update iterations allowed must be greater than zero.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396098, str_396099))
# Adding element type (key, value) (line 59)
int_396100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 74, 4), 'int')
str_396101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 74, 8), 'str', " WHICH must be one of 'LM', 'SM', 'LR', 'SR', 'LI', 'SI'")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396100, str_396101))
# Adding element type (key, value) (line 59)
int_396102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 4), 'int')
str_396103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 8), 'str', "BMAT must be one of 'I' or 'G'.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396102, str_396103))
# Adding element type (key, value) (line 59)
int_396104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 76, 4), 'int')
str_396105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 76, 8), 'str', 'Length of private work array WORKL is not sufficient.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396104, str_396105))
# Adding element type (key, value) (line 59)
int_396106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 4), 'int')
str_396107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 8), 'str', 'Error return from LAPACK eigenvalue calculation;')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396106, str_396107))
# Adding element type (key, value) (line 59)
int_396108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 78, 4), 'int')
str_396109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 78, 8), 'str', 'Starting vector is zero.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396108, str_396109))
# Adding element type (key, value) (line 59)
int_396110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 79, 4), 'int')
str_396111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 79, 9), 'str', 'IPARAM(7) must be 1,2,3,4.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396110, str_396111))
# Adding element type (key, value) (line 59)
int_396112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 4), 'int')
str_396113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 9), 'str', "IPARAM(7) = 1 and BMAT = 'G' are incompatible.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396112, str_396113))
# Adding element type (key, value) (line 59)
int_396114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 4), 'int')
str_396115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 9), 'str', 'IPARAM(1) must be equal to 0 or 1.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396114, str_396115))
# Adding element type (key, value) (line 59)
int_396116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 82, 4), 'int')
str_396117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 82, 9), 'str', "NEV and WHICH = 'BE' are incompatible.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396116, str_396117))
# Adding element type (key, value) (line 59)
int_396118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, 4), 'int')
str_396119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, 11), 'str', 'Could not build an Arnoldi factorization. IPARAM(5) returns the size of the current Arnoldi factorization. The user is advised to check that enough workspace and array storage has been allocated.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 16), dict_396083, (int_396118, str_396119))

# Assigning a type to the variable 'DNAUPD_ERRORS' (line 59)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 59, 0), 'DNAUPD_ERRORS', dict_396083)

# Assigning a Name to a Name (line 89):

# Assigning a Name to a Name (line 89):
# Getting the type of 'DNAUPD_ERRORS' (line 89)
DNAUPD_ERRORS_396120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 16), 'DNAUPD_ERRORS')
# Assigning a type to the variable 'SNAUPD_ERRORS' (line 89)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 0), 'SNAUPD_ERRORS', DNAUPD_ERRORS_396120)

# Assigning a Call to a Name (line 91):

# Assigning a Call to a Name (line 91):

# Call to copy(...): (line 91)
# Processing the call keyword arguments (line 91)
kwargs_396123 = {}
# Getting the type of 'DNAUPD_ERRORS' (line 91)
DNAUPD_ERRORS_396121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 16), 'DNAUPD_ERRORS', False)
# Obtaining the member 'copy' of a type (line 91)
copy_396122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 91, 16), DNAUPD_ERRORS_396121, 'copy')
# Calling copy(args, kwargs) (line 91)
copy_call_result_396124 = invoke(stypy.reporting.localization.Localization(__file__, 91, 16), copy_396122, *[], **kwargs_396123)

# Assigning a type to the variable 'ZNAUPD_ERRORS' (line 91)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 0), 'ZNAUPD_ERRORS', copy_call_result_396124)

# Assigning a Str to a Subscript (line 92):

# Assigning a Str to a Subscript (line 92):
str_396125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 21), 'str', 'IPARAM(7) must be 1,2,3.')
# Getting the type of 'ZNAUPD_ERRORS' (line 92)
ZNAUPD_ERRORS_396126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 0), 'ZNAUPD_ERRORS')
int_396127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 14), 'int')
# Storing an element on a container (line 92)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 92, 0), ZNAUPD_ERRORS_396126, (int_396127, str_396125))

# Assigning a Name to a Name (line 94):

# Assigning a Name to a Name (line 94):
# Getting the type of 'ZNAUPD_ERRORS' (line 94)
ZNAUPD_ERRORS_396128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 16), 'ZNAUPD_ERRORS')
# Assigning a type to the variable 'CNAUPD_ERRORS' (line 94)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 94, 0), 'CNAUPD_ERRORS', ZNAUPD_ERRORS_396128)

# Assigning a Dict to a Name (line 96):

# Assigning a Dict to a Name (line 96):

# Obtaining an instance of the builtin type 'dict' (line 96)
dict_396129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 96)
# Adding element type (key, value) (line 96)
int_396130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 4), 'int')
str_396131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 7), 'str', 'Normal exit.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396130, str_396131))
# Adding element type (key, value) (line 96)
int_396132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 4), 'int')
str_396133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 7), 'str', 'Maximum number of iterations taken. All possible eigenvalues of OP has been found.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396132, str_396133))
# Adding element type (key, value) (line 96)
int_396134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 100, 4), 'int')
str_396135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 100, 7), 'str', 'No longer an informational error. Deprecated starting with release 2 of ARPACK.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396134, str_396135))
# Adding element type (key, value) (line 96)
int_396136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 4), 'int')
str_396137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 7), 'str', 'No shifts could be applied during a cycle of the Implicitly restarted Arnoldi iteration. One possibility is to increase the size of NCV relative to NEV. ')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396136, str_396137))
# Adding element type (key, value) (line 96)
int_396138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 4), 'int')
str_396139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 8), 'str', 'N must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396138, str_396139))
# Adding element type (key, value) (line 96)
int_396140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 4), 'int')
str_396141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 8), 'str', 'NEV must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396140, str_396141))
# Adding element type (key, value) (line 96)
int_396142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 4), 'int')
str_396143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 8), 'str', 'NCV must be greater than NEV and less than or equal to N.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396142, str_396143))
# Adding element type (key, value) (line 96)
int_396144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 4), 'int')
str_396145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 8), 'str', 'The maximum number of Arnoldi update iterations allowed must be greater than zero.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396144, str_396145))
# Adding element type (key, value) (line 96)
int_396146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 4), 'int')
str_396147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 8), 'str', "WHICH must be one of 'LM', 'SM', 'LA', 'SA' or 'BE'.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396146, str_396147))
# Adding element type (key, value) (line 96)
int_396148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 4), 'int')
str_396149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 8), 'str', "BMAT must be one of 'I' or 'G'.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396148, str_396149))
# Adding element type (key, value) (line 96)
int_396150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 4), 'int')
str_396151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 8), 'str', 'Length of private work array WORKL is not sufficient.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396150, str_396151))
# Adding element type (key, value) (line 96)
int_396152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 4), 'int')
str_396153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 8), 'str', 'Error return from trid. eigenvalue calculation; Informational error from LAPACK routine dsteqr .')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396152, str_396153))
# Adding element type (key, value) (line 96)
int_396154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 4), 'int')
str_396155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 8), 'str', 'Starting vector is zero.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396154, str_396155))
# Adding element type (key, value) (line 96)
int_396156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 4), 'int')
str_396157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 9), 'str', 'IPARAM(7) must be 1,2,3,4,5.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396156, str_396157))
# Adding element type (key, value) (line 96)
int_396158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 4), 'int')
str_396159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 9), 'str', "IPARAM(7) = 1 and BMAT = 'G' are incompatible.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396158, str_396159))
# Adding element type (key, value) (line 96)
int_396160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 4), 'int')
str_396161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 9), 'str', 'IPARAM(1) must be equal to 0 or 1.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396160, str_396161))
# Adding element type (key, value) (line 96)
int_396162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 4), 'int')
str_396163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 9), 'str', "NEV and WHICH = 'BE' are incompatible. ")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396162, str_396163))
# Adding element type (key, value) (line 96)
int_396164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 4), 'int')
str_396165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 11), 'str', 'Could not build an Arnoldi factorization. IPARAM(5) returns the size of the current Arnoldi factorization. The user is advised to check that enough workspace and array storage has been allocated.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 16), dict_396129, (int_396164, str_396165))

# Assigning a type to the variable 'DSAUPD_ERRORS' (line 96)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 0), 'DSAUPD_ERRORS', dict_396129)

# Assigning a Name to a Name (line 126):

# Assigning a Name to a Name (line 126):
# Getting the type of 'DSAUPD_ERRORS' (line 126)
DSAUPD_ERRORS_396166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 16), 'DSAUPD_ERRORS')
# Assigning a type to the variable 'SSAUPD_ERRORS' (line 126)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 126, 0), 'SSAUPD_ERRORS', DSAUPD_ERRORS_396166)

# Assigning a Dict to a Name (line 128):

# Assigning a Dict to a Name (line 128):

# Obtaining an instance of the builtin type 'dict' (line 128)
dict_396167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 128)
# Adding element type (key, value) (line 128)
int_396168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 4), 'int')
str_396169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 7), 'str', 'Normal exit.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396168, str_396169))
# Adding element type (key, value) (line 128)
int_396170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 4), 'int')
str_396171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 7), 'str', 'The Schur form computed by LAPACK routine dlahqr could not be reordered by LAPACK routine dtrsen. Re-enter subroutine dneupd  with IPARAM(5)NCV and increase the size of the arrays DR and DI to have dimension at least dimension NCV and allocate at least NCV columns for Z. NOTE: Not necessary if Z and V share the same space. Please notify the authors if this erroroccurs.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396170, str_396171))
# Adding element type (key, value) (line 128)
int_396172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 4), 'int')
str_396173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 8), 'str', 'N must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396172, str_396173))
# Adding element type (key, value) (line 128)
int_396174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 4), 'int')
str_396175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 8), 'str', 'NEV must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396174, str_396175))
# Adding element type (key, value) (line 128)
int_396176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 4), 'int')
str_396177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 8), 'str', 'NCV-NEV >= 2 and less than or equal to N.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396176, str_396177))
# Adding element type (key, value) (line 128)
int_396178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 4), 'int')
str_396179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 8), 'str', "WHICH must be one of 'LM', 'SM', 'LR', 'SR', 'LI', 'SI'")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396178, str_396179))
# Adding element type (key, value) (line 128)
int_396180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 4), 'int')
str_396181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 8), 'str', "BMAT must be one of 'I' or 'G'.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396180, str_396181))
# Adding element type (key, value) (line 128)
int_396182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 4), 'int')
str_396183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 8), 'str', 'Length of private work WORKL array is not sufficient.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396182, str_396183))
# Adding element type (key, value) (line 128)
int_396184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 4), 'int')
str_396185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 8), 'str', 'Error return from calculation of a real Schur form. Informational error from LAPACK routine dlahqr .')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396184, str_396185))
# Adding element type (key, value) (line 128)
int_396186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 4), 'int')
str_396187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 8), 'str', 'Error return from calculation of eigenvectors. Informational error from LAPACK routine dtrevc.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396186, str_396187))
# Adding element type (key, value) (line 128)
int_396188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 4), 'int')
str_396189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 9), 'str', 'IPARAM(7) must be 1,2,3,4.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396188, str_396189))
# Adding element type (key, value) (line 128)
int_396190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 4), 'int')
str_396191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 9), 'str', "IPARAM(7) = 1 and BMAT = 'G' are incompatible.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396190, str_396191))
# Adding element type (key, value) (line 128)
int_396192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 4), 'int')
str_396193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 9), 'str', "HOWMNY = 'S' not yet implemented")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396192, str_396193))
# Adding element type (key, value) (line 128)
int_396194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 4), 'int')
str_396195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 9), 'str', "HOWMNY must be one of 'A' or 'P' if RVEC = .true.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396194, str_396195))
# Adding element type (key, value) (line 128)
int_396196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 152, 4), 'int')
str_396197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 152, 9), 'str', 'DNAUPD  did not find any eigenvalues to sufficient accuracy.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396196, str_396197))
# Adding element type (key, value) (line 128)
int_396198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 4), 'int')
str_396199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 9), 'str', 'DNEUPD got a different count of the number of converged Ritz values than DNAUPD got.  This indicates the user probably made an error in passing data from DNAUPD to DNEUPD or that the data was modified before entering DNEUPD')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 16), dict_396167, (int_396198, str_396199))

# Assigning a type to the variable 'DNEUPD_ERRORS' (line 128)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 0), 'DNEUPD_ERRORS', dict_396167)

# Assigning a Call to a Name (line 161):

# Assigning a Call to a Name (line 161):

# Call to copy(...): (line 161)
# Processing the call keyword arguments (line 161)
kwargs_396202 = {}
# Getting the type of 'DNEUPD_ERRORS' (line 161)
DNEUPD_ERRORS_396200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 16), 'DNEUPD_ERRORS', False)
# Obtaining the member 'copy' of a type (line 161)
copy_396201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 161, 16), DNEUPD_ERRORS_396200, 'copy')
# Calling copy(args, kwargs) (line 161)
copy_call_result_396203 = invoke(stypy.reporting.localization.Localization(__file__, 161, 16), copy_396201, *[], **kwargs_396202)

# Assigning a type to the variable 'SNEUPD_ERRORS' (line 161)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 161, 0), 'SNEUPD_ERRORS', copy_call_result_396203)

# Assigning a Str to a Subscript (line 162):

# Assigning a Str to a Subscript (line 162):
str_396204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 20), 'str', 'The Schur form computed by LAPACK routine slahqr could not be reordered by LAPACK routine strsen . Re-enter subroutine dneupd  with IPARAM(5)=NCV and increase the size of the arrays DR and DI to have dimension at least dimension NCV and allocate at least NCV columns for Z. NOTE: Not necessary if Z and V share the same space. Please notify the authors if this error occurs.')
# Getting the type of 'SNEUPD_ERRORS' (line 162)
SNEUPD_ERRORS_396205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 0), 'SNEUPD_ERRORS')
int_396206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 14), 'int')
# Storing an element on a container (line 162)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 0), SNEUPD_ERRORS_396205, (int_396206, str_396204))

# Assigning a Str to a Subscript (line 170):

# Assigning a Str to a Subscript (line 170):
str_396207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 22), 'str', 'SNAUPD did not find any eigenvalues to sufficient accuracy.')
# Getting the type of 'SNEUPD_ERRORS' (line 170)
SNEUPD_ERRORS_396208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 0), 'SNEUPD_ERRORS')
int_396209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 14), 'int')
# Storing an element on a container (line 170)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 170, 0), SNEUPD_ERRORS_396208, (int_396209, str_396207))

# Assigning a Str to a Subscript (line 172):

# Assigning a Str to a Subscript (line 172):
str_396210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 22), 'str', 'SNEUPD got a different count of the number of converged Ritz values than SNAUPD got.  This indicates the user probably made an error in passing data from SNAUPD to SNEUPD or that the data was modified before entering SNEUPD')
# Getting the type of 'SNEUPD_ERRORS' (line 172)
SNEUPD_ERRORS_396211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 0), 'SNEUPD_ERRORS')
int_396212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 14), 'int')
# Storing an element on a container (line 172)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 172, 0), SNEUPD_ERRORS_396211, (int_396212, str_396210))

# Assigning a Dict to a Name (line 178):

# Assigning a Dict to a Name (line 178):

# Obtaining an instance of the builtin type 'dict' (line 178)
dict_396213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 178, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 178)
# Adding element type (key, value) (line 178)
int_396214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 178, 17), 'int')
str_396215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 178, 20), 'str', 'Normal exit.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396214, str_396215))
# Adding element type (key, value) (line 178)
int_396216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 17), 'int')
str_396217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 20), 'str', 'The Schur form computed by LAPACK routine csheqr could not be reordered by LAPACK routine ztrsen. Re-enter subroutine zneupd with IPARAM(5)=NCV and increase the size of the array D to have dimension at least dimension NCV and allocate at least NCV columns for Z. NOTE: Not necessary if Z and V share the same space. Please notify the authors if this error occurs.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396216, str_396217))
# Adding element type (key, value) (line 178)
int_396218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 17), 'int')
str_396219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 21), 'str', 'N must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396218, str_396219))
# Adding element type (key, value) (line 178)
int_396220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 17), 'int')
str_396221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 21), 'str', 'NEV must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396220, str_396221))
# Adding element type (key, value) (line 178)
int_396222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 17), 'int')
str_396223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 21), 'str', 'NCV-NEV >= 1 and less than or equal to N.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396222, str_396223))
# Adding element type (key, value) (line 178)
int_396224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 17), 'int')
str_396225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 21), 'str', "WHICH must be one of 'LM', 'SM', 'LR', 'SR', 'LI', 'SI'")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396224, str_396225))
# Adding element type (key, value) (line 178)
int_396226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 17), 'int')
str_396227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 21), 'str', "BMAT must be one of 'I' or 'G'.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396226, str_396227))
# Adding element type (key, value) (line 178)
int_396228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 17), 'int')
str_396229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 21), 'str', 'Length of private work WORKL array is not sufficient.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396228, str_396229))
# Adding element type (key, value) (line 178)
int_396230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 17), 'int')
str_396231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 21), 'str', 'Error return from LAPACK eigenvalue calculation. This should never happened.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396230, str_396231))
# Adding element type (key, value) (line 178)
int_396232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 17), 'int')
str_396233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 21), 'str', 'Error return from calculation of eigenvectors. Informational error from LAPACK routine ztrevc.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396232, str_396233))
# Adding element type (key, value) (line 178)
int_396234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 17), 'int')
str_396235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 22), 'str', 'IPARAM(7) must be 1,2,3')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396234, str_396235))
# Adding element type (key, value) (line 178)
int_396236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 17), 'int')
str_396237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 22), 'str', "IPARAM(7) = 1 and BMAT = 'G' are incompatible.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396236, str_396237))
# Adding element type (key, value) (line 178)
int_396238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 199, 17), 'int')
str_396239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 199, 22), 'str', "HOWMNY = 'S' not yet implemented")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396238, str_396239))
# Adding element type (key, value) (line 178)
int_396240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 200, 17), 'int')
str_396241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 200, 22), 'str', "HOWMNY must be one of 'A' or 'P' if RVEC = .true.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396240, str_396241))
# Adding element type (key, value) (line 178)
int_396242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 17), 'int')
str_396243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 22), 'str', 'ZNAUPD did not find any eigenvalues to sufficient accuracy.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396242, str_396243))
# Adding element type (key, value) (line 178)
int_396244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 17), 'int')
str_396245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 22), 'str', 'ZNEUPD got a different count of the number of converged Ritz values than ZNAUPD got.  This indicates the user probably made an error in passing data from ZNAUPD to ZNEUPD or that the data was modified before entering ZNEUPD')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 178, 16), dict_396213, (int_396244, str_396245))

# Assigning a type to the variable 'ZNEUPD_ERRORS' (line 178)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 0), 'ZNEUPD_ERRORS', dict_396213)

# Assigning a Call to a Name (line 210):

# Assigning a Call to a Name (line 210):

# Call to copy(...): (line 210)
# Processing the call keyword arguments (line 210)
kwargs_396248 = {}
# Getting the type of 'ZNEUPD_ERRORS' (line 210)
ZNEUPD_ERRORS_396246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 16), 'ZNEUPD_ERRORS', False)
# Obtaining the member 'copy' of a type (line 210)
copy_396247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 16), ZNEUPD_ERRORS_396246, 'copy')
# Calling copy(args, kwargs) (line 210)
copy_call_result_396249 = invoke(stypy.reporting.localization.Localization(__file__, 210, 16), copy_396247, *[], **kwargs_396248)

# Assigning a type to the variable 'CNEUPD_ERRORS' (line 210)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 0), 'CNEUPD_ERRORS', copy_call_result_396249)

# Assigning a Str to a Subscript (line 211):

# Assigning a Str to a Subscript (line 211):
str_396250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 22), 'str', 'CNAUPD did not find any eigenvalues to sufficient accuracy.')
# Getting the type of 'CNEUPD_ERRORS' (line 211)
CNEUPD_ERRORS_396251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 0), 'CNEUPD_ERRORS')
int_396252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 14), 'int')
# Storing an element on a container (line 211)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 0), CNEUPD_ERRORS_396251, (int_396252, str_396250))

# Assigning a Str to a Subscript (line 213):

# Assigning a Str to a Subscript (line 213):
str_396253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 22), 'str', 'CNEUPD got a different count of the number of converged Ritz values than CNAUPD got.  This indicates the user probably made an error in passing data from CNAUPD to CNEUPD or that the data was modified before entering CNEUPD')
# Getting the type of 'CNEUPD_ERRORS' (line 213)
CNEUPD_ERRORS_396254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 0), 'CNEUPD_ERRORS')
int_396255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 14), 'int')
# Storing an element on a container (line 213)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 0), CNEUPD_ERRORS_396254, (int_396255, str_396253))

# Assigning a Dict to a Name (line 219):

# Assigning a Dict to a Name (line 219):

# Obtaining an instance of the builtin type 'dict' (line 219)
dict_396256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 219)
# Adding element type (key, value) (line 219)
int_396257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 4), 'int')
str_396258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 7), 'str', 'Normal exit.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396257, str_396258))
# Adding element type (key, value) (line 219)
int_396259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 4), 'int')
str_396260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 8), 'str', 'N must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396259, str_396260))
# Adding element type (key, value) (line 219)
int_396261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 4), 'int')
str_396262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 8), 'str', 'NEV must be positive.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396261, str_396262))
# Adding element type (key, value) (line 219)
int_396263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 4), 'int')
str_396264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 8), 'str', 'NCV must be greater than NEV and less than or equal to N.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396263, str_396264))
# Adding element type (key, value) (line 219)
int_396265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 4), 'int')
str_396266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 8), 'str', "WHICH must be one of 'LM', 'SM', 'LA', 'SA' or 'BE'.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396265, str_396266))
# Adding element type (key, value) (line 219)
int_396267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 4), 'int')
str_396268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 8), 'str', "BMAT must be one of 'I' or 'G'.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396267, str_396268))
# Adding element type (key, value) (line 219)
int_396269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 4), 'int')
str_396270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 8), 'str', 'Length of private work WORKL array is not sufficient.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396269, str_396270))
# Adding element type (key, value) (line 219)
int_396271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 4), 'int')
str_396272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 9), 'str', 'Error return from trid. eigenvalue calculation; Information error from LAPACK routine dsteqr.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396271, str_396272))
# Adding element type (key, value) (line 219)
int_396273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 4), 'int')
str_396274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 8), 'str', 'Starting vector is zero.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396273, str_396274))
# Adding element type (key, value) (line 219)
int_396275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 4), 'int')
str_396276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 9), 'str', 'IPARAM(7) must be 1,2,3,4,5.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396275, str_396276))
# Adding element type (key, value) (line 219)
int_396277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 4), 'int')
str_396278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 9), 'str', "IPARAM(7) = 1 and BMAT = 'G' are incompatible.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396277, str_396278))
# Adding element type (key, value) (line 219)
int_396279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 4), 'int')
str_396280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 9), 'str', "NEV and WHICH = 'BE' are incompatible.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396279, str_396280))
# Adding element type (key, value) (line 219)
int_396281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 4), 'int')
str_396282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 9), 'str', 'DSAUPD  did not find any eigenvalues to sufficient accuracy.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396281, str_396282))
# Adding element type (key, value) (line 219)
int_396283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 4), 'int')
str_396284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 9), 'str', "HOWMNY must be one of 'A' or 'S' if RVEC = .true.")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396283, str_396284))
# Adding element type (key, value) (line 219)
int_396285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 4), 'int')
str_396286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 9), 'str', "HOWMNY = 'S' not yet implemented")
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396285, str_396286))
# Adding element type (key, value) (line 219)
int_396287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 4), 'int')
str_396288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 10), 'str', 'DSEUPD  got a different count of the number of converged Ritz values than DSAUPD  got.  This indicates the user probably made an error in passing data from DSAUPD  to DSEUPD  or that the data was modified before entering  DSEUPD.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 16), dict_396256, (int_396287, str_396288))

# Assigning a type to the variable 'DSEUPD_ERRORS' (line 219)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 0), 'DSEUPD_ERRORS', dict_396256)

# Assigning a Call to a Name (line 243):

# Assigning a Call to a Name (line 243):

# Call to copy(...): (line 243)
# Processing the call keyword arguments (line 243)
kwargs_396291 = {}
# Getting the type of 'DSEUPD_ERRORS' (line 243)
DSEUPD_ERRORS_396289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 16), 'DSEUPD_ERRORS', False)
# Obtaining the member 'copy' of a type (line 243)
copy_396290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 243, 16), DSEUPD_ERRORS_396289, 'copy')
# Calling copy(args, kwargs) (line 243)
copy_call_result_396292 = invoke(stypy.reporting.localization.Localization(__file__, 243, 16), copy_396290, *[], **kwargs_396291)

# Assigning a type to the variable 'SSEUPD_ERRORS' (line 243)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 243, 0), 'SSEUPD_ERRORS', copy_call_result_396292)

# Assigning a Str to a Subscript (line 244):

# Assigning a Str to a Subscript (line 244):
str_396293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 22), 'str', 'SSAUPD  did not find any eigenvalues to sufficient accuracy.')
# Getting the type of 'SSEUPD_ERRORS' (line 244)
SSEUPD_ERRORS_396294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 0), 'SSEUPD_ERRORS')
int_396295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 14), 'int')
# Storing an element on a container (line 244)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 244, 0), SSEUPD_ERRORS_396294, (int_396295, str_396293))

# Assigning a Str to a Subscript (line 246):

# Assigning a Str to a Subscript (line 246):
str_396296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 22), 'str', 'SSEUPD  got a different count of the number of converged Ritz values than SSAUPD  got.  This indicates the user probably made an error in passing data from SSAUPD  to SSEUPD  or that the data was modified before entering  SSEUPD.')
# Getting the type of 'SSEUPD_ERRORS' (line 246)
SSEUPD_ERRORS_396297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 0), 'SSEUPD_ERRORS')
int_396298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 14), 'int')
# Storing an element on a container (line 246)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 0), SSEUPD_ERRORS_396297, (int_396298, str_396296))

# Assigning a Dict to a Name (line 253):

# Assigning a Dict to a Name (line 253):

# Obtaining an instance of the builtin type 'dict' (line 253)
dict_396299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 253)
# Adding element type (key, value) (line 253)
str_396300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 17), 'str', 'd')
# Getting the type of 'DSAUPD_ERRORS' (line 253)
DSAUPD_ERRORS_396301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 22), 'DSAUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 253, 16), dict_396299, (str_396300, DSAUPD_ERRORS_396301))
# Adding element type (key, value) (line 253)
str_396302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 17), 'str', 's')
# Getting the type of 'SSAUPD_ERRORS' (line 254)
SSAUPD_ERRORS_396303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 22), 'SSAUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 253, 16), dict_396299, (str_396302, SSAUPD_ERRORS_396303))

# Assigning a type to the variable '_SAUPD_ERRORS' (line 253)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 253, 0), '_SAUPD_ERRORS', dict_396299)

# Assigning a Dict to a Name (line 255):

# Assigning a Dict to a Name (line 255):

# Obtaining an instance of the builtin type 'dict' (line 255)
dict_396304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 255)
# Adding element type (key, value) (line 255)
str_396305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 17), 'str', 'd')
# Getting the type of 'DNAUPD_ERRORS' (line 255)
DNAUPD_ERRORS_396306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 22), 'DNAUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 16), dict_396304, (str_396305, DNAUPD_ERRORS_396306))
# Adding element type (key, value) (line 255)
str_396307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 17), 'str', 's')
# Getting the type of 'SNAUPD_ERRORS' (line 256)
SNAUPD_ERRORS_396308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 22), 'SNAUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 16), dict_396304, (str_396307, SNAUPD_ERRORS_396308))
# Adding element type (key, value) (line 255)
str_396309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 17), 'str', 'z')
# Getting the type of 'ZNAUPD_ERRORS' (line 257)
ZNAUPD_ERRORS_396310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 22), 'ZNAUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 16), dict_396304, (str_396309, ZNAUPD_ERRORS_396310))
# Adding element type (key, value) (line 255)
str_396311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 17), 'str', 'c')
# Getting the type of 'CNAUPD_ERRORS' (line 258)
CNAUPD_ERRORS_396312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 22), 'CNAUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 16), dict_396304, (str_396311, CNAUPD_ERRORS_396312))

# Assigning a type to the variable '_NAUPD_ERRORS' (line 255)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 0), '_NAUPD_ERRORS', dict_396304)

# Assigning a Dict to a Name (line 259):

# Assigning a Dict to a Name (line 259):

# Obtaining an instance of the builtin type 'dict' (line 259)
dict_396313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 259)
# Adding element type (key, value) (line 259)
str_396314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 17), 'str', 'd')
# Getting the type of 'DSEUPD_ERRORS' (line 259)
DSEUPD_ERRORS_396315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 22), 'DSEUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 16), dict_396313, (str_396314, DSEUPD_ERRORS_396315))
# Adding element type (key, value) (line 259)
str_396316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 17), 'str', 's')
# Getting the type of 'SSEUPD_ERRORS' (line 260)
SSEUPD_ERRORS_396317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 22), 'SSEUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 16), dict_396313, (str_396316, SSEUPD_ERRORS_396317))

# Assigning a type to the variable '_SEUPD_ERRORS' (line 259)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 0), '_SEUPD_ERRORS', dict_396313)

# Assigning a Dict to a Name (line 261):

# Assigning a Dict to a Name (line 261):

# Obtaining an instance of the builtin type 'dict' (line 261)
dict_396318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 261)
# Adding element type (key, value) (line 261)
str_396319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 17), 'str', 'd')
# Getting the type of 'DNEUPD_ERRORS' (line 261)
DNEUPD_ERRORS_396320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 22), 'DNEUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 16), dict_396318, (str_396319, DNEUPD_ERRORS_396320))
# Adding element type (key, value) (line 261)
str_396321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 17), 'str', 's')
# Getting the type of 'SNEUPD_ERRORS' (line 262)
SNEUPD_ERRORS_396322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 22), 'SNEUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 16), dict_396318, (str_396321, SNEUPD_ERRORS_396322))
# Adding element type (key, value) (line 261)
str_396323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 17), 'str', 'z')
# Getting the type of 'ZNEUPD_ERRORS' (line 263)
ZNEUPD_ERRORS_396324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 22), 'ZNEUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 16), dict_396318, (str_396323, ZNEUPD_ERRORS_396324))
# Adding element type (key, value) (line 261)
str_396325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 17), 'str', 'c')
# Getting the type of 'CNEUPD_ERRORS' (line 264)
CNEUPD_ERRORS_396326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 22), 'CNEUPD_ERRORS')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 16), dict_396318, (str_396325, CNEUPD_ERRORS_396326))

# Assigning a type to the variable '_NEUPD_ERRORS' (line 261)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 0), '_NEUPD_ERRORS', dict_396318)

# Assigning a List to a Name (line 267):

# Assigning a List to a Name (line 267):

# Obtaining an instance of the builtin type 'list' (line 267)
list_396327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 15), 'list')
# Adding type elements to the builtin type 'list' instance (line 267)
# Adding element type (line 267)
str_396328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 16), 'str', 'LM')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 15), list_396327, str_396328)
# Adding element type (line 267)
str_396329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 22), 'str', 'SM')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 15), list_396327, str_396329)
# Adding element type (line 267)
str_396330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 28), 'str', 'LA')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 15), list_396327, str_396330)
# Adding element type (line 267)
str_396331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 34), 'str', 'SA')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 15), list_396327, str_396331)
# Adding element type (line 267)
str_396332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 40), 'str', 'BE')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 15), list_396327, str_396332)

# Assigning a type to the variable '_SEUPD_WHICH' (line 267)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 0), '_SEUPD_WHICH', list_396327)

# Assigning a List to a Name (line 270):

# Assigning a List to a Name (line 270):

# Obtaining an instance of the builtin type 'list' (line 270)
list_396333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 15), 'list')
# Adding type elements to the builtin type 'list' instance (line 270)
# Adding element type (line 270)
str_396334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 16), 'str', 'LM')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 15), list_396333, str_396334)
# Adding element type (line 270)
str_396335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 22), 'str', 'SM')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 15), list_396333, str_396335)
# Adding element type (line 270)
str_396336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 28), 'str', 'LR')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 15), list_396333, str_396336)
# Adding element type (line 270)
str_396337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 34), 'str', 'SR')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 15), list_396333, str_396337)
# Adding element type (line 270)
str_396338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 40), 'str', 'LI')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 15), list_396333, str_396338)
# Adding element type (line 270)
str_396339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 46), 'str', 'SI')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 15), list_396333, str_396339)

# Assigning a type to the variable '_NEUPD_WHICH' (line 270)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 0), '_NEUPD_WHICH', list_396333)
# Declaration of the 'ArpackError' class
# Getting the type of 'RuntimeError' (line 273)
RuntimeError_396340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 18), 'RuntimeError')

class ArpackError(RuntimeError_396340, ):
    str_396341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, (-1)), 'str', '\n    ARPACK error\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of '_NAUPD_ERRORS' (line 277)
        _NAUPD_ERRORS_396342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 38), '_NAUPD_ERRORS')
        defaults = [_NAUPD_ERRORS_396342]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 277, 4, False)
        # Assigning a type to the variable 'self' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ArpackError.__init__', ['info', 'infodict'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['info', 'infodict'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Name (line 278):
        
        # Assigning a Call to a Name (line 278):
        
        # Call to get(...): (line 278)
        # Processing the call arguments (line 278)
        # Getting the type of 'info' (line 278)
        info_396345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 27), 'info', False)
        str_396346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 33), 'str', 'Unknown error')
        # Processing the call keyword arguments (line 278)
        kwargs_396347 = {}
        # Getting the type of 'infodict' (line 278)
        infodict_396343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 14), 'infodict', False)
        # Obtaining the member 'get' of a type (line 278)
        get_396344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 14), infodict_396343, 'get')
        # Calling get(args, kwargs) (line 278)
        get_call_result_396348 = invoke(stypy.reporting.localization.Localization(__file__, 278, 14), get_396344, *[info_396345, str_396346], **kwargs_396347)
        
        # Assigning a type to the variable 'msg' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 8), 'msg', get_call_result_396348)
        
        # Call to __init__(...): (line 279)
        # Processing the call arguments (line 279)
        # Getting the type of 'self' (line 279)
        self_396351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 30), 'self', False)
        str_396352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 36), 'str', 'ARPACK error %d: %s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 279)
        tuple_396353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 61), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 279)
        # Adding element type (line 279)
        # Getting the type of 'info' (line 279)
        info_396354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 61), 'info', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 61), tuple_396353, info_396354)
        # Adding element type (line 279)
        # Getting the type of 'msg' (line 279)
        msg_396355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 67), 'msg', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 61), tuple_396353, msg_396355)
        
        # Applying the binary operator '%' (line 279)
        result_mod_396356 = python_operator(stypy.reporting.localization.Localization(__file__, 279, 36), '%', str_396352, tuple_396353)
        
        # Processing the call keyword arguments (line 279)
        kwargs_396357 = {}
        # Getting the type of 'RuntimeError' (line 279)
        RuntimeError_396349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'RuntimeError', False)
        # Obtaining the member '__init__' of a type (line 279)
        init___396350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 8), RuntimeError_396349, '__init__')
        # Calling __init__(args, kwargs) (line 279)
        init___call_result_396358 = invoke(stypy.reporting.localization.Localization(__file__, 279, 8), init___396350, *[self_396351, result_mod_396356], **kwargs_396357)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'ArpackError' (line 273)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 273, 0), 'ArpackError', ArpackError)
# Declaration of the 'ArpackNoConvergence' class
# Getting the type of 'ArpackError' (line 282)
ArpackError_396359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 26), 'ArpackError')

class ArpackNoConvergence(ArpackError_396359, ):
    str_396360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, (-1)), 'str', '\n    ARPACK iteration did not converge\n\n    Attributes\n    ----------\n    eigenvalues : ndarray\n        Partial result. Converged eigenvalues.\n    eigenvectors : ndarray\n        Partial result. Converged eigenvectors.\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 294, 4, False)
        # Assigning a type to the variable 'self' (line 295)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 295, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ArpackNoConvergence.__init__', ['msg', 'eigenvalues', 'eigenvectors'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['msg', 'eigenvalues', 'eigenvectors'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 295)
        # Processing the call arguments (line 295)
        # Getting the type of 'self' (line 295)
        self_396363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 29), 'self', False)
        int_396364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 295, 35), 'int')
        
        # Obtaining an instance of the builtin type 'dict' (line 295)
        dict_396365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 295, 39), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 295)
        # Adding element type (key, value) (line 295)
        int_396366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 295, 40), 'int')
        # Getting the type of 'msg' (line 295)
        msg_396367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 44), 'msg', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 295, 39), dict_396365, (int_396366, msg_396367))
        
        # Processing the call keyword arguments (line 295)
        kwargs_396368 = {}
        # Getting the type of 'ArpackError' (line 295)
        ArpackError_396361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 8), 'ArpackError', False)
        # Obtaining the member '__init__' of a type (line 295)
        init___396362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 295, 8), ArpackError_396361, '__init__')
        # Calling __init__(args, kwargs) (line 295)
        init___call_result_396369 = invoke(stypy.reporting.localization.Localization(__file__, 295, 8), init___396362, *[self_396363, int_396364, dict_396365], **kwargs_396368)
        
        
        # Assigning a Name to a Attribute (line 296):
        
        # Assigning a Name to a Attribute (line 296):
        # Getting the type of 'eigenvalues' (line 296)
        eigenvalues_396370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 27), 'eigenvalues')
        # Getting the type of 'self' (line 296)
        self_396371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'self')
        # Setting the type of the member 'eigenvalues' of a type (line 296)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 8), self_396371, 'eigenvalues', eigenvalues_396370)
        
        # Assigning a Name to a Attribute (line 297):
        
        # Assigning a Name to a Attribute (line 297):
        # Getting the type of 'eigenvectors' (line 297)
        eigenvectors_396372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 28), 'eigenvectors')
        # Getting the type of 'self' (line 297)
        self_396373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 8), 'self')
        # Setting the type of the member 'eigenvectors' of a type (line 297)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 8), self_396373, 'eigenvectors', eigenvectors_396372)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'ArpackNoConvergence' (line 282)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 0), 'ArpackNoConvergence', ArpackNoConvergence)

@norecursion
def choose_ncv(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'choose_ncv'
    module_type_store = module_type_store.open_function_context('choose_ncv', 300, 0, False)
    
    # Passed parameters checking function
    choose_ncv.stypy_localization = localization
    choose_ncv.stypy_type_of_self = None
    choose_ncv.stypy_type_store = module_type_store
    choose_ncv.stypy_function_name = 'choose_ncv'
    choose_ncv.stypy_param_names_list = ['k']
    choose_ncv.stypy_varargs_param_name = None
    choose_ncv.stypy_kwargs_param_name = None
    choose_ncv.stypy_call_defaults = defaults
    choose_ncv.stypy_call_varargs = varargs
    choose_ncv.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'choose_ncv', ['k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'choose_ncv', localization, ['k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'choose_ncv(...)' code ##################

    str_396374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, (-1)), 'str', '\n    Choose number of lanczos vectors based on target number\n    of singular/eigen values and vectors to compute, k.\n    ')
    
    # Call to max(...): (line 305)
    # Processing the call arguments (line 305)
    int_396376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 305, 15), 'int')
    # Getting the type of 'k' (line 305)
    k_396377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 19), 'k', False)
    # Applying the binary operator '*' (line 305)
    result_mul_396378 = python_operator(stypy.reporting.localization.Localization(__file__, 305, 15), '*', int_396376, k_396377)
    
    int_396379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 305, 23), 'int')
    # Applying the binary operator '+' (line 305)
    result_add_396380 = python_operator(stypy.reporting.localization.Localization(__file__, 305, 15), '+', result_mul_396378, int_396379)
    
    int_396381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 305, 26), 'int')
    # Processing the call keyword arguments (line 305)
    kwargs_396382 = {}
    # Getting the type of 'max' (line 305)
    max_396375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 11), 'max', False)
    # Calling max(args, kwargs) (line 305)
    max_call_result_396383 = invoke(stypy.reporting.localization.Localization(__file__, 305, 11), max_396375, *[result_add_396380, int_396381], **kwargs_396382)
    
    # Assigning a type to the variable 'stypy_return_type' (line 305)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 4), 'stypy_return_type', max_call_result_396383)
    
    # ################# End of 'choose_ncv(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'choose_ncv' in the type store
    # Getting the type of 'stypy_return_type' (line 300)
    stypy_return_type_396384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_396384)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'choose_ncv'
    return stypy_return_type_396384

# Assigning a type to the variable 'choose_ncv' (line 300)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 0), 'choose_ncv', choose_ncv)
# Declaration of the '_ArpackParams' class

class _ArpackParams(object, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_396385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 309, 38), 'int')
        # Getting the type of 'None' (line 309)
        None_396386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 47), 'None')
        # Getting the type of 'None' (line 310)
        None_396387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 21), 'None')
        # Getting the type of 'None' (line 310)
        None_396388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 30), 'None')
        # Getting the type of 'None' (line 310)
        None_396389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 44), 'None')
        str_396390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 56), 'str', 'LM')
        int_396391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 66), 'int')
        defaults = [int_396385, None_396386, None_396387, None_396388, None_396389, str_396390, int_396391]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 309, 4, False)
        # Assigning a type to the variable 'self' (line 310)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 310, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_ArpackParams.__init__', ['n', 'k', 'tp', 'mode', 'sigma', 'ncv', 'v0', 'maxiter', 'which', 'tol'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['n', 'k', 'tp', 'mode', 'sigma', 'ncv', 'v0', 'maxiter', 'which', 'tol'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Getting the type of 'k' (line 311)
        k_396392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 11), 'k')
        int_396393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 311, 16), 'int')
        # Applying the binary operator '<=' (line 311)
        result_le_396394 = python_operator(stypy.reporting.localization.Localization(__file__, 311, 11), '<=', k_396392, int_396393)
        
        # Testing the type of an if condition (line 311)
        if_condition_396395 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 311, 8), result_le_396394)
        # Assigning a type to the variable 'if_condition_396395' (line 311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'if_condition_396395', if_condition_396395)
        # SSA begins for if statement (line 311)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 312)
        # Processing the call arguments (line 312)
        str_396397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 29), 'str', 'k must be positive, k=%d')
        # Getting the type of 'k' (line 312)
        k_396398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 58), 'k', False)
        # Applying the binary operator '%' (line 312)
        result_mod_396399 = python_operator(stypy.reporting.localization.Localization(__file__, 312, 29), '%', str_396397, k_396398)
        
        # Processing the call keyword arguments (line 312)
        kwargs_396400 = {}
        # Getting the type of 'ValueError' (line 312)
        ValueError_396396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 312)
        ValueError_call_result_396401 = invoke(stypy.reporting.localization.Localization(__file__, 312, 18), ValueError_396396, *[result_mod_396399], **kwargs_396400)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 312, 12), ValueError_call_result_396401, 'raise parameter', BaseException)
        # SSA join for if statement (line 311)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 314)
        # Getting the type of 'maxiter' (line 314)
        maxiter_396402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 11), 'maxiter')
        # Getting the type of 'None' (line 314)
        None_396403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 22), 'None')
        
        (may_be_396404, more_types_in_union_396405) = may_be_none(maxiter_396402, None_396403)

        if may_be_396404:

            if more_types_in_union_396405:
                # Runtime conditional SSA (line 314)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 315):
            
            # Assigning a BinOp to a Name (line 315):
            # Getting the type of 'n' (line 315)
            n_396406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 22), 'n')
            int_396407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 26), 'int')
            # Applying the binary operator '*' (line 315)
            result_mul_396408 = python_operator(stypy.reporting.localization.Localization(__file__, 315, 22), '*', n_396406, int_396407)
            
            # Assigning a type to the variable 'maxiter' (line 315)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 315, 12), 'maxiter', result_mul_396408)

            if more_types_in_union_396405:
                # SSA join for if statement (line 314)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Getting the type of 'maxiter' (line 316)
        maxiter_396409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 11), 'maxiter')
        int_396410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 22), 'int')
        # Applying the binary operator '<=' (line 316)
        result_le_396411 = python_operator(stypy.reporting.localization.Localization(__file__, 316, 11), '<=', maxiter_396409, int_396410)
        
        # Testing the type of an if condition (line 316)
        if_condition_396412 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 316, 8), result_le_396411)
        # Assigning a type to the variable 'if_condition_396412' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 8), 'if_condition_396412', if_condition_396412)
        # SSA begins for if statement (line 316)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 317)
        # Processing the call arguments (line 317)
        str_396414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 29), 'str', 'maxiter must be positive, maxiter=%d')
        # Getting the type of 'maxiter' (line 317)
        maxiter_396415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 70), 'maxiter', False)
        # Applying the binary operator '%' (line 317)
        result_mod_396416 = python_operator(stypy.reporting.localization.Localization(__file__, 317, 29), '%', str_396414, maxiter_396415)
        
        # Processing the call keyword arguments (line 317)
        kwargs_396417 = {}
        # Getting the type of 'ValueError' (line 317)
        ValueError_396413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 317)
        ValueError_call_result_396418 = invoke(stypy.reporting.localization.Localization(__file__, 317, 18), ValueError_396413, *[result_mod_396416], **kwargs_396417)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 317, 12), ValueError_call_result_396418, 'raise parameter', BaseException)
        # SSA join for if statement (line 316)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'tp' (line 319)
        tp_396419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 11), 'tp')
        str_396420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 21), 'str', 'fdFD')
        # Applying the binary operator 'notin' (line 319)
        result_contains_396421 = python_operator(stypy.reporting.localization.Localization(__file__, 319, 11), 'notin', tp_396419, str_396420)
        
        # Testing the type of an if condition (line 319)
        if_condition_396422 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 319, 8), result_contains_396421)
        # Assigning a type to the variable 'if_condition_396422' (line 319)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 8), 'if_condition_396422', if_condition_396422)
        # SSA begins for if statement (line 319)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 320)
        # Processing the call arguments (line 320)
        str_396424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 29), 'str', "matrix type must be 'f', 'd', 'F', or 'D'")
        # Processing the call keyword arguments (line 320)
        kwargs_396425 = {}
        # Getting the type of 'ValueError' (line 320)
        ValueError_396423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 320)
        ValueError_call_result_396426 = invoke(stypy.reporting.localization.Localization(__file__, 320, 18), ValueError_396423, *[str_396424], **kwargs_396425)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 320, 12), ValueError_call_result_396426, 'raise parameter', BaseException)
        # SSA join for if statement (line 319)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 322)
        # Getting the type of 'v0' (line 322)
        v0_396427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 8), 'v0')
        # Getting the type of 'None' (line 322)
        None_396428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 21), 'None')
        
        (may_be_396429, more_types_in_union_396430) = may_not_be_none(v0_396427, None_396428)

        if may_be_396429:

            if more_types_in_union_396430:
                # Runtime conditional SSA (line 322)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Attribute (line 324):
            
            # Assigning a Call to a Attribute (line 324):
            
            # Call to array(...): (line 324)
            # Processing the call arguments (line 324)
            # Getting the type of 'v0' (line 324)
            v0_396433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 34), 'v0', False)
            # Processing the call keyword arguments (line 324)
            # Getting the type of 'True' (line 324)
            True_396434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 43), 'True', False)
            keyword_396435 = True_396434
            kwargs_396436 = {'copy': keyword_396435}
            # Getting the type of 'np' (line 324)
            np_396431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 25), 'np', False)
            # Obtaining the member 'array' of a type (line 324)
            array_396432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 25), np_396431, 'array')
            # Calling array(args, kwargs) (line 324)
            array_call_result_396437 = invoke(stypy.reporting.localization.Localization(__file__, 324, 25), array_396432, *[v0_396433], **kwargs_396436)
            
            # Getting the type of 'self' (line 324)
            self_396438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'self')
            # Setting the type of the member 'resid' of a type (line 324)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 12), self_396438, 'resid', array_call_result_396437)
            
            # Assigning a Num to a Name (line 325):
            
            # Assigning a Num to a Name (line 325):
            int_396439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 19), 'int')
            # Assigning a type to the variable 'info' (line 325)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 325, 12), 'info', int_396439)

            if more_types_in_union_396430:
                # Runtime conditional SSA for else branch (line 322)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_396429) or more_types_in_union_396430):
            
            # Assigning a Call to a Attribute (line 328):
            
            # Assigning a Call to a Attribute (line 328):
            
            # Call to zeros(...): (line 328)
            # Processing the call arguments (line 328)
            # Getting the type of 'n' (line 328)
            n_396442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 34), 'n', False)
            # Getting the type of 'tp' (line 328)
            tp_396443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 37), 'tp', False)
            # Processing the call keyword arguments (line 328)
            kwargs_396444 = {}
            # Getting the type of 'np' (line 328)
            np_396440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 25), 'np', False)
            # Obtaining the member 'zeros' of a type (line 328)
            zeros_396441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 328, 25), np_396440, 'zeros')
            # Calling zeros(args, kwargs) (line 328)
            zeros_call_result_396445 = invoke(stypy.reporting.localization.Localization(__file__, 328, 25), zeros_396441, *[n_396442, tp_396443], **kwargs_396444)
            
            # Getting the type of 'self' (line 328)
            self_396446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 12), 'self')
            # Setting the type of the member 'resid' of a type (line 328)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 328, 12), self_396446, 'resid', zeros_call_result_396445)
            
            # Assigning a Num to a Name (line 329):
            
            # Assigning a Num to a Name (line 329):
            int_396447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 19), 'int')
            # Assigning a type to the variable 'info' (line 329)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 12), 'info', int_396447)

            if (may_be_396429 and more_types_in_union_396430):
                # SSA join for if statement (line 322)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 331)
        # Getting the type of 'sigma' (line 331)
        sigma_396448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 11), 'sigma')
        # Getting the type of 'None' (line 331)
        None_396449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 20), 'None')
        
        (may_be_396450, more_types_in_union_396451) = may_be_none(sigma_396448, None_396449)

        if may_be_396450:

            if more_types_in_union_396451:
                # Runtime conditional SSA (line 331)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Num to a Attribute (line 333):
            
            # Assigning a Num to a Attribute (line 333):
            int_396452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 25), 'int')
            # Getting the type of 'self' (line 333)
            self_396453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'self')
            # Setting the type of the member 'sigma' of a type (line 333)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 12), self_396453, 'sigma', int_396452)

            if more_types_in_union_396451:
                # Runtime conditional SSA for else branch (line 331)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_396450) or more_types_in_union_396451):
            
            # Assigning a Name to a Attribute (line 335):
            
            # Assigning a Name to a Attribute (line 335):
            # Getting the type of 'sigma' (line 335)
            sigma_396454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 25), 'sigma')
            # Getting the type of 'self' (line 335)
            self_396455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 12), 'self')
            # Setting the type of the member 'sigma' of a type (line 335)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 12), self_396455, 'sigma', sigma_396454)

            if (may_be_396450 and more_types_in_union_396451):
                # SSA join for if statement (line 331)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 337)
        # Getting the type of 'ncv' (line 337)
        ncv_396456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 11), 'ncv')
        # Getting the type of 'None' (line 337)
        None_396457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 18), 'None')
        
        (may_be_396458, more_types_in_union_396459) = may_be_none(ncv_396456, None_396457)

        if may_be_396458:

            if more_types_in_union_396459:
                # Runtime conditional SSA (line 337)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 338):
            
            # Assigning a Call to a Name (line 338):
            
            # Call to choose_ncv(...): (line 338)
            # Processing the call arguments (line 338)
            # Getting the type of 'k' (line 338)
            k_396461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 29), 'k', False)
            # Processing the call keyword arguments (line 338)
            kwargs_396462 = {}
            # Getting the type of 'choose_ncv' (line 338)
            choose_ncv_396460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 18), 'choose_ncv', False)
            # Calling choose_ncv(args, kwargs) (line 338)
            choose_ncv_call_result_396463 = invoke(stypy.reporting.localization.Localization(__file__, 338, 18), choose_ncv_396460, *[k_396461], **kwargs_396462)
            
            # Assigning a type to the variable 'ncv' (line 338)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 12), 'ncv', choose_ncv_call_result_396463)

            if more_types_in_union_396459:
                # SSA join for if statement (line 337)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 339):
        
        # Assigning a Call to a Name (line 339):
        
        # Call to min(...): (line 339)
        # Processing the call arguments (line 339)
        # Getting the type of 'ncv' (line 339)
        ncv_396465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 18), 'ncv', False)
        # Getting the type of 'n' (line 339)
        n_396466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 23), 'n', False)
        # Processing the call keyword arguments (line 339)
        kwargs_396467 = {}
        # Getting the type of 'min' (line 339)
        min_396464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 14), 'min', False)
        # Calling min(args, kwargs) (line 339)
        min_call_result_396468 = invoke(stypy.reporting.localization.Localization(__file__, 339, 14), min_396464, *[ncv_396465, n_396466], **kwargs_396467)
        
        # Assigning a type to the variable 'ncv' (line 339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 8), 'ncv', min_call_result_396468)
        
        # Assigning a Call to a Attribute (line 341):
        
        # Assigning a Call to a Attribute (line 341):
        
        # Call to zeros(...): (line 341)
        # Processing the call arguments (line 341)
        
        # Obtaining an instance of the builtin type 'tuple' (line 341)
        tuple_396471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 341)
        # Adding element type (line 341)
        # Getting the type of 'n' (line 341)
        n_396472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 27), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 27), tuple_396471, n_396472)
        # Adding element type (line 341)
        # Getting the type of 'ncv' (line 341)
        ncv_396473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 30), 'ncv', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 27), tuple_396471, ncv_396473)
        
        # Getting the type of 'tp' (line 341)
        tp_396474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 36), 'tp', False)
        # Processing the call keyword arguments (line 341)
        kwargs_396475 = {}
        # Getting the type of 'np' (line 341)
        np_396469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 17), 'np', False)
        # Obtaining the member 'zeros' of a type (line 341)
        zeros_396470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 17), np_396469, 'zeros')
        # Calling zeros(args, kwargs) (line 341)
        zeros_call_result_396476 = invoke(stypy.reporting.localization.Localization(__file__, 341, 17), zeros_396470, *[tuple_396471, tp_396474], **kwargs_396475)
        
        # Getting the type of 'self' (line 341)
        self_396477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 8), 'self')
        # Setting the type of the member 'v' of a type (line 341)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 8), self_396477, 'v', zeros_call_result_396476)
        
        # Assigning a Call to a Attribute (line 342):
        
        # Assigning a Call to a Attribute (line 342):
        
        # Call to zeros(...): (line 342)
        # Processing the call arguments (line 342)
        int_396480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 31), 'int')
        str_396481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 35), 'str', 'int')
        # Processing the call keyword arguments (line 342)
        kwargs_396482 = {}
        # Getting the type of 'np' (line 342)
        np_396478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 22), 'np', False)
        # Obtaining the member 'zeros' of a type (line 342)
        zeros_396479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 22), np_396478, 'zeros')
        # Calling zeros(args, kwargs) (line 342)
        zeros_call_result_396483 = invoke(stypy.reporting.localization.Localization(__file__, 342, 22), zeros_396479, *[int_396480, str_396481], **kwargs_396482)
        
        # Getting the type of 'self' (line 342)
        self_396484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'self')
        # Setting the type of the member 'iparam' of a type (line 342)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 8), self_396484, 'iparam', zeros_call_result_396483)
        
        # Assigning a Num to a Name (line 345):
        
        # Assigning a Num to a Name (line 345):
        int_396485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 17), 'int')
        # Assigning a type to the variable 'ishfts' (line 345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 8), 'ishfts', int_396485)
        
        # Assigning a Name to a Attribute (line 346):
        
        # Assigning a Name to a Attribute (line 346):
        # Getting the type of 'mode' (line 346)
        mode_396486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 20), 'mode')
        # Getting the type of 'self' (line 346)
        self_396487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 8), 'self')
        # Setting the type of the member 'mode' of a type (line 346)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 346, 8), self_396487, 'mode', mode_396486)
        
        # Assigning a Name to a Subscript (line 347):
        
        # Assigning a Name to a Subscript (line 347):
        # Getting the type of 'ishfts' (line 347)
        ishfts_396488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 25), 'ishfts')
        # Getting the type of 'self' (line 347)
        self_396489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 8), 'self')
        # Obtaining the member 'iparam' of a type (line 347)
        iparam_396490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 8), self_396489, 'iparam')
        int_396491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 20), 'int')
        # Storing an element on a container (line 347)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 347, 8), iparam_396490, (int_396491, ishfts_396488))
        
        # Assigning a Name to a Subscript (line 348):
        
        # Assigning a Name to a Subscript (line 348):
        # Getting the type of 'maxiter' (line 348)
        maxiter_396492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 25), 'maxiter')
        # Getting the type of 'self' (line 348)
        self_396493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 8), 'self')
        # Obtaining the member 'iparam' of a type (line 348)
        iparam_396494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 8), self_396493, 'iparam')
        int_396495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 20), 'int')
        # Storing an element on a container (line 348)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 348, 8), iparam_396494, (int_396495, maxiter_396492))
        
        # Assigning a Num to a Subscript (line 349):
        
        # Assigning a Num to a Subscript (line 349):
        int_396496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 25), 'int')
        # Getting the type of 'self' (line 349)
        self_396497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 8), 'self')
        # Obtaining the member 'iparam' of a type (line 349)
        iparam_396498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 8), self_396497, 'iparam')
        int_396499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 20), 'int')
        # Storing an element on a container (line 349)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 349, 8), iparam_396498, (int_396499, int_396496))
        
        # Assigning a Name to a Subscript (line 350):
        
        # Assigning a Name to a Subscript (line 350):
        # Getting the type of 'mode' (line 350)
        mode_396500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 25), 'mode')
        # Getting the type of 'self' (line 350)
        self_396501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 8), 'self')
        # Obtaining the member 'iparam' of a type (line 350)
        iparam_396502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 8), self_396501, 'iparam')
        int_396503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 20), 'int')
        # Storing an element on a container (line 350)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 350, 8), iparam_396502, (int_396503, mode_396500))
        
        # Assigning a Name to a Attribute (line 352):
        
        # Assigning a Name to a Attribute (line 352):
        # Getting the type of 'n' (line 352)
        n_396504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 17), 'n')
        # Getting the type of 'self' (line 352)
        self_396505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 8), 'self')
        # Setting the type of the member 'n' of a type (line 352)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 8), self_396505, 'n', n_396504)
        
        # Assigning a Name to a Attribute (line 353):
        
        # Assigning a Name to a Attribute (line 353):
        # Getting the type of 'tol' (line 353)
        tol_396506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 19), 'tol')
        # Getting the type of 'self' (line 353)
        self_396507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 8), 'self')
        # Setting the type of the member 'tol' of a type (line 353)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 8), self_396507, 'tol', tol_396506)
        
        # Assigning a Name to a Attribute (line 354):
        
        # Assigning a Name to a Attribute (line 354):
        # Getting the type of 'k' (line 354)
        k_396508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'k')
        # Getting the type of 'self' (line 354)
        self_396509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 8), 'self')
        # Setting the type of the member 'k' of a type (line 354)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 8), self_396509, 'k', k_396508)
        
        # Assigning a Name to a Attribute (line 355):
        
        # Assigning a Name to a Attribute (line 355):
        # Getting the type of 'maxiter' (line 355)
        maxiter_396510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 23), 'maxiter')
        # Getting the type of 'self' (line 355)
        self_396511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'self')
        # Setting the type of the member 'maxiter' of a type (line 355)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 8), self_396511, 'maxiter', maxiter_396510)
        
        # Assigning a Name to a Attribute (line 356):
        
        # Assigning a Name to a Attribute (line 356):
        # Getting the type of 'ncv' (line 356)
        ncv_396512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 19), 'ncv')
        # Getting the type of 'self' (line 356)
        self_396513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'self')
        # Setting the type of the member 'ncv' of a type (line 356)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 8), self_396513, 'ncv', ncv_396512)
        
        # Assigning a Name to a Attribute (line 357):
        
        # Assigning a Name to a Attribute (line 357):
        # Getting the type of 'which' (line 357)
        which_396514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 21), 'which')
        # Getting the type of 'self' (line 357)
        self_396515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 8), 'self')
        # Setting the type of the member 'which' of a type (line 357)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 8), self_396515, 'which', which_396514)
        
        # Assigning a Name to a Attribute (line 358):
        
        # Assigning a Name to a Attribute (line 358):
        # Getting the type of 'tp' (line 358)
        tp_396516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 18), 'tp')
        # Getting the type of 'self' (line 358)
        self_396517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 8), 'self')
        # Setting the type of the member 'tp' of a type (line 358)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 8), self_396517, 'tp', tp_396516)
        
        # Assigning a Name to a Attribute (line 359):
        
        # Assigning a Name to a Attribute (line 359):
        # Getting the type of 'info' (line 359)
        info_396518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 20), 'info')
        # Getting the type of 'self' (line 359)
        self_396519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 8), 'self')
        # Setting the type of the member 'info' of a type (line 359)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 359, 8), self_396519, 'info', info_396518)
        
        # Assigning a Name to a Attribute (line 361):
        
        # Assigning a Name to a Attribute (line 361):
        # Getting the type of 'False' (line 361)
        False_396520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 25), 'False')
        # Getting the type of 'self' (line 361)
        self_396521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 8), 'self')
        # Setting the type of the member 'converged' of a type (line 361)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 361, 8), self_396521, 'converged', False_396520)
        
        # Assigning a Num to a Attribute (line 362):
        
        # Assigning a Num to a Attribute (line 362):
        int_396522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 19), 'int')
        # Getting the type of 'self' (line 362)
        self_396523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'self')
        # Setting the type of the member 'ido' of a type (line 362)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 8), self_396523, 'ido', int_396522)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _raise_no_convergence(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_raise_no_convergence'
        module_type_store = module_type_store.open_function_context('_raise_no_convergence', 364, 4, False)
        # Assigning a type to the variable 'self' (line 365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 365, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_localization', localization)
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_type_store', module_type_store)
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_function_name', '_ArpackParams._raise_no_convergence')
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_param_names_list', [])
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_varargs_param_name', None)
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_call_defaults', defaults)
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_call_varargs', varargs)
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _ArpackParams._raise_no_convergence.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_ArpackParams._raise_no_convergence', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_raise_no_convergence', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_raise_no_convergence(...)' code ##################

        
        # Assigning a Str to a Name (line 365):
        
        # Assigning a Str to a Name (line 365):
        str_396524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 14), 'str', 'No convergence (%d iterations, %d/%d eigenvectors converged)')
        # Assigning a type to the variable 'msg' (line 365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 365, 8), 'msg', str_396524)
        
        # Assigning a Subscript to a Name (line 366):
        
        # Assigning a Subscript to a Name (line 366):
        
        # Obtaining the type of the subscript
        int_396525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 27), 'int')
        # Getting the type of 'self' (line 366)
        self_396526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 15), 'self')
        # Obtaining the member 'iparam' of a type (line 366)
        iparam_396527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 15), self_396526, 'iparam')
        # Obtaining the member '__getitem__' of a type (line 366)
        getitem___396528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 15), iparam_396527, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 366)
        subscript_call_result_396529 = invoke(stypy.reporting.localization.Localization(__file__, 366, 15), getitem___396528, int_396525)
        
        # Assigning a type to the variable 'k_ok' (line 366)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 8), 'k_ok', subscript_call_result_396529)
        
        # Assigning a Subscript to a Name (line 367):
        
        # Assigning a Subscript to a Name (line 367):
        
        # Obtaining the type of the subscript
        int_396530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 31), 'int')
        # Getting the type of 'self' (line 367)
        self_396531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 19), 'self')
        # Obtaining the member 'iparam' of a type (line 367)
        iparam_396532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 19), self_396531, 'iparam')
        # Obtaining the member '__getitem__' of a type (line 367)
        getitem___396533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 19), iparam_396532, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 367)
        subscript_call_result_396534 = invoke(stypy.reporting.localization.Localization(__file__, 367, 19), getitem___396533, int_396530)
        
        # Assigning a type to the variable 'num_iter' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 8), 'num_iter', subscript_call_result_396534)
        
        
        # SSA begins for try-except statement (line 368)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Tuple (line 369):
        
        # Assigning a Subscript to a Name (line 369):
        
        # Obtaining the type of the subscript
        int_396535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 369, 12), 'int')
        
        # Call to extract(...): (line 369)
        # Processing the call arguments (line 369)
        # Getting the type of 'True' (line 369)
        True_396538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 35), 'True', False)
        # Processing the call keyword arguments (line 369)
        kwargs_396539 = {}
        # Getting the type of 'self' (line 369)
        self_396536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 22), 'self', False)
        # Obtaining the member 'extract' of a type (line 369)
        extract_396537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 22), self_396536, 'extract')
        # Calling extract(args, kwargs) (line 369)
        extract_call_result_396540 = invoke(stypy.reporting.localization.Localization(__file__, 369, 22), extract_396537, *[True_396538], **kwargs_396539)
        
        # Obtaining the member '__getitem__' of a type (line 369)
        getitem___396541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 12), extract_call_result_396540, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 369)
        subscript_call_result_396542 = invoke(stypy.reporting.localization.Localization(__file__, 369, 12), getitem___396541, int_396535)
        
        # Assigning a type to the variable 'tuple_var_assignment_395994' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 12), 'tuple_var_assignment_395994', subscript_call_result_396542)
        
        # Assigning a Subscript to a Name (line 369):
        
        # Obtaining the type of the subscript
        int_396543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 369, 12), 'int')
        
        # Call to extract(...): (line 369)
        # Processing the call arguments (line 369)
        # Getting the type of 'True' (line 369)
        True_396546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 35), 'True', False)
        # Processing the call keyword arguments (line 369)
        kwargs_396547 = {}
        # Getting the type of 'self' (line 369)
        self_396544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 22), 'self', False)
        # Obtaining the member 'extract' of a type (line 369)
        extract_396545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 22), self_396544, 'extract')
        # Calling extract(args, kwargs) (line 369)
        extract_call_result_396548 = invoke(stypy.reporting.localization.Localization(__file__, 369, 22), extract_396545, *[True_396546], **kwargs_396547)
        
        # Obtaining the member '__getitem__' of a type (line 369)
        getitem___396549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 12), extract_call_result_396548, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 369)
        subscript_call_result_396550 = invoke(stypy.reporting.localization.Localization(__file__, 369, 12), getitem___396549, int_396543)
        
        # Assigning a type to the variable 'tuple_var_assignment_395995' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 12), 'tuple_var_assignment_395995', subscript_call_result_396550)
        
        # Assigning a Name to a Name (line 369):
        # Getting the type of 'tuple_var_assignment_395994' (line 369)
        tuple_var_assignment_395994_396551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 12), 'tuple_var_assignment_395994')
        # Assigning a type to the variable 'ev' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 12), 'ev', tuple_var_assignment_395994_396551)
        
        # Assigning a Name to a Name (line 369):
        # Getting the type of 'tuple_var_assignment_395995' (line 369)
        tuple_var_assignment_395995_396552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 12), 'tuple_var_assignment_395995')
        # Assigning a type to the variable 'vec' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 16), 'vec', tuple_var_assignment_395995_396552)
        # SSA branch for the except part of a try statement (line 368)
        # SSA branch for the except 'ArpackError' branch of a try statement (line 368)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'ArpackError' (line 370)
        ArpackError_396553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 15), 'ArpackError')
        # Assigning a type to the variable 'err' (line 370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 8), 'err', ArpackError_396553)
        
        # Assigning a BinOp to a Name (line 371):
        
        # Assigning a BinOp to a Name (line 371):
        str_396554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 18), 'str', '%s [%s]')
        
        # Obtaining an instance of the builtin type 'tuple' (line 371)
        tuple_396555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 371)
        # Adding element type (line 371)
        # Getting the type of 'msg' (line 371)
        msg_396556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 31), 'msg')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 371, 31), tuple_396555, msg_396556)
        # Adding element type (line 371)
        # Getting the type of 'err' (line 371)
        err_396557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 36), 'err')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 371, 31), tuple_396555, err_396557)
        
        # Applying the binary operator '%' (line 371)
        result_mod_396558 = python_operator(stypy.reporting.localization.Localization(__file__, 371, 18), '%', str_396554, tuple_396555)
        
        # Assigning a type to the variable 'msg' (line 371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 371, 12), 'msg', result_mod_396558)
        
        # Assigning a Call to a Name (line 372):
        
        # Assigning a Call to a Name (line 372):
        
        # Call to zeros(...): (line 372)
        # Processing the call arguments (line 372)
        
        # Obtaining an instance of the builtin type 'tuple' (line 372)
        tuple_396561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 372)
        # Adding element type (line 372)
        int_396562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 372, 27), tuple_396561, int_396562)
        
        # Processing the call keyword arguments (line 372)
        kwargs_396563 = {}
        # Getting the type of 'np' (line 372)
        np_396559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 17), 'np', False)
        # Obtaining the member 'zeros' of a type (line 372)
        zeros_396560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 17), np_396559, 'zeros')
        # Calling zeros(args, kwargs) (line 372)
        zeros_call_result_396564 = invoke(stypy.reporting.localization.Localization(__file__, 372, 17), zeros_396560, *[tuple_396561], **kwargs_396563)
        
        # Assigning a type to the variable 'ev' (line 372)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 12), 'ev', zeros_call_result_396564)
        
        # Assigning a Call to a Name (line 373):
        
        # Assigning a Call to a Name (line 373):
        
        # Call to zeros(...): (line 373)
        # Processing the call arguments (line 373)
        
        # Obtaining an instance of the builtin type 'tuple' (line 373)
        tuple_396567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 373)
        # Adding element type (line 373)
        # Getting the type of 'self' (line 373)
        self_396568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 28), 'self', False)
        # Obtaining the member 'n' of a type (line 373)
        n_396569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 28), self_396568, 'n')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 373, 28), tuple_396567, n_396569)
        # Adding element type (line 373)
        int_396570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 373, 28), tuple_396567, int_396570)
        
        # Processing the call keyword arguments (line 373)
        kwargs_396571 = {}
        # Getting the type of 'np' (line 373)
        np_396565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 18), 'np', False)
        # Obtaining the member 'zeros' of a type (line 373)
        zeros_396566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 18), np_396565, 'zeros')
        # Calling zeros(args, kwargs) (line 373)
        zeros_call_result_396572 = invoke(stypy.reporting.localization.Localization(__file__, 373, 18), zeros_396566, *[tuple_396567], **kwargs_396571)
        
        # Assigning a type to the variable 'vec' (line 373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 12), 'vec', zeros_call_result_396572)
        
        # Assigning a Num to a Name (line 374):
        
        # Assigning a Num to a Name (line 374):
        int_396573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 19), 'int')
        # Assigning a type to the variable 'k_ok' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 12), 'k_ok', int_396573)
        # SSA join for try-except statement (line 368)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to ArpackNoConvergence(...): (line 375)
        # Processing the call arguments (line 375)
        # Getting the type of 'msg' (line 375)
        msg_396575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 34), 'msg', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 375)
        tuple_396576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 375, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 375)
        # Adding element type (line 375)
        # Getting the type of 'num_iter' (line 375)
        num_iter_396577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 41), 'num_iter', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 375, 41), tuple_396576, num_iter_396577)
        # Adding element type (line 375)
        # Getting the type of 'k_ok' (line 375)
        k_ok_396578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 51), 'k_ok', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 375, 41), tuple_396576, k_ok_396578)
        # Adding element type (line 375)
        # Getting the type of 'self' (line 375)
        self_396579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 57), 'self', False)
        # Obtaining the member 'k' of a type (line 375)
        k_396580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 57), self_396579, 'k')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 375, 41), tuple_396576, k_396580)
        
        # Applying the binary operator '%' (line 375)
        result_mod_396581 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 34), '%', msg_396575, tuple_396576)
        
        # Getting the type of 'ev' (line 375)
        ev_396582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 66), 'ev', False)
        # Getting the type of 'vec' (line 375)
        vec_396583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 70), 'vec', False)
        # Processing the call keyword arguments (line 375)
        kwargs_396584 = {}
        # Getting the type of 'ArpackNoConvergence' (line 375)
        ArpackNoConvergence_396574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 14), 'ArpackNoConvergence', False)
        # Calling ArpackNoConvergence(args, kwargs) (line 375)
        ArpackNoConvergence_call_result_396585 = invoke(stypy.reporting.localization.Localization(__file__, 375, 14), ArpackNoConvergence_396574, *[result_mod_396581, ev_396582, vec_396583], **kwargs_396584)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 375, 8), ArpackNoConvergence_call_result_396585, 'raise parameter', BaseException)
        
        # ################# End of '_raise_no_convergence(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_raise_no_convergence' in the type store
        # Getting the type of 'stypy_return_type' (line 364)
        stypy_return_type_396586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_396586)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_raise_no_convergence'
        return stypy_return_type_396586


# Assigning a type to the variable '_ArpackParams' (line 308)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 0), '_ArpackParams', _ArpackParams)
# Declaration of the '_SymmetricArpackParams' class
# Getting the type of '_ArpackParams' (line 378)
_ArpackParams_396587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 29), '_ArpackParams')

class _SymmetricArpackParams(_ArpackParams_396587, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_396588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 46), 'int')
        # Getting the type of 'None' (line 379)
        None_396589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 58), 'None')
        # Getting the type of 'None' (line 380)
        None_396590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 29), 'None')
        # Getting the type of 'None' (line 380)
        None_396591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 41), 'None')
        # Getting the type of 'None' (line 381)
        None_396592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 21), 'None')
        # Getting the type of 'None' (line 381)
        None_396593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 30), 'None')
        # Getting the type of 'None' (line 381)
        None_396594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 44), 'None')
        str_396595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 56), 'str', 'LM')
        int_396596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 66), 'int')
        defaults = [int_396588, None_396589, None_396590, None_396591, None_396592, None_396593, None_396594, str_396595, int_396596]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 379, 4, False)
        # Assigning a type to the variable 'self' (line 380)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 380, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_SymmetricArpackParams.__init__', ['n', 'k', 'tp', 'matvec', 'mode', 'M_matvec', 'Minv_matvec', 'sigma', 'ncv', 'v0', 'maxiter', 'which', 'tol'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['n', 'k', 'tp', 'matvec', 'mode', 'M_matvec', 'Minv_matvec', 'sigma', 'ncv', 'v0', 'maxiter', 'which', 'tol'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Getting the type of 'mode' (line 433)
        mode_396597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 11), 'mode')
        int_396598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 19), 'int')
        # Applying the binary operator '==' (line 433)
        result_eq_396599 = python_operator(stypy.reporting.localization.Localization(__file__, 433, 11), '==', mode_396597, int_396598)
        
        # Testing the type of an if condition (line 433)
        if_condition_396600 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 433, 8), result_eq_396599)
        # Assigning a type to the variable 'if_condition_396600' (line 433)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 8), 'if_condition_396600', if_condition_396600)
        # SSA begins for if statement (line 433)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 434)
        # Getting the type of 'matvec' (line 434)
        matvec_396601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 15), 'matvec')
        # Getting the type of 'None' (line 434)
        None_396602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 25), 'None')
        
        (may_be_396603, more_types_in_union_396604) = may_be_none(matvec_396601, None_396602)

        if may_be_396603:

            if more_types_in_union_396604:
                # Runtime conditional SSA (line 434)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 435)
            # Processing the call arguments (line 435)
            str_396606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 33), 'str', 'matvec must be specified for mode=1')
            # Processing the call keyword arguments (line 435)
            kwargs_396607 = {}
            # Getting the type of 'ValueError' (line 435)
            ValueError_396605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 435)
            ValueError_call_result_396608 = invoke(stypy.reporting.localization.Localization(__file__, 435, 22), ValueError_396605, *[str_396606], **kwargs_396607)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 435, 16), ValueError_call_result_396608, 'raise parameter', BaseException)

            if more_types_in_union_396604:
                # SSA join for if statement (line 434)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 436)
        # Getting the type of 'M_matvec' (line 436)
        M_matvec_396609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 12), 'M_matvec')
        # Getting the type of 'None' (line 436)
        None_396610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 31), 'None')
        
        (may_be_396611, more_types_in_union_396612) = may_not_be_none(M_matvec_396609, None_396610)

        if may_be_396611:

            if more_types_in_union_396612:
                # Runtime conditional SSA (line 436)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 437)
            # Processing the call arguments (line 437)
            str_396614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 33), 'str', 'M_matvec cannot be specified for mode=1')
            # Processing the call keyword arguments (line 437)
            kwargs_396615 = {}
            # Getting the type of 'ValueError' (line 437)
            ValueError_396613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 437)
            ValueError_call_result_396616 = invoke(stypy.reporting.localization.Localization(__file__, 437, 22), ValueError_396613, *[str_396614], **kwargs_396615)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 437, 16), ValueError_call_result_396616, 'raise parameter', BaseException)

            if more_types_in_union_396612:
                # SSA join for if statement (line 436)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 438)
        # Getting the type of 'Minv_matvec' (line 438)
        Minv_matvec_396617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 12), 'Minv_matvec')
        # Getting the type of 'None' (line 438)
        None_396618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 34), 'None')
        
        (may_be_396619, more_types_in_union_396620) = may_not_be_none(Minv_matvec_396617, None_396618)

        if may_be_396619:

            if more_types_in_union_396620:
                # Runtime conditional SSA (line 438)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 439)
            # Processing the call arguments (line 439)
            str_396622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 33), 'str', 'Minv_matvec cannot be specified for mode=1')
            # Processing the call keyword arguments (line 439)
            kwargs_396623 = {}
            # Getting the type of 'ValueError' (line 439)
            ValueError_396621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 439)
            ValueError_call_result_396624 = invoke(stypy.reporting.localization.Localization(__file__, 439, 22), ValueError_396621, *[str_396622], **kwargs_396623)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 439, 16), ValueError_call_result_396624, 'raise parameter', BaseException)

            if more_types_in_union_396620:
                # SSA join for if statement (line 438)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 441):
        
        # Assigning a Name to a Attribute (line 441):
        # Getting the type of 'matvec' (line 441)
        matvec_396625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 22), 'matvec')
        # Getting the type of 'self' (line 441)
        self_396626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 12), 'self')
        # Setting the type of the member 'OP' of a type (line 441)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 12), self_396626, 'OP', matvec_396625)
        
        # Assigning a Lambda to a Attribute (line 442):
        
        # Assigning a Lambda to a Attribute (line 442):

        @norecursion
        def _stypy_temp_lambda_203(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_203'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_203', 442, 21, True)
            # Passed parameters checking function
            _stypy_temp_lambda_203.stypy_localization = localization
            _stypy_temp_lambda_203.stypy_type_of_self = None
            _stypy_temp_lambda_203.stypy_type_store = module_type_store
            _stypy_temp_lambda_203.stypy_function_name = '_stypy_temp_lambda_203'
            _stypy_temp_lambda_203.stypy_param_names_list = ['x']
            _stypy_temp_lambda_203.stypy_varargs_param_name = None
            _stypy_temp_lambda_203.stypy_kwargs_param_name = None
            _stypy_temp_lambda_203.stypy_call_defaults = defaults
            _stypy_temp_lambda_203.stypy_call_varargs = varargs
            _stypy_temp_lambda_203.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_203', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_203', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'x' (line 442)
            x_396627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 31), 'x')
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 442)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 21), 'stypy_return_type', x_396627)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_203' in the type store
            # Getting the type of 'stypy_return_type' (line 442)
            stypy_return_type_396628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 21), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_396628)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_203'
            return stypy_return_type_396628

        # Assigning a type to the variable '_stypy_temp_lambda_203' (line 442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 21), '_stypy_temp_lambda_203', _stypy_temp_lambda_203)
        # Getting the type of '_stypy_temp_lambda_203' (line 442)
        _stypy_temp_lambda_203_396629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 21), '_stypy_temp_lambda_203')
        # Getting the type of 'self' (line 442)
        self_396630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 12), 'self')
        # Setting the type of the member 'B' of a type (line 442)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 12), self_396630, 'B', _stypy_temp_lambda_203_396629)
        
        # Assigning a Str to a Attribute (line 443):
        
        # Assigning a Str to a Attribute (line 443):
        str_396631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 24), 'str', 'I')
        # Getting the type of 'self' (line 443)
        self_396632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 12), 'self')
        # Setting the type of the member 'bmat' of a type (line 443)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 12), self_396632, 'bmat', str_396631)
        # SSA branch for the else part of an if statement (line 433)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 444)
        mode_396633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 13), 'mode')
        int_396634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 21), 'int')
        # Applying the binary operator '==' (line 444)
        result_eq_396635 = python_operator(stypy.reporting.localization.Localization(__file__, 444, 13), '==', mode_396633, int_396634)
        
        # Testing the type of an if condition (line 444)
        if_condition_396636 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 444, 13), result_eq_396635)
        # Assigning a type to the variable 'if_condition_396636' (line 444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 13), 'if_condition_396636', if_condition_396636)
        # SSA begins for if statement (line 444)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 445)
        # Getting the type of 'matvec' (line 445)
        matvec_396637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 15), 'matvec')
        # Getting the type of 'None' (line 445)
        None_396638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 25), 'None')
        
        (may_be_396639, more_types_in_union_396640) = may_be_none(matvec_396637, None_396638)

        if may_be_396639:

            if more_types_in_union_396640:
                # Runtime conditional SSA (line 445)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 446)
            # Processing the call arguments (line 446)
            str_396642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 33), 'str', 'matvec must be specified for mode=2')
            # Processing the call keyword arguments (line 446)
            kwargs_396643 = {}
            # Getting the type of 'ValueError' (line 446)
            ValueError_396641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 446)
            ValueError_call_result_396644 = invoke(stypy.reporting.localization.Localization(__file__, 446, 22), ValueError_396641, *[str_396642], **kwargs_396643)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 446, 16), ValueError_call_result_396644, 'raise parameter', BaseException)

            if more_types_in_union_396640:
                # SSA join for if statement (line 445)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 447)
        # Getting the type of 'M_matvec' (line 447)
        M_matvec_396645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 15), 'M_matvec')
        # Getting the type of 'None' (line 447)
        None_396646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 27), 'None')
        
        (may_be_396647, more_types_in_union_396648) = may_be_none(M_matvec_396645, None_396646)

        if may_be_396647:

            if more_types_in_union_396648:
                # Runtime conditional SSA (line 447)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 448)
            # Processing the call arguments (line 448)
            str_396650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 33), 'str', 'M_matvec must be specified for mode=2')
            # Processing the call keyword arguments (line 448)
            kwargs_396651 = {}
            # Getting the type of 'ValueError' (line 448)
            ValueError_396649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 448)
            ValueError_call_result_396652 = invoke(stypy.reporting.localization.Localization(__file__, 448, 22), ValueError_396649, *[str_396650], **kwargs_396651)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 448, 16), ValueError_call_result_396652, 'raise parameter', BaseException)

            if more_types_in_union_396648:
                # SSA join for if statement (line 447)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 449)
        # Getting the type of 'Minv_matvec' (line 449)
        Minv_matvec_396653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 15), 'Minv_matvec')
        # Getting the type of 'None' (line 449)
        None_396654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 30), 'None')
        
        (may_be_396655, more_types_in_union_396656) = may_be_none(Minv_matvec_396653, None_396654)

        if may_be_396655:

            if more_types_in_union_396656:
                # Runtime conditional SSA (line 449)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 450)
            # Processing the call arguments (line 450)
            str_396658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 33), 'str', 'Minv_matvec must be specified for mode=2')
            # Processing the call keyword arguments (line 450)
            kwargs_396659 = {}
            # Getting the type of 'ValueError' (line 450)
            ValueError_396657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 450)
            ValueError_call_result_396660 = invoke(stypy.reporting.localization.Localization(__file__, 450, 22), ValueError_396657, *[str_396658], **kwargs_396659)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 450, 16), ValueError_call_result_396660, 'raise parameter', BaseException)

            if more_types_in_union_396656:
                # SSA join for if statement (line 449)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Lambda to a Attribute (line 452):
        
        # Assigning a Lambda to a Attribute (line 452):

        @norecursion
        def _stypy_temp_lambda_204(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_204'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_204', 452, 22, True)
            # Passed parameters checking function
            _stypy_temp_lambda_204.stypy_localization = localization
            _stypy_temp_lambda_204.stypy_type_of_self = None
            _stypy_temp_lambda_204.stypy_type_store = module_type_store
            _stypy_temp_lambda_204.stypy_function_name = '_stypy_temp_lambda_204'
            _stypy_temp_lambda_204.stypy_param_names_list = ['x']
            _stypy_temp_lambda_204.stypy_varargs_param_name = None
            _stypy_temp_lambda_204.stypy_kwargs_param_name = None
            _stypy_temp_lambda_204.stypy_call_defaults = defaults
            _stypy_temp_lambda_204.stypy_call_varargs = varargs
            _stypy_temp_lambda_204.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_204', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_204', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to Minv_matvec(...): (line 452)
            # Processing the call arguments (line 452)
            
            # Call to matvec(...): (line 452)
            # Processing the call arguments (line 452)
            # Getting the type of 'x' (line 452)
            x_396663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 51), 'x', False)
            # Processing the call keyword arguments (line 452)
            kwargs_396664 = {}
            # Getting the type of 'matvec' (line 452)
            matvec_396662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 44), 'matvec', False)
            # Calling matvec(args, kwargs) (line 452)
            matvec_call_result_396665 = invoke(stypy.reporting.localization.Localization(__file__, 452, 44), matvec_396662, *[x_396663], **kwargs_396664)
            
            # Processing the call keyword arguments (line 452)
            kwargs_396666 = {}
            # Getting the type of 'Minv_matvec' (line 452)
            Minv_matvec_396661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 32), 'Minv_matvec', False)
            # Calling Minv_matvec(args, kwargs) (line 452)
            Minv_matvec_call_result_396667 = invoke(stypy.reporting.localization.Localization(__file__, 452, 32), Minv_matvec_396661, *[matvec_call_result_396665], **kwargs_396666)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 452)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 22), 'stypy_return_type', Minv_matvec_call_result_396667)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_204' in the type store
            # Getting the type of 'stypy_return_type' (line 452)
            stypy_return_type_396668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 22), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_396668)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_204'
            return stypy_return_type_396668

        # Assigning a type to the variable '_stypy_temp_lambda_204' (line 452)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 22), '_stypy_temp_lambda_204', _stypy_temp_lambda_204)
        # Getting the type of '_stypy_temp_lambda_204' (line 452)
        _stypy_temp_lambda_204_396669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 22), '_stypy_temp_lambda_204')
        # Getting the type of 'self' (line 452)
        self_396670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 12), 'self')
        # Setting the type of the member 'OP' of a type (line 452)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 12), self_396670, 'OP', _stypy_temp_lambda_204_396669)
        
        # Assigning a Name to a Attribute (line 453):
        
        # Assigning a Name to a Attribute (line 453):
        # Getting the type of 'Minv_matvec' (line 453)
        Minv_matvec_396671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 23), 'Minv_matvec')
        # Getting the type of 'self' (line 453)
        self_396672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 12), 'self')
        # Setting the type of the member 'OPa' of a type (line 453)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 12), self_396672, 'OPa', Minv_matvec_396671)
        
        # Assigning a Name to a Attribute (line 454):
        
        # Assigning a Name to a Attribute (line 454):
        # Getting the type of 'matvec' (line 454)
        matvec_396673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 23), 'matvec')
        # Getting the type of 'self' (line 454)
        self_396674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 12), 'self')
        # Setting the type of the member 'OPb' of a type (line 454)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 454, 12), self_396674, 'OPb', matvec_396673)
        
        # Assigning a Name to a Attribute (line 455):
        
        # Assigning a Name to a Attribute (line 455):
        # Getting the type of 'M_matvec' (line 455)
        M_matvec_396675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 21), 'M_matvec')
        # Getting the type of 'self' (line 455)
        self_396676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 12), 'self')
        # Setting the type of the member 'B' of a type (line 455)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 12), self_396676, 'B', M_matvec_396675)
        
        # Assigning a Str to a Attribute (line 456):
        
        # Assigning a Str to a Attribute (line 456):
        str_396677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 24), 'str', 'G')
        # Getting the type of 'self' (line 456)
        self_396678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 12), 'self')
        # Setting the type of the member 'bmat' of a type (line 456)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 12), self_396678, 'bmat', str_396677)
        # SSA branch for the else part of an if statement (line 444)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 457)
        mode_396679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 13), 'mode')
        int_396680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 21), 'int')
        # Applying the binary operator '==' (line 457)
        result_eq_396681 = python_operator(stypy.reporting.localization.Localization(__file__, 457, 13), '==', mode_396679, int_396680)
        
        # Testing the type of an if condition (line 457)
        if_condition_396682 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 457, 13), result_eq_396681)
        # Assigning a type to the variable 'if_condition_396682' (line 457)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 457, 13), 'if_condition_396682', if_condition_396682)
        # SSA begins for if statement (line 457)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 458)
        # Getting the type of 'matvec' (line 458)
        matvec_396683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'matvec')
        # Getting the type of 'None' (line 458)
        None_396684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 29), 'None')
        
        (may_be_396685, more_types_in_union_396686) = may_not_be_none(matvec_396683, None_396684)

        if may_be_396685:

            if more_types_in_union_396686:
                # Runtime conditional SSA (line 458)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 459)
            # Processing the call arguments (line 459)
            str_396688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 33), 'str', 'matvec must not be specified for mode=3')
            # Processing the call keyword arguments (line 459)
            kwargs_396689 = {}
            # Getting the type of 'ValueError' (line 459)
            ValueError_396687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 459)
            ValueError_call_result_396690 = invoke(stypy.reporting.localization.Localization(__file__, 459, 22), ValueError_396687, *[str_396688], **kwargs_396689)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 459, 16), ValueError_call_result_396690, 'raise parameter', BaseException)

            if more_types_in_union_396686:
                # SSA join for if statement (line 458)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 460)
        # Getting the type of 'Minv_matvec' (line 460)
        Minv_matvec_396691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 15), 'Minv_matvec')
        # Getting the type of 'None' (line 460)
        None_396692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 30), 'None')
        
        (may_be_396693, more_types_in_union_396694) = may_be_none(Minv_matvec_396691, None_396692)

        if may_be_396693:

            if more_types_in_union_396694:
                # Runtime conditional SSA (line 460)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 461)
            # Processing the call arguments (line 461)
            str_396696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 33), 'str', 'Minv_matvec must be specified for mode=3')
            # Processing the call keyword arguments (line 461)
            kwargs_396697 = {}
            # Getting the type of 'ValueError' (line 461)
            ValueError_396695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 461)
            ValueError_call_result_396698 = invoke(stypy.reporting.localization.Localization(__file__, 461, 22), ValueError_396695, *[str_396696], **kwargs_396697)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 461, 16), ValueError_call_result_396698, 'raise parameter', BaseException)

            if more_types_in_union_396694:
                # SSA join for if statement (line 460)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 463)
        # Getting the type of 'M_matvec' (line 463)
        M_matvec_396699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 15), 'M_matvec')
        # Getting the type of 'None' (line 463)
        None_396700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 27), 'None')
        
        (may_be_396701, more_types_in_union_396702) = may_be_none(M_matvec_396699, None_396700)

        if may_be_396701:

            if more_types_in_union_396702:
                # Runtime conditional SSA (line 463)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Attribute (line 464):
            
            # Assigning a Name to a Attribute (line 464):
            # Getting the type of 'Minv_matvec' (line 464)
            Minv_matvec_396703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 26), 'Minv_matvec')
            # Getting the type of 'self' (line 464)
            self_396704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 16), 'self')
            # Setting the type of the member 'OP' of a type (line 464)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 464, 16), self_396704, 'OP', Minv_matvec_396703)
            
            # Assigning a Name to a Attribute (line 465):
            
            # Assigning a Name to a Attribute (line 465):
            # Getting the type of 'Minv_matvec' (line 465)
            Minv_matvec_396705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 27), 'Minv_matvec')
            # Getting the type of 'self' (line 465)
            self_396706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 16), 'self')
            # Setting the type of the member 'OPa' of a type (line 465)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 16), self_396706, 'OPa', Minv_matvec_396705)
            
            # Assigning a Lambda to a Attribute (line 466):
            
            # Assigning a Lambda to a Attribute (line 466):

            @norecursion
            def _stypy_temp_lambda_205(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_205'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_205', 466, 25, True)
                # Passed parameters checking function
                _stypy_temp_lambda_205.stypy_localization = localization
                _stypy_temp_lambda_205.stypy_type_of_self = None
                _stypy_temp_lambda_205.stypy_type_store = module_type_store
                _stypy_temp_lambda_205.stypy_function_name = '_stypy_temp_lambda_205'
                _stypy_temp_lambda_205.stypy_param_names_list = ['x']
                _stypy_temp_lambda_205.stypy_varargs_param_name = None
                _stypy_temp_lambda_205.stypy_kwargs_param_name = None
                _stypy_temp_lambda_205.stypy_call_defaults = defaults
                _stypy_temp_lambda_205.stypy_call_varargs = varargs
                _stypy_temp_lambda_205.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_205', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_205', ['x'], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                # Getting the type of 'x' (line 466)
                x_396707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 35), 'x')
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 466)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 25), 'stypy_return_type', x_396707)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_205' in the type store
                # Getting the type of 'stypy_return_type' (line 466)
                stypy_return_type_396708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 25), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_396708)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_205'
                return stypy_return_type_396708

            # Assigning a type to the variable '_stypy_temp_lambda_205' (line 466)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 25), '_stypy_temp_lambda_205', _stypy_temp_lambda_205)
            # Getting the type of '_stypy_temp_lambda_205' (line 466)
            _stypy_temp_lambda_205_396709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 25), '_stypy_temp_lambda_205')
            # Getting the type of 'self' (line 466)
            self_396710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 16), 'self')
            # Setting the type of the member 'B' of a type (line 466)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 16), self_396710, 'B', _stypy_temp_lambda_205_396709)
            
            # Assigning a Str to a Attribute (line 467):
            
            # Assigning a Str to a Attribute (line 467):
            str_396711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 28), 'str', 'I')
            # Getting the type of 'self' (line 467)
            self_396712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 16), 'self')
            # Setting the type of the member 'bmat' of a type (line 467)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 16), self_396712, 'bmat', str_396711)

            if more_types_in_union_396702:
                # Runtime conditional SSA for else branch (line 463)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_396701) or more_types_in_union_396702):
            
            # Assigning a Lambda to a Attribute (line 469):
            
            # Assigning a Lambda to a Attribute (line 469):

            @norecursion
            def _stypy_temp_lambda_206(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_206'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_206', 469, 26, True)
                # Passed parameters checking function
                _stypy_temp_lambda_206.stypy_localization = localization
                _stypy_temp_lambda_206.stypy_type_of_self = None
                _stypy_temp_lambda_206.stypy_type_store = module_type_store
                _stypy_temp_lambda_206.stypy_function_name = '_stypy_temp_lambda_206'
                _stypy_temp_lambda_206.stypy_param_names_list = ['x']
                _stypy_temp_lambda_206.stypy_varargs_param_name = None
                _stypy_temp_lambda_206.stypy_kwargs_param_name = None
                _stypy_temp_lambda_206.stypy_call_defaults = defaults
                _stypy_temp_lambda_206.stypy_call_varargs = varargs
                _stypy_temp_lambda_206.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_206', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_206', ['x'], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                
                # Call to Minv_matvec(...): (line 469)
                # Processing the call arguments (line 469)
                
                # Call to M_matvec(...): (line 469)
                # Processing the call arguments (line 469)
                # Getting the type of 'x' (line 469)
                x_396715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 57), 'x', False)
                # Processing the call keyword arguments (line 469)
                kwargs_396716 = {}
                # Getting the type of 'M_matvec' (line 469)
                M_matvec_396714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 48), 'M_matvec', False)
                # Calling M_matvec(args, kwargs) (line 469)
                M_matvec_call_result_396717 = invoke(stypy.reporting.localization.Localization(__file__, 469, 48), M_matvec_396714, *[x_396715], **kwargs_396716)
                
                # Processing the call keyword arguments (line 469)
                kwargs_396718 = {}
                # Getting the type of 'Minv_matvec' (line 469)
                Minv_matvec_396713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 36), 'Minv_matvec', False)
                # Calling Minv_matvec(args, kwargs) (line 469)
                Minv_matvec_call_result_396719 = invoke(stypy.reporting.localization.Localization(__file__, 469, 36), Minv_matvec_396713, *[M_matvec_call_result_396717], **kwargs_396718)
                
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 469)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 469, 26), 'stypy_return_type', Minv_matvec_call_result_396719)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_206' in the type store
                # Getting the type of 'stypy_return_type' (line 469)
                stypy_return_type_396720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 26), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_396720)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_206'
                return stypy_return_type_396720

            # Assigning a type to the variable '_stypy_temp_lambda_206' (line 469)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 469, 26), '_stypy_temp_lambda_206', _stypy_temp_lambda_206)
            # Getting the type of '_stypy_temp_lambda_206' (line 469)
            _stypy_temp_lambda_206_396721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 26), '_stypy_temp_lambda_206')
            # Getting the type of 'self' (line 469)
            self_396722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 16), 'self')
            # Setting the type of the member 'OP' of a type (line 469)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 16), self_396722, 'OP', _stypy_temp_lambda_206_396721)
            
            # Assigning a Name to a Attribute (line 470):
            
            # Assigning a Name to a Attribute (line 470):
            # Getting the type of 'Minv_matvec' (line 470)
            Minv_matvec_396723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 27), 'Minv_matvec')
            # Getting the type of 'self' (line 470)
            self_396724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 16), 'self')
            # Setting the type of the member 'OPa' of a type (line 470)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 16), self_396724, 'OPa', Minv_matvec_396723)
            
            # Assigning a Name to a Attribute (line 471):
            
            # Assigning a Name to a Attribute (line 471):
            # Getting the type of 'M_matvec' (line 471)
            M_matvec_396725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 25), 'M_matvec')
            # Getting the type of 'self' (line 471)
            self_396726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 16), 'self')
            # Setting the type of the member 'B' of a type (line 471)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 16), self_396726, 'B', M_matvec_396725)
            
            # Assigning a Str to a Attribute (line 472):
            
            # Assigning a Str to a Attribute (line 472):
            str_396727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 28), 'str', 'G')
            # Getting the type of 'self' (line 472)
            self_396728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'self')
            # Setting the type of the member 'bmat' of a type (line 472)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 16), self_396728, 'bmat', str_396727)

            if (may_be_396701 and more_types_in_union_396702):
                # SSA join for if statement (line 463)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA branch for the else part of an if statement (line 457)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 473)
        mode_396729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 13), 'mode')
        int_396730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 21), 'int')
        # Applying the binary operator '==' (line 473)
        result_eq_396731 = python_operator(stypy.reporting.localization.Localization(__file__, 473, 13), '==', mode_396729, int_396730)
        
        # Testing the type of an if condition (line 473)
        if_condition_396732 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 473, 13), result_eq_396731)
        # Assigning a type to the variable 'if_condition_396732' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 13), 'if_condition_396732', if_condition_396732)
        # SSA begins for if statement (line 473)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 474)
        # Getting the type of 'matvec' (line 474)
        matvec_396733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 15), 'matvec')
        # Getting the type of 'None' (line 474)
        None_396734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 25), 'None')
        
        (may_be_396735, more_types_in_union_396736) = may_be_none(matvec_396733, None_396734)

        if may_be_396735:

            if more_types_in_union_396736:
                # Runtime conditional SSA (line 474)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 475)
            # Processing the call arguments (line 475)
            str_396738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 33), 'str', 'matvec must be specified for mode=4')
            # Processing the call keyword arguments (line 475)
            kwargs_396739 = {}
            # Getting the type of 'ValueError' (line 475)
            ValueError_396737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 475)
            ValueError_call_result_396740 = invoke(stypy.reporting.localization.Localization(__file__, 475, 22), ValueError_396737, *[str_396738], **kwargs_396739)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 475, 16), ValueError_call_result_396740, 'raise parameter', BaseException)

            if more_types_in_union_396736:
                # SSA join for if statement (line 474)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 476)
        # Getting the type of 'M_matvec' (line 476)
        M_matvec_396741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 12), 'M_matvec')
        # Getting the type of 'None' (line 476)
        None_396742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 31), 'None')
        
        (may_be_396743, more_types_in_union_396744) = may_not_be_none(M_matvec_396741, None_396742)

        if may_be_396743:

            if more_types_in_union_396744:
                # Runtime conditional SSA (line 476)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 477)
            # Processing the call arguments (line 477)
            str_396746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 477, 33), 'str', 'M_matvec must not be specified for mode=4')
            # Processing the call keyword arguments (line 477)
            kwargs_396747 = {}
            # Getting the type of 'ValueError' (line 477)
            ValueError_396745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 477)
            ValueError_call_result_396748 = invoke(stypy.reporting.localization.Localization(__file__, 477, 22), ValueError_396745, *[str_396746], **kwargs_396747)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 477, 16), ValueError_call_result_396748, 'raise parameter', BaseException)

            if more_types_in_union_396744:
                # SSA join for if statement (line 476)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 478)
        # Getting the type of 'Minv_matvec' (line 478)
        Minv_matvec_396749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 15), 'Minv_matvec')
        # Getting the type of 'None' (line 478)
        None_396750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 30), 'None')
        
        (may_be_396751, more_types_in_union_396752) = may_be_none(Minv_matvec_396749, None_396750)

        if may_be_396751:

            if more_types_in_union_396752:
                # Runtime conditional SSA (line 478)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 479)
            # Processing the call arguments (line 479)
            str_396754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 33), 'str', 'Minv_matvec must be specified for mode=4')
            # Processing the call keyword arguments (line 479)
            kwargs_396755 = {}
            # Getting the type of 'ValueError' (line 479)
            ValueError_396753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 479)
            ValueError_call_result_396756 = invoke(stypy.reporting.localization.Localization(__file__, 479, 22), ValueError_396753, *[str_396754], **kwargs_396755)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 479, 16), ValueError_call_result_396756, 'raise parameter', BaseException)

            if more_types_in_union_396752:
                # SSA join for if statement (line 478)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 480):
        
        # Assigning a Name to a Attribute (line 480):
        # Getting the type of 'Minv_matvec' (line 480)
        Minv_matvec_396757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 23), 'Minv_matvec')
        # Getting the type of 'self' (line 480)
        self_396758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 12), 'self')
        # Setting the type of the member 'OPa' of a type (line 480)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 12), self_396758, 'OPa', Minv_matvec_396757)
        
        # Assigning a Lambda to a Attribute (line 481):
        
        # Assigning a Lambda to a Attribute (line 481):

        @norecursion
        def _stypy_temp_lambda_207(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_207'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_207', 481, 22, True)
            # Passed parameters checking function
            _stypy_temp_lambda_207.stypy_localization = localization
            _stypy_temp_lambda_207.stypy_type_of_self = None
            _stypy_temp_lambda_207.stypy_type_store = module_type_store
            _stypy_temp_lambda_207.stypy_function_name = '_stypy_temp_lambda_207'
            _stypy_temp_lambda_207.stypy_param_names_list = ['x']
            _stypy_temp_lambda_207.stypy_varargs_param_name = None
            _stypy_temp_lambda_207.stypy_kwargs_param_name = None
            _stypy_temp_lambda_207.stypy_call_defaults = defaults
            _stypy_temp_lambda_207.stypy_call_varargs = varargs
            _stypy_temp_lambda_207.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_207', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_207', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to OPa(...): (line 481)
            # Processing the call arguments (line 481)
            
            # Call to matvec(...): (line 481)
            # Processing the call arguments (line 481)
            # Getting the type of 'x' (line 481)
            x_396762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 48), 'x', False)
            # Processing the call keyword arguments (line 481)
            kwargs_396763 = {}
            # Getting the type of 'matvec' (line 481)
            matvec_396761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 41), 'matvec', False)
            # Calling matvec(args, kwargs) (line 481)
            matvec_call_result_396764 = invoke(stypy.reporting.localization.Localization(__file__, 481, 41), matvec_396761, *[x_396762], **kwargs_396763)
            
            # Processing the call keyword arguments (line 481)
            kwargs_396765 = {}
            # Getting the type of 'self' (line 481)
            self_396759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 32), 'self', False)
            # Obtaining the member 'OPa' of a type (line 481)
            OPa_396760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 32), self_396759, 'OPa')
            # Calling OPa(args, kwargs) (line 481)
            OPa_call_result_396766 = invoke(stypy.reporting.localization.Localization(__file__, 481, 32), OPa_396760, *[matvec_call_result_396764], **kwargs_396765)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 481)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 22), 'stypy_return_type', OPa_call_result_396766)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_207' in the type store
            # Getting the type of 'stypy_return_type' (line 481)
            stypy_return_type_396767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 22), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_396767)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_207'
            return stypy_return_type_396767

        # Assigning a type to the variable '_stypy_temp_lambda_207' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 22), '_stypy_temp_lambda_207', _stypy_temp_lambda_207)
        # Getting the type of '_stypy_temp_lambda_207' (line 481)
        _stypy_temp_lambda_207_396768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 22), '_stypy_temp_lambda_207')
        # Getting the type of 'self' (line 481)
        self_396769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 12), 'self')
        # Setting the type of the member 'OP' of a type (line 481)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 12), self_396769, 'OP', _stypy_temp_lambda_207_396768)
        
        # Assigning a Name to a Attribute (line 482):
        
        # Assigning a Name to a Attribute (line 482):
        # Getting the type of 'matvec' (line 482)
        matvec_396770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 21), 'matvec')
        # Getting the type of 'self' (line 482)
        self_396771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'self')
        # Setting the type of the member 'B' of a type (line 482)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 482, 12), self_396771, 'B', matvec_396770)
        
        # Assigning a Str to a Attribute (line 483):
        
        # Assigning a Str to a Attribute (line 483):
        str_396772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 483, 24), 'str', 'G')
        # Getting the type of 'self' (line 483)
        self_396773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 12), 'self')
        # Setting the type of the member 'bmat' of a type (line 483)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 12), self_396773, 'bmat', str_396772)
        # SSA branch for the else part of an if statement (line 473)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 484)
        mode_396774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 13), 'mode')
        int_396775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 484, 21), 'int')
        # Applying the binary operator '==' (line 484)
        result_eq_396776 = python_operator(stypy.reporting.localization.Localization(__file__, 484, 13), '==', mode_396774, int_396775)
        
        # Testing the type of an if condition (line 484)
        if_condition_396777 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 484, 13), result_eq_396776)
        # Assigning a type to the variable 'if_condition_396777' (line 484)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 13), 'if_condition_396777', if_condition_396777)
        # SSA begins for if statement (line 484)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 485)
        # Getting the type of 'matvec' (line 485)
        matvec_396778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 15), 'matvec')
        # Getting the type of 'None' (line 485)
        None_396779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 25), 'None')
        
        (may_be_396780, more_types_in_union_396781) = may_be_none(matvec_396778, None_396779)

        if may_be_396780:

            if more_types_in_union_396781:
                # Runtime conditional SSA (line 485)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 486)
            # Processing the call arguments (line 486)
            str_396783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 33), 'str', 'matvec must be specified for mode=5')
            # Processing the call keyword arguments (line 486)
            kwargs_396784 = {}
            # Getting the type of 'ValueError' (line 486)
            ValueError_396782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 486)
            ValueError_call_result_396785 = invoke(stypy.reporting.localization.Localization(__file__, 486, 22), ValueError_396782, *[str_396783], **kwargs_396784)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 486, 16), ValueError_call_result_396785, 'raise parameter', BaseException)

            if more_types_in_union_396781:
                # SSA join for if statement (line 485)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 487)
        # Getting the type of 'Minv_matvec' (line 487)
        Minv_matvec_396786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 15), 'Minv_matvec')
        # Getting the type of 'None' (line 487)
        None_396787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 30), 'None')
        
        (may_be_396788, more_types_in_union_396789) = may_be_none(Minv_matvec_396786, None_396787)

        if may_be_396788:

            if more_types_in_union_396789:
                # Runtime conditional SSA (line 487)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 488)
            # Processing the call arguments (line 488)
            str_396791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 33), 'str', 'Minv_matvec must be specified for mode=5')
            # Processing the call keyword arguments (line 488)
            kwargs_396792 = {}
            # Getting the type of 'ValueError' (line 488)
            ValueError_396790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 488)
            ValueError_call_result_396793 = invoke(stypy.reporting.localization.Localization(__file__, 488, 22), ValueError_396790, *[str_396791], **kwargs_396792)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 488, 16), ValueError_call_result_396793, 'raise parameter', BaseException)

            if more_types_in_union_396789:
                # SSA join for if statement (line 487)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 490):
        
        # Assigning a Name to a Attribute (line 490):
        # Getting the type of 'Minv_matvec' (line 490)
        Minv_matvec_396794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 23), 'Minv_matvec')
        # Getting the type of 'self' (line 490)
        self_396795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 12), 'self')
        # Setting the type of the member 'OPa' of a type (line 490)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 12), self_396795, 'OPa', Minv_matvec_396794)
        
        # Assigning a Name to a Attribute (line 491):
        
        # Assigning a Name to a Attribute (line 491):
        # Getting the type of 'matvec' (line 491)
        matvec_396796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 28), 'matvec')
        # Getting the type of 'self' (line 491)
        self_396797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 12), 'self')
        # Setting the type of the member 'A_matvec' of a type (line 491)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 12), self_396797, 'A_matvec', matvec_396796)
        
        # Type idiom detected: calculating its left and rigth part (line 493)
        # Getting the type of 'M_matvec' (line 493)
        M_matvec_396798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 15), 'M_matvec')
        # Getting the type of 'None' (line 493)
        None_396799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 27), 'None')
        
        (may_be_396800, more_types_in_union_396801) = may_be_none(M_matvec_396798, None_396799)

        if may_be_396800:

            if more_types_in_union_396801:
                # Runtime conditional SSA (line 493)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Lambda to a Attribute (line 494):
            
            # Assigning a Lambda to a Attribute (line 494):

            @norecursion
            def _stypy_temp_lambda_208(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_208'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_208', 494, 26, True)
                # Passed parameters checking function
                _stypy_temp_lambda_208.stypy_localization = localization
                _stypy_temp_lambda_208.stypy_type_of_self = None
                _stypy_temp_lambda_208.stypy_type_store = module_type_store
                _stypy_temp_lambda_208.stypy_function_name = '_stypy_temp_lambda_208'
                _stypy_temp_lambda_208.stypy_param_names_list = ['x']
                _stypy_temp_lambda_208.stypy_varargs_param_name = None
                _stypy_temp_lambda_208.stypy_kwargs_param_name = None
                _stypy_temp_lambda_208.stypy_call_defaults = defaults
                _stypy_temp_lambda_208.stypy_call_varargs = varargs
                _stypy_temp_lambda_208.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_208', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_208', ['x'], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                
                # Call to Minv_matvec(...): (line 494)
                # Processing the call arguments (line 494)
                
                # Call to matvec(...): (line 494)
                # Processing the call arguments (line 494)
                # Getting the type of 'x' (line 494)
                x_396804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 55), 'x', False)
                # Processing the call keyword arguments (line 494)
                kwargs_396805 = {}
                # Getting the type of 'matvec' (line 494)
                matvec_396803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 48), 'matvec', False)
                # Calling matvec(args, kwargs) (line 494)
                matvec_call_result_396806 = invoke(stypy.reporting.localization.Localization(__file__, 494, 48), matvec_396803, *[x_396804], **kwargs_396805)
                
                # Getting the type of 'sigma' (line 494)
                sigma_396807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 60), 'sigma', False)
                # Getting the type of 'x' (line 494)
                x_396808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 68), 'x', False)
                # Applying the binary operator '*' (line 494)
                result_mul_396809 = python_operator(stypy.reporting.localization.Localization(__file__, 494, 60), '*', sigma_396807, x_396808)
                
                # Applying the binary operator '+' (line 494)
                result_add_396810 = python_operator(stypy.reporting.localization.Localization(__file__, 494, 48), '+', matvec_call_result_396806, result_mul_396809)
                
                # Processing the call keyword arguments (line 494)
                kwargs_396811 = {}
                # Getting the type of 'Minv_matvec' (line 494)
                Minv_matvec_396802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 36), 'Minv_matvec', False)
                # Calling Minv_matvec(args, kwargs) (line 494)
                Minv_matvec_call_result_396812 = invoke(stypy.reporting.localization.Localization(__file__, 494, 36), Minv_matvec_396802, *[result_add_396810], **kwargs_396811)
                
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 494)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 26), 'stypy_return_type', Minv_matvec_call_result_396812)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_208' in the type store
                # Getting the type of 'stypy_return_type' (line 494)
                stypy_return_type_396813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 26), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_396813)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_208'
                return stypy_return_type_396813

            # Assigning a type to the variable '_stypy_temp_lambda_208' (line 494)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 26), '_stypy_temp_lambda_208', _stypy_temp_lambda_208)
            # Getting the type of '_stypy_temp_lambda_208' (line 494)
            _stypy_temp_lambda_208_396814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 26), '_stypy_temp_lambda_208')
            # Getting the type of 'self' (line 494)
            self_396815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 16), 'self')
            # Setting the type of the member 'OP' of a type (line 494)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 16), self_396815, 'OP', _stypy_temp_lambda_208_396814)
            
            # Assigning a Lambda to a Attribute (line 495):
            
            # Assigning a Lambda to a Attribute (line 495):

            @norecursion
            def _stypy_temp_lambda_209(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_209'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_209', 495, 25, True)
                # Passed parameters checking function
                _stypy_temp_lambda_209.stypy_localization = localization
                _stypy_temp_lambda_209.stypy_type_of_self = None
                _stypy_temp_lambda_209.stypy_type_store = module_type_store
                _stypy_temp_lambda_209.stypy_function_name = '_stypy_temp_lambda_209'
                _stypy_temp_lambda_209.stypy_param_names_list = ['x']
                _stypy_temp_lambda_209.stypy_varargs_param_name = None
                _stypy_temp_lambda_209.stypy_kwargs_param_name = None
                _stypy_temp_lambda_209.stypy_call_defaults = defaults
                _stypy_temp_lambda_209.stypy_call_varargs = varargs
                _stypy_temp_lambda_209.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_209', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_209', ['x'], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                # Getting the type of 'x' (line 495)
                x_396816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 35), 'x')
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 495)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 495, 25), 'stypy_return_type', x_396816)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_209' in the type store
                # Getting the type of 'stypy_return_type' (line 495)
                stypy_return_type_396817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 25), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_396817)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_209'
                return stypy_return_type_396817

            # Assigning a type to the variable '_stypy_temp_lambda_209' (line 495)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 495, 25), '_stypy_temp_lambda_209', _stypy_temp_lambda_209)
            # Getting the type of '_stypy_temp_lambda_209' (line 495)
            _stypy_temp_lambda_209_396818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 25), '_stypy_temp_lambda_209')
            # Getting the type of 'self' (line 495)
            self_396819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 16), 'self')
            # Setting the type of the member 'B' of a type (line 495)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 16), self_396819, 'B', _stypy_temp_lambda_209_396818)
            
            # Assigning a Str to a Attribute (line 496):
            
            # Assigning a Str to a Attribute (line 496):
            str_396820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 28), 'str', 'I')
            # Getting the type of 'self' (line 496)
            self_396821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 16), 'self')
            # Setting the type of the member 'bmat' of a type (line 496)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 16), self_396821, 'bmat', str_396820)

            if more_types_in_union_396801:
                # Runtime conditional SSA for else branch (line 493)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_396800) or more_types_in_union_396801):
            
            # Assigning a Lambda to a Attribute (line 498):
            
            # Assigning a Lambda to a Attribute (line 498):

            @norecursion
            def _stypy_temp_lambda_210(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_210'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_210', 498, 26, True)
                # Passed parameters checking function
                _stypy_temp_lambda_210.stypy_localization = localization
                _stypy_temp_lambda_210.stypy_type_of_self = None
                _stypy_temp_lambda_210.stypy_type_store = module_type_store
                _stypy_temp_lambda_210.stypy_function_name = '_stypy_temp_lambda_210'
                _stypy_temp_lambda_210.stypy_param_names_list = ['x']
                _stypy_temp_lambda_210.stypy_varargs_param_name = None
                _stypy_temp_lambda_210.stypy_kwargs_param_name = None
                _stypy_temp_lambda_210.stypy_call_defaults = defaults
                _stypy_temp_lambda_210.stypy_call_varargs = varargs
                _stypy_temp_lambda_210.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_210', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_210', ['x'], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                
                # Call to Minv_matvec(...): (line 498)
                # Processing the call arguments (line 498)
                
                # Call to matvec(...): (line 498)
                # Processing the call arguments (line 498)
                # Getting the type of 'x' (line 498)
                x_396824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 55), 'x', False)
                # Processing the call keyword arguments (line 498)
                kwargs_396825 = {}
                # Getting the type of 'matvec' (line 498)
                matvec_396823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 48), 'matvec', False)
                # Calling matvec(args, kwargs) (line 498)
                matvec_call_result_396826 = invoke(stypy.reporting.localization.Localization(__file__, 498, 48), matvec_396823, *[x_396824], **kwargs_396825)
                
                # Getting the type of 'sigma' (line 499)
                sigma_396827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 50), 'sigma', False)
                
                # Call to M_matvec(...): (line 499)
                # Processing the call arguments (line 499)
                # Getting the type of 'x' (line 499)
                x_396829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 67), 'x', False)
                # Processing the call keyword arguments (line 499)
                kwargs_396830 = {}
                # Getting the type of 'M_matvec' (line 499)
                M_matvec_396828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 58), 'M_matvec', False)
                # Calling M_matvec(args, kwargs) (line 499)
                M_matvec_call_result_396831 = invoke(stypy.reporting.localization.Localization(__file__, 499, 58), M_matvec_396828, *[x_396829], **kwargs_396830)
                
                # Applying the binary operator '*' (line 499)
                result_mul_396832 = python_operator(stypy.reporting.localization.Localization(__file__, 499, 50), '*', sigma_396827, M_matvec_call_result_396831)
                
                # Applying the binary operator '+' (line 498)
                result_add_396833 = python_operator(stypy.reporting.localization.Localization(__file__, 498, 48), '+', matvec_call_result_396826, result_mul_396832)
                
                # Processing the call keyword arguments (line 498)
                kwargs_396834 = {}
                # Getting the type of 'Minv_matvec' (line 498)
                Minv_matvec_396822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 36), 'Minv_matvec', False)
                # Calling Minv_matvec(args, kwargs) (line 498)
                Minv_matvec_call_result_396835 = invoke(stypy.reporting.localization.Localization(__file__, 498, 36), Minv_matvec_396822, *[result_add_396833], **kwargs_396834)
                
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 498)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 26), 'stypy_return_type', Minv_matvec_call_result_396835)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_210' in the type store
                # Getting the type of 'stypy_return_type' (line 498)
                stypy_return_type_396836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 26), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_396836)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_210'
                return stypy_return_type_396836

            # Assigning a type to the variable '_stypy_temp_lambda_210' (line 498)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 26), '_stypy_temp_lambda_210', _stypy_temp_lambda_210)
            # Getting the type of '_stypy_temp_lambda_210' (line 498)
            _stypy_temp_lambda_210_396837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 26), '_stypy_temp_lambda_210')
            # Getting the type of 'self' (line 498)
            self_396838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 16), 'self')
            # Setting the type of the member 'OP' of a type (line 498)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 16), self_396838, 'OP', _stypy_temp_lambda_210_396837)
            
            # Assigning a Name to a Attribute (line 500):
            
            # Assigning a Name to a Attribute (line 500):
            # Getting the type of 'M_matvec' (line 500)
            M_matvec_396839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 25), 'M_matvec')
            # Getting the type of 'self' (line 500)
            self_396840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 16), 'self')
            # Setting the type of the member 'B' of a type (line 500)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 16), self_396840, 'B', M_matvec_396839)
            
            # Assigning a Str to a Attribute (line 501):
            
            # Assigning a Str to a Attribute (line 501):
            str_396841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 28), 'str', 'G')
            # Getting the type of 'self' (line 501)
            self_396842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 16), 'self')
            # Setting the type of the member 'bmat' of a type (line 501)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 16), self_396842, 'bmat', str_396841)

            if (may_be_396800 and more_types_in_union_396801):
                # SSA join for if statement (line 493)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA branch for the else part of an if statement (line 484)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 503)
        # Processing the call arguments (line 503)
        str_396844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 29), 'str', 'mode=%i not implemented')
        # Getting the type of 'mode' (line 503)
        mode_396845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 57), 'mode', False)
        # Applying the binary operator '%' (line 503)
        result_mod_396846 = python_operator(stypy.reporting.localization.Localization(__file__, 503, 29), '%', str_396844, mode_396845)
        
        # Processing the call keyword arguments (line 503)
        kwargs_396847 = {}
        # Getting the type of 'ValueError' (line 503)
        ValueError_396843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 503)
        ValueError_call_result_396848 = invoke(stypy.reporting.localization.Localization(__file__, 503, 18), ValueError_396843, *[result_mod_396846], **kwargs_396847)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 503, 12), ValueError_call_result_396848, 'raise parameter', BaseException)
        # SSA join for if statement (line 484)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 473)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 457)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 444)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 433)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'which' (line 505)
        which_396849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 11), 'which')
        # Getting the type of '_SEUPD_WHICH' (line 505)
        _SEUPD_WHICH_396850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 24), '_SEUPD_WHICH')
        # Applying the binary operator 'notin' (line 505)
        result_contains_396851 = python_operator(stypy.reporting.localization.Localization(__file__, 505, 11), 'notin', which_396849, _SEUPD_WHICH_396850)
        
        # Testing the type of an if condition (line 505)
        if_condition_396852 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 505, 8), result_contains_396851)
        # Assigning a type to the variable 'if_condition_396852' (line 505)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 505, 8), 'if_condition_396852', if_condition_396852)
        # SSA begins for if statement (line 505)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 506)
        # Processing the call arguments (line 506)
        str_396854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 29), 'str', 'which must be one of %s')
        
        # Call to join(...): (line 507)
        # Processing the call arguments (line 507)
        # Getting the type of '_SEUPD_WHICH' (line 507)
        _SEUPD_WHICH_396857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 40), '_SEUPD_WHICH', False)
        # Processing the call keyword arguments (line 507)
        kwargs_396858 = {}
        str_396855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 31), 'str', ' ')
        # Obtaining the member 'join' of a type (line 507)
        join_396856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 507, 31), str_396855, 'join')
        # Calling join(args, kwargs) (line 507)
        join_call_result_396859 = invoke(stypy.reporting.localization.Localization(__file__, 507, 31), join_396856, *[_SEUPD_WHICH_396857], **kwargs_396858)
        
        # Applying the binary operator '%' (line 506)
        result_mod_396860 = python_operator(stypy.reporting.localization.Localization(__file__, 506, 29), '%', str_396854, join_call_result_396859)
        
        # Processing the call keyword arguments (line 506)
        kwargs_396861 = {}
        # Getting the type of 'ValueError' (line 506)
        ValueError_396853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 506)
        ValueError_call_result_396862 = invoke(stypy.reporting.localization.Localization(__file__, 506, 18), ValueError_396853, *[result_mod_396860], **kwargs_396861)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 506, 12), ValueError_call_result_396862, 'raise parameter', BaseException)
        # SSA join for if statement (line 505)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'k' (line 508)
        k_396863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 11), 'k')
        # Getting the type of 'n' (line 508)
        n_396864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 16), 'n')
        # Applying the binary operator '>=' (line 508)
        result_ge_396865 = python_operator(stypy.reporting.localization.Localization(__file__, 508, 11), '>=', k_396863, n_396864)
        
        # Testing the type of an if condition (line 508)
        if_condition_396866 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 508, 8), result_ge_396865)
        # Assigning a type to the variable 'if_condition_396866' (line 508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 508, 8), 'if_condition_396866', if_condition_396866)
        # SSA begins for if statement (line 508)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 509)
        # Processing the call arguments (line 509)
        str_396868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 29), 'str', 'k must be less than ndim(A), k=%d')
        # Getting the type of 'k' (line 509)
        k_396869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 67), 'k', False)
        # Applying the binary operator '%' (line 509)
        result_mod_396870 = python_operator(stypy.reporting.localization.Localization(__file__, 509, 29), '%', str_396868, k_396869)
        
        # Processing the call keyword arguments (line 509)
        kwargs_396871 = {}
        # Getting the type of 'ValueError' (line 509)
        ValueError_396867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 509)
        ValueError_call_result_396872 = invoke(stypy.reporting.localization.Localization(__file__, 509, 18), ValueError_396867, *[result_mod_396870], **kwargs_396871)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 509, 12), ValueError_call_result_396872, 'raise parameter', BaseException)
        # SSA join for if statement (line 508)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to __init__(...): (line 511)
        # Processing the call arguments (line 511)
        # Getting the type of 'self' (line 511)
        self_396875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 31), 'self', False)
        # Getting the type of 'n' (line 511)
        n_396876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 37), 'n', False)
        # Getting the type of 'k' (line 511)
        k_396877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 40), 'k', False)
        # Getting the type of 'tp' (line 511)
        tp_396878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 43), 'tp', False)
        # Getting the type of 'mode' (line 511)
        mode_396879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 47), 'mode', False)
        # Getting the type of 'sigma' (line 511)
        sigma_396880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 53), 'sigma', False)
        # Getting the type of 'ncv' (line 512)
        ncv_396881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 31), 'ncv', False)
        # Getting the type of 'v0' (line 512)
        v0_396882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 36), 'v0', False)
        # Getting the type of 'maxiter' (line 512)
        maxiter_396883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 40), 'maxiter', False)
        # Getting the type of 'which' (line 512)
        which_396884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 49), 'which', False)
        # Getting the type of 'tol' (line 512)
        tol_396885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 56), 'tol', False)
        # Processing the call keyword arguments (line 511)
        kwargs_396886 = {}
        # Getting the type of '_ArpackParams' (line 511)
        _ArpackParams_396873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 8), '_ArpackParams', False)
        # Obtaining the member '__init__' of a type (line 511)
        init___396874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 8), _ArpackParams_396873, '__init__')
        # Calling __init__(args, kwargs) (line 511)
        init___call_result_396887 = invoke(stypy.reporting.localization.Localization(__file__, 511, 8), init___396874, *[self_396875, n_396876, k_396877, tp_396878, mode_396879, sigma_396880, ncv_396881, v0_396882, maxiter_396883, which_396884, tol_396885], **kwargs_396886)
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 514)
        self_396888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 11), 'self')
        # Obtaining the member 'ncv' of a type (line 514)
        ncv_396889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 11), self_396888, 'ncv')
        # Getting the type of 'n' (line 514)
        n_396890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 22), 'n')
        # Applying the binary operator '>' (line 514)
        result_gt_396891 = python_operator(stypy.reporting.localization.Localization(__file__, 514, 11), '>', ncv_396889, n_396890)
        
        
        # Getting the type of 'self' (line 514)
        self_396892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 27), 'self')
        # Obtaining the member 'ncv' of a type (line 514)
        ncv_396893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 27), self_396892, 'ncv')
        # Getting the type of 'k' (line 514)
        k_396894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 39), 'k')
        # Applying the binary operator '<=' (line 514)
        result_le_396895 = python_operator(stypy.reporting.localization.Localization(__file__, 514, 27), '<=', ncv_396893, k_396894)
        
        # Applying the binary operator 'or' (line 514)
        result_or_keyword_396896 = python_operator(stypy.reporting.localization.Localization(__file__, 514, 11), 'or', result_gt_396891, result_le_396895)
        
        # Testing the type of an if condition (line 514)
        if_condition_396897 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 514, 8), result_or_keyword_396896)
        # Assigning a type to the variable 'if_condition_396897' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'if_condition_396897', if_condition_396897)
        # SSA begins for if statement (line 514)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 515)
        # Processing the call arguments (line 515)
        str_396899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 29), 'str', 'ncv must be k<ncv<=n, ncv=%s')
        # Getting the type of 'self' (line 515)
        self_396900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 62), 'self', False)
        # Obtaining the member 'ncv' of a type (line 515)
        ncv_396901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 62), self_396900, 'ncv')
        # Applying the binary operator '%' (line 515)
        result_mod_396902 = python_operator(stypy.reporting.localization.Localization(__file__, 515, 29), '%', str_396899, ncv_396901)
        
        # Processing the call keyword arguments (line 515)
        kwargs_396903 = {}
        # Getting the type of 'ValueError' (line 515)
        ValueError_396898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 515)
        ValueError_call_result_396904 = invoke(stypy.reporting.localization.Localization(__file__, 515, 18), ValueError_396898, *[result_mod_396902], **kwargs_396903)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 515, 12), ValueError_call_result_396904, 'raise parameter', BaseException)
        # SSA join for if statement (line 514)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 518):
        
        # Assigning a Call to a Attribute (line 518):
        
        # Call to _aligned_zeros(...): (line 518)
        # Processing the call arguments (line 518)
        int_396906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 36), 'int')
        # Getting the type of 'n' (line 518)
        n_396907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 40), 'n', False)
        # Applying the binary operator '*' (line 518)
        result_mul_396908 = python_operator(stypy.reporting.localization.Localization(__file__, 518, 36), '*', int_396906, n_396907)
        
        # Getting the type of 'self' (line 518)
        self_396909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 43), 'self', False)
        # Obtaining the member 'tp' of a type (line 518)
        tp_396910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 43), self_396909, 'tp')
        # Processing the call keyword arguments (line 518)
        kwargs_396911 = {}
        # Getting the type of '_aligned_zeros' (line 518)
        _aligned_zeros_396905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 21), '_aligned_zeros', False)
        # Calling _aligned_zeros(args, kwargs) (line 518)
        _aligned_zeros_call_result_396912 = invoke(stypy.reporting.localization.Localization(__file__, 518, 21), _aligned_zeros_396905, *[result_mul_396908, tp_396910], **kwargs_396911)
        
        # Getting the type of 'self' (line 518)
        self_396913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'self')
        # Setting the type of the member 'workd' of a type (line 518)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 8), self_396913, 'workd', _aligned_zeros_call_result_396912)
        
        # Assigning a Call to a Attribute (line 519):
        
        # Assigning a Call to a Attribute (line 519):
        
        # Call to _aligned_zeros(...): (line 519)
        # Processing the call arguments (line 519)
        # Getting the type of 'self' (line 519)
        self_396915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 36), 'self', False)
        # Obtaining the member 'ncv' of a type (line 519)
        ncv_396916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 36), self_396915, 'ncv')
        # Getting the type of 'self' (line 519)
        self_396917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 48), 'self', False)
        # Obtaining the member 'ncv' of a type (line 519)
        ncv_396918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 48), self_396917, 'ncv')
        int_396919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 59), 'int')
        # Applying the binary operator '+' (line 519)
        result_add_396920 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 48), '+', ncv_396918, int_396919)
        
        # Applying the binary operator '*' (line 519)
        result_mul_396921 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 36), '*', ncv_396916, result_add_396920)
        
        # Getting the type of 'self' (line 519)
        self_396922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 63), 'self', False)
        # Obtaining the member 'tp' of a type (line 519)
        tp_396923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 63), self_396922, 'tp')
        # Processing the call keyword arguments (line 519)
        kwargs_396924 = {}
        # Getting the type of '_aligned_zeros' (line 519)
        _aligned_zeros_396914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 21), '_aligned_zeros', False)
        # Calling _aligned_zeros(args, kwargs) (line 519)
        _aligned_zeros_call_result_396925 = invoke(stypy.reporting.localization.Localization(__file__, 519, 21), _aligned_zeros_396914, *[result_mul_396921, tp_396923], **kwargs_396924)
        
        # Getting the type of 'self' (line 519)
        self_396926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 8), 'self')
        # Setting the type of the member 'workl' of a type (line 519)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 8), self_396926, 'workl', _aligned_zeros_call_result_396925)
        
        # Assigning a Subscript to a Name (line 521):
        
        # Assigning a Subscript to a Name (line 521):
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 521)
        self_396927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 25), 'self')
        # Obtaining the member 'tp' of a type (line 521)
        tp_396928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 25), self_396927, 'tp')
        # Getting the type of '_type_conv' (line 521)
        _type_conv_396929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 14), '_type_conv')
        # Obtaining the member '__getitem__' of a type (line 521)
        getitem___396930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 14), _type_conv_396929, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 521)
        subscript_call_result_396931 = invoke(stypy.reporting.localization.Localization(__file__, 521, 14), getitem___396930, tp_396928)
        
        # Assigning a type to the variable 'ltr' (line 521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'ltr', subscript_call_result_396931)
        
        
        # Getting the type of 'ltr' (line 522)
        ltr_396932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 11), 'ltr')
        
        # Obtaining an instance of the builtin type 'list' (line 522)
        list_396933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 522)
        # Adding element type (line 522)
        str_396934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 23), 'str', 's')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 22), list_396933, str_396934)
        # Adding element type (line 522)
        str_396935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 28), 'str', 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 22), list_396933, str_396935)
        
        # Applying the binary operator 'notin' (line 522)
        result_contains_396936 = python_operator(stypy.reporting.localization.Localization(__file__, 522, 11), 'notin', ltr_396932, list_396933)
        
        # Testing the type of an if condition (line 522)
        if_condition_396937 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 522, 8), result_contains_396936)
        # Assigning a type to the variable 'if_condition_396937' (line 522)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 8), 'if_condition_396937', if_condition_396937)
        # SSA begins for if statement (line 522)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 523)
        # Processing the call arguments (line 523)
        str_396939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 29), 'str', 'Input matrix is not real-valued.')
        # Processing the call keyword arguments (line 523)
        kwargs_396940 = {}
        # Getting the type of 'ValueError' (line 523)
        ValueError_396938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 523)
        ValueError_call_result_396941 = invoke(stypy.reporting.localization.Localization(__file__, 523, 18), ValueError_396938, *[str_396939], **kwargs_396940)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 523, 12), ValueError_call_result_396941, 'raise parameter', BaseException)
        # SSA join for if statement (line 522)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Attribute (line 525):
        
        # Assigning a Subscript to a Attribute (line 525):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ltr' (line 525)
        ltr_396942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 47), 'ltr')
        str_396943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 53), 'str', 'saupd')
        # Applying the binary operator '+' (line 525)
        result_add_396944 = python_operator(stypy.reporting.localization.Localization(__file__, 525, 47), '+', ltr_396942, str_396943)
        
        # Getting the type of '_arpack' (line 525)
        _arpack_396945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 30), '_arpack')
        # Obtaining the member '__dict__' of a type (line 525)
        dict___396946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 30), _arpack_396945, '__dict__')
        # Obtaining the member '__getitem__' of a type (line 525)
        getitem___396947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 30), dict___396946, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 525)
        subscript_call_result_396948 = invoke(stypy.reporting.localization.Localization(__file__, 525, 30), getitem___396947, result_add_396944)
        
        # Getting the type of 'self' (line 525)
        self_396949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 8), 'self')
        # Setting the type of the member '_arpack_solver' of a type (line 525)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 8), self_396949, '_arpack_solver', subscript_call_result_396948)
        
        # Assigning a Subscript to a Attribute (line 526):
        
        # Assigning a Subscript to a Attribute (line 526):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ltr' (line 526)
        ltr_396950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 48), 'ltr')
        str_396951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 526, 54), 'str', 'seupd')
        # Applying the binary operator '+' (line 526)
        result_add_396952 = python_operator(stypy.reporting.localization.Localization(__file__, 526, 48), '+', ltr_396950, str_396951)
        
        # Getting the type of '_arpack' (line 526)
        _arpack_396953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 31), '_arpack')
        # Obtaining the member '__dict__' of a type (line 526)
        dict___396954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 31), _arpack_396953, '__dict__')
        # Obtaining the member '__getitem__' of a type (line 526)
        getitem___396955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 31), dict___396954, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 526)
        subscript_call_result_396956 = invoke(stypy.reporting.localization.Localization(__file__, 526, 31), getitem___396955, result_add_396952)
        
        # Getting the type of 'self' (line 526)
        self_396957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 8), 'self')
        # Setting the type of the member '_arpack_extract' of a type (line 526)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 8), self_396957, '_arpack_extract', subscript_call_result_396956)
        
        # Assigning a Subscript to a Attribute (line 528):
        
        # Assigning a Subscript to a Attribute (line 528):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ltr' (line 528)
        ltr_396958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 46), 'ltr')
        # Getting the type of '_SAUPD_ERRORS' (line 528)
        _SAUPD_ERRORS_396959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 32), '_SAUPD_ERRORS')
        # Obtaining the member '__getitem__' of a type (line 528)
        getitem___396960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 32), _SAUPD_ERRORS_396959, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 528)
        subscript_call_result_396961 = invoke(stypy.reporting.localization.Localization(__file__, 528, 32), getitem___396960, ltr_396958)
        
        # Getting the type of 'self' (line 528)
        self_396962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 8), 'self')
        # Setting the type of the member 'iterate_infodict' of a type (line 528)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 8), self_396962, 'iterate_infodict', subscript_call_result_396961)
        
        # Assigning a Subscript to a Attribute (line 529):
        
        # Assigning a Subscript to a Attribute (line 529):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ltr' (line 529)
        ltr_396963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 46), 'ltr')
        # Getting the type of '_SEUPD_ERRORS' (line 529)
        _SEUPD_ERRORS_396964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 32), '_SEUPD_ERRORS')
        # Obtaining the member '__getitem__' of a type (line 529)
        getitem___396965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 32), _SEUPD_ERRORS_396964, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 529)
        subscript_call_result_396966 = invoke(stypy.reporting.localization.Localization(__file__, 529, 32), getitem___396965, ltr_396963)
        
        # Getting the type of 'self' (line 529)
        self_396967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'self')
        # Setting the type of the member 'extract_infodict' of a type (line 529)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 8), self_396967, 'extract_infodict', subscript_call_result_396966)
        
        # Assigning a Call to a Attribute (line 531):
        
        # Assigning a Call to a Attribute (line 531):
        
        # Call to zeros(...): (line 531)
        # Processing the call arguments (line 531)
        int_396970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 30), 'int')
        str_396971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 34), 'str', 'int')
        # Processing the call keyword arguments (line 531)
        kwargs_396972 = {}
        # Getting the type of 'np' (line 531)
        np_396968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 21), 'np', False)
        # Obtaining the member 'zeros' of a type (line 531)
        zeros_396969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 21), np_396968, 'zeros')
        # Calling zeros(args, kwargs) (line 531)
        zeros_call_result_396973 = invoke(stypy.reporting.localization.Localization(__file__, 531, 21), zeros_396969, *[int_396970, str_396971], **kwargs_396972)
        
        # Getting the type of 'self' (line 531)
        self_396974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 8), 'self')
        # Setting the type of the member 'ipntr' of a type (line 531)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 8), self_396974, 'ipntr', zeros_call_result_396973)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def iterate(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'iterate'
        module_type_store = module_type_store.open_function_context('iterate', 533, 4, False)
        # Assigning a type to the variable 'self' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_localization', localization)
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_type_store', module_type_store)
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_function_name', '_SymmetricArpackParams.iterate')
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_param_names_list', [])
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_varargs_param_name', None)
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_call_defaults', defaults)
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_call_varargs', varargs)
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _SymmetricArpackParams.iterate.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_SymmetricArpackParams.iterate', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'iterate', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'iterate(...)' code ##################

        
        # Assigning a Call to a Tuple (line 534):
        
        # Assigning a Subscript to a Name (line 534):
        
        # Obtaining the type of the subscript
        int_396975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 8), 'int')
        
        # Call to _arpack_solver(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'self' (line 535)
        self_396978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 32), 'self', False)
        # Obtaining the member 'ido' of a type (line 535)
        ido_396979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 32), self_396978, 'ido')
        # Getting the type of 'self' (line 535)
        self_396980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 535)
        bmat_396981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 42), self_396980, 'bmat')
        # Getting the type of 'self' (line 535)
        self_396982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 535)
        which_396983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 53), self_396982, 'which')
        # Getting the type of 'self' (line 535)
        self_396984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 535)
        k_396985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 65), self_396984, 'k')
        # Getting the type of 'self' (line 536)
        self_396986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 32), 'self', False)
        # Obtaining the member 'tol' of a type (line 536)
        tol_396987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 32), self_396986, 'tol')
        # Getting the type of 'self' (line 536)
        self_396988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 42), 'self', False)
        # Obtaining the member 'resid' of a type (line 536)
        resid_396989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 42), self_396988, 'resid')
        # Getting the type of 'self' (line 536)
        self_396990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 54), 'self', False)
        # Obtaining the member 'v' of a type (line 536)
        v_396991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 54), self_396990, 'v')
        # Getting the type of 'self' (line 536)
        self_396992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 62), 'self', False)
        # Obtaining the member 'iparam' of a type (line 536)
        iparam_396993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 62), self_396992, 'iparam')
        # Getting the type of 'self' (line 537)
        self_396994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 537)
        ipntr_396995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 32), self_396994, 'ipntr')
        # Getting the type of 'self' (line 537)
        self_396996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 44), 'self', False)
        # Obtaining the member 'workd' of a type (line 537)
        workd_396997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 44), self_396996, 'workd')
        # Getting the type of 'self' (line 537)
        self_396998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 56), 'self', False)
        # Obtaining the member 'workl' of a type (line 537)
        workl_396999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 56), self_396998, 'workl')
        # Getting the type of 'self' (line 537)
        self_397000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 68), 'self', False)
        # Obtaining the member 'info' of a type (line 537)
        info_397001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 68), self_397000, 'info')
        # Processing the call keyword arguments (line 535)
        kwargs_397002 = {}
        # Getting the type of 'self' (line 535)
        self_396976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 535)
        _arpack_solver_396977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 12), self_396976, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 535)
        _arpack_solver_call_result_397003 = invoke(stypy.reporting.localization.Localization(__file__, 535, 12), _arpack_solver_396977, *[ido_396979, bmat_396981, which_396983, k_396985, tol_396987, resid_396989, v_396991, iparam_396993, ipntr_396995, workd_396997, workl_396999, info_397001], **kwargs_397002)
        
        # Obtaining the member '__getitem__' of a type (line 534)
        getitem___397004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), _arpack_solver_call_result_397003, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 534)
        subscript_call_result_397005 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), getitem___397004, int_396975)
        
        # Assigning a type to the variable 'tuple_var_assignment_395996' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_395996', subscript_call_result_397005)
        
        # Assigning a Subscript to a Name (line 534):
        
        # Obtaining the type of the subscript
        int_397006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 8), 'int')
        
        # Call to _arpack_solver(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'self' (line 535)
        self_397009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 32), 'self', False)
        # Obtaining the member 'ido' of a type (line 535)
        ido_397010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 32), self_397009, 'ido')
        # Getting the type of 'self' (line 535)
        self_397011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 535)
        bmat_397012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 42), self_397011, 'bmat')
        # Getting the type of 'self' (line 535)
        self_397013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 535)
        which_397014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 53), self_397013, 'which')
        # Getting the type of 'self' (line 535)
        self_397015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 535)
        k_397016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 65), self_397015, 'k')
        # Getting the type of 'self' (line 536)
        self_397017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 32), 'self', False)
        # Obtaining the member 'tol' of a type (line 536)
        tol_397018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 32), self_397017, 'tol')
        # Getting the type of 'self' (line 536)
        self_397019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 42), 'self', False)
        # Obtaining the member 'resid' of a type (line 536)
        resid_397020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 42), self_397019, 'resid')
        # Getting the type of 'self' (line 536)
        self_397021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 54), 'self', False)
        # Obtaining the member 'v' of a type (line 536)
        v_397022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 54), self_397021, 'v')
        # Getting the type of 'self' (line 536)
        self_397023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 62), 'self', False)
        # Obtaining the member 'iparam' of a type (line 536)
        iparam_397024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 62), self_397023, 'iparam')
        # Getting the type of 'self' (line 537)
        self_397025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 537)
        ipntr_397026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 32), self_397025, 'ipntr')
        # Getting the type of 'self' (line 537)
        self_397027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 44), 'self', False)
        # Obtaining the member 'workd' of a type (line 537)
        workd_397028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 44), self_397027, 'workd')
        # Getting the type of 'self' (line 537)
        self_397029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 56), 'self', False)
        # Obtaining the member 'workl' of a type (line 537)
        workl_397030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 56), self_397029, 'workl')
        # Getting the type of 'self' (line 537)
        self_397031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 68), 'self', False)
        # Obtaining the member 'info' of a type (line 537)
        info_397032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 68), self_397031, 'info')
        # Processing the call keyword arguments (line 535)
        kwargs_397033 = {}
        # Getting the type of 'self' (line 535)
        self_397007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 535)
        _arpack_solver_397008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 12), self_397007, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 535)
        _arpack_solver_call_result_397034 = invoke(stypy.reporting.localization.Localization(__file__, 535, 12), _arpack_solver_397008, *[ido_397010, bmat_397012, which_397014, k_397016, tol_397018, resid_397020, v_397022, iparam_397024, ipntr_397026, workd_397028, workl_397030, info_397032], **kwargs_397033)
        
        # Obtaining the member '__getitem__' of a type (line 534)
        getitem___397035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), _arpack_solver_call_result_397034, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 534)
        subscript_call_result_397036 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), getitem___397035, int_397006)
        
        # Assigning a type to the variable 'tuple_var_assignment_395997' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_395997', subscript_call_result_397036)
        
        # Assigning a Subscript to a Name (line 534):
        
        # Obtaining the type of the subscript
        int_397037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 8), 'int')
        
        # Call to _arpack_solver(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'self' (line 535)
        self_397040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 32), 'self', False)
        # Obtaining the member 'ido' of a type (line 535)
        ido_397041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 32), self_397040, 'ido')
        # Getting the type of 'self' (line 535)
        self_397042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 535)
        bmat_397043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 42), self_397042, 'bmat')
        # Getting the type of 'self' (line 535)
        self_397044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 535)
        which_397045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 53), self_397044, 'which')
        # Getting the type of 'self' (line 535)
        self_397046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 535)
        k_397047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 65), self_397046, 'k')
        # Getting the type of 'self' (line 536)
        self_397048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 32), 'self', False)
        # Obtaining the member 'tol' of a type (line 536)
        tol_397049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 32), self_397048, 'tol')
        # Getting the type of 'self' (line 536)
        self_397050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 42), 'self', False)
        # Obtaining the member 'resid' of a type (line 536)
        resid_397051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 42), self_397050, 'resid')
        # Getting the type of 'self' (line 536)
        self_397052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 54), 'self', False)
        # Obtaining the member 'v' of a type (line 536)
        v_397053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 54), self_397052, 'v')
        # Getting the type of 'self' (line 536)
        self_397054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 62), 'self', False)
        # Obtaining the member 'iparam' of a type (line 536)
        iparam_397055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 62), self_397054, 'iparam')
        # Getting the type of 'self' (line 537)
        self_397056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 537)
        ipntr_397057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 32), self_397056, 'ipntr')
        # Getting the type of 'self' (line 537)
        self_397058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 44), 'self', False)
        # Obtaining the member 'workd' of a type (line 537)
        workd_397059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 44), self_397058, 'workd')
        # Getting the type of 'self' (line 537)
        self_397060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 56), 'self', False)
        # Obtaining the member 'workl' of a type (line 537)
        workl_397061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 56), self_397060, 'workl')
        # Getting the type of 'self' (line 537)
        self_397062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 68), 'self', False)
        # Obtaining the member 'info' of a type (line 537)
        info_397063 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 68), self_397062, 'info')
        # Processing the call keyword arguments (line 535)
        kwargs_397064 = {}
        # Getting the type of 'self' (line 535)
        self_397038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 535)
        _arpack_solver_397039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 12), self_397038, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 535)
        _arpack_solver_call_result_397065 = invoke(stypy.reporting.localization.Localization(__file__, 535, 12), _arpack_solver_397039, *[ido_397041, bmat_397043, which_397045, k_397047, tol_397049, resid_397051, v_397053, iparam_397055, ipntr_397057, workd_397059, workl_397061, info_397063], **kwargs_397064)
        
        # Obtaining the member '__getitem__' of a type (line 534)
        getitem___397066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), _arpack_solver_call_result_397065, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 534)
        subscript_call_result_397067 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), getitem___397066, int_397037)
        
        # Assigning a type to the variable 'tuple_var_assignment_395998' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_395998', subscript_call_result_397067)
        
        # Assigning a Subscript to a Name (line 534):
        
        # Obtaining the type of the subscript
        int_397068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 8), 'int')
        
        # Call to _arpack_solver(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'self' (line 535)
        self_397071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 32), 'self', False)
        # Obtaining the member 'ido' of a type (line 535)
        ido_397072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 32), self_397071, 'ido')
        # Getting the type of 'self' (line 535)
        self_397073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 535)
        bmat_397074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 42), self_397073, 'bmat')
        # Getting the type of 'self' (line 535)
        self_397075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 535)
        which_397076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 53), self_397075, 'which')
        # Getting the type of 'self' (line 535)
        self_397077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 535)
        k_397078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 65), self_397077, 'k')
        # Getting the type of 'self' (line 536)
        self_397079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 32), 'self', False)
        # Obtaining the member 'tol' of a type (line 536)
        tol_397080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 32), self_397079, 'tol')
        # Getting the type of 'self' (line 536)
        self_397081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 42), 'self', False)
        # Obtaining the member 'resid' of a type (line 536)
        resid_397082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 42), self_397081, 'resid')
        # Getting the type of 'self' (line 536)
        self_397083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 54), 'self', False)
        # Obtaining the member 'v' of a type (line 536)
        v_397084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 54), self_397083, 'v')
        # Getting the type of 'self' (line 536)
        self_397085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 62), 'self', False)
        # Obtaining the member 'iparam' of a type (line 536)
        iparam_397086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 62), self_397085, 'iparam')
        # Getting the type of 'self' (line 537)
        self_397087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 537)
        ipntr_397088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 32), self_397087, 'ipntr')
        # Getting the type of 'self' (line 537)
        self_397089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 44), 'self', False)
        # Obtaining the member 'workd' of a type (line 537)
        workd_397090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 44), self_397089, 'workd')
        # Getting the type of 'self' (line 537)
        self_397091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 56), 'self', False)
        # Obtaining the member 'workl' of a type (line 537)
        workl_397092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 56), self_397091, 'workl')
        # Getting the type of 'self' (line 537)
        self_397093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 68), 'self', False)
        # Obtaining the member 'info' of a type (line 537)
        info_397094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 68), self_397093, 'info')
        # Processing the call keyword arguments (line 535)
        kwargs_397095 = {}
        # Getting the type of 'self' (line 535)
        self_397069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 535)
        _arpack_solver_397070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 12), self_397069, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 535)
        _arpack_solver_call_result_397096 = invoke(stypy.reporting.localization.Localization(__file__, 535, 12), _arpack_solver_397070, *[ido_397072, bmat_397074, which_397076, k_397078, tol_397080, resid_397082, v_397084, iparam_397086, ipntr_397088, workd_397090, workl_397092, info_397094], **kwargs_397095)
        
        # Obtaining the member '__getitem__' of a type (line 534)
        getitem___397097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), _arpack_solver_call_result_397096, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 534)
        subscript_call_result_397098 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), getitem___397097, int_397068)
        
        # Assigning a type to the variable 'tuple_var_assignment_395999' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_395999', subscript_call_result_397098)
        
        # Assigning a Subscript to a Name (line 534):
        
        # Obtaining the type of the subscript
        int_397099 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 8), 'int')
        
        # Call to _arpack_solver(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'self' (line 535)
        self_397102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 32), 'self', False)
        # Obtaining the member 'ido' of a type (line 535)
        ido_397103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 32), self_397102, 'ido')
        # Getting the type of 'self' (line 535)
        self_397104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 535)
        bmat_397105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 42), self_397104, 'bmat')
        # Getting the type of 'self' (line 535)
        self_397106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 535)
        which_397107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 53), self_397106, 'which')
        # Getting the type of 'self' (line 535)
        self_397108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 535)
        k_397109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 65), self_397108, 'k')
        # Getting the type of 'self' (line 536)
        self_397110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 32), 'self', False)
        # Obtaining the member 'tol' of a type (line 536)
        tol_397111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 32), self_397110, 'tol')
        # Getting the type of 'self' (line 536)
        self_397112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 42), 'self', False)
        # Obtaining the member 'resid' of a type (line 536)
        resid_397113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 42), self_397112, 'resid')
        # Getting the type of 'self' (line 536)
        self_397114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 54), 'self', False)
        # Obtaining the member 'v' of a type (line 536)
        v_397115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 54), self_397114, 'v')
        # Getting the type of 'self' (line 536)
        self_397116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 62), 'self', False)
        # Obtaining the member 'iparam' of a type (line 536)
        iparam_397117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 62), self_397116, 'iparam')
        # Getting the type of 'self' (line 537)
        self_397118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 537)
        ipntr_397119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 32), self_397118, 'ipntr')
        # Getting the type of 'self' (line 537)
        self_397120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 44), 'self', False)
        # Obtaining the member 'workd' of a type (line 537)
        workd_397121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 44), self_397120, 'workd')
        # Getting the type of 'self' (line 537)
        self_397122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 56), 'self', False)
        # Obtaining the member 'workl' of a type (line 537)
        workl_397123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 56), self_397122, 'workl')
        # Getting the type of 'self' (line 537)
        self_397124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 68), 'self', False)
        # Obtaining the member 'info' of a type (line 537)
        info_397125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 68), self_397124, 'info')
        # Processing the call keyword arguments (line 535)
        kwargs_397126 = {}
        # Getting the type of 'self' (line 535)
        self_397100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 535)
        _arpack_solver_397101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 12), self_397100, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 535)
        _arpack_solver_call_result_397127 = invoke(stypy.reporting.localization.Localization(__file__, 535, 12), _arpack_solver_397101, *[ido_397103, bmat_397105, which_397107, k_397109, tol_397111, resid_397113, v_397115, iparam_397117, ipntr_397119, workd_397121, workl_397123, info_397125], **kwargs_397126)
        
        # Obtaining the member '__getitem__' of a type (line 534)
        getitem___397128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), _arpack_solver_call_result_397127, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 534)
        subscript_call_result_397129 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), getitem___397128, int_397099)
        
        # Assigning a type to the variable 'tuple_var_assignment_396000' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_396000', subscript_call_result_397129)
        
        # Assigning a Subscript to a Name (line 534):
        
        # Obtaining the type of the subscript
        int_397130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 8), 'int')
        
        # Call to _arpack_solver(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'self' (line 535)
        self_397133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 32), 'self', False)
        # Obtaining the member 'ido' of a type (line 535)
        ido_397134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 32), self_397133, 'ido')
        # Getting the type of 'self' (line 535)
        self_397135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 535)
        bmat_397136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 42), self_397135, 'bmat')
        # Getting the type of 'self' (line 535)
        self_397137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 535)
        which_397138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 53), self_397137, 'which')
        # Getting the type of 'self' (line 535)
        self_397139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 535)
        k_397140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 65), self_397139, 'k')
        # Getting the type of 'self' (line 536)
        self_397141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 32), 'self', False)
        # Obtaining the member 'tol' of a type (line 536)
        tol_397142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 32), self_397141, 'tol')
        # Getting the type of 'self' (line 536)
        self_397143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 42), 'self', False)
        # Obtaining the member 'resid' of a type (line 536)
        resid_397144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 42), self_397143, 'resid')
        # Getting the type of 'self' (line 536)
        self_397145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 54), 'self', False)
        # Obtaining the member 'v' of a type (line 536)
        v_397146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 54), self_397145, 'v')
        # Getting the type of 'self' (line 536)
        self_397147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 62), 'self', False)
        # Obtaining the member 'iparam' of a type (line 536)
        iparam_397148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 62), self_397147, 'iparam')
        # Getting the type of 'self' (line 537)
        self_397149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 537)
        ipntr_397150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 32), self_397149, 'ipntr')
        # Getting the type of 'self' (line 537)
        self_397151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 44), 'self', False)
        # Obtaining the member 'workd' of a type (line 537)
        workd_397152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 44), self_397151, 'workd')
        # Getting the type of 'self' (line 537)
        self_397153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 56), 'self', False)
        # Obtaining the member 'workl' of a type (line 537)
        workl_397154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 56), self_397153, 'workl')
        # Getting the type of 'self' (line 537)
        self_397155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 68), 'self', False)
        # Obtaining the member 'info' of a type (line 537)
        info_397156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 68), self_397155, 'info')
        # Processing the call keyword arguments (line 535)
        kwargs_397157 = {}
        # Getting the type of 'self' (line 535)
        self_397131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 535)
        _arpack_solver_397132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 12), self_397131, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 535)
        _arpack_solver_call_result_397158 = invoke(stypy.reporting.localization.Localization(__file__, 535, 12), _arpack_solver_397132, *[ido_397134, bmat_397136, which_397138, k_397140, tol_397142, resid_397144, v_397146, iparam_397148, ipntr_397150, workd_397152, workl_397154, info_397156], **kwargs_397157)
        
        # Obtaining the member '__getitem__' of a type (line 534)
        getitem___397159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), _arpack_solver_call_result_397158, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 534)
        subscript_call_result_397160 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), getitem___397159, int_397130)
        
        # Assigning a type to the variable 'tuple_var_assignment_396001' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_396001', subscript_call_result_397160)
        
        # Assigning a Subscript to a Name (line 534):
        
        # Obtaining the type of the subscript
        int_397161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 8), 'int')
        
        # Call to _arpack_solver(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'self' (line 535)
        self_397164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 32), 'self', False)
        # Obtaining the member 'ido' of a type (line 535)
        ido_397165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 32), self_397164, 'ido')
        # Getting the type of 'self' (line 535)
        self_397166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 535)
        bmat_397167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 42), self_397166, 'bmat')
        # Getting the type of 'self' (line 535)
        self_397168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 535)
        which_397169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 53), self_397168, 'which')
        # Getting the type of 'self' (line 535)
        self_397170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 535)
        k_397171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 65), self_397170, 'k')
        # Getting the type of 'self' (line 536)
        self_397172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 32), 'self', False)
        # Obtaining the member 'tol' of a type (line 536)
        tol_397173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 32), self_397172, 'tol')
        # Getting the type of 'self' (line 536)
        self_397174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 42), 'self', False)
        # Obtaining the member 'resid' of a type (line 536)
        resid_397175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 42), self_397174, 'resid')
        # Getting the type of 'self' (line 536)
        self_397176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 54), 'self', False)
        # Obtaining the member 'v' of a type (line 536)
        v_397177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 54), self_397176, 'v')
        # Getting the type of 'self' (line 536)
        self_397178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 62), 'self', False)
        # Obtaining the member 'iparam' of a type (line 536)
        iparam_397179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 62), self_397178, 'iparam')
        # Getting the type of 'self' (line 537)
        self_397180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 537)
        ipntr_397181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 32), self_397180, 'ipntr')
        # Getting the type of 'self' (line 537)
        self_397182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 44), 'self', False)
        # Obtaining the member 'workd' of a type (line 537)
        workd_397183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 44), self_397182, 'workd')
        # Getting the type of 'self' (line 537)
        self_397184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 56), 'self', False)
        # Obtaining the member 'workl' of a type (line 537)
        workl_397185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 56), self_397184, 'workl')
        # Getting the type of 'self' (line 537)
        self_397186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 68), 'self', False)
        # Obtaining the member 'info' of a type (line 537)
        info_397187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 68), self_397186, 'info')
        # Processing the call keyword arguments (line 535)
        kwargs_397188 = {}
        # Getting the type of 'self' (line 535)
        self_397162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 535)
        _arpack_solver_397163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 12), self_397162, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 535)
        _arpack_solver_call_result_397189 = invoke(stypy.reporting.localization.Localization(__file__, 535, 12), _arpack_solver_397163, *[ido_397165, bmat_397167, which_397169, k_397171, tol_397173, resid_397175, v_397177, iparam_397179, ipntr_397181, workd_397183, workl_397185, info_397187], **kwargs_397188)
        
        # Obtaining the member '__getitem__' of a type (line 534)
        getitem___397190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), _arpack_solver_call_result_397189, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 534)
        subscript_call_result_397191 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), getitem___397190, int_397161)
        
        # Assigning a type to the variable 'tuple_var_assignment_396002' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_396002', subscript_call_result_397191)
        
        # Assigning a Name to a Attribute (line 534):
        # Getting the type of 'tuple_var_assignment_395996' (line 534)
        tuple_var_assignment_395996_397192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_395996')
        # Getting the type of 'self' (line 534)
        self_397193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'self')
        # Setting the type of the member 'ido' of a type (line 534)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), self_397193, 'ido', tuple_var_assignment_395996_397192)
        
        # Assigning a Name to a Attribute (line 534):
        # Getting the type of 'tuple_var_assignment_395997' (line 534)
        tuple_var_assignment_395997_397194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_395997')
        # Getting the type of 'self' (line 534)
        self_397195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 18), 'self')
        # Setting the type of the member 'tol' of a type (line 534)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 18), self_397195, 'tol', tuple_var_assignment_395997_397194)
        
        # Assigning a Name to a Attribute (line 534):
        # Getting the type of 'tuple_var_assignment_395998' (line 534)
        tuple_var_assignment_395998_397196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_395998')
        # Getting the type of 'self' (line 534)
        self_397197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 28), 'self')
        # Setting the type of the member 'resid' of a type (line 534)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 28), self_397197, 'resid', tuple_var_assignment_395998_397196)
        
        # Assigning a Name to a Attribute (line 534):
        # Getting the type of 'tuple_var_assignment_395999' (line 534)
        tuple_var_assignment_395999_397198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_395999')
        # Getting the type of 'self' (line 534)
        self_397199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 40), 'self')
        # Setting the type of the member 'v' of a type (line 534)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 40), self_397199, 'v', tuple_var_assignment_395999_397198)
        
        # Assigning a Name to a Attribute (line 534):
        # Getting the type of 'tuple_var_assignment_396000' (line 534)
        tuple_var_assignment_396000_397200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_396000')
        # Getting the type of 'self' (line 534)
        self_397201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 48), 'self')
        # Setting the type of the member 'iparam' of a type (line 534)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 48), self_397201, 'iparam', tuple_var_assignment_396000_397200)
        
        # Assigning a Name to a Attribute (line 534):
        # Getting the type of 'tuple_var_assignment_396001' (line 534)
        tuple_var_assignment_396001_397202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_396001')
        # Getting the type of 'self' (line 534)
        self_397203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 61), 'self')
        # Setting the type of the member 'ipntr' of a type (line 534)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 61), self_397203, 'ipntr', tuple_var_assignment_396001_397202)
        
        # Assigning a Name to a Attribute (line 534):
        # Getting the type of 'tuple_var_assignment_396002' (line 534)
        tuple_var_assignment_396002_397204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'tuple_var_assignment_396002')
        # Getting the type of 'self' (line 534)
        self_397205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 73), 'self')
        # Setting the type of the member 'info' of a type (line 534)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 73), self_397205, 'info', tuple_var_assignment_396002_397204)
        
        # Assigning a Call to a Name (line 539):
        
        # Assigning a Call to a Name (line 539):
        
        # Call to slice(...): (line 539)
        # Processing the call arguments (line 539)
        
        # Obtaining the type of the subscript
        int_397207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 34), 'int')
        # Getting the type of 'self' (line 539)
        self_397208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 23), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 539)
        ipntr_397209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 23), self_397208, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 539)
        getitem___397210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 23), ipntr_397209, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 539)
        subscript_call_result_397211 = invoke(stypy.reporting.localization.Localization(__file__, 539, 23), getitem___397210, int_397207)
        
        int_397212 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 39), 'int')
        # Applying the binary operator '-' (line 539)
        result_sub_397213 = python_operator(stypy.reporting.localization.Localization(__file__, 539, 23), '-', subscript_call_result_397211, int_397212)
        
        
        # Obtaining the type of the subscript
        int_397214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 53), 'int')
        # Getting the type of 'self' (line 539)
        self_397215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 42), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 539)
        ipntr_397216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 42), self_397215, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 539)
        getitem___397217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 42), ipntr_397216, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 539)
        subscript_call_result_397218 = invoke(stypy.reporting.localization.Localization(__file__, 539, 42), getitem___397217, int_397214)
        
        int_397219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 58), 'int')
        # Applying the binary operator '-' (line 539)
        result_sub_397220 = python_operator(stypy.reporting.localization.Localization(__file__, 539, 42), '-', subscript_call_result_397218, int_397219)
        
        # Getting the type of 'self' (line 539)
        self_397221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 62), 'self', False)
        # Obtaining the member 'n' of a type (line 539)
        n_397222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 62), self_397221, 'n')
        # Applying the binary operator '+' (line 539)
        result_add_397223 = python_operator(stypy.reporting.localization.Localization(__file__, 539, 60), '+', result_sub_397220, n_397222)
        
        # Processing the call keyword arguments (line 539)
        kwargs_397224 = {}
        # Getting the type of 'slice' (line 539)
        slice_397206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 17), 'slice', False)
        # Calling slice(args, kwargs) (line 539)
        slice_call_result_397225 = invoke(stypy.reporting.localization.Localization(__file__, 539, 17), slice_397206, *[result_sub_397213, result_add_397223], **kwargs_397224)
        
        # Assigning a type to the variable 'xslice' (line 539)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 8), 'xslice', slice_call_result_397225)
        
        # Assigning a Call to a Name (line 540):
        
        # Assigning a Call to a Name (line 540):
        
        # Call to slice(...): (line 540)
        # Processing the call arguments (line 540)
        
        # Obtaining the type of the subscript
        int_397227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 34), 'int')
        # Getting the type of 'self' (line 540)
        self_397228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 23), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 540)
        ipntr_397229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 23), self_397228, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___397230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 23), ipntr_397229, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_397231 = invoke(stypy.reporting.localization.Localization(__file__, 540, 23), getitem___397230, int_397227)
        
        int_397232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 39), 'int')
        # Applying the binary operator '-' (line 540)
        result_sub_397233 = python_operator(stypy.reporting.localization.Localization(__file__, 540, 23), '-', subscript_call_result_397231, int_397232)
        
        
        # Obtaining the type of the subscript
        int_397234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 53), 'int')
        # Getting the type of 'self' (line 540)
        self_397235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 42), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 540)
        ipntr_397236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 42), self_397235, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___397237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 42), ipntr_397236, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_397238 = invoke(stypy.reporting.localization.Localization(__file__, 540, 42), getitem___397237, int_397234)
        
        int_397239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 58), 'int')
        # Applying the binary operator '-' (line 540)
        result_sub_397240 = python_operator(stypy.reporting.localization.Localization(__file__, 540, 42), '-', subscript_call_result_397238, int_397239)
        
        # Getting the type of 'self' (line 540)
        self_397241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 62), 'self', False)
        # Obtaining the member 'n' of a type (line 540)
        n_397242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 62), self_397241, 'n')
        # Applying the binary operator '+' (line 540)
        result_add_397243 = python_operator(stypy.reporting.localization.Localization(__file__, 540, 60), '+', result_sub_397240, n_397242)
        
        # Processing the call keyword arguments (line 540)
        kwargs_397244 = {}
        # Getting the type of 'slice' (line 540)
        slice_397226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 17), 'slice', False)
        # Calling slice(args, kwargs) (line 540)
        slice_call_result_397245 = invoke(stypy.reporting.localization.Localization(__file__, 540, 17), slice_397226, *[result_sub_397233, result_add_397243], **kwargs_397244)
        
        # Assigning a type to the variable 'yslice' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 8), 'yslice', slice_call_result_397245)
        
        
        # Getting the type of 'self' (line 541)
        self_397246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 11), 'self')
        # Obtaining the member 'ido' of a type (line 541)
        ido_397247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 11), self_397246, 'ido')
        int_397248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 23), 'int')
        # Applying the binary operator '==' (line 541)
        result_eq_397249 = python_operator(stypy.reporting.localization.Localization(__file__, 541, 11), '==', ido_397247, int_397248)
        
        # Testing the type of an if condition (line 541)
        if_condition_397250 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 541, 8), result_eq_397249)
        # Assigning a type to the variable 'if_condition_397250' (line 541)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 541, 8), 'if_condition_397250', if_condition_397250)
        # SSA begins for if statement (line 541)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 543):
        
        # Assigning a Call to a Subscript (line 543):
        
        # Call to OP(...): (line 543)
        # Processing the call arguments (line 543)
        
        # Obtaining the type of the subscript
        # Getting the type of 'xslice' (line 543)
        xslice_397253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 52), 'xslice', False)
        # Getting the type of 'self' (line 543)
        self_397254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 41), 'self', False)
        # Obtaining the member 'workd' of a type (line 543)
        workd_397255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 41), self_397254, 'workd')
        # Obtaining the member '__getitem__' of a type (line 543)
        getitem___397256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 41), workd_397255, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 543)
        subscript_call_result_397257 = invoke(stypy.reporting.localization.Localization(__file__, 543, 41), getitem___397256, xslice_397253)
        
        # Processing the call keyword arguments (line 543)
        kwargs_397258 = {}
        # Getting the type of 'self' (line 543)
        self_397251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 33), 'self', False)
        # Obtaining the member 'OP' of a type (line 543)
        OP_397252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 33), self_397251, 'OP')
        # Calling OP(args, kwargs) (line 543)
        OP_call_result_397259 = invoke(stypy.reporting.localization.Localization(__file__, 543, 33), OP_397252, *[subscript_call_result_397257], **kwargs_397258)
        
        # Getting the type of 'self' (line 543)
        self_397260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 12), 'self')
        # Obtaining the member 'workd' of a type (line 543)
        workd_397261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 12), self_397260, 'workd')
        # Getting the type of 'yslice' (line 543)
        yslice_397262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 23), 'yslice')
        # Storing an element on a container (line 543)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 543, 12), workd_397261, (yslice_397262, OP_call_result_397259))
        # SSA branch for the else part of an if statement (line 541)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 544)
        self_397263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 13), 'self')
        # Obtaining the member 'ido' of a type (line 544)
        ido_397264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 13), self_397263, 'ido')
        int_397265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 25), 'int')
        # Applying the binary operator '==' (line 544)
        result_eq_397266 = python_operator(stypy.reporting.localization.Localization(__file__, 544, 13), '==', ido_397264, int_397265)
        
        # Testing the type of an if condition (line 544)
        if_condition_397267 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 544, 13), result_eq_397266)
        # Assigning a type to the variable 'if_condition_397267' (line 544)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 13), 'if_condition_397267', if_condition_397267)
        # SSA begins for if statement (line 544)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'self' (line 546)
        self_397268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 15), 'self')
        # Obtaining the member 'mode' of a type (line 546)
        mode_397269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 15), self_397268, 'mode')
        int_397270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 546, 28), 'int')
        # Applying the binary operator '==' (line 546)
        result_eq_397271 = python_operator(stypy.reporting.localization.Localization(__file__, 546, 15), '==', mode_397269, int_397270)
        
        # Testing the type of an if condition (line 546)
        if_condition_397272 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 546, 12), result_eq_397271)
        # Assigning a type to the variable 'if_condition_397272' (line 546)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 12), 'if_condition_397272', if_condition_397272)
        # SSA begins for if statement (line 546)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 547):
        
        # Assigning a Call to a Subscript (line 547):
        
        # Call to OP(...): (line 547)
        # Processing the call arguments (line 547)
        
        # Obtaining the type of the subscript
        # Getting the type of 'xslice' (line 547)
        xslice_397275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 56), 'xslice', False)
        # Getting the type of 'self' (line 547)
        self_397276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 45), 'self', False)
        # Obtaining the member 'workd' of a type (line 547)
        workd_397277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 547, 45), self_397276, 'workd')
        # Obtaining the member '__getitem__' of a type (line 547)
        getitem___397278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 547, 45), workd_397277, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 547)
        subscript_call_result_397279 = invoke(stypy.reporting.localization.Localization(__file__, 547, 45), getitem___397278, xslice_397275)
        
        # Processing the call keyword arguments (line 547)
        kwargs_397280 = {}
        # Getting the type of 'self' (line 547)
        self_397273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 37), 'self', False)
        # Obtaining the member 'OP' of a type (line 547)
        OP_397274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 547, 37), self_397273, 'OP')
        # Calling OP(args, kwargs) (line 547)
        OP_call_result_397281 = invoke(stypy.reporting.localization.Localization(__file__, 547, 37), OP_397274, *[subscript_call_result_397279], **kwargs_397280)
        
        # Getting the type of 'self' (line 547)
        self_397282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 16), 'self')
        # Obtaining the member 'workd' of a type (line 547)
        workd_397283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 547, 16), self_397282, 'workd')
        # Getting the type of 'yslice' (line 547)
        yslice_397284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 27), 'yslice')
        # Storing an element on a container (line 547)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 16), workd_397283, (yslice_397284, OP_call_result_397281))
        # SSA branch for the else part of an if statement (line 546)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 548)
        self_397285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 17), 'self')
        # Obtaining the member 'mode' of a type (line 548)
        mode_397286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 548, 17), self_397285, 'mode')
        int_397287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 30), 'int')
        # Applying the binary operator '==' (line 548)
        result_eq_397288 = python_operator(stypy.reporting.localization.Localization(__file__, 548, 17), '==', mode_397286, int_397287)
        
        # Testing the type of an if condition (line 548)
        if_condition_397289 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 548, 17), result_eq_397288)
        # Assigning a type to the variable 'if_condition_397289' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 17), 'if_condition_397289', if_condition_397289)
        # SSA begins for if statement (line 548)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 549):
        
        # Assigning a Call to a Subscript (line 549):
        
        # Call to OPb(...): (line 549)
        # Processing the call arguments (line 549)
        
        # Obtaining the type of the subscript
        # Getting the type of 'xslice' (line 549)
        xslice_397292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 57), 'xslice', False)
        # Getting the type of 'self' (line 549)
        self_397293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 46), 'self', False)
        # Obtaining the member 'workd' of a type (line 549)
        workd_397294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 46), self_397293, 'workd')
        # Obtaining the member '__getitem__' of a type (line 549)
        getitem___397295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 46), workd_397294, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 549)
        subscript_call_result_397296 = invoke(stypy.reporting.localization.Localization(__file__, 549, 46), getitem___397295, xslice_397292)
        
        # Processing the call keyword arguments (line 549)
        kwargs_397297 = {}
        # Getting the type of 'self' (line 549)
        self_397290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 37), 'self', False)
        # Obtaining the member 'OPb' of a type (line 549)
        OPb_397291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 37), self_397290, 'OPb')
        # Calling OPb(args, kwargs) (line 549)
        OPb_call_result_397298 = invoke(stypy.reporting.localization.Localization(__file__, 549, 37), OPb_397291, *[subscript_call_result_397296], **kwargs_397297)
        
        # Getting the type of 'self' (line 549)
        self_397299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 16), 'self')
        # Obtaining the member 'workd' of a type (line 549)
        workd_397300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 16), self_397299, 'workd')
        # Getting the type of 'xslice' (line 549)
        xslice_397301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 27), 'xslice')
        # Storing an element on a container (line 549)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 16), workd_397300, (xslice_397301, OPb_call_result_397298))
        
        # Assigning a Call to a Subscript (line 550):
        
        # Assigning a Call to a Subscript (line 550):
        
        # Call to OPa(...): (line 550)
        # Processing the call arguments (line 550)
        
        # Obtaining the type of the subscript
        # Getting the type of 'xslice' (line 550)
        xslice_397304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 57), 'xslice', False)
        # Getting the type of 'self' (line 550)
        self_397305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 46), 'self', False)
        # Obtaining the member 'workd' of a type (line 550)
        workd_397306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 46), self_397305, 'workd')
        # Obtaining the member '__getitem__' of a type (line 550)
        getitem___397307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 46), workd_397306, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 550)
        subscript_call_result_397308 = invoke(stypy.reporting.localization.Localization(__file__, 550, 46), getitem___397307, xslice_397304)
        
        # Processing the call keyword arguments (line 550)
        kwargs_397309 = {}
        # Getting the type of 'self' (line 550)
        self_397302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 37), 'self', False)
        # Obtaining the member 'OPa' of a type (line 550)
        OPa_397303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 37), self_397302, 'OPa')
        # Calling OPa(args, kwargs) (line 550)
        OPa_call_result_397310 = invoke(stypy.reporting.localization.Localization(__file__, 550, 37), OPa_397303, *[subscript_call_result_397308], **kwargs_397309)
        
        # Getting the type of 'self' (line 550)
        self_397311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 16), 'self')
        # Obtaining the member 'workd' of a type (line 550)
        workd_397312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 16), self_397311, 'workd')
        # Getting the type of 'yslice' (line 550)
        yslice_397313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 27), 'yslice')
        # Storing an element on a container (line 550)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 550, 16), workd_397312, (yslice_397313, OPa_call_result_397310))
        # SSA branch for the else part of an if statement (line 548)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 551)
        self_397314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 17), 'self')
        # Obtaining the member 'mode' of a type (line 551)
        mode_397315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 17), self_397314, 'mode')
        int_397316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 30), 'int')
        # Applying the binary operator '==' (line 551)
        result_eq_397317 = python_operator(stypy.reporting.localization.Localization(__file__, 551, 17), '==', mode_397315, int_397316)
        
        # Testing the type of an if condition (line 551)
        if_condition_397318 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 551, 17), result_eq_397317)
        # Assigning a type to the variable 'if_condition_397318' (line 551)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 17), 'if_condition_397318', if_condition_397318)
        # SSA begins for if statement (line 551)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 552):
        
        # Assigning a Call to a Name (line 552):
        
        # Call to slice(...): (line 552)
        # Processing the call arguments (line 552)
        
        # Obtaining the type of the subscript
        int_397320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 43), 'int')
        # Getting the type of 'self' (line 552)
        self_397321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 552)
        ipntr_397322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 32), self_397321, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 552)
        getitem___397323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 32), ipntr_397322, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 552)
        subscript_call_result_397324 = invoke(stypy.reporting.localization.Localization(__file__, 552, 32), getitem___397323, int_397320)
        
        int_397325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 48), 'int')
        # Applying the binary operator '-' (line 552)
        result_sub_397326 = python_operator(stypy.reporting.localization.Localization(__file__, 552, 32), '-', subscript_call_result_397324, int_397325)
        
        
        # Obtaining the type of the subscript
        int_397327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 62), 'int')
        # Getting the type of 'self' (line 552)
        self_397328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 51), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 552)
        ipntr_397329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 51), self_397328, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 552)
        getitem___397330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 51), ipntr_397329, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 552)
        subscript_call_result_397331 = invoke(stypy.reporting.localization.Localization(__file__, 552, 51), getitem___397330, int_397327)
        
        int_397332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 67), 'int')
        # Applying the binary operator '-' (line 552)
        result_sub_397333 = python_operator(stypy.reporting.localization.Localization(__file__, 552, 51), '-', subscript_call_result_397331, int_397332)
        
        # Getting the type of 'self' (line 552)
        self_397334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 71), 'self', False)
        # Obtaining the member 'n' of a type (line 552)
        n_397335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 71), self_397334, 'n')
        # Applying the binary operator '+' (line 552)
        result_add_397336 = python_operator(stypy.reporting.localization.Localization(__file__, 552, 69), '+', result_sub_397333, n_397335)
        
        # Processing the call keyword arguments (line 552)
        kwargs_397337 = {}
        # Getting the type of 'slice' (line 552)
        slice_397319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 26), 'slice', False)
        # Calling slice(args, kwargs) (line 552)
        slice_call_result_397338 = invoke(stypy.reporting.localization.Localization(__file__, 552, 26), slice_397319, *[result_sub_397326, result_add_397336], **kwargs_397337)
        
        # Assigning a type to the variable 'Bxslice' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 16), 'Bxslice', slice_call_result_397338)
        
        # Assigning a Call to a Name (line 553):
        
        # Assigning a Call to a Name (line 553):
        
        # Call to A_matvec(...): (line 553)
        # Processing the call arguments (line 553)
        
        # Obtaining the type of the subscript
        # Getting the type of 'xslice' (line 553)
        xslice_397341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 46), 'xslice', False)
        # Getting the type of 'self' (line 553)
        self_397342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 35), 'self', False)
        # Obtaining the member 'workd' of a type (line 553)
        workd_397343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 35), self_397342, 'workd')
        # Obtaining the member '__getitem__' of a type (line 553)
        getitem___397344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 35), workd_397343, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 553)
        subscript_call_result_397345 = invoke(stypy.reporting.localization.Localization(__file__, 553, 35), getitem___397344, xslice_397341)
        
        # Processing the call keyword arguments (line 553)
        kwargs_397346 = {}
        # Getting the type of 'self' (line 553)
        self_397339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 21), 'self', False)
        # Obtaining the member 'A_matvec' of a type (line 553)
        A_matvec_397340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 21), self_397339, 'A_matvec')
        # Calling A_matvec(args, kwargs) (line 553)
        A_matvec_call_result_397347 = invoke(stypy.reporting.localization.Localization(__file__, 553, 21), A_matvec_397340, *[subscript_call_result_397345], **kwargs_397346)
        
        # Assigning a type to the variable 'Ax' (line 553)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 553, 16), 'Ax', A_matvec_call_result_397347)
        
        # Assigning a Call to a Subscript (line 554):
        
        # Assigning a Call to a Subscript (line 554):
        
        # Call to OPa(...): (line 554)
        # Processing the call arguments (line 554)
        # Getting the type of 'Ax' (line 554)
        Ax_397350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 46), 'Ax', False)
        # Getting the type of 'self' (line 554)
        self_397351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 52), 'self', False)
        # Obtaining the member 'sigma' of a type (line 554)
        sigma_397352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 52), self_397351, 'sigma')
        
        # Obtaining the type of the subscript
        # Getting the type of 'Bxslice' (line 555)
        Bxslice_397353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 63), 'Bxslice', False)
        # Getting the type of 'self' (line 555)
        self_397354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 52), 'self', False)
        # Obtaining the member 'workd' of a type (line 555)
        workd_397355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 52), self_397354, 'workd')
        # Obtaining the member '__getitem__' of a type (line 555)
        getitem___397356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 52), workd_397355, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 555)
        subscript_call_result_397357 = invoke(stypy.reporting.localization.Localization(__file__, 555, 52), getitem___397356, Bxslice_397353)
        
        # Applying the binary operator '*' (line 554)
        result_mul_397358 = python_operator(stypy.reporting.localization.Localization(__file__, 554, 52), '*', sigma_397352, subscript_call_result_397357)
        
        # Applying the binary operator '+' (line 554)
        result_add_397359 = python_operator(stypy.reporting.localization.Localization(__file__, 554, 46), '+', Ax_397350, result_mul_397358)
        
        # Processing the call keyword arguments (line 554)
        kwargs_397360 = {}
        # Getting the type of 'self' (line 554)
        self_397348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 37), 'self', False)
        # Obtaining the member 'OPa' of a type (line 554)
        OPa_397349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 37), self_397348, 'OPa')
        # Calling OPa(args, kwargs) (line 554)
        OPa_call_result_397361 = invoke(stypy.reporting.localization.Localization(__file__, 554, 37), OPa_397349, *[result_add_397359], **kwargs_397360)
        
        # Getting the type of 'self' (line 554)
        self_397362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 16), 'self')
        # Obtaining the member 'workd' of a type (line 554)
        workd_397363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 16), self_397362, 'workd')
        # Getting the type of 'yslice' (line 554)
        yslice_397364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 27), 'yslice')
        # Storing an element on a container (line 554)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 554, 16), workd_397363, (yslice_397364, OPa_call_result_397361))
        # SSA branch for the else part of an if statement (line 551)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 557):
        
        # Assigning a Call to a Name (line 557):
        
        # Call to slice(...): (line 557)
        # Processing the call arguments (line 557)
        
        # Obtaining the type of the subscript
        int_397366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 43), 'int')
        # Getting the type of 'self' (line 557)
        self_397367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 557)
        ipntr_397368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 32), self_397367, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 557)
        getitem___397369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 32), ipntr_397368, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 557)
        subscript_call_result_397370 = invoke(stypy.reporting.localization.Localization(__file__, 557, 32), getitem___397369, int_397366)
        
        int_397371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 48), 'int')
        # Applying the binary operator '-' (line 557)
        result_sub_397372 = python_operator(stypy.reporting.localization.Localization(__file__, 557, 32), '-', subscript_call_result_397370, int_397371)
        
        
        # Obtaining the type of the subscript
        int_397373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 62), 'int')
        # Getting the type of 'self' (line 557)
        self_397374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 51), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 557)
        ipntr_397375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 51), self_397374, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 557)
        getitem___397376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 51), ipntr_397375, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 557)
        subscript_call_result_397377 = invoke(stypy.reporting.localization.Localization(__file__, 557, 51), getitem___397376, int_397373)
        
        int_397378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 67), 'int')
        # Applying the binary operator '-' (line 557)
        result_sub_397379 = python_operator(stypy.reporting.localization.Localization(__file__, 557, 51), '-', subscript_call_result_397377, int_397378)
        
        # Getting the type of 'self' (line 557)
        self_397380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 71), 'self', False)
        # Obtaining the member 'n' of a type (line 557)
        n_397381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 71), self_397380, 'n')
        # Applying the binary operator '+' (line 557)
        result_add_397382 = python_operator(stypy.reporting.localization.Localization(__file__, 557, 69), '+', result_sub_397379, n_397381)
        
        # Processing the call keyword arguments (line 557)
        kwargs_397383 = {}
        # Getting the type of 'slice' (line 557)
        slice_397365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 26), 'slice', False)
        # Calling slice(args, kwargs) (line 557)
        slice_call_result_397384 = invoke(stypy.reporting.localization.Localization(__file__, 557, 26), slice_397365, *[result_sub_397372, result_add_397382], **kwargs_397383)
        
        # Assigning a type to the variable 'Bxslice' (line 557)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 557, 16), 'Bxslice', slice_call_result_397384)
        
        # Assigning a Call to a Subscript (line 558):
        
        # Assigning a Call to a Subscript (line 558):
        
        # Call to OPa(...): (line 558)
        # Processing the call arguments (line 558)
        
        # Obtaining the type of the subscript
        # Getting the type of 'Bxslice' (line 558)
        Bxslice_397387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 57), 'Bxslice', False)
        # Getting the type of 'self' (line 558)
        self_397388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 46), 'self', False)
        # Obtaining the member 'workd' of a type (line 558)
        workd_397389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 46), self_397388, 'workd')
        # Obtaining the member '__getitem__' of a type (line 558)
        getitem___397390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 46), workd_397389, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 558)
        subscript_call_result_397391 = invoke(stypy.reporting.localization.Localization(__file__, 558, 46), getitem___397390, Bxslice_397387)
        
        # Processing the call keyword arguments (line 558)
        kwargs_397392 = {}
        # Getting the type of 'self' (line 558)
        self_397385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 37), 'self', False)
        # Obtaining the member 'OPa' of a type (line 558)
        OPa_397386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 37), self_397385, 'OPa')
        # Calling OPa(args, kwargs) (line 558)
        OPa_call_result_397393 = invoke(stypy.reporting.localization.Localization(__file__, 558, 37), OPa_397386, *[subscript_call_result_397391], **kwargs_397392)
        
        # Getting the type of 'self' (line 558)
        self_397394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 16), 'self')
        # Obtaining the member 'workd' of a type (line 558)
        workd_397395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 16), self_397394, 'workd')
        # Getting the type of 'yslice' (line 558)
        yslice_397396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 27), 'yslice')
        # Storing an element on a container (line 558)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 558, 16), workd_397395, (yslice_397396, OPa_call_result_397393))
        # SSA join for if statement (line 551)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 548)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 546)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 544)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 559)
        self_397397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 13), 'self')
        # Obtaining the member 'ido' of a type (line 559)
        ido_397398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 13), self_397397, 'ido')
        int_397399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 25), 'int')
        # Applying the binary operator '==' (line 559)
        result_eq_397400 = python_operator(stypy.reporting.localization.Localization(__file__, 559, 13), '==', ido_397398, int_397399)
        
        # Testing the type of an if condition (line 559)
        if_condition_397401 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 559, 13), result_eq_397400)
        # Assigning a type to the variable 'if_condition_397401' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 13), 'if_condition_397401', if_condition_397401)
        # SSA begins for if statement (line 559)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 560):
        
        # Assigning a Call to a Subscript (line 560):
        
        # Call to B(...): (line 560)
        # Processing the call arguments (line 560)
        
        # Obtaining the type of the subscript
        # Getting the type of 'xslice' (line 560)
        xslice_397404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 51), 'xslice', False)
        # Getting the type of 'self' (line 560)
        self_397405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 40), 'self', False)
        # Obtaining the member 'workd' of a type (line 560)
        workd_397406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 40), self_397405, 'workd')
        # Obtaining the member '__getitem__' of a type (line 560)
        getitem___397407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 40), workd_397406, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 560)
        subscript_call_result_397408 = invoke(stypy.reporting.localization.Localization(__file__, 560, 40), getitem___397407, xslice_397404)
        
        # Processing the call keyword arguments (line 560)
        kwargs_397409 = {}
        # Getting the type of 'self' (line 560)
        self_397402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 33), 'self', False)
        # Obtaining the member 'B' of a type (line 560)
        B_397403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 33), self_397402, 'B')
        # Calling B(args, kwargs) (line 560)
        B_call_result_397410 = invoke(stypy.reporting.localization.Localization(__file__, 560, 33), B_397403, *[subscript_call_result_397408], **kwargs_397409)
        
        # Getting the type of 'self' (line 560)
        self_397411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 12), 'self')
        # Obtaining the member 'workd' of a type (line 560)
        workd_397412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 12), self_397411, 'workd')
        # Getting the type of 'yslice' (line 560)
        yslice_397413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 23), 'yslice')
        # Storing an element on a container (line 560)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 560, 12), workd_397412, (yslice_397413, B_call_result_397410))
        # SSA branch for the else part of an if statement (line 559)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 561)
        self_397414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 13), 'self')
        # Obtaining the member 'ido' of a type (line 561)
        ido_397415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 561, 13), self_397414, 'ido')
        int_397416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 25), 'int')
        # Applying the binary operator '==' (line 561)
        result_eq_397417 = python_operator(stypy.reporting.localization.Localization(__file__, 561, 13), '==', ido_397415, int_397416)
        
        # Testing the type of an if condition (line 561)
        if_condition_397418 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 561, 13), result_eq_397417)
        # Assigning a type to the variable 'if_condition_397418' (line 561)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 13), 'if_condition_397418', if_condition_397418)
        # SSA begins for if statement (line 561)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 562)
        # Processing the call arguments (line 562)
        str_397420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 29), 'str', 'ARPACK requested user shifts.  Assure ISHIFT==0')
        # Processing the call keyword arguments (line 562)
        kwargs_397421 = {}
        # Getting the type of 'ValueError' (line 562)
        ValueError_397419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 562)
        ValueError_call_result_397422 = invoke(stypy.reporting.localization.Localization(__file__, 562, 18), ValueError_397419, *[str_397420], **kwargs_397421)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 562, 12), ValueError_call_result_397422, 'raise parameter', BaseException)
        # SSA branch for the else part of an if statement (line 561)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Attribute (line 564):
        
        # Assigning a Name to a Attribute (line 564):
        # Getting the type of 'True' (line 564)
        True_397423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 29), 'True')
        # Getting the type of 'self' (line 564)
        self_397424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 12), 'self')
        # Setting the type of the member 'converged' of a type (line 564)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 12), self_397424, 'converged', True_397423)
        
        
        # Getting the type of 'self' (line 566)
        self_397425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 15), 'self')
        # Obtaining the member 'info' of a type (line 566)
        info_397426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 15), self_397425, 'info')
        int_397427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 28), 'int')
        # Applying the binary operator '==' (line 566)
        result_eq_397428 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 15), '==', info_397426, int_397427)
        
        # Testing the type of an if condition (line 566)
        if_condition_397429 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 566, 12), result_eq_397428)
        # Assigning a type to the variable 'if_condition_397429' (line 566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 12), 'if_condition_397429', if_condition_397429)
        # SSA begins for if statement (line 566)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        pass
        # SSA branch for the else part of an if statement (line 566)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 568)
        self_397430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 17), 'self')
        # Obtaining the member 'info' of a type (line 568)
        info_397431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 17), self_397430, 'info')
        int_397432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 30), 'int')
        # Applying the binary operator '==' (line 568)
        result_eq_397433 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 17), '==', info_397431, int_397432)
        
        # Testing the type of an if condition (line 568)
        if_condition_397434 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 568, 17), result_eq_397433)
        # Assigning a type to the variable 'if_condition_397434' (line 568)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 568, 17), 'if_condition_397434', if_condition_397434)
        # SSA begins for if statement (line 568)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _raise_no_convergence(...): (line 569)
        # Processing the call keyword arguments (line 569)
        kwargs_397437 = {}
        # Getting the type of 'self' (line 569)
        self_397435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 16), 'self', False)
        # Obtaining the member '_raise_no_convergence' of a type (line 569)
        _raise_no_convergence_397436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 16), self_397435, '_raise_no_convergence')
        # Calling _raise_no_convergence(args, kwargs) (line 569)
        _raise_no_convergence_call_result_397438 = invoke(stypy.reporting.localization.Localization(__file__, 569, 16), _raise_no_convergence_397436, *[], **kwargs_397437)
        
        # SSA branch for the else part of an if statement (line 568)
        module_type_store.open_ssa_branch('else')
        
        # Call to ArpackError(...): (line 571)
        # Processing the call arguments (line 571)
        # Getting the type of 'self' (line 571)
        self_397440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 34), 'self', False)
        # Obtaining the member 'info' of a type (line 571)
        info_397441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 34), self_397440, 'info')
        # Processing the call keyword arguments (line 571)
        # Getting the type of 'self' (line 571)
        self_397442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 54), 'self', False)
        # Obtaining the member 'iterate_infodict' of a type (line 571)
        iterate_infodict_397443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 54), self_397442, 'iterate_infodict')
        keyword_397444 = iterate_infodict_397443
        kwargs_397445 = {'infodict': keyword_397444}
        # Getting the type of 'ArpackError' (line 571)
        ArpackError_397439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 22), 'ArpackError', False)
        # Calling ArpackError(args, kwargs) (line 571)
        ArpackError_call_result_397446 = invoke(stypy.reporting.localization.Localization(__file__, 571, 22), ArpackError_397439, *[info_397441], **kwargs_397445)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 571, 16), ArpackError_call_result_397446, 'raise parameter', BaseException)
        # SSA join for if statement (line 568)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 566)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 561)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 559)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 544)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 541)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'iterate(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'iterate' in the type store
        # Getting the type of 'stypy_return_type' (line 533)
        stypy_return_type_397447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_397447)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'iterate'
        return stypy_return_type_397447


    @norecursion
    def extract(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'extract'
        module_type_store = module_type_store.open_function_context('extract', 573, 4, False)
        # Assigning a type to the variable 'self' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_localization', localization)
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_type_store', module_type_store)
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_function_name', '_SymmetricArpackParams.extract')
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_param_names_list', ['return_eigenvectors'])
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_varargs_param_name', None)
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_call_defaults', defaults)
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_call_varargs', varargs)
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _SymmetricArpackParams.extract.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_SymmetricArpackParams.extract', ['return_eigenvectors'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'extract', localization, ['return_eigenvectors'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'extract(...)' code ##################

        
        # Assigning a Name to a Name (line 574):
        
        # Assigning a Name to a Name (line 574):
        # Getting the type of 'return_eigenvectors' (line 574)
        return_eigenvectors_397448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 15), 'return_eigenvectors')
        # Assigning a type to the variable 'rvec' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'rvec', return_eigenvectors_397448)
        
        # Assigning a Num to a Name (line 575):
        
        # Assigning a Num to a Name (line 575):
        int_397449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 15), 'int')
        # Assigning a type to the variable 'ierr' (line 575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 8), 'ierr', int_397449)
        
        # Assigning a Str to a Name (line 576):
        
        # Assigning a Str to a Name (line 576):
        str_397450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 17), 'str', 'A')
        # Assigning a type to the variable 'howmny' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 8), 'howmny', str_397450)
        
        # Assigning a Call to a Name (line 577):
        
        # Assigning a Call to a Name (line 577):
        
        # Call to zeros(...): (line 577)
        # Processing the call arguments (line 577)
        # Getting the type of 'self' (line 577)
        self_397453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 27), 'self', False)
        # Obtaining the member 'ncv' of a type (line 577)
        ncv_397454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 577, 27), self_397453, 'ncv')
        str_397455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 37), 'str', 'int')
        # Processing the call keyword arguments (line 577)
        kwargs_397456 = {}
        # Getting the type of 'np' (line 577)
        np_397451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 18), 'np', False)
        # Obtaining the member 'zeros' of a type (line 577)
        zeros_397452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 577, 18), np_397451, 'zeros')
        # Calling zeros(args, kwargs) (line 577)
        zeros_call_result_397457 = invoke(stypy.reporting.localization.Localization(__file__, 577, 18), zeros_397452, *[ncv_397454, str_397455], **kwargs_397456)
        
        # Assigning a type to the variable 'sselect' (line 577)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 577, 8), 'sselect', zeros_call_result_397457)
        
        # Assigning a Call to a Tuple (line 578):
        
        # Assigning a Subscript to a Name (line 578):
        
        # Obtaining the type of the subscript
        int_397458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 8), 'int')
        
        # Call to _arpack_extract(...): (line 578)
        # Processing the call arguments (line 578)
        # Getting the type of 'rvec' (line 578)
        rvec_397461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 42), 'rvec', False)
        # Getting the type of 'howmny' (line 578)
        howmny_397462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 48), 'howmny', False)
        # Getting the type of 'sselect' (line 578)
        sselect_397463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 56), 'sselect', False)
        # Getting the type of 'self' (line 578)
        self_397464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 65), 'self', False)
        # Obtaining the member 'sigma' of a type (line 578)
        sigma_397465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 65), self_397464, 'sigma')
        # Getting the type of 'self' (line 579)
        self_397466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 579)
        bmat_397467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 42), self_397466, 'bmat')
        # Getting the type of 'self' (line 579)
        self_397468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 579)
        which_397469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 53), self_397468, 'which')
        # Getting the type of 'self' (line 579)
        self_397470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 579)
        k_397471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 65), self_397470, 'k')
        # Getting the type of 'self' (line 580)
        self_397472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 42), 'self', False)
        # Obtaining the member 'tol' of a type (line 580)
        tol_397473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 42), self_397472, 'tol')
        # Getting the type of 'self' (line 580)
        self_397474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 52), 'self', False)
        # Obtaining the member 'resid' of a type (line 580)
        resid_397475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 52), self_397474, 'resid')
        # Getting the type of 'self' (line 580)
        self_397476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 64), 'self', False)
        # Obtaining the member 'v' of a type (line 580)
        v_397477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 64), self_397476, 'v')
        
        # Obtaining the type of the subscript
        int_397478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 54), 'int')
        int_397479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 56), 'int')
        slice_397480 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 581, 42), int_397478, int_397479, None)
        # Getting the type of 'self' (line 581)
        self_397481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 42), 'self', False)
        # Obtaining the member 'iparam' of a type (line 581)
        iparam_397482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 42), self_397481, 'iparam')
        # Obtaining the member '__getitem__' of a type (line 581)
        getitem___397483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 42), iparam_397482, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 581)
        subscript_call_result_397484 = invoke(stypy.reporting.localization.Localization(__file__, 581, 42), getitem___397483, slice_397480)
        
        # Getting the type of 'self' (line 581)
        self_397485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 60), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 581)
        ipntr_397486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 60), self_397485, 'ipntr')
        
        # Obtaining the type of the subscript
        int_397487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 53), 'int')
        int_397488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 55), 'int')
        # Getting the type of 'self' (line 582)
        self_397489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 59), 'self', False)
        # Obtaining the member 'n' of a type (line 582)
        n_397490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 59), self_397489, 'n')
        # Applying the binary operator '*' (line 582)
        result_mul_397491 = python_operator(stypy.reporting.localization.Localization(__file__, 582, 55), '*', int_397488, n_397490)
        
        slice_397492 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 582, 42), int_397487, result_mul_397491, None)
        # Getting the type of 'self' (line 582)
        self_397493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 42), 'self', False)
        # Obtaining the member 'workd' of a type (line 582)
        workd_397494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 42), self_397493, 'workd')
        # Obtaining the member '__getitem__' of a type (line 582)
        getitem___397495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 42), workd_397494, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 582)
        subscript_call_result_397496 = invoke(stypy.reporting.localization.Localization(__file__, 582, 42), getitem___397495, slice_397492)
        
        # Getting the type of 'self' (line 583)
        self_397497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 42), 'self', False)
        # Obtaining the member 'workl' of a type (line 583)
        workl_397498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 42), self_397497, 'workl')
        # Getting the type of 'ierr' (line 583)
        ierr_397499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 54), 'ierr', False)
        # Processing the call keyword arguments (line 578)
        kwargs_397500 = {}
        # Getting the type of 'self' (line 578)
        self_397459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 21), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 578)
        _arpack_extract_397460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 21), self_397459, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 578)
        _arpack_extract_call_result_397501 = invoke(stypy.reporting.localization.Localization(__file__, 578, 21), _arpack_extract_397460, *[rvec_397461, howmny_397462, sselect_397463, sigma_397465, bmat_397467, which_397469, k_397471, tol_397473, resid_397475, v_397477, subscript_call_result_397484, ipntr_397486, subscript_call_result_397496, workl_397498, ierr_397499], **kwargs_397500)
        
        # Obtaining the member '__getitem__' of a type (line 578)
        getitem___397502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 8), _arpack_extract_call_result_397501, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 578)
        subscript_call_result_397503 = invoke(stypy.reporting.localization.Localization(__file__, 578, 8), getitem___397502, int_397458)
        
        # Assigning a type to the variable 'tuple_var_assignment_396003' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'tuple_var_assignment_396003', subscript_call_result_397503)
        
        # Assigning a Subscript to a Name (line 578):
        
        # Obtaining the type of the subscript
        int_397504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 8), 'int')
        
        # Call to _arpack_extract(...): (line 578)
        # Processing the call arguments (line 578)
        # Getting the type of 'rvec' (line 578)
        rvec_397507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 42), 'rvec', False)
        # Getting the type of 'howmny' (line 578)
        howmny_397508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 48), 'howmny', False)
        # Getting the type of 'sselect' (line 578)
        sselect_397509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 56), 'sselect', False)
        # Getting the type of 'self' (line 578)
        self_397510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 65), 'self', False)
        # Obtaining the member 'sigma' of a type (line 578)
        sigma_397511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 65), self_397510, 'sigma')
        # Getting the type of 'self' (line 579)
        self_397512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 579)
        bmat_397513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 42), self_397512, 'bmat')
        # Getting the type of 'self' (line 579)
        self_397514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 579)
        which_397515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 53), self_397514, 'which')
        # Getting the type of 'self' (line 579)
        self_397516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 579)
        k_397517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 65), self_397516, 'k')
        # Getting the type of 'self' (line 580)
        self_397518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 42), 'self', False)
        # Obtaining the member 'tol' of a type (line 580)
        tol_397519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 42), self_397518, 'tol')
        # Getting the type of 'self' (line 580)
        self_397520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 52), 'self', False)
        # Obtaining the member 'resid' of a type (line 580)
        resid_397521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 52), self_397520, 'resid')
        # Getting the type of 'self' (line 580)
        self_397522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 64), 'self', False)
        # Obtaining the member 'v' of a type (line 580)
        v_397523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 64), self_397522, 'v')
        
        # Obtaining the type of the subscript
        int_397524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 54), 'int')
        int_397525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 56), 'int')
        slice_397526 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 581, 42), int_397524, int_397525, None)
        # Getting the type of 'self' (line 581)
        self_397527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 42), 'self', False)
        # Obtaining the member 'iparam' of a type (line 581)
        iparam_397528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 42), self_397527, 'iparam')
        # Obtaining the member '__getitem__' of a type (line 581)
        getitem___397529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 42), iparam_397528, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 581)
        subscript_call_result_397530 = invoke(stypy.reporting.localization.Localization(__file__, 581, 42), getitem___397529, slice_397526)
        
        # Getting the type of 'self' (line 581)
        self_397531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 60), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 581)
        ipntr_397532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 60), self_397531, 'ipntr')
        
        # Obtaining the type of the subscript
        int_397533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 53), 'int')
        int_397534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 55), 'int')
        # Getting the type of 'self' (line 582)
        self_397535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 59), 'self', False)
        # Obtaining the member 'n' of a type (line 582)
        n_397536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 59), self_397535, 'n')
        # Applying the binary operator '*' (line 582)
        result_mul_397537 = python_operator(stypy.reporting.localization.Localization(__file__, 582, 55), '*', int_397534, n_397536)
        
        slice_397538 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 582, 42), int_397533, result_mul_397537, None)
        # Getting the type of 'self' (line 582)
        self_397539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 42), 'self', False)
        # Obtaining the member 'workd' of a type (line 582)
        workd_397540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 42), self_397539, 'workd')
        # Obtaining the member '__getitem__' of a type (line 582)
        getitem___397541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 42), workd_397540, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 582)
        subscript_call_result_397542 = invoke(stypy.reporting.localization.Localization(__file__, 582, 42), getitem___397541, slice_397538)
        
        # Getting the type of 'self' (line 583)
        self_397543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 42), 'self', False)
        # Obtaining the member 'workl' of a type (line 583)
        workl_397544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 42), self_397543, 'workl')
        # Getting the type of 'ierr' (line 583)
        ierr_397545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 54), 'ierr', False)
        # Processing the call keyword arguments (line 578)
        kwargs_397546 = {}
        # Getting the type of 'self' (line 578)
        self_397505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 21), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 578)
        _arpack_extract_397506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 21), self_397505, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 578)
        _arpack_extract_call_result_397547 = invoke(stypy.reporting.localization.Localization(__file__, 578, 21), _arpack_extract_397506, *[rvec_397507, howmny_397508, sselect_397509, sigma_397511, bmat_397513, which_397515, k_397517, tol_397519, resid_397521, v_397523, subscript_call_result_397530, ipntr_397532, subscript_call_result_397542, workl_397544, ierr_397545], **kwargs_397546)
        
        # Obtaining the member '__getitem__' of a type (line 578)
        getitem___397548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 8), _arpack_extract_call_result_397547, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 578)
        subscript_call_result_397549 = invoke(stypy.reporting.localization.Localization(__file__, 578, 8), getitem___397548, int_397504)
        
        # Assigning a type to the variable 'tuple_var_assignment_396004' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'tuple_var_assignment_396004', subscript_call_result_397549)
        
        # Assigning a Subscript to a Name (line 578):
        
        # Obtaining the type of the subscript
        int_397550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 8), 'int')
        
        # Call to _arpack_extract(...): (line 578)
        # Processing the call arguments (line 578)
        # Getting the type of 'rvec' (line 578)
        rvec_397553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 42), 'rvec', False)
        # Getting the type of 'howmny' (line 578)
        howmny_397554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 48), 'howmny', False)
        # Getting the type of 'sselect' (line 578)
        sselect_397555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 56), 'sselect', False)
        # Getting the type of 'self' (line 578)
        self_397556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 65), 'self', False)
        # Obtaining the member 'sigma' of a type (line 578)
        sigma_397557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 65), self_397556, 'sigma')
        # Getting the type of 'self' (line 579)
        self_397558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 42), 'self', False)
        # Obtaining the member 'bmat' of a type (line 579)
        bmat_397559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 42), self_397558, 'bmat')
        # Getting the type of 'self' (line 579)
        self_397560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 53), 'self', False)
        # Obtaining the member 'which' of a type (line 579)
        which_397561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 53), self_397560, 'which')
        # Getting the type of 'self' (line 579)
        self_397562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 65), 'self', False)
        # Obtaining the member 'k' of a type (line 579)
        k_397563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 65), self_397562, 'k')
        # Getting the type of 'self' (line 580)
        self_397564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 42), 'self', False)
        # Obtaining the member 'tol' of a type (line 580)
        tol_397565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 42), self_397564, 'tol')
        # Getting the type of 'self' (line 580)
        self_397566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 52), 'self', False)
        # Obtaining the member 'resid' of a type (line 580)
        resid_397567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 52), self_397566, 'resid')
        # Getting the type of 'self' (line 580)
        self_397568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 64), 'self', False)
        # Obtaining the member 'v' of a type (line 580)
        v_397569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 64), self_397568, 'v')
        
        # Obtaining the type of the subscript
        int_397570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 54), 'int')
        int_397571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 56), 'int')
        slice_397572 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 581, 42), int_397570, int_397571, None)
        # Getting the type of 'self' (line 581)
        self_397573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 42), 'self', False)
        # Obtaining the member 'iparam' of a type (line 581)
        iparam_397574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 42), self_397573, 'iparam')
        # Obtaining the member '__getitem__' of a type (line 581)
        getitem___397575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 42), iparam_397574, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 581)
        subscript_call_result_397576 = invoke(stypy.reporting.localization.Localization(__file__, 581, 42), getitem___397575, slice_397572)
        
        # Getting the type of 'self' (line 581)
        self_397577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 60), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 581)
        ipntr_397578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 60), self_397577, 'ipntr')
        
        # Obtaining the type of the subscript
        int_397579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 53), 'int')
        int_397580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 55), 'int')
        # Getting the type of 'self' (line 582)
        self_397581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 59), 'self', False)
        # Obtaining the member 'n' of a type (line 582)
        n_397582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 59), self_397581, 'n')
        # Applying the binary operator '*' (line 582)
        result_mul_397583 = python_operator(stypy.reporting.localization.Localization(__file__, 582, 55), '*', int_397580, n_397582)
        
        slice_397584 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 582, 42), int_397579, result_mul_397583, None)
        # Getting the type of 'self' (line 582)
        self_397585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 42), 'self', False)
        # Obtaining the member 'workd' of a type (line 582)
        workd_397586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 42), self_397585, 'workd')
        # Obtaining the member '__getitem__' of a type (line 582)
        getitem___397587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 42), workd_397586, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 582)
        subscript_call_result_397588 = invoke(stypy.reporting.localization.Localization(__file__, 582, 42), getitem___397587, slice_397584)
        
        # Getting the type of 'self' (line 583)
        self_397589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 42), 'self', False)
        # Obtaining the member 'workl' of a type (line 583)
        workl_397590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 42), self_397589, 'workl')
        # Getting the type of 'ierr' (line 583)
        ierr_397591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 54), 'ierr', False)
        # Processing the call keyword arguments (line 578)
        kwargs_397592 = {}
        # Getting the type of 'self' (line 578)
        self_397551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 21), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 578)
        _arpack_extract_397552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 21), self_397551, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 578)
        _arpack_extract_call_result_397593 = invoke(stypy.reporting.localization.Localization(__file__, 578, 21), _arpack_extract_397552, *[rvec_397553, howmny_397554, sselect_397555, sigma_397557, bmat_397559, which_397561, k_397563, tol_397565, resid_397567, v_397569, subscript_call_result_397576, ipntr_397578, subscript_call_result_397588, workl_397590, ierr_397591], **kwargs_397592)
        
        # Obtaining the member '__getitem__' of a type (line 578)
        getitem___397594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 8), _arpack_extract_call_result_397593, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 578)
        subscript_call_result_397595 = invoke(stypy.reporting.localization.Localization(__file__, 578, 8), getitem___397594, int_397550)
        
        # Assigning a type to the variable 'tuple_var_assignment_396005' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'tuple_var_assignment_396005', subscript_call_result_397595)
        
        # Assigning a Name to a Name (line 578):
        # Getting the type of 'tuple_var_assignment_396003' (line 578)
        tuple_var_assignment_396003_397596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'tuple_var_assignment_396003')
        # Assigning a type to the variable 'd' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'd', tuple_var_assignment_396003_397596)
        
        # Assigning a Name to a Name (line 578):
        # Getting the type of 'tuple_var_assignment_396004' (line 578)
        tuple_var_assignment_396004_397597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'tuple_var_assignment_396004')
        # Assigning a type to the variable 'z' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 11), 'z', tuple_var_assignment_396004_397597)
        
        # Assigning a Name to a Name (line 578):
        # Getting the type of 'tuple_var_assignment_396005' (line 578)
        tuple_var_assignment_396005_397598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'tuple_var_assignment_396005')
        # Assigning a type to the variable 'ierr' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 14), 'ierr', tuple_var_assignment_396005_397598)
        
        
        # Getting the type of 'ierr' (line 584)
        ierr_397599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 11), 'ierr')
        int_397600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 19), 'int')
        # Applying the binary operator '!=' (line 584)
        result_ne_397601 = python_operator(stypy.reporting.localization.Localization(__file__, 584, 11), '!=', ierr_397599, int_397600)
        
        # Testing the type of an if condition (line 584)
        if_condition_397602 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 584, 8), result_ne_397601)
        # Assigning a type to the variable 'if_condition_397602' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'if_condition_397602', if_condition_397602)
        # SSA begins for if statement (line 584)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ArpackError(...): (line 585)
        # Processing the call arguments (line 585)
        # Getting the type of 'ierr' (line 585)
        ierr_397604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 30), 'ierr', False)
        # Processing the call keyword arguments (line 585)
        # Getting the type of 'self' (line 585)
        self_397605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 45), 'self', False)
        # Obtaining the member 'extract_infodict' of a type (line 585)
        extract_infodict_397606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 45), self_397605, 'extract_infodict')
        keyword_397607 = extract_infodict_397606
        kwargs_397608 = {'infodict': keyword_397607}
        # Getting the type of 'ArpackError' (line 585)
        ArpackError_397603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 18), 'ArpackError', False)
        # Calling ArpackError(args, kwargs) (line 585)
        ArpackError_call_result_397609 = invoke(stypy.reporting.localization.Localization(__file__, 585, 18), ArpackError_397603, *[ierr_397604], **kwargs_397608)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 585, 12), ArpackError_call_result_397609, 'raise parameter', BaseException)
        # SSA join for if statement (line 584)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Name (line 586):
        
        # Assigning a Subscript to a Name (line 586):
        
        # Obtaining the type of the subscript
        int_397610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 27), 'int')
        # Getting the type of 'self' (line 586)
        self_397611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 15), 'self')
        # Obtaining the member 'iparam' of a type (line 586)
        iparam_397612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 15), self_397611, 'iparam')
        # Obtaining the member '__getitem__' of a type (line 586)
        getitem___397613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 15), iparam_397612, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 586)
        subscript_call_result_397614 = invoke(stypy.reporting.localization.Localization(__file__, 586, 15), getitem___397613, int_397610)
        
        # Assigning a type to the variable 'k_ok' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 8), 'k_ok', subscript_call_result_397614)
        
        # Assigning a Subscript to a Name (line 587):
        
        # Assigning a Subscript to a Name (line 587):
        
        # Obtaining the type of the subscript
        # Getting the type of 'k_ok' (line 587)
        k_ok_397615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 15), 'k_ok')
        slice_397616 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 587, 12), None, k_ok_397615, None)
        # Getting the type of 'd' (line 587)
        d_397617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 12), 'd')
        # Obtaining the member '__getitem__' of a type (line 587)
        getitem___397618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 12), d_397617, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 587)
        subscript_call_result_397619 = invoke(stypy.reporting.localization.Localization(__file__, 587, 12), getitem___397618, slice_397616)
        
        # Assigning a type to the variable 'd' (line 587)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 8), 'd', subscript_call_result_397619)
        
        # Assigning a Subscript to a Name (line 588):
        
        # Assigning a Subscript to a Name (line 588):
        
        # Obtaining the type of the subscript
        slice_397620 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 588, 12), None, None, None)
        # Getting the type of 'k_ok' (line 588)
        k_ok_397621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 18), 'k_ok')
        slice_397622 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 588, 12), None, k_ok_397621, None)
        # Getting the type of 'z' (line 588)
        z_397623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 12), 'z')
        # Obtaining the member '__getitem__' of a type (line 588)
        getitem___397624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 12), z_397623, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 588)
        subscript_call_result_397625 = invoke(stypy.reporting.localization.Localization(__file__, 588, 12), getitem___397624, (slice_397620, slice_397622))
        
        # Assigning a type to the variable 'z' (line 588)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 588, 8), 'z', subscript_call_result_397625)
        
        # Getting the type of 'return_eigenvectors' (line 590)
        return_eigenvectors_397626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 11), 'return_eigenvectors')
        # Testing the type of an if condition (line 590)
        if_condition_397627 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 590, 8), return_eigenvectors_397626)
        # Assigning a type to the variable 'if_condition_397627' (line 590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 8), 'if_condition_397627', if_condition_397627)
        # SSA begins for if statement (line 590)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'tuple' (line 591)
        tuple_397628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 591)
        # Adding element type (line 591)
        # Getting the type of 'd' (line 591)
        d_397629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 19), 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 19), tuple_397628, d_397629)
        # Adding element type (line 591)
        # Getting the type of 'z' (line 591)
        z_397630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 22), 'z')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 19), tuple_397628, z_397630)
        
        # Assigning a type to the variable 'stypy_return_type' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 12), 'stypy_return_type', tuple_397628)
        # SSA branch for the else part of an if statement (line 590)
        module_type_store.open_ssa_branch('else')
        # Getting the type of 'd' (line 593)
        d_397631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 19), 'd')
        # Assigning a type to the variable 'stypy_return_type' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 12), 'stypy_return_type', d_397631)
        # SSA join for if statement (line 590)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'extract(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'extract' in the type store
        # Getting the type of 'stypy_return_type' (line 573)
        stypy_return_type_397632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_397632)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'extract'
        return stypy_return_type_397632


# Assigning a type to the variable '_SymmetricArpackParams' (line 378)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 0), '_SymmetricArpackParams', _SymmetricArpackParams)
# Declaration of the '_UnsymmetricArpackParams' class
# Getting the type of '_ArpackParams' (line 596)
_ArpackParams_397633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 31), '_ArpackParams')

class _UnsymmetricArpackParams(_ArpackParams_397633, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_397634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 46), 'int')
        # Getting the type of 'None' (line 597)
        None_397635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 58), 'None')
        # Getting the type of 'None' (line 598)
        None_397636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 29), 'None')
        # Getting the type of 'None' (line 598)
        None_397637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 41), 'None')
        # Getting the type of 'None' (line 599)
        None_397638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 21), 'None')
        # Getting the type of 'None' (line 599)
        None_397639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 30), 'None')
        # Getting the type of 'None' (line 599)
        None_397640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 44), 'None')
        str_397641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 56), 'str', 'LM')
        int_397642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 66), 'int')
        defaults = [int_397634, None_397635, None_397636, None_397637, None_397638, None_397639, None_397640, str_397641, int_397642]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 597, 4, False)
        # Assigning a type to the variable 'self' (line 598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_UnsymmetricArpackParams.__init__', ['n', 'k', 'tp', 'matvec', 'mode', 'M_matvec', 'Minv_matvec', 'sigma', 'ncv', 'v0', 'maxiter', 'which', 'tol'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['n', 'k', 'tp', 'matvec', 'mode', 'M_matvec', 'Minv_matvec', 'sigma', 'ncv', 'v0', 'maxiter', 'which', 'tol'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Getting the type of 'mode' (line 634)
        mode_397643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 11), 'mode')
        int_397644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 634, 19), 'int')
        # Applying the binary operator '==' (line 634)
        result_eq_397645 = python_operator(stypy.reporting.localization.Localization(__file__, 634, 11), '==', mode_397643, int_397644)
        
        # Testing the type of an if condition (line 634)
        if_condition_397646 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 634, 8), result_eq_397645)
        # Assigning a type to the variable 'if_condition_397646' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'if_condition_397646', if_condition_397646)
        # SSA begins for if statement (line 634)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 635)
        # Getting the type of 'matvec' (line 635)
        matvec_397647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 15), 'matvec')
        # Getting the type of 'None' (line 635)
        None_397648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 25), 'None')
        
        (may_be_397649, more_types_in_union_397650) = may_be_none(matvec_397647, None_397648)

        if may_be_397649:

            if more_types_in_union_397650:
                # Runtime conditional SSA (line 635)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 636)
            # Processing the call arguments (line 636)
            str_397652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 33), 'str', 'matvec must be specified for mode=1')
            # Processing the call keyword arguments (line 636)
            kwargs_397653 = {}
            # Getting the type of 'ValueError' (line 636)
            ValueError_397651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 636)
            ValueError_call_result_397654 = invoke(stypy.reporting.localization.Localization(__file__, 636, 22), ValueError_397651, *[str_397652], **kwargs_397653)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 636, 16), ValueError_call_result_397654, 'raise parameter', BaseException)

            if more_types_in_union_397650:
                # SSA join for if statement (line 635)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 637)
        # Getting the type of 'M_matvec' (line 637)
        M_matvec_397655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 12), 'M_matvec')
        # Getting the type of 'None' (line 637)
        None_397656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 31), 'None')
        
        (may_be_397657, more_types_in_union_397658) = may_not_be_none(M_matvec_397655, None_397656)

        if may_be_397657:

            if more_types_in_union_397658:
                # Runtime conditional SSA (line 637)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 638)
            # Processing the call arguments (line 638)
            str_397660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 33), 'str', 'M_matvec cannot be specified for mode=1')
            # Processing the call keyword arguments (line 638)
            kwargs_397661 = {}
            # Getting the type of 'ValueError' (line 638)
            ValueError_397659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 638)
            ValueError_call_result_397662 = invoke(stypy.reporting.localization.Localization(__file__, 638, 22), ValueError_397659, *[str_397660], **kwargs_397661)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 638, 16), ValueError_call_result_397662, 'raise parameter', BaseException)

            if more_types_in_union_397658:
                # SSA join for if statement (line 637)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 639)
        # Getting the type of 'Minv_matvec' (line 639)
        Minv_matvec_397663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 12), 'Minv_matvec')
        # Getting the type of 'None' (line 639)
        None_397664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 34), 'None')
        
        (may_be_397665, more_types_in_union_397666) = may_not_be_none(Minv_matvec_397663, None_397664)

        if may_be_397665:

            if more_types_in_union_397666:
                # Runtime conditional SSA (line 639)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 640)
            # Processing the call arguments (line 640)
            str_397668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 33), 'str', 'Minv_matvec cannot be specified for mode=1')
            # Processing the call keyword arguments (line 640)
            kwargs_397669 = {}
            # Getting the type of 'ValueError' (line 640)
            ValueError_397667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 640)
            ValueError_call_result_397670 = invoke(stypy.reporting.localization.Localization(__file__, 640, 22), ValueError_397667, *[str_397668], **kwargs_397669)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 640, 16), ValueError_call_result_397670, 'raise parameter', BaseException)

            if more_types_in_union_397666:
                # SSA join for if statement (line 639)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 642):
        
        # Assigning a Name to a Attribute (line 642):
        # Getting the type of 'matvec' (line 642)
        matvec_397671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 22), 'matvec')
        # Getting the type of 'self' (line 642)
        self_397672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 12), 'self')
        # Setting the type of the member 'OP' of a type (line 642)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 642, 12), self_397672, 'OP', matvec_397671)
        
        # Assigning a Lambda to a Attribute (line 643):
        
        # Assigning a Lambda to a Attribute (line 643):

        @norecursion
        def _stypy_temp_lambda_211(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_211'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_211', 643, 21, True)
            # Passed parameters checking function
            _stypy_temp_lambda_211.stypy_localization = localization
            _stypy_temp_lambda_211.stypy_type_of_self = None
            _stypy_temp_lambda_211.stypy_type_store = module_type_store
            _stypy_temp_lambda_211.stypy_function_name = '_stypy_temp_lambda_211'
            _stypy_temp_lambda_211.stypy_param_names_list = ['x']
            _stypy_temp_lambda_211.stypy_varargs_param_name = None
            _stypy_temp_lambda_211.stypy_kwargs_param_name = None
            _stypy_temp_lambda_211.stypy_call_defaults = defaults
            _stypy_temp_lambda_211.stypy_call_varargs = varargs
            _stypy_temp_lambda_211.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_211', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_211', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'x' (line 643)
            x_397673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 31), 'x')
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 643)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 21), 'stypy_return_type', x_397673)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_211' in the type store
            # Getting the type of 'stypy_return_type' (line 643)
            stypy_return_type_397674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 21), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_397674)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_211'
            return stypy_return_type_397674

        # Assigning a type to the variable '_stypy_temp_lambda_211' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 21), '_stypy_temp_lambda_211', _stypy_temp_lambda_211)
        # Getting the type of '_stypy_temp_lambda_211' (line 643)
        _stypy_temp_lambda_211_397675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 21), '_stypy_temp_lambda_211')
        # Getting the type of 'self' (line 643)
        self_397676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'self')
        # Setting the type of the member 'B' of a type (line 643)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 12), self_397676, 'B', _stypy_temp_lambda_211_397675)
        
        # Assigning a Str to a Attribute (line 644):
        
        # Assigning a Str to a Attribute (line 644):
        str_397677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 24), 'str', 'I')
        # Getting the type of 'self' (line 644)
        self_397678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 12), 'self')
        # Setting the type of the member 'bmat' of a type (line 644)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 12), self_397678, 'bmat', str_397677)
        # SSA branch for the else part of an if statement (line 634)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 645)
        mode_397679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 13), 'mode')
        int_397680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 21), 'int')
        # Applying the binary operator '==' (line 645)
        result_eq_397681 = python_operator(stypy.reporting.localization.Localization(__file__, 645, 13), '==', mode_397679, int_397680)
        
        # Testing the type of an if condition (line 645)
        if_condition_397682 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 645, 13), result_eq_397681)
        # Assigning a type to the variable 'if_condition_397682' (line 645)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 13), 'if_condition_397682', if_condition_397682)
        # SSA begins for if statement (line 645)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 646)
        # Getting the type of 'matvec' (line 646)
        matvec_397683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 15), 'matvec')
        # Getting the type of 'None' (line 646)
        None_397684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 25), 'None')
        
        (may_be_397685, more_types_in_union_397686) = may_be_none(matvec_397683, None_397684)

        if may_be_397685:

            if more_types_in_union_397686:
                # Runtime conditional SSA (line 646)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 647)
            # Processing the call arguments (line 647)
            str_397688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 33), 'str', 'matvec must be specified for mode=2')
            # Processing the call keyword arguments (line 647)
            kwargs_397689 = {}
            # Getting the type of 'ValueError' (line 647)
            ValueError_397687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 647)
            ValueError_call_result_397690 = invoke(stypy.reporting.localization.Localization(__file__, 647, 22), ValueError_397687, *[str_397688], **kwargs_397689)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 647, 16), ValueError_call_result_397690, 'raise parameter', BaseException)

            if more_types_in_union_397686:
                # SSA join for if statement (line 646)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 648)
        # Getting the type of 'M_matvec' (line 648)
        M_matvec_397691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 15), 'M_matvec')
        # Getting the type of 'None' (line 648)
        None_397692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 27), 'None')
        
        (may_be_397693, more_types_in_union_397694) = may_be_none(M_matvec_397691, None_397692)

        if may_be_397693:

            if more_types_in_union_397694:
                # Runtime conditional SSA (line 648)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 649)
            # Processing the call arguments (line 649)
            str_397696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 33), 'str', 'M_matvec must be specified for mode=2')
            # Processing the call keyword arguments (line 649)
            kwargs_397697 = {}
            # Getting the type of 'ValueError' (line 649)
            ValueError_397695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 649)
            ValueError_call_result_397698 = invoke(stypy.reporting.localization.Localization(__file__, 649, 22), ValueError_397695, *[str_397696], **kwargs_397697)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 649, 16), ValueError_call_result_397698, 'raise parameter', BaseException)

            if more_types_in_union_397694:
                # SSA join for if statement (line 648)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 650)
        # Getting the type of 'Minv_matvec' (line 650)
        Minv_matvec_397699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 15), 'Minv_matvec')
        # Getting the type of 'None' (line 650)
        None_397700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 30), 'None')
        
        (may_be_397701, more_types_in_union_397702) = may_be_none(Minv_matvec_397699, None_397700)

        if may_be_397701:

            if more_types_in_union_397702:
                # Runtime conditional SSA (line 650)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 651)
            # Processing the call arguments (line 651)
            str_397704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 33), 'str', 'Minv_matvec must be specified for mode=2')
            # Processing the call keyword arguments (line 651)
            kwargs_397705 = {}
            # Getting the type of 'ValueError' (line 651)
            ValueError_397703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 651)
            ValueError_call_result_397706 = invoke(stypy.reporting.localization.Localization(__file__, 651, 22), ValueError_397703, *[str_397704], **kwargs_397705)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 651, 16), ValueError_call_result_397706, 'raise parameter', BaseException)

            if more_types_in_union_397702:
                # SSA join for if statement (line 650)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Lambda to a Attribute (line 653):
        
        # Assigning a Lambda to a Attribute (line 653):

        @norecursion
        def _stypy_temp_lambda_212(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_212'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_212', 653, 22, True)
            # Passed parameters checking function
            _stypy_temp_lambda_212.stypy_localization = localization
            _stypy_temp_lambda_212.stypy_type_of_self = None
            _stypy_temp_lambda_212.stypy_type_store = module_type_store
            _stypy_temp_lambda_212.stypy_function_name = '_stypy_temp_lambda_212'
            _stypy_temp_lambda_212.stypy_param_names_list = ['x']
            _stypy_temp_lambda_212.stypy_varargs_param_name = None
            _stypy_temp_lambda_212.stypy_kwargs_param_name = None
            _stypy_temp_lambda_212.stypy_call_defaults = defaults
            _stypy_temp_lambda_212.stypy_call_varargs = varargs
            _stypy_temp_lambda_212.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_212', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_212', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to Minv_matvec(...): (line 653)
            # Processing the call arguments (line 653)
            
            # Call to matvec(...): (line 653)
            # Processing the call arguments (line 653)
            # Getting the type of 'x' (line 653)
            x_397709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 51), 'x', False)
            # Processing the call keyword arguments (line 653)
            kwargs_397710 = {}
            # Getting the type of 'matvec' (line 653)
            matvec_397708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 44), 'matvec', False)
            # Calling matvec(args, kwargs) (line 653)
            matvec_call_result_397711 = invoke(stypy.reporting.localization.Localization(__file__, 653, 44), matvec_397708, *[x_397709], **kwargs_397710)
            
            # Processing the call keyword arguments (line 653)
            kwargs_397712 = {}
            # Getting the type of 'Minv_matvec' (line 653)
            Minv_matvec_397707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 32), 'Minv_matvec', False)
            # Calling Minv_matvec(args, kwargs) (line 653)
            Minv_matvec_call_result_397713 = invoke(stypy.reporting.localization.Localization(__file__, 653, 32), Minv_matvec_397707, *[matvec_call_result_397711], **kwargs_397712)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 653)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 653, 22), 'stypy_return_type', Minv_matvec_call_result_397713)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_212' in the type store
            # Getting the type of 'stypy_return_type' (line 653)
            stypy_return_type_397714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 22), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_397714)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_212'
            return stypy_return_type_397714

        # Assigning a type to the variable '_stypy_temp_lambda_212' (line 653)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 653, 22), '_stypy_temp_lambda_212', _stypy_temp_lambda_212)
        # Getting the type of '_stypy_temp_lambda_212' (line 653)
        _stypy_temp_lambda_212_397715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 22), '_stypy_temp_lambda_212')
        # Getting the type of 'self' (line 653)
        self_397716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 12), 'self')
        # Setting the type of the member 'OP' of a type (line 653)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 12), self_397716, 'OP', _stypy_temp_lambda_212_397715)
        
        # Assigning a Name to a Attribute (line 654):
        
        # Assigning a Name to a Attribute (line 654):
        # Getting the type of 'Minv_matvec' (line 654)
        Minv_matvec_397717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 23), 'Minv_matvec')
        # Getting the type of 'self' (line 654)
        self_397718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 12), 'self')
        # Setting the type of the member 'OPa' of a type (line 654)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 12), self_397718, 'OPa', Minv_matvec_397717)
        
        # Assigning a Name to a Attribute (line 655):
        
        # Assigning a Name to a Attribute (line 655):
        # Getting the type of 'matvec' (line 655)
        matvec_397719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 23), 'matvec')
        # Getting the type of 'self' (line 655)
        self_397720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 12), 'self')
        # Setting the type of the member 'OPb' of a type (line 655)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 655, 12), self_397720, 'OPb', matvec_397719)
        
        # Assigning a Name to a Attribute (line 656):
        
        # Assigning a Name to a Attribute (line 656):
        # Getting the type of 'M_matvec' (line 656)
        M_matvec_397721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 21), 'M_matvec')
        # Getting the type of 'self' (line 656)
        self_397722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 12), 'self')
        # Setting the type of the member 'B' of a type (line 656)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 656, 12), self_397722, 'B', M_matvec_397721)
        
        # Assigning a Str to a Attribute (line 657):
        
        # Assigning a Str to a Attribute (line 657):
        str_397723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 24), 'str', 'G')
        # Getting the type of 'self' (line 657)
        self_397724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 12), 'self')
        # Setting the type of the member 'bmat' of a type (line 657)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 12), self_397724, 'bmat', str_397723)
        # SSA branch for the else part of an if statement (line 645)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 658)
        mode_397725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 658, 13), 'mode')
        
        # Obtaining an instance of the builtin type 'tuple' (line 658)
        tuple_397726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 658)
        # Adding element type (line 658)
        int_397727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 22), tuple_397726, int_397727)
        # Adding element type (line 658)
        int_397728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 22), tuple_397726, int_397728)
        
        # Applying the binary operator 'in' (line 658)
        result_contains_397729 = python_operator(stypy.reporting.localization.Localization(__file__, 658, 13), 'in', mode_397725, tuple_397726)
        
        # Testing the type of an if condition (line 658)
        if_condition_397730 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 658, 13), result_contains_397729)
        # Assigning a type to the variable 'if_condition_397730' (line 658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 658, 13), 'if_condition_397730', if_condition_397730)
        # SSA begins for if statement (line 658)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 659)
        # Getting the type of 'matvec' (line 659)
        matvec_397731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 15), 'matvec')
        # Getting the type of 'None' (line 659)
        None_397732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 25), 'None')
        
        (may_be_397733, more_types_in_union_397734) = may_be_none(matvec_397731, None_397732)

        if may_be_397733:

            if more_types_in_union_397734:
                # Runtime conditional SSA (line 659)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 660)
            # Processing the call arguments (line 660)
            str_397736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 33), 'str', 'matvec must be specified for mode in (3,4)')
            # Processing the call keyword arguments (line 660)
            kwargs_397737 = {}
            # Getting the type of 'ValueError' (line 660)
            ValueError_397735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 660)
            ValueError_call_result_397738 = invoke(stypy.reporting.localization.Localization(__file__, 660, 22), ValueError_397735, *[str_397736], **kwargs_397737)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 660, 16), ValueError_call_result_397738, 'raise parameter', BaseException)

            if more_types_in_union_397734:
                # SSA join for if statement (line 659)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 662)
        # Getting the type of 'Minv_matvec' (line 662)
        Minv_matvec_397739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 15), 'Minv_matvec')
        # Getting the type of 'None' (line 662)
        None_397740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 30), 'None')
        
        (may_be_397741, more_types_in_union_397742) = may_be_none(Minv_matvec_397739, None_397740)

        if may_be_397741:

            if more_types_in_union_397742:
                # Runtime conditional SSA (line 662)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 663)
            # Processing the call arguments (line 663)
            str_397744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 33), 'str', 'Minv_matvec must be specified for mode in (3,4)')
            # Processing the call keyword arguments (line 663)
            kwargs_397745 = {}
            # Getting the type of 'ValueError' (line 663)
            ValueError_397743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 663)
            ValueError_call_result_397746 = invoke(stypy.reporting.localization.Localization(__file__, 663, 22), ValueError_397743, *[str_397744], **kwargs_397745)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 663, 16), ValueError_call_result_397746, 'raise parameter', BaseException)

            if more_types_in_union_397742:
                # SSA join for if statement (line 662)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 666):
        
        # Assigning a Name to a Attribute (line 666):
        # Getting the type of 'matvec' (line 666)
        matvec_397747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 26), 'matvec')
        # Getting the type of 'self' (line 666)
        self_397748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 12), 'self')
        # Setting the type of the member 'matvec' of a type (line 666)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 12), self_397748, 'matvec', matvec_397747)
        
        
        # Getting the type of 'tp' (line 667)
        tp_397749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 15), 'tp')
        str_397750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 21), 'str', 'DF')
        # Applying the binary operator 'in' (line 667)
        result_contains_397751 = python_operator(stypy.reporting.localization.Localization(__file__, 667, 15), 'in', tp_397749, str_397750)
        
        # Testing the type of an if condition (line 667)
        if_condition_397752 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 667, 12), result_contains_397751)
        # Assigning a type to the variable 'if_condition_397752' (line 667)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 667, 12), 'if_condition_397752', if_condition_397752)
        # SSA begins for if statement (line 667)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'mode' (line 668)
        mode_397753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 19), 'mode')
        int_397754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 27), 'int')
        # Applying the binary operator '==' (line 668)
        result_eq_397755 = python_operator(stypy.reporting.localization.Localization(__file__, 668, 19), '==', mode_397753, int_397754)
        
        # Testing the type of an if condition (line 668)
        if_condition_397756 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 668, 16), result_eq_397755)
        # Assigning a type to the variable 'if_condition_397756' (line 668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 16), 'if_condition_397756', if_condition_397756)
        # SSA begins for if statement (line 668)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 669):
        
        # Assigning a Name to a Attribute (line 669):
        # Getting the type of 'Minv_matvec' (line 669)
        Minv_matvec_397757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 31), 'Minv_matvec')
        # Getting the type of 'self' (line 669)
        self_397758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 20), 'self')
        # Setting the type of the member 'OPa' of a type (line 669)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 669, 20), self_397758, 'OPa', Minv_matvec_397757)
        # SSA branch for the else part of an if statement (line 668)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 671)
        # Processing the call arguments (line 671)
        str_397760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 37), 'str', 'mode=4 invalid for complex A')
        # Processing the call keyword arguments (line 671)
        kwargs_397761 = {}
        # Getting the type of 'ValueError' (line 671)
        ValueError_397759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 26), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 671)
        ValueError_call_result_397762 = invoke(stypy.reporting.localization.Localization(__file__, 671, 26), ValueError_397759, *[str_397760], **kwargs_397761)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 671, 20), ValueError_call_result_397762, 'raise parameter', BaseException)
        # SSA join for if statement (line 668)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 667)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 673)
        mode_397763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 19), 'mode')
        int_397764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 27), 'int')
        # Applying the binary operator '==' (line 673)
        result_eq_397765 = python_operator(stypy.reporting.localization.Localization(__file__, 673, 19), '==', mode_397763, int_397764)
        
        # Testing the type of an if condition (line 673)
        if_condition_397766 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 673, 16), result_eq_397765)
        # Assigning a type to the variable 'if_condition_397766' (line 673)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 16), 'if_condition_397766', if_condition_397766)
        # SSA begins for if statement (line 673)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Lambda to a Attribute (line 674):
        
        # Assigning a Lambda to a Attribute (line 674):

        @norecursion
        def _stypy_temp_lambda_213(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_213'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_213', 674, 31, True)
            # Passed parameters checking function
            _stypy_temp_lambda_213.stypy_localization = localization
            _stypy_temp_lambda_213.stypy_type_of_self = None
            _stypy_temp_lambda_213.stypy_type_store = module_type_store
            _stypy_temp_lambda_213.stypy_function_name = '_stypy_temp_lambda_213'
            _stypy_temp_lambda_213.stypy_param_names_list = ['x']
            _stypy_temp_lambda_213.stypy_varargs_param_name = None
            _stypy_temp_lambda_213.stypy_kwargs_param_name = None
            _stypy_temp_lambda_213.stypy_call_defaults = defaults
            _stypy_temp_lambda_213.stypy_call_varargs = varargs
            _stypy_temp_lambda_213.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_213', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_213', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to real(...): (line 674)
            # Processing the call arguments (line 674)
            
            # Call to Minv_matvec(...): (line 674)
            # Processing the call arguments (line 674)
            # Getting the type of 'x' (line 674)
            x_397770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 61), 'x', False)
            # Processing the call keyword arguments (line 674)
            kwargs_397771 = {}
            # Getting the type of 'Minv_matvec' (line 674)
            Minv_matvec_397769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 49), 'Minv_matvec', False)
            # Calling Minv_matvec(args, kwargs) (line 674)
            Minv_matvec_call_result_397772 = invoke(stypy.reporting.localization.Localization(__file__, 674, 49), Minv_matvec_397769, *[x_397770], **kwargs_397771)
            
            # Processing the call keyword arguments (line 674)
            kwargs_397773 = {}
            # Getting the type of 'np' (line 674)
            np_397767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 41), 'np', False)
            # Obtaining the member 'real' of a type (line 674)
            real_397768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 41), np_397767, 'real')
            # Calling real(args, kwargs) (line 674)
            real_call_result_397774 = invoke(stypy.reporting.localization.Localization(__file__, 674, 41), real_397768, *[Minv_matvec_call_result_397772], **kwargs_397773)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 674)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 31), 'stypy_return_type', real_call_result_397774)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_213' in the type store
            # Getting the type of 'stypy_return_type' (line 674)
            stypy_return_type_397775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 31), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_397775)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_213'
            return stypy_return_type_397775

        # Assigning a type to the variable '_stypy_temp_lambda_213' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 31), '_stypy_temp_lambda_213', _stypy_temp_lambda_213)
        # Getting the type of '_stypy_temp_lambda_213' (line 674)
        _stypy_temp_lambda_213_397776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 31), '_stypy_temp_lambda_213')
        # Getting the type of 'self' (line 674)
        self_397777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 20), 'self')
        # Setting the type of the member 'OPa' of a type (line 674)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 20), self_397777, 'OPa', _stypy_temp_lambda_213_397776)
        # SSA branch for the else part of an if statement (line 673)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Lambda to a Attribute (line 676):
        
        # Assigning a Lambda to a Attribute (line 676):

        @norecursion
        def _stypy_temp_lambda_214(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_214'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_214', 676, 31, True)
            # Passed parameters checking function
            _stypy_temp_lambda_214.stypy_localization = localization
            _stypy_temp_lambda_214.stypy_type_of_self = None
            _stypy_temp_lambda_214.stypy_type_store = module_type_store
            _stypy_temp_lambda_214.stypy_function_name = '_stypy_temp_lambda_214'
            _stypy_temp_lambda_214.stypy_param_names_list = ['x']
            _stypy_temp_lambda_214.stypy_varargs_param_name = None
            _stypy_temp_lambda_214.stypy_kwargs_param_name = None
            _stypy_temp_lambda_214.stypy_call_defaults = defaults
            _stypy_temp_lambda_214.stypy_call_varargs = varargs
            _stypy_temp_lambda_214.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_214', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_214', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to imag(...): (line 676)
            # Processing the call arguments (line 676)
            
            # Call to Minv_matvec(...): (line 676)
            # Processing the call arguments (line 676)
            # Getting the type of 'x' (line 676)
            x_397781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 61), 'x', False)
            # Processing the call keyword arguments (line 676)
            kwargs_397782 = {}
            # Getting the type of 'Minv_matvec' (line 676)
            Minv_matvec_397780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 49), 'Minv_matvec', False)
            # Calling Minv_matvec(args, kwargs) (line 676)
            Minv_matvec_call_result_397783 = invoke(stypy.reporting.localization.Localization(__file__, 676, 49), Minv_matvec_397780, *[x_397781], **kwargs_397782)
            
            # Processing the call keyword arguments (line 676)
            kwargs_397784 = {}
            # Getting the type of 'np' (line 676)
            np_397778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 41), 'np', False)
            # Obtaining the member 'imag' of a type (line 676)
            imag_397779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 676, 41), np_397778, 'imag')
            # Calling imag(args, kwargs) (line 676)
            imag_call_result_397785 = invoke(stypy.reporting.localization.Localization(__file__, 676, 41), imag_397779, *[Minv_matvec_call_result_397783], **kwargs_397784)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 676)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 676, 31), 'stypy_return_type', imag_call_result_397785)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_214' in the type store
            # Getting the type of 'stypy_return_type' (line 676)
            stypy_return_type_397786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 31), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_397786)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_214'
            return stypy_return_type_397786

        # Assigning a type to the variable '_stypy_temp_lambda_214' (line 676)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 676, 31), '_stypy_temp_lambda_214', _stypy_temp_lambda_214)
        # Getting the type of '_stypy_temp_lambda_214' (line 676)
        _stypy_temp_lambda_214_397787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 31), '_stypy_temp_lambda_214')
        # Getting the type of 'self' (line 676)
        self_397788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 676, 20), 'self')
        # Setting the type of the member 'OPa' of a type (line 676)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 676, 20), self_397788, 'OPa', _stypy_temp_lambda_214_397787)
        # SSA join for if statement (line 673)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 667)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 677)
        # Getting the type of 'M_matvec' (line 677)
        M_matvec_397789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 15), 'M_matvec')
        # Getting the type of 'None' (line 677)
        None_397790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 27), 'None')
        
        (may_be_397791, more_types_in_union_397792) = may_be_none(M_matvec_397789, None_397790)

        if may_be_397791:

            if more_types_in_union_397792:
                # Runtime conditional SSA (line 677)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Lambda to a Attribute (line 678):
            
            # Assigning a Lambda to a Attribute (line 678):

            @norecursion
            def _stypy_temp_lambda_215(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_215'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_215', 678, 25, True)
                # Passed parameters checking function
                _stypy_temp_lambda_215.stypy_localization = localization
                _stypy_temp_lambda_215.stypy_type_of_self = None
                _stypy_temp_lambda_215.stypy_type_store = module_type_store
                _stypy_temp_lambda_215.stypy_function_name = '_stypy_temp_lambda_215'
                _stypy_temp_lambda_215.stypy_param_names_list = ['x']
                _stypy_temp_lambda_215.stypy_varargs_param_name = None
                _stypy_temp_lambda_215.stypy_kwargs_param_name = None
                _stypy_temp_lambda_215.stypy_call_defaults = defaults
                _stypy_temp_lambda_215.stypy_call_varargs = varargs
                _stypy_temp_lambda_215.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_215', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_215', ['x'], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                # Getting the type of 'x' (line 678)
                x_397793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 35), 'x')
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 678)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 25), 'stypy_return_type', x_397793)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_215' in the type store
                # Getting the type of 'stypy_return_type' (line 678)
                stypy_return_type_397794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 25), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_397794)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_215'
                return stypy_return_type_397794

            # Assigning a type to the variable '_stypy_temp_lambda_215' (line 678)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 25), '_stypy_temp_lambda_215', _stypy_temp_lambda_215)
            # Getting the type of '_stypy_temp_lambda_215' (line 678)
            _stypy_temp_lambda_215_397795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 25), '_stypy_temp_lambda_215')
            # Getting the type of 'self' (line 678)
            self_397796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 16), 'self')
            # Setting the type of the member 'B' of a type (line 678)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 16), self_397796, 'B', _stypy_temp_lambda_215_397795)
            
            # Assigning a Str to a Attribute (line 679):
            
            # Assigning a Str to a Attribute (line 679):
            str_397797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 679, 28), 'str', 'I')
            # Getting the type of 'self' (line 679)
            self_397798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 16), 'self')
            # Setting the type of the member 'bmat' of a type (line 679)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 679, 16), self_397798, 'bmat', str_397797)
            
            # Assigning a Attribute to a Attribute (line 680):
            
            # Assigning a Attribute to a Attribute (line 680):
            # Getting the type of 'self' (line 680)
            self_397799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 26), 'self')
            # Obtaining the member 'OPa' of a type (line 680)
            OPa_397800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 26), self_397799, 'OPa')
            # Getting the type of 'self' (line 680)
            self_397801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 16), 'self')
            # Setting the type of the member 'OP' of a type (line 680)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 16), self_397801, 'OP', OPa_397800)

            if more_types_in_union_397792:
                # Runtime conditional SSA for else branch (line 677)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_397791) or more_types_in_union_397792):
            
            # Assigning a Name to a Attribute (line 682):
            
            # Assigning a Name to a Attribute (line 682):
            # Getting the type of 'M_matvec' (line 682)
            M_matvec_397802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 25), 'M_matvec')
            # Getting the type of 'self' (line 682)
            self_397803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 16), 'self')
            # Setting the type of the member 'B' of a type (line 682)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 16), self_397803, 'B', M_matvec_397802)
            
            # Assigning a Str to a Attribute (line 683):
            
            # Assigning a Str to a Attribute (line 683):
            str_397804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 28), 'str', 'G')
            # Getting the type of 'self' (line 683)
            self_397805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 16), 'self')
            # Setting the type of the member 'bmat' of a type (line 683)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 16), self_397805, 'bmat', str_397804)
            
            # Assigning a Lambda to a Attribute (line 684):
            
            # Assigning a Lambda to a Attribute (line 684):

            @norecursion
            def _stypy_temp_lambda_216(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_216'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_216', 684, 26, True)
                # Passed parameters checking function
                _stypy_temp_lambda_216.stypy_localization = localization
                _stypy_temp_lambda_216.stypy_type_of_self = None
                _stypy_temp_lambda_216.stypy_type_store = module_type_store
                _stypy_temp_lambda_216.stypy_function_name = '_stypy_temp_lambda_216'
                _stypy_temp_lambda_216.stypy_param_names_list = ['x']
                _stypy_temp_lambda_216.stypy_varargs_param_name = None
                _stypy_temp_lambda_216.stypy_kwargs_param_name = None
                _stypy_temp_lambda_216.stypy_call_defaults = defaults
                _stypy_temp_lambda_216.stypy_call_varargs = varargs
                _stypy_temp_lambda_216.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_216', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_216', ['x'], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                
                # Call to OPa(...): (line 684)
                # Processing the call arguments (line 684)
                
                # Call to M_matvec(...): (line 684)
                # Processing the call arguments (line 684)
                # Getting the type of 'x' (line 684)
                x_397809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 54), 'x', False)
                # Processing the call keyword arguments (line 684)
                kwargs_397810 = {}
                # Getting the type of 'M_matvec' (line 684)
                M_matvec_397808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 45), 'M_matvec', False)
                # Calling M_matvec(args, kwargs) (line 684)
                M_matvec_call_result_397811 = invoke(stypy.reporting.localization.Localization(__file__, 684, 45), M_matvec_397808, *[x_397809], **kwargs_397810)
                
                # Processing the call keyword arguments (line 684)
                kwargs_397812 = {}
                # Getting the type of 'self' (line 684)
                self_397806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 36), 'self', False)
                # Obtaining the member 'OPa' of a type (line 684)
                OPa_397807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 36), self_397806, 'OPa')
                # Calling OPa(args, kwargs) (line 684)
                OPa_call_result_397813 = invoke(stypy.reporting.localization.Localization(__file__, 684, 36), OPa_397807, *[M_matvec_call_result_397811], **kwargs_397812)
                
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 684)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 684, 26), 'stypy_return_type', OPa_call_result_397813)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_216' in the type store
                # Getting the type of 'stypy_return_type' (line 684)
                stypy_return_type_397814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 26), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_397814)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_216'
                return stypy_return_type_397814

            # Assigning a type to the variable '_stypy_temp_lambda_216' (line 684)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 684, 26), '_stypy_temp_lambda_216', _stypy_temp_lambda_216)
            # Getting the type of '_stypy_temp_lambda_216' (line 684)
            _stypy_temp_lambda_216_397815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 26), '_stypy_temp_lambda_216')
            # Getting the type of 'self' (line 684)
            self_397816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 16), 'self')
            # Setting the type of the member 'OP' of a type (line 684)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 16), self_397816, 'OP', _stypy_temp_lambda_216_397815)

            if (may_be_397791 and more_types_in_union_397792):
                # SSA join for if statement (line 677)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA branch for the else part of an if statement (line 658)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 686)
        # Processing the call arguments (line 686)
        str_397818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 29), 'str', 'mode=%i not implemented')
        # Getting the type of 'mode' (line 686)
        mode_397819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 57), 'mode', False)
        # Applying the binary operator '%' (line 686)
        result_mod_397820 = python_operator(stypy.reporting.localization.Localization(__file__, 686, 29), '%', str_397818, mode_397819)
        
        # Processing the call keyword arguments (line 686)
        kwargs_397821 = {}
        # Getting the type of 'ValueError' (line 686)
        ValueError_397817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 686)
        ValueError_call_result_397822 = invoke(stypy.reporting.localization.Localization(__file__, 686, 18), ValueError_397817, *[result_mod_397820], **kwargs_397821)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 686, 12), ValueError_call_result_397822, 'raise parameter', BaseException)
        # SSA join for if statement (line 658)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 645)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 634)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'which' (line 688)
        which_397823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 11), 'which')
        # Getting the type of '_NEUPD_WHICH' (line 688)
        _NEUPD_WHICH_397824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 24), '_NEUPD_WHICH')
        # Applying the binary operator 'notin' (line 688)
        result_contains_397825 = python_operator(stypy.reporting.localization.Localization(__file__, 688, 11), 'notin', which_397823, _NEUPD_WHICH_397824)
        
        # Testing the type of an if condition (line 688)
        if_condition_397826 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 688, 8), result_contains_397825)
        # Assigning a type to the variable 'if_condition_397826' (line 688)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 8), 'if_condition_397826', if_condition_397826)
        # SSA begins for if statement (line 688)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 689)
        # Processing the call arguments (line 689)
        str_397828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 689, 29), 'str', 'Parameter which must be one of %s')
        
        # Call to join(...): (line 690)
        # Processing the call arguments (line 690)
        # Getting the type of '_NEUPD_WHICH' (line 690)
        _NEUPD_WHICH_397831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 40), '_NEUPD_WHICH', False)
        # Processing the call keyword arguments (line 690)
        kwargs_397832 = {}
        str_397829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 31), 'str', ' ')
        # Obtaining the member 'join' of a type (line 690)
        join_397830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 31), str_397829, 'join')
        # Calling join(args, kwargs) (line 690)
        join_call_result_397833 = invoke(stypy.reporting.localization.Localization(__file__, 690, 31), join_397830, *[_NEUPD_WHICH_397831], **kwargs_397832)
        
        # Applying the binary operator '%' (line 689)
        result_mod_397834 = python_operator(stypy.reporting.localization.Localization(__file__, 689, 29), '%', str_397828, join_call_result_397833)
        
        # Processing the call keyword arguments (line 689)
        kwargs_397835 = {}
        # Getting the type of 'ValueError' (line 689)
        ValueError_397827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 689)
        ValueError_call_result_397836 = invoke(stypy.reporting.localization.Localization(__file__, 689, 18), ValueError_397827, *[result_mod_397834], **kwargs_397835)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 689, 12), ValueError_call_result_397836, 'raise parameter', BaseException)
        # SSA join for if statement (line 688)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'k' (line 691)
        k_397837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 11), 'k')
        # Getting the type of 'n' (line 691)
        n_397838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 16), 'n')
        int_397839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 20), 'int')
        # Applying the binary operator '-' (line 691)
        result_sub_397840 = python_operator(stypy.reporting.localization.Localization(__file__, 691, 16), '-', n_397838, int_397839)
        
        # Applying the binary operator '>=' (line 691)
        result_ge_397841 = python_operator(stypy.reporting.localization.Localization(__file__, 691, 11), '>=', k_397837, result_sub_397840)
        
        # Testing the type of an if condition (line 691)
        if_condition_397842 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 691, 8), result_ge_397841)
        # Assigning a type to the variable 'if_condition_397842' (line 691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 8), 'if_condition_397842', if_condition_397842)
        # SSA begins for if statement (line 691)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 692)
        # Processing the call arguments (line 692)
        str_397844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 692, 29), 'str', 'k must be less than ndim(A)-1, k=%d')
        # Getting the type of 'k' (line 692)
        k_397845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 69), 'k', False)
        # Applying the binary operator '%' (line 692)
        result_mod_397846 = python_operator(stypy.reporting.localization.Localization(__file__, 692, 29), '%', str_397844, k_397845)
        
        # Processing the call keyword arguments (line 692)
        kwargs_397847 = {}
        # Getting the type of 'ValueError' (line 692)
        ValueError_397843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 692)
        ValueError_call_result_397848 = invoke(stypy.reporting.localization.Localization(__file__, 692, 18), ValueError_397843, *[result_mod_397846], **kwargs_397847)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 692, 12), ValueError_call_result_397848, 'raise parameter', BaseException)
        # SSA join for if statement (line 691)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to __init__(...): (line 694)
        # Processing the call arguments (line 694)
        # Getting the type of 'self' (line 694)
        self_397851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 31), 'self', False)
        # Getting the type of 'n' (line 694)
        n_397852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 37), 'n', False)
        # Getting the type of 'k' (line 694)
        k_397853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 40), 'k', False)
        # Getting the type of 'tp' (line 694)
        tp_397854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 43), 'tp', False)
        # Getting the type of 'mode' (line 694)
        mode_397855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 47), 'mode', False)
        # Getting the type of 'sigma' (line 694)
        sigma_397856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 53), 'sigma', False)
        # Getting the type of 'ncv' (line 695)
        ncv_397857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 31), 'ncv', False)
        # Getting the type of 'v0' (line 695)
        v0_397858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 36), 'v0', False)
        # Getting the type of 'maxiter' (line 695)
        maxiter_397859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 40), 'maxiter', False)
        # Getting the type of 'which' (line 695)
        which_397860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 49), 'which', False)
        # Getting the type of 'tol' (line 695)
        tol_397861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 56), 'tol', False)
        # Processing the call keyword arguments (line 694)
        kwargs_397862 = {}
        # Getting the type of '_ArpackParams' (line 694)
        _ArpackParams_397849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 8), '_ArpackParams', False)
        # Obtaining the member '__init__' of a type (line 694)
        init___397850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 8), _ArpackParams_397849, '__init__')
        # Calling __init__(args, kwargs) (line 694)
        init___call_result_397863 = invoke(stypy.reporting.localization.Localization(__file__, 694, 8), init___397850, *[self_397851, n_397852, k_397853, tp_397854, mode_397855, sigma_397856, ncv_397857, v0_397858, maxiter_397859, which_397860, tol_397861], **kwargs_397862)
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 697)
        self_397864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 11), 'self')
        # Obtaining the member 'ncv' of a type (line 697)
        ncv_397865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 11), self_397864, 'ncv')
        # Getting the type of 'n' (line 697)
        n_397866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 22), 'n')
        # Applying the binary operator '>' (line 697)
        result_gt_397867 = python_operator(stypy.reporting.localization.Localization(__file__, 697, 11), '>', ncv_397865, n_397866)
        
        
        # Getting the type of 'self' (line 697)
        self_397868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 27), 'self')
        # Obtaining the member 'ncv' of a type (line 697)
        ncv_397869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 27), self_397868, 'ncv')
        # Getting the type of 'k' (line 697)
        k_397870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 39), 'k')
        int_397871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 43), 'int')
        # Applying the binary operator '+' (line 697)
        result_add_397872 = python_operator(stypy.reporting.localization.Localization(__file__, 697, 39), '+', k_397870, int_397871)
        
        # Applying the binary operator '<=' (line 697)
        result_le_397873 = python_operator(stypy.reporting.localization.Localization(__file__, 697, 27), '<=', ncv_397869, result_add_397872)
        
        # Applying the binary operator 'or' (line 697)
        result_or_keyword_397874 = python_operator(stypy.reporting.localization.Localization(__file__, 697, 11), 'or', result_gt_397867, result_le_397873)
        
        # Testing the type of an if condition (line 697)
        if_condition_397875 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 697, 8), result_or_keyword_397874)
        # Assigning a type to the variable 'if_condition_397875' (line 697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 697, 8), 'if_condition_397875', if_condition_397875)
        # SSA begins for if statement (line 697)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 698)
        # Processing the call arguments (line 698)
        str_397877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 698, 29), 'str', 'ncv must be k+1<ncv<=n, ncv=%s')
        # Getting the type of 'self' (line 698)
        self_397878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 64), 'self', False)
        # Obtaining the member 'ncv' of a type (line 698)
        ncv_397879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 64), self_397878, 'ncv')
        # Applying the binary operator '%' (line 698)
        result_mod_397880 = python_operator(stypy.reporting.localization.Localization(__file__, 698, 29), '%', str_397877, ncv_397879)
        
        # Processing the call keyword arguments (line 698)
        kwargs_397881 = {}
        # Getting the type of 'ValueError' (line 698)
        ValueError_397876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 698)
        ValueError_call_result_397882 = invoke(stypy.reporting.localization.Localization(__file__, 698, 18), ValueError_397876, *[result_mod_397880], **kwargs_397881)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 698, 12), ValueError_call_result_397882, 'raise parameter', BaseException)
        # SSA join for if statement (line 697)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 701):
        
        # Assigning a Call to a Attribute (line 701):
        
        # Call to _aligned_zeros(...): (line 701)
        # Processing the call arguments (line 701)
        int_397884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 36), 'int')
        # Getting the type of 'n' (line 701)
        n_397885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 40), 'n', False)
        # Applying the binary operator '*' (line 701)
        result_mul_397886 = python_operator(stypy.reporting.localization.Localization(__file__, 701, 36), '*', int_397884, n_397885)
        
        # Getting the type of 'self' (line 701)
        self_397887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 43), 'self', False)
        # Obtaining the member 'tp' of a type (line 701)
        tp_397888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 43), self_397887, 'tp')
        # Processing the call keyword arguments (line 701)
        kwargs_397889 = {}
        # Getting the type of '_aligned_zeros' (line 701)
        _aligned_zeros_397883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 21), '_aligned_zeros', False)
        # Calling _aligned_zeros(args, kwargs) (line 701)
        _aligned_zeros_call_result_397890 = invoke(stypy.reporting.localization.Localization(__file__, 701, 21), _aligned_zeros_397883, *[result_mul_397886, tp_397888], **kwargs_397889)
        
        # Getting the type of 'self' (line 701)
        self_397891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'self')
        # Setting the type of the member 'workd' of a type (line 701)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 8), self_397891, 'workd', _aligned_zeros_call_result_397890)
        
        # Assigning a Call to a Attribute (line 702):
        
        # Assigning a Call to a Attribute (line 702):
        
        # Call to _aligned_zeros(...): (line 702)
        # Processing the call arguments (line 702)
        int_397893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 36), 'int')
        # Getting the type of 'self' (line 702)
        self_397894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 40), 'self', False)
        # Obtaining the member 'ncv' of a type (line 702)
        ncv_397895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 40), self_397894, 'ncv')
        # Applying the binary operator '*' (line 702)
        result_mul_397896 = python_operator(stypy.reporting.localization.Localization(__file__, 702, 36), '*', int_397893, ncv_397895)
        
        # Getting the type of 'self' (line 702)
        self_397897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 52), 'self', False)
        # Obtaining the member 'ncv' of a type (line 702)
        ncv_397898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 52), self_397897, 'ncv')
        int_397899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 63), 'int')
        # Applying the binary operator '+' (line 702)
        result_add_397900 = python_operator(stypy.reporting.localization.Localization(__file__, 702, 52), '+', ncv_397898, int_397899)
        
        # Applying the binary operator '*' (line 702)
        result_mul_397901 = python_operator(stypy.reporting.localization.Localization(__file__, 702, 49), '*', result_mul_397896, result_add_397900)
        
        # Getting the type of 'self' (line 702)
        self_397902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 67), 'self', False)
        # Obtaining the member 'tp' of a type (line 702)
        tp_397903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 67), self_397902, 'tp')
        # Processing the call keyword arguments (line 702)
        kwargs_397904 = {}
        # Getting the type of '_aligned_zeros' (line 702)
        _aligned_zeros_397892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 21), '_aligned_zeros', False)
        # Calling _aligned_zeros(args, kwargs) (line 702)
        _aligned_zeros_call_result_397905 = invoke(stypy.reporting.localization.Localization(__file__, 702, 21), _aligned_zeros_397892, *[result_mul_397901, tp_397903], **kwargs_397904)
        
        # Getting the type of 'self' (line 702)
        self_397906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 8), 'self')
        # Setting the type of the member 'workl' of a type (line 702)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 8), self_397906, 'workl', _aligned_zeros_call_result_397905)
        
        # Assigning a Subscript to a Name (line 704):
        
        # Assigning a Subscript to a Name (line 704):
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 704)
        self_397907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 25), 'self')
        # Obtaining the member 'tp' of a type (line 704)
        tp_397908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 25), self_397907, 'tp')
        # Getting the type of '_type_conv' (line 704)
        _type_conv_397909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 14), '_type_conv')
        # Obtaining the member '__getitem__' of a type (line 704)
        getitem___397910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 14), _type_conv_397909, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 704)
        subscript_call_result_397911 = invoke(stypy.reporting.localization.Localization(__file__, 704, 14), getitem___397910, tp_397908)
        
        # Assigning a type to the variable 'ltr' (line 704)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 8), 'ltr', subscript_call_result_397911)
        
        # Assigning a Subscript to a Attribute (line 705):
        
        # Assigning a Subscript to a Attribute (line 705):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ltr' (line 705)
        ltr_397912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 47), 'ltr')
        str_397913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 53), 'str', 'naupd')
        # Applying the binary operator '+' (line 705)
        result_add_397914 = python_operator(stypy.reporting.localization.Localization(__file__, 705, 47), '+', ltr_397912, str_397913)
        
        # Getting the type of '_arpack' (line 705)
        _arpack_397915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 30), '_arpack')
        # Obtaining the member '__dict__' of a type (line 705)
        dict___397916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 30), _arpack_397915, '__dict__')
        # Obtaining the member '__getitem__' of a type (line 705)
        getitem___397917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 30), dict___397916, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 705)
        subscript_call_result_397918 = invoke(stypy.reporting.localization.Localization(__file__, 705, 30), getitem___397917, result_add_397914)
        
        # Getting the type of 'self' (line 705)
        self_397919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'self')
        # Setting the type of the member '_arpack_solver' of a type (line 705)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 8), self_397919, '_arpack_solver', subscript_call_result_397918)
        
        # Assigning a Subscript to a Attribute (line 706):
        
        # Assigning a Subscript to a Attribute (line 706):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ltr' (line 706)
        ltr_397920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 48), 'ltr')
        str_397921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 54), 'str', 'neupd')
        # Applying the binary operator '+' (line 706)
        result_add_397922 = python_operator(stypy.reporting.localization.Localization(__file__, 706, 48), '+', ltr_397920, str_397921)
        
        # Getting the type of '_arpack' (line 706)
        _arpack_397923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 31), '_arpack')
        # Obtaining the member '__dict__' of a type (line 706)
        dict___397924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 31), _arpack_397923, '__dict__')
        # Obtaining the member '__getitem__' of a type (line 706)
        getitem___397925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 31), dict___397924, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 706)
        subscript_call_result_397926 = invoke(stypy.reporting.localization.Localization(__file__, 706, 31), getitem___397925, result_add_397922)
        
        # Getting the type of 'self' (line 706)
        self_397927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 8), 'self')
        # Setting the type of the member '_arpack_extract' of a type (line 706)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 8), self_397927, '_arpack_extract', subscript_call_result_397926)
        
        # Assigning a Subscript to a Attribute (line 708):
        
        # Assigning a Subscript to a Attribute (line 708):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ltr' (line 708)
        ltr_397928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 46), 'ltr')
        # Getting the type of '_NAUPD_ERRORS' (line 708)
        _NAUPD_ERRORS_397929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 32), '_NAUPD_ERRORS')
        # Obtaining the member '__getitem__' of a type (line 708)
        getitem___397930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 708, 32), _NAUPD_ERRORS_397929, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 708)
        subscript_call_result_397931 = invoke(stypy.reporting.localization.Localization(__file__, 708, 32), getitem___397930, ltr_397928)
        
        # Getting the type of 'self' (line 708)
        self_397932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 8), 'self')
        # Setting the type of the member 'iterate_infodict' of a type (line 708)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 708, 8), self_397932, 'iterate_infodict', subscript_call_result_397931)
        
        # Assigning a Subscript to a Attribute (line 709):
        
        # Assigning a Subscript to a Attribute (line 709):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ltr' (line 709)
        ltr_397933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 46), 'ltr')
        # Getting the type of '_NEUPD_ERRORS' (line 709)
        _NEUPD_ERRORS_397934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 32), '_NEUPD_ERRORS')
        # Obtaining the member '__getitem__' of a type (line 709)
        getitem___397935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 32), _NEUPD_ERRORS_397934, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 709)
        subscript_call_result_397936 = invoke(stypy.reporting.localization.Localization(__file__, 709, 32), getitem___397935, ltr_397933)
        
        # Getting the type of 'self' (line 709)
        self_397937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 8), 'self')
        # Setting the type of the member 'extract_infodict' of a type (line 709)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 8), self_397937, 'extract_infodict', subscript_call_result_397936)
        
        # Assigning a Call to a Attribute (line 711):
        
        # Assigning a Call to a Attribute (line 711):
        
        # Call to zeros(...): (line 711)
        # Processing the call arguments (line 711)
        int_397940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 30), 'int')
        str_397941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 34), 'str', 'int')
        # Processing the call keyword arguments (line 711)
        kwargs_397942 = {}
        # Getting the type of 'np' (line 711)
        np_397938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 21), 'np', False)
        # Obtaining the member 'zeros' of a type (line 711)
        zeros_397939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 21), np_397938, 'zeros')
        # Calling zeros(args, kwargs) (line 711)
        zeros_call_result_397943 = invoke(stypy.reporting.localization.Localization(__file__, 711, 21), zeros_397939, *[int_397940, str_397941], **kwargs_397942)
        
        # Getting the type of 'self' (line 711)
        self_397944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'self')
        # Setting the type of the member 'ipntr' of a type (line 711)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 8), self_397944, 'ipntr', zeros_call_result_397943)
        
        
        # Getting the type of 'self' (line 713)
        self_397945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 11), 'self')
        # Obtaining the member 'tp' of a type (line 713)
        tp_397946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 11), self_397945, 'tp')
        str_397947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 22), 'str', 'FD')
        # Applying the binary operator 'in' (line 713)
        result_contains_397948 = python_operator(stypy.reporting.localization.Localization(__file__, 713, 11), 'in', tp_397946, str_397947)
        
        # Testing the type of an if condition (line 713)
        if_condition_397949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 713, 8), result_contains_397948)
        # Assigning a type to the variable 'if_condition_397949' (line 713)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), 'if_condition_397949', if_condition_397949)
        # SSA begins for if statement (line 713)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 715):
        
        # Assigning a Call to a Attribute (line 715):
        
        # Call to _aligned_zeros(...): (line 715)
        # Processing the call arguments (line 715)
        # Getting the type of 'self' (line 715)
        self_397951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 40), 'self', False)
        # Obtaining the member 'ncv' of a type (line 715)
        ncv_397952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 40), self_397951, 'ncv')
        
        # Call to lower(...): (line 715)
        # Processing the call keyword arguments (line 715)
        kwargs_397956 = {}
        # Getting the type of 'self' (line 715)
        self_397953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 50), 'self', False)
        # Obtaining the member 'tp' of a type (line 715)
        tp_397954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 50), self_397953, 'tp')
        # Obtaining the member 'lower' of a type (line 715)
        lower_397955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 50), tp_397954, 'lower')
        # Calling lower(args, kwargs) (line 715)
        lower_call_result_397957 = invoke(stypy.reporting.localization.Localization(__file__, 715, 50), lower_397955, *[], **kwargs_397956)
        
        # Processing the call keyword arguments (line 715)
        kwargs_397958 = {}
        # Getting the type of '_aligned_zeros' (line 715)
        _aligned_zeros_397950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 25), '_aligned_zeros', False)
        # Calling _aligned_zeros(args, kwargs) (line 715)
        _aligned_zeros_call_result_397959 = invoke(stypy.reporting.localization.Localization(__file__, 715, 25), _aligned_zeros_397950, *[ncv_397952, lower_call_result_397957], **kwargs_397958)
        
        # Getting the type of 'self' (line 715)
        self_397960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 12), 'self')
        # Setting the type of the member 'rwork' of a type (line 715)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 12), self_397960, 'rwork', _aligned_zeros_call_result_397959)
        # SSA branch for the else part of an if statement (line 713)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Attribute (line 717):
        
        # Assigning a Name to a Attribute (line 717):
        # Getting the type of 'None' (line 717)
        None_397961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 25), 'None')
        # Getting the type of 'self' (line 717)
        self_397962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 12), 'self')
        # Setting the type of the member 'rwork' of a type (line 717)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 12), self_397962, 'rwork', None_397961)
        # SSA join for if statement (line 713)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def iterate(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'iterate'
        module_type_store = module_type_store.open_function_context('iterate', 719, 4, False)
        # Assigning a type to the variable 'self' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_localization', localization)
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_type_store', module_type_store)
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_function_name', '_UnsymmetricArpackParams.iterate')
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_param_names_list', [])
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_varargs_param_name', None)
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_call_defaults', defaults)
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_call_varargs', varargs)
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _UnsymmetricArpackParams.iterate.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_UnsymmetricArpackParams.iterate', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'iterate', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'iterate(...)' code ##################

        
        
        # Getting the type of 'self' (line 720)
        self_397963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 11), 'self')
        # Obtaining the member 'tp' of a type (line 720)
        tp_397964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 11), self_397963, 'tp')
        str_397965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 22), 'str', 'fd')
        # Applying the binary operator 'in' (line 720)
        result_contains_397966 = python_operator(stypy.reporting.localization.Localization(__file__, 720, 11), 'in', tp_397964, str_397965)
        
        # Testing the type of an if condition (line 720)
        if_condition_397967 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 720, 8), result_contains_397966)
        # Assigning a type to the variable 'if_condition_397967' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 8), 'if_condition_397967', if_condition_397967)
        # SSA begins for if statement (line 720)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 721):
        
        # Assigning a Subscript to a Name (line 721):
        
        # Obtaining the type of the subscript
        int_397968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 12), 'int')
        
        # Call to _arpack_solver(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'self' (line 722)
        self_397971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 722)
        ido_397972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 36), self_397971, 'ido')
        # Getting the type of 'self' (line 722)
        self_397973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 722)
        bmat_397974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 46), self_397973, 'bmat')
        # Getting the type of 'self' (line 722)
        self_397975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 722)
        which_397976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 57), self_397975, 'which')
        # Getting the type of 'self' (line 722)
        self_397977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 722)
        k_397978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 69), self_397977, 'k')
        # Getting the type of 'self' (line 723)
        self_397979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 723)
        tol_397980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 36), self_397979, 'tol')
        # Getting the type of 'self' (line 723)
        self_397981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 723)
        resid_397982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 46), self_397981, 'resid')
        # Getting the type of 'self' (line 723)
        self_397983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 723)
        v_397984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 58), self_397983, 'v')
        # Getting the type of 'self' (line 723)
        self_397985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 723)
        iparam_397986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 66), self_397985, 'iparam')
        # Getting the type of 'self' (line 724)
        self_397987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 724)
        ipntr_397988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 36), self_397987, 'ipntr')
        # Getting the type of 'self' (line 724)
        self_397989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 724)
        workd_397990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 48), self_397989, 'workd')
        # Getting the type of 'self' (line 724)
        self_397991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 724)
        workl_397992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 60), self_397991, 'workl')
        # Getting the type of 'self' (line 725)
        self_397993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 36), 'self', False)
        # Obtaining the member 'info' of a type (line 725)
        info_397994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 36), self_397993, 'info')
        # Processing the call keyword arguments (line 722)
        kwargs_397995 = {}
        # Getting the type of 'self' (line 722)
        self_397969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 722)
        _arpack_solver_397970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 16), self_397969, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 722)
        _arpack_solver_call_result_397996 = invoke(stypy.reporting.localization.Localization(__file__, 722, 16), _arpack_solver_397970, *[ido_397972, bmat_397974, which_397976, k_397978, tol_397980, resid_397982, v_397984, iparam_397986, ipntr_397988, workd_397990, workl_397992, info_397994], **kwargs_397995)
        
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___397997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), _arpack_solver_call_result_397996, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_397998 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), getitem___397997, int_397968)
        
        # Assigning a type to the variable 'tuple_var_assignment_396006' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396006', subscript_call_result_397998)
        
        # Assigning a Subscript to a Name (line 721):
        
        # Obtaining the type of the subscript
        int_397999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 12), 'int')
        
        # Call to _arpack_solver(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'self' (line 722)
        self_398002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 722)
        ido_398003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 36), self_398002, 'ido')
        # Getting the type of 'self' (line 722)
        self_398004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 722)
        bmat_398005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 46), self_398004, 'bmat')
        # Getting the type of 'self' (line 722)
        self_398006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 722)
        which_398007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 57), self_398006, 'which')
        # Getting the type of 'self' (line 722)
        self_398008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 722)
        k_398009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 69), self_398008, 'k')
        # Getting the type of 'self' (line 723)
        self_398010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 723)
        tol_398011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 36), self_398010, 'tol')
        # Getting the type of 'self' (line 723)
        self_398012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 723)
        resid_398013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 46), self_398012, 'resid')
        # Getting the type of 'self' (line 723)
        self_398014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 723)
        v_398015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 58), self_398014, 'v')
        # Getting the type of 'self' (line 723)
        self_398016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 723)
        iparam_398017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 66), self_398016, 'iparam')
        # Getting the type of 'self' (line 724)
        self_398018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 724)
        ipntr_398019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 36), self_398018, 'ipntr')
        # Getting the type of 'self' (line 724)
        self_398020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 724)
        workd_398021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 48), self_398020, 'workd')
        # Getting the type of 'self' (line 724)
        self_398022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 724)
        workl_398023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 60), self_398022, 'workl')
        # Getting the type of 'self' (line 725)
        self_398024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 36), 'self', False)
        # Obtaining the member 'info' of a type (line 725)
        info_398025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 36), self_398024, 'info')
        # Processing the call keyword arguments (line 722)
        kwargs_398026 = {}
        # Getting the type of 'self' (line 722)
        self_398000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 722)
        _arpack_solver_398001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 16), self_398000, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 722)
        _arpack_solver_call_result_398027 = invoke(stypy.reporting.localization.Localization(__file__, 722, 16), _arpack_solver_398001, *[ido_398003, bmat_398005, which_398007, k_398009, tol_398011, resid_398013, v_398015, iparam_398017, ipntr_398019, workd_398021, workl_398023, info_398025], **kwargs_398026)
        
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___398028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), _arpack_solver_call_result_398027, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_398029 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), getitem___398028, int_397999)
        
        # Assigning a type to the variable 'tuple_var_assignment_396007' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396007', subscript_call_result_398029)
        
        # Assigning a Subscript to a Name (line 721):
        
        # Obtaining the type of the subscript
        int_398030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 12), 'int')
        
        # Call to _arpack_solver(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'self' (line 722)
        self_398033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 722)
        ido_398034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 36), self_398033, 'ido')
        # Getting the type of 'self' (line 722)
        self_398035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 722)
        bmat_398036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 46), self_398035, 'bmat')
        # Getting the type of 'self' (line 722)
        self_398037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 722)
        which_398038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 57), self_398037, 'which')
        # Getting the type of 'self' (line 722)
        self_398039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 722)
        k_398040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 69), self_398039, 'k')
        # Getting the type of 'self' (line 723)
        self_398041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 723)
        tol_398042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 36), self_398041, 'tol')
        # Getting the type of 'self' (line 723)
        self_398043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 723)
        resid_398044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 46), self_398043, 'resid')
        # Getting the type of 'self' (line 723)
        self_398045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 723)
        v_398046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 58), self_398045, 'v')
        # Getting the type of 'self' (line 723)
        self_398047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 723)
        iparam_398048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 66), self_398047, 'iparam')
        # Getting the type of 'self' (line 724)
        self_398049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 724)
        ipntr_398050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 36), self_398049, 'ipntr')
        # Getting the type of 'self' (line 724)
        self_398051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 724)
        workd_398052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 48), self_398051, 'workd')
        # Getting the type of 'self' (line 724)
        self_398053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 724)
        workl_398054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 60), self_398053, 'workl')
        # Getting the type of 'self' (line 725)
        self_398055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 36), 'self', False)
        # Obtaining the member 'info' of a type (line 725)
        info_398056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 36), self_398055, 'info')
        # Processing the call keyword arguments (line 722)
        kwargs_398057 = {}
        # Getting the type of 'self' (line 722)
        self_398031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 722)
        _arpack_solver_398032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 16), self_398031, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 722)
        _arpack_solver_call_result_398058 = invoke(stypy.reporting.localization.Localization(__file__, 722, 16), _arpack_solver_398032, *[ido_398034, bmat_398036, which_398038, k_398040, tol_398042, resid_398044, v_398046, iparam_398048, ipntr_398050, workd_398052, workl_398054, info_398056], **kwargs_398057)
        
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___398059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), _arpack_solver_call_result_398058, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_398060 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), getitem___398059, int_398030)
        
        # Assigning a type to the variable 'tuple_var_assignment_396008' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396008', subscript_call_result_398060)
        
        # Assigning a Subscript to a Name (line 721):
        
        # Obtaining the type of the subscript
        int_398061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 12), 'int')
        
        # Call to _arpack_solver(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'self' (line 722)
        self_398064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 722)
        ido_398065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 36), self_398064, 'ido')
        # Getting the type of 'self' (line 722)
        self_398066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 722)
        bmat_398067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 46), self_398066, 'bmat')
        # Getting the type of 'self' (line 722)
        self_398068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 722)
        which_398069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 57), self_398068, 'which')
        # Getting the type of 'self' (line 722)
        self_398070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 722)
        k_398071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 69), self_398070, 'k')
        # Getting the type of 'self' (line 723)
        self_398072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 723)
        tol_398073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 36), self_398072, 'tol')
        # Getting the type of 'self' (line 723)
        self_398074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 723)
        resid_398075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 46), self_398074, 'resid')
        # Getting the type of 'self' (line 723)
        self_398076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 723)
        v_398077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 58), self_398076, 'v')
        # Getting the type of 'self' (line 723)
        self_398078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 723)
        iparam_398079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 66), self_398078, 'iparam')
        # Getting the type of 'self' (line 724)
        self_398080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 724)
        ipntr_398081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 36), self_398080, 'ipntr')
        # Getting the type of 'self' (line 724)
        self_398082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 724)
        workd_398083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 48), self_398082, 'workd')
        # Getting the type of 'self' (line 724)
        self_398084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 724)
        workl_398085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 60), self_398084, 'workl')
        # Getting the type of 'self' (line 725)
        self_398086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 36), 'self', False)
        # Obtaining the member 'info' of a type (line 725)
        info_398087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 36), self_398086, 'info')
        # Processing the call keyword arguments (line 722)
        kwargs_398088 = {}
        # Getting the type of 'self' (line 722)
        self_398062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 722)
        _arpack_solver_398063 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 16), self_398062, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 722)
        _arpack_solver_call_result_398089 = invoke(stypy.reporting.localization.Localization(__file__, 722, 16), _arpack_solver_398063, *[ido_398065, bmat_398067, which_398069, k_398071, tol_398073, resid_398075, v_398077, iparam_398079, ipntr_398081, workd_398083, workl_398085, info_398087], **kwargs_398088)
        
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___398090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), _arpack_solver_call_result_398089, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_398091 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), getitem___398090, int_398061)
        
        # Assigning a type to the variable 'tuple_var_assignment_396009' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396009', subscript_call_result_398091)
        
        # Assigning a Subscript to a Name (line 721):
        
        # Obtaining the type of the subscript
        int_398092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 12), 'int')
        
        # Call to _arpack_solver(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'self' (line 722)
        self_398095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 722)
        ido_398096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 36), self_398095, 'ido')
        # Getting the type of 'self' (line 722)
        self_398097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 722)
        bmat_398098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 46), self_398097, 'bmat')
        # Getting the type of 'self' (line 722)
        self_398099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 722)
        which_398100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 57), self_398099, 'which')
        # Getting the type of 'self' (line 722)
        self_398101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 722)
        k_398102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 69), self_398101, 'k')
        # Getting the type of 'self' (line 723)
        self_398103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 723)
        tol_398104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 36), self_398103, 'tol')
        # Getting the type of 'self' (line 723)
        self_398105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 723)
        resid_398106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 46), self_398105, 'resid')
        # Getting the type of 'self' (line 723)
        self_398107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 723)
        v_398108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 58), self_398107, 'v')
        # Getting the type of 'self' (line 723)
        self_398109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 723)
        iparam_398110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 66), self_398109, 'iparam')
        # Getting the type of 'self' (line 724)
        self_398111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 724)
        ipntr_398112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 36), self_398111, 'ipntr')
        # Getting the type of 'self' (line 724)
        self_398113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 724)
        workd_398114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 48), self_398113, 'workd')
        # Getting the type of 'self' (line 724)
        self_398115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 724)
        workl_398116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 60), self_398115, 'workl')
        # Getting the type of 'self' (line 725)
        self_398117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 36), 'self', False)
        # Obtaining the member 'info' of a type (line 725)
        info_398118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 36), self_398117, 'info')
        # Processing the call keyword arguments (line 722)
        kwargs_398119 = {}
        # Getting the type of 'self' (line 722)
        self_398093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 722)
        _arpack_solver_398094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 16), self_398093, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 722)
        _arpack_solver_call_result_398120 = invoke(stypy.reporting.localization.Localization(__file__, 722, 16), _arpack_solver_398094, *[ido_398096, bmat_398098, which_398100, k_398102, tol_398104, resid_398106, v_398108, iparam_398110, ipntr_398112, workd_398114, workl_398116, info_398118], **kwargs_398119)
        
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___398121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), _arpack_solver_call_result_398120, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_398122 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), getitem___398121, int_398092)
        
        # Assigning a type to the variable 'tuple_var_assignment_396010' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396010', subscript_call_result_398122)
        
        # Assigning a Subscript to a Name (line 721):
        
        # Obtaining the type of the subscript
        int_398123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 12), 'int')
        
        # Call to _arpack_solver(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'self' (line 722)
        self_398126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 722)
        ido_398127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 36), self_398126, 'ido')
        # Getting the type of 'self' (line 722)
        self_398128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 722)
        bmat_398129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 46), self_398128, 'bmat')
        # Getting the type of 'self' (line 722)
        self_398130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 722)
        which_398131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 57), self_398130, 'which')
        # Getting the type of 'self' (line 722)
        self_398132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 722)
        k_398133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 69), self_398132, 'k')
        # Getting the type of 'self' (line 723)
        self_398134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 723)
        tol_398135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 36), self_398134, 'tol')
        # Getting the type of 'self' (line 723)
        self_398136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 723)
        resid_398137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 46), self_398136, 'resid')
        # Getting the type of 'self' (line 723)
        self_398138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 723)
        v_398139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 58), self_398138, 'v')
        # Getting the type of 'self' (line 723)
        self_398140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 723)
        iparam_398141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 66), self_398140, 'iparam')
        # Getting the type of 'self' (line 724)
        self_398142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 724)
        ipntr_398143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 36), self_398142, 'ipntr')
        # Getting the type of 'self' (line 724)
        self_398144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 724)
        workd_398145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 48), self_398144, 'workd')
        # Getting the type of 'self' (line 724)
        self_398146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 724)
        workl_398147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 60), self_398146, 'workl')
        # Getting the type of 'self' (line 725)
        self_398148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 36), 'self', False)
        # Obtaining the member 'info' of a type (line 725)
        info_398149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 36), self_398148, 'info')
        # Processing the call keyword arguments (line 722)
        kwargs_398150 = {}
        # Getting the type of 'self' (line 722)
        self_398124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 722)
        _arpack_solver_398125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 16), self_398124, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 722)
        _arpack_solver_call_result_398151 = invoke(stypy.reporting.localization.Localization(__file__, 722, 16), _arpack_solver_398125, *[ido_398127, bmat_398129, which_398131, k_398133, tol_398135, resid_398137, v_398139, iparam_398141, ipntr_398143, workd_398145, workl_398147, info_398149], **kwargs_398150)
        
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___398152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), _arpack_solver_call_result_398151, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_398153 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), getitem___398152, int_398123)
        
        # Assigning a type to the variable 'tuple_var_assignment_396011' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396011', subscript_call_result_398153)
        
        # Assigning a Subscript to a Name (line 721):
        
        # Obtaining the type of the subscript
        int_398154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 12), 'int')
        
        # Call to _arpack_solver(...): (line 722)
        # Processing the call arguments (line 722)
        # Getting the type of 'self' (line 722)
        self_398157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 722)
        ido_398158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 36), self_398157, 'ido')
        # Getting the type of 'self' (line 722)
        self_398159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 722)
        bmat_398160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 46), self_398159, 'bmat')
        # Getting the type of 'self' (line 722)
        self_398161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 722)
        which_398162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 57), self_398161, 'which')
        # Getting the type of 'self' (line 722)
        self_398163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 722)
        k_398164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 69), self_398163, 'k')
        # Getting the type of 'self' (line 723)
        self_398165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 723)
        tol_398166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 36), self_398165, 'tol')
        # Getting the type of 'self' (line 723)
        self_398167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 723)
        resid_398168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 46), self_398167, 'resid')
        # Getting the type of 'self' (line 723)
        self_398169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 723)
        v_398170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 58), self_398169, 'v')
        # Getting the type of 'self' (line 723)
        self_398171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 723)
        iparam_398172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 66), self_398171, 'iparam')
        # Getting the type of 'self' (line 724)
        self_398173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 724)
        ipntr_398174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 36), self_398173, 'ipntr')
        # Getting the type of 'self' (line 724)
        self_398175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 724)
        workd_398176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 48), self_398175, 'workd')
        # Getting the type of 'self' (line 724)
        self_398177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 724)
        workl_398178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 60), self_398177, 'workl')
        # Getting the type of 'self' (line 725)
        self_398179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 36), 'self', False)
        # Obtaining the member 'info' of a type (line 725)
        info_398180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 36), self_398179, 'info')
        # Processing the call keyword arguments (line 722)
        kwargs_398181 = {}
        # Getting the type of 'self' (line 722)
        self_398155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 722)
        _arpack_solver_398156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 16), self_398155, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 722)
        _arpack_solver_call_result_398182 = invoke(stypy.reporting.localization.Localization(__file__, 722, 16), _arpack_solver_398156, *[ido_398158, bmat_398160, which_398162, k_398164, tol_398166, resid_398168, v_398170, iparam_398172, ipntr_398174, workd_398176, workl_398178, info_398180], **kwargs_398181)
        
        # Obtaining the member '__getitem__' of a type (line 721)
        getitem___398183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), _arpack_solver_call_result_398182, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 721)
        subscript_call_result_398184 = invoke(stypy.reporting.localization.Localization(__file__, 721, 12), getitem___398183, int_398154)
        
        # Assigning a type to the variable 'tuple_var_assignment_396012' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396012', subscript_call_result_398184)
        
        # Assigning a Name to a Attribute (line 721):
        # Getting the type of 'tuple_var_assignment_396006' (line 721)
        tuple_var_assignment_396006_398185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396006')
        # Getting the type of 'self' (line 721)
        self_398186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'self')
        # Setting the type of the member 'ido' of a type (line 721)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 12), self_398186, 'ido', tuple_var_assignment_396006_398185)
        
        # Assigning a Name to a Attribute (line 721):
        # Getting the type of 'tuple_var_assignment_396007' (line 721)
        tuple_var_assignment_396007_398187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396007')
        # Getting the type of 'self' (line 721)
        self_398188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 22), 'self')
        # Setting the type of the member 'tol' of a type (line 721)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 22), self_398188, 'tol', tuple_var_assignment_396007_398187)
        
        # Assigning a Name to a Attribute (line 721):
        # Getting the type of 'tuple_var_assignment_396008' (line 721)
        tuple_var_assignment_396008_398189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396008')
        # Getting the type of 'self' (line 721)
        self_398190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 32), 'self')
        # Setting the type of the member 'resid' of a type (line 721)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 32), self_398190, 'resid', tuple_var_assignment_396008_398189)
        
        # Assigning a Name to a Attribute (line 721):
        # Getting the type of 'tuple_var_assignment_396009' (line 721)
        tuple_var_assignment_396009_398191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396009')
        # Getting the type of 'self' (line 721)
        self_398192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 44), 'self')
        # Setting the type of the member 'v' of a type (line 721)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 44), self_398192, 'v', tuple_var_assignment_396009_398191)
        
        # Assigning a Name to a Attribute (line 721):
        # Getting the type of 'tuple_var_assignment_396010' (line 721)
        tuple_var_assignment_396010_398193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396010')
        # Getting the type of 'self' (line 721)
        self_398194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 52), 'self')
        # Setting the type of the member 'iparam' of a type (line 721)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 52), self_398194, 'iparam', tuple_var_assignment_396010_398193)
        
        # Assigning a Name to a Attribute (line 721):
        # Getting the type of 'tuple_var_assignment_396011' (line 721)
        tuple_var_assignment_396011_398195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396011')
        # Getting the type of 'self' (line 721)
        self_398196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 65), 'self')
        # Setting the type of the member 'ipntr' of a type (line 721)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 65), self_398196, 'ipntr', tuple_var_assignment_396011_398195)
        
        # Assigning a Name to a Attribute (line 721):
        # Getting the type of 'tuple_var_assignment_396012' (line 721)
        tuple_var_assignment_396012_398197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'tuple_var_assignment_396012')
        # Getting the type of 'self' (line 721)
        self_398198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 77), 'self')
        # Setting the type of the member 'info' of a type (line 721)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 77), self_398198, 'info', tuple_var_assignment_396012_398197)
        # SSA branch for the else part of an if statement (line 720)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 727):
        
        # Assigning a Subscript to a Name (line 727):
        
        # Obtaining the type of the subscript
        int_398199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 12), 'int')
        
        # Call to _arpack_solver(...): (line 728)
        # Processing the call arguments (line 728)
        # Getting the type of 'self' (line 728)
        self_398202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 728)
        ido_398203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 36), self_398202, 'ido')
        # Getting the type of 'self' (line 728)
        self_398204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 728)
        bmat_398205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 46), self_398204, 'bmat')
        # Getting the type of 'self' (line 728)
        self_398206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 728)
        which_398207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 57), self_398206, 'which')
        # Getting the type of 'self' (line 728)
        self_398208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 728)
        k_398209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 69), self_398208, 'k')
        # Getting the type of 'self' (line 729)
        self_398210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 729)
        tol_398211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 36), self_398210, 'tol')
        # Getting the type of 'self' (line 729)
        self_398212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 729)
        resid_398213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 46), self_398212, 'resid')
        # Getting the type of 'self' (line 729)
        self_398214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 729)
        v_398215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 58), self_398214, 'v')
        # Getting the type of 'self' (line 729)
        self_398216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 729)
        iparam_398217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 66), self_398216, 'iparam')
        # Getting the type of 'self' (line 730)
        self_398218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 730)
        ipntr_398219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 36), self_398218, 'ipntr')
        # Getting the type of 'self' (line 730)
        self_398220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 730)
        workd_398221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 48), self_398220, 'workd')
        # Getting the type of 'self' (line 730)
        self_398222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 730)
        workl_398223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 60), self_398222, 'workl')
        # Getting the type of 'self' (line 731)
        self_398224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 36), 'self', False)
        # Obtaining the member 'rwork' of a type (line 731)
        rwork_398225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 36), self_398224, 'rwork')
        # Getting the type of 'self' (line 731)
        self_398226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 48), 'self', False)
        # Obtaining the member 'info' of a type (line 731)
        info_398227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 48), self_398226, 'info')
        # Processing the call keyword arguments (line 728)
        kwargs_398228 = {}
        # Getting the type of 'self' (line 728)
        self_398200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 728)
        _arpack_solver_398201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 16), self_398200, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 728)
        _arpack_solver_call_result_398229 = invoke(stypy.reporting.localization.Localization(__file__, 728, 16), _arpack_solver_398201, *[ido_398203, bmat_398205, which_398207, k_398209, tol_398211, resid_398213, v_398215, iparam_398217, ipntr_398219, workd_398221, workl_398223, rwork_398225, info_398227], **kwargs_398228)
        
        # Obtaining the member '__getitem__' of a type (line 727)
        getitem___398230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 12), _arpack_solver_call_result_398229, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 727)
        subscript_call_result_398231 = invoke(stypy.reporting.localization.Localization(__file__, 727, 12), getitem___398230, int_398199)
        
        # Assigning a type to the variable 'tuple_var_assignment_396013' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396013', subscript_call_result_398231)
        
        # Assigning a Subscript to a Name (line 727):
        
        # Obtaining the type of the subscript
        int_398232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 12), 'int')
        
        # Call to _arpack_solver(...): (line 728)
        # Processing the call arguments (line 728)
        # Getting the type of 'self' (line 728)
        self_398235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 728)
        ido_398236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 36), self_398235, 'ido')
        # Getting the type of 'self' (line 728)
        self_398237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 728)
        bmat_398238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 46), self_398237, 'bmat')
        # Getting the type of 'self' (line 728)
        self_398239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 728)
        which_398240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 57), self_398239, 'which')
        # Getting the type of 'self' (line 728)
        self_398241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 728)
        k_398242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 69), self_398241, 'k')
        # Getting the type of 'self' (line 729)
        self_398243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 729)
        tol_398244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 36), self_398243, 'tol')
        # Getting the type of 'self' (line 729)
        self_398245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 729)
        resid_398246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 46), self_398245, 'resid')
        # Getting the type of 'self' (line 729)
        self_398247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 729)
        v_398248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 58), self_398247, 'v')
        # Getting the type of 'self' (line 729)
        self_398249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 729)
        iparam_398250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 66), self_398249, 'iparam')
        # Getting the type of 'self' (line 730)
        self_398251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 730)
        ipntr_398252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 36), self_398251, 'ipntr')
        # Getting the type of 'self' (line 730)
        self_398253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 730)
        workd_398254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 48), self_398253, 'workd')
        # Getting the type of 'self' (line 730)
        self_398255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 730)
        workl_398256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 60), self_398255, 'workl')
        # Getting the type of 'self' (line 731)
        self_398257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 36), 'self', False)
        # Obtaining the member 'rwork' of a type (line 731)
        rwork_398258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 36), self_398257, 'rwork')
        # Getting the type of 'self' (line 731)
        self_398259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 48), 'self', False)
        # Obtaining the member 'info' of a type (line 731)
        info_398260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 48), self_398259, 'info')
        # Processing the call keyword arguments (line 728)
        kwargs_398261 = {}
        # Getting the type of 'self' (line 728)
        self_398233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 728)
        _arpack_solver_398234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 16), self_398233, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 728)
        _arpack_solver_call_result_398262 = invoke(stypy.reporting.localization.Localization(__file__, 728, 16), _arpack_solver_398234, *[ido_398236, bmat_398238, which_398240, k_398242, tol_398244, resid_398246, v_398248, iparam_398250, ipntr_398252, workd_398254, workl_398256, rwork_398258, info_398260], **kwargs_398261)
        
        # Obtaining the member '__getitem__' of a type (line 727)
        getitem___398263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 12), _arpack_solver_call_result_398262, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 727)
        subscript_call_result_398264 = invoke(stypy.reporting.localization.Localization(__file__, 727, 12), getitem___398263, int_398232)
        
        # Assigning a type to the variable 'tuple_var_assignment_396014' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396014', subscript_call_result_398264)
        
        # Assigning a Subscript to a Name (line 727):
        
        # Obtaining the type of the subscript
        int_398265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 12), 'int')
        
        # Call to _arpack_solver(...): (line 728)
        # Processing the call arguments (line 728)
        # Getting the type of 'self' (line 728)
        self_398268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 728)
        ido_398269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 36), self_398268, 'ido')
        # Getting the type of 'self' (line 728)
        self_398270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 728)
        bmat_398271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 46), self_398270, 'bmat')
        # Getting the type of 'self' (line 728)
        self_398272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 728)
        which_398273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 57), self_398272, 'which')
        # Getting the type of 'self' (line 728)
        self_398274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 728)
        k_398275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 69), self_398274, 'k')
        # Getting the type of 'self' (line 729)
        self_398276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 729)
        tol_398277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 36), self_398276, 'tol')
        # Getting the type of 'self' (line 729)
        self_398278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 729)
        resid_398279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 46), self_398278, 'resid')
        # Getting the type of 'self' (line 729)
        self_398280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 729)
        v_398281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 58), self_398280, 'v')
        # Getting the type of 'self' (line 729)
        self_398282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 729)
        iparam_398283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 66), self_398282, 'iparam')
        # Getting the type of 'self' (line 730)
        self_398284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 730)
        ipntr_398285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 36), self_398284, 'ipntr')
        # Getting the type of 'self' (line 730)
        self_398286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 730)
        workd_398287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 48), self_398286, 'workd')
        # Getting the type of 'self' (line 730)
        self_398288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 730)
        workl_398289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 60), self_398288, 'workl')
        # Getting the type of 'self' (line 731)
        self_398290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 36), 'self', False)
        # Obtaining the member 'rwork' of a type (line 731)
        rwork_398291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 36), self_398290, 'rwork')
        # Getting the type of 'self' (line 731)
        self_398292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 48), 'self', False)
        # Obtaining the member 'info' of a type (line 731)
        info_398293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 48), self_398292, 'info')
        # Processing the call keyword arguments (line 728)
        kwargs_398294 = {}
        # Getting the type of 'self' (line 728)
        self_398266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 728)
        _arpack_solver_398267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 16), self_398266, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 728)
        _arpack_solver_call_result_398295 = invoke(stypy.reporting.localization.Localization(__file__, 728, 16), _arpack_solver_398267, *[ido_398269, bmat_398271, which_398273, k_398275, tol_398277, resid_398279, v_398281, iparam_398283, ipntr_398285, workd_398287, workl_398289, rwork_398291, info_398293], **kwargs_398294)
        
        # Obtaining the member '__getitem__' of a type (line 727)
        getitem___398296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 12), _arpack_solver_call_result_398295, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 727)
        subscript_call_result_398297 = invoke(stypy.reporting.localization.Localization(__file__, 727, 12), getitem___398296, int_398265)
        
        # Assigning a type to the variable 'tuple_var_assignment_396015' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396015', subscript_call_result_398297)
        
        # Assigning a Subscript to a Name (line 727):
        
        # Obtaining the type of the subscript
        int_398298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 12), 'int')
        
        # Call to _arpack_solver(...): (line 728)
        # Processing the call arguments (line 728)
        # Getting the type of 'self' (line 728)
        self_398301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 728)
        ido_398302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 36), self_398301, 'ido')
        # Getting the type of 'self' (line 728)
        self_398303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 728)
        bmat_398304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 46), self_398303, 'bmat')
        # Getting the type of 'self' (line 728)
        self_398305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 728)
        which_398306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 57), self_398305, 'which')
        # Getting the type of 'self' (line 728)
        self_398307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 728)
        k_398308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 69), self_398307, 'k')
        # Getting the type of 'self' (line 729)
        self_398309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 729)
        tol_398310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 36), self_398309, 'tol')
        # Getting the type of 'self' (line 729)
        self_398311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 729)
        resid_398312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 46), self_398311, 'resid')
        # Getting the type of 'self' (line 729)
        self_398313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 729)
        v_398314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 58), self_398313, 'v')
        # Getting the type of 'self' (line 729)
        self_398315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 729)
        iparam_398316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 66), self_398315, 'iparam')
        # Getting the type of 'self' (line 730)
        self_398317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 730)
        ipntr_398318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 36), self_398317, 'ipntr')
        # Getting the type of 'self' (line 730)
        self_398319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 730)
        workd_398320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 48), self_398319, 'workd')
        # Getting the type of 'self' (line 730)
        self_398321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 730)
        workl_398322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 60), self_398321, 'workl')
        # Getting the type of 'self' (line 731)
        self_398323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 36), 'self', False)
        # Obtaining the member 'rwork' of a type (line 731)
        rwork_398324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 36), self_398323, 'rwork')
        # Getting the type of 'self' (line 731)
        self_398325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 48), 'self', False)
        # Obtaining the member 'info' of a type (line 731)
        info_398326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 48), self_398325, 'info')
        # Processing the call keyword arguments (line 728)
        kwargs_398327 = {}
        # Getting the type of 'self' (line 728)
        self_398299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 728)
        _arpack_solver_398300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 16), self_398299, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 728)
        _arpack_solver_call_result_398328 = invoke(stypy.reporting.localization.Localization(__file__, 728, 16), _arpack_solver_398300, *[ido_398302, bmat_398304, which_398306, k_398308, tol_398310, resid_398312, v_398314, iparam_398316, ipntr_398318, workd_398320, workl_398322, rwork_398324, info_398326], **kwargs_398327)
        
        # Obtaining the member '__getitem__' of a type (line 727)
        getitem___398329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 12), _arpack_solver_call_result_398328, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 727)
        subscript_call_result_398330 = invoke(stypy.reporting.localization.Localization(__file__, 727, 12), getitem___398329, int_398298)
        
        # Assigning a type to the variable 'tuple_var_assignment_396016' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396016', subscript_call_result_398330)
        
        # Assigning a Subscript to a Name (line 727):
        
        # Obtaining the type of the subscript
        int_398331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 12), 'int')
        
        # Call to _arpack_solver(...): (line 728)
        # Processing the call arguments (line 728)
        # Getting the type of 'self' (line 728)
        self_398334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 728)
        ido_398335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 36), self_398334, 'ido')
        # Getting the type of 'self' (line 728)
        self_398336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 728)
        bmat_398337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 46), self_398336, 'bmat')
        # Getting the type of 'self' (line 728)
        self_398338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 728)
        which_398339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 57), self_398338, 'which')
        # Getting the type of 'self' (line 728)
        self_398340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 728)
        k_398341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 69), self_398340, 'k')
        # Getting the type of 'self' (line 729)
        self_398342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 729)
        tol_398343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 36), self_398342, 'tol')
        # Getting the type of 'self' (line 729)
        self_398344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 729)
        resid_398345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 46), self_398344, 'resid')
        # Getting the type of 'self' (line 729)
        self_398346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 729)
        v_398347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 58), self_398346, 'v')
        # Getting the type of 'self' (line 729)
        self_398348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 729)
        iparam_398349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 66), self_398348, 'iparam')
        # Getting the type of 'self' (line 730)
        self_398350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 730)
        ipntr_398351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 36), self_398350, 'ipntr')
        # Getting the type of 'self' (line 730)
        self_398352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 730)
        workd_398353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 48), self_398352, 'workd')
        # Getting the type of 'self' (line 730)
        self_398354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 730)
        workl_398355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 60), self_398354, 'workl')
        # Getting the type of 'self' (line 731)
        self_398356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 36), 'self', False)
        # Obtaining the member 'rwork' of a type (line 731)
        rwork_398357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 36), self_398356, 'rwork')
        # Getting the type of 'self' (line 731)
        self_398358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 48), 'self', False)
        # Obtaining the member 'info' of a type (line 731)
        info_398359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 48), self_398358, 'info')
        # Processing the call keyword arguments (line 728)
        kwargs_398360 = {}
        # Getting the type of 'self' (line 728)
        self_398332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 728)
        _arpack_solver_398333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 16), self_398332, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 728)
        _arpack_solver_call_result_398361 = invoke(stypy.reporting.localization.Localization(__file__, 728, 16), _arpack_solver_398333, *[ido_398335, bmat_398337, which_398339, k_398341, tol_398343, resid_398345, v_398347, iparam_398349, ipntr_398351, workd_398353, workl_398355, rwork_398357, info_398359], **kwargs_398360)
        
        # Obtaining the member '__getitem__' of a type (line 727)
        getitem___398362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 12), _arpack_solver_call_result_398361, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 727)
        subscript_call_result_398363 = invoke(stypy.reporting.localization.Localization(__file__, 727, 12), getitem___398362, int_398331)
        
        # Assigning a type to the variable 'tuple_var_assignment_396017' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396017', subscript_call_result_398363)
        
        # Assigning a Subscript to a Name (line 727):
        
        # Obtaining the type of the subscript
        int_398364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 12), 'int')
        
        # Call to _arpack_solver(...): (line 728)
        # Processing the call arguments (line 728)
        # Getting the type of 'self' (line 728)
        self_398367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 728)
        ido_398368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 36), self_398367, 'ido')
        # Getting the type of 'self' (line 728)
        self_398369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 728)
        bmat_398370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 46), self_398369, 'bmat')
        # Getting the type of 'self' (line 728)
        self_398371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 728)
        which_398372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 57), self_398371, 'which')
        # Getting the type of 'self' (line 728)
        self_398373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 728)
        k_398374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 69), self_398373, 'k')
        # Getting the type of 'self' (line 729)
        self_398375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 729)
        tol_398376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 36), self_398375, 'tol')
        # Getting the type of 'self' (line 729)
        self_398377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 729)
        resid_398378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 46), self_398377, 'resid')
        # Getting the type of 'self' (line 729)
        self_398379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 729)
        v_398380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 58), self_398379, 'v')
        # Getting the type of 'self' (line 729)
        self_398381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 729)
        iparam_398382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 66), self_398381, 'iparam')
        # Getting the type of 'self' (line 730)
        self_398383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 730)
        ipntr_398384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 36), self_398383, 'ipntr')
        # Getting the type of 'self' (line 730)
        self_398385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 730)
        workd_398386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 48), self_398385, 'workd')
        # Getting the type of 'self' (line 730)
        self_398387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 730)
        workl_398388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 60), self_398387, 'workl')
        # Getting the type of 'self' (line 731)
        self_398389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 36), 'self', False)
        # Obtaining the member 'rwork' of a type (line 731)
        rwork_398390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 36), self_398389, 'rwork')
        # Getting the type of 'self' (line 731)
        self_398391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 48), 'self', False)
        # Obtaining the member 'info' of a type (line 731)
        info_398392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 48), self_398391, 'info')
        # Processing the call keyword arguments (line 728)
        kwargs_398393 = {}
        # Getting the type of 'self' (line 728)
        self_398365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 728)
        _arpack_solver_398366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 16), self_398365, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 728)
        _arpack_solver_call_result_398394 = invoke(stypy.reporting.localization.Localization(__file__, 728, 16), _arpack_solver_398366, *[ido_398368, bmat_398370, which_398372, k_398374, tol_398376, resid_398378, v_398380, iparam_398382, ipntr_398384, workd_398386, workl_398388, rwork_398390, info_398392], **kwargs_398393)
        
        # Obtaining the member '__getitem__' of a type (line 727)
        getitem___398395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 12), _arpack_solver_call_result_398394, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 727)
        subscript_call_result_398396 = invoke(stypy.reporting.localization.Localization(__file__, 727, 12), getitem___398395, int_398364)
        
        # Assigning a type to the variable 'tuple_var_assignment_396018' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396018', subscript_call_result_398396)
        
        # Assigning a Subscript to a Name (line 727):
        
        # Obtaining the type of the subscript
        int_398397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 12), 'int')
        
        # Call to _arpack_solver(...): (line 728)
        # Processing the call arguments (line 728)
        # Getting the type of 'self' (line 728)
        self_398400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 36), 'self', False)
        # Obtaining the member 'ido' of a type (line 728)
        ido_398401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 36), self_398400, 'ido')
        # Getting the type of 'self' (line 728)
        self_398402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 46), 'self', False)
        # Obtaining the member 'bmat' of a type (line 728)
        bmat_398403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 46), self_398402, 'bmat')
        # Getting the type of 'self' (line 728)
        self_398404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 57), 'self', False)
        # Obtaining the member 'which' of a type (line 728)
        which_398405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 57), self_398404, 'which')
        # Getting the type of 'self' (line 728)
        self_398406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 69), 'self', False)
        # Obtaining the member 'k' of a type (line 728)
        k_398407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 69), self_398406, 'k')
        # Getting the type of 'self' (line 729)
        self_398408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 36), 'self', False)
        # Obtaining the member 'tol' of a type (line 729)
        tol_398409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 36), self_398408, 'tol')
        # Getting the type of 'self' (line 729)
        self_398410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 46), 'self', False)
        # Obtaining the member 'resid' of a type (line 729)
        resid_398411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 46), self_398410, 'resid')
        # Getting the type of 'self' (line 729)
        self_398412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 58), 'self', False)
        # Obtaining the member 'v' of a type (line 729)
        v_398413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 58), self_398412, 'v')
        # Getting the type of 'self' (line 729)
        self_398414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 66), 'self', False)
        # Obtaining the member 'iparam' of a type (line 729)
        iparam_398415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 66), self_398414, 'iparam')
        # Getting the type of 'self' (line 730)
        self_398416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 36), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 730)
        ipntr_398417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 36), self_398416, 'ipntr')
        # Getting the type of 'self' (line 730)
        self_398418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 48), 'self', False)
        # Obtaining the member 'workd' of a type (line 730)
        workd_398419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 48), self_398418, 'workd')
        # Getting the type of 'self' (line 730)
        self_398420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 60), 'self', False)
        # Obtaining the member 'workl' of a type (line 730)
        workl_398421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 60), self_398420, 'workl')
        # Getting the type of 'self' (line 731)
        self_398422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 36), 'self', False)
        # Obtaining the member 'rwork' of a type (line 731)
        rwork_398423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 36), self_398422, 'rwork')
        # Getting the type of 'self' (line 731)
        self_398424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 48), 'self', False)
        # Obtaining the member 'info' of a type (line 731)
        info_398425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 48), self_398424, 'info')
        # Processing the call keyword arguments (line 728)
        kwargs_398426 = {}
        # Getting the type of 'self' (line 728)
        self_398398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 16), 'self', False)
        # Obtaining the member '_arpack_solver' of a type (line 728)
        _arpack_solver_398399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 728, 16), self_398398, '_arpack_solver')
        # Calling _arpack_solver(args, kwargs) (line 728)
        _arpack_solver_call_result_398427 = invoke(stypy.reporting.localization.Localization(__file__, 728, 16), _arpack_solver_398399, *[ido_398401, bmat_398403, which_398405, k_398407, tol_398409, resid_398411, v_398413, iparam_398415, ipntr_398417, workd_398419, workl_398421, rwork_398423, info_398425], **kwargs_398426)
        
        # Obtaining the member '__getitem__' of a type (line 727)
        getitem___398428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 12), _arpack_solver_call_result_398427, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 727)
        subscript_call_result_398429 = invoke(stypy.reporting.localization.Localization(__file__, 727, 12), getitem___398428, int_398397)
        
        # Assigning a type to the variable 'tuple_var_assignment_396019' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396019', subscript_call_result_398429)
        
        # Assigning a Name to a Attribute (line 727):
        # Getting the type of 'tuple_var_assignment_396013' (line 727)
        tuple_var_assignment_396013_398430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396013')
        # Getting the type of 'self' (line 727)
        self_398431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'self')
        # Setting the type of the member 'ido' of a type (line 727)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 12), self_398431, 'ido', tuple_var_assignment_396013_398430)
        
        # Assigning a Name to a Attribute (line 727):
        # Getting the type of 'tuple_var_assignment_396014' (line 727)
        tuple_var_assignment_396014_398432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396014')
        # Getting the type of 'self' (line 727)
        self_398433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 22), 'self')
        # Setting the type of the member 'tol' of a type (line 727)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 22), self_398433, 'tol', tuple_var_assignment_396014_398432)
        
        # Assigning a Name to a Attribute (line 727):
        # Getting the type of 'tuple_var_assignment_396015' (line 727)
        tuple_var_assignment_396015_398434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396015')
        # Getting the type of 'self' (line 727)
        self_398435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 32), 'self')
        # Setting the type of the member 'resid' of a type (line 727)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 32), self_398435, 'resid', tuple_var_assignment_396015_398434)
        
        # Assigning a Name to a Attribute (line 727):
        # Getting the type of 'tuple_var_assignment_396016' (line 727)
        tuple_var_assignment_396016_398436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396016')
        # Getting the type of 'self' (line 727)
        self_398437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 44), 'self')
        # Setting the type of the member 'v' of a type (line 727)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 44), self_398437, 'v', tuple_var_assignment_396016_398436)
        
        # Assigning a Name to a Attribute (line 727):
        # Getting the type of 'tuple_var_assignment_396017' (line 727)
        tuple_var_assignment_396017_398438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396017')
        # Getting the type of 'self' (line 727)
        self_398439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 52), 'self')
        # Setting the type of the member 'iparam' of a type (line 727)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 52), self_398439, 'iparam', tuple_var_assignment_396017_398438)
        
        # Assigning a Name to a Attribute (line 727):
        # Getting the type of 'tuple_var_assignment_396018' (line 727)
        tuple_var_assignment_396018_398440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396018')
        # Getting the type of 'self' (line 727)
        self_398441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 65), 'self')
        # Setting the type of the member 'ipntr' of a type (line 727)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 65), self_398441, 'ipntr', tuple_var_assignment_396018_398440)
        
        # Assigning a Name to a Attribute (line 727):
        # Getting the type of 'tuple_var_assignment_396019' (line 727)
        tuple_var_assignment_396019_398442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'tuple_var_assignment_396019')
        # Getting the type of 'self' (line 727)
        self_398443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 77), 'self')
        # Setting the type of the member 'info' of a type (line 727)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 77), self_398443, 'info', tuple_var_assignment_396019_398442)
        # SSA join for if statement (line 720)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 733):
        
        # Assigning a Call to a Name (line 733):
        
        # Call to slice(...): (line 733)
        # Processing the call arguments (line 733)
        
        # Obtaining the type of the subscript
        int_398445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 34), 'int')
        # Getting the type of 'self' (line 733)
        self_398446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 23), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 733)
        ipntr_398447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 23), self_398446, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 733)
        getitem___398448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 23), ipntr_398447, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 733)
        subscript_call_result_398449 = invoke(stypy.reporting.localization.Localization(__file__, 733, 23), getitem___398448, int_398445)
        
        int_398450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 39), 'int')
        # Applying the binary operator '-' (line 733)
        result_sub_398451 = python_operator(stypy.reporting.localization.Localization(__file__, 733, 23), '-', subscript_call_result_398449, int_398450)
        
        
        # Obtaining the type of the subscript
        int_398452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 53), 'int')
        # Getting the type of 'self' (line 733)
        self_398453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 42), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 733)
        ipntr_398454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 42), self_398453, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 733)
        getitem___398455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 42), ipntr_398454, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 733)
        subscript_call_result_398456 = invoke(stypy.reporting.localization.Localization(__file__, 733, 42), getitem___398455, int_398452)
        
        int_398457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 733, 58), 'int')
        # Applying the binary operator '-' (line 733)
        result_sub_398458 = python_operator(stypy.reporting.localization.Localization(__file__, 733, 42), '-', subscript_call_result_398456, int_398457)
        
        # Getting the type of 'self' (line 733)
        self_398459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 62), 'self', False)
        # Obtaining the member 'n' of a type (line 733)
        n_398460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 62), self_398459, 'n')
        # Applying the binary operator '+' (line 733)
        result_add_398461 = python_operator(stypy.reporting.localization.Localization(__file__, 733, 60), '+', result_sub_398458, n_398460)
        
        # Processing the call keyword arguments (line 733)
        kwargs_398462 = {}
        # Getting the type of 'slice' (line 733)
        slice_398444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 17), 'slice', False)
        # Calling slice(args, kwargs) (line 733)
        slice_call_result_398463 = invoke(stypy.reporting.localization.Localization(__file__, 733, 17), slice_398444, *[result_sub_398451, result_add_398461], **kwargs_398462)
        
        # Assigning a type to the variable 'xslice' (line 733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 8), 'xslice', slice_call_result_398463)
        
        # Assigning a Call to a Name (line 734):
        
        # Assigning a Call to a Name (line 734):
        
        # Call to slice(...): (line 734)
        # Processing the call arguments (line 734)
        
        # Obtaining the type of the subscript
        int_398465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 34), 'int')
        # Getting the type of 'self' (line 734)
        self_398466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 23), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 734)
        ipntr_398467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 23), self_398466, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 734)
        getitem___398468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 23), ipntr_398467, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 734)
        subscript_call_result_398469 = invoke(stypy.reporting.localization.Localization(__file__, 734, 23), getitem___398468, int_398465)
        
        int_398470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 39), 'int')
        # Applying the binary operator '-' (line 734)
        result_sub_398471 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 23), '-', subscript_call_result_398469, int_398470)
        
        
        # Obtaining the type of the subscript
        int_398472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 53), 'int')
        # Getting the type of 'self' (line 734)
        self_398473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 42), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 734)
        ipntr_398474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 42), self_398473, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 734)
        getitem___398475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 42), ipntr_398474, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 734)
        subscript_call_result_398476 = invoke(stypy.reporting.localization.Localization(__file__, 734, 42), getitem___398475, int_398472)
        
        int_398477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 58), 'int')
        # Applying the binary operator '-' (line 734)
        result_sub_398478 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 42), '-', subscript_call_result_398476, int_398477)
        
        # Getting the type of 'self' (line 734)
        self_398479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 62), 'self', False)
        # Obtaining the member 'n' of a type (line 734)
        n_398480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 62), self_398479, 'n')
        # Applying the binary operator '+' (line 734)
        result_add_398481 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 60), '+', result_sub_398478, n_398480)
        
        # Processing the call keyword arguments (line 734)
        kwargs_398482 = {}
        # Getting the type of 'slice' (line 734)
        slice_398464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 17), 'slice', False)
        # Calling slice(args, kwargs) (line 734)
        slice_call_result_398483 = invoke(stypy.reporting.localization.Localization(__file__, 734, 17), slice_398464, *[result_sub_398471, result_add_398481], **kwargs_398482)
        
        # Assigning a type to the variable 'yslice' (line 734)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 734, 8), 'yslice', slice_call_result_398483)
        
        
        # Getting the type of 'self' (line 735)
        self_398484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 11), 'self')
        # Obtaining the member 'ido' of a type (line 735)
        ido_398485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 11), self_398484, 'ido')
        int_398486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 735, 23), 'int')
        # Applying the binary operator '==' (line 735)
        result_eq_398487 = python_operator(stypy.reporting.localization.Localization(__file__, 735, 11), '==', ido_398485, int_398486)
        
        # Testing the type of an if condition (line 735)
        if_condition_398488 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 735, 8), result_eq_398487)
        # Assigning a type to the variable 'if_condition_398488' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'if_condition_398488', if_condition_398488)
        # SSA begins for if statement (line 735)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 737):
        
        # Assigning a Call to a Subscript (line 737):
        
        # Call to OP(...): (line 737)
        # Processing the call arguments (line 737)
        
        # Obtaining the type of the subscript
        # Getting the type of 'xslice' (line 737)
        xslice_398491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 52), 'xslice', False)
        # Getting the type of 'self' (line 737)
        self_398492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 41), 'self', False)
        # Obtaining the member 'workd' of a type (line 737)
        workd_398493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 41), self_398492, 'workd')
        # Obtaining the member '__getitem__' of a type (line 737)
        getitem___398494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 41), workd_398493, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 737)
        subscript_call_result_398495 = invoke(stypy.reporting.localization.Localization(__file__, 737, 41), getitem___398494, xslice_398491)
        
        # Processing the call keyword arguments (line 737)
        kwargs_398496 = {}
        # Getting the type of 'self' (line 737)
        self_398489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 33), 'self', False)
        # Obtaining the member 'OP' of a type (line 737)
        OP_398490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 33), self_398489, 'OP')
        # Calling OP(args, kwargs) (line 737)
        OP_call_result_398497 = invoke(stypy.reporting.localization.Localization(__file__, 737, 33), OP_398490, *[subscript_call_result_398495], **kwargs_398496)
        
        # Getting the type of 'self' (line 737)
        self_398498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 12), 'self')
        # Obtaining the member 'workd' of a type (line 737)
        workd_398499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 12), self_398498, 'workd')
        # Getting the type of 'yslice' (line 737)
        yslice_398500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 23), 'yslice')
        # Storing an element on a container (line 737)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 737, 12), workd_398499, (yslice_398500, OP_call_result_398497))
        # SSA branch for the else part of an if statement (line 735)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 738)
        self_398501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 13), 'self')
        # Obtaining the member 'ido' of a type (line 738)
        ido_398502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 13), self_398501, 'ido')
        int_398503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 25), 'int')
        # Applying the binary operator '==' (line 738)
        result_eq_398504 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 13), '==', ido_398502, int_398503)
        
        # Testing the type of an if condition (line 738)
        if_condition_398505 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 738, 13), result_eq_398504)
        # Assigning a type to the variable 'if_condition_398505' (line 738)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 738, 13), 'if_condition_398505', if_condition_398505)
        # SSA begins for if statement (line 738)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'self' (line 740)
        self_398506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 15), 'self')
        # Obtaining the member 'mode' of a type (line 740)
        mode_398507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 740, 15), self_398506, 'mode')
        
        # Obtaining an instance of the builtin type 'tuple' (line 740)
        tuple_398508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 29), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 740)
        # Adding element type (line 740)
        int_398509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 29), tuple_398508, int_398509)
        # Adding element type (line 740)
        int_398510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 29), tuple_398508, int_398510)
        
        # Applying the binary operator 'in' (line 740)
        result_contains_398511 = python_operator(stypy.reporting.localization.Localization(__file__, 740, 15), 'in', mode_398507, tuple_398508)
        
        # Testing the type of an if condition (line 740)
        if_condition_398512 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 740, 12), result_contains_398511)
        # Assigning a type to the variable 'if_condition_398512' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 12), 'if_condition_398512', if_condition_398512)
        # SSA begins for if statement (line 740)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 741):
        
        # Assigning a Call to a Subscript (line 741):
        
        # Call to OP(...): (line 741)
        # Processing the call arguments (line 741)
        
        # Obtaining the type of the subscript
        # Getting the type of 'xslice' (line 741)
        xslice_398515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 56), 'xslice', False)
        # Getting the type of 'self' (line 741)
        self_398516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 45), 'self', False)
        # Obtaining the member 'workd' of a type (line 741)
        workd_398517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 45), self_398516, 'workd')
        # Obtaining the member '__getitem__' of a type (line 741)
        getitem___398518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 45), workd_398517, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 741)
        subscript_call_result_398519 = invoke(stypy.reporting.localization.Localization(__file__, 741, 45), getitem___398518, xslice_398515)
        
        # Processing the call keyword arguments (line 741)
        kwargs_398520 = {}
        # Getting the type of 'self' (line 741)
        self_398513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 37), 'self', False)
        # Obtaining the member 'OP' of a type (line 741)
        OP_398514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 37), self_398513, 'OP')
        # Calling OP(args, kwargs) (line 741)
        OP_call_result_398521 = invoke(stypy.reporting.localization.Localization(__file__, 741, 37), OP_398514, *[subscript_call_result_398519], **kwargs_398520)
        
        # Getting the type of 'self' (line 741)
        self_398522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 16), 'self')
        # Obtaining the member 'workd' of a type (line 741)
        workd_398523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 16), self_398522, 'workd')
        # Getting the type of 'yslice' (line 741)
        yslice_398524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 27), 'yslice')
        # Storing an element on a container (line 741)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 741, 16), workd_398523, (yslice_398524, OP_call_result_398521))
        # SSA branch for the else part of an if statement (line 740)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 743):
        
        # Assigning a Call to a Name (line 743):
        
        # Call to slice(...): (line 743)
        # Processing the call arguments (line 743)
        
        # Obtaining the type of the subscript
        int_398526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 743, 43), 'int')
        # Getting the type of 'self' (line 743)
        self_398527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 32), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 743)
        ipntr_398528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 32), self_398527, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 743)
        getitem___398529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 32), ipntr_398528, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 743)
        subscript_call_result_398530 = invoke(stypy.reporting.localization.Localization(__file__, 743, 32), getitem___398529, int_398526)
        
        int_398531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 743, 48), 'int')
        # Applying the binary operator '-' (line 743)
        result_sub_398532 = python_operator(stypy.reporting.localization.Localization(__file__, 743, 32), '-', subscript_call_result_398530, int_398531)
        
        
        # Obtaining the type of the subscript
        int_398533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 743, 62), 'int')
        # Getting the type of 'self' (line 743)
        self_398534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 51), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 743)
        ipntr_398535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 51), self_398534, 'ipntr')
        # Obtaining the member '__getitem__' of a type (line 743)
        getitem___398536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 51), ipntr_398535, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 743)
        subscript_call_result_398537 = invoke(stypy.reporting.localization.Localization(__file__, 743, 51), getitem___398536, int_398533)
        
        int_398538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 743, 67), 'int')
        # Applying the binary operator '-' (line 743)
        result_sub_398539 = python_operator(stypy.reporting.localization.Localization(__file__, 743, 51), '-', subscript_call_result_398537, int_398538)
        
        # Getting the type of 'self' (line 743)
        self_398540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 71), 'self', False)
        # Obtaining the member 'n' of a type (line 743)
        n_398541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 71), self_398540, 'n')
        # Applying the binary operator '+' (line 743)
        result_add_398542 = python_operator(stypy.reporting.localization.Localization(__file__, 743, 69), '+', result_sub_398539, n_398541)
        
        # Processing the call keyword arguments (line 743)
        kwargs_398543 = {}
        # Getting the type of 'slice' (line 743)
        slice_398525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 26), 'slice', False)
        # Calling slice(args, kwargs) (line 743)
        slice_call_result_398544 = invoke(stypy.reporting.localization.Localization(__file__, 743, 26), slice_398525, *[result_sub_398532, result_add_398542], **kwargs_398543)
        
        # Assigning a type to the variable 'Bxslice' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 16), 'Bxslice', slice_call_result_398544)
        
        # Assigning a Call to a Subscript (line 744):
        
        # Assigning a Call to a Subscript (line 744):
        
        # Call to OPa(...): (line 744)
        # Processing the call arguments (line 744)
        
        # Obtaining the type of the subscript
        # Getting the type of 'Bxslice' (line 744)
        Bxslice_398547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 57), 'Bxslice', False)
        # Getting the type of 'self' (line 744)
        self_398548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 46), 'self', False)
        # Obtaining the member 'workd' of a type (line 744)
        workd_398549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 744, 46), self_398548, 'workd')
        # Obtaining the member '__getitem__' of a type (line 744)
        getitem___398550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 744, 46), workd_398549, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 744)
        subscript_call_result_398551 = invoke(stypy.reporting.localization.Localization(__file__, 744, 46), getitem___398550, Bxslice_398547)
        
        # Processing the call keyword arguments (line 744)
        kwargs_398552 = {}
        # Getting the type of 'self' (line 744)
        self_398545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 37), 'self', False)
        # Obtaining the member 'OPa' of a type (line 744)
        OPa_398546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 744, 37), self_398545, 'OPa')
        # Calling OPa(args, kwargs) (line 744)
        OPa_call_result_398553 = invoke(stypy.reporting.localization.Localization(__file__, 744, 37), OPa_398546, *[subscript_call_result_398551], **kwargs_398552)
        
        # Getting the type of 'self' (line 744)
        self_398554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 16), 'self')
        # Obtaining the member 'workd' of a type (line 744)
        workd_398555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 744, 16), self_398554, 'workd')
        # Getting the type of 'yslice' (line 744)
        yslice_398556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 27), 'yslice')
        # Storing an element on a container (line 744)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 16), workd_398555, (yslice_398556, OPa_call_result_398553))
        # SSA join for if statement (line 740)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 738)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 745)
        self_398557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 13), 'self')
        # Obtaining the member 'ido' of a type (line 745)
        ido_398558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 13), self_398557, 'ido')
        int_398559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 25), 'int')
        # Applying the binary operator '==' (line 745)
        result_eq_398560 = python_operator(stypy.reporting.localization.Localization(__file__, 745, 13), '==', ido_398558, int_398559)
        
        # Testing the type of an if condition (line 745)
        if_condition_398561 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 745, 13), result_eq_398560)
        # Assigning a type to the variable 'if_condition_398561' (line 745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 13), 'if_condition_398561', if_condition_398561)
        # SSA begins for if statement (line 745)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 746):
        
        # Assigning a Call to a Subscript (line 746):
        
        # Call to B(...): (line 746)
        # Processing the call arguments (line 746)
        
        # Obtaining the type of the subscript
        # Getting the type of 'xslice' (line 746)
        xslice_398564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 51), 'xslice', False)
        # Getting the type of 'self' (line 746)
        self_398565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 40), 'self', False)
        # Obtaining the member 'workd' of a type (line 746)
        workd_398566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 40), self_398565, 'workd')
        # Obtaining the member '__getitem__' of a type (line 746)
        getitem___398567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 40), workd_398566, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 746)
        subscript_call_result_398568 = invoke(stypy.reporting.localization.Localization(__file__, 746, 40), getitem___398567, xslice_398564)
        
        # Processing the call keyword arguments (line 746)
        kwargs_398569 = {}
        # Getting the type of 'self' (line 746)
        self_398562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 33), 'self', False)
        # Obtaining the member 'B' of a type (line 746)
        B_398563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 33), self_398562, 'B')
        # Calling B(args, kwargs) (line 746)
        B_call_result_398570 = invoke(stypy.reporting.localization.Localization(__file__, 746, 33), B_398563, *[subscript_call_result_398568], **kwargs_398569)
        
        # Getting the type of 'self' (line 746)
        self_398571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 12), 'self')
        # Obtaining the member 'workd' of a type (line 746)
        workd_398572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 12), self_398571, 'workd')
        # Getting the type of 'yslice' (line 746)
        yslice_398573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 23), 'yslice')
        # Storing an element on a container (line 746)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 12), workd_398572, (yslice_398573, B_call_result_398570))
        # SSA branch for the else part of an if statement (line 745)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 747)
        self_398574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 13), 'self')
        # Obtaining the member 'ido' of a type (line 747)
        ido_398575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 13), self_398574, 'ido')
        int_398576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 25), 'int')
        # Applying the binary operator '==' (line 747)
        result_eq_398577 = python_operator(stypy.reporting.localization.Localization(__file__, 747, 13), '==', ido_398575, int_398576)
        
        # Testing the type of an if condition (line 747)
        if_condition_398578 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 747, 13), result_eq_398577)
        # Assigning a type to the variable 'if_condition_398578' (line 747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 13), 'if_condition_398578', if_condition_398578)
        # SSA begins for if statement (line 747)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 748)
        # Processing the call arguments (line 748)
        str_398580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 29), 'str', 'ARPACK requested user shifts.  Assure ISHIFT==0')
        # Processing the call keyword arguments (line 748)
        kwargs_398581 = {}
        # Getting the type of 'ValueError' (line 748)
        ValueError_398579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 748)
        ValueError_call_result_398582 = invoke(stypy.reporting.localization.Localization(__file__, 748, 18), ValueError_398579, *[str_398580], **kwargs_398581)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 748, 12), ValueError_call_result_398582, 'raise parameter', BaseException)
        # SSA branch for the else part of an if statement (line 747)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Attribute (line 750):
        
        # Assigning a Name to a Attribute (line 750):
        # Getting the type of 'True' (line 750)
        True_398583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 29), 'True')
        # Getting the type of 'self' (line 750)
        self_398584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 12), 'self')
        # Setting the type of the member 'converged' of a type (line 750)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 12), self_398584, 'converged', True_398583)
        
        
        # Getting the type of 'self' (line 752)
        self_398585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 15), 'self')
        # Obtaining the member 'info' of a type (line 752)
        info_398586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 15), self_398585, 'info')
        int_398587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 28), 'int')
        # Applying the binary operator '==' (line 752)
        result_eq_398588 = python_operator(stypy.reporting.localization.Localization(__file__, 752, 15), '==', info_398586, int_398587)
        
        # Testing the type of an if condition (line 752)
        if_condition_398589 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 752, 12), result_eq_398588)
        # Assigning a type to the variable 'if_condition_398589' (line 752)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 12), 'if_condition_398589', if_condition_398589)
        # SSA begins for if statement (line 752)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        pass
        # SSA branch for the else part of an if statement (line 752)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 754)
        self_398590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 17), 'self')
        # Obtaining the member 'info' of a type (line 754)
        info_398591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 17), self_398590, 'info')
        int_398592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 754, 30), 'int')
        # Applying the binary operator '==' (line 754)
        result_eq_398593 = python_operator(stypy.reporting.localization.Localization(__file__, 754, 17), '==', info_398591, int_398592)
        
        # Testing the type of an if condition (line 754)
        if_condition_398594 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 754, 17), result_eq_398593)
        # Assigning a type to the variable 'if_condition_398594' (line 754)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 754, 17), 'if_condition_398594', if_condition_398594)
        # SSA begins for if statement (line 754)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _raise_no_convergence(...): (line 755)
        # Processing the call keyword arguments (line 755)
        kwargs_398597 = {}
        # Getting the type of 'self' (line 755)
        self_398595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 16), 'self', False)
        # Obtaining the member '_raise_no_convergence' of a type (line 755)
        _raise_no_convergence_398596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 755, 16), self_398595, '_raise_no_convergence')
        # Calling _raise_no_convergence(args, kwargs) (line 755)
        _raise_no_convergence_call_result_398598 = invoke(stypy.reporting.localization.Localization(__file__, 755, 16), _raise_no_convergence_398596, *[], **kwargs_398597)
        
        # SSA branch for the else part of an if statement (line 754)
        module_type_store.open_ssa_branch('else')
        
        # Call to ArpackError(...): (line 757)
        # Processing the call arguments (line 757)
        # Getting the type of 'self' (line 757)
        self_398600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 34), 'self', False)
        # Obtaining the member 'info' of a type (line 757)
        info_398601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 34), self_398600, 'info')
        # Processing the call keyword arguments (line 757)
        # Getting the type of 'self' (line 757)
        self_398602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 54), 'self', False)
        # Obtaining the member 'iterate_infodict' of a type (line 757)
        iterate_infodict_398603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 54), self_398602, 'iterate_infodict')
        keyword_398604 = iterate_infodict_398603
        kwargs_398605 = {'infodict': keyword_398604}
        # Getting the type of 'ArpackError' (line 757)
        ArpackError_398599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 22), 'ArpackError', False)
        # Calling ArpackError(args, kwargs) (line 757)
        ArpackError_call_result_398606 = invoke(stypy.reporting.localization.Localization(__file__, 757, 22), ArpackError_398599, *[info_398601], **kwargs_398605)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 757, 16), ArpackError_call_result_398606, 'raise parameter', BaseException)
        # SSA join for if statement (line 754)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 752)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 747)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 745)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 738)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 735)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'iterate(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'iterate' in the type store
        # Getting the type of 'stypy_return_type' (line 719)
        stypy_return_type_398607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_398607)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'iterate'
        return stypy_return_type_398607


    @norecursion
    def extract(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'extract'
        module_type_store = module_type_store.open_function_context('extract', 759, 4, False)
        # Assigning a type to the variable 'self' (line 760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_localization', localization)
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_type_store', module_type_store)
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_function_name', '_UnsymmetricArpackParams.extract')
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_param_names_list', ['return_eigenvectors'])
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_varargs_param_name', None)
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_call_defaults', defaults)
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_call_varargs', varargs)
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _UnsymmetricArpackParams.extract.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_UnsymmetricArpackParams.extract', ['return_eigenvectors'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'extract', localization, ['return_eigenvectors'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'extract(...)' code ##################

        
        # Assigning a Tuple to a Tuple (line 760):
        
        # Assigning a Attribute to a Name (line 760):
        # Getting the type of 'self' (line 760)
        self_398608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 15), 'self')
        # Obtaining the member 'k' of a type (line 760)
        k_398609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 15), self_398608, 'k')
        # Assigning a type to the variable 'tuple_assignment_396020' (line 760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_assignment_396020', k_398609)
        
        # Assigning a Attribute to a Name (line 760):
        # Getting the type of 'self' (line 760)
        self_398610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 23), 'self')
        # Obtaining the member 'n' of a type (line 760)
        n_398611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 23), self_398610, 'n')
        # Assigning a type to the variable 'tuple_assignment_396021' (line 760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_assignment_396021', n_398611)
        
        # Assigning a Name to a Name (line 760):
        # Getting the type of 'tuple_assignment_396020' (line 760)
        tuple_assignment_396020_398612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_assignment_396020')
        # Assigning a type to the variable 'k' (line 760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'k', tuple_assignment_396020_398612)
        
        # Assigning a Name to a Name (line 760):
        # Getting the type of 'tuple_assignment_396021' (line 760)
        tuple_assignment_396021_398613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'tuple_assignment_396021')
        # Assigning a type to the variable 'n' (line 760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 11), 'n', tuple_assignment_396021_398613)
        
        # Assigning a Num to a Name (line 762):
        
        # Assigning a Num to a Name (line 762):
        int_398614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 15), 'int')
        # Assigning a type to the variable 'ierr' (line 762)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 762, 8), 'ierr', int_398614)
        
        # Assigning a Str to a Name (line 763):
        
        # Assigning a Str to a Name (line 763):
        str_398615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 17), 'str', 'A')
        # Assigning a type to the variable 'howmny' (line 763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 8), 'howmny', str_398615)
        
        # Assigning a Call to a Name (line 764):
        
        # Assigning a Call to a Name (line 764):
        
        # Call to zeros(...): (line 764)
        # Processing the call arguments (line 764)
        # Getting the type of 'self' (line 764)
        self_398618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 27), 'self', False)
        # Obtaining the member 'ncv' of a type (line 764)
        ncv_398619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 27), self_398618, 'ncv')
        str_398620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 764, 37), 'str', 'int')
        # Processing the call keyword arguments (line 764)
        kwargs_398621 = {}
        # Getting the type of 'np' (line 764)
        np_398616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 18), 'np', False)
        # Obtaining the member 'zeros' of a type (line 764)
        zeros_398617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 18), np_398616, 'zeros')
        # Calling zeros(args, kwargs) (line 764)
        zeros_call_result_398622 = invoke(stypy.reporting.localization.Localization(__file__, 764, 18), zeros_398617, *[ncv_398619, str_398620], **kwargs_398621)
        
        # Assigning a type to the variable 'sselect' (line 764)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 764, 8), 'sselect', zeros_call_result_398622)
        
        # Assigning a Call to a Name (line 765):
        
        # Assigning a Call to a Name (line 765):
        
        # Call to real(...): (line 765)
        # Processing the call arguments (line 765)
        # Getting the type of 'self' (line 765)
        self_398625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 25), 'self', False)
        # Obtaining the member 'sigma' of a type (line 765)
        sigma_398626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 25), self_398625, 'sigma')
        # Processing the call keyword arguments (line 765)
        kwargs_398627 = {}
        # Getting the type of 'np' (line 765)
        np_398623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 17), 'np', False)
        # Obtaining the member 'real' of a type (line 765)
        real_398624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 17), np_398623, 'real')
        # Calling real(args, kwargs) (line 765)
        real_call_result_398628 = invoke(stypy.reporting.localization.Localization(__file__, 765, 17), real_398624, *[sigma_398626], **kwargs_398627)
        
        # Assigning a type to the variable 'sigmar' (line 765)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 765, 8), 'sigmar', real_call_result_398628)
        
        # Assigning a Call to a Name (line 766):
        
        # Assigning a Call to a Name (line 766):
        
        # Call to imag(...): (line 766)
        # Processing the call arguments (line 766)
        # Getting the type of 'self' (line 766)
        self_398631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 25), 'self', False)
        # Obtaining the member 'sigma' of a type (line 766)
        sigma_398632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 25), self_398631, 'sigma')
        # Processing the call keyword arguments (line 766)
        kwargs_398633 = {}
        # Getting the type of 'np' (line 766)
        np_398629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 17), 'np', False)
        # Obtaining the member 'imag' of a type (line 766)
        imag_398630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 17), np_398629, 'imag')
        # Calling imag(args, kwargs) (line 766)
        imag_call_result_398634 = invoke(stypy.reporting.localization.Localization(__file__, 766, 17), imag_398630, *[sigma_398632], **kwargs_398633)
        
        # Assigning a type to the variable 'sigmai' (line 766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 8), 'sigmai', imag_call_result_398634)
        
        # Assigning a Call to a Name (line 767):
        
        # Assigning a Call to a Name (line 767):
        
        # Call to zeros(...): (line 767)
        # Processing the call arguments (line 767)
        int_398637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 26), 'int')
        # Getting the type of 'self' (line 767)
        self_398638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 30), 'self', False)
        # Obtaining the member 'ncv' of a type (line 767)
        ncv_398639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 30), self_398638, 'ncv')
        # Applying the binary operator '*' (line 767)
        result_mul_398640 = python_operator(stypy.reporting.localization.Localization(__file__, 767, 26), '*', int_398637, ncv_398639)
        
        # Getting the type of 'self' (line 767)
        self_398641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 40), 'self', False)
        # Obtaining the member 'tp' of a type (line 767)
        tp_398642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 40), self_398641, 'tp')
        # Processing the call keyword arguments (line 767)
        kwargs_398643 = {}
        # Getting the type of 'np' (line 767)
        np_398635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 17), 'np', False)
        # Obtaining the member 'zeros' of a type (line 767)
        zeros_398636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 17), np_398635, 'zeros')
        # Calling zeros(args, kwargs) (line 767)
        zeros_call_result_398644 = invoke(stypy.reporting.localization.Localization(__file__, 767, 17), zeros_398636, *[result_mul_398640, tp_398642], **kwargs_398643)
        
        # Assigning a type to the variable 'workev' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'workev', zeros_call_result_398644)
        
        
        # Getting the type of 'self' (line 769)
        self_398645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 11), 'self')
        # Obtaining the member 'tp' of a type (line 769)
        tp_398646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 11), self_398645, 'tp')
        str_398647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 769, 22), 'str', 'fd')
        # Applying the binary operator 'in' (line 769)
        result_contains_398648 = python_operator(stypy.reporting.localization.Localization(__file__, 769, 11), 'in', tp_398646, str_398647)
        
        # Testing the type of an if condition (line 769)
        if_condition_398649 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 769, 8), result_contains_398648)
        # Assigning a type to the variable 'if_condition_398649' (line 769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'if_condition_398649', if_condition_398649)
        # SSA begins for if statement (line 769)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 770):
        
        # Assigning a Call to a Name (line 770):
        
        # Call to zeros(...): (line 770)
        # Processing the call arguments (line 770)
        # Getting the type of 'k' (line 770)
        k_398652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 26), 'k', False)
        int_398653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 30), 'int')
        # Applying the binary operator '+' (line 770)
        result_add_398654 = python_operator(stypy.reporting.localization.Localization(__file__, 770, 26), '+', k_398652, int_398653)
        
        # Getting the type of 'self' (line 770)
        self_398655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 33), 'self', False)
        # Obtaining the member 'tp' of a type (line 770)
        tp_398656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 770, 33), self_398655, 'tp')
        # Processing the call keyword arguments (line 770)
        kwargs_398657 = {}
        # Getting the type of 'np' (line 770)
        np_398650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 17), 'np', False)
        # Obtaining the member 'zeros' of a type (line 770)
        zeros_398651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 770, 17), np_398650, 'zeros')
        # Calling zeros(args, kwargs) (line 770)
        zeros_call_result_398658 = invoke(stypy.reporting.localization.Localization(__file__, 770, 17), zeros_398651, *[result_add_398654, tp_398656], **kwargs_398657)
        
        # Assigning a type to the variable 'dr' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 12), 'dr', zeros_call_result_398658)
        
        # Assigning a Call to a Name (line 771):
        
        # Assigning a Call to a Name (line 771):
        
        # Call to zeros(...): (line 771)
        # Processing the call arguments (line 771)
        # Getting the type of 'k' (line 771)
        k_398661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 26), 'k', False)
        int_398662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 771, 30), 'int')
        # Applying the binary operator '+' (line 771)
        result_add_398663 = python_operator(stypy.reporting.localization.Localization(__file__, 771, 26), '+', k_398661, int_398662)
        
        # Getting the type of 'self' (line 771)
        self_398664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 33), 'self', False)
        # Obtaining the member 'tp' of a type (line 771)
        tp_398665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 771, 33), self_398664, 'tp')
        # Processing the call keyword arguments (line 771)
        kwargs_398666 = {}
        # Getting the type of 'np' (line 771)
        np_398659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 17), 'np', False)
        # Obtaining the member 'zeros' of a type (line 771)
        zeros_398660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 771, 17), np_398659, 'zeros')
        # Calling zeros(args, kwargs) (line 771)
        zeros_call_result_398667 = invoke(stypy.reporting.localization.Localization(__file__, 771, 17), zeros_398660, *[result_add_398663, tp_398665], **kwargs_398666)
        
        # Assigning a type to the variable 'di' (line 771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 12), 'di', zeros_call_result_398667)
        
        # Assigning a Call to a Name (line 772):
        
        # Assigning a Call to a Name (line 772):
        
        # Call to zeros(...): (line 772)
        # Processing the call arguments (line 772)
        
        # Obtaining an instance of the builtin type 'tuple' (line 772)
        tuple_398670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 772)
        # Adding element type (line 772)
        # Getting the type of 'n' (line 772)
        n_398671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 27), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 772, 27), tuple_398670, n_398671)
        # Adding element type (line 772)
        # Getting the type of 'k' (line 772)
        k_398672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 30), 'k', False)
        int_398673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 34), 'int')
        # Applying the binary operator '+' (line 772)
        result_add_398674 = python_operator(stypy.reporting.localization.Localization(__file__, 772, 30), '+', k_398672, int_398673)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 772, 27), tuple_398670, result_add_398674)
        
        # Getting the type of 'self' (line 772)
        self_398675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 38), 'self', False)
        # Obtaining the member 'tp' of a type (line 772)
        tp_398676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 38), self_398675, 'tp')
        # Processing the call keyword arguments (line 772)
        kwargs_398677 = {}
        # Getting the type of 'np' (line 772)
        np_398668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 17), 'np', False)
        # Obtaining the member 'zeros' of a type (line 772)
        zeros_398669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 17), np_398668, 'zeros')
        # Calling zeros(args, kwargs) (line 772)
        zeros_call_result_398678 = invoke(stypy.reporting.localization.Localization(__file__, 772, 17), zeros_398669, *[tuple_398670, tp_398676], **kwargs_398677)
        
        # Assigning a type to the variable 'zr' (line 772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 12), 'zr', zeros_call_result_398678)
        
        # Assigning a Call to a Tuple (line 773):
        
        # Assigning a Subscript to a Name (line 773):
        
        # Obtaining the type of the subscript
        int_398679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 12), 'int')
        
        # Call to _arpack_extract(...): (line 774)
        # Processing the call arguments (line 774)
        # Getting the type of 'return_eigenvectors' (line 774)
        return_eigenvectors_398682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 37), 'return_eigenvectors', False)
        # Getting the type of 'howmny' (line 775)
        howmny_398683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 23), 'howmny', False)
        # Getting the type of 'sselect' (line 775)
        sselect_398684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 31), 'sselect', False)
        # Getting the type of 'sigmar' (line 775)
        sigmar_398685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 40), 'sigmar', False)
        # Getting the type of 'sigmai' (line 775)
        sigmai_398686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 48), 'sigmai', False)
        # Getting the type of 'workev' (line 775)
        workev_398687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 56), 'workev', False)
        # Getting the type of 'self' (line 776)
        self_398688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 23), 'self', False)
        # Obtaining the member 'bmat' of a type (line 776)
        bmat_398689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 23), self_398688, 'bmat')
        # Getting the type of 'self' (line 776)
        self_398690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 34), 'self', False)
        # Obtaining the member 'which' of a type (line 776)
        which_398691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 34), self_398690, 'which')
        # Getting the type of 'k' (line 776)
        k_398692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 46), 'k', False)
        # Getting the type of 'self' (line 776)
        self_398693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 49), 'self', False)
        # Obtaining the member 'tol' of a type (line 776)
        tol_398694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 49), self_398693, 'tol')
        # Getting the type of 'self' (line 776)
        self_398695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 59), 'self', False)
        # Obtaining the member 'resid' of a type (line 776)
        resid_398696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 59), self_398695, 'resid')
        # Getting the type of 'self' (line 777)
        self_398697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 23), 'self', False)
        # Obtaining the member 'v' of a type (line 777)
        v_398698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 23), self_398697, 'v')
        # Getting the type of 'self' (line 777)
        self_398699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 31), 'self', False)
        # Obtaining the member 'iparam' of a type (line 777)
        iparam_398700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 31), self_398699, 'iparam')
        # Getting the type of 'self' (line 777)
        self_398701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 44), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 777)
        ipntr_398702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 44), self_398701, 'ipntr')
        # Getting the type of 'self' (line 778)
        self_398703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 23), 'self', False)
        # Obtaining the member 'workd' of a type (line 778)
        workd_398704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 23), self_398703, 'workd')
        # Getting the type of 'self' (line 778)
        self_398705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 35), 'self', False)
        # Obtaining the member 'workl' of a type (line 778)
        workl_398706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 35), self_398705, 'workl')
        # Getting the type of 'self' (line 778)
        self_398707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 47), 'self', False)
        # Obtaining the member 'info' of a type (line 778)
        info_398708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 47), self_398707, 'info')
        # Processing the call keyword arguments (line 774)
        kwargs_398709 = {}
        # Getting the type of 'self' (line 774)
        self_398680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 16), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 774)
        _arpack_extract_398681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 16), self_398680, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 774)
        _arpack_extract_call_result_398710 = invoke(stypy.reporting.localization.Localization(__file__, 774, 16), _arpack_extract_398681, *[return_eigenvectors_398682, howmny_398683, sselect_398684, sigmar_398685, sigmai_398686, workev_398687, bmat_398689, which_398691, k_398692, tol_398694, resid_398696, v_398698, iparam_398700, ipntr_398702, workd_398704, workl_398706, info_398708], **kwargs_398709)
        
        # Obtaining the member '__getitem__' of a type (line 773)
        getitem___398711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 12), _arpack_extract_call_result_398710, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 773)
        subscript_call_result_398712 = invoke(stypy.reporting.localization.Localization(__file__, 773, 12), getitem___398711, int_398679)
        
        # Assigning a type to the variable 'tuple_var_assignment_396022' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'tuple_var_assignment_396022', subscript_call_result_398712)
        
        # Assigning a Subscript to a Name (line 773):
        
        # Obtaining the type of the subscript
        int_398713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 12), 'int')
        
        # Call to _arpack_extract(...): (line 774)
        # Processing the call arguments (line 774)
        # Getting the type of 'return_eigenvectors' (line 774)
        return_eigenvectors_398716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 37), 'return_eigenvectors', False)
        # Getting the type of 'howmny' (line 775)
        howmny_398717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 23), 'howmny', False)
        # Getting the type of 'sselect' (line 775)
        sselect_398718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 31), 'sselect', False)
        # Getting the type of 'sigmar' (line 775)
        sigmar_398719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 40), 'sigmar', False)
        # Getting the type of 'sigmai' (line 775)
        sigmai_398720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 48), 'sigmai', False)
        # Getting the type of 'workev' (line 775)
        workev_398721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 56), 'workev', False)
        # Getting the type of 'self' (line 776)
        self_398722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 23), 'self', False)
        # Obtaining the member 'bmat' of a type (line 776)
        bmat_398723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 23), self_398722, 'bmat')
        # Getting the type of 'self' (line 776)
        self_398724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 34), 'self', False)
        # Obtaining the member 'which' of a type (line 776)
        which_398725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 34), self_398724, 'which')
        # Getting the type of 'k' (line 776)
        k_398726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 46), 'k', False)
        # Getting the type of 'self' (line 776)
        self_398727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 49), 'self', False)
        # Obtaining the member 'tol' of a type (line 776)
        tol_398728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 49), self_398727, 'tol')
        # Getting the type of 'self' (line 776)
        self_398729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 59), 'self', False)
        # Obtaining the member 'resid' of a type (line 776)
        resid_398730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 59), self_398729, 'resid')
        # Getting the type of 'self' (line 777)
        self_398731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 23), 'self', False)
        # Obtaining the member 'v' of a type (line 777)
        v_398732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 23), self_398731, 'v')
        # Getting the type of 'self' (line 777)
        self_398733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 31), 'self', False)
        # Obtaining the member 'iparam' of a type (line 777)
        iparam_398734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 31), self_398733, 'iparam')
        # Getting the type of 'self' (line 777)
        self_398735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 44), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 777)
        ipntr_398736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 44), self_398735, 'ipntr')
        # Getting the type of 'self' (line 778)
        self_398737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 23), 'self', False)
        # Obtaining the member 'workd' of a type (line 778)
        workd_398738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 23), self_398737, 'workd')
        # Getting the type of 'self' (line 778)
        self_398739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 35), 'self', False)
        # Obtaining the member 'workl' of a type (line 778)
        workl_398740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 35), self_398739, 'workl')
        # Getting the type of 'self' (line 778)
        self_398741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 47), 'self', False)
        # Obtaining the member 'info' of a type (line 778)
        info_398742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 47), self_398741, 'info')
        # Processing the call keyword arguments (line 774)
        kwargs_398743 = {}
        # Getting the type of 'self' (line 774)
        self_398714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 16), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 774)
        _arpack_extract_398715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 16), self_398714, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 774)
        _arpack_extract_call_result_398744 = invoke(stypy.reporting.localization.Localization(__file__, 774, 16), _arpack_extract_398715, *[return_eigenvectors_398716, howmny_398717, sselect_398718, sigmar_398719, sigmai_398720, workev_398721, bmat_398723, which_398725, k_398726, tol_398728, resid_398730, v_398732, iparam_398734, ipntr_398736, workd_398738, workl_398740, info_398742], **kwargs_398743)
        
        # Obtaining the member '__getitem__' of a type (line 773)
        getitem___398745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 12), _arpack_extract_call_result_398744, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 773)
        subscript_call_result_398746 = invoke(stypy.reporting.localization.Localization(__file__, 773, 12), getitem___398745, int_398713)
        
        # Assigning a type to the variable 'tuple_var_assignment_396023' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'tuple_var_assignment_396023', subscript_call_result_398746)
        
        # Assigning a Subscript to a Name (line 773):
        
        # Obtaining the type of the subscript
        int_398747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 12), 'int')
        
        # Call to _arpack_extract(...): (line 774)
        # Processing the call arguments (line 774)
        # Getting the type of 'return_eigenvectors' (line 774)
        return_eigenvectors_398750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 37), 'return_eigenvectors', False)
        # Getting the type of 'howmny' (line 775)
        howmny_398751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 23), 'howmny', False)
        # Getting the type of 'sselect' (line 775)
        sselect_398752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 31), 'sselect', False)
        # Getting the type of 'sigmar' (line 775)
        sigmar_398753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 40), 'sigmar', False)
        # Getting the type of 'sigmai' (line 775)
        sigmai_398754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 48), 'sigmai', False)
        # Getting the type of 'workev' (line 775)
        workev_398755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 56), 'workev', False)
        # Getting the type of 'self' (line 776)
        self_398756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 23), 'self', False)
        # Obtaining the member 'bmat' of a type (line 776)
        bmat_398757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 23), self_398756, 'bmat')
        # Getting the type of 'self' (line 776)
        self_398758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 34), 'self', False)
        # Obtaining the member 'which' of a type (line 776)
        which_398759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 34), self_398758, 'which')
        # Getting the type of 'k' (line 776)
        k_398760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 46), 'k', False)
        # Getting the type of 'self' (line 776)
        self_398761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 49), 'self', False)
        # Obtaining the member 'tol' of a type (line 776)
        tol_398762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 49), self_398761, 'tol')
        # Getting the type of 'self' (line 776)
        self_398763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 59), 'self', False)
        # Obtaining the member 'resid' of a type (line 776)
        resid_398764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 59), self_398763, 'resid')
        # Getting the type of 'self' (line 777)
        self_398765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 23), 'self', False)
        # Obtaining the member 'v' of a type (line 777)
        v_398766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 23), self_398765, 'v')
        # Getting the type of 'self' (line 777)
        self_398767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 31), 'self', False)
        # Obtaining the member 'iparam' of a type (line 777)
        iparam_398768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 31), self_398767, 'iparam')
        # Getting the type of 'self' (line 777)
        self_398769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 44), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 777)
        ipntr_398770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 44), self_398769, 'ipntr')
        # Getting the type of 'self' (line 778)
        self_398771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 23), 'self', False)
        # Obtaining the member 'workd' of a type (line 778)
        workd_398772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 23), self_398771, 'workd')
        # Getting the type of 'self' (line 778)
        self_398773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 35), 'self', False)
        # Obtaining the member 'workl' of a type (line 778)
        workl_398774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 35), self_398773, 'workl')
        # Getting the type of 'self' (line 778)
        self_398775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 47), 'self', False)
        # Obtaining the member 'info' of a type (line 778)
        info_398776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 47), self_398775, 'info')
        # Processing the call keyword arguments (line 774)
        kwargs_398777 = {}
        # Getting the type of 'self' (line 774)
        self_398748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 16), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 774)
        _arpack_extract_398749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 16), self_398748, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 774)
        _arpack_extract_call_result_398778 = invoke(stypy.reporting.localization.Localization(__file__, 774, 16), _arpack_extract_398749, *[return_eigenvectors_398750, howmny_398751, sselect_398752, sigmar_398753, sigmai_398754, workev_398755, bmat_398757, which_398759, k_398760, tol_398762, resid_398764, v_398766, iparam_398768, ipntr_398770, workd_398772, workl_398774, info_398776], **kwargs_398777)
        
        # Obtaining the member '__getitem__' of a type (line 773)
        getitem___398779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 12), _arpack_extract_call_result_398778, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 773)
        subscript_call_result_398780 = invoke(stypy.reporting.localization.Localization(__file__, 773, 12), getitem___398779, int_398747)
        
        # Assigning a type to the variable 'tuple_var_assignment_396024' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'tuple_var_assignment_396024', subscript_call_result_398780)
        
        # Assigning a Subscript to a Name (line 773):
        
        # Obtaining the type of the subscript
        int_398781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 12), 'int')
        
        # Call to _arpack_extract(...): (line 774)
        # Processing the call arguments (line 774)
        # Getting the type of 'return_eigenvectors' (line 774)
        return_eigenvectors_398784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 37), 'return_eigenvectors', False)
        # Getting the type of 'howmny' (line 775)
        howmny_398785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 23), 'howmny', False)
        # Getting the type of 'sselect' (line 775)
        sselect_398786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 31), 'sselect', False)
        # Getting the type of 'sigmar' (line 775)
        sigmar_398787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 40), 'sigmar', False)
        # Getting the type of 'sigmai' (line 775)
        sigmai_398788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 48), 'sigmai', False)
        # Getting the type of 'workev' (line 775)
        workev_398789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 56), 'workev', False)
        # Getting the type of 'self' (line 776)
        self_398790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 23), 'self', False)
        # Obtaining the member 'bmat' of a type (line 776)
        bmat_398791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 23), self_398790, 'bmat')
        # Getting the type of 'self' (line 776)
        self_398792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 34), 'self', False)
        # Obtaining the member 'which' of a type (line 776)
        which_398793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 34), self_398792, 'which')
        # Getting the type of 'k' (line 776)
        k_398794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 46), 'k', False)
        # Getting the type of 'self' (line 776)
        self_398795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 49), 'self', False)
        # Obtaining the member 'tol' of a type (line 776)
        tol_398796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 49), self_398795, 'tol')
        # Getting the type of 'self' (line 776)
        self_398797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 59), 'self', False)
        # Obtaining the member 'resid' of a type (line 776)
        resid_398798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 59), self_398797, 'resid')
        # Getting the type of 'self' (line 777)
        self_398799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 23), 'self', False)
        # Obtaining the member 'v' of a type (line 777)
        v_398800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 23), self_398799, 'v')
        # Getting the type of 'self' (line 777)
        self_398801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 31), 'self', False)
        # Obtaining the member 'iparam' of a type (line 777)
        iparam_398802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 31), self_398801, 'iparam')
        # Getting the type of 'self' (line 777)
        self_398803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 44), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 777)
        ipntr_398804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 44), self_398803, 'ipntr')
        # Getting the type of 'self' (line 778)
        self_398805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 23), 'self', False)
        # Obtaining the member 'workd' of a type (line 778)
        workd_398806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 23), self_398805, 'workd')
        # Getting the type of 'self' (line 778)
        self_398807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 35), 'self', False)
        # Obtaining the member 'workl' of a type (line 778)
        workl_398808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 35), self_398807, 'workl')
        # Getting the type of 'self' (line 778)
        self_398809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 47), 'self', False)
        # Obtaining the member 'info' of a type (line 778)
        info_398810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 47), self_398809, 'info')
        # Processing the call keyword arguments (line 774)
        kwargs_398811 = {}
        # Getting the type of 'self' (line 774)
        self_398782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 16), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 774)
        _arpack_extract_398783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 16), self_398782, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 774)
        _arpack_extract_call_result_398812 = invoke(stypy.reporting.localization.Localization(__file__, 774, 16), _arpack_extract_398783, *[return_eigenvectors_398784, howmny_398785, sselect_398786, sigmar_398787, sigmai_398788, workev_398789, bmat_398791, which_398793, k_398794, tol_398796, resid_398798, v_398800, iparam_398802, ipntr_398804, workd_398806, workl_398808, info_398810], **kwargs_398811)
        
        # Obtaining the member '__getitem__' of a type (line 773)
        getitem___398813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 12), _arpack_extract_call_result_398812, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 773)
        subscript_call_result_398814 = invoke(stypy.reporting.localization.Localization(__file__, 773, 12), getitem___398813, int_398781)
        
        # Assigning a type to the variable 'tuple_var_assignment_396025' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'tuple_var_assignment_396025', subscript_call_result_398814)
        
        # Assigning a Name to a Name (line 773):
        # Getting the type of 'tuple_var_assignment_396022' (line 773)
        tuple_var_assignment_396022_398815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'tuple_var_assignment_396022')
        # Assigning a type to the variable 'dr' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'dr', tuple_var_assignment_396022_398815)
        
        # Assigning a Name to a Name (line 773):
        # Getting the type of 'tuple_var_assignment_396023' (line 773)
        tuple_var_assignment_396023_398816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'tuple_var_assignment_396023')
        # Assigning a type to the variable 'di' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 16), 'di', tuple_var_assignment_396023_398816)
        
        # Assigning a Name to a Name (line 773):
        # Getting the type of 'tuple_var_assignment_396024' (line 773)
        tuple_var_assignment_396024_398817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'tuple_var_assignment_396024')
        # Assigning a type to the variable 'zr' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 20), 'zr', tuple_var_assignment_396024_398817)
        
        # Assigning a Name to a Name (line 773):
        # Getting the type of 'tuple_var_assignment_396025' (line 773)
        tuple_var_assignment_396025_398818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'tuple_var_assignment_396025')
        # Assigning a type to the variable 'ierr' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 24), 'ierr', tuple_var_assignment_396025_398818)
        
        
        # Getting the type of 'ierr' (line 779)
        ierr_398819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 15), 'ierr')
        int_398820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 23), 'int')
        # Applying the binary operator '!=' (line 779)
        result_ne_398821 = python_operator(stypy.reporting.localization.Localization(__file__, 779, 15), '!=', ierr_398819, int_398820)
        
        # Testing the type of an if condition (line 779)
        if_condition_398822 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 779, 12), result_ne_398821)
        # Assigning a type to the variable 'if_condition_398822' (line 779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 12), 'if_condition_398822', if_condition_398822)
        # SSA begins for if statement (line 779)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ArpackError(...): (line 780)
        # Processing the call arguments (line 780)
        # Getting the type of 'ierr' (line 780)
        ierr_398824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 34), 'ierr', False)
        # Processing the call keyword arguments (line 780)
        # Getting the type of 'self' (line 780)
        self_398825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 49), 'self', False)
        # Obtaining the member 'extract_infodict' of a type (line 780)
        extract_infodict_398826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 49), self_398825, 'extract_infodict')
        keyword_398827 = extract_infodict_398826
        kwargs_398828 = {'infodict': keyword_398827}
        # Getting the type of 'ArpackError' (line 780)
        ArpackError_398823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 22), 'ArpackError', False)
        # Calling ArpackError(args, kwargs) (line 780)
        ArpackError_call_result_398829 = invoke(stypy.reporting.localization.Localization(__file__, 780, 22), ArpackError_398823, *[ierr_398824], **kwargs_398828)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 780, 16), ArpackError_call_result_398829, 'raise parameter', BaseException)
        # SSA join for if statement (line 779)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Name (line 781):
        
        # Assigning a Subscript to a Name (line 781):
        
        # Obtaining the type of the subscript
        int_398830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 781, 36), 'int')
        # Getting the type of 'self' (line 781)
        self_398831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 24), 'self')
        # Obtaining the member 'iparam' of a type (line 781)
        iparam_398832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 24), self_398831, 'iparam')
        # Obtaining the member '__getitem__' of a type (line 781)
        getitem___398833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 24), iparam_398832, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 781)
        subscript_call_result_398834 = invoke(stypy.reporting.localization.Localization(__file__, 781, 24), getitem___398833, int_398830)
        
        # Assigning a type to the variable 'nreturned' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 12), 'nreturned', subscript_call_result_398834)
        
        # Assigning a BinOp to a Name (line 784):
        
        # Assigning a BinOp to a Name (line 784):
        # Getting the type of 'dr' (line 784)
        dr_398835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 16), 'dr')
        complex_398836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 21), 'complex')
        # Getting the type of 'di' (line 784)
        di_398837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 28), 'di')
        # Applying the binary operator '*' (line 784)
        result_mul_398838 = python_operator(stypy.reporting.localization.Localization(__file__, 784, 21), '*', complex_398836, di_398837)
        
        # Applying the binary operator '+' (line 784)
        result_add_398839 = python_operator(stypy.reporting.localization.Localization(__file__, 784, 16), '+', dr_398835, result_mul_398838)
        
        # Assigning a type to the variable 'd' (line 784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 784, 12), 'd', result_add_398839)
        
        # Assigning a Call to a Name (line 788):
        
        # Assigning a Call to a Name (line 788):
        
        # Call to astype(...): (line 788)
        # Processing the call arguments (line 788)
        
        # Call to upper(...): (line 788)
        # Processing the call keyword arguments (line 788)
        kwargs_398845 = {}
        # Getting the type of 'self' (line 788)
        self_398842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 26), 'self', False)
        # Obtaining the member 'tp' of a type (line 788)
        tp_398843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 26), self_398842, 'tp')
        # Obtaining the member 'upper' of a type (line 788)
        upper_398844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 26), tp_398843, 'upper')
        # Calling upper(args, kwargs) (line 788)
        upper_call_result_398846 = invoke(stypy.reporting.localization.Localization(__file__, 788, 26), upper_398844, *[], **kwargs_398845)
        
        # Processing the call keyword arguments (line 788)
        kwargs_398847 = {}
        # Getting the type of 'zr' (line 788)
        zr_398840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 16), 'zr', False)
        # Obtaining the member 'astype' of a type (line 788)
        astype_398841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 16), zr_398840, 'astype')
        # Calling astype(args, kwargs) (line 788)
        astype_call_result_398848 = invoke(stypy.reporting.localization.Localization(__file__, 788, 16), astype_398841, *[upper_call_result_398846], **kwargs_398847)
        
        # Assigning a type to the variable 'z' (line 788)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 12), 'z', astype_call_result_398848)
        
        
        # Getting the type of 'sigmai' (line 796)
        sigmai_398849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 15), 'sigmai')
        int_398850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 796, 25), 'int')
        # Applying the binary operator '==' (line 796)
        result_eq_398851 = python_operator(stypy.reporting.localization.Localization(__file__, 796, 15), '==', sigmai_398849, int_398850)
        
        # Testing the type of an if condition (line 796)
        if_condition_398852 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 796, 12), result_eq_398851)
        # Assigning a type to the variable 'if_condition_398852' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 12), 'if_condition_398852', if_condition_398852)
        # SSA begins for if statement (line 796)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 797):
        
        # Assigning a Num to a Name (line 797):
        int_398853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 797, 20), 'int')
        # Assigning a type to the variable 'i' (line 797)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 16), 'i', int_398853)
        
        
        # Getting the type of 'i' (line 798)
        i_398854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 22), 'i')
        # Getting the type of 'k' (line 798)
        k_398855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 27), 'k')
        # Applying the binary operator '<=' (line 798)
        result_le_398856 = python_operator(stypy.reporting.localization.Localization(__file__, 798, 22), '<=', i_398854, k_398855)
        
        # Testing the type of an if condition (line 798)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 798, 16), result_le_398856)
        # SSA begins for while statement (line 798)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        
        
        # Call to abs(...): (line 800)
        # Processing the call arguments (line 800)
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 800)
        i_398858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 29), 'i', False)
        # Getting the type of 'd' (line 800)
        d_398859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 27), 'd', False)
        # Obtaining the member '__getitem__' of a type (line 800)
        getitem___398860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 27), d_398859, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 800)
        subscript_call_result_398861 = invoke(stypy.reporting.localization.Localization(__file__, 800, 27), getitem___398860, i_398858)
        
        # Obtaining the member 'imag' of a type (line 800)
        imag_398862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 27), subscript_call_result_398861, 'imag')
        # Processing the call keyword arguments (line 800)
        kwargs_398863 = {}
        # Getting the type of 'abs' (line 800)
        abs_398857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 23), 'abs', False)
        # Calling abs(args, kwargs) (line 800)
        abs_call_result_398864 = invoke(stypy.reporting.localization.Localization(__file__, 800, 23), abs_398857, *[imag_398862], **kwargs_398863)
        
        int_398865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 800, 41), 'int')
        # Applying the binary operator '!=' (line 800)
        result_ne_398866 = python_operator(stypy.reporting.localization.Localization(__file__, 800, 23), '!=', abs_call_result_398864, int_398865)
        
        # Testing the type of an if condition (line 800)
        if_condition_398867 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 800, 20), result_ne_398866)
        # Assigning a type to the variable 'if_condition_398867' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 20), 'if_condition_398867', if_condition_398867)
        # SSA begins for if statement (line 800)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'i' (line 803)
        i_398868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 27), 'i')
        # Getting the type of 'k' (line 803)
        k_398869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 31), 'k')
        # Applying the binary operator '<' (line 803)
        result_lt_398870 = python_operator(stypy.reporting.localization.Localization(__file__, 803, 27), '<', i_398868, k_398869)
        
        # Testing the type of an if condition (line 803)
        if_condition_398871 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 803, 24), result_lt_398870)
        # Assigning a type to the variable 'if_condition_398871' (line 803)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 803, 24), 'if_condition_398871', if_condition_398871)
        # SSA begins for if statement (line 803)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Subscript (line 804):
        
        # Assigning a BinOp to a Subscript (line 804):
        
        # Obtaining the type of the subscript
        slice_398872 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 804, 38), None, None, None)
        # Getting the type of 'i' (line 804)
        i_398873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 44), 'i')
        # Getting the type of 'zr' (line 804)
        zr_398874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 38), 'zr')
        # Obtaining the member '__getitem__' of a type (line 804)
        getitem___398875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 38), zr_398874, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 804)
        subscript_call_result_398876 = invoke(stypy.reporting.localization.Localization(__file__, 804, 38), getitem___398875, (slice_398872, i_398873))
        
        complex_398877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 49), 'complex')
        
        # Obtaining the type of the subscript
        slice_398878 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 804, 56), None, None, None)
        # Getting the type of 'i' (line 804)
        i_398879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 62), 'i')
        int_398880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 66), 'int')
        # Applying the binary operator '+' (line 804)
        result_add_398881 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 62), '+', i_398879, int_398880)
        
        # Getting the type of 'zr' (line 804)
        zr_398882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 56), 'zr')
        # Obtaining the member '__getitem__' of a type (line 804)
        getitem___398883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 56), zr_398882, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 804)
        subscript_call_result_398884 = invoke(stypy.reporting.localization.Localization(__file__, 804, 56), getitem___398883, (slice_398878, result_add_398881))
        
        # Applying the binary operator '*' (line 804)
        result_mul_398885 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 49), '*', complex_398877, subscript_call_result_398884)
        
        # Applying the binary operator '+' (line 804)
        result_add_398886 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 38), '+', subscript_call_result_398876, result_mul_398885)
        
        # Getting the type of 'z' (line 804)
        z_398887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 28), 'z')
        slice_398888 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 804, 28), None, None, None)
        # Getting the type of 'i' (line 804)
        i_398889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 33), 'i')
        # Storing an element on a container (line 804)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 804, 28), z_398887, ((slice_398888, i_398889), result_add_398886))
        
        # Assigning a Call to a Subscript (line 805):
        
        # Assigning a Call to a Subscript (line 805):
        
        # Call to conjugate(...): (line 805)
        # Processing the call keyword arguments (line 805)
        kwargs_398896 = {}
        
        # Obtaining the type of the subscript
        slice_398890 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 805, 42), None, None, None)
        # Getting the type of 'i' (line 805)
        i_398891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 47), 'i', False)
        # Getting the type of 'z' (line 805)
        z_398892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 42), 'z', False)
        # Obtaining the member '__getitem__' of a type (line 805)
        getitem___398893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 42), z_398892, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 805)
        subscript_call_result_398894 = invoke(stypy.reporting.localization.Localization(__file__, 805, 42), getitem___398893, (slice_398890, i_398891))
        
        # Obtaining the member 'conjugate' of a type (line 805)
        conjugate_398895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 42), subscript_call_result_398894, 'conjugate')
        # Calling conjugate(args, kwargs) (line 805)
        conjugate_call_result_398897 = invoke(stypy.reporting.localization.Localization(__file__, 805, 42), conjugate_398895, *[], **kwargs_398896)
        
        # Getting the type of 'z' (line 805)
        z_398898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 28), 'z')
        slice_398899 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 805, 28), None, None, None)
        # Getting the type of 'i' (line 805)
        i_398900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 33), 'i')
        int_398901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 37), 'int')
        # Applying the binary operator '+' (line 805)
        result_add_398902 = python_operator(stypy.reporting.localization.Localization(__file__, 805, 33), '+', i_398900, int_398901)
        
        # Storing an element on a container (line 805)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 28), z_398898, ((slice_398899, result_add_398902), conjugate_call_result_398897))
        
        # Getting the type of 'i' (line 806)
        i_398903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 28), 'i')
        int_398904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 33), 'int')
        # Applying the binary operator '+=' (line 806)
        result_iadd_398905 = python_operator(stypy.reporting.localization.Localization(__file__, 806, 28), '+=', i_398903, int_398904)
        # Assigning a type to the variable 'i' (line 806)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 28), 'i', result_iadd_398905)
        
        # SSA branch for the else part of an if statement (line 803)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 'nreturned' (line 812)
        nreturned_398906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 28), 'nreturned')
        int_398907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 41), 'int')
        # Applying the binary operator '-=' (line 812)
        result_isub_398908 = python_operator(stypy.reporting.localization.Localization(__file__, 812, 28), '-=', nreturned_398906, int_398907)
        # Assigning a type to the variable 'nreturned' (line 812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 812, 28), 'nreturned', result_isub_398908)
        
        # SSA join for if statement (line 803)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 800)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'i' (line 813)
        i_398909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 20), 'i')
        int_398910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 25), 'int')
        # Applying the binary operator '+=' (line 813)
        result_iadd_398911 = python_operator(stypy.reporting.localization.Localization(__file__, 813, 20), '+=', i_398909, int_398910)
        # Assigning a type to the variable 'i' (line 813)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 813, 20), 'i', result_iadd_398911)
        
        # SSA join for while statement (line 798)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 796)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 819):
        
        # Assigning a Num to a Name (line 819):
        int_398912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 20), 'int')
        # Assigning a type to the variable 'i' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 16), 'i', int_398912)
        
        
        # Getting the type of 'i' (line 820)
        i_398913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 22), 'i')
        # Getting the type of 'k' (line 820)
        k_398914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 27), 'k')
        # Applying the binary operator '<=' (line 820)
        result_le_398915 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 22), '<=', i_398913, k_398914)
        
        # Testing the type of an if condition (line 820)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 820, 16), result_le_398915)
        # SSA begins for while statement (line 820)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        
        
        # Call to abs(...): (line 821)
        # Processing the call arguments (line 821)
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 821)
        i_398917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 29), 'i', False)
        # Getting the type of 'd' (line 821)
        d_398918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 27), 'd', False)
        # Obtaining the member '__getitem__' of a type (line 821)
        getitem___398919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 27), d_398918, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 821)
        subscript_call_result_398920 = invoke(stypy.reporting.localization.Localization(__file__, 821, 27), getitem___398919, i_398917)
        
        # Obtaining the member 'imag' of a type (line 821)
        imag_398921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 27), subscript_call_result_398920, 'imag')
        # Processing the call keyword arguments (line 821)
        kwargs_398922 = {}
        # Getting the type of 'abs' (line 821)
        abs_398916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 23), 'abs', False)
        # Calling abs(args, kwargs) (line 821)
        abs_call_result_398923 = invoke(stypy.reporting.localization.Localization(__file__, 821, 23), abs_398916, *[imag_398921], **kwargs_398922)
        
        int_398924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 41), 'int')
        # Applying the binary operator '==' (line 821)
        result_eq_398925 = python_operator(stypy.reporting.localization.Localization(__file__, 821, 23), '==', abs_call_result_398923, int_398924)
        
        # Testing the type of an if condition (line 821)
        if_condition_398926 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 821, 20), result_eq_398925)
        # Assigning a type to the variable 'if_condition_398926' (line 821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 20), 'if_condition_398926', if_condition_398926)
        # SSA begins for if statement (line 821)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Subscript (line 822):
        
        # Assigning a Call to a Subscript (line 822):
        
        # Call to dot(...): (line 822)
        # Processing the call arguments (line 822)
        
        # Obtaining the type of the subscript
        slice_398929 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 822, 38), None, None, None)
        # Getting the type of 'i' (line 822)
        i_398930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 44), 'i', False)
        # Getting the type of 'zr' (line 822)
        zr_398931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 38), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 822)
        getitem___398932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 38), zr_398931, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 822)
        subscript_call_result_398933 = invoke(stypy.reporting.localization.Localization(__file__, 822, 38), getitem___398932, (slice_398929, i_398930))
        
        
        # Call to matvec(...): (line 822)
        # Processing the call arguments (line 822)
        
        # Obtaining the type of the subscript
        slice_398936 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 822, 60), None, None, None)
        # Getting the type of 'i' (line 822)
        i_398937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 66), 'i', False)
        # Getting the type of 'zr' (line 822)
        zr_398938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 60), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 822)
        getitem___398939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 60), zr_398938, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 822)
        subscript_call_result_398940 = invoke(stypy.reporting.localization.Localization(__file__, 822, 60), getitem___398939, (slice_398936, i_398937))
        
        # Processing the call keyword arguments (line 822)
        kwargs_398941 = {}
        # Getting the type of 'self' (line 822)
        self_398934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 48), 'self', False)
        # Obtaining the member 'matvec' of a type (line 822)
        matvec_398935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 48), self_398934, 'matvec')
        # Calling matvec(args, kwargs) (line 822)
        matvec_call_result_398942 = invoke(stypy.reporting.localization.Localization(__file__, 822, 48), matvec_398935, *[subscript_call_result_398940], **kwargs_398941)
        
        # Processing the call keyword arguments (line 822)
        kwargs_398943 = {}
        # Getting the type of 'np' (line 822)
        np_398927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 31), 'np', False)
        # Obtaining the member 'dot' of a type (line 822)
        dot_398928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 31), np_398927, 'dot')
        # Calling dot(args, kwargs) (line 822)
        dot_call_result_398944 = invoke(stypy.reporting.localization.Localization(__file__, 822, 31), dot_398928, *[subscript_call_result_398933, matvec_call_result_398942], **kwargs_398943)
        
        # Getting the type of 'd' (line 822)
        d_398945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 24), 'd')
        # Getting the type of 'i' (line 822)
        i_398946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 26), 'i')
        # Storing an element on a container (line 822)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 822, 24), d_398945, (i_398946, dot_call_result_398944))
        # SSA branch for the else part of an if statement (line 821)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'i' (line 824)
        i_398947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 27), 'i')
        # Getting the type of 'k' (line 824)
        k_398948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 31), 'k')
        # Applying the binary operator '<' (line 824)
        result_lt_398949 = python_operator(stypy.reporting.localization.Localization(__file__, 824, 27), '<', i_398947, k_398948)
        
        # Testing the type of an if condition (line 824)
        if_condition_398950 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 824, 24), result_lt_398949)
        # Assigning a type to the variable 'if_condition_398950' (line 824)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 824, 24), 'if_condition_398950', if_condition_398950)
        # SSA begins for if statement (line 824)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Subscript (line 825):
        
        # Assigning a BinOp to a Subscript (line 825):
        
        # Obtaining the type of the subscript
        slice_398951 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 825, 38), None, None, None)
        # Getting the type of 'i' (line 825)
        i_398952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 44), 'i')
        # Getting the type of 'zr' (line 825)
        zr_398953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 38), 'zr')
        # Obtaining the member '__getitem__' of a type (line 825)
        getitem___398954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 825, 38), zr_398953, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 825)
        subscript_call_result_398955 = invoke(stypy.reporting.localization.Localization(__file__, 825, 38), getitem___398954, (slice_398951, i_398952))
        
        complex_398956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 49), 'complex')
        
        # Obtaining the type of the subscript
        slice_398957 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 825, 56), None, None, None)
        # Getting the type of 'i' (line 825)
        i_398958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 62), 'i')
        int_398959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 66), 'int')
        # Applying the binary operator '+' (line 825)
        result_add_398960 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 62), '+', i_398958, int_398959)
        
        # Getting the type of 'zr' (line 825)
        zr_398961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 56), 'zr')
        # Obtaining the member '__getitem__' of a type (line 825)
        getitem___398962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 825, 56), zr_398961, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 825)
        subscript_call_result_398963 = invoke(stypy.reporting.localization.Localization(__file__, 825, 56), getitem___398962, (slice_398957, result_add_398960))
        
        # Applying the binary operator '*' (line 825)
        result_mul_398964 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 49), '*', complex_398956, subscript_call_result_398963)
        
        # Applying the binary operator '+' (line 825)
        result_add_398965 = python_operator(stypy.reporting.localization.Localization(__file__, 825, 38), '+', subscript_call_result_398955, result_mul_398964)
        
        # Getting the type of 'z' (line 825)
        z_398966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 28), 'z')
        slice_398967 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 825, 28), None, None, None)
        # Getting the type of 'i' (line 825)
        i_398968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 33), 'i')
        # Storing an element on a container (line 825)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 825, 28), z_398966, ((slice_398967, i_398968), result_add_398965))
        
        # Assigning a Call to a Subscript (line 826):
        
        # Assigning a Call to a Subscript (line 826):
        
        # Call to conjugate(...): (line 826)
        # Processing the call keyword arguments (line 826)
        kwargs_398975 = {}
        
        # Obtaining the type of the subscript
        slice_398969 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 826, 42), None, None, None)
        # Getting the type of 'i' (line 826)
        i_398970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 47), 'i', False)
        # Getting the type of 'z' (line 826)
        z_398971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 42), 'z', False)
        # Obtaining the member '__getitem__' of a type (line 826)
        getitem___398972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 42), z_398971, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 826)
        subscript_call_result_398973 = invoke(stypy.reporting.localization.Localization(__file__, 826, 42), getitem___398972, (slice_398969, i_398970))
        
        # Obtaining the member 'conjugate' of a type (line 826)
        conjugate_398974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 42), subscript_call_result_398973, 'conjugate')
        # Calling conjugate(args, kwargs) (line 826)
        conjugate_call_result_398976 = invoke(stypy.reporting.localization.Localization(__file__, 826, 42), conjugate_398974, *[], **kwargs_398975)
        
        # Getting the type of 'z' (line 826)
        z_398977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 28), 'z')
        slice_398978 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 826, 28), None, None, None)
        # Getting the type of 'i' (line 826)
        i_398979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 33), 'i')
        int_398980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 37), 'int')
        # Applying the binary operator '+' (line 826)
        result_add_398981 = python_operator(stypy.reporting.localization.Localization(__file__, 826, 33), '+', i_398979, int_398980)
        
        # Storing an element on a container (line 826)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 28), z_398977, ((slice_398978, result_add_398981), conjugate_call_result_398976))
        
        # Assigning a BinOp to a Subscript (line 827):
        
        # Assigning a BinOp to a Subscript (line 827):
        
        # Call to dot(...): (line 827)
        # Processing the call arguments (line 827)
        
        # Obtaining the type of the subscript
        slice_398984 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 827, 44), None, None, None)
        # Getting the type of 'i' (line 827)
        i_398985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 50), 'i', False)
        # Getting the type of 'zr' (line 827)
        zr_398986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 44), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 827)
        getitem___398987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 44), zr_398986, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 827)
        subscript_call_result_398988 = invoke(stypy.reporting.localization.Localization(__file__, 827, 44), getitem___398987, (slice_398984, i_398985))
        
        
        # Call to matvec(...): (line 828)
        # Processing the call arguments (line 828)
        
        # Obtaining the type of the subscript
        slice_398991 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 828, 56), None, None, None)
        # Getting the type of 'i' (line 828)
        i_398992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 62), 'i', False)
        # Getting the type of 'zr' (line 828)
        zr_398993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 56), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 828)
        getitem___398994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 56), zr_398993, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 828)
        subscript_call_result_398995 = invoke(stypy.reporting.localization.Localization(__file__, 828, 56), getitem___398994, (slice_398991, i_398992))
        
        # Processing the call keyword arguments (line 828)
        kwargs_398996 = {}
        # Getting the type of 'self' (line 828)
        self_398989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 44), 'self', False)
        # Obtaining the member 'matvec' of a type (line 828)
        matvec_398990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 44), self_398989, 'matvec')
        # Calling matvec(args, kwargs) (line 828)
        matvec_call_result_398997 = invoke(stypy.reporting.localization.Localization(__file__, 828, 44), matvec_398990, *[subscript_call_result_398995], **kwargs_398996)
        
        # Processing the call keyword arguments (line 827)
        kwargs_398998 = {}
        # Getting the type of 'np' (line 827)
        np_398982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 37), 'np', False)
        # Obtaining the member 'dot' of a type (line 827)
        dot_398983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 37), np_398982, 'dot')
        # Calling dot(args, kwargs) (line 827)
        dot_call_result_398999 = invoke(stypy.reporting.localization.Localization(__file__, 827, 37), dot_398983, *[subscript_call_result_398988, matvec_call_result_398997], **kwargs_398998)
        
        
        # Call to dot(...): (line 829)
        # Processing the call arguments (line 829)
        
        # Obtaining the type of the subscript
        slice_399002 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 829, 46), None, None, None)
        # Getting the type of 'i' (line 829)
        i_399003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 52), 'i', False)
        int_399004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 56), 'int')
        # Applying the binary operator '+' (line 829)
        result_add_399005 = python_operator(stypy.reporting.localization.Localization(__file__, 829, 52), '+', i_399003, int_399004)
        
        # Getting the type of 'zr' (line 829)
        zr_399006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 46), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 829)
        getitem___399007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 46), zr_399006, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 829)
        subscript_call_result_399008 = invoke(stypy.reporting.localization.Localization(__file__, 829, 46), getitem___399007, (slice_399002, result_add_399005))
        
        
        # Call to matvec(...): (line 830)
        # Processing the call arguments (line 830)
        
        # Obtaining the type of the subscript
        slice_399011 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 830, 58), None, None, None)
        # Getting the type of 'i' (line 830)
        i_399012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 64), 'i', False)
        int_399013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 68), 'int')
        # Applying the binary operator '+' (line 830)
        result_add_399014 = python_operator(stypy.reporting.localization.Localization(__file__, 830, 64), '+', i_399012, int_399013)
        
        # Getting the type of 'zr' (line 830)
        zr_399015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 58), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 830)
        getitem___399016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 58), zr_399015, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 830)
        subscript_call_result_399017 = invoke(stypy.reporting.localization.Localization(__file__, 830, 58), getitem___399016, (slice_399011, result_add_399014))
        
        # Processing the call keyword arguments (line 830)
        kwargs_399018 = {}
        # Getting the type of 'self' (line 830)
        self_399009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 46), 'self', False)
        # Obtaining the member 'matvec' of a type (line 830)
        matvec_399010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 46), self_399009, 'matvec')
        # Calling matvec(args, kwargs) (line 830)
        matvec_call_result_399019 = invoke(stypy.reporting.localization.Localization(__file__, 830, 46), matvec_399010, *[subscript_call_result_399017], **kwargs_399018)
        
        # Processing the call keyword arguments (line 829)
        kwargs_399020 = {}
        # Getting the type of 'np' (line 829)
        np_399000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 39), 'np', False)
        # Obtaining the member 'dot' of a type (line 829)
        dot_399001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 39), np_399000, 'dot')
        # Calling dot(args, kwargs) (line 829)
        dot_call_result_399021 = invoke(stypy.reporting.localization.Localization(__file__, 829, 39), dot_399001, *[subscript_call_result_399008, matvec_call_result_399019], **kwargs_399020)
        
        # Applying the binary operator '+' (line 827)
        result_add_399022 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 37), '+', dot_call_result_398999, dot_call_result_399021)
        
        complex_399023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 38), 'complex')
        
        # Call to dot(...): (line 831)
        # Processing the call arguments (line 831)
        
        # Obtaining the type of the subscript
        slice_399026 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 831, 51), None, None, None)
        # Getting the type of 'i' (line 831)
        i_399027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 57), 'i', False)
        # Getting the type of 'zr' (line 831)
        zr_399028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 51), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 831)
        getitem___399029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 51), zr_399028, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 831)
        subscript_call_result_399030 = invoke(stypy.reporting.localization.Localization(__file__, 831, 51), getitem___399029, (slice_399026, i_399027))
        
        
        # Call to matvec(...): (line 832)
        # Processing the call arguments (line 832)
        
        # Obtaining the type of the subscript
        slice_399033 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 832, 63), None, None, None)
        # Getting the type of 'i' (line 832)
        i_399034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 69), 'i', False)
        int_399035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 73), 'int')
        # Applying the binary operator '+' (line 832)
        result_add_399036 = python_operator(stypy.reporting.localization.Localization(__file__, 832, 69), '+', i_399034, int_399035)
        
        # Getting the type of 'zr' (line 832)
        zr_399037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 63), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 832)
        getitem___399038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 63), zr_399037, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 832)
        subscript_call_result_399039 = invoke(stypy.reporting.localization.Localization(__file__, 832, 63), getitem___399038, (slice_399033, result_add_399036))
        
        # Processing the call keyword arguments (line 832)
        kwargs_399040 = {}
        # Getting the type of 'self' (line 832)
        self_399031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 51), 'self', False)
        # Obtaining the member 'matvec' of a type (line 832)
        matvec_399032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 51), self_399031, 'matvec')
        # Calling matvec(args, kwargs) (line 832)
        matvec_call_result_399041 = invoke(stypy.reporting.localization.Localization(__file__, 832, 51), matvec_399032, *[subscript_call_result_399039], **kwargs_399040)
        
        # Processing the call keyword arguments (line 831)
        kwargs_399042 = {}
        # Getting the type of 'np' (line 831)
        np_399024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 44), 'np', False)
        # Obtaining the member 'dot' of a type (line 831)
        dot_399025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 44), np_399024, 'dot')
        # Calling dot(args, kwargs) (line 831)
        dot_call_result_399043 = invoke(stypy.reporting.localization.Localization(__file__, 831, 44), dot_399025, *[subscript_call_result_399030, matvec_call_result_399041], **kwargs_399042)
        
        
        # Call to dot(...): (line 833)
        # Processing the call arguments (line 833)
        
        # Obtaining the type of the subscript
        slice_399046 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 833, 53), None, None, None)
        # Getting the type of 'i' (line 833)
        i_399047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 59), 'i', False)
        int_399048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 63), 'int')
        # Applying the binary operator '+' (line 833)
        result_add_399049 = python_operator(stypy.reporting.localization.Localization(__file__, 833, 59), '+', i_399047, int_399048)
        
        # Getting the type of 'zr' (line 833)
        zr_399050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 53), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 833)
        getitem___399051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 53), zr_399050, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
        subscript_call_result_399052 = invoke(stypy.reporting.localization.Localization(__file__, 833, 53), getitem___399051, (slice_399046, result_add_399049))
        
        
        # Call to matvec(...): (line 834)
        # Processing the call arguments (line 834)
        
        # Obtaining the type of the subscript
        slice_399055 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 834, 65), None, None, None)
        # Getting the type of 'i' (line 834)
        i_399056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 71), 'i', False)
        # Getting the type of 'zr' (line 834)
        zr_399057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 65), 'zr', False)
        # Obtaining the member '__getitem__' of a type (line 834)
        getitem___399058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 65), zr_399057, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 834)
        subscript_call_result_399059 = invoke(stypy.reporting.localization.Localization(__file__, 834, 65), getitem___399058, (slice_399055, i_399056))
        
        # Processing the call keyword arguments (line 834)
        kwargs_399060 = {}
        # Getting the type of 'self' (line 834)
        self_399053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 53), 'self', False)
        # Obtaining the member 'matvec' of a type (line 834)
        matvec_399054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 53), self_399053, 'matvec')
        # Calling matvec(args, kwargs) (line 834)
        matvec_call_result_399061 = invoke(stypy.reporting.localization.Localization(__file__, 834, 53), matvec_399054, *[subscript_call_result_399059], **kwargs_399060)
        
        # Processing the call keyword arguments (line 833)
        kwargs_399062 = {}
        # Getting the type of 'np' (line 833)
        np_399044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 46), 'np', False)
        # Obtaining the member 'dot' of a type (line 833)
        dot_399045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 46), np_399044, 'dot')
        # Calling dot(args, kwargs) (line 833)
        dot_call_result_399063 = invoke(stypy.reporting.localization.Localization(__file__, 833, 46), dot_399045, *[subscript_call_result_399052, matvec_call_result_399061], **kwargs_399062)
        
        # Applying the binary operator '-' (line 831)
        result_sub_399064 = python_operator(stypy.reporting.localization.Localization(__file__, 831, 44), '-', dot_call_result_399043, dot_call_result_399063)
        
        # Applying the binary operator '*' (line 831)
        result_mul_399065 = python_operator(stypy.reporting.localization.Localization(__file__, 831, 38), '*', complex_399023, result_sub_399064)
        
        # Applying the binary operator '+' (line 827)
        result_add_399066 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 36), '+', result_add_399022, result_mul_399065)
        
        # Getting the type of 'd' (line 827)
        d_399067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 28), 'd')
        # Getting the type of 'i' (line 827)
        i_399068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 30), 'i')
        # Storing an element on a container (line 827)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 28), d_399067, (i_399068, result_add_399066))
        
        # Assigning a Call to a Subscript (line 835):
        
        # Assigning a Call to a Subscript (line 835):
        
        # Call to conj(...): (line 835)
        # Processing the call keyword arguments (line 835)
        kwargs_399074 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 835)
        i_399069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 41), 'i', False)
        # Getting the type of 'd' (line 835)
        d_399070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 39), 'd', False)
        # Obtaining the member '__getitem__' of a type (line 835)
        getitem___399071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 39), d_399070, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 835)
        subscript_call_result_399072 = invoke(stypy.reporting.localization.Localization(__file__, 835, 39), getitem___399071, i_399069)
        
        # Obtaining the member 'conj' of a type (line 835)
        conj_399073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 39), subscript_call_result_399072, 'conj')
        # Calling conj(args, kwargs) (line 835)
        conj_call_result_399075 = invoke(stypy.reporting.localization.Localization(__file__, 835, 39), conj_399073, *[], **kwargs_399074)
        
        # Getting the type of 'd' (line 835)
        d_399076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 28), 'd')
        # Getting the type of 'i' (line 835)
        i_399077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 30), 'i')
        int_399078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 34), 'int')
        # Applying the binary operator '+' (line 835)
        result_add_399079 = python_operator(stypy.reporting.localization.Localization(__file__, 835, 30), '+', i_399077, int_399078)
        
        # Storing an element on a container (line 835)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 835, 28), d_399076, (result_add_399079, conj_call_result_399075))
        
        # Getting the type of 'i' (line 836)
        i_399080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 28), 'i')
        int_399081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 33), 'int')
        # Applying the binary operator '+=' (line 836)
        result_iadd_399082 = python_operator(stypy.reporting.localization.Localization(__file__, 836, 28), '+=', i_399080, int_399081)
        # Assigning a type to the variable 'i' (line 836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 28), 'i', result_iadd_399082)
        
        # SSA branch for the else part of an if statement (line 824)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 'nreturned' (line 842)
        nreturned_399083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 28), 'nreturned')
        int_399084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 41), 'int')
        # Applying the binary operator '-=' (line 842)
        result_isub_399085 = python_operator(stypy.reporting.localization.Localization(__file__, 842, 28), '-=', nreturned_399083, int_399084)
        # Assigning a type to the variable 'nreturned' (line 842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 28), 'nreturned', result_isub_399085)
        
        # SSA join for if statement (line 824)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 821)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'i' (line 843)
        i_399086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 20), 'i')
        int_399087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 25), 'int')
        # Applying the binary operator '+=' (line 843)
        result_iadd_399088 = python_operator(stypy.reporting.localization.Localization(__file__, 843, 20), '+=', i_399086, int_399087)
        # Assigning a type to the variable 'i' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 20), 'i', result_iadd_399088)
        
        # SSA join for while statement (line 820)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 796)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'nreturned' (line 848)
        nreturned_399089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 15), 'nreturned')
        # Getting the type of 'k' (line 848)
        k_399090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 28), 'k')
        # Applying the binary operator '<=' (line 848)
        result_le_399091 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 15), '<=', nreturned_399089, k_399090)
        
        # Testing the type of an if condition (line 848)
        if_condition_399092 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 848, 12), result_le_399091)
        # Assigning a type to the variable 'if_condition_399092' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'if_condition_399092', if_condition_399092)
        # SSA begins for if statement (line 848)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 850):
        
        # Assigning a Subscript to a Name (line 850):
        
        # Obtaining the type of the subscript
        # Getting the type of 'nreturned' (line 850)
        nreturned_399093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 23), 'nreturned')
        slice_399094 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 850, 20), None, nreturned_399093, None)
        # Getting the type of 'd' (line 850)
        d_399095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 20), 'd')
        # Obtaining the member '__getitem__' of a type (line 850)
        getitem___399096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 20), d_399095, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 850)
        subscript_call_result_399097 = invoke(stypy.reporting.localization.Localization(__file__, 850, 20), getitem___399096, slice_399094)
        
        # Assigning a type to the variable 'd' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 16), 'd', subscript_call_result_399097)
        
        # Assigning a Subscript to a Name (line 851):
        
        # Assigning a Subscript to a Name (line 851):
        
        # Obtaining the type of the subscript
        slice_399098 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 851, 20), None, None, None)
        # Getting the type of 'nreturned' (line 851)
        nreturned_399099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 26), 'nreturned')
        slice_399100 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 851, 20), None, nreturned_399099, None)
        # Getting the type of 'z' (line 851)
        z_399101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 20), 'z')
        # Obtaining the member '__getitem__' of a type (line 851)
        getitem___399102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 20), z_399101, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 851)
        subscript_call_result_399103 = invoke(stypy.reporting.localization.Localization(__file__, 851, 20), getitem___399102, (slice_399098, slice_399100))
        
        # Assigning a type to the variable 'z' (line 851)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 16), 'z', subscript_call_result_399103)
        # SSA branch for the else part of an if statement (line 848)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 855):
        
        # Assigning a Call to a Name (line 855):
        
        # Call to round(...): (line 855)
        # Processing the call arguments (line 855)
        # Getting the type of 'd' (line 855)
        d_399106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 30), 'd', False)
        # Processing the call keyword arguments (line 855)
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 855)
        self_399107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 51), 'self', False)
        # Obtaining the member 'tp' of a type (line 855)
        tp_399108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 51), self_399107, 'tp')
        # Getting the type of '_ndigits' (line 855)
        _ndigits_399109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 42), '_ndigits', False)
        # Obtaining the member '__getitem__' of a type (line 855)
        getitem___399110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 42), _ndigits_399109, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 855)
        subscript_call_result_399111 = invoke(stypy.reporting.localization.Localization(__file__, 855, 42), getitem___399110, tp_399108)
        
        keyword_399112 = subscript_call_result_399111
        kwargs_399113 = {'decimals': keyword_399112}
        # Getting the type of 'np' (line 855)
        np_399104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 21), 'np', False)
        # Obtaining the member 'round' of a type (line 855)
        round_399105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 21), np_399104, 'round')
        # Calling round(args, kwargs) (line 855)
        round_call_result_399114 = invoke(stypy.reporting.localization.Localization(__file__, 855, 21), round_399105, *[d_399106], **kwargs_399113)
        
        # Assigning a type to the variable 'rd' (line 855)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 16), 'rd', round_call_result_399114)
        
        
        # Getting the type of 'self' (line 856)
        self_399115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 19), 'self')
        # Obtaining the member 'which' of a type (line 856)
        which_399116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 19), self_399115, 'which')
        
        # Obtaining an instance of the builtin type 'list' (line 856)
        list_399117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 856)
        # Adding element type (line 856)
        str_399118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 34), 'str', 'LR')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 856, 33), list_399117, str_399118)
        # Adding element type (line 856)
        str_399119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 40), 'str', 'SR')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 856, 33), list_399117, str_399119)
        
        # Applying the binary operator 'in' (line 856)
        result_contains_399120 = python_operator(stypy.reporting.localization.Localization(__file__, 856, 19), 'in', which_399116, list_399117)
        
        # Testing the type of an if condition (line 856)
        if_condition_399121 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 856, 16), result_contains_399120)
        # Assigning a type to the variable 'if_condition_399121' (line 856)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 856, 16), 'if_condition_399121', if_condition_399121)
        # SSA begins for if statement (line 856)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 857):
        
        # Assigning a Call to a Name (line 857):
        
        # Call to argsort(...): (line 857)
        # Processing the call arguments (line 857)
        # Getting the type of 'rd' (line 857)
        rd_399124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 37), 'rd', False)
        # Obtaining the member 'real' of a type (line 857)
        real_399125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 37), rd_399124, 'real')
        # Processing the call keyword arguments (line 857)
        kwargs_399126 = {}
        # Getting the type of 'np' (line 857)
        np_399122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 26), 'np', False)
        # Obtaining the member 'argsort' of a type (line 857)
        argsort_399123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 26), np_399122, 'argsort')
        # Calling argsort(args, kwargs) (line 857)
        argsort_call_result_399127 = invoke(stypy.reporting.localization.Localization(__file__, 857, 26), argsort_399123, *[real_399125], **kwargs_399126)
        
        # Assigning a type to the variable 'ind' (line 857)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 857, 20), 'ind', argsort_call_result_399127)
        # SSA branch for the else part of an if statement (line 856)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'self' (line 858)
        self_399128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 21), 'self')
        # Obtaining the member 'which' of a type (line 858)
        which_399129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 21), self_399128, 'which')
        
        # Obtaining an instance of the builtin type 'list' (line 858)
        list_399130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 858)
        # Adding element type (line 858)
        str_399131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 36), 'str', 'LI')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 35), list_399130, str_399131)
        # Adding element type (line 858)
        str_399132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 42), 'str', 'SI')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 35), list_399130, str_399132)
        
        # Applying the binary operator 'in' (line 858)
        result_contains_399133 = python_operator(stypy.reporting.localization.Localization(__file__, 858, 21), 'in', which_399129, list_399130)
        
        # Testing the type of an if condition (line 858)
        if_condition_399134 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 858, 21), result_contains_399133)
        # Assigning a type to the variable 'if_condition_399134' (line 858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 858, 21), 'if_condition_399134', if_condition_399134)
        # SSA begins for if statement (line 858)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 861):
        
        # Assigning a Call to a Name (line 861):
        
        # Call to argsort(...): (line 861)
        # Processing the call arguments (line 861)
        
        # Call to abs(...): (line 861)
        # Processing the call arguments (line 861)
        # Getting the type of 'rd' (line 861)
        rd_399138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 41), 'rd', False)
        # Obtaining the member 'imag' of a type (line 861)
        imag_399139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 41), rd_399138, 'imag')
        # Processing the call keyword arguments (line 861)
        kwargs_399140 = {}
        # Getting the type of 'abs' (line 861)
        abs_399137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 37), 'abs', False)
        # Calling abs(args, kwargs) (line 861)
        abs_call_result_399141 = invoke(stypy.reporting.localization.Localization(__file__, 861, 37), abs_399137, *[imag_399139], **kwargs_399140)
        
        # Processing the call keyword arguments (line 861)
        kwargs_399142 = {}
        # Getting the type of 'np' (line 861)
        np_399135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 26), 'np', False)
        # Obtaining the member 'argsort' of a type (line 861)
        argsort_399136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 26), np_399135, 'argsort')
        # Calling argsort(args, kwargs) (line 861)
        argsort_call_result_399143 = invoke(stypy.reporting.localization.Localization(__file__, 861, 26), argsort_399136, *[abs_call_result_399141], **kwargs_399142)
        
        # Assigning a type to the variable 'ind' (line 861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 861, 20), 'ind', argsort_call_result_399143)
        # SSA branch for the else part of an if statement (line 858)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 863):
        
        # Assigning a Call to a Name (line 863):
        
        # Call to argsort(...): (line 863)
        # Processing the call arguments (line 863)
        
        # Call to abs(...): (line 863)
        # Processing the call arguments (line 863)
        # Getting the type of 'rd' (line 863)
        rd_399147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 41), 'rd', False)
        # Processing the call keyword arguments (line 863)
        kwargs_399148 = {}
        # Getting the type of 'abs' (line 863)
        abs_399146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 37), 'abs', False)
        # Calling abs(args, kwargs) (line 863)
        abs_call_result_399149 = invoke(stypy.reporting.localization.Localization(__file__, 863, 37), abs_399146, *[rd_399147], **kwargs_399148)
        
        # Processing the call keyword arguments (line 863)
        kwargs_399150 = {}
        # Getting the type of 'np' (line 863)
        np_399144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 26), 'np', False)
        # Obtaining the member 'argsort' of a type (line 863)
        argsort_399145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 26), np_399144, 'argsort')
        # Calling argsort(args, kwargs) (line 863)
        argsort_call_result_399151 = invoke(stypy.reporting.localization.Localization(__file__, 863, 26), argsort_399145, *[abs_call_result_399149], **kwargs_399150)
        
        # Assigning a type to the variable 'ind' (line 863)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 20), 'ind', argsort_call_result_399151)
        # SSA join for if statement (line 858)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 856)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'self' (line 864)
        self_399152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 19), 'self')
        # Obtaining the member 'which' of a type (line 864)
        which_399153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 19), self_399152, 'which')
        
        # Obtaining an instance of the builtin type 'list' (line 864)
        list_399154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 864)
        # Adding element type (line 864)
        str_399155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 34), 'str', 'LR')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 864, 33), list_399154, str_399155)
        # Adding element type (line 864)
        str_399156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 40), 'str', 'LM')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 864, 33), list_399154, str_399156)
        # Adding element type (line 864)
        str_399157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 46), 'str', 'LI')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 864, 33), list_399154, str_399157)
        
        # Applying the binary operator 'in' (line 864)
        result_contains_399158 = python_operator(stypy.reporting.localization.Localization(__file__, 864, 19), 'in', which_399153, list_399154)
        
        # Testing the type of an if condition (line 864)
        if_condition_399159 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 864, 16), result_contains_399158)
        # Assigning a type to the variable 'if_condition_399159' (line 864)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 864, 16), 'if_condition_399159', if_condition_399159)
        # SSA begins for if statement (line 864)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 865):
        
        # Assigning a Subscript to a Name (line 865):
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        
        # Getting the type of 'k' (line 865)
        k_399160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 31), 'k')
        # Applying the 'usub' unary operator (line 865)
        result___neg___399161 = python_operator(stypy.reporting.localization.Localization(__file__, 865, 30), 'usub', k_399160)
        
        slice_399162 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 865, 26), result___neg___399161, None, None)
        # Getting the type of 'ind' (line 865)
        ind_399163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 26), 'ind')
        # Obtaining the member '__getitem__' of a type (line 865)
        getitem___399164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 26), ind_399163, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 865)
        subscript_call_result_399165 = invoke(stypy.reporting.localization.Localization(__file__, 865, 26), getitem___399164, slice_399162)
        
        # Getting the type of 'd' (line 865)
        d_399166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 24), 'd')
        # Obtaining the member '__getitem__' of a type (line 865)
        getitem___399167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 24), d_399166, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 865)
        subscript_call_result_399168 = invoke(stypy.reporting.localization.Localization(__file__, 865, 24), getitem___399167, subscript_call_result_399165)
        
        # Assigning a type to the variable 'd' (line 865)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 20), 'd', subscript_call_result_399168)
        
        # Assigning a Subscript to a Name (line 866):
        
        # Assigning a Subscript to a Name (line 866):
        
        # Obtaining the type of the subscript
        slice_399169 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 866, 24), None, None, None)
        
        # Obtaining the type of the subscript
        
        # Getting the type of 'k' (line 866)
        k_399170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 34), 'k')
        # Applying the 'usub' unary operator (line 866)
        result___neg___399171 = python_operator(stypy.reporting.localization.Localization(__file__, 866, 33), 'usub', k_399170)
        
        slice_399172 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 866, 29), result___neg___399171, None, None)
        # Getting the type of 'ind' (line 866)
        ind_399173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 29), 'ind')
        # Obtaining the member '__getitem__' of a type (line 866)
        getitem___399174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 29), ind_399173, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 866)
        subscript_call_result_399175 = invoke(stypy.reporting.localization.Localization(__file__, 866, 29), getitem___399174, slice_399172)
        
        # Getting the type of 'z' (line 866)
        z_399176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 24), 'z')
        # Obtaining the member '__getitem__' of a type (line 866)
        getitem___399177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 24), z_399176, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 866)
        subscript_call_result_399178 = invoke(stypy.reporting.localization.Localization(__file__, 866, 24), getitem___399177, (slice_399169, subscript_call_result_399175))
        
        # Assigning a type to the variable 'z' (line 866)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 866, 20), 'z', subscript_call_result_399178)
        # SSA join for if statement (line 864)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'self' (line 867)
        self_399179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 19), 'self')
        # Obtaining the member 'which' of a type (line 867)
        which_399180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 19), self_399179, 'which')
        
        # Obtaining an instance of the builtin type 'list' (line 867)
        list_399181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 867)
        # Adding element type (line 867)
        str_399182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 34), 'str', 'SR')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 33), list_399181, str_399182)
        # Adding element type (line 867)
        str_399183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 40), 'str', 'SM')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 33), list_399181, str_399183)
        # Adding element type (line 867)
        str_399184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 46), 'str', 'SI')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 33), list_399181, str_399184)
        
        # Applying the binary operator 'in' (line 867)
        result_contains_399185 = python_operator(stypy.reporting.localization.Localization(__file__, 867, 19), 'in', which_399180, list_399181)
        
        # Testing the type of an if condition (line 867)
        if_condition_399186 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 867, 16), result_contains_399185)
        # Assigning a type to the variable 'if_condition_399186' (line 867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 16), 'if_condition_399186', if_condition_399186)
        # SSA begins for if statement (line 867)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 868):
        
        # Assigning a Subscript to a Name (line 868):
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 868)
        k_399187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 31), 'k')
        slice_399188 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 868, 26), None, k_399187, None)
        # Getting the type of 'ind' (line 868)
        ind_399189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 26), 'ind')
        # Obtaining the member '__getitem__' of a type (line 868)
        getitem___399190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 26), ind_399189, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 868)
        subscript_call_result_399191 = invoke(stypy.reporting.localization.Localization(__file__, 868, 26), getitem___399190, slice_399188)
        
        # Getting the type of 'd' (line 868)
        d_399192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 24), 'd')
        # Obtaining the member '__getitem__' of a type (line 868)
        getitem___399193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 24), d_399192, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 868)
        subscript_call_result_399194 = invoke(stypy.reporting.localization.Localization(__file__, 868, 24), getitem___399193, subscript_call_result_399191)
        
        # Assigning a type to the variable 'd' (line 868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 868, 20), 'd', subscript_call_result_399194)
        
        # Assigning a Subscript to a Name (line 869):
        
        # Assigning a Subscript to a Name (line 869):
        
        # Obtaining the type of the subscript
        slice_399195 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 869, 24), None, None, None)
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 869)
        k_399196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 34), 'k')
        slice_399197 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 869, 29), None, k_399196, None)
        # Getting the type of 'ind' (line 869)
        ind_399198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 29), 'ind')
        # Obtaining the member '__getitem__' of a type (line 869)
        getitem___399199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 29), ind_399198, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 869)
        subscript_call_result_399200 = invoke(stypy.reporting.localization.Localization(__file__, 869, 29), getitem___399199, slice_399197)
        
        # Getting the type of 'z' (line 869)
        z_399201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 24), 'z')
        # Obtaining the member '__getitem__' of a type (line 869)
        getitem___399202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 24), z_399201, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 869)
        subscript_call_result_399203 = invoke(stypy.reporting.localization.Localization(__file__, 869, 24), getitem___399202, (slice_399195, subscript_call_result_399200))
        
        # Assigning a type to the variable 'z' (line 869)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 869, 20), 'z', subscript_call_result_399203)
        # SSA join for if statement (line 867)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 848)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 769)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 872):
        
        # Assigning a Subscript to a Name (line 872):
        
        # Obtaining the type of the subscript
        int_399204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 12), 'int')
        
        # Call to _arpack_extract(...): (line 873)
        # Processing the call arguments (line 873)
        # Getting the type of 'return_eigenvectors' (line 873)
        return_eigenvectors_399207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 41), 'return_eigenvectors', False)
        # Getting the type of 'howmny' (line 874)
        howmny_399208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 27), 'howmny', False)
        # Getting the type of 'sselect' (line 874)
        sselect_399209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 35), 'sselect', False)
        # Getting the type of 'self' (line 874)
        self_399210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 44), 'self', False)
        # Obtaining the member 'sigma' of a type (line 874)
        sigma_399211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 44), self_399210, 'sigma')
        # Getting the type of 'workev' (line 874)
        workev_399212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 56), 'workev', False)
        # Getting the type of 'self' (line 875)
        self_399213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 27), 'self', False)
        # Obtaining the member 'bmat' of a type (line 875)
        bmat_399214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 27), self_399213, 'bmat')
        # Getting the type of 'self' (line 875)
        self_399215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 38), 'self', False)
        # Obtaining the member 'which' of a type (line 875)
        which_399216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 38), self_399215, 'which')
        # Getting the type of 'k' (line 875)
        k_399217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 50), 'k', False)
        # Getting the type of 'self' (line 875)
        self_399218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 53), 'self', False)
        # Obtaining the member 'tol' of a type (line 875)
        tol_399219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 53), self_399218, 'tol')
        # Getting the type of 'self' (line 875)
        self_399220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 63), 'self', False)
        # Obtaining the member 'resid' of a type (line 875)
        resid_399221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 63), self_399220, 'resid')
        # Getting the type of 'self' (line 876)
        self_399222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 27), 'self', False)
        # Obtaining the member 'v' of a type (line 876)
        v_399223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 27), self_399222, 'v')
        # Getting the type of 'self' (line 876)
        self_399224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 35), 'self', False)
        # Obtaining the member 'iparam' of a type (line 876)
        iparam_399225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 35), self_399224, 'iparam')
        # Getting the type of 'self' (line 876)
        self_399226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 48), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 876)
        ipntr_399227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 48), self_399226, 'ipntr')
        # Getting the type of 'self' (line 877)
        self_399228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 27), 'self', False)
        # Obtaining the member 'workd' of a type (line 877)
        workd_399229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 27), self_399228, 'workd')
        # Getting the type of 'self' (line 877)
        self_399230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 39), 'self', False)
        # Obtaining the member 'workl' of a type (line 877)
        workl_399231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 39), self_399230, 'workl')
        # Getting the type of 'self' (line 877)
        self_399232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 51), 'self', False)
        # Obtaining the member 'rwork' of a type (line 877)
        rwork_399233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 51), self_399232, 'rwork')
        # Getting the type of 'ierr' (line 877)
        ierr_399234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 63), 'ierr', False)
        # Processing the call keyword arguments (line 873)
        kwargs_399235 = {}
        # Getting the type of 'self' (line 873)
        self_399205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 20), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 873)
        _arpack_extract_399206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 20), self_399205, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 873)
        _arpack_extract_call_result_399236 = invoke(stypy.reporting.localization.Localization(__file__, 873, 20), _arpack_extract_399206, *[return_eigenvectors_399207, howmny_399208, sselect_399209, sigma_399211, workev_399212, bmat_399214, which_399216, k_399217, tol_399219, resid_399221, v_399223, iparam_399225, ipntr_399227, workd_399229, workl_399231, rwork_399233, ierr_399234], **kwargs_399235)
        
        # Obtaining the member '__getitem__' of a type (line 872)
        getitem___399237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 12), _arpack_extract_call_result_399236, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 872)
        subscript_call_result_399238 = invoke(stypy.reporting.localization.Localization(__file__, 872, 12), getitem___399237, int_399204)
        
        # Assigning a type to the variable 'tuple_var_assignment_396026' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'tuple_var_assignment_396026', subscript_call_result_399238)
        
        # Assigning a Subscript to a Name (line 872):
        
        # Obtaining the type of the subscript
        int_399239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 12), 'int')
        
        # Call to _arpack_extract(...): (line 873)
        # Processing the call arguments (line 873)
        # Getting the type of 'return_eigenvectors' (line 873)
        return_eigenvectors_399242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 41), 'return_eigenvectors', False)
        # Getting the type of 'howmny' (line 874)
        howmny_399243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 27), 'howmny', False)
        # Getting the type of 'sselect' (line 874)
        sselect_399244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 35), 'sselect', False)
        # Getting the type of 'self' (line 874)
        self_399245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 44), 'self', False)
        # Obtaining the member 'sigma' of a type (line 874)
        sigma_399246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 44), self_399245, 'sigma')
        # Getting the type of 'workev' (line 874)
        workev_399247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 56), 'workev', False)
        # Getting the type of 'self' (line 875)
        self_399248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 27), 'self', False)
        # Obtaining the member 'bmat' of a type (line 875)
        bmat_399249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 27), self_399248, 'bmat')
        # Getting the type of 'self' (line 875)
        self_399250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 38), 'self', False)
        # Obtaining the member 'which' of a type (line 875)
        which_399251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 38), self_399250, 'which')
        # Getting the type of 'k' (line 875)
        k_399252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 50), 'k', False)
        # Getting the type of 'self' (line 875)
        self_399253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 53), 'self', False)
        # Obtaining the member 'tol' of a type (line 875)
        tol_399254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 53), self_399253, 'tol')
        # Getting the type of 'self' (line 875)
        self_399255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 63), 'self', False)
        # Obtaining the member 'resid' of a type (line 875)
        resid_399256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 63), self_399255, 'resid')
        # Getting the type of 'self' (line 876)
        self_399257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 27), 'self', False)
        # Obtaining the member 'v' of a type (line 876)
        v_399258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 27), self_399257, 'v')
        # Getting the type of 'self' (line 876)
        self_399259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 35), 'self', False)
        # Obtaining the member 'iparam' of a type (line 876)
        iparam_399260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 35), self_399259, 'iparam')
        # Getting the type of 'self' (line 876)
        self_399261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 48), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 876)
        ipntr_399262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 48), self_399261, 'ipntr')
        # Getting the type of 'self' (line 877)
        self_399263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 27), 'self', False)
        # Obtaining the member 'workd' of a type (line 877)
        workd_399264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 27), self_399263, 'workd')
        # Getting the type of 'self' (line 877)
        self_399265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 39), 'self', False)
        # Obtaining the member 'workl' of a type (line 877)
        workl_399266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 39), self_399265, 'workl')
        # Getting the type of 'self' (line 877)
        self_399267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 51), 'self', False)
        # Obtaining the member 'rwork' of a type (line 877)
        rwork_399268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 51), self_399267, 'rwork')
        # Getting the type of 'ierr' (line 877)
        ierr_399269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 63), 'ierr', False)
        # Processing the call keyword arguments (line 873)
        kwargs_399270 = {}
        # Getting the type of 'self' (line 873)
        self_399240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 20), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 873)
        _arpack_extract_399241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 20), self_399240, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 873)
        _arpack_extract_call_result_399271 = invoke(stypy.reporting.localization.Localization(__file__, 873, 20), _arpack_extract_399241, *[return_eigenvectors_399242, howmny_399243, sselect_399244, sigma_399246, workev_399247, bmat_399249, which_399251, k_399252, tol_399254, resid_399256, v_399258, iparam_399260, ipntr_399262, workd_399264, workl_399266, rwork_399268, ierr_399269], **kwargs_399270)
        
        # Obtaining the member '__getitem__' of a type (line 872)
        getitem___399272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 12), _arpack_extract_call_result_399271, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 872)
        subscript_call_result_399273 = invoke(stypy.reporting.localization.Localization(__file__, 872, 12), getitem___399272, int_399239)
        
        # Assigning a type to the variable 'tuple_var_assignment_396027' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'tuple_var_assignment_396027', subscript_call_result_399273)
        
        # Assigning a Subscript to a Name (line 872):
        
        # Obtaining the type of the subscript
        int_399274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 12), 'int')
        
        # Call to _arpack_extract(...): (line 873)
        # Processing the call arguments (line 873)
        # Getting the type of 'return_eigenvectors' (line 873)
        return_eigenvectors_399277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 41), 'return_eigenvectors', False)
        # Getting the type of 'howmny' (line 874)
        howmny_399278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 27), 'howmny', False)
        # Getting the type of 'sselect' (line 874)
        sselect_399279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 35), 'sselect', False)
        # Getting the type of 'self' (line 874)
        self_399280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 44), 'self', False)
        # Obtaining the member 'sigma' of a type (line 874)
        sigma_399281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 44), self_399280, 'sigma')
        # Getting the type of 'workev' (line 874)
        workev_399282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 56), 'workev', False)
        # Getting the type of 'self' (line 875)
        self_399283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 27), 'self', False)
        # Obtaining the member 'bmat' of a type (line 875)
        bmat_399284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 27), self_399283, 'bmat')
        # Getting the type of 'self' (line 875)
        self_399285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 38), 'self', False)
        # Obtaining the member 'which' of a type (line 875)
        which_399286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 38), self_399285, 'which')
        # Getting the type of 'k' (line 875)
        k_399287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 50), 'k', False)
        # Getting the type of 'self' (line 875)
        self_399288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 53), 'self', False)
        # Obtaining the member 'tol' of a type (line 875)
        tol_399289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 53), self_399288, 'tol')
        # Getting the type of 'self' (line 875)
        self_399290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 63), 'self', False)
        # Obtaining the member 'resid' of a type (line 875)
        resid_399291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 63), self_399290, 'resid')
        # Getting the type of 'self' (line 876)
        self_399292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 27), 'self', False)
        # Obtaining the member 'v' of a type (line 876)
        v_399293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 27), self_399292, 'v')
        # Getting the type of 'self' (line 876)
        self_399294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 35), 'self', False)
        # Obtaining the member 'iparam' of a type (line 876)
        iparam_399295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 35), self_399294, 'iparam')
        # Getting the type of 'self' (line 876)
        self_399296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 48), 'self', False)
        # Obtaining the member 'ipntr' of a type (line 876)
        ipntr_399297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 48), self_399296, 'ipntr')
        # Getting the type of 'self' (line 877)
        self_399298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 27), 'self', False)
        # Obtaining the member 'workd' of a type (line 877)
        workd_399299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 27), self_399298, 'workd')
        # Getting the type of 'self' (line 877)
        self_399300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 39), 'self', False)
        # Obtaining the member 'workl' of a type (line 877)
        workl_399301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 39), self_399300, 'workl')
        # Getting the type of 'self' (line 877)
        self_399302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 51), 'self', False)
        # Obtaining the member 'rwork' of a type (line 877)
        rwork_399303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 51), self_399302, 'rwork')
        # Getting the type of 'ierr' (line 877)
        ierr_399304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 63), 'ierr', False)
        # Processing the call keyword arguments (line 873)
        kwargs_399305 = {}
        # Getting the type of 'self' (line 873)
        self_399275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 20), 'self', False)
        # Obtaining the member '_arpack_extract' of a type (line 873)
        _arpack_extract_399276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 20), self_399275, '_arpack_extract')
        # Calling _arpack_extract(args, kwargs) (line 873)
        _arpack_extract_call_result_399306 = invoke(stypy.reporting.localization.Localization(__file__, 873, 20), _arpack_extract_399276, *[return_eigenvectors_399277, howmny_399278, sselect_399279, sigma_399281, workev_399282, bmat_399284, which_399286, k_399287, tol_399289, resid_399291, v_399293, iparam_399295, ipntr_399297, workd_399299, workl_399301, rwork_399303, ierr_399304], **kwargs_399305)
        
        # Obtaining the member '__getitem__' of a type (line 872)
        getitem___399307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 12), _arpack_extract_call_result_399306, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 872)
        subscript_call_result_399308 = invoke(stypy.reporting.localization.Localization(__file__, 872, 12), getitem___399307, int_399274)
        
        # Assigning a type to the variable 'tuple_var_assignment_396028' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'tuple_var_assignment_396028', subscript_call_result_399308)
        
        # Assigning a Name to a Name (line 872):
        # Getting the type of 'tuple_var_assignment_396026' (line 872)
        tuple_var_assignment_396026_399309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'tuple_var_assignment_396026')
        # Assigning a type to the variable 'd' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'd', tuple_var_assignment_396026_399309)
        
        # Assigning a Name to a Name (line 872):
        # Getting the type of 'tuple_var_assignment_396027' (line 872)
        tuple_var_assignment_396027_399310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'tuple_var_assignment_396027')
        # Assigning a type to the variable 'z' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 15), 'z', tuple_var_assignment_396027_399310)
        
        # Assigning a Name to a Name (line 872):
        # Getting the type of 'tuple_var_assignment_396028' (line 872)
        tuple_var_assignment_396028_399311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'tuple_var_assignment_396028')
        # Assigning a type to the variable 'ierr' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 18), 'ierr', tuple_var_assignment_396028_399311)
        
        
        # Getting the type of 'ierr' (line 879)
        ierr_399312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 15), 'ierr')
        int_399313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 23), 'int')
        # Applying the binary operator '!=' (line 879)
        result_ne_399314 = python_operator(stypy.reporting.localization.Localization(__file__, 879, 15), '!=', ierr_399312, int_399313)
        
        # Testing the type of an if condition (line 879)
        if_condition_399315 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 879, 12), result_ne_399314)
        # Assigning a type to the variable 'if_condition_399315' (line 879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 879, 12), 'if_condition_399315', if_condition_399315)
        # SSA begins for if statement (line 879)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ArpackError(...): (line 880)
        # Processing the call arguments (line 880)
        # Getting the type of 'ierr' (line 880)
        ierr_399317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 34), 'ierr', False)
        # Processing the call keyword arguments (line 880)
        # Getting the type of 'self' (line 880)
        self_399318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 49), 'self', False)
        # Obtaining the member 'extract_infodict' of a type (line 880)
        extract_infodict_399319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 880, 49), self_399318, 'extract_infodict')
        keyword_399320 = extract_infodict_399319
        kwargs_399321 = {'infodict': keyword_399320}
        # Getting the type of 'ArpackError' (line 880)
        ArpackError_399316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 22), 'ArpackError', False)
        # Calling ArpackError(args, kwargs) (line 880)
        ArpackError_call_result_399322 = invoke(stypy.reporting.localization.Localization(__file__, 880, 22), ArpackError_399316, *[ierr_399317], **kwargs_399321)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 880, 16), ArpackError_call_result_399322, 'raise parameter', BaseException)
        # SSA join for if statement (line 879)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Name (line 882):
        
        # Assigning a Subscript to a Name (line 882):
        
        # Obtaining the type of the subscript
        int_399323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 31), 'int')
        # Getting the type of 'self' (line 882)
        self_399324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 19), 'self')
        # Obtaining the member 'iparam' of a type (line 882)
        iparam_399325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 19), self_399324, 'iparam')
        # Obtaining the member '__getitem__' of a type (line 882)
        getitem___399326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 19), iparam_399325, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 882)
        subscript_call_result_399327 = invoke(stypy.reporting.localization.Localization(__file__, 882, 19), getitem___399326, int_399323)
        
        # Assigning a type to the variable 'k_ok' (line 882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 882, 12), 'k_ok', subscript_call_result_399327)
        
        # Assigning a Subscript to a Name (line 883):
        
        # Assigning a Subscript to a Name (line 883):
        
        # Obtaining the type of the subscript
        # Getting the type of 'k_ok' (line 883)
        k_ok_399328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 19), 'k_ok')
        slice_399329 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 883, 16), None, k_ok_399328, None)
        # Getting the type of 'd' (line 883)
        d_399330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 16), 'd')
        # Obtaining the member '__getitem__' of a type (line 883)
        getitem___399331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 16), d_399330, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 883)
        subscript_call_result_399332 = invoke(stypy.reporting.localization.Localization(__file__, 883, 16), getitem___399331, slice_399329)
        
        # Assigning a type to the variable 'd' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 12), 'd', subscript_call_result_399332)
        
        # Assigning a Subscript to a Name (line 884):
        
        # Assigning a Subscript to a Name (line 884):
        
        # Obtaining the type of the subscript
        slice_399333 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 884, 16), None, None, None)
        # Getting the type of 'k_ok' (line 884)
        k_ok_399334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 22), 'k_ok')
        slice_399335 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 884, 16), None, k_ok_399334, None)
        # Getting the type of 'z' (line 884)
        z_399336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 16), 'z')
        # Obtaining the member '__getitem__' of a type (line 884)
        getitem___399337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 16), z_399336, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 884)
        subscript_call_result_399338 = invoke(stypy.reporting.localization.Localization(__file__, 884, 16), getitem___399337, (slice_399333, slice_399335))
        
        # Assigning a type to the variable 'z' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 12), 'z', subscript_call_result_399338)
        # SSA join for if statement (line 769)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'return_eigenvectors' (line 886)
        return_eigenvectors_399339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 11), 'return_eigenvectors')
        # Testing the type of an if condition (line 886)
        if_condition_399340 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 886, 8), return_eigenvectors_399339)
        # Assigning a type to the variable 'if_condition_399340' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 8), 'if_condition_399340', if_condition_399340)
        # SSA begins for if statement (line 886)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'tuple' (line 887)
        tuple_399341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 887)
        # Adding element type (line 887)
        # Getting the type of 'd' (line 887)
        d_399342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 19), 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 887, 19), tuple_399341, d_399342)
        # Adding element type (line 887)
        # Getting the type of 'z' (line 887)
        z_399343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 22), 'z')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 887, 19), tuple_399341, z_399343)
        
        # Assigning a type to the variable 'stypy_return_type' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 12), 'stypy_return_type', tuple_399341)
        # SSA branch for the else part of an if statement (line 886)
        module_type_store.open_ssa_branch('else')
        # Getting the type of 'd' (line 889)
        d_399344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 19), 'd')
        # Assigning a type to the variable 'stypy_return_type' (line 889)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 12), 'stypy_return_type', d_399344)
        # SSA join for if statement (line 886)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'extract(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'extract' in the type store
        # Getting the type of 'stypy_return_type' (line 759)
        stypy_return_type_399345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_399345)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'extract'
        return stypy_return_type_399345


# Assigning a type to the variable '_UnsymmetricArpackParams' (line 596)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 0), '_UnsymmetricArpackParams', _UnsymmetricArpackParams)

@norecursion
def _aslinearoperator_with_dtype(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_aslinearoperator_with_dtype'
    module_type_store = module_type_store.open_function_context('_aslinearoperator_with_dtype', 892, 0, False)
    
    # Passed parameters checking function
    _aslinearoperator_with_dtype.stypy_localization = localization
    _aslinearoperator_with_dtype.stypy_type_of_self = None
    _aslinearoperator_with_dtype.stypy_type_store = module_type_store
    _aslinearoperator_with_dtype.stypy_function_name = '_aslinearoperator_with_dtype'
    _aslinearoperator_with_dtype.stypy_param_names_list = ['m']
    _aslinearoperator_with_dtype.stypy_varargs_param_name = None
    _aslinearoperator_with_dtype.stypy_kwargs_param_name = None
    _aslinearoperator_with_dtype.stypy_call_defaults = defaults
    _aslinearoperator_with_dtype.stypy_call_varargs = varargs
    _aslinearoperator_with_dtype.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_aslinearoperator_with_dtype', ['m'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_aslinearoperator_with_dtype', localization, ['m'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_aslinearoperator_with_dtype(...)' code ##################

    
    # Assigning a Call to a Name (line 893):
    
    # Assigning a Call to a Name (line 893):
    
    # Call to aslinearoperator(...): (line 893)
    # Processing the call arguments (line 893)
    # Getting the type of 'm' (line 893)
    m_399347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 25), 'm', False)
    # Processing the call keyword arguments (line 893)
    kwargs_399348 = {}
    # Getting the type of 'aslinearoperator' (line 893)
    aslinearoperator_399346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'aslinearoperator', False)
    # Calling aslinearoperator(args, kwargs) (line 893)
    aslinearoperator_call_result_399349 = invoke(stypy.reporting.localization.Localization(__file__, 893, 8), aslinearoperator_399346, *[m_399347], **kwargs_399348)
    
    # Assigning a type to the variable 'm' (line 893)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 4), 'm', aslinearoperator_call_result_399349)
    
    # Type idiom detected: calculating its left and rigth part (line 894)
    str_399350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 22), 'str', 'dtype')
    # Getting the type of 'm' (line 894)
    m_399351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 19), 'm')
    
    (may_be_399352, more_types_in_union_399353) = may_not_provide_member(str_399350, m_399351)

    if may_be_399352:

        if more_types_in_union_399353:
            # Runtime conditional SSA (line 894)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'm' (line 894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 894, 4), 'm', remove_member_provider_from_union(m_399351, 'dtype'))
        
        # Assigning a Call to a Name (line 895):
        
        # Assigning a Call to a Name (line 895):
        
        # Call to zeros(...): (line 895)
        # Processing the call arguments (line 895)
        
        # Obtaining the type of the subscript
        int_399356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 895, 29), 'int')
        # Getting the type of 'm' (line 895)
        m_399357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 21), 'm', False)
        # Obtaining the member 'shape' of a type (line 895)
        shape_399358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 21), m_399357, 'shape')
        # Obtaining the member '__getitem__' of a type (line 895)
        getitem___399359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 21), shape_399358, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 895)
        subscript_call_result_399360 = invoke(stypy.reporting.localization.Localization(__file__, 895, 21), getitem___399359, int_399356)
        
        # Processing the call keyword arguments (line 895)
        kwargs_399361 = {}
        # Getting the type of 'np' (line 895)
        np_399354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 895)
        zeros_399355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 12), np_399354, 'zeros')
        # Calling zeros(args, kwargs) (line 895)
        zeros_call_result_399362 = invoke(stypy.reporting.localization.Localization(__file__, 895, 12), zeros_399355, *[subscript_call_result_399360], **kwargs_399361)
        
        # Assigning a type to the variable 'x' (line 895)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'x', zeros_call_result_399362)
        
        # Assigning a Attribute to a Attribute (line 896):
        
        # Assigning a Attribute to a Attribute (line 896):
        # Getting the type of 'm' (line 896)
        m_399363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 19), 'm')
        # Getting the type of 'x' (line 896)
        x_399364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 23), 'x')
        # Applying the binary operator '*' (line 896)
        result_mul_399365 = python_operator(stypy.reporting.localization.Localization(__file__, 896, 19), '*', m_399363, x_399364)
        
        # Obtaining the member 'dtype' of a type (line 896)
        dtype_399366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 19), result_mul_399365, 'dtype')
        # Getting the type of 'm' (line 896)
        m_399367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 8), 'm')
        # Setting the type of the member 'dtype' of a type (line 896)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 8), m_399367, 'dtype', dtype_399366)

        if more_types_in_union_399353:
            # SSA join for if statement (line 894)
            module_type_store = module_type_store.join_ssa_context()


    
    # Getting the type of 'm' (line 897)
    m_399368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 11), 'm')
    # Assigning a type to the variable 'stypy_return_type' (line 897)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 897, 4), 'stypy_return_type', m_399368)
    
    # ################# End of '_aslinearoperator_with_dtype(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_aslinearoperator_with_dtype' in the type store
    # Getting the type of 'stypy_return_type' (line 892)
    stypy_return_type_399369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_399369)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_aslinearoperator_with_dtype'
    return stypy_return_type_399369

# Assigning a type to the variable '_aslinearoperator_with_dtype' (line 892)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 892, 0), '_aslinearoperator_with_dtype', _aslinearoperator_with_dtype)
# Declaration of the 'SpLuInv' class
# Getting the type of 'LinearOperator' (line 900)
LinearOperator_399370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 14), 'LinearOperator')

class SpLuInv(LinearOperator_399370, ):
    str_399371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, (-1)), 'str', '\n    SpLuInv:\n       helper class to repeatedly solve M*x=b\n       using a sparse LU-decopposition of M\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 906, 4, False)
        # Assigning a type to the variable 'self' (line 907)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SpLuInv.__init__', ['M'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['M'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Attribute (line 907):
        
        # Assigning a Call to a Attribute (line 907):
        
        # Call to splu(...): (line 907)
        # Processing the call arguments (line 907)
        # Getting the type of 'M' (line 907)
        M_399373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 25), 'M', False)
        # Processing the call keyword arguments (line 907)
        kwargs_399374 = {}
        # Getting the type of 'splu' (line 907)
        splu_399372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 20), 'splu', False)
        # Calling splu(args, kwargs) (line 907)
        splu_call_result_399375 = invoke(stypy.reporting.localization.Localization(__file__, 907, 20), splu_399372, *[M_399373], **kwargs_399374)
        
        # Getting the type of 'self' (line 907)
        self_399376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 8), 'self')
        # Setting the type of the member 'M_lu' of a type (line 907)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 8), self_399376, 'M_lu', splu_call_result_399375)
        
        # Assigning a Attribute to a Attribute (line 908):
        
        # Assigning a Attribute to a Attribute (line 908):
        # Getting the type of 'M' (line 908)
        M_399377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 21), 'M')
        # Obtaining the member 'shape' of a type (line 908)
        shape_399378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 21), M_399377, 'shape')
        # Getting the type of 'self' (line 908)
        self_399379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'self')
        # Setting the type of the member 'shape' of a type (line 908)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 8), self_399379, 'shape', shape_399378)
        
        # Assigning a Attribute to a Attribute (line 909):
        
        # Assigning a Attribute to a Attribute (line 909):
        # Getting the type of 'M' (line 909)
        M_399380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 21), 'M')
        # Obtaining the member 'dtype' of a type (line 909)
        dtype_399381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 909, 21), M_399380, 'dtype')
        # Getting the type of 'self' (line 909)
        self_399382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 8), 'self')
        # Setting the type of the member 'dtype' of a type (line 909)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 909, 8), self_399382, 'dtype', dtype_399381)
        
        # Assigning a UnaryOp to a Attribute (line 910):
        
        # Assigning a UnaryOp to a Attribute (line 910):
        
        
        # Call to issubdtype(...): (line 910)
        # Processing the call arguments (line 910)
        # Getting the type of 'self' (line 910)
        self_399385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 40), 'self', False)
        # Obtaining the member 'dtype' of a type (line 910)
        dtype_399386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 40), self_399385, 'dtype')
        # Getting the type of 'np' (line 910)
        np_399387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 52), 'np', False)
        # Obtaining the member 'complexfloating' of a type (line 910)
        complexfloating_399388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 52), np_399387, 'complexfloating')
        # Processing the call keyword arguments (line 910)
        kwargs_399389 = {}
        # Getting the type of 'np' (line 910)
        np_399383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 26), 'np', False)
        # Obtaining the member 'issubdtype' of a type (line 910)
        issubdtype_399384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 26), np_399383, 'issubdtype')
        # Calling issubdtype(args, kwargs) (line 910)
        issubdtype_call_result_399390 = invoke(stypy.reporting.localization.Localization(__file__, 910, 26), issubdtype_399384, *[dtype_399386, complexfloating_399388], **kwargs_399389)
        
        # Applying the 'not' unary operator (line 910)
        result_not__399391 = python_operator(stypy.reporting.localization.Localization(__file__, 910, 22), 'not', issubdtype_call_result_399390)
        
        # Getting the type of 'self' (line 910)
        self_399392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 8), 'self')
        # Setting the type of the member 'isreal' of a type (line 910)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 8), self_399392, 'isreal', result_not__399391)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _matvec(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_matvec'
        module_type_store = module_type_store.open_function_context('_matvec', 912, 4, False)
        # Assigning a type to the variable 'self' (line 913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        SpLuInv._matvec.__dict__.__setitem__('stypy_localization', localization)
        SpLuInv._matvec.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        SpLuInv._matvec.__dict__.__setitem__('stypy_type_store', module_type_store)
        SpLuInv._matvec.__dict__.__setitem__('stypy_function_name', 'SpLuInv._matvec')
        SpLuInv._matvec.__dict__.__setitem__('stypy_param_names_list', ['x'])
        SpLuInv._matvec.__dict__.__setitem__('stypy_varargs_param_name', None)
        SpLuInv._matvec.__dict__.__setitem__('stypy_kwargs_param_name', None)
        SpLuInv._matvec.__dict__.__setitem__('stypy_call_defaults', defaults)
        SpLuInv._matvec.__dict__.__setitem__('stypy_call_varargs', varargs)
        SpLuInv._matvec.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        SpLuInv._matvec.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SpLuInv._matvec', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_matvec', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_matvec(...)' code ##################

        
        # Assigning a Call to a Name (line 915):
        
        # Assigning a Call to a Name (line 915):
        
        # Call to asarray(...): (line 915)
        # Processing the call arguments (line 915)
        # Getting the type of 'x' (line 915)
        x_399395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 23), 'x', False)
        # Processing the call keyword arguments (line 915)
        kwargs_399396 = {}
        # Getting the type of 'np' (line 915)
        np_399393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 915)
        asarray_399394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 915, 12), np_399393, 'asarray')
        # Calling asarray(args, kwargs) (line 915)
        asarray_call_result_399397 = invoke(stypy.reporting.localization.Localization(__file__, 915, 12), asarray_399394, *[x_399395], **kwargs_399396)
        
        # Assigning a type to the variable 'x' (line 915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 915, 8), 'x', asarray_call_result_399397)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'self' (line 916)
        self_399398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 11), 'self')
        # Obtaining the member 'isreal' of a type (line 916)
        isreal_399399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 11), self_399398, 'isreal')
        
        # Call to issubdtype(...): (line 916)
        # Processing the call arguments (line 916)
        # Getting the type of 'x' (line 916)
        x_399402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 41), 'x', False)
        # Obtaining the member 'dtype' of a type (line 916)
        dtype_399403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 41), x_399402, 'dtype')
        # Getting the type of 'np' (line 916)
        np_399404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 50), 'np', False)
        # Obtaining the member 'complexfloating' of a type (line 916)
        complexfloating_399405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 50), np_399404, 'complexfloating')
        # Processing the call keyword arguments (line 916)
        kwargs_399406 = {}
        # Getting the type of 'np' (line 916)
        np_399400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 27), 'np', False)
        # Obtaining the member 'issubdtype' of a type (line 916)
        issubdtype_399401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 27), np_399400, 'issubdtype')
        # Calling issubdtype(args, kwargs) (line 916)
        issubdtype_call_result_399407 = invoke(stypy.reporting.localization.Localization(__file__, 916, 27), issubdtype_399401, *[dtype_399403, complexfloating_399405], **kwargs_399406)
        
        # Applying the binary operator 'and' (line 916)
        result_and_keyword_399408 = python_operator(stypy.reporting.localization.Localization(__file__, 916, 11), 'and', isreal_399399, issubdtype_call_result_399407)
        
        # Testing the type of an if condition (line 916)
        if_condition_399409 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 916, 8), result_and_keyword_399408)
        # Assigning a type to the variable 'if_condition_399409' (line 916)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 916, 8), 'if_condition_399409', if_condition_399409)
        # SSA begins for if statement (line 916)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to solve(...): (line 917)
        # Processing the call arguments (line 917)
        
        # Call to astype(...): (line 917)
        # Processing the call arguments (line 917)
        # Getting the type of 'self' (line 917)
        self_399419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 54), 'self', False)
        # Obtaining the member 'dtype' of a type (line 917)
        dtype_399420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 54), self_399419, 'dtype')
        # Processing the call keyword arguments (line 917)
        kwargs_399421 = {}
        
        # Call to real(...): (line 917)
        # Processing the call arguments (line 917)
        # Getting the type of 'x' (line 917)
        x_399415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 44), 'x', False)
        # Processing the call keyword arguments (line 917)
        kwargs_399416 = {}
        # Getting the type of 'np' (line 917)
        np_399413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 36), 'np', False)
        # Obtaining the member 'real' of a type (line 917)
        real_399414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 36), np_399413, 'real')
        # Calling real(args, kwargs) (line 917)
        real_call_result_399417 = invoke(stypy.reporting.localization.Localization(__file__, 917, 36), real_399414, *[x_399415], **kwargs_399416)
        
        # Obtaining the member 'astype' of a type (line 917)
        astype_399418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 36), real_call_result_399417, 'astype')
        # Calling astype(args, kwargs) (line 917)
        astype_call_result_399422 = invoke(stypy.reporting.localization.Localization(__file__, 917, 36), astype_399418, *[dtype_399420], **kwargs_399421)
        
        # Processing the call keyword arguments (line 917)
        kwargs_399423 = {}
        # Getting the type of 'self' (line 917)
        self_399410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 20), 'self', False)
        # Obtaining the member 'M_lu' of a type (line 917)
        M_lu_399411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 20), self_399410, 'M_lu')
        # Obtaining the member 'solve' of a type (line 917)
        solve_399412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 20), M_lu_399411, 'solve')
        # Calling solve(args, kwargs) (line 917)
        solve_call_result_399424 = invoke(stypy.reporting.localization.Localization(__file__, 917, 20), solve_399412, *[astype_call_result_399422], **kwargs_399423)
        
        complex_399425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 22), 'complex')
        
        # Call to solve(...): (line 918)
        # Processing the call arguments (line 918)
        
        # Call to astype(...): (line 918)
        # Processing the call arguments (line 918)
        # Getting the type of 'self' (line 918)
        self_399435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 61), 'self', False)
        # Obtaining the member 'dtype' of a type (line 918)
        dtype_399436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 61), self_399435, 'dtype')
        # Processing the call keyword arguments (line 918)
        kwargs_399437 = {}
        
        # Call to imag(...): (line 918)
        # Processing the call arguments (line 918)
        # Getting the type of 'x' (line 918)
        x_399431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 51), 'x', False)
        # Processing the call keyword arguments (line 918)
        kwargs_399432 = {}
        # Getting the type of 'np' (line 918)
        np_399429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 43), 'np', False)
        # Obtaining the member 'imag' of a type (line 918)
        imag_399430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 43), np_399429, 'imag')
        # Calling imag(args, kwargs) (line 918)
        imag_call_result_399433 = invoke(stypy.reporting.localization.Localization(__file__, 918, 43), imag_399430, *[x_399431], **kwargs_399432)
        
        # Obtaining the member 'astype' of a type (line 918)
        astype_399434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 43), imag_call_result_399433, 'astype')
        # Calling astype(args, kwargs) (line 918)
        astype_call_result_399438 = invoke(stypy.reporting.localization.Localization(__file__, 918, 43), astype_399434, *[dtype_399436], **kwargs_399437)
        
        # Processing the call keyword arguments (line 918)
        kwargs_399439 = {}
        # Getting the type of 'self' (line 918)
        self_399426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 27), 'self', False)
        # Obtaining the member 'M_lu' of a type (line 918)
        M_lu_399427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 27), self_399426, 'M_lu')
        # Obtaining the member 'solve' of a type (line 918)
        solve_399428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 27), M_lu_399427, 'solve')
        # Calling solve(args, kwargs) (line 918)
        solve_call_result_399440 = invoke(stypy.reporting.localization.Localization(__file__, 918, 27), solve_399428, *[astype_call_result_399438], **kwargs_399439)
        
        # Applying the binary operator '*' (line 918)
        result_mul_399441 = python_operator(stypy.reporting.localization.Localization(__file__, 918, 22), '*', complex_399425, solve_call_result_399440)
        
        # Applying the binary operator '+' (line 917)
        result_add_399442 = python_operator(stypy.reporting.localization.Localization(__file__, 917, 20), '+', solve_call_result_399424, result_mul_399441)
        
        # Assigning a type to the variable 'stypy_return_type' (line 917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 12), 'stypy_return_type', result_add_399442)
        # SSA branch for the else part of an if statement (line 916)
        module_type_store.open_ssa_branch('else')
        
        # Call to solve(...): (line 920)
        # Processing the call arguments (line 920)
        
        # Call to astype(...): (line 920)
        # Processing the call arguments (line 920)
        # Getting the type of 'self' (line 920)
        self_399448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 44), 'self', False)
        # Obtaining the member 'dtype' of a type (line 920)
        dtype_399449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 920, 44), self_399448, 'dtype')
        # Processing the call keyword arguments (line 920)
        kwargs_399450 = {}
        # Getting the type of 'x' (line 920)
        x_399446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 35), 'x', False)
        # Obtaining the member 'astype' of a type (line 920)
        astype_399447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 920, 35), x_399446, 'astype')
        # Calling astype(args, kwargs) (line 920)
        astype_call_result_399451 = invoke(stypy.reporting.localization.Localization(__file__, 920, 35), astype_399447, *[dtype_399449], **kwargs_399450)
        
        # Processing the call keyword arguments (line 920)
        kwargs_399452 = {}
        # Getting the type of 'self' (line 920)
        self_399443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 19), 'self', False)
        # Obtaining the member 'M_lu' of a type (line 920)
        M_lu_399444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 920, 19), self_399443, 'M_lu')
        # Obtaining the member 'solve' of a type (line 920)
        solve_399445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 920, 19), M_lu_399444, 'solve')
        # Calling solve(args, kwargs) (line 920)
        solve_call_result_399453 = invoke(stypy.reporting.localization.Localization(__file__, 920, 19), solve_399445, *[astype_call_result_399451], **kwargs_399452)
        
        # Assigning a type to the variable 'stypy_return_type' (line 920)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 920, 12), 'stypy_return_type', solve_call_result_399453)
        # SSA join for if statement (line 916)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_matvec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_matvec' in the type store
        # Getting the type of 'stypy_return_type' (line 912)
        stypy_return_type_399454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_399454)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_matvec'
        return stypy_return_type_399454


# Assigning a type to the variable 'SpLuInv' (line 900)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 900, 0), 'SpLuInv', SpLuInv)
# Declaration of the 'LuInv' class
# Getting the type of 'LinearOperator' (line 923)
LinearOperator_399455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 12), 'LinearOperator')

class LuInv(LinearOperator_399455, ):
    str_399456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, (-1)), 'str', '\n    LuInv:\n       helper class to repeatedly solve M*x=b\n       using an LU-decomposition of M\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 929, 4, False)
        # Assigning a type to the variable 'self' (line 930)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 930, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'LuInv.__init__', ['M'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['M'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Attribute (line 930):
        
        # Assigning a Call to a Attribute (line 930):
        
        # Call to lu_factor(...): (line 930)
        # Processing the call arguments (line 930)
        # Getting the type of 'M' (line 930)
        M_399458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 30), 'M', False)
        # Processing the call keyword arguments (line 930)
        kwargs_399459 = {}
        # Getting the type of 'lu_factor' (line 930)
        lu_factor_399457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 20), 'lu_factor', False)
        # Calling lu_factor(args, kwargs) (line 930)
        lu_factor_call_result_399460 = invoke(stypy.reporting.localization.Localization(__file__, 930, 20), lu_factor_399457, *[M_399458], **kwargs_399459)
        
        # Getting the type of 'self' (line 930)
        self_399461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 8), 'self')
        # Setting the type of the member 'M_lu' of a type (line 930)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 930, 8), self_399461, 'M_lu', lu_factor_call_result_399460)
        
        # Assigning a Attribute to a Attribute (line 931):
        
        # Assigning a Attribute to a Attribute (line 931):
        # Getting the type of 'M' (line 931)
        M_399462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 21), 'M')
        # Obtaining the member 'shape' of a type (line 931)
        shape_399463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 21), M_399462, 'shape')
        # Getting the type of 'self' (line 931)
        self_399464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 8), 'self')
        # Setting the type of the member 'shape' of a type (line 931)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 8), self_399464, 'shape', shape_399463)
        
        # Assigning a Attribute to a Attribute (line 932):
        
        # Assigning a Attribute to a Attribute (line 932):
        # Getting the type of 'M' (line 932)
        M_399465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 21), 'M')
        # Obtaining the member 'dtype' of a type (line 932)
        dtype_399466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 932, 21), M_399465, 'dtype')
        # Getting the type of 'self' (line 932)
        self_399467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 8), 'self')
        # Setting the type of the member 'dtype' of a type (line 932)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 932, 8), self_399467, 'dtype', dtype_399466)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _matvec(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_matvec'
        module_type_store = module_type_store.open_function_context('_matvec', 934, 4, False)
        # Assigning a type to the variable 'self' (line 935)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 935, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        LuInv._matvec.__dict__.__setitem__('stypy_localization', localization)
        LuInv._matvec.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        LuInv._matvec.__dict__.__setitem__('stypy_type_store', module_type_store)
        LuInv._matvec.__dict__.__setitem__('stypy_function_name', 'LuInv._matvec')
        LuInv._matvec.__dict__.__setitem__('stypy_param_names_list', ['x'])
        LuInv._matvec.__dict__.__setitem__('stypy_varargs_param_name', None)
        LuInv._matvec.__dict__.__setitem__('stypy_kwargs_param_name', None)
        LuInv._matvec.__dict__.__setitem__('stypy_call_defaults', defaults)
        LuInv._matvec.__dict__.__setitem__('stypy_call_varargs', varargs)
        LuInv._matvec.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        LuInv._matvec.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'LuInv._matvec', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_matvec', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_matvec(...)' code ##################

        
        # Call to lu_solve(...): (line 935)
        # Processing the call arguments (line 935)
        # Getting the type of 'self' (line 935)
        self_399469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 24), 'self', False)
        # Obtaining the member 'M_lu' of a type (line 935)
        M_lu_399470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 935, 24), self_399469, 'M_lu')
        # Getting the type of 'x' (line 935)
        x_399471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 35), 'x', False)
        # Processing the call keyword arguments (line 935)
        kwargs_399472 = {}
        # Getting the type of 'lu_solve' (line 935)
        lu_solve_399468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 15), 'lu_solve', False)
        # Calling lu_solve(args, kwargs) (line 935)
        lu_solve_call_result_399473 = invoke(stypy.reporting.localization.Localization(__file__, 935, 15), lu_solve_399468, *[M_lu_399470, x_399471], **kwargs_399472)
        
        # Assigning a type to the variable 'stypy_return_type' (line 935)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 935, 8), 'stypy_return_type', lu_solve_call_result_399473)
        
        # ################# End of '_matvec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_matvec' in the type store
        # Getting the type of 'stypy_return_type' (line 934)
        stypy_return_type_399474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_399474)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_matvec'
        return stypy_return_type_399474


# Assigning a type to the variable 'LuInv' (line 923)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 923, 0), 'LuInv', LuInv)
# Declaration of the 'IterInv' class
# Getting the type of 'LinearOperator' (line 938)
LinearOperator_399475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 14), 'LinearOperator')

class IterInv(LinearOperator_399475, ):
    str_399476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, (-1)), 'str', '\n    IterInv:\n       helper class to repeatedly solve M*x=b\n       using an iterative method.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'gmres' (line 944)
        gmres_399477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 32), 'gmres')
        int_399478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 43), 'int')
        defaults = [gmres_399477, int_399478]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 944, 4, False)
        # Assigning a type to the variable 'self' (line 945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'IterInv.__init__', ['M', 'ifunc', 'tol'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['M', 'ifunc', 'tol'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Getting the type of 'tol' (line 945)
        tol_399479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 11), 'tol')
        int_399480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 18), 'int')
        # Applying the binary operator '<=' (line 945)
        result_le_399481 = python_operator(stypy.reporting.localization.Localization(__file__, 945, 11), '<=', tol_399479, int_399480)
        
        # Testing the type of an if condition (line 945)
        if_condition_399482 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 945, 8), result_le_399481)
        # Assigning a type to the variable 'if_condition_399482' (line 945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 8), 'if_condition_399482', if_condition_399482)
        # SSA begins for if statement (line 945)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 948):
        
        # Assigning a BinOp to a Name (line 948):
        int_399483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 18), 'int')
        
        # Call to finfo(...): (line 948)
        # Processing the call arguments (line 948)
        # Getting the type of 'M' (line 948)
        M_399486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 31), 'M', False)
        # Obtaining the member 'dtype' of a type (line 948)
        dtype_399487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 31), M_399486, 'dtype')
        # Processing the call keyword arguments (line 948)
        kwargs_399488 = {}
        # Getting the type of 'np' (line 948)
        np_399484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 22), 'np', False)
        # Obtaining the member 'finfo' of a type (line 948)
        finfo_399485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 22), np_399484, 'finfo')
        # Calling finfo(args, kwargs) (line 948)
        finfo_call_result_399489 = invoke(stypy.reporting.localization.Localization(__file__, 948, 22), finfo_399485, *[dtype_399487], **kwargs_399488)
        
        # Obtaining the member 'eps' of a type (line 948)
        eps_399490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 22), finfo_call_result_399489, 'eps')
        # Applying the binary operator '*' (line 948)
        result_mul_399491 = python_operator(stypy.reporting.localization.Localization(__file__, 948, 18), '*', int_399483, eps_399490)
        
        # Assigning a type to the variable 'tol' (line 948)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 948, 12), 'tol', result_mul_399491)
        # SSA join for if statement (line 945)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 949):
        
        # Assigning a Name to a Attribute (line 949):
        # Getting the type of 'M' (line 949)
        M_399492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 17), 'M')
        # Getting the type of 'self' (line 949)
        self_399493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'self')
        # Setting the type of the member 'M' of a type (line 949)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 949, 8), self_399493, 'M', M_399492)
        
        # Assigning a Name to a Attribute (line 950):
        
        # Assigning a Name to a Attribute (line 950):
        # Getting the type of 'ifunc' (line 950)
        ifunc_399494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 21), 'ifunc')
        # Getting the type of 'self' (line 950)
        self_399495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 8), 'self')
        # Setting the type of the member 'ifunc' of a type (line 950)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 8), self_399495, 'ifunc', ifunc_399494)
        
        # Assigning a Name to a Attribute (line 951):
        
        # Assigning a Name to a Attribute (line 951):
        # Getting the type of 'tol' (line 951)
        tol_399496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 19), 'tol')
        # Getting the type of 'self' (line 951)
        self_399497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 8), 'self')
        # Setting the type of the member 'tol' of a type (line 951)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 951, 8), self_399497, 'tol', tol_399496)
        
        # Type idiom detected: calculating its left and rigth part (line 952)
        str_399498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 952, 22), 'str', 'dtype')
        # Getting the type of 'M' (line 952)
        M_399499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 19), 'M')
        
        (may_be_399500, more_types_in_union_399501) = may_provide_member(str_399498, M_399499)

        if may_be_399500:

            if more_types_in_union_399501:
                # Runtime conditional SSA (line 952)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'M' (line 952)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 952, 8), 'M', remove_not_member_provider_from_union(M_399499, 'dtype'))
            
            # Assigning a Attribute to a Attribute (line 953):
            
            # Assigning a Attribute to a Attribute (line 953):
            # Getting the type of 'M' (line 953)
            M_399502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 25), 'M')
            # Obtaining the member 'dtype' of a type (line 953)
            dtype_399503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 25), M_399502, 'dtype')
            # Getting the type of 'self' (line 953)
            self_399504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 12), 'self')
            # Setting the type of the member 'dtype' of a type (line 953)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 12), self_399504, 'dtype', dtype_399503)

            if more_types_in_union_399501:
                # Runtime conditional SSA for else branch (line 952)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_399500) or more_types_in_union_399501):
            # Assigning a type to the variable 'M' (line 952)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 952, 8), 'M', remove_member_provider_from_union(M_399499, 'dtype'))
            
            # Assigning a Call to a Name (line 955):
            
            # Assigning a Call to a Name (line 955):
            
            # Call to zeros(...): (line 955)
            # Processing the call arguments (line 955)
            
            # Obtaining the type of the subscript
            int_399507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 33), 'int')
            # Getting the type of 'M' (line 955)
            M_399508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 25), 'M', False)
            # Obtaining the member 'shape' of a type (line 955)
            shape_399509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 25), M_399508, 'shape')
            # Obtaining the member '__getitem__' of a type (line 955)
            getitem___399510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 25), shape_399509, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 955)
            subscript_call_result_399511 = invoke(stypy.reporting.localization.Localization(__file__, 955, 25), getitem___399510, int_399507)
            
            # Processing the call keyword arguments (line 955)
            kwargs_399512 = {}
            # Getting the type of 'np' (line 955)
            np_399505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 16), 'np', False)
            # Obtaining the member 'zeros' of a type (line 955)
            zeros_399506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 16), np_399505, 'zeros')
            # Calling zeros(args, kwargs) (line 955)
            zeros_call_result_399513 = invoke(stypy.reporting.localization.Localization(__file__, 955, 16), zeros_399506, *[subscript_call_result_399511], **kwargs_399512)
            
            # Assigning a type to the variable 'x' (line 955)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 955, 12), 'x', zeros_call_result_399513)
            
            # Assigning a Attribute to a Attribute (line 956):
            
            # Assigning a Attribute to a Attribute (line 956):
            # Getting the type of 'M' (line 956)
            M_399514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 26), 'M')
            # Getting the type of 'x' (line 956)
            x_399515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 30), 'x')
            # Applying the binary operator '*' (line 956)
            result_mul_399516 = python_operator(stypy.reporting.localization.Localization(__file__, 956, 26), '*', M_399514, x_399515)
            
            # Obtaining the member 'dtype' of a type (line 956)
            dtype_399517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 26), result_mul_399516, 'dtype')
            # Getting the type of 'self' (line 956)
            self_399518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 12), 'self')
            # Setting the type of the member 'dtype' of a type (line 956)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 12), self_399518, 'dtype', dtype_399517)

            if (may_be_399500 and more_types_in_union_399501):
                # SSA join for if statement (line 952)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Attribute to a Attribute (line 957):
        
        # Assigning a Attribute to a Attribute (line 957):
        # Getting the type of 'M' (line 957)
        M_399519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 21), 'M')
        # Obtaining the member 'shape' of a type (line 957)
        shape_399520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 21), M_399519, 'shape')
        # Getting the type of 'self' (line 957)
        self_399521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 8), 'self')
        # Setting the type of the member 'shape' of a type (line 957)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 8), self_399521, 'shape', shape_399520)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _matvec(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_matvec'
        module_type_store = module_type_store.open_function_context('_matvec', 959, 4, False)
        # Assigning a type to the variable 'self' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        IterInv._matvec.__dict__.__setitem__('stypy_localization', localization)
        IterInv._matvec.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        IterInv._matvec.__dict__.__setitem__('stypy_type_store', module_type_store)
        IterInv._matvec.__dict__.__setitem__('stypy_function_name', 'IterInv._matvec')
        IterInv._matvec.__dict__.__setitem__('stypy_param_names_list', ['x'])
        IterInv._matvec.__dict__.__setitem__('stypy_varargs_param_name', None)
        IterInv._matvec.__dict__.__setitem__('stypy_kwargs_param_name', None)
        IterInv._matvec.__dict__.__setitem__('stypy_call_defaults', defaults)
        IterInv._matvec.__dict__.__setitem__('stypy_call_varargs', varargs)
        IterInv._matvec.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        IterInv._matvec.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'IterInv._matvec', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_matvec', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_matvec(...)' code ##################

        
        # Assigning a Call to a Tuple (line 960):
        
        # Assigning a Subscript to a Name (line 960):
        
        # Obtaining the type of the subscript
        int_399522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 8), 'int')
        
        # Call to ifunc(...): (line 960)
        # Processing the call arguments (line 960)
        # Getting the type of 'self' (line 960)
        self_399525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 29), 'self', False)
        # Obtaining the member 'M' of a type (line 960)
        M_399526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 29), self_399525, 'M')
        # Getting the type of 'x' (line 960)
        x_399527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 37), 'x', False)
        # Processing the call keyword arguments (line 960)
        # Getting the type of 'self' (line 960)
        self_399528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 44), 'self', False)
        # Obtaining the member 'tol' of a type (line 960)
        tol_399529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 44), self_399528, 'tol')
        keyword_399530 = tol_399529
        kwargs_399531 = {'tol': keyword_399530}
        # Getting the type of 'self' (line 960)
        self_399523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 18), 'self', False)
        # Obtaining the member 'ifunc' of a type (line 960)
        ifunc_399524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 18), self_399523, 'ifunc')
        # Calling ifunc(args, kwargs) (line 960)
        ifunc_call_result_399532 = invoke(stypy.reporting.localization.Localization(__file__, 960, 18), ifunc_399524, *[M_399526, x_399527], **kwargs_399531)
        
        # Obtaining the member '__getitem__' of a type (line 960)
        getitem___399533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 8), ifunc_call_result_399532, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 960)
        subscript_call_result_399534 = invoke(stypy.reporting.localization.Localization(__file__, 960, 8), getitem___399533, int_399522)
        
        # Assigning a type to the variable 'tuple_var_assignment_396029' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'tuple_var_assignment_396029', subscript_call_result_399534)
        
        # Assigning a Subscript to a Name (line 960):
        
        # Obtaining the type of the subscript
        int_399535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 8), 'int')
        
        # Call to ifunc(...): (line 960)
        # Processing the call arguments (line 960)
        # Getting the type of 'self' (line 960)
        self_399538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 29), 'self', False)
        # Obtaining the member 'M' of a type (line 960)
        M_399539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 29), self_399538, 'M')
        # Getting the type of 'x' (line 960)
        x_399540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 37), 'x', False)
        # Processing the call keyword arguments (line 960)
        # Getting the type of 'self' (line 960)
        self_399541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 44), 'self', False)
        # Obtaining the member 'tol' of a type (line 960)
        tol_399542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 44), self_399541, 'tol')
        keyword_399543 = tol_399542
        kwargs_399544 = {'tol': keyword_399543}
        # Getting the type of 'self' (line 960)
        self_399536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 18), 'self', False)
        # Obtaining the member 'ifunc' of a type (line 960)
        ifunc_399537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 18), self_399536, 'ifunc')
        # Calling ifunc(args, kwargs) (line 960)
        ifunc_call_result_399545 = invoke(stypy.reporting.localization.Localization(__file__, 960, 18), ifunc_399537, *[M_399539, x_399540], **kwargs_399544)
        
        # Obtaining the member '__getitem__' of a type (line 960)
        getitem___399546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 8), ifunc_call_result_399545, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 960)
        subscript_call_result_399547 = invoke(stypy.reporting.localization.Localization(__file__, 960, 8), getitem___399546, int_399535)
        
        # Assigning a type to the variable 'tuple_var_assignment_396030' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'tuple_var_assignment_396030', subscript_call_result_399547)
        
        # Assigning a Name to a Name (line 960):
        # Getting the type of 'tuple_var_assignment_396029' (line 960)
        tuple_var_assignment_396029_399548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'tuple_var_assignment_396029')
        # Assigning a type to the variable 'b' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'b', tuple_var_assignment_396029_399548)
        
        # Assigning a Name to a Name (line 960):
        # Getting the type of 'tuple_var_assignment_396030' (line 960)
        tuple_var_assignment_396030_399549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'tuple_var_assignment_396030')
        # Assigning a type to the variable 'info' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 11), 'info', tuple_var_assignment_396030_399549)
        
        
        # Getting the type of 'info' (line 961)
        info_399550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 11), 'info')
        int_399551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 19), 'int')
        # Applying the binary operator '!=' (line 961)
        result_ne_399552 = python_operator(stypy.reporting.localization.Localization(__file__, 961, 11), '!=', info_399550, int_399551)
        
        # Testing the type of an if condition (line 961)
        if_condition_399553 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 961, 8), result_ne_399552)
        # Assigning a type to the variable 'if_condition_399553' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'if_condition_399553', if_condition_399553)
        # SSA begins for if statement (line 961)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 962)
        # Processing the call arguments (line 962)
        str_399555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 29), 'str', 'Error in inverting M: function %s did not converge (info = %i).')
        
        # Obtaining an instance of the builtin type 'tuple' (line 964)
        tuple_399556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 964, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 964)
        # Adding element type (line 964)
        # Getting the type of 'self' (line 964)
        self_399557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 32), 'self', False)
        # Obtaining the member 'ifunc' of a type (line 964)
        ifunc_399558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 964, 32), self_399557, 'ifunc')
        # Obtaining the member '__name__' of a type (line 964)
        name___399559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 964, 32), ifunc_399558, '__name__')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 964, 32), tuple_399556, name___399559)
        # Adding element type (line 964)
        # Getting the type of 'info' (line 964)
        info_399560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 53), 'info', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 964, 32), tuple_399556, info_399560)
        
        # Applying the binary operator '%' (line 962)
        result_mod_399561 = python_operator(stypy.reporting.localization.Localization(__file__, 962, 29), '%', str_399555, tuple_399556)
        
        # Processing the call keyword arguments (line 962)
        kwargs_399562 = {}
        # Getting the type of 'ValueError' (line 962)
        ValueError_399554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 962)
        ValueError_call_result_399563 = invoke(stypy.reporting.localization.Localization(__file__, 962, 18), ValueError_399554, *[result_mod_399561], **kwargs_399562)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 962, 12), ValueError_call_result_399563, 'raise parameter', BaseException)
        # SSA join for if statement (line 961)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'b' (line 965)
        b_399564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 15), 'b')
        # Assigning a type to the variable 'stypy_return_type' (line 965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 965, 8), 'stypy_return_type', b_399564)
        
        # ################# End of '_matvec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_matvec' in the type store
        # Getting the type of 'stypy_return_type' (line 959)
        stypy_return_type_399565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_399565)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_matvec'
        return stypy_return_type_399565


# Assigning a type to the variable 'IterInv' (line 938)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 0), 'IterInv', IterInv)
# Declaration of the 'IterOpInv' class
# Getting the type of 'LinearOperator' (line 968)
LinearOperator_399566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 16), 'LinearOperator')

class IterOpInv(LinearOperator_399566, ):
    str_399567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, (-1)), 'str', '\n    IterOpInv:\n       helper class to repeatedly solve [A-sigma*M]*x = b\n       using an iterative method\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'gmres' (line 974)
        gmres_399568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 42), 'gmres')
        int_399569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 974, 53), 'int')
        defaults = [gmres_399568, int_399569]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 974, 4, False)
        # Assigning a type to the variable 'self' (line 975)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'IterOpInv.__init__', ['A', 'M', 'sigma', 'ifunc', 'tol'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['A', 'M', 'sigma', 'ifunc', 'tol'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Getting the type of 'tol' (line 975)
        tol_399570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 11), 'tol')
        int_399571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 18), 'int')
        # Applying the binary operator '<=' (line 975)
        result_le_399572 = python_operator(stypy.reporting.localization.Localization(__file__, 975, 11), '<=', tol_399570, int_399571)
        
        # Testing the type of an if condition (line 975)
        if_condition_399573 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 975, 8), result_le_399572)
        # Assigning a type to the variable 'if_condition_399573' (line 975)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 8), 'if_condition_399573', if_condition_399573)
        # SSA begins for if statement (line 975)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 978):
        
        # Assigning a BinOp to a Name (line 978):
        int_399574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 18), 'int')
        
        # Call to finfo(...): (line 978)
        # Processing the call arguments (line 978)
        # Getting the type of 'A' (line 978)
        A_399577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 31), 'A', False)
        # Obtaining the member 'dtype' of a type (line 978)
        dtype_399578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 31), A_399577, 'dtype')
        # Processing the call keyword arguments (line 978)
        kwargs_399579 = {}
        # Getting the type of 'np' (line 978)
        np_399575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 22), 'np', False)
        # Obtaining the member 'finfo' of a type (line 978)
        finfo_399576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 22), np_399575, 'finfo')
        # Calling finfo(args, kwargs) (line 978)
        finfo_call_result_399580 = invoke(stypy.reporting.localization.Localization(__file__, 978, 22), finfo_399576, *[dtype_399578], **kwargs_399579)
        
        # Obtaining the member 'eps' of a type (line 978)
        eps_399581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 22), finfo_call_result_399580, 'eps')
        # Applying the binary operator '*' (line 978)
        result_mul_399582 = python_operator(stypy.reporting.localization.Localization(__file__, 978, 18), '*', int_399574, eps_399581)
        
        # Assigning a type to the variable 'tol' (line 978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 978, 12), 'tol', result_mul_399582)
        # SSA join for if statement (line 975)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 979):
        
        # Assigning a Name to a Attribute (line 979):
        # Getting the type of 'A' (line 979)
        A_399583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 17), 'A')
        # Getting the type of 'self' (line 979)
        self_399584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 8), 'self')
        # Setting the type of the member 'A' of a type (line 979)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 8), self_399584, 'A', A_399583)
        
        # Assigning a Name to a Attribute (line 980):
        
        # Assigning a Name to a Attribute (line 980):
        # Getting the type of 'M' (line 980)
        M_399585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 17), 'M')
        # Getting the type of 'self' (line 980)
        self_399586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'self')
        # Setting the type of the member 'M' of a type (line 980)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 980, 8), self_399586, 'M', M_399585)
        
        # Assigning a Name to a Attribute (line 981):
        
        # Assigning a Name to a Attribute (line 981):
        # Getting the type of 'sigma' (line 981)
        sigma_399587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 21), 'sigma')
        # Getting the type of 'self' (line 981)
        self_399588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 8), 'self')
        # Setting the type of the member 'sigma' of a type (line 981)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 8), self_399588, 'sigma', sigma_399587)
        
        # Assigning a Name to a Attribute (line 982):
        
        # Assigning a Name to a Attribute (line 982):
        # Getting the type of 'ifunc' (line 982)
        ifunc_399589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 21), 'ifunc')
        # Getting the type of 'self' (line 982)
        self_399590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 8), 'self')
        # Setting the type of the member 'ifunc' of a type (line 982)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 982, 8), self_399590, 'ifunc', ifunc_399589)
        
        # Assigning a Name to a Attribute (line 983):
        
        # Assigning a Name to a Attribute (line 983):
        # Getting the type of 'tol' (line 983)
        tol_399591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 19), 'tol')
        # Getting the type of 'self' (line 983)
        self_399592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'self')
        # Setting the type of the member 'tol' of a type (line 983)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 8), self_399592, 'tol', tol_399591)

        @norecursion
        def mult_func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mult_func'
            module_type_store = module_type_store.open_function_context('mult_func', 985, 8, False)
            
            # Passed parameters checking function
            mult_func.stypy_localization = localization
            mult_func.stypy_type_of_self = None
            mult_func.stypy_type_store = module_type_store
            mult_func.stypy_function_name = 'mult_func'
            mult_func.stypy_param_names_list = ['x']
            mult_func.stypy_varargs_param_name = None
            mult_func.stypy_kwargs_param_name = None
            mult_func.stypy_call_defaults = defaults
            mult_func.stypy_call_varargs = varargs
            mult_func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mult_func', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mult_func', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mult_func(...)' code ##################

            
            # Call to matvec(...): (line 986)
            # Processing the call arguments (line 986)
            # Getting the type of 'x' (line 986)
            x_399595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 28), 'x', False)
            # Processing the call keyword arguments (line 986)
            kwargs_399596 = {}
            # Getting the type of 'A' (line 986)
            A_399593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 19), 'A', False)
            # Obtaining the member 'matvec' of a type (line 986)
            matvec_399594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 19), A_399593, 'matvec')
            # Calling matvec(args, kwargs) (line 986)
            matvec_call_result_399597 = invoke(stypy.reporting.localization.Localization(__file__, 986, 19), matvec_399594, *[x_399595], **kwargs_399596)
            
            # Getting the type of 'sigma' (line 986)
            sigma_399598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 33), 'sigma')
            
            # Call to matvec(...): (line 986)
            # Processing the call arguments (line 986)
            # Getting the type of 'x' (line 986)
            x_399601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 50), 'x', False)
            # Processing the call keyword arguments (line 986)
            kwargs_399602 = {}
            # Getting the type of 'M' (line 986)
            M_399599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 41), 'M', False)
            # Obtaining the member 'matvec' of a type (line 986)
            matvec_399600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 41), M_399599, 'matvec')
            # Calling matvec(args, kwargs) (line 986)
            matvec_call_result_399603 = invoke(stypy.reporting.localization.Localization(__file__, 986, 41), matvec_399600, *[x_399601], **kwargs_399602)
            
            # Applying the binary operator '*' (line 986)
            result_mul_399604 = python_operator(stypy.reporting.localization.Localization(__file__, 986, 33), '*', sigma_399598, matvec_call_result_399603)
            
            # Applying the binary operator '-' (line 986)
            result_sub_399605 = python_operator(stypy.reporting.localization.Localization(__file__, 986, 19), '-', matvec_call_result_399597, result_mul_399604)
            
            # Assigning a type to the variable 'stypy_return_type' (line 986)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 986, 12), 'stypy_return_type', result_sub_399605)
            
            # ################# End of 'mult_func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mult_func' in the type store
            # Getting the type of 'stypy_return_type' (line 985)
            stypy_return_type_399606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_399606)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mult_func'
            return stypy_return_type_399606

        # Assigning a type to the variable 'mult_func' (line 985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 985, 8), 'mult_func', mult_func)

        @norecursion
        def mult_func_M_None(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'mult_func_M_None'
            module_type_store = module_type_store.open_function_context('mult_func_M_None', 988, 8, False)
            
            # Passed parameters checking function
            mult_func_M_None.stypy_localization = localization
            mult_func_M_None.stypy_type_of_self = None
            mult_func_M_None.stypy_type_store = module_type_store
            mult_func_M_None.stypy_function_name = 'mult_func_M_None'
            mult_func_M_None.stypy_param_names_list = ['x']
            mult_func_M_None.stypy_varargs_param_name = None
            mult_func_M_None.stypy_kwargs_param_name = None
            mult_func_M_None.stypy_call_defaults = defaults
            mult_func_M_None.stypy_call_varargs = varargs
            mult_func_M_None.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'mult_func_M_None', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'mult_func_M_None', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'mult_func_M_None(...)' code ##################

            
            # Call to matvec(...): (line 989)
            # Processing the call arguments (line 989)
            # Getting the type of 'x' (line 989)
            x_399609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 28), 'x', False)
            # Processing the call keyword arguments (line 989)
            kwargs_399610 = {}
            # Getting the type of 'A' (line 989)
            A_399607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 19), 'A', False)
            # Obtaining the member 'matvec' of a type (line 989)
            matvec_399608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 19), A_399607, 'matvec')
            # Calling matvec(args, kwargs) (line 989)
            matvec_call_result_399611 = invoke(stypy.reporting.localization.Localization(__file__, 989, 19), matvec_399608, *[x_399609], **kwargs_399610)
            
            # Getting the type of 'sigma' (line 989)
            sigma_399612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 33), 'sigma')
            # Getting the type of 'x' (line 989)
            x_399613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 41), 'x')
            # Applying the binary operator '*' (line 989)
            result_mul_399614 = python_operator(stypy.reporting.localization.Localization(__file__, 989, 33), '*', sigma_399612, x_399613)
            
            # Applying the binary operator '-' (line 989)
            result_sub_399615 = python_operator(stypy.reporting.localization.Localization(__file__, 989, 19), '-', matvec_call_result_399611, result_mul_399614)
            
            # Assigning a type to the variable 'stypy_return_type' (line 989)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 12), 'stypy_return_type', result_sub_399615)
            
            # ################# End of 'mult_func_M_None(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'mult_func_M_None' in the type store
            # Getting the type of 'stypy_return_type' (line 988)
            stypy_return_type_399616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_399616)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'mult_func_M_None'
            return stypy_return_type_399616

        # Assigning a type to the variable 'mult_func_M_None' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'mult_func_M_None', mult_func_M_None)
        
        # Assigning a Call to a Name (line 991):
        
        # Assigning a Call to a Name (line 991):
        
        # Call to zeros(...): (line 991)
        # Processing the call arguments (line 991)
        
        # Obtaining the type of the subscript
        int_399619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 29), 'int')
        # Getting the type of 'A' (line 991)
        A_399620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 21), 'A', False)
        # Obtaining the member 'shape' of a type (line 991)
        shape_399621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 21), A_399620, 'shape')
        # Obtaining the member '__getitem__' of a type (line 991)
        getitem___399622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 21), shape_399621, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 991)
        subscript_call_result_399623 = invoke(stypy.reporting.localization.Localization(__file__, 991, 21), getitem___399622, int_399619)
        
        # Processing the call keyword arguments (line 991)
        kwargs_399624 = {}
        # Getting the type of 'np' (line 991)
        np_399617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 991)
        zeros_399618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 12), np_399617, 'zeros')
        # Calling zeros(args, kwargs) (line 991)
        zeros_call_result_399625 = invoke(stypy.reporting.localization.Localization(__file__, 991, 12), zeros_399618, *[subscript_call_result_399623], **kwargs_399624)
        
        # Assigning a type to the variable 'x' (line 991)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 991, 8), 'x', zeros_call_result_399625)
        
        # Type idiom detected: calculating its left and rigth part (line 992)
        # Getting the type of 'M' (line 992)
        M_399626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 11), 'M')
        # Getting the type of 'None' (line 992)
        None_399627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 16), 'None')
        
        (may_be_399628, more_types_in_union_399629) = may_be_none(M_399626, None_399627)

        if may_be_399628:

            if more_types_in_union_399629:
                # Runtime conditional SSA (line 992)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Attribute to a Name (line 993):
            
            # Assigning a Attribute to a Name (line 993):
            
            # Call to mult_func_M_None(...): (line 993)
            # Processing the call arguments (line 993)
            # Getting the type of 'x' (line 993)
            x_399631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 37), 'x', False)
            # Processing the call keyword arguments (line 993)
            kwargs_399632 = {}
            # Getting the type of 'mult_func_M_None' (line 993)
            mult_func_M_None_399630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 20), 'mult_func_M_None', False)
            # Calling mult_func_M_None(args, kwargs) (line 993)
            mult_func_M_None_call_result_399633 = invoke(stypy.reporting.localization.Localization(__file__, 993, 20), mult_func_M_None_399630, *[x_399631], **kwargs_399632)
            
            # Obtaining the member 'dtype' of a type (line 993)
            dtype_399634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 20), mult_func_M_None_call_result_399633, 'dtype')
            # Assigning a type to the variable 'dtype' (line 993)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 12), 'dtype', dtype_399634)
            
            # Assigning a Call to a Attribute (line 994):
            
            # Assigning a Call to a Attribute (line 994):
            
            # Call to LinearOperator(...): (line 994)
            # Processing the call arguments (line 994)
            # Getting the type of 'self' (line 994)
            self_399636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 37), 'self', False)
            # Obtaining the member 'A' of a type (line 994)
            A_399637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 37), self_399636, 'A')
            # Obtaining the member 'shape' of a type (line 994)
            shape_399638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 37), A_399637, 'shape')
            # Getting the type of 'mult_func_M_None' (line 995)
            mult_func_M_None_399639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 37), 'mult_func_M_None', False)
            # Processing the call keyword arguments (line 994)
            # Getting the type of 'dtype' (line 996)
            dtype_399640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 43), 'dtype', False)
            keyword_399641 = dtype_399640
            kwargs_399642 = {'dtype': keyword_399641}
            # Getting the type of 'LinearOperator' (line 994)
            LinearOperator_399635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 22), 'LinearOperator', False)
            # Calling LinearOperator(args, kwargs) (line 994)
            LinearOperator_call_result_399643 = invoke(stypy.reporting.localization.Localization(__file__, 994, 22), LinearOperator_399635, *[shape_399638, mult_func_M_None_399639], **kwargs_399642)
            
            # Getting the type of 'self' (line 994)
            self_399644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 12), 'self')
            # Setting the type of the member 'OP' of a type (line 994)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 12), self_399644, 'OP', LinearOperator_call_result_399643)

            if more_types_in_union_399629:
                # Runtime conditional SSA for else branch (line 992)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_399628) or more_types_in_union_399629):
            
            # Assigning a Attribute to a Name (line 998):
            
            # Assigning a Attribute to a Name (line 998):
            
            # Call to mult_func(...): (line 998)
            # Processing the call arguments (line 998)
            # Getting the type of 'x' (line 998)
            x_399646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 30), 'x', False)
            # Processing the call keyword arguments (line 998)
            kwargs_399647 = {}
            # Getting the type of 'mult_func' (line 998)
            mult_func_399645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 20), 'mult_func', False)
            # Calling mult_func(args, kwargs) (line 998)
            mult_func_call_result_399648 = invoke(stypy.reporting.localization.Localization(__file__, 998, 20), mult_func_399645, *[x_399646], **kwargs_399647)
            
            # Obtaining the member 'dtype' of a type (line 998)
            dtype_399649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 20), mult_func_call_result_399648, 'dtype')
            # Assigning a type to the variable 'dtype' (line 998)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 12), 'dtype', dtype_399649)
            
            # Assigning a Call to a Attribute (line 999):
            
            # Assigning a Call to a Attribute (line 999):
            
            # Call to LinearOperator(...): (line 999)
            # Processing the call arguments (line 999)
            # Getting the type of 'self' (line 999)
            self_399651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 37), 'self', False)
            # Obtaining the member 'A' of a type (line 999)
            A_399652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 37), self_399651, 'A')
            # Obtaining the member 'shape' of a type (line 999)
            shape_399653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 37), A_399652, 'shape')
            # Getting the type of 'mult_func' (line 1000)
            mult_func_399654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 37), 'mult_func', False)
            # Processing the call keyword arguments (line 999)
            # Getting the type of 'dtype' (line 1001)
            dtype_399655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 43), 'dtype', False)
            keyword_399656 = dtype_399655
            kwargs_399657 = {'dtype': keyword_399656}
            # Getting the type of 'LinearOperator' (line 999)
            LinearOperator_399650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 22), 'LinearOperator', False)
            # Calling LinearOperator(args, kwargs) (line 999)
            LinearOperator_call_result_399658 = invoke(stypy.reporting.localization.Localization(__file__, 999, 22), LinearOperator_399650, *[shape_399653, mult_func_399654], **kwargs_399657)
            
            # Getting the type of 'self' (line 999)
            self_399659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 12), 'self')
            # Setting the type of the member 'OP' of a type (line 999)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 12), self_399659, 'OP', LinearOperator_call_result_399658)

            if (may_be_399628 and more_types_in_union_399629):
                # SSA join for if statement (line 992)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Attribute to a Attribute (line 1002):
        
        # Assigning a Attribute to a Attribute (line 1002):
        # Getting the type of 'A' (line 1002)
        A_399660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 21), 'A')
        # Obtaining the member 'shape' of a type (line 1002)
        shape_399661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1002, 21), A_399660, 'shape')
        # Getting the type of 'self' (line 1002)
        self_399662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 8), 'self')
        # Setting the type of the member 'shape' of a type (line 1002)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1002, 8), self_399662, 'shape', shape_399661)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _matvec(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_matvec'
        module_type_store = module_type_store.open_function_context('_matvec', 1004, 4, False)
        # Assigning a type to the variable 'self' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        IterOpInv._matvec.__dict__.__setitem__('stypy_localization', localization)
        IterOpInv._matvec.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        IterOpInv._matvec.__dict__.__setitem__('stypy_type_store', module_type_store)
        IterOpInv._matvec.__dict__.__setitem__('stypy_function_name', 'IterOpInv._matvec')
        IterOpInv._matvec.__dict__.__setitem__('stypy_param_names_list', ['x'])
        IterOpInv._matvec.__dict__.__setitem__('stypy_varargs_param_name', None)
        IterOpInv._matvec.__dict__.__setitem__('stypy_kwargs_param_name', None)
        IterOpInv._matvec.__dict__.__setitem__('stypy_call_defaults', defaults)
        IterOpInv._matvec.__dict__.__setitem__('stypy_call_varargs', varargs)
        IterOpInv._matvec.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        IterOpInv._matvec.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'IterOpInv._matvec', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_matvec', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_matvec(...)' code ##################

        
        # Assigning a Call to a Tuple (line 1005):
        
        # Assigning a Subscript to a Name (line 1005):
        
        # Obtaining the type of the subscript
        int_399663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 8), 'int')
        
        # Call to ifunc(...): (line 1005)
        # Processing the call arguments (line 1005)
        # Getting the type of 'self' (line 1005)
        self_399666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 29), 'self', False)
        # Obtaining the member 'OP' of a type (line 1005)
        OP_399667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 29), self_399666, 'OP')
        # Getting the type of 'x' (line 1005)
        x_399668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 38), 'x', False)
        # Processing the call keyword arguments (line 1005)
        # Getting the type of 'self' (line 1005)
        self_399669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 45), 'self', False)
        # Obtaining the member 'tol' of a type (line 1005)
        tol_399670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 45), self_399669, 'tol')
        keyword_399671 = tol_399670
        kwargs_399672 = {'tol': keyword_399671}
        # Getting the type of 'self' (line 1005)
        self_399664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 18), 'self', False)
        # Obtaining the member 'ifunc' of a type (line 1005)
        ifunc_399665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 18), self_399664, 'ifunc')
        # Calling ifunc(args, kwargs) (line 1005)
        ifunc_call_result_399673 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 18), ifunc_399665, *[OP_399667, x_399668], **kwargs_399672)
        
        # Obtaining the member '__getitem__' of a type (line 1005)
        getitem___399674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 8), ifunc_call_result_399673, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1005)
        subscript_call_result_399675 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 8), getitem___399674, int_399663)
        
        # Assigning a type to the variable 'tuple_var_assignment_396031' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'tuple_var_assignment_396031', subscript_call_result_399675)
        
        # Assigning a Subscript to a Name (line 1005):
        
        # Obtaining the type of the subscript
        int_399676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 8), 'int')
        
        # Call to ifunc(...): (line 1005)
        # Processing the call arguments (line 1005)
        # Getting the type of 'self' (line 1005)
        self_399679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 29), 'self', False)
        # Obtaining the member 'OP' of a type (line 1005)
        OP_399680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 29), self_399679, 'OP')
        # Getting the type of 'x' (line 1005)
        x_399681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 38), 'x', False)
        # Processing the call keyword arguments (line 1005)
        # Getting the type of 'self' (line 1005)
        self_399682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 45), 'self', False)
        # Obtaining the member 'tol' of a type (line 1005)
        tol_399683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 45), self_399682, 'tol')
        keyword_399684 = tol_399683
        kwargs_399685 = {'tol': keyword_399684}
        # Getting the type of 'self' (line 1005)
        self_399677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 18), 'self', False)
        # Obtaining the member 'ifunc' of a type (line 1005)
        ifunc_399678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 18), self_399677, 'ifunc')
        # Calling ifunc(args, kwargs) (line 1005)
        ifunc_call_result_399686 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 18), ifunc_399678, *[OP_399680, x_399681], **kwargs_399685)
        
        # Obtaining the member '__getitem__' of a type (line 1005)
        getitem___399687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 8), ifunc_call_result_399686, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1005)
        subscript_call_result_399688 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 8), getitem___399687, int_399676)
        
        # Assigning a type to the variable 'tuple_var_assignment_396032' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'tuple_var_assignment_396032', subscript_call_result_399688)
        
        # Assigning a Name to a Name (line 1005):
        # Getting the type of 'tuple_var_assignment_396031' (line 1005)
        tuple_var_assignment_396031_399689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'tuple_var_assignment_396031')
        # Assigning a type to the variable 'b' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'b', tuple_var_assignment_396031_399689)
        
        # Assigning a Name to a Name (line 1005):
        # Getting the type of 'tuple_var_assignment_396032' (line 1005)
        tuple_var_assignment_396032_399690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'tuple_var_assignment_396032')
        # Assigning a type to the variable 'info' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 11), 'info', tuple_var_assignment_396032_399690)
        
        
        # Getting the type of 'info' (line 1006)
        info_399691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 11), 'info')
        int_399692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 19), 'int')
        # Applying the binary operator '!=' (line 1006)
        result_ne_399693 = python_operator(stypy.reporting.localization.Localization(__file__, 1006, 11), '!=', info_399691, int_399692)
        
        # Testing the type of an if condition (line 1006)
        if_condition_399694 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1006, 8), result_ne_399693)
        # Assigning a type to the variable 'if_condition_399694' (line 1006)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1006, 8), 'if_condition_399694', if_condition_399694)
        # SSA begins for if statement (line 1006)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1007)
        # Processing the call arguments (line 1007)
        str_399696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 29), 'str', 'Error in inverting [A-sigma*M]: function %s did not converge (info = %i).')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1009)
        tuple_399697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1009)
        # Adding element type (line 1009)
        # Getting the type of 'self' (line 1009)
        self_399698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 32), 'self', False)
        # Obtaining the member 'ifunc' of a type (line 1009)
        ifunc_399699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 32), self_399698, 'ifunc')
        # Obtaining the member '__name__' of a type (line 1009)
        name___399700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 32), ifunc_399699, '__name__')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1009, 32), tuple_399697, name___399700)
        # Adding element type (line 1009)
        # Getting the type of 'info' (line 1009)
        info_399701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 53), 'info', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1009, 32), tuple_399697, info_399701)
        
        # Applying the binary operator '%' (line 1007)
        result_mod_399702 = python_operator(stypy.reporting.localization.Localization(__file__, 1007, 29), '%', str_399696, tuple_399697)
        
        # Processing the call keyword arguments (line 1007)
        kwargs_399703 = {}
        # Getting the type of 'ValueError' (line 1007)
        ValueError_399695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1007)
        ValueError_call_result_399704 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 18), ValueError_399695, *[result_mod_399702], **kwargs_399703)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1007, 12), ValueError_call_result_399704, 'raise parameter', BaseException)
        # SSA join for if statement (line 1006)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'b' (line 1010)
        b_399705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 15), 'b')
        # Assigning a type to the variable 'stypy_return_type' (line 1010)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1010, 8), 'stypy_return_type', b_399705)
        
        # ################# End of '_matvec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_matvec' in the type store
        # Getting the type of 'stypy_return_type' (line 1004)
        stypy_return_type_399706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_399706)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_matvec'
        return stypy_return_type_399706


    @norecursion
    def dtype(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'dtype'
        module_type_store = module_type_store.open_function_context('dtype', 1012, 4, False)
        # Assigning a type to the variable 'self' (line 1013)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        IterOpInv.dtype.__dict__.__setitem__('stypy_localization', localization)
        IterOpInv.dtype.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        IterOpInv.dtype.__dict__.__setitem__('stypy_type_store', module_type_store)
        IterOpInv.dtype.__dict__.__setitem__('stypy_function_name', 'IterOpInv.dtype')
        IterOpInv.dtype.__dict__.__setitem__('stypy_param_names_list', [])
        IterOpInv.dtype.__dict__.__setitem__('stypy_varargs_param_name', None)
        IterOpInv.dtype.__dict__.__setitem__('stypy_kwargs_param_name', None)
        IterOpInv.dtype.__dict__.__setitem__('stypy_call_defaults', defaults)
        IterOpInv.dtype.__dict__.__setitem__('stypy_call_varargs', varargs)
        IterOpInv.dtype.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        IterOpInv.dtype.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'IterOpInv.dtype', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'dtype', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'dtype(...)' code ##################

        # Getting the type of 'self' (line 1014)
        self_399707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 15), 'self')
        # Obtaining the member 'OP' of a type (line 1014)
        OP_399708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1014, 15), self_399707, 'OP')
        # Obtaining the member 'dtype' of a type (line 1014)
        dtype_399709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1014, 15), OP_399708, 'dtype')
        # Assigning a type to the variable 'stypy_return_type' (line 1014)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1014, 8), 'stypy_return_type', dtype_399709)
        
        # ################# End of 'dtype(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'dtype' in the type store
        # Getting the type of 'stypy_return_type' (line 1012)
        stypy_return_type_399710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_399710)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'dtype'
        return stypy_return_type_399710


# Assigning a type to the variable 'IterOpInv' (line 968)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 968, 0), 'IterOpInv', IterOpInv)

@norecursion
def get_inv_matvec(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'False' (line 1017)
    False_399711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 32), 'False')
    int_399712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1017, 43), 'int')
    defaults = [False_399711, int_399712]
    # Create a new context for function 'get_inv_matvec'
    module_type_store = module_type_store.open_function_context('get_inv_matvec', 1017, 0, False)
    
    # Passed parameters checking function
    get_inv_matvec.stypy_localization = localization
    get_inv_matvec.stypy_type_of_self = None
    get_inv_matvec.stypy_type_store = module_type_store
    get_inv_matvec.stypy_function_name = 'get_inv_matvec'
    get_inv_matvec.stypy_param_names_list = ['M', 'symmetric', 'tol']
    get_inv_matvec.stypy_varargs_param_name = None
    get_inv_matvec.stypy_kwargs_param_name = None
    get_inv_matvec.stypy_call_defaults = defaults
    get_inv_matvec.stypy_call_varargs = varargs
    get_inv_matvec.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_inv_matvec', ['M', 'symmetric', 'tol'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_inv_matvec', localization, ['M', 'symmetric', 'tol'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_inv_matvec(...)' code ##################

    
    
    # Call to isdense(...): (line 1018)
    # Processing the call arguments (line 1018)
    # Getting the type of 'M' (line 1018)
    M_399714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 15), 'M', False)
    # Processing the call keyword arguments (line 1018)
    kwargs_399715 = {}
    # Getting the type of 'isdense' (line 1018)
    isdense_399713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 7), 'isdense', False)
    # Calling isdense(args, kwargs) (line 1018)
    isdense_call_result_399716 = invoke(stypy.reporting.localization.Localization(__file__, 1018, 7), isdense_399713, *[M_399714], **kwargs_399715)
    
    # Testing the type of an if condition (line 1018)
    if_condition_399717 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1018, 4), isdense_call_result_399716)
    # Assigning a type to the variable 'if_condition_399717' (line 1018)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1018, 4), 'if_condition_399717', if_condition_399717)
    # SSA begins for if statement (line 1018)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to LuInv(...): (line 1019)
    # Processing the call arguments (line 1019)
    # Getting the type of 'M' (line 1019)
    M_399719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 21), 'M', False)
    # Processing the call keyword arguments (line 1019)
    kwargs_399720 = {}
    # Getting the type of 'LuInv' (line 1019)
    LuInv_399718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 15), 'LuInv', False)
    # Calling LuInv(args, kwargs) (line 1019)
    LuInv_call_result_399721 = invoke(stypy.reporting.localization.Localization(__file__, 1019, 15), LuInv_399718, *[M_399719], **kwargs_399720)
    
    # Obtaining the member 'matvec' of a type (line 1019)
    matvec_399722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1019, 15), LuInv_call_result_399721, 'matvec')
    # Assigning a type to the variable 'stypy_return_type' (line 1019)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1019, 8), 'stypy_return_type', matvec_399722)
    # SSA branch for the else part of an if statement (line 1018)
    module_type_store.open_ssa_branch('else')
    
    
    # Call to isspmatrix(...): (line 1020)
    # Processing the call arguments (line 1020)
    # Getting the type of 'M' (line 1020)
    M_399724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 20), 'M', False)
    # Processing the call keyword arguments (line 1020)
    kwargs_399725 = {}
    # Getting the type of 'isspmatrix' (line 1020)
    isspmatrix_399723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 9), 'isspmatrix', False)
    # Calling isspmatrix(args, kwargs) (line 1020)
    isspmatrix_call_result_399726 = invoke(stypy.reporting.localization.Localization(__file__, 1020, 9), isspmatrix_399723, *[M_399724], **kwargs_399725)
    
    # Testing the type of an if condition (line 1020)
    if_condition_399727 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1020, 9), isspmatrix_call_result_399726)
    # Assigning a type to the variable 'if_condition_399727' (line 1020)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1020, 9), 'if_condition_399727', if_condition_399727)
    # SSA begins for if statement (line 1020)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    # Call to isspmatrix_csr(...): (line 1021)
    # Processing the call arguments (line 1021)
    # Getting the type of 'M' (line 1021)
    M_399729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 26), 'M', False)
    # Processing the call keyword arguments (line 1021)
    kwargs_399730 = {}
    # Getting the type of 'isspmatrix_csr' (line 1021)
    isspmatrix_csr_399728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 11), 'isspmatrix_csr', False)
    # Calling isspmatrix_csr(args, kwargs) (line 1021)
    isspmatrix_csr_call_result_399731 = invoke(stypy.reporting.localization.Localization(__file__, 1021, 11), isspmatrix_csr_399728, *[M_399729], **kwargs_399730)
    
    # Getting the type of 'symmetric' (line 1021)
    symmetric_399732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 33), 'symmetric')
    # Applying the binary operator 'and' (line 1021)
    result_and_keyword_399733 = python_operator(stypy.reporting.localization.Localization(__file__, 1021, 11), 'and', isspmatrix_csr_call_result_399731, symmetric_399732)
    
    # Testing the type of an if condition (line 1021)
    if_condition_399734 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1021, 8), result_and_keyword_399733)
    # Assigning a type to the variable 'if_condition_399734' (line 1021)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1021, 8), 'if_condition_399734', if_condition_399734)
    # SSA begins for if statement (line 1021)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Attribute to a Name (line 1022):
    
    # Assigning a Attribute to a Name (line 1022):
    # Getting the type of 'M' (line 1022)
    M_399735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 16), 'M')
    # Obtaining the member 'T' of a type (line 1022)
    T_399736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 16), M_399735, 'T')
    # Assigning a type to the variable 'M' (line 1022)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1022, 12), 'M', T_399736)
    # SSA join for if statement (line 1021)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Call to SpLuInv(...): (line 1023)
    # Processing the call arguments (line 1023)
    # Getting the type of 'M' (line 1023)
    M_399738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 23), 'M', False)
    # Processing the call keyword arguments (line 1023)
    kwargs_399739 = {}
    # Getting the type of 'SpLuInv' (line 1023)
    SpLuInv_399737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 15), 'SpLuInv', False)
    # Calling SpLuInv(args, kwargs) (line 1023)
    SpLuInv_call_result_399740 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 15), SpLuInv_399737, *[M_399738], **kwargs_399739)
    
    # Obtaining the member 'matvec' of a type (line 1023)
    matvec_399741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1023, 15), SpLuInv_call_result_399740, 'matvec')
    # Assigning a type to the variable 'stypy_return_type' (line 1023)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1023, 8), 'stypy_return_type', matvec_399741)
    # SSA branch for the else part of an if statement (line 1020)
    module_type_store.open_ssa_branch('else')
    
    # Call to IterInv(...): (line 1025)
    # Processing the call arguments (line 1025)
    # Getting the type of 'M' (line 1025)
    M_399743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 23), 'M', False)
    # Processing the call keyword arguments (line 1025)
    # Getting the type of 'tol' (line 1025)
    tol_399744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 30), 'tol', False)
    keyword_399745 = tol_399744
    kwargs_399746 = {'tol': keyword_399745}
    # Getting the type of 'IterInv' (line 1025)
    IterInv_399742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 15), 'IterInv', False)
    # Calling IterInv(args, kwargs) (line 1025)
    IterInv_call_result_399747 = invoke(stypy.reporting.localization.Localization(__file__, 1025, 15), IterInv_399742, *[M_399743], **kwargs_399746)
    
    # Obtaining the member 'matvec' of a type (line 1025)
    matvec_399748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1025, 15), IterInv_call_result_399747, 'matvec')
    # Assigning a type to the variable 'stypy_return_type' (line 1025)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 8), 'stypy_return_type', matvec_399748)
    # SSA join for if statement (line 1020)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1018)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'get_inv_matvec(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_inv_matvec' in the type store
    # Getting the type of 'stypy_return_type' (line 1017)
    stypy_return_type_399749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_399749)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_inv_matvec'
    return stypy_return_type_399749

# Assigning a type to the variable 'get_inv_matvec' (line 1017)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 0), 'get_inv_matvec', get_inv_matvec)

@norecursion
def get_OPinv_matvec(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'False' (line 1028)
    False_399750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 44), 'False')
    int_399751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1028, 55), 'int')
    defaults = [False_399750, int_399751]
    # Create a new context for function 'get_OPinv_matvec'
    module_type_store = module_type_store.open_function_context('get_OPinv_matvec', 1028, 0, False)
    
    # Passed parameters checking function
    get_OPinv_matvec.stypy_localization = localization
    get_OPinv_matvec.stypy_type_of_self = None
    get_OPinv_matvec.stypy_type_store = module_type_store
    get_OPinv_matvec.stypy_function_name = 'get_OPinv_matvec'
    get_OPinv_matvec.stypy_param_names_list = ['A', 'M', 'sigma', 'symmetric', 'tol']
    get_OPinv_matvec.stypy_varargs_param_name = None
    get_OPinv_matvec.stypy_kwargs_param_name = None
    get_OPinv_matvec.stypy_call_defaults = defaults
    get_OPinv_matvec.stypy_call_varargs = varargs
    get_OPinv_matvec.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_OPinv_matvec', ['A', 'M', 'sigma', 'symmetric', 'tol'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_OPinv_matvec', localization, ['A', 'M', 'sigma', 'symmetric', 'tol'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_OPinv_matvec(...)' code ##################

    
    
    # Getting the type of 'sigma' (line 1029)
    sigma_399752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 7), 'sigma')
    int_399753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 16), 'int')
    # Applying the binary operator '==' (line 1029)
    result_eq_399754 = python_operator(stypy.reporting.localization.Localization(__file__, 1029, 7), '==', sigma_399752, int_399753)
    
    # Testing the type of an if condition (line 1029)
    if_condition_399755 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1029, 4), result_eq_399754)
    # Assigning a type to the variable 'if_condition_399755' (line 1029)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1029, 4), 'if_condition_399755', if_condition_399755)
    # SSA begins for if statement (line 1029)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to get_inv_matvec(...): (line 1030)
    # Processing the call arguments (line 1030)
    # Getting the type of 'A' (line 1030)
    A_399757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 30), 'A', False)
    # Processing the call keyword arguments (line 1030)
    # Getting the type of 'symmetric' (line 1030)
    symmetric_399758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 43), 'symmetric', False)
    keyword_399759 = symmetric_399758
    # Getting the type of 'tol' (line 1030)
    tol_399760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 58), 'tol', False)
    keyword_399761 = tol_399760
    kwargs_399762 = {'symmetric': keyword_399759, 'tol': keyword_399761}
    # Getting the type of 'get_inv_matvec' (line 1030)
    get_inv_matvec_399756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 15), 'get_inv_matvec', False)
    # Calling get_inv_matvec(args, kwargs) (line 1030)
    get_inv_matvec_call_result_399763 = invoke(stypy.reporting.localization.Localization(__file__, 1030, 15), get_inv_matvec_399756, *[A_399757], **kwargs_399762)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1030)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1030, 8), 'stypy_return_type', get_inv_matvec_call_result_399763)
    # SSA join for if statement (line 1029)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 1032)
    # Getting the type of 'M' (line 1032)
    M_399764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 7), 'M')
    # Getting the type of 'None' (line 1032)
    None_399765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 12), 'None')
    
    (may_be_399766, more_types_in_union_399767) = may_be_none(M_399764, None_399765)

    if may_be_399766:

        if more_types_in_union_399767:
            # Runtime conditional SSA (line 1032)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        
        # Call to isdense(...): (line 1034)
        # Processing the call arguments (line 1034)
        # Getting the type of 'A' (line 1034)
        A_399769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 19), 'A', False)
        # Processing the call keyword arguments (line 1034)
        kwargs_399770 = {}
        # Getting the type of 'isdense' (line 1034)
        isdense_399768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 11), 'isdense', False)
        # Calling isdense(args, kwargs) (line 1034)
        isdense_call_result_399771 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 11), isdense_399768, *[A_399769], **kwargs_399770)
        
        # Testing the type of an if condition (line 1034)
        if_condition_399772 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1034, 8), isdense_call_result_399771)
        # Assigning a type to the variable 'if_condition_399772' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'if_condition_399772', if_condition_399772)
        # SSA begins for if statement (line 1034)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Evaluating a boolean operation
        
        # Call to issubdtype(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'A' (line 1035)
        A_399775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 30), 'A', False)
        # Obtaining the member 'dtype' of a type (line 1035)
        dtype_399776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 30), A_399775, 'dtype')
        # Getting the type of 'np' (line 1035)
        np_399777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 39), 'np', False)
        # Obtaining the member 'complexfloating' of a type (line 1035)
        complexfloating_399778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 39), np_399777, 'complexfloating')
        # Processing the call keyword arguments (line 1035)
        kwargs_399779 = {}
        # Getting the type of 'np' (line 1035)
        np_399773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'np', False)
        # Obtaining the member 'issubdtype' of a type (line 1035)
        issubdtype_399774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 16), np_399773, 'issubdtype')
        # Calling issubdtype(args, kwargs) (line 1035)
        issubdtype_call_result_399780 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 16), issubdtype_399774, *[dtype_399776, complexfloating_399778], **kwargs_399779)
        
        
        
        # Call to imag(...): (line 1036)
        # Processing the call arguments (line 1036)
        # Getting the type of 'sigma' (line 1036)
        sigma_399783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 31), 'sigma', False)
        # Processing the call keyword arguments (line 1036)
        kwargs_399784 = {}
        # Getting the type of 'np' (line 1036)
        np_399781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 23), 'np', False)
        # Obtaining the member 'imag' of a type (line 1036)
        imag_399782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 23), np_399781, 'imag')
        # Calling imag(args, kwargs) (line 1036)
        imag_call_result_399785 = invoke(stypy.reporting.localization.Localization(__file__, 1036, 23), imag_399782, *[sigma_399783], **kwargs_399784)
        
        int_399786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 41), 'int')
        # Applying the binary operator '==' (line 1036)
        result_eq_399787 = python_operator(stypy.reporting.localization.Localization(__file__, 1036, 23), '==', imag_call_result_399785, int_399786)
        
        # Applying the binary operator 'or' (line 1035)
        result_or_keyword_399788 = python_operator(stypy.reporting.localization.Localization(__file__, 1035, 16), 'or', issubdtype_call_result_399780, result_eq_399787)
        
        # Testing the type of an if condition (line 1035)
        if_condition_399789 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1035, 12), result_or_keyword_399788)
        # Assigning a type to the variable 'if_condition_399789' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 12), 'if_condition_399789', if_condition_399789)
        # SSA begins for if statement (line 1035)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1037):
        
        # Assigning a Call to a Name (line 1037):
        
        # Call to copy(...): (line 1037)
        # Processing the call arguments (line 1037)
        # Getting the type of 'A' (line 1037)
        A_399792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 28), 'A', False)
        # Processing the call keyword arguments (line 1037)
        kwargs_399793 = {}
        # Getting the type of 'np' (line 1037)
        np_399790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 20), 'np', False)
        # Obtaining the member 'copy' of a type (line 1037)
        copy_399791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 20), np_399790, 'copy')
        # Calling copy(args, kwargs) (line 1037)
        copy_call_result_399794 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 20), copy_399791, *[A_399792], **kwargs_399793)
        
        # Assigning a type to the variable 'A' (line 1037)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1037, 16), 'A', copy_call_result_399794)
        # SSA branch for the else part of an if statement (line 1035)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 1039):
        
        # Assigning a BinOp to a Name (line 1039):
        # Getting the type of 'A' (line 1039)
        A_399795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 20), 'A')
        complex_399796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1039, 24), 'complex')
        # Applying the binary operator '+' (line 1039)
        result_add_399797 = python_operator(stypy.reporting.localization.Localization(__file__, 1039, 20), '+', A_399795, complex_399796)
        
        # Assigning a type to the variable 'A' (line 1039)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1039, 16), 'A', result_add_399797)
        # SSA join for if statement (line 1035)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'A' (line 1040)
        A_399798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'A')
        # Obtaining the member 'flat' of a type (line 1040)
        flat_399799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), A_399798, 'flat')
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        int_399800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 29), 'int')
        # Getting the type of 'A' (line 1040)
        A_399801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 21), 'A')
        # Obtaining the member 'shape' of a type (line 1040)
        shape_399802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 21), A_399801, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___399803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 21), shape_399802, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_399804 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 21), getitem___399803, int_399800)
        
        int_399805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 34), 'int')
        # Applying the binary operator '+' (line 1040)
        result_add_399806 = python_operator(stypy.reporting.localization.Localization(__file__, 1040, 21), '+', subscript_call_result_399804, int_399805)
        
        slice_399807 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1040, 12), None, None, result_add_399806)
        # Getting the type of 'A' (line 1040)
        A_399808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'A')
        # Obtaining the member 'flat' of a type (line 1040)
        flat_399809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), A_399808, 'flat')
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___399810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), flat_399809, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_399811 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 12), getitem___399810, slice_399807)
        
        # Getting the type of 'sigma' (line 1040)
        sigma_399812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'sigma')
        # Applying the binary operator '-=' (line 1040)
        result_isub_399813 = python_operator(stypy.reporting.localization.Localization(__file__, 1040, 12), '-=', subscript_call_result_399811, sigma_399812)
        # Getting the type of 'A' (line 1040)
        A_399814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'A')
        # Obtaining the member 'flat' of a type (line 1040)
        flat_399815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), A_399814, 'flat')
        
        # Obtaining the type of the subscript
        int_399816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 29), 'int')
        # Getting the type of 'A' (line 1040)
        A_399817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 21), 'A')
        # Obtaining the member 'shape' of a type (line 1040)
        shape_399818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 21), A_399817, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___399819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 21), shape_399818, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_399820 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 21), getitem___399819, int_399816)
        
        int_399821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 34), 'int')
        # Applying the binary operator '+' (line 1040)
        result_add_399822 = python_operator(stypy.reporting.localization.Localization(__file__, 1040, 21), '+', subscript_call_result_399820, int_399821)
        
        slice_399823 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1040, 12), None, None, result_add_399822)
        # Storing an element on a container (line 1040)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1040, 12), flat_399815, (slice_399823, result_isub_399813))
        
        
        # Call to LuInv(...): (line 1041)
        # Processing the call arguments (line 1041)
        # Getting the type of 'A' (line 1041)
        A_399825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 25), 'A', False)
        # Processing the call keyword arguments (line 1041)
        kwargs_399826 = {}
        # Getting the type of 'LuInv' (line 1041)
        LuInv_399824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 19), 'LuInv', False)
        # Calling LuInv(args, kwargs) (line 1041)
        LuInv_call_result_399827 = invoke(stypy.reporting.localization.Localization(__file__, 1041, 19), LuInv_399824, *[A_399825], **kwargs_399826)
        
        # Obtaining the member 'matvec' of a type (line 1041)
        matvec_399828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1041, 19), LuInv_call_result_399827, 'matvec')
        # Assigning a type to the variable 'stypy_return_type' (line 1041)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1041, 12), 'stypy_return_type', matvec_399828)
        # SSA branch for the else part of an if statement (line 1034)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to isspmatrix(...): (line 1042)
        # Processing the call arguments (line 1042)
        # Getting the type of 'A' (line 1042)
        A_399830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 24), 'A', False)
        # Processing the call keyword arguments (line 1042)
        kwargs_399831 = {}
        # Getting the type of 'isspmatrix' (line 1042)
        isspmatrix_399829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 13), 'isspmatrix', False)
        # Calling isspmatrix(args, kwargs) (line 1042)
        isspmatrix_call_result_399832 = invoke(stypy.reporting.localization.Localization(__file__, 1042, 13), isspmatrix_399829, *[A_399830], **kwargs_399831)
        
        # Testing the type of an if condition (line 1042)
        if_condition_399833 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1042, 13), isspmatrix_call_result_399832)
        # Assigning a type to the variable 'if_condition_399833' (line 1042)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1042, 13), 'if_condition_399833', if_condition_399833)
        # SSA begins for if statement (line 1042)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 1043):
        
        # Assigning a BinOp to a Name (line 1043):
        # Getting the type of 'A' (line 1043)
        A_399834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 16), 'A')
        # Getting the type of 'sigma' (line 1043)
        sigma_399835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 20), 'sigma')
        
        # Call to eye(...): (line 1043)
        # Processing the call arguments (line 1043)
        
        # Obtaining the type of the subscript
        int_399837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 40), 'int')
        # Getting the type of 'A' (line 1043)
        A_399838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 32), 'A', False)
        # Obtaining the member 'shape' of a type (line 1043)
        shape_399839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 32), A_399838, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1043)
        getitem___399840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 32), shape_399839, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1043)
        subscript_call_result_399841 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 32), getitem___399840, int_399837)
        
        # Processing the call keyword arguments (line 1043)
        kwargs_399842 = {}
        # Getting the type of 'eye' (line 1043)
        eye_399836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 28), 'eye', False)
        # Calling eye(args, kwargs) (line 1043)
        eye_call_result_399843 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 28), eye_399836, *[subscript_call_result_399841], **kwargs_399842)
        
        # Applying the binary operator '*' (line 1043)
        result_mul_399844 = python_operator(stypy.reporting.localization.Localization(__file__, 1043, 20), '*', sigma_399835, eye_call_result_399843)
        
        # Applying the binary operator '-' (line 1043)
        result_sub_399845 = python_operator(stypy.reporting.localization.Localization(__file__, 1043, 16), '-', A_399834, result_mul_399844)
        
        # Assigning a type to the variable 'A' (line 1043)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1043, 12), 'A', result_sub_399845)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'symmetric' (line 1044)
        symmetric_399846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 15), 'symmetric')
        
        # Call to isspmatrix_csr(...): (line 1044)
        # Processing the call arguments (line 1044)
        # Getting the type of 'A' (line 1044)
        A_399848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 44), 'A', False)
        # Processing the call keyword arguments (line 1044)
        kwargs_399849 = {}
        # Getting the type of 'isspmatrix_csr' (line 1044)
        isspmatrix_csr_399847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 29), 'isspmatrix_csr', False)
        # Calling isspmatrix_csr(args, kwargs) (line 1044)
        isspmatrix_csr_call_result_399850 = invoke(stypy.reporting.localization.Localization(__file__, 1044, 29), isspmatrix_csr_399847, *[A_399848], **kwargs_399849)
        
        # Applying the binary operator 'and' (line 1044)
        result_and_keyword_399851 = python_operator(stypy.reporting.localization.Localization(__file__, 1044, 15), 'and', symmetric_399846, isspmatrix_csr_call_result_399850)
        
        # Testing the type of an if condition (line 1044)
        if_condition_399852 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1044, 12), result_and_keyword_399851)
        # Assigning a type to the variable 'if_condition_399852' (line 1044)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1044, 12), 'if_condition_399852', if_condition_399852)
        # SSA begins for if statement (line 1044)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 1045):
        
        # Assigning a Attribute to a Name (line 1045):
        # Getting the type of 'A' (line 1045)
        A_399853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 20), 'A')
        # Obtaining the member 'T' of a type (line 1045)
        T_399854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1045, 20), A_399853, 'T')
        # Assigning a type to the variable 'A' (line 1045)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1045, 16), 'A', T_399854)
        # SSA join for if statement (line 1044)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to SpLuInv(...): (line 1046)
        # Processing the call arguments (line 1046)
        
        # Call to tocsc(...): (line 1046)
        # Processing the call keyword arguments (line 1046)
        kwargs_399858 = {}
        # Getting the type of 'A' (line 1046)
        A_399856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 27), 'A', False)
        # Obtaining the member 'tocsc' of a type (line 1046)
        tocsc_399857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1046, 27), A_399856, 'tocsc')
        # Calling tocsc(args, kwargs) (line 1046)
        tocsc_call_result_399859 = invoke(stypy.reporting.localization.Localization(__file__, 1046, 27), tocsc_399857, *[], **kwargs_399858)
        
        # Processing the call keyword arguments (line 1046)
        kwargs_399860 = {}
        # Getting the type of 'SpLuInv' (line 1046)
        SpLuInv_399855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 19), 'SpLuInv', False)
        # Calling SpLuInv(args, kwargs) (line 1046)
        SpLuInv_call_result_399861 = invoke(stypy.reporting.localization.Localization(__file__, 1046, 19), SpLuInv_399855, *[tocsc_call_result_399859], **kwargs_399860)
        
        # Obtaining the member 'matvec' of a type (line 1046)
        matvec_399862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1046, 19), SpLuInv_call_result_399861, 'matvec')
        # Assigning a type to the variable 'stypy_return_type' (line 1046)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1046, 12), 'stypy_return_type', matvec_399862)
        # SSA branch for the else part of an if statement (line 1042)
        module_type_store.open_ssa_branch('else')
        
        # Call to IterOpInv(...): (line 1048)
        # Processing the call arguments (line 1048)
        
        # Call to _aslinearoperator_with_dtype(...): (line 1048)
        # Processing the call arguments (line 1048)
        # Getting the type of 'A' (line 1048)
        A_399865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 58), 'A', False)
        # Processing the call keyword arguments (line 1048)
        kwargs_399866 = {}
        # Getting the type of '_aslinearoperator_with_dtype' (line 1048)
        _aslinearoperator_with_dtype_399864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 29), '_aslinearoperator_with_dtype', False)
        # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1048)
        _aslinearoperator_with_dtype_call_result_399867 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 29), _aslinearoperator_with_dtype_399864, *[A_399865], **kwargs_399866)
        
        # Getting the type of 'M' (line 1049)
        M_399868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 30), 'M', False)
        # Getting the type of 'sigma' (line 1049)
        sigma_399869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 33), 'sigma', False)
        # Processing the call keyword arguments (line 1048)
        # Getting the type of 'tol' (line 1049)
        tol_399870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 44), 'tol', False)
        keyword_399871 = tol_399870
        kwargs_399872 = {'tol': keyword_399871}
        # Getting the type of 'IterOpInv' (line 1048)
        IterOpInv_399863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 19), 'IterOpInv', False)
        # Calling IterOpInv(args, kwargs) (line 1048)
        IterOpInv_call_result_399873 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 19), IterOpInv_399863, *[_aslinearoperator_with_dtype_call_result_399867, M_399868, sigma_399869], **kwargs_399872)
        
        # Obtaining the member 'matvec' of a type (line 1048)
        matvec_399874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1048, 19), IterOpInv_call_result_399873, 'matvec')
        # Assigning a type to the variable 'stypy_return_type' (line 1048)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1048, 12), 'stypy_return_type', matvec_399874)
        # SSA join for if statement (line 1042)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1034)
        module_type_store = module_type_store.join_ssa_context()
        

        if more_types_in_union_399767:
            # Runtime conditional SSA for else branch (line 1032)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_399766) or more_types_in_union_399767):
        
        
        # Evaluating a boolean operation
        
        # Evaluating a boolean operation
        
        
        # Call to isdense(...): (line 1051)
        # Processing the call arguments (line 1051)
        # Getting the type of 'A' (line 1051)
        A_399876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 25), 'A', False)
        # Processing the call keyword arguments (line 1051)
        kwargs_399877 = {}
        # Getting the type of 'isdense' (line 1051)
        isdense_399875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 17), 'isdense', False)
        # Calling isdense(args, kwargs) (line 1051)
        isdense_call_result_399878 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 17), isdense_399875, *[A_399876], **kwargs_399877)
        
        # Applying the 'not' unary operator (line 1051)
        result_not__399879 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 13), 'not', isdense_call_result_399878)
        
        
        
        # Call to isspmatrix(...): (line 1051)
        # Processing the call arguments (line 1051)
        # Getting the type of 'A' (line 1051)
        A_399881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 47), 'A', False)
        # Processing the call keyword arguments (line 1051)
        kwargs_399882 = {}
        # Getting the type of 'isspmatrix' (line 1051)
        isspmatrix_399880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 36), 'isspmatrix', False)
        # Calling isspmatrix(args, kwargs) (line 1051)
        isspmatrix_call_result_399883 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 36), isspmatrix_399880, *[A_399881], **kwargs_399882)
        
        # Applying the 'not' unary operator (line 1051)
        result_not__399884 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 32), 'not', isspmatrix_call_result_399883)
        
        # Applying the binary operator 'and' (line 1051)
        result_and_keyword_399885 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 13), 'and', result_not__399879, result_not__399884)
        
        
        # Evaluating a boolean operation
        
        
        # Call to isdense(...): (line 1052)
        # Processing the call arguments (line 1052)
        # Getting the type of 'M' (line 1052)
        M_399887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 29), 'M', False)
        # Processing the call keyword arguments (line 1052)
        kwargs_399888 = {}
        # Getting the type of 'isdense' (line 1052)
        isdense_399886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 21), 'isdense', False)
        # Calling isdense(args, kwargs) (line 1052)
        isdense_call_result_399889 = invoke(stypy.reporting.localization.Localization(__file__, 1052, 21), isdense_399886, *[M_399887], **kwargs_399888)
        
        # Applying the 'not' unary operator (line 1052)
        result_not__399890 = python_operator(stypy.reporting.localization.Localization(__file__, 1052, 17), 'not', isdense_call_result_399889)
        
        
        
        # Call to isspmatrix(...): (line 1052)
        # Processing the call arguments (line 1052)
        # Getting the type of 'M' (line 1052)
        M_399892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 51), 'M', False)
        # Processing the call keyword arguments (line 1052)
        kwargs_399893 = {}
        # Getting the type of 'isspmatrix' (line 1052)
        isspmatrix_399891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 40), 'isspmatrix', False)
        # Calling isspmatrix(args, kwargs) (line 1052)
        isspmatrix_call_result_399894 = invoke(stypy.reporting.localization.Localization(__file__, 1052, 40), isspmatrix_399891, *[M_399892], **kwargs_399893)
        
        # Applying the 'not' unary operator (line 1052)
        result_not__399895 = python_operator(stypy.reporting.localization.Localization(__file__, 1052, 36), 'not', isspmatrix_call_result_399894)
        
        # Applying the binary operator 'and' (line 1052)
        result_and_keyword_399896 = python_operator(stypy.reporting.localization.Localization(__file__, 1052, 17), 'and', result_not__399890, result_not__399895)
        
        # Applying the binary operator 'or' (line 1051)
        result_or_keyword_399897 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 12), 'or', result_and_keyword_399885, result_and_keyword_399896)
        
        # Testing the type of an if condition (line 1051)
        if_condition_399898 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1051, 8), result_or_keyword_399897)
        # Assigning a type to the variable 'if_condition_399898' (line 1051)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1051, 8), 'if_condition_399898', if_condition_399898)
        # SSA begins for if statement (line 1051)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to IterOpInv(...): (line 1053)
        # Processing the call arguments (line 1053)
        
        # Call to _aslinearoperator_with_dtype(...): (line 1053)
        # Processing the call arguments (line 1053)
        # Getting the type of 'A' (line 1053)
        A_399901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 58), 'A', False)
        # Processing the call keyword arguments (line 1053)
        kwargs_399902 = {}
        # Getting the type of '_aslinearoperator_with_dtype' (line 1053)
        _aslinearoperator_with_dtype_399900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 29), '_aslinearoperator_with_dtype', False)
        # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1053)
        _aslinearoperator_with_dtype_call_result_399903 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 29), _aslinearoperator_with_dtype_399900, *[A_399901], **kwargs_399902)
        
        
        # Call to _aslinearoperator_with_dtype(...): (line 1054)
        # Processing the call arguments (line 1054)
        # Getting the type of 'M' (line 1054)
        M_399905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 59), 'M', False)
        # Processing the call keyword arguments (line 1054)
        kwargs_399906 = {}
        # Getting the type of '_aslinearoperator_with_dtype' (line 1054)
        _aslinearoperator_with_dtype_399904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 30), '_aslinearoperator_with_dtype', False)
        # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1054)
        _aslinearoperator_with_dtype_call_result_399907 = invoke(stypy.reporting.localization.Localization(__file__, 1054, 30), _aslinearoperator_with_dtype_399904, *[M_399905], **kwargs_399906)
        
        # Getting the type of 'sigma' (line 1055)
        sigma_399908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 30), 'sigma', False)
        # Processing the call keyword arguments (line 1053)
        # Getting the type of 'tol' (line 1055)
        tol_399909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 41), 'tol', False)
        keyword_399910 = tol_399909
        kwargs_399911 = {'tol': keyword_399910}
        # Getting the type of 'IterOpInv' (line 1053)
        IterOpInv_399899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 19), 'IterOpInv', False)
        # Calling IterOpInv(args, kwargs) (line 1053)
        IterOpInv_call_result_399912 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 19), IterOpInv_399899, *[_aslinearoperator_with_dtype_call_result_399903, _aslinearoperator_with_dtype_call_result_399907, sigma_399908], **kwargs_399911)
        
        # Obtaining the member 'matvec' of a type (line 1053)
        matvec_399913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1053, 19), IterOpInv_call_result_399912, 'matvec')
        # Assigning a type to the variable 'stypy_return_type' (line 1053)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1053, 12), 'stypy_return_type', matvec_399913)
        # SSA branch for the else part of an if statement (line 1051)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Call to isdense(...): (line 1056)
        # Processing the call arguments (line 1056)
        # Getting the type of 'A' (line 1056)
        A_399915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 21), 'A', False)
        # Processing the call keyword arguments (line 1056)
        kwargs_399916 = {}
        # Getting the type of 'isdense' (line 1056)
        isdense_399914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 13), 'isdense', False)
        # Calling isdense(args, kwargs) (line 1056)
        isdense_call_result_399917 = invoke(stypy.reporting.localization.Localization(__file__, 1056, 13), isdense_399914, *[A_399915], **kwargs_399916)
        
        
        # Call to isdense(...): (line 1056)
        # Processing the call arguments (line 1056)
        # Getting the type of 'M' (line 1056)
        M_399919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 35), 'M', False)
        # Processing the call keyword arguments (line 1056)
        kwargs_399920 = {}
        # Getting the type of 'isdense' (line 1056)
        isdense_399918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 27), 'isdense', False)
        # Calling isdense(args, kwargs) (line 1056)
        isdense_call_result_399921 = invoke(stypy.reporting.localization.Localization(__file__, 1056, 27), isdense_399918, *[M_399919], **kwargs_399920)
        
        # Applying the binary operator 'or' (line 1056)
        result_or_keyword_399922 = python_operator(stypy.reporting.localization.Localization(__file__, 1056, 13), 'or', isdense_call_result_399917, isdense_call_result_399921)
        
        # Testing the type of an if condition (line 1056)
        if_condition_399923 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1056, 13), result_or_keyword_399922)
        # Assigning a type to the variable 'if_condition_399923' (line 1056)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1056, 13), 'if_condition_399923', if_condition_399923)
        # SSA begins for if statement (line 1056)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to LuInv(...): (line 1057)
        # Processing the call arguments (line 1057)
        # Getting the type of 'A' (line 1057)
        A_399925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 25), 'A', False)
        # Getting the type of 'sigma' (line 1057)
        sigma_399926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 29), 'sigma', False)
        # Getting the type of 'M' (line 1057)
        M_399927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 37), 'M', False)
        # Applying the binary operator '*' (line 1057)
        result_mul_399928 = python_operator(stypy.reporting.localization.Localization(__file__, 1057, 29), '*', sigma_399926, M_399927)
        
        # Applying the binary operator '-' (line 1057)
        result_sub_399929 = python_operator(stypy.reporting.localization.Localization(__file__, 1057, 25), '-', A_399925, result_mul_399928)
        
        # Processing the call keyword arguments (line 1057)
        kwargs_399930 = {}
        # Getting the type of 'LuInv' (line 1057)
        LuInv_399924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 19), 'LuInv', False)
        # Calling LuInv(args, kwargs) (line 1057)
        LuInv_call_result_399931 = invoke(stypy.reporting.localization.Localization(__file__, 1057, 19), LuInv_399924, *[result_sub_399929], **kwargs_399930)
        
        # Obtaining the member 'matvec' of a type (line 1057)
        matvec_399932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1057, 19), LuInv_call_result_399931, 'matvec')
        # Assigning a type to the variable 'stypy_return_type' (line 1057)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1057, 12), 'stypy_return_type', matvec_399932)
        # SSA branch for the else part of an if statement (line 1056)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a BinOp to a Name (line 1059):
        
        # Assigning a BinOp to a Name (line 1059):
        # Getting the type of 'A' (line 1059)
        A_399933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 17), 'A')
        # Getting the type of 'sigma' (line 1059)
        sigma_399934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 21), 'sigma')
        # Getting the type of 'M' (line 1059)
        M_399935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 29), 'M')
        # Applying the binary operator '*' (line 1059)
        result_mul_399936 = python_operator(stypy.reporting.localization.Localization(__file__, 1059, 21), '*', sigma_399934, M_399935)
        
        # Applying the binary operator '-' (line 1059)
        result_sub_399937 = python_operator(stypy.reporting.localization.Localization(__file__, 1059, 17), '-', A_399933, result_mul_399936)
        
        # Assigning a type to the variable 'OP' (line 1059)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1059, 12), 'OP', result_sub_399937)
        
        
        # Evaluating a boolean operation
        # Getting the type of 'symmetric' (line 1060)
        symmetric_399938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 15), 'symmetric')
        
        # Call to isspmatrix_csr(...): (line 1060)
        # Processing the call arguments (line 1060)
        # Getting the type of 'OP' (line 1060)
        OP_399940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 44), 'OP', False)
        # Processing the call keyword arguments (line 1060)
        kwargs_399941 = {}
        # Getting the type of 'isspmatrix_csr' (line 1060)
        isspmatrix_csr_399939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 29), 'isspmatrix_csr', False)
        # Calling isspmatrix_csr(args, kwargs) (line 1060)
        isspmatrix_csr_call_result_399942 = invoke(stypy.reporting.localization.Localization(__file__, 1060, 29), isspmatrix_csr_399939, *[OP_399940], **kwargs_399941)
        
        # Applying the binary operator 'and' (line 1060)
        result_and_keyword_399943 = python_operator(stypy.reporting.localization.Localization(__file__, 1060, 15), 'and', symmetric_399938, isspmatrix_csr_call_result_399942)
        
        # Testing the type of an if condition (line 1060)
        if_condition_399944 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1060, 12), result_and_keyword_399943)
        # Assigning a type to the variable 'if_condition_399944' (line 1060)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 12), 'if_condition_399944', if_condition_399944)
        # SSA begins for if statement (line 1060)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 1061):
        
        # Assigning a Attribute to a Name (line 1061):
        # Getting the type of 'OP' (line 1061)
        OP_399945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 21), 'OP')
        # Obtaining the member 'T' of a type (line 1061)
        T_399946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1061, 21), OP_399945, 'T')
        # Assigning a type to the variable 'OP' (line 1061)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1061, 16), 'OP', T_399946)
        # SSA join for if statement (line 1060)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to SpLuInv(...): (line 1062)
        # Processing the call arguments (line 1062)
        
        # Call to tocsc(...): (line 1062)
        # Processing the call keyword arguments (line 1062)
        kwargs_399950 = {}
        # Getting the type of 'OP' (line 1062)
        OP_399948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 27), 'OP', False)
        # Obtaining the member 'tocsc' of a type (line 1062)
        tocsc_399949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 27), OP_399948, 'tocsc')
        # Calling tocsc(args, kwargs) (line 1062)
        tocsc_call_result_399951 = invoke(stypy.reporting.localization.Localization(__file__, 1062, 27), tocsc_399949, *[], **kwargs_399950)
        
        # Processing the call keyword arguments (line 1062)
        kwargs_399952 = {}
        # Getting the type of 'SpLuInv' (line 1062)
        SpLuInv_399947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 19), 'SpLuInv', False)
        # Calling SpLuInv(args, kwargs) (line 1062)
        SpLuInv_call_result_399953 = invoke(stypy.reporting.localization.Localization(__file__, 1062, 19), SpLuInv_399947, *[tocsc_call_result_399951], **kwargs_399952)
        
        # Obtaining the member 'matvec' of a type (line 1062)
        matvec_399954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 19), SpLuInv_call_result_399953, 'matvec')
        # Assigning a type to the variable 'stypy_return_type' (line 1062)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1062, 12), 'stypy_return_type', matvec_399954)
        # SSA join for if statement (line 1056)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1051)
        module_type_store = module_type_store.join_ssa_context()
        

        if (may_be_399766 and more_types_in_union_399767):
            # SSA join for if statement (line 1032)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # ################# End of 'get_OPinv_matvec(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_OPinv_matvec' in the type store
    # Getting the type of 'stypy_return_type' (line 1028)
    stypy_return_type_399955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_399955)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_OPinv_matvec'
    return stypy_return_type_399955

# Assigning a type to the variable 'get_OPinv_matvec' (line 1028)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1028, 0), 'get_OPinv_matvec', get_OPinv_matvec)

# Assigning a Call to a Name (line 1067):

# Assigning a Call to a Name (line 1067):

# Call to ReentrancyLock(...): (line 1067)
# Processing the call arguments (line 1067)
str_399957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 30), 'str', 'Nested calls to eigs/eighs not allowed: ARPACK is not re-entrant')
# Processing the call keyword arguments (line 1067)
kwargs_399958 = {}
# Getting the type of 'ReentrancyLock' (line 1067)
ReentrancyLock_399956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 15), 'ReentrancyLock', False)
# Calling ReentrancyLock(args, kwargs) (line 1067)
ReentrancyLock_call_result_399959 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 15), ReentrancyLock_399956, *[str_399957], **kwargs_399958)

# Assigning a type to the variable '_ARPACK_LOCK' (line 1067)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 0), '_ARPACK_LOCK', ReentrancyLock_call_result_399959)

@norecursion
def eigs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_399960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1071, 14), 'int')
    # Getting the type of 'None' (line 1071)
    None_399961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 19), 'None')
    # Getting the type of 'None' (line 1071)
    None_399962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 31), 'None')
    str_399963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1071, 43), 'str', 'LM')
    # Getting the type of 'None' (line 1071)
    None_399964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 52), 'None')
    # Getting the type of 'None' (line 1072)
    None_399965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 13), 'None')
    # Getting the type of 'None' (line 1072)
    None_399966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 27), 'None')
    int_399967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 37), 'int')
    # Getting the type of 'True' (line 1072)
    True_399968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 60), 'True')
    # Getting the type of 'None' (line 1073)
    None_399969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 14), 'None')
    # Getting the type of 'None' (line 1073)
    None_399970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 26), 'None')
    # Getting the type of 'None' (line 1073)
    None_399971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 39), 'None')
    defaults = [int_399960, None_399961, None_399962, str_399963, None_399964, None_399965, None_399966, int_399967, True_399968, None_399969, None_399970, None_399971]
    # Create a new context for function 'eigs'
    module_type_store = module_type_store.open_function_context('eigs', 1071, 0, False)
    
    # Passed parameters checking function
    eigs.stypy_localization = localization
    eigs.stypy_type_of_self = None
    eigs.stypy_type_store = module_type_store
    eigs.stypy_function_name = 'eigs'
    eigs.stypy_param_names_list = ['A', 'k', 'M', 'sigma', 'which', 'v0', 'ncv', 'maxiter', 'tol', 'return_eigenvectors', 'Minv', 'OPinv', 'OPpart']
    eigs.stypy_varargs_param_name = None
    eigs.stypy_kwargs_param_name = None
    eigs.stypy_call_defaults = defaults
    eigs.stypy_call_varargs = varargs
    eigs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'eigs', ['A', 'k', 'M', 'sigma', 'which', 'v0', 'ncv', 'maxiter', 'tol', 'return_eigenvectors', 'Minv', 'OPinv', 'OPpart'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'eigs', localization, ['A', 'k', 'M', 'sigma', 'which', 'v0', 'ncv', 'maxiter', 'tol', 'return_eigenvectors', 'Minv', 'OPinv', 'OPpart'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'eigs(...)' code ##################

    str_399972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1223, (-1)), 'str', "\n    Find k eigenvalues and eigenvectors of the square matrix A.\n\n    Solves ``A * x[i] = w[i] * x[i]``, the standard eigenvalue problem\n    for w[i] eigenvalues with corresponding eigenvectors x[i].\n\n    If M is specified, solves ``A * x[i] = w[i] * M * x[i]``, the\n    generalized eigenvalue problem for w[i] eigenvalues\n    with corresponding eigenvectors x[i]\n\n    Parameters\n    ----------\n    A : ndarray, sparse matrix or LinearOperator\n        An array, sparse matrix, or LinearOperator representing\n        the operation ``A * x``, where A is a real or complex square matrix.\n    k : int, optional\n        The number of eigenvalues and eigenvectors desired.\n        `k` must be smaller than N-1. It is not possible to compute all\n        eigenvectors of a matrix.\n    M : ndarray, sparse matrix or LinearOperator, optional\n        An array, sparse matrix, or LinearOperator representing\n        the operation M*x for the generalized eigenvalue problem\n\n            A * x = w * M * x.\n\n        M must represent a real, symmetric matrix if A is real, and must\n        represent a complex, hermitian matrix if A is complex. For best\n        results, the data type of M should be the same as that of A.\n        Additionally:\n\n            If `sigma` is None, M is positive definite\n\n            If sigma is specified, M is positive semi-definite\n\n        If sigma is None, eigs requires an operator to compute the solution\n        of the linear equation ``M * x = b``.  This is done internally via a\n        (sparse) LU decomposition for an explicit matrix M, or via an\n        iterative solver for a general linear operator.  Alternatively,\n        the user can supply the matrix or operator Minv, which gives\n        ``x = Minv * b = M^-1 * b``.\n    sigma : real or complex, optional\n        Find eigenvalues near sigma using shift-invert mode.  This requires\n        an operator to compute the solution of the linear system\n        ``[A - sigma * M] * x = b``, where M is the identity matrix if\n        unspecified. This is computed internally via a (sparse) LU\n        decomposition for explicit matrices A & M, or via an iterative\n        solver if either A or M is a general linear operator.\n        Alternatively, the user can supply the matrix or operator OPinv,\n        which gives ``x = OPinv * b = [A - sigma * M]^-1 * b``.\n        For a real matrix A, shift-invert can either be done in imaginary\n        mode or real mode, specified by the parameter OPpart ('r' or 'i').\n        Note that when sigma is specified, the keyword 'which' (below)\n        refers to the shifted eigenvalues ``w'[i]`` where:\n\n            If A is real and OPpart == 'r' (default),\n              ``w'[i] = 1/2 * [1/(w[i]-sigma) + 1/(w[i]-conj(sigma))]``.\n\n            If A is real and OPpart == 'i',\n              ``w'[i] = 1/2i * [1/(w[i]-sigma) - 1/(w[i]-conj(sigma))]``.\n\n            If A is complex, ``w'[i] = 1/(w[i]-sigma)``.\n\n    v0 : ndarray, optional\n        Starting vector for iteration.\n        Default: random\n    ncv : int, optional\n        The number of Lanczos vectors generated\n        `ncv` must be greater than `k`; it is recommended that ``ncv > 2*k``.\n        Default: ``min(n, max(2*k + 1, 20))``\n    which : str, ['LM' | 'SM' | 'LR' | 'SR' | 'LI' | 'SI'], optional\n        Which `k` eigenvectors and eigenvalues to find:\n\n            'LM' : largest magnitude\n\n            'SM' : smallest magnitude\n\n            'LR' : largest real part\n\n            'SR' : smallest real part\n\n            'LI' : largest imaginary part\n\n            'SI' : smallest imaginary part\n\n        When sigma != None, 'which' refers to the shifted eigenvalues w'[i]\n        (see discussion in 'sigma', above).  ARPACK is generally better\n        at finding large values than small values.  If small eigenvalues are\n        desired, consider using shift-invert mode for better performance.\n    maxiter : int, optional\n        Maximum number of Arnoldi update iterations allowed\n        Default: ``n*10``\n    tol : float, optional\n        Relative accuracy for eigenvalues (stopping criterion)\n        The default value of 0 implies machine precision.\n    return_eigenvectors : bool, optional\n        Return eigenvectors (True) in addition to eigenvalues\n    Minv : ndarray, sparse matrix or LinearOperator, optional\n        See notes in M, above.\n    OPinv : ndarray, sparse matrix or LinearOperator, optional\n        See notes in sigma, above.\n    OPpart : {'r' or 'i'}, optional\n        See notes in sigma, above\n\n    Returns\n    -------\n    w : ndarray\n        Array of k eigenvalues.\n    v : ndarray\n        An array of `k` eigenvectors.\n        ``v[:, i]`` is the eigenvector corresponding to the eigenvalue w[i].\n\n    Raises\n    ------\n    ArpackNoConvergence\n        When the requested convergence is not obtained.\n        The currently converged eigenvalues and eigenvectors can be found\n        as ``eigenvalues`` and ``eigenvectors`` attributes of the exception\n        object.\n\n    See Also\n    --------\n    eigsh : eigenvalues and eigenvectors for symmetric matrix A\n    svds : singular value decomposition for a matrix A\n\n    Notes\n    -----\n    This function is a wrapper to the ARPACK [1]_ SNEUPD, DNEUPD, CNEUPD,\n    ZNEUPD, functions which use the Implicitly Restarted Arnoldi Method to\n    find the eigenvalues and eigenvectors [2]_.\n\n    References\n    ----------\n    .. [1] ARPACK Software, http://www.caam.rice.edu/software/ARPACK/\n    .. [2] R. B. Lehoucq, D. C. Sorensen, and C. Yang,  ARPACK USERS GUIDE:\n       Solution of Large Scale Eigenvalue Problems by Implicitly Restarted\n       Arnoldi Methods. SIAM, Philadelphia, PA, 1998.\n\n    Examples\n    --------\n    Find 6 eigenvectors of the identity matrix:\n\n    >>> import scipy.sparse as sparse\n    >>> id = np.eye(13)\n    >>> vals, vecs = sparse.linalg.eigs(id, k=6)\n    >>> vals\n    array([ 1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j])\n    >>> vecs.shape\n    (13, 6)\n\n    ")
    
    
    
    # Obtaining the type of the subscript
    int_399973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1224, 15), 'int')
    # Getting the type of 'A' (line 1224)
    A_399974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 7), 'A')
    # Obtaining the member 'shape' of a type (line 1224)
    shape_399975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1224, 7), A_399974, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1224)
    getitem___399976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1224, 7), shape_399975, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1224)
    subscript_call_result_399977 = invoke(stypy.reporting.localization.Localization(__file__, 1224, 7), getitem___399976, int_399973)
    
    
    # Obtaining the type of the subscript
    int_399978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1224, 29), 'int')
    # Getting the type of 'A' (line 1224)
    A_399979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1224, 21), 'A')
    # Obtaining the member 'shape' of a type (line 1224)
    shape_399980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1224, 21), A_399979, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1224)
    getitem___399981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1224, 21), shape_399980, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1224)
    subscript_call_result_399982 = invoke(stypy.reporting.localization.Localization(__file__, 1224, 21), getitem___399981, int_399978)
    
    # Applying the binary operator '!=' (line 1224)
    result_ne_399983 = python_operator(stypy.reporting.localization.Localization(__file__, 1224, 7), '!=', subscript_call_result_399977, subscript_call_result_399982)
    
    # Testing the type of an if condition (line 1224)
    if_condition_399984 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1224, 4), result_ne_399983)
    # Assigning a type to the variable 'if_condition_399984' (line 1224)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1224, 4), 'if_condition_399984', if_condition_399984)
    # SSA begins for if statement (line 1224)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1225)
    # Processing the call arguments (line 1225)
    str_399986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 25), 'str', 'expected square matrix (shape=%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1225)
    tuple_399987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 64), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1225)
    # Adding element type (line 1225)
    # Getting the type of 'A' (line 1225)
    A_399988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 64), 'A', False)
    # Obtaining the member 'shape' of a type (line 1225)
    shape_399989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1225, 64), A_399988, 'shape')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1225, 64), tuple_399987, shape_399989)
    
    # Applying the binary operator '%' (line 1225)
    result_mod_399990 = python_operator(stypy.reporting.localization.Localization(__file__, 1225, 25), '%', str_399986, tuple_399987)
    
    # Processing the call keyword arguments (line 1225)
    kwargs_399991 = {}
    # Getting the type of 'ValueError' (line 1225)
    ValueError_399985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1225)
    ValueError_call_result_399992 = invoke(stypy.reporting.localization.Localization(__file__, 1225, 14), ValueError_399985, *[result_mod_399990], **kwargs_399991)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1225, 8), ValueError_call_result_399992, 'raise parameter', BaseException)
    # SSA join for if statement (line 1224)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 1226)
    # Getting the type of 'M' (line 1226)
    M_399993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 4), 'M')
    # Getting the type of 'None' (line 1226)
    None_399994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1226, 16), 'None')
    
    (may_be_399995, more_types_in_union_399996) = may_not_be_none(M_399993, None_399994)

    if may_be_399995:

        if more_types_in_union_399996:
            # Runtime conditional SSA (line 1226)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        
        # Getting the type of 'M' (line 1227)
        M_399997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 11), 'M')
        # Obtaining the member 'shape' of a type (line 1227)
        shape_399998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1227, 11), M_399997, 'shape')
        # Getting the type of 'A' (line 1227)
        A_399999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1227, 22), 'A')
        # Obtaining the member 'shape' of a type (line 1227)
        shape_400000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1227, 22), A_399999, 'shape')
        # Applying the binary operator '!=' (line 1227)
        result_ne_400001 = python_operator(stypy.reporting.localization.Localization(__file__, 1227, 11), '!=', shape_399998, shape_400000)
        
        # Testing the type of an if condition (line 1227)
        if_condition_400002 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1227, 8), result_ne_400001)
        # Assigning a type to the variable 'if_condition_400002' (line 1227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1227, 8), 'if_condition_400002', if_condition_400002)
        # SSA begins for if statement (line 1227)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1228)
        # Processing the call arguments (line 1228)
        str_400004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1228, 29), 'str', 'wrong M dimensions %s, should be %s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1229)
        tuple_400005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1229, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1229)
        # Adding element type (line 1229)
        # Getting the type of 'M' (line 1229)
        M_400006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 32), 'M', False)
        # Obtaining the member 'shape' of a type (line 1229)
        shape_400007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1229, 32), M_400006, 'shape')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1229, 32), tuple_400005, shape_400007)
        # Adding element type (line 1229)
        # Getting the type of 'A' (line 1229)
        A_400008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1229, 41), 'A', False)
        # Obtaining the member 'shape' of a type (line 1229)
        shape_400009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1229, 41), A_400008, 'shape')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1229, 32), tuple_400005, shape_400009)
        
        # Applying the binary operator '%' (line 1228)
        result_mod_400010 = python_operator(stypy.reporting.localization.Localization(__file__, 1228, 29), '%', str_400004, tuple_400005)
        
        # Processing the call keyword arguments (line 1228)
        kwargs_400011 = {}
        # Getting the type of 'ValueError' (line 1228)
        ValueError_400003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1228, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1228)
        ValueError_call_result_400012 = invoke(stypy.reporting.localization.Localization(__file__, 1228, 18), ValueError_400003, *[result_mod_400010], **kwargs_400011)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1228, 12), ValueError_call_result_400012, 'raise parameter', BaseException)
        # SSA join for if statement (line 1227)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to lower(...): (line 1230)
        # Processing the call keyword arguments (line 1230)
        kwargs_400021 = {}
        
        # Call to dtype(...): (line 1230)
        # Processing the call arguments (line 1230)
        # Getting the type of 'M' (line 1230)
        M_400015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 20), 'M', False)
        # Obtaining the member 'dtype' of a type (line 1230)
        dtype_400016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 20), M_400015, 'dtype')
        # Processing the call keyword arguments (line 1230)
        kwargs_400017 = {}
        # Getting the type of 'np' (line 1230)
        np_400013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 11), 'np', False)
        # Obtaining the member 'dtype' of a type (line 1230)
        dtype_400014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 11), np_400013, 'dtype')
        # Calling dtype(args, kwargs) (line 1230)
        dtype_call_result_400018 = invoke(stypy.reporting.localization.Localization(__file__, 1230, 11), dtype_400014, *[dtype_400016], **kwargs_400017)
        
        # Obtaining the member 'char' of a type (line 1230)
        char_400019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 11), dtype_call_result_400018, 'char')
        # Obtaining the member 'lower' of a type (line 1230)
        lower_400020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 11), char_400019, 'lower')
        # Calling lower(args, kwargs) (line 1230)
        lower_call_result_400022 = invoke(stypy.reporting.localization.Localization(__file__, 1230, 11), lower_400020, *[], **kwargs_400021)
        
        
        # Call to lower(...): (line 1230)
        # Processing the call keyword arguments (line 1230)
        kwargs_400031 = {}
        
        # Call to dtype(...): (line 1230)
        # Processing the call arguments (line 1230)
        # Getting the type of 'A' (line 1230)
        A_400025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 54), 'A', False)
        # Obtaining the member 'dtype' of a type (line 1230)
        dtype_400026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 54), A_400025, 'dtype')
        # Processing the call keyword arguments (line 1230)
        kwargs_400027 = {}
        # Getting the type of 'np' (line 1230)
        np_400023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1230, 45), 'np', False)
        # Obtaining the member 'dtype' of a type (line 1230)
        dtype_400024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 45), np_400023, 'dtype')
        # Calling dtype(args, kwargs) (line 1230)
        dtype_call_result_400028 = invoke(stypy.reporting.localization.Localization(__file__, 1230, 45), dtype_400024, *[dtype_400026], **kwargs_400027)
        
        # Obtaining the member 'char' of a type (line 1230)
        char_400029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 45), dtype_call_result_400028, 'char')
        # Obtaining the member 'lower' of a type (line 1230)
        lower_400030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1230, 45), char_400029, 'lower')
        # Calling lower(args, kwargs) (line 1230)
        lower_call_result_400032 = invoke(stypy.reporting.localization.Localization(__file__, 1230, 45), lower_400030, *[], **kwargs_400031)
        
        # Applying the binary operator '!=' (line 1230)
        result_ne_400033 = python_operator(stypy.reporting.localization.Localization(__file__, 1230, 11), '!=', lower_call_result_400022, lower_call_result_400032)
        
        # Testing the type of an if condition (line 1230)
        if_condition_400034 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1230, 8), result_ne_400033)
        # Assigning a type to the variable 'if_condition_400034' (line 1230)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1230, 8), 'if_condition_400034', if_condition_400034)
        # SSA begins for if statement (line 1230)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 1231, 12))
        
        # 'import warnings' statement (line 1231)
        import warnings

        import_module(stypy.reporting.localization.Localization(__file__, 1231, 12), 'warnings', warnings, module_type_store)
        
        
        # Call to warn(...): (line 1232)
        # Processing the call arguments (line 1232)
        str_400037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1232, 26), 'str', 'M does not have the same type precision as A. This may adversely affect ARPACK convergence')
        # Processing the call keyword arguments (line 1232)
        kwargs_400038 = {}
        # Getting the type of 'warnings' (line 1232)
        warnings_400035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1232, 12), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 1232)
        warn_400036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1232, 12), warnings_400035, 'warn')
        # Calling warn(args, kwargs) (line 1232)
        warn_call_result_400039 = invoke(stypy.reporting.localization.Localization(__file__, 1232, 12), warn_400036, *[str_400037], **kwargs_400038)
        
        # SSA join for if statement (line 1230)
        module_type_store = module_type_store.join_ssa_context()
        

        if more_types_in_union_399996:
            # SSA join for if statement (line 1226)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Subscript to a Name (line 1234):
    
    # Assigning a Subscript to a Name (line 1234):
    
    # Obtaining the type of the subscript
    int_400040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1234, 16), 'int')
    # Getting the type of 'A' (line 1234)
    A_400041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1234, 8), 'A')
    # Obtaining the member 'shape' of a type (line 1234)
    shape_400042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1234, 8), A_400041, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1234)
    getitem___400043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1234, 8), shape_400042, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1234)
    subscript_call_result_400044 = invoke(stypy.reporting.localization.Localization(__file__, 1234, 8), getitem___400043, int_400040)
    
    # Assigning a type to the variable 'n' (line 1234)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1234, 4), 'n', subscript_call_result_400044)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 1236)
    k_400045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 7), 'k')
    int_400046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1236, 12), 'int')
    # Applying the binary operator '<=' (line 1236)
    result_le_400047 = python_operator(stypy.reporting.localization.Localization(__file__, 1236, 7), '<=', k_400045, int_400046)
    
    
    # Getting the type of 'k' (line 1236)
    k_400048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 17), 'k')
    # Getting the type of 'n' (line 1236)
    n_400049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1236, 22), 'n')
    # Applying the binary operator '>=' (line 1236)
    result_ge_400050 = python_operator(stypy.reporting.localization.Localization(__file__, 1236, 17), '>=', k_400048, n_400049)
    
    # Applying the binary operator 'or' (line 1236)
    result_or_keyword_400051 = python_operator(stypy.reporting.localization.Localization(__file__, 1236, 7), 'or', result_le_400047, result_ge_400050)
    
    # Testing the type of an if condition (line 1236)
    if_condition_400052 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1236, 4), result_or_keyword_400051)
    # Assigning a type to the variable 'if_condition_400052' (line 1236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1236, 4), 'if_condition_400052', if_condition_400052)
    # SSA begins for if statement (line 1236)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1237)
    # Processing the call arguments (line 1237)
    str_400054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1237, 25), 'str', 'k=%d must be between 1 and ndim(A)-1=%d')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1238)
    tuple_400055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1238, 28), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1238)
    # Adding element type (line 1238)
    # Getting the type of 'k' (line 1238)
    k_400056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 28), 'k', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1238, 28), tuple_400055, k_400056)
    # Adding element type (line 1238)
    # Getting the type of 'n' (line 1238)
    n_400057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1238, 31), 'n', False)
    int_400058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1238, 35), 'int')
    # Applying the binary operator '-' (line 1238)
    result_sub_400059 = python_operator(stypy.reporting.localization.Localization(__file__, 1238, 31), '-', n_400057, int_400058)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1238, 28), tuple_400055, result_sub_400059)
    
    # Applying the binary operator '%' (line 1237)
    result_mod_400060 = python_operator(stypy.reporting.localization.Localization(__file__, 1237, 25), '%', str_400054, tuple_400055)
    
    # Processing the call keyword arguments (line 1237)
    kwargs_400061 = {}
    # Getting the type of 'ValueError' (line 1237)
    ValueError_400053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1237, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1237)
    ValueError_call_result_400062 = invoke(stypy.reporting.localization.Localization(__file__, 1237, 14), ValueError_400053, *[result_mod_400060], **kwargs_400061)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1237, 8), ValueError_call_result_400062, 'raise parameter', BaseException)
    # SSA join for if statement (line 1236)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 1240)
    # Getting the type of 'sigma' (line 1240)
    sigma_400063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 7), 'sigma')
    # Getting the type of 'None' (line 1240)
    None_400064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1240, 16), 'None')
    
    (may_be_400065, more_types_in_union_400066) = may_be_none(sigma_400063, None_400064)

    if may_be_400065:

        if more_types_in_union_400066:
            # Runtime conditional SSA (line 1240)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Attribute to a Name (line 1241):
        
        # Assigning a Attribute to a Name (line 1241):
        
        # Call to _aslinearoperator_with_dtype(...): (line 1241)
        # Processing the call arguments (line 1241)
        # Getting the type of 'A' (line 1241)
        A_400068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 46), 'A', False)
        # Processing the call keyword arguments (line 1241)
        kwargs_400069 = {}
        # Getting the type of '_aslinearoperator_with_dtype' (line 1241)
        _aslinearoperator_with_dtype_400067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 17), '_aslinearoperator_with_dtype', False)
        # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1241)
        _aslinearoperator_with_dtype_call_result_400070 = invoke(stypy.reporting.localization.Localization(__file__, 1241, 17), _aslinearoperator_with_dtype_400067, *[A_400068], **kwargs_400069)
        
        # Obtaining the member 'matvec' of a type (line 1241)
        matvec_400071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1241, 17), _aslinearoperator_with_dtype_call_result_400070, 'matvec')
        # Assigning a type to the variable 'matvec' (line 1241)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1241, 8), 'matvec', matvec_400071)
        
        # Type idiom detected: calculating its left and rigth part (line 1243)
        # Getting the type of 'OPinv' (line 1243)
        OPinv_400072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 8), 'OPinv')
        # Getting the type of 'None' (line 1243)
        None_400073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 24), 'None')
        
        (may_be_400074, more_types_in_union_400075) = may_not_be_none(OPinv_400072, None_400073)

        if may_be_400074:

            if more_types_in_union_400075:
                # Runtime conditional SSA (line 1243)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 1244)
            # Processing the call arguments (line 1244)
            str_400077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1244, 29), 'str', 'OPinv should not be specified with sigma = None.')
            # Processing the call keyword arguments (line 1244)
            kwargs_400078 = {}
            # Getting the type of 'ValueError' (line 1244)
            ValueError_400076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 1244)
            ValueError_call_result_400079 = invoke(stypy.reporting.localization.Localization(__file__, 1244, 18), ValueError_400076, *[str_400077], **kwargs_400078)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1244, 12), ValueError_call_result_400079, 'raise parameter', BaseException)

            if more_types_in_union_400075:
                # SSA join for if statement (line 1243)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1246)
        # Getting the type of 'OPpart' (line 1246)
        OPpart_400080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 8), 'OPpart')
        # Getting the type of 'None' (line 1246)
        None_400081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1246, 25), 'None')
        
        (may_be_400082, more_types_in_union_400083) = may_not_be_none(OPpart_400080, None_400081)

        if may_be_400082:

            if more_types_in_union_400083:
                # Runtime conditional SSA (line 1246)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 1247)
            # Processing the call arguments (line 1247)
            str_400085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1247, 29), 'str', 'OPpart should not be specified with sigma = None or complex A')
            # Processing the call keyword arguments (line 1247)
            kwargs_400086 = {}
            # Getting the type of 'ValueError' (line 1247)
            ValueError_400084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 1247)
            ValueError_call_result_400087 = invoke(stypy.reporting.localization.Localization(__file__, 1247, 18), ValueError_400084, *[str_400085], **kwargs_400086)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1247, 12), ValueError_call_result_400087, 'raise parameter', BaseException)

            if more_types_in_union_400083:
                # SSA join for if statement (line 1246)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1250)
        # Getting the type of 'M' (line 1250)
        M_400088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 11), 'M')
        # Getting the type of 'None' (line 1250)
        None_400089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1250, 16), 'None')
        
        (may_be_400090, more_types_in_union_400091) = may_be_none(M_400088, None_400089)

        if may_be_400090:

            if more_types_in_union_400091:
                # Runtime conditional SSA (line 1250)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Num to a Name (line 1252):
            
            # Assigning a Num to a Name (line 1252):
            int_400092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1252, 19), 'int')
            # Assigning a type to the variable 'mode' (line 1252)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1252, 12), 'mode', int_400092)
            
            # Assigning a Name to a Name (line 1253):
            
            # Assigning a Name to a Name (line 1253):
            # Getting the type of 'None' (line 1253)
            None_400093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1253, 23), 'None')
            # Assigning a type to the variable 'M_matvec' (line 1253)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1253, 12), 'M_matvec', None_400093)
            
            # Assigning a Name to a Name (line 1254):
            
            # Assigning a Name to a Name (line 1254):
            # Getting the type of 'None' (line 1254)
            None_400094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1254, 26), 'None')
            # Assigning a type to the variable 'Minv_matvec' (line 1254)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1254, 12), 'Minv_matvec', None_400094)
            
            # Type idiom detected: calculating its left and rigth part (line 1255)
            # Getting the type of 'Minv' (line 1255)
            Minv_400095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 12), 'Minv')
            # Getting the type of 'None' (line 1255)
            None_400096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1255, 27), 'None')
            
            (may_be_400097, more_types_in_union_400098) = may_not_be_none(Minv_400095, None_400096)

            if may_be_400097:

                if more_types_in_union_400098:
                    # Runtime conditional SSA (line 1255)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Call to ValueError(...): (line 1256)
                # Processing the call arguments (line 1256)
                str_400100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1256, 33), 'str', 'Minv should not be specified with M = None.')
                # Processing the call keyword arguments (line 1256)
                kwargs_400101 = {}
                # Getting the type of 'ValueError' (line 1256)
                ValueError_400099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 22), 'ValueError', False)
                # Calling ValueError(args, kwargs) (line 1256)
                ValueError_call_result_400102 = invoke(stypy.reporting.localization.Localization(__file__, 1256, 22), ValueError_400099, *[str_400100], **kwargs_400101)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1256, 16), ValueError_call_result_400102, 'raise parameter', BaseException)

                if more_types_in_union_400098:
                    # SSA join for if statement (line 1255)
                    module_type_store = module_type_store.join_ssa_context()


            

            if more_types_in_union_400091:
                # Runtime conditional SSA for else branch (line 1250)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_400090) or more_types_in_union_400091):
            
            # Assigning a Num to a Name (line 1260):
            
            # Assigning a Num to a Name (line 1260):
            int_400103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 19), 'int')
            # Assigning a type to the variable 'mode' (line 1260)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1260, 12), 'mode', int_400103)
            
            # Type idiom detected: calculating its left and rigth part (line 1261)
            # Getting the type of 'Minv' (line 1261)
            Minv_400104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 15), 'Minv')
            # Getting the type of 'None' (line 1261)
            None_400105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 23), 'None')
            
            (may_be_400106, more_types_in_union_400107) = may_be_none(Minv_400104, None_400105)

            if may_be_400106:

                if more_types_in_union_400107:
                    # Runtime conditional SSA (line 1261)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1262):
                
                # Assigning a Call to a Name (line 1262):
                
                # Call to get_inv_matvec(...): (line 1262)
                # Processing the call arguments (line 1262)
                # Getting the type of 'M' (line 1262)
                M_400109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 45), 'M', False)
                # Processing the call keyword arguments (line 1262)
                # Getting the type of 'True' (line 1262)
                True_400110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 58), 'True', False)
                keyword_400111 = True_400110
                # Getting the type of 'tol' (line 1262)
                tol_400112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 68), 'tol', False)
                keyword_400113 = tol_400112
                kwargs_400114 = {'symmetric': keyword_400111, 'tol': keyword_400113}
                # Getting the type of 'get_inv_matvec' (line 1262)
                get_inv_matvec_400108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 30), 'get_inv_matvec', False)
                # Calling get_inv_matvec(args, kwargs) (line 1262)
                get_inv_matvec_call_result_400115 = invoke(stypy.reporting.localization.Localization(__file__, 1262, 30), get_inv_matvec_400108, *[M_400109], **kwargs_400114)
                
                # Assigning a type to the variable 'Minv_matvec' (line 1262)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1262, 16), 'Minv_matvec', get_inv_matvec_call_result_400115)

                if more_types_in_union_400107:
                    # Runtime conditional SSA for else branch (line 1261)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_400106) or more_types_in_union_400107):
                
                # Assigning a Call to a Name (line 1264):
                
                # Assigning a Call to a Name (line 1264):
                
                # Call to _aslinearoperator_with_dtype(...): (line 1264)
                # Processing the call arguments (line 1264)
                # Getting the type of 'Minv' (line 1264)
                Minv_400117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 52), 'Minv', False)
                # Processing the call keyword arguments (line 1264)
                kwargs_400118 = {}
                # Getting the type of '_aslinearoperator_with_dtype' (line 1264)
                _aslinearoperator_with_dtype_400116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 23), '_aslinearoperator_with_dtype', False)
                # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1264)
                _aslinearoperator_with_dtype_call_result_400119 = invoke(stypy.reporting.localization.Localization(__file__, 1264, 23), _aslinearoperator_with_dtype_400116, *[Minv_400117], **kwargs_400118)
                
                # Assigning a type to the variable 'Minv' (line 1264)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1264, 16), 'Minv', _aslinearoperator_with_dtype_call_result_400119)
                
                # Assigning a Attribute to a Name (line 1265):
                
                # Assigning a Attribute to a Name (line 1265):
                # Getting the type of 'Minv' (line 1265)
                Minv_400120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 30), 'Minv')
                # Obtaining the member 'matvec' of a type (line 1265)
                matvec_400121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1265, 30), Minv_400120, 'matvec')
                # Assigning a type to the variable 'Minv_matvec' (line 1265)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1265, 16), 'Minv_matvec', matvec_400121)

                if (may_be_400106 and more_types_in_union_400107):
                    # SSA join for if statement (line 1261)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Assigning a Attribute to a Name (line 1266):
            
            # Assigning a Attribute to a Name (line 1266):
            
            # Call to _aslinearoperator_with_dtype(...): (line 1266)
            # Processing the call arguments (line 1266)
            # Getting the type of 'M' (line 1266)
            M_400123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 52), 'M', False)
            # Processing the call keyword arguments (line 1266)
            kwargs_400124 = {}
            # Getting the type of '_aslinearoperator_with_dtype' (line 1266)
            _aslinearoperator_with_dtype_400122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1266, 23), '_aslinearoperator_with_dtype', False)
            # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1266)
            _aslinearoperator_with_dtype_call_result_400125 = invoke(stypy.reporting.localization.Localization(__file__, 1266, 23), _aslinearoperator_with_dtype_400122, *[M_400123], **kwargs_400124)
            
            # Obtaining the member 'matvec' of a type (line 1266)
            matvec_400126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1266, 23), _aslinearoperator_with_dtype_call_result_400125, 'matvec')
            # Assigning a type to the variable 'M_matvec' (line 1266)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1266, 12), 'M_matvec', matvec_400126)

            if (may_be_400090 and more_types_in_union_400091):
                # SSA join for if statement (line 1250)
                module_type_store = module_type_store.join_ssa_context()


        

        if more_types_in_union_400066:
            # Runtime conditional SSA for else branch (line 1240)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_400065) or more_types_in_union_400066):
        
        
        # Call to issubdtype(...): (line 1269)
        # Processing the call arguments (line 1269)
        # Getting the type of 'A' (line 1269)
        A_400129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 25), 'A', False)
        # Obtaining the member 'dtype' of a type (line 1269)
        dtype_400130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1269, 25), A_400129, 'dtype')
        # Getting the type of 'np' (line 1269)
        np_400131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 34), 'np', False)
        # Obtaining the member 'complexfloating' of a type (line 1269)
        complexfloating_400132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1269, 34), np_400131, 'complexfloating')
        # Processing the call keyword arguments (line 1269)
        kwargs_400133 = {}
        # Getting the type of 'np' (line 1269)
        np_400127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 11), 'np', False)
        # Obtaining the member 'issubdtype' of a type (line 1269)
        issubdtype_400128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1269, 11), np_400127, 'issubdtype')
        # Calling issubdtype(args, kwargs) (line 1269)
        issubdtype_call_result_400134 = invoke(stypy.reporting.localization.Localization(__file__, 1269, 11), issubdtype_400128, *[dtype_400130, complexfloating_400132], **kwargs_400133)
        
        # Testing the type of an if condition (line 1269)
        if_condition_400135 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1269, 8), issubdtype_call_result_400134)
        # Assigning a type to the variable 'if_condition_400135' (line 1269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1269, 8), 'if_condition_400135', if_condition_400135)
        # SSA begins for if statement (line 1269)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 1270)
        # Getting the type of 'OPpart' (line 1270)
        OPpart_400136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1270, 12), 'OPpart')
        # Getting the type of 'None' (line 1270)
        None_400137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1270, 29), 'None')
        
        (may_be_400138, more_types_in_union_400139) = may_not_be_none(OPpart_400136, None_400137)

        if may_be_400138:

            if more_types_in_union_400139:
                # Runtime conditional SSA (line 1270)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 1271)
            # Processing the call arguments (line 1271)
            str_400141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1271, 33), 'str', 'OPpart should not be specified with sigma=None or complex A')
            # Processing the call keyword arguments (line 1271)
            kwargs_400142 = {}
            # Getting the type of 'ValueError' (line 1271)
            ValueError_400140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1271, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 1271)
            ValueError_call_result_400143 = invoke(stypy.reporting.localization.Localization(__file__, 1271, 22), ValueError_400140, *[str_400141], **kwargs_400142)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1271, 16), ValueError_call_result_400143, 'raise parameter', BaseException)

            if more_types_in_union_400139:
                # SSA join for if statement (line 1270)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Num to a Name (line 1273):
        
        # Assigning a Num to a Name (line 1273):
        int_400144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1273, 19), 'int')
        # Assigning a type to the variable 'mode' (line 1273)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1273, 12), 'mode', int_400144)
        # SSA branch for the else part of an if statement (line 1269)
        module_type_store.open_ssa_branch('else')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'OPpart' (line 1274)
        OPpart_400145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 13), 'OPpart')
        # Getting the type of 'None' (line 1274)
        None_400146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 23), 'None')
        # Applying the binary operator 'is' (line 1274)
        result_is__400147 = python_operator(stypy.reporting.localization.Localization(__file__, 1274, 13), 'is', OPpart_400145, None_400146)
        
        
        
        # Call to lower(...): (line 1274)
        # Processing the call keyword arguments (line 1274)
        kwargs_400150 = {}
        # Getting the type of 'OPpart' (line 1274)
        OPpart_400148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1274, 31), 'OPpart', False)
        # Obtaining the member 'lower' of a type (line 1274)
        lower_400149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1274, 31), OPpart_400148, 'lower')
        # Calling lower(args, kwargs) (line 1274)
        lower_call_result_400151 = invoke(stypy.reporting.localization.Localization(__file__, 1274, 31), lower_400149, *[], **kwargs_400150)
        
        str_400152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1274, 49), 'str', 'r')
        # Applying the binary operator '==' (line 1274)
        result_eq_400153 = python_operator(stypy.reporting.localization.Localization(__file__, 1274, 31), '==', lower_call_result_400151, str_400152)
        
        # Applying the binary operator 'or' (line 1274)
        result_or_keyword_400154 = python_operator(stypy.reporting.localization.Localization(__file__, 1274, 13), 'or', result_is__400147, result_eq_400153)
        
        # Testing the type of an if condition (line 1274)
        if_condition_400155 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1274, 13), result_or_keyword_400154)
        # Assigning a type to the variable 'if_condition_400155' (line 1274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1274, 13), 'if_condition_400155', if_condition_400155)
        # SSA begins for if statement (line 1274)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 1275):
        
        # Assigning a Num to a Name (line 1275):
        int_400156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1275, 19), 'int')
        # Assigning a type to the variable 'mode' (line 1275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1275, 12), 'mode', int_400156)
        # SSA branch for the else part of an if statement (line 1274)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Call to lower(...): (line 1276)
        # Processing the call keyword arguments (line 1276)
        kwargs_400159 = {}
        # Getting the type of 'OPpart' (line 1276)
        OPpart_400157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1276, 13), 'OPpart', False)
        # Obtaining the member 'lower' of a type (line 1276)
        lower_400158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1276, 13), OPpart_400157, 'lower')
        # Calling lower(args, kwargs) (line 1276)
        lower_call_result_400160 = invoke(stypy.reporting.localization.Localization(__file__, 1276, 13), lower_400158, *[], **kwargs_400159)
        
        str_400161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1276, 31), 'str', 'i')
        # Applying the binary operator '==' (line 1276)
        result_eq_400162 = python_operator(stypy.reporting.localization.Localization(__file__, 1276, 13), '==', lower_call_result_400160, str_400161)
        
        # Testing the type of an if condition (line 1276)
        if_condition_400163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1276, 13), result_eq_400162)
        # Assigning a type to the variable 'if_condition_400163' (line 1276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1276, 13), 'if_condition_400163', if_condition_400163)
        # SSA begins for if statement (line 1276)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        
        # Call to imag(...): (line 1277)
        # Processing the call arguments (line 1277)
        # Getting the type of 'sigma' (line 1277)
        sigma_400166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 23), 'sigma', False)
        # Processing the call keyword arguments (line 1277)
        kwargs_400167 = {}
        # Getting the type of 'np' (line 1277)
        np_400164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1277, 15), 'np', False)
        # Obtaining the member 'imag' of a type (line 1277)
        imag_400165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1277, 15), np_400164, 'imag')
        # Calling imag(args, kwargs) (line 1277)
        imag_call_result_400168 = invoke(stypy.reporting.localization.Localization(__file__, 1277, 15), imag_400165, *[sigma_400166], **kwargs_400167)
        
        int_400169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1277, 33), 'int')
        # Applying the binary operator '==' (line 1277)
        result_eq_400170 = python_operator(stypy.reporting.localization.Localization(__file__, 1277, 15), '==', imag_call_result_400168, int_400169)
        
        # Testing the type of an if condition (line 1277)
        if_condition_400171 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1277, 12), result_eq_400170)
        # Assigning a type to the variable 'if_condition_400171' (line 1277)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1277, 12), 'if_condition_400171', if_condition_400171)
        # SSA begins for if statement (line 1277)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1278)
        # Processing the call arguments (line 1278)
        str_400173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1278, 33), 'str', "OPpart cannot be 'i' if sigma is real")
        # Processing the call keyword arguments (line 1278)
        kwargs_400174 = {}
        # Getting the type of 'ValueError' (line 1278)
        ValueError_400172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1278, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1278)
        ValueError_call_result_400175 = invoke(stypy.reporting.localization.Localization(__file__, 1278, 22), ValueError_400172, *[str_400173], **kwargs_400174)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1278, 16), ValueError_call_result_400175, 'raise parameter', BaseException)
        # SSA join for if statement (line 1277)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Num to a Name (line 1279):
        
        # Assigning a Num to a Name (line 1279):
        int_400176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1279, 19), 'int')
        # Assigning a type to the variable 'mode' (line 1279)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1279, 12), 'mode', int_400176)
        # SSA branch for the else part of an if statement (line 1276)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 1281)
        # Processing the call arguments (line 1281)
        str_400178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1281, 29), 'str', "OPpart must be one of ('r','i')")
        # Processing the call keyword arguments (line 1281)
        kwargs_400179 = {}
        # Getting the type of 'ValueError' (line 1281)
        ValueError_400177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1281, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1281)
        ValueError_call_result_400180 = invoke(stypy.reporting.localization.Localization(__file__, 1281, 18), ValueError_400177, *[str_400178], **kwargs_400179)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1281, 12), ValueError_call_result_400180, 'raise parameter', BaseException)
        # SSA join for if statement (line 1276)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1274)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1269)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Name (line 1283):
        
        # Assigning a Attribute to a Name (line 1283):
        
        # Call to _aslinearoperator_with_dtype(...): (line 1283)
        # Processing the call arguments (line 1283)
        # Getting the type of 'A' (line 1283)
        A_400182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 46), 'A', False)
        # Processing the call keyword arguments (line 1283)
        kwargs_400183 = {}
        # Getting the type of '_aslinearoperator_with_dtype' (line 1283)
        _aslinearoperator_with_dtype_400181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1283, 17), '_aslinearoperator_with_dtype', False)
        # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1283)
        _aslinearoperator_with_dtype_call_result_400184 = invoke(stypy.reporting.localization.Localization(__file__, 1283, 17), _aslinearoperator_with_dtype_400181, *[A_400182], **kwargs_400183)
        
        # Obtaining the member 'matvec' of a type (line 1283)
        matvec_400185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1283, 17), _aslinearoperator_with_dtype_call_result_400184, 'matvec')
        # Assigning a type to the variable 'matvec' (line 1283)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1283, 8), 'matvec', matvec_400185)
        
        # Type idiom detected: calculating its left and rigth part (line 1284)
        # Getting the type of 'Minv' (line 1284)
        Minv_400186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1284, 8), 'Minv')
        # Getting the type of 'None' (line 1284)
        None_400187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1284, 23), 'None')
        
        (may_be_400188, more_types_in_union_400189) = may_not_be_none(Minv_400186, None_400187)

        if may_be_400188:

            if more_types_in_union_400189:
                # Runtime conditional SSA (line 1284)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 1285)
            # Processing the call arguments (line 1285)
            str_400191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1285, 29), 'str', 'Minv should not be specified when sigma is')
            # Processing the call keyword arguments (line 1285)
            kwargs_400192 = {}
            # Getting the type of 'ValueError' (line 1285)
            ValueError_400190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1285, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 1285)
            ValueError_call_result_400193 = invoke(stypy.reporting.localization.Localization(__file__, 1285, 18), ValueError_400190, *[str_400191], **kwargs_400192)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1285, 12), ValueError_call_result_400193, 'raise parameter', BaseException)

            if more_types_in_union_400189:
                # SSA join for if statement (line 1284)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1286)
        # Getting the type of 'OPinv' (line 1286)
        OPinv_400194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 11), 'OPinv')
        # Getting the type of 'None' (line 1286)
        None_400195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1286, 20), 'None')
        
        (may_be_400196, more_types_in_union_400197) = may_be_none(OPinv_400194, None_400195)

        if may_be_400196:

            if more_types_in_union_400197:
                # Runtime conditional SSA (line 1286)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1287):
            
            # Assigning a Call to a Name (line 1287):
            
            # Call to get_OPinv_matvec(...): (line 1287)
            # Processing the call arguments (line 1287)
            # Getting the type of 'A' (line 1287)
            A_400199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 43), 'A', False)
            # Getting the type of 'M' (line 1287)
            M_400200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 46), 'M', False)
            # Getting the type of 'sigma' (line 1287)
            sigma_400201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 49), 'sigma', False)
            # Processing the call keyword arguments (line 1287)
            # Getting the type of 'False' (line 1288)
            False_400202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 53), 'False', False)
            keyword_400203 = False_400202
            # Getting the type of 'tol' (line 1288)
            tol_400204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1288, 64), 'tol', False)
            keyword_400205 = tol_400204
            kwargs_400206 = {'symmetric': keyword_400203, 'tol': keyword_400205}
            # Getting the type of 'get_OPinv_matvec' (line 1287)
            get_OPinv_matvec_400198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 26), 'get_OPinv_matvec', False)
            # Calling get_OPinv_matvec(args, kwargs) (line 1287)
            get_OPinv_matvec_call_result_400207 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 26), get_OPinv_matvec_400198, *[A_400199, M_400200, sigma_400201], **kwargs_400206)
            
            # Assigning a type to the variable 'Minv_matvec' (line 1287)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 12), 'Minv_matvec', get_OPinv_matvec_call_result_400207)

            if more_types_in_union_400197:
                # Runtime conditional SSA for else branch (line 1286)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_400196) or more_types_in_union_400197):
            
            # Assigning a Call to a Name (line 1290):
            
            # Assigning a Call to a Name (line 1290):
            
            # Call to _aslinearoperator_with_dtype(...): (line 1290)
            # Processing the call arguments (line 1290)
            # Getting the type of 'OPinv' (line 1290)
            OPinv_400209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 49), 'OPinv', False)
            # Processing the call keyword arguments (line 1290)
            kwargs_400210 = {}
            # Getting the type of '_aslinearoperator_with_dtype' (line 1290)
            _aslinearoperator_with_dtype_400208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 20), '_aslinearoperator_with_dtype', False)
            # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1290)
            _aslinearoperator_with_dtype_call_result_400211 = invoke(stypy.reporting.localization.Localization(__file__, 1290, 20), _aslinearoperator_with_dtype_400208, *[OPinv_400209], **kwargs_400210)
            
            # Assigning a type to the variable 'OPinv' (line 1290)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1290, 12), 'OPinv', _aslinearoperator_with_dtype_call_result_400211)
            
            # Assigning a Attribute to a Name (line 1291):
            
            # Assigning a Attribute to a Name (line 1291):
            # Getting the type of 'OPinv' (line 1291)
            OPinv_400212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1291, 26), 'OPinv')
            # Obtaining the member 'matvec' of a type (line 1291)
            matvec_400213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1291, 26), OPinv_400212, 'matvec')
            # Assigning a type to the variable 'Minv_matvec' (line 1291)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1291, 12), 'Minv_matvec', matvec_400213)

            if (may_be_400196 and more_types_in_union_400197):
                # SSA join for if statement (line 1286)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1292)
        # Getting the type of 'M' (line 1292)
        M_400214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 11), 'M')
        # Getting the type of 'None' (line 1292)
        None_400215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1292, 16), 'None')
        
        (may_be_400216, more_types_in_union_400217) = may_be_none(M_400214, None_400215)

        if may_be_400216:

            if more_types_in_union_400217:
                # Runtime conditional SSA (line 1292)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Name (line 1293):
            
            # Assigning a Name to a Name (line 1293):
            # Getting the type of 'None' (line 1293)
            None_400218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1293, 23), 'None')
            # Assigning a type to the variable 'M_matvec' (line 1293)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1293, 12), 'M_matvec', None_400218)

            if more_types_in_union_400217:
                # Runtime conditional SSA for else branch (line 1292)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_400216) or more_types_in_union_400217):
            
            # Assigning a Attribute to a Name (line 1295):
            
            # Assigning a Attribute to a Name (line 1295):
            
            # Call to _aslinearoperator_with_dtype(...): (line 1295)
            # Processing the call arguments (line 1295)
            # Getting the type of 'M' (line 1295)
            M_400220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 52), 'M', False)
            # Processing the call keyword arguments (line 1295)
            kwargs_400221 = {}
            # Getting the type of '_aslinearoperator_with_dtype' (line 1295)
            _aslinearoperator_with_dtype_400219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 23), '_aslinearoperator_with_dtype', False)
            # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1295)
            _aslinearoperator_with_dtype_call_result_400222 = invoke(stypy.reporting.localization.Localization(__file__, 1295, 23), _aslinearoperator_with_dtype_400219, *[M_400220], **kwargs_400221)
            
            # Obtaining the member 'matvec' of a type (line 1295)
            matvec_400223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1295, 23), _aslinearoperator_with_dtype_call_result_400222, 'matvec')
            # Assigning a type to the variable 'M_matvec' (line 1295)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1295, 12), 'M_matvec', matvec_400223)

            if (may_be_400216 and more_types_in_union_400217):
                # SSA join for if statement (line 1292)
                module_type_store = module_type_store.join_ssa_context()


        

        if (may_be_400065 and more_types_in_union_400066):
            # SSA join for if statement (line 1240)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 1297):
    
    # Assigning a Call to a Name (line 1297):
    
    # Call to _UnsymmetricArpackParams(...): (line 1297)
    # Processing the call arguments (line 1297)
    # Getting the type of 'n' (line 1297)
    n_400225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 38), 'n', False)
    # Getting the type of 'k' (line 1297)
    k_400226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 41), 'k', False)
    # Getting the type of 'A' (line 1297)
    A_400227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 44), 'A', False)
    # Obtaining the member 'dtype' of a type (line 1297)
    dtype_400228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1297, 44), A_400227, 'dtype')
    # Obtaining the member 'char' of a type (line 1297)
    char_400229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1297, 44), dtype_400228, 'char')
    # Getting the type of 'matvec' (line 1297)
    matvec_400230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 58), 'matvec', False)
    # Getting the type of 'mode' (line 1297)
    mode_400231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 66), 'mode', False)
    # Getting the type of 'M_matvec' (line 1298)
    M_matvec_400232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 38), 'M_matvec', False)
    # Getting the type of 'Minv_matvec' (line 1298)
    Minv_matvec_400233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 48), 'Minv_matvec', False)
    # Getting the type of 'sigma' (line 1298)
    sigma_400234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 61), 'sigma', False)
    # Getting the type of 'ncv' (line 1299)
    ncv_400235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 38), 'ncv', False)
    # Getting the type of 'v0' (line 1299)
    v0_400236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 43), 'v0', False)
    # Getting the type of 'maxiter' (line 1299)
    maxiter_400237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 47), 'maxiter', False)
    # Getting the type of 'which' (line 1299)
    which_400238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 56), 'which', False)
    # Getting the type of 'tol' (line 1299)
    tol_400239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 63), 'tol', False)
    # Processing the call keyword arguments (line 1297)
    kwargs_400240 = {}
    # Getting the type of '_UnsymmetricArpackParams' (line 1297)
    _UnsymmetricArpackParams_400224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 13), '_UnsymmetricArpackParams', False)
    # Calling _UnsymmetricArpackParams(args, kwargs) (line 1297)
    _UnsymmetricArpackParams_call_result_400241 = invoke(stypy.reporting.localization.Localization(__file__, 1297, 13), _UnsymmetricArpackParams_400224, *[n_400225, k_400226, char_400229, matvec_400230, mode_400231, M_matvec_400232, Minv_matvec_400233, sigma_400234, ncv_400235, v0_400236, maxiter_400237, which_400238, tol_400239], **kwargs_400240)
    
    # Assigning a type to the variable 'params' (line 1297)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1297, 4), 'params', _UnsymmetricArpackParams_call_result_400241)
    # Getting the type of '_ARPACK_LOCK' (line 1301)
    _ARPACK_LOCK_400242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 9), '_ARPACK_LOCK')
    with_400243 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1301, 9), _ARPACK_LOCK_400242, 'with parameter', '__enter__', '__exit__')

    if with_400243:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1301)
        enter___400244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1301, 9), _ARPACK_LOCK_400242, '__enter__')
        with_enter_400245 = invoke(stypy.reporting.localization.Localization(__file__, 1301, 9), enter___400244)
        
        
        # Getting the type of 'params' (line 1302)
        params_400246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 18), 'params')
        # Obtaining the member 'converged' of a type (line 1302)
        converged_400247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1302, 18), params_400246, 'converged')
        # Applying the 'not' unary operator (line 1302)
        result_not__400248 = python_operator(stypy.reporting.localization.Localization(__file__, 1302, 14), 'not', converged_400247)
        
        # Testing the type of an if condition (line 1302)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1302, 8), result_not__400248)
        # SSA begins for while statement (line 1302)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Call to iterate(...): (line 1303)
        # Processing the call keyword arguments (line 1303)
        kwargs_400251 = {}
        # Getting the type of 'params' (line 1303)
        params_400249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1303, 12), 'params', False)
        # Obtaining the member 'iterate' of a type (line 1303)
        iterate_400250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1303, 12), params_400249, 'iterate')
        # Calling iterate(args, kwargs) (line 1303)
        iterate_call_result_400252 = invoke(stypy.reporting.localization.Localization(__file__, 1303, 12), iterate_400250, *[], **kwargs_400251)
        
        # SSA join for while statement (line 1302)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to extract(...): (line 1305)
        # Processing the call arguments (line 1305)
        # Getting the type of 'return_eigenvectors' (line 1305)
        return_eigenvectors_400255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 30), 'return_eigenvectors', False)
        # Processing the call keyword arguments (line 1305)
        kwargs_400256 = {}
        # Getting the type of 'params' (line 1305)
        params_400253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1305, 15), 'params', False)
        # Obtaining the member 'extract' of a type (line 1305)
        extract_400254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1305, 15), params_400253, 'extract')
        # Calling extract(args, kwargs) (line 1305)
        extract_call_result_400257 = invoke(stypy.reporting.localization.Localization(__file__, 1305, 15), extract_400254, *[return_eigenvectors_400255], **kwargs_400256)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1305, 8), 'stypy_return_type', extract_call_result_400257)
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1301)
        exit___400258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1301, 9), _ARPACK_LOCK_400242, '__exit__')
        with_exit_400259 = invoke(stypy.reporting.localization.Localization(__file__, 1301, 9), exit___400258, None, None, None)

    
    # ################# End of 'eigs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'eigs' in the type store
    # Getting the type of 'stypy_return_type' (line 1071)
    stypy_return_type_400260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_400260)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'eigs'
    return stypy_return_type_400260

# Assigning a type to the variable 'eigs' (line 1071)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1071, 0), 'eigs', eigs)

@norecursion
def eigsh(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_400261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1308, 15), 'int')
    # Getting the type of 'None' (line 1308)
    None_400262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 20), 'None')
    # Getting the type of 'None' (line 1308)
    None_400263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 32), 'None')
    str_400264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1308, 44), 'str', 'LM')
    # Getting the type of 'None' (line 1308)
    None_400265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 53), 'None')
    # Getting the type of 'None' (line 1309)
    None_400266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 14), 'None')
    # Getting the type of 'None' (line 1309)
    None_400267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 28), 'None')
    int_400268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1309, 38), 'int')
    # Getting the type of 'True' (line 1309)
    True_400269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1309, 61), 'True')
    # Getting the type of 'None' (line 1310)
    None_400270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1310, 15), 'None')
    # Getting the type of 'None' (line 1310)
    None_400271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1310, 27), 'None')
    str_400272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1310, 38), 'str', 'normal')
    defaults = [int_400261, None_400262, None_400263, str_400264, None_400265, None_400266, None_400267, int_400268, True_400269, None_400270, None_400271, str_400272]
    # Create a new context for function 'eigsh'
    module_type_store = module_type_store.open_function_context('eigsh', 1308, 0, False)
    
    # Passed parameters checking function
    eigsh.stypy_localization = localization
    eigsh.stypy_type_of_self = None
    eigsh.stypy_type_store = module_type_store
    eigsh.stypy_function_name = 'eigsh'
    eigsh.stypy_param_names_list = ['A', 'k', 'M', 'sigma', 'which', 'v0', 'ncv', 'maxiter', 'tol', 'return_eigenvectors', 'Minv', 'OPinv', 'mode']
    eigsh.stypy_varargs_param_name = None
    eigsh.stypy_kwargs_param_name = None
    eigsh.stypy_call_defaults = defaults
    eigsh.stypy_call_varargs = varargs
    eigsh.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'eigsh', ['A', 'k', 'M', 'sigma', 'which', 'v0', 'ncv', 'maxiter', 'tol', 'return_eigenvectors', 'Minv', 'OPinv', 'mode'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'eigsh', localization, ['A', 'k', 'M', 'sigma', 'which', 'v0', 'ncv', 'maxiter', 'tol', 'return_eigenvectors', 'Minv', 'OPinv', 'mode'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'eigsh(...)' code ##################

    str_400273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1487, (-1)), 'str', "\n    Find k eigenvalues and eigenvectors of the real symmetric square matrix\n    or complex hermitian matrix A.\n\n    Solves ``A * x[i] = w[i] * x[i]``, the standard eigenvalue problem for\n    w[i] eigenvalues with corresponding eigenvectors x[i].\n\n    If M is specified, solves ``A * x[i] = w[i] * M * x[i]``, the\n    generalized eigenvalue problem for w[i] eigenvalues\n    with corresponding eigenvectors x[i]\n\n    Parameters\n    ----------\n    A : An N x N matrix, array, sparse matrix, or LinearOperator representing\n        the operation A * x, where A is a real symmetric matrix\n        For buckling mode (see below) A must additionally be positive-definite\n    k : int, optional\n        The number of eigenvalues and eigenvectors desired.\n        `k` must be smaller than N. It is not possible to compute all\n        eigenvectors of a matrix.\n\n    Returns\n    -------\n    w : array\n        Array of k eigenvalues\n    v : array\n        An array representing the `k` eigenvectors.  The column ``v[:, i]`` is\n        the eigenvector corresponding to the eigenvalue ``w[i]``.\n\n    Other Parameters\n    ----------------\n    M : An N x N matrix, array, sparse matrix, or linear operator representing\n        the operation M * x for the generalized eigenvalue problem\n\n            A * x = w * M * x.\n\n        M must represent a real, symmetric matrix if A is real, and must\n        represent a complex, hermitian matrix if A is complex. For best\n        results, the data type of M should be the same as that of A.\n        Additionally:\n\n            If sigma is None, M is symmetric positive definite\n\n            If sigma is specified, M is symmetric positive semi-definite\n\n            In buckling mode, M is symmetric indefinite.\n\n        If sigma is None, eigsh requires an operator to compute the solution\n        of the linear equation ``M * x = b``. This is done internally via a\n        (sparse) LU decomposition for an explicit matrix M, or via an\n        iterative solver for a general linear operator.  Alternatively,\n        the user can supply the matrix or operator Minv, which gives\n        ``x = Minv * b = M^-1 * b``.\n    sigma : real\n        Find eigenvalues near sigma using shift-invert mode.  This requires\n        an operator to compute the solution of the linear system\n        `[A - sigma * M] x = b`, where M is the identity matrix if\n        unspecified.  This is computed internally via a (sparse) LU\n        decomposition for explicit matrices A & M, or via an iterative\n        solver if either A or M is a general linear operator.\n        Alternatively, the user can supply the matrix or operator OPinv,\n        which gives ``x = OPinv * b = [A - sigma * M]^-1 * b``.\n        Note that when sigma is specified, the keyword 'which' refers to\n        the shifted eigenvalues ``w'[i]`` where:\n\n            if mode == 'normal', ``w'[i] = 1 / (w[i] - sigma)``.\n\n            if mode == 'cayley', ``w'[i] = (w[i] + sigma) / (w[i] - sigma)``.\n\n            if mode == 'buckling', ``w'[i] = w[i] / (w[i] - sigma)``.\n\n        (see further discussion in 'mode' below)\n    v0 : ndarray, optional\n        Starting vector for iteration.\n        Default: random\n    ncv : int, optional\n        The number of Lanczos vectors generated ncv must be greater than k and\n        smaller than n; it is recommended that ``ncv > 2*k``.\n        Default: ``min(n, max(2*k + 1, 20))``\n    which : str ['LM' | 'SM' | 'LA' | 'SA' | 'BE']\n        If A is a complex hermitian matrix, 'BE' is invalid.\n        Which `k` eigenvectors and eigenvalues to find:\n\n            'LM' : Largest (in magnitude) eigenvalues\n\n            'SM' : Smallest (in magnitude) eigenvalues\n\n            'LA' : Largest (algebraic) eigenvalues\n\n            'SA' : Smallest (algebraic) eigenvalues\n\n            'BE' : Half (k/2) from each end of the spectrum\n\n        When k is odd, return one more (k/2+1) from the high end.\n        When sigma != None, 'which' refers to the shifted eigenvalues ``w'[i]``\n        (see discussion in 'sigma', above).  ARPACK is generally better\n        at finding large values than small values.  If small eigenvalues are\n        desired, consider using shift-invert mode for better performance.\n    maxiter : int, optional\n        Maximum number of Arnoldi update iterations allowed\n        Default: ``n*10``\n    tol : float\n        Relative accuracy for eigenvalues (stopping criterion).\n        The default value of 0 implies machine precision.\n    Minv : N x N matrix, array, sparse matrix, or LinearOperator\n        See notes in M, above\n    OPinv : N x N matrix, array, sparse matrix, or LinearOperator\n        See notes in sigma, above.\n    return_eigenvectors : bool\n        Return eigenvectors (True) in addition to eigenvalues\n    mode : string ['normal' | 'buckling' | 'cayley']\n        Specify strategy to use for shift-invert mode.  This argument applies\n        only for real-valued A and sigma != None.  For shift-invert mode,\n        ARPACK internally solves the eigenvalue problem\n        ``OP * x'[i] = w'[i] * B * x'[i]``\n        and transforms the resulting Ritz vectors x'[i] and Ritz values w'[i]\n        into the desired eigenvectors and eigenvalues of the problem\n        ``A * x[i] = w[i] * M * x[i]``.\n        The modes are as follows:\n\n            'normal' :\n                OP = [A - sigma * M]^-1 * M,\n                B = M,\n                w'[i] = 1 / (w[i] - sigma)\n\n            'buckling' :\n                OP = [A - sigma * M]^-1 * A,\n                B = A,\n                w'[i] = w[i] / (w[i] - sigma)\n\n            'cayley' :\n                OP = [A - sigma * M]^-1 * [A + sigma * M],\n                B = M,\n                w'[i] = (w[i] + sigma) / (w[i] - sigma)\n\n        The choice of mode will affect which eigenvalues are selected by\n        the keyword 'which', and can also impact the stability of\n        convergence (see [2] for a discussion)\n\n    Raises\n    ------\n    ArpackNoConvergence\n        When the requested convergence is not obtained.\n\n        The currently converged eigenvalues and eigenvectors can be found\n        as ``eigenvalues`` and ``eigenvectors`` attributes of the exception\n        object.\n\n    See Also\n    --------\n    eigs : eigenvalues and eigenvectors for a general (nonsymmetric) matrix A\n    svds : singular value decomposition for a matrix A\n\n    Notes\n    -----\n    This function is a wrapper to the ARPACK [1]_ SSEUPD and DSEUPD\n    functions which use the Implicitly Restarted Lanczos Method to\n    find the eigenvalues and eigenvectors [2]_.\n\n    References\n    ----------\n    .. [1] ARPACK Software, http://www.caam.rice.edu/software/ARPACK/\n    .. [2] R. B. Lehoucq, D. C. Sorensen, and C. Yang,  ARPACK USERS GUIDE:\n       Solution of Large Scale Eigenvalue Problems by Implicitly Restarted\n       Arnoldi Methods. SIAM, Philadelphia, PA, 1998.\n\n    Examples\n    --------\n    >>> import scipy.sparse as sparse\n    >>> id = np.eye(13)\n    >>> vals, vecs = sparse.linalg.eigsh(id, k=6)\n    >>> vals\n    array([ 1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j,  1.+0.j])\n    >>> vecs.shape\n    (13, 6)\n\n    ")
    
    
    # Call to issubdtype(...): (line 1489)
    # Processing the call arguments (line 1489)
    # Getting the type of 'A' (line 1489)
    A_400276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 21), 'A', False)
    # Obtaining the member 'dtype' of a type (line 1489)
    dtype_400277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1489, 21), A_400276, 'dtype')
    # Getting the type of 'np' (line 1489)
    np_400278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 30), 'np', False)
    # Obtaining the member 'complexfloating' of a type (line 1489)
    complexfloating_400279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1489, 30), np_400278, 'complexfloating')
    # Processing the call keyword arguments (line 1489)
    kwargs_400280 = {}
    # Getting the type of 'np' (line 1489)
    np_400274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 7), 'np', False)
    # Obtaining the member 'issubdtype' of a type (line 1489)
    issubdtype_400275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1489, 7), np_400274, 'issubdtype')
    # Calling issubdtype(args, kwargs) (line 1489)
    issubdtype_call_result_400281 = invoke(stypy.reporting.localization.Localization(__file__, 1489, 7), issubdtype_400275, *[dtype_400277, complexfloating_400279], **kwargs_400280)
    
    # Testing the type of an if condition (line 1489)
    if_condition_400282 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1489, 4), issubdtype_call_result_400281)
    # Assigning a type to the variable 'if_condition_400282' (line 1489)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1489, 4), 'if_condition_400282', if_condition_400282)
    # SSA begins for if statement (line 1489)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'mode' (line 1490)
    mode_400283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1490, 11), 'mode')
    str_400284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1490, 19), 'str', 'normal')
    # Applying the binary operator '!=' (line 1490)
    result_ne_400285 = python_operator(stypy.reporting.localization.Localization(__file__, 1490, 11), '!=', mode_400283, str_400284)
    
    # Testing the type of an if condition (line 1490)
    if_condition_400286 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1490, 8), result_ne_400285)
    # Assigning a type to the variable 'if_condition_400286' (line 1490)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1490, 8), 'if_condition_400286', if_condition_400286)
    # SSA begins for if statement (line 1490)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1491)
    # Processing the call arguments (line 1491)
    str_400288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1491, 29), 'str', 'mode=%s cannot be used with complex matrix A')
    # Getting the type of 'mode' (line 1492)
    mode_400289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1492, 50), 'mode', False)
    # Applying the binary operator '%' (line 1491)
    result_mod_400290 = python_operator(stypy.reporting.localization.Localization(__file__, 1491, 29), '%', str_400288, mode_400289)
    
    # Processing the call keyword arguments (line 1491)
    kwargs_400291 = {}
    # Getting the type of 'ValueError' (line 1491)
    ValueError_400287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1491, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1491)
    ValueError_call_result_400292 = invoke(stypy.reporting.localization.Localization(__file__, 1491, 18), ValueError_400287, *[result_mod_400290], **kwargs_400291)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1491, 12), ValueError_call_result_400292, 'raise parameter', BaseException)
    # SSA join for if statement (line 1490)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'which' (line 1493)
    which_400293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1493, 11), 'which')
    str_400294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1493, 20), 'str', 'BE')
    # Applying the binary operator '==' (line 1493)
    result_eq_400295 = python_operator(stypy.reporting.localization.Localization(__file__, 1493, 11), '==', which_400293, str_400294)
    
    # Testing the type of an if condition (line 1493)
    if_condition_400296 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1493, 8), result_eq_400295)
    # Assigning a type to the variable 'if_condition_400296' (line 1493)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1493, 8), 'if_condition_400296', if_condition_400296)
    # SSA begins for if statement (line 1493)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1494)
    # Processing the call arguments (line 1494)
    str_400298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1494, 29), 'str', "which='BE' cannot be used with complex matrix A")
    # Processing the call keyword arguments (line 1494)
    kwargs_400299 = {}
    # Getting the type of 'ValueError' (line 1494)
    ValueError_400297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 18), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1494)
    ValueError_call_result_400300 = invoke(stypy.reporting.localization.Localization(__file__, 1494, 18), ValueError_400297, *[str_400298], **kwargs_400299)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1494, 12), ValueError_call_result_400300, 'raise parameter', BaseException)
    # SSA branch for the else part of an if statement (line 1493)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'which' (line 1495)
    which_400301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 13), 'which')
    str_400302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1495, 22), 'str', 'LA')
    # Applying the binary operator '==' (line 1495)
    result_eq_400303 = python_operator(stypy.reporting.localization.Localization(__file__, 1495, 13), '==', which_400301, str_400302)
    
    # Testing the type of an if condition (line 1495)
    if_condition_400304 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1495, 13), result_eq_400303)
    # Assigning a type to the variable 'if_condition_400304' (line 1495)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1495, 13), 'if_condition_400304', if_condition_400304)
    # SSA begins for if statement (line 1495)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1496):
    
    # Assigning a Str to a Name (line 1496):
    str_400305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1496, 20), 'str', 'LR')
    # Assigning a type to the variable 'which' (line 1496)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1496, 12), 'which', str_400305)
    # SSA branch for the else part of an if statement (line 1495)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'which' (line 1497)
    which_400306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 13), 'which')
    str_400307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1497, 22), 'str', 'SA')
    # Applying the binary operator '==' (line 1497)
    result_eq_400308 = python_operator(stypy.reporting.localization.Localization(__file__, 1497, 13), '==', which_400306, str_400307)
    
    # Testing the type of an if condition (line 1497)
    if_condition_400309 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1497, 13), result_eq_400308)
    # Assigning a type to the variable 'if_condition_400309' (line 1497)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1497, 13), 'if_condition_400309', if_condition_400309)
    # SSA begins for if statement (line 1497)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Str to a Name (line 1498):
    
    # Assigning a Str to a Name (line 1498):
    str_400310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1498, 20), 'str', 'SR')
    # Assigning a type to the variable 'which' (line 1498)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1498, 12), 'which', str_400310)
    # SSA join for if statement (line 1497)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1495)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1493)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 1499):
    
    # Assigning a Call to a Name (line 1499):
    
    # Call to eigs(...): (line 1499)
    # Processing the call arguments (line 1499)
    # Getting the type of 'A' (line 1499)
    A_400312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 19), 'A', False)
    # Getting the type of 'k' (line 1499)
    k_400313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 22), 'k', False)
    # Processing the call keyword arguments (line 1499)
    # Getting the type of 'M' (line 1499)
    M_400314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 27), 'M', False)
    keyword_400315 = M_400314
    # Getting the type of 'sigma' (line 1499)
    sigma_400316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 36), 'sigma', False)
    keyword_400317 = sigma_400316
    # Getting the type of 'which' (line 1499)
    which_400318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 49), 'which', False)
    keyword_400319 = which_400318
    # Getting the type of 'v0' (line 1499)
    v0_400320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 59), 'v0', False)
    keyword_400321 = v0_400320
    # Getting the type of 'ncv' (line 1500)
    ncv_400322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 23), 'ncv', False)
    keyword_400323 = ncv_400322
    # Getting the type of 'maxiter' (line 1500)
    maxiter_400324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 36), 'maxiter', False)
    keyword_400325 = maxiter_400324
    # Getting the type of 'tol' (line 1500)
    tol_400326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 49), 'tol', False)
    keyword_400327 = tol_400326
    # Getting the type of 'return_eigenvectors' (line 1501)
    return_eigenvectors_400328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 39), 'return_eigenvectors', False)
    keyword_400329 = return_eigenvectors_400328
    # Getting the type of 'Minv' (line 1501)
    Minv_400330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 65), 'Minv', False)
    keyword_400331 = Minv_400330
    # Getting the type of 'OPinv' (line 1502)
    OPinv_400332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1502, 25), 'OPinv', False)
    keyword_400333 = OPinv_400332
    kwargs_400334 = {'tol': keyword_400327, 'return_eigenvectors': keyword_400329, 'M': keyword_400315, 'ncv': keyword_400323, 'OPinv': keyword_400333, 'v0': keyword_400321, 'which': keyword_400319, 'maxiter': keyword_400325, 'sigma': keyword_400317, 'Minv': keyword_400331}
    # Getting the type of 'eigs' (line 1499)
    eigs_400311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 14), 'eigs', False)
    # Calling eigs(args, kwargs) (line 1499)
    eigs_call_result_400335 = invoke(stypy.reporting.localization.Localization(__file__, 1499, 14), eigs_400311, *[A_400312, k_400313], **kwargs_400334)
    
    # Assigning a type to the variable 'ret' (line 1499)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1499, 8), 'ret', eigs_call_result_400335)
    
    # Getting the type of 'return_eigenvectors' (line 1504)
    return_eigenvectors_400336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 11), 'return_eigenvectors')
    # Testing the type of an if condition (line 1504)
    if_condition_400337 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1504, 8), return_eigenvectors_400336)
    # Assigning a type to the variable 'if_condition_400337' (line 1504)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1504, 8), 'if_condition_400337', if_condition_400337)
    # SSA begins for if statement (line 1504)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1505)
    tuple_400338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1505, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1505)
    # Adding element type (line 1505)
    
    # Obtaining the type of the subscript
    int_400339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1505, 23), 'int')
    # Getting the type of 'ret' (line 1505)
    ret_400340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 19), 'ret')
    # Obtaining the member '__getitem__' of a type (line 1505)
    getitem___400341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1505, 19), ret_400340, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1505)
    subscript_call_result_400342 = invoke(stypy.reporting.localization.Localization(__file__, 1505, 19), getitem___400341, int_400339)
    
    # Obtaining the member 'real' of a type (line 1505)
    real_400343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1505, 19), subscript_call_result_400342, 'real')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1505, 19), tuple_400338, real_400343)
    # Adding element type (line 1505)
    
    # Obtaining the type of the subscript
    int_400344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1505, 36), 'int')
    # Getting the type of 'ret' (line 1505)
    ret_400345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 32), 'ret')
    # Obtaining the member '__getitem__' of a type (line 1505)
    getitem___400346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1505, 32), ret_400345, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1505)
    subscript_call_result_400347 = invoke(stypy.reporting.localization.Localization(__file__, 1505, 32), getitem___400346, int_400344)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1505, 19), tuple_400338, subscript_call_result_400347)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1505)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1505, 12), 'stypy_return_type', tuple_400338)
    # SSA branch for the else part of an if statement (line 1504)
    module_type_store.open_ssa_branch('else')
    # Getting the type of 'ret' (line 1507)
    ret_400348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1507, 19), 'ret')
    # Obtaining the member 'real' of a type (line 1507)
    real_400349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1507, 19), ret_400348, 'real')
    # Assigning a type to the variable 'stypy_return_type' (line 1507)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1507, 12), 'stypy_return_type', real_400349)
    # SSA join for if statement (line 1504)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1489)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    
    # Obtaining the type of the subscript
    int_400350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1509, 15), 'int')
    # Getting the type of 'A' (line 1509)
    A_400351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 7), 'A')
    # Obtaining the member 'shape' of a type (line 1509)
    shape_400352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 7), A_400351, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1509)
    getitem___400353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 7), shape_400352, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1509)
    subscript_call_result_400354 = invoke(stypy.reporting.localization.Localization(__file__, 1509, 7), getitem___400353, int_400350)
    
    
    # Obtaining the type of the subscript
    int_400355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1509, 29), 'int')
    # Getting the type of 'A' (line 1509)
    A_400356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 21), 'A')
    # Obtaining the member 'shape' of a type (line 1509)
    shape_400357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 21), A_400356, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1509)
    getitem___400358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1509, 21), shape_400357, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1509)
    subscript_call_result_400359 = invoke(stypy.reporting.localization.Localization(__file__, 1509, 21), getitem___400358, int_400355)
    
    # Applying the binary operator '!=' (line 1509)
    result_ne_400360 = python_operator(stypy.reporting.localization.Localization(__file__, 1509, 7), '!=', subscript_call_result_400354, subscript_call_result_400359)
    
    # Testing the type of an if condition (line 1509)
    if_condition_400361 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1509, 4), result_ne_400360)
    # Assigning a type to the variable 'if_condition_400361' (line 1509)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1509, 4), 'if_condition_400361', if_condition_400361)
    # SSA begins for if statement (line 1509)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1510)
    # Processing the call arguments (line 1510)
    str_400363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1510, 25), 'str', 'expected square matrix (shape=%s)')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1510)
    tuple_400364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1510, 64), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1510)
    # Adding element type (line 1510)
    # Getting the type of 'A' (line 1510)
    A_400365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 64), 'A', False)
    # Obtaining the member 'shape' of a type (line 1510)
    shape_400366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 64), A_400365, 'shape')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1510, 64), tuple_400364, shape_400366)
    
    # Applying the binary operator '%' (line 1510)
    result_mod_400367 = python_operator(stypy.reporting.localization.Localization(__file__, 1510, 25), '%', str_400363, tuple_400364)
    
    # Processing the call keyword arguments (line 1510)
    kwargs_400368 = {}
    # Getting the type of 'ValueError' (line 1510)
    ValueError_400362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1510)
    ValueError_call_result_400369 = invoke(stypy.reporting.localization.Localization(__file__, 1510, 14), ValueError_400362, *[result_mod_400367], **kwargs_400368)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1510, 8), ValueError_call_result_400369, 'raise parameter', BaseException)
    # SSA join for if statement (line 1509)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 1511)
    # Getting the type of 'M' (line 1511)
    M_400370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 4), 'M')
    # Getting the type of 'None' (line 1511)
    None_400371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 16), 'None')
    
    (may_be_400372, more_types_in_union_400373) = may_not_be_none(M_400370, None_400371)

    if may_be_400372:

        if more_types_in_union_400373:
            # Runtime conditional SSA (line 1511)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        
        # Getting the type of 'M' (line 1512)
        M_400374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 11), 'M')
        # Obtaining the member 'shape' of a type (line 1512)
        shape_400375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1512, 11), M_400374, 'shape')
        # Getting the type of 'A' (line 1512)
        A_400376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 22), 'A')
        # Obtaining the member 'shape' of a type (line 1512)
        shape_400377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1512, 22), A_400376, 'shape')
        # Applying the binary operator '!=' (line 1512)
        result_ne_400378 = python_operator(stypy.reporting.localization.Localization(__file__, 1512, 11), '!=', shape_400375, shape_400377)
        
        # Testing the type of an if condition (line 1512)
        if_condition_400379 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1512, 8), result_ne_400378)
        # Assigning a type to the variable 'if_condition_400379' (line 1512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1512, 8), 'if_condition_400379', if_condition_400379)
        # SSA begins for if statement (line 1512)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1513)
        # Processing the call arguments (line 1513)
        str_400381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1513, 29), 'str', 'wrong M dimensions %s, should be %s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 1514)
        tuple_400382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1514, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1514)
        # Adding element type (line 1514)
        # Getting the type of 'M' (line 1514)
        M_400383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 32), 'M', False)
        # Obtaining the member 'shape' of a type (line 1514)
        shape_400384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1514, 32), M_400383, 'shape')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1514, 32), tuple_400382, shape_400384)
        # Adding element type (line 1514)
        # Getting the type of 'A' (line 1514)
        A_400385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 41), 'A', False)
        # Obtaining the member 'shape' of a type (line 1514)
        shape_400386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1514, 41), A_400385, 'shape')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1514, 32), tuple_400382, shape_400386)
        
        # Applying the binary operator '%' (line 1513)
        result_mod_400387 = python_operator(stypy.reporting.localization.Localization(__file__, 1513, 29), '%', str_400381, tuple_400382)
        
        # Processing the call keyword arguments (line 1513)
        kwargs_400388 = {}
        # Getting the type of 'ValueError' (line 1513)
        ValueError_400380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1513)
        ValueError_call_result_400389 = invoke(stypy.reporting.localization.Localization(__file__, 1513, 18), ValueError_400380, *[result_mod_400387], **kwargs_400388)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1513, 12), ValueError_call_result_400389, 'raise parameter', BaseException)
        # SSA join for if statement (line 1512)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to lower(...): (line 1515)
        # Processing the call keyword arguments (line 1515)
        kwargs_400398 = {}
        
        # Call to dtype(...): (line 1515)
        # Processing the call arguments (line 1515)
        # Getting the type of 'M' (line 1515)
        M_400392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 20), 'M', False)
        # Obtaining the member 'dtype' of a type (line 1515)
        dtype_400393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 20), M_400392, 'dtype')
        # Processing the call keyword arguments (line 1515)
        kwargs_400394 = {}
        # Getting the type of 'np' (line 1515)
        np_400390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 11), 'np', False)
        # Obtaining the member 'dtype' of a type (line 1515)
        dtype_400391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 11), np_400390, 'dtype')
        # Calling dtype(args, kwargs) (line 1515)
        dtype_call_result_400395 = invoke(stypy.reporting.localization.Localization(__file__, 1515, 11), dtype_400391, *[dtype_400393], **kwargs_400394)
        
        # Obtaining the member 'char' of a type (line 1515)
        char_400396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 11), dtype_call_result_400395, 'char')
        # Obtaining the member 'lower' of a type (line 1515)
        lower_400397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 11), char_400396, 'lower')
        # Calling lower(args, kwargs) (line 1515)
        lower_call_result_400399 = invoke(stypy.reporting.localization.Localization(__file__, 1515, 11), lower_400397, *[], **kwargs_400398)
        
        
        # Call to lower(...): (line 1515)
        # Processing the call keyword arguments (line 1515)
        kwargs_400408 = {}
        
        # Call to dtype(...): (line 1515)
        # Processing the call arguments (line 1515)
        # Getting the type of 'A' (line 1515)
        A_400402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 54), 'A', False)
        # Obtaining the member 'dtype' of a type (line 1515)
        dtype_400403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 54), A_400402, 'dtype')
        # Processing the call keyword arguments (line 1515)
        kwargs_400404 = {}
        # Getting the type of 'np' (line 1515)
        np_400400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1515, 45), 'np', False)
        # Obtaining the member 'dtype' of a type (line 1515)
        dtype_400401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 45), np_400400, 'dtype')
        # Calling dtype(args, kwargs) (line 1515)
        dtype_call_result_400405 = invoke(stypy.reporting.localization.Localization(__file__, 1515, 45), dtype_400401, *[dtype_400403], **kwargs_400404)
        
        # Obtaining the member 'char' of a type (line 1515)
        char_400406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 45), dtype_call_result_400405, 'char')
        # Obtaining the member 'lower' of a type (line 1515)
        lower_400407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1515, 45), char_400406, 'lower')
        # Calling lower(args, kwargs) (line 1515)
        lower_call_result_400409 = invoke(stypy.reporting.localization.Localization(__file__, 1515, 45), lower_400407, *[], **kwargs_400408)
        
        # Applying the binary operator '!=' (line 1515)
        result_ne_400410 = python_operator(stypy.reporting.localization.Localization(__file__, 1515, 11), '!=', lower_call_result_400399, lower_call_result_400409)
        
        # Testing the type of an if condition (line 1515)
        if_condition_400411 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1515, 8), result_ne_400410)
        # Assigning a type to the variable 'if_condition_400411' (line 1515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1515, 8), 'if_condition_400411', if_condition_400411)
        # SSA begins for if statement (line 1515)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 1516, 12))
        
        # 'import warnings' statement (line 1516)
        import warnings

        import_module(stypy.reporting.localization.Localization(__file__, 1516, 12), 'warnings', warnings, module_type_store)
        
        
        # Call to warn(...): (line 1517)
        # Processing the call arguments (line 1517)
        str_400414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1517, 26), 'str', 'M does not have the same type precision as A. This may adversely affect ARPACK convergence')
        # Processing the call keyword arguments (line 1517)
        kwargs_400415 = {}
        # Getting the type of 'warnings' (line 1517)
        warnings_400412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1517, 12), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 1517)
        warn_400413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1517, 12), warnings_400412, 'warn')
        # Calling warn(args, kwargs) (line 1517)
        warn_call_result_400416 = invoke(stypy.reporting.localization.Localization(__file__, 1517, 12), warn_400413, *[str_400414], **kwargs_400415)
        
        # SSA join for if statement (line 1515)
        module_type_store = module_type_store.join_ssa_context()
        

        if more_types_in_union_400373:
            # SSA join for if statement (line 1511)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Subscript to a Name (line 1519):
    
    # Assigning a Subscript to a Name (line 1519):
    
    # Obtaining the type of the subscript
    int_400417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1519, 16), 'int')
    # Getting the type of 'A' (line 1519)
    A_400418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1519, 8), 'A')
    # Obtaining the member 'shape' of a type (line 1519)
    shape_400419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1519, 8), A_400418, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1519)
    getitem___400420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1519, 8), shape_400419, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1519)
    subscript_call_result_400421 = invoke(stypy.reporting.localization.Localization(__file__, 1519, 8), getitem___400420, int_400417)
    
    # Assigning a type to the variable 'n' (line 1519)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1519, 4), 'n', subscript_call_result_400421)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 1521)
    k_400422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 7), 'k')
    int_400423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1521, 12), 'int')
    # Applying the binary operator '<=' (line 1521)
    result_le_400424 = python_operator(stypy.reporting.localization.Localization(__file__, 1521, 7), '<=', k_400422, int_400423)
    
    
    # Getting the type of 'k' (line 1521)
    k_400425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 17), 'k')
    # Getting the type of 'n' (line 1521)
    n_400426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 22), 'n')
    # Applying the binary operator '>=' (line 1521)
    result_ge_400427 = python_operator(stypy.reporting.localization.Localization(__file__, 1521, 17), '>=', k_400425, n_400426)
    
    # Applying the binary operator 'or' (line 1521)
    result_or_keyword_400428 = python_operator(stypy.reporting.localization.Localization(__file__, 1521, 7), 'or', result_le_400424, result_ge_400427)
    
    # Testing the type of an if condition (line 1521)
    if_condition_400429 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1521, 4), result_or_keyword_400428)
    # Assigning a type to the variable 'if_condition_400429' (line 1521)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1521, 4), 'if_condition_400429', if_condition_400429)
    # SSA begins for if statement (line 1521)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1522)
    # Processing the call arguments (line 1522)
    str_400431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1522, 25), 'str', 'k must be between 1 and the order of the square input matrix.')
    # Processing the call keyword arguments (line 1522)
    kwargs_400432 = {}
    # Getting the type of 'ValueError' (line 1522)
    ValueError_400430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1522)
    ValueError_call_result_400433 = invoke(stypy.reporting.localization.Localization(__file__, 1522, 14), ValueError_400430, *[str_400431], **kwargs_400432)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1522, 8), ValueError_call_result_400433, 'raise parameter', BaseException)
    # SSA join for if statement (line 1521)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Type idiom detected: calculating its left and rigth part (line 1525)
    # Getting the type of 'sigma' (line 1525)
    sigma_400434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1525, 7), 'sigma')
    # Getting the type of 'None' (line 1525)
    None_400435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1525, 16), 'None')
    
    (may_be_400436, more_types_in_union_400437) = may_be_none(sigma_400434, None_400435)

    if may_be_400436:

        if more_types_in_union_400437:
            # Runtime conditional SSA (line 1525)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 1526):
        
        # Assigning a Call to a Name (line 1526):
        
        # Call to _aslinearoperator_with_dtype(...): (line 1526)
        # Processing the call arguments (line 1526)
        # Getting the type of 'A' (line 1526)
        A_400439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1526, 41), 'A', False)
        # Processing the call keyword arguments (line 1526)
        kwargs_400440 = {}
        # Getting the type of '_aslinearoperator_with_dtype' (line 1526)
        _aslinearoperator_with_dtype_400438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1526, 12), '_aslinearoperator_with_dtype', False)
        # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1526)
        _aslinearoperator_with_dtype_call_result_400441 = invoke(stypy.reporting.localization.Localization(__file__, 1526, 12), _aslinearoperator_with_dtype_400438, *[A_400439], **kwargs_400440)
        
        # Assigning a type to the variable 'A' (line 1526)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1526, 8), 'A', _aslinearoperator_with_dtype_call_result_400441)
        
        # Assigning a Attribute to a Name (line 1527):
        
        # Assigning a Attribute to a Name (line 1527):
        # Getting the type of 'A' (line 1527)
        A_400442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 17), 'A')
        # Obtaining the member 'matvec' of a type (line 1527)
        matvec_400443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1527, 17), A_400442, 'matvec')
        # Assigning a type to the variable 'matvec' (line 1527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1527, 8), 'matvec', matvec_400443)
        
        # Type idiom detected: calculating its left and rigth part (line 1529)
        # Getting the type of 'OPinv' (line 1529)
        OPinv_400444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1529, 8), 'OPinv')
        # Getting the type of 'None' (line 1529)
        None_400445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1529, 24), 'None')
        
        (may_be_400446, more_types_in_union_400447) = may_not_be_none(OPinv_400444, None_400445)

        if may_be_400446:

            if more_types_in_union_400447:
                # Runtime conditional SSA (line 1529)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 1530)
            # Processing the call arguments (line 1530)
            str_400449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1530, 29), 'str', 'OPinv should not be specified with sigma = None.')
            # Processing the call keyword arguments (line 1530)
            kwargs_400450 = {}
            # Getting the type of 'ValueError' (line 1530)
            ValueError_400448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1530, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 1530)
            ValueError_call_result_400451 = invoke(stypy.reporting.localization.Localization(__file__, 1530, 18), ValueError_400448, *[str_400449], **kwargs_400450)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1530, 12), ValueError_call_result_400451, 'raise parameter', BaseException)

            if more_types_in_union_400447:
                # SSA join for if statement (line 1529)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1532)
        # Getting the type of 'M' (line 1532)
        M_400452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 11), 'M')
        # Getting the type of 'None' (line 1532)
        None_400453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 16), 'None')
        
        (may_be_400454, more_types_in_union_400455) = may_be_none(M_400452, None_400453)

        if may_be_400454:

            if more_types_in_union_400455:
                # Runtime conditional SSA (line 1532)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Num to a Name (line 1534):
            
            # Assigning a Num to a Name (line 1534):
            int_400456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1534, 19), 'int')
            # Assigning a type to the variable 'mode' (line 1534)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1534, 12), 'mode', int_400456)
            
            # Assigning a Name to a Name (line 1535):
            
            # Assigning a Name to a Name (line 1535):
            # Getting the type of 'None' (line 1535)
            None_400457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1535, 23), 'None')
            # Assigning a type to the variable 'M_matvec' (line 1535)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1535, 12), 'M_matvec', None_400457)
            
            # Assigning a Name to a Name (line 1536):
            
            # Assigning a Name to a Name (line 1536):
            # Getting the type of 'None' (line 1536)
            None_400458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1536, 26), 'None')
            # Assigning a type to the variable 'Minv_matvec' (line 1536)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1536, 12), 'Minv_matvec', None_400458)
            
            # Type idiom detected: calculating its left and rigth part (line 1537)
            # Getting the type of 'Minv' (line 1537)
            Minv_400459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1537, 12), 'Minv')
            # Getting the type of 'None' (line 1537)
            None_400460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1537, 27), 'None')
            
            (may_be_400461, more_types_in_union_400462) = may_not_be_none(Minv_400459, None_400460)

            if may_be_400461:

                if more_types_in_union_400462:
                    # Runtime conditional SSA (line 1537)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Call to ValueError(...): (line 1538)
                # Processing the call arguments (line 1538)
                str_400464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1538, 33), 'str', 'Minv should not be specified with M = None.')
                # Processing the call keyword arguments (line 1538)
                kwargs_400465 = {}
                # Getting the type of 'ValueError' (line 1538)
                ValueError_400463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1538, 22), 'ValueError', False)
                # Calling ValueError(args, kwargs) (line 1538)
                ValueError_call_result_400466 = invoke(stypy.reporting.localization.Localization(__file__, 1538, 22), ValueError_400463, *[str_400464], **kwargs_400465)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1538, 16), ValueError_call_result_400466, 'raise parameter', BaseException)

                if more_types_in_union_400462:
                    # SSA join for if statement (line 1537)
                    module_type_store = module_type_store.join_ssa_context()


            

            if more_types_in_union_400455:
                # Runtime conditional SSA for else branch (line 1532)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_400454) or more_types_in_union_400455):
            
            # Assigning a Num to a Name (line 1542):
            
            # Assigning a Num to a Name (line 1542):
            int_400467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1542, 19), 'int')
            # Assigning a type to the variable 'mode' (line 1542)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1542, 12), 'mode', int_400467)
            
            # Type idiom detected: calculating its left and rigth part (line 1543)
            # Getting the type of 'Minv' (line 1543)
            Minv_400468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 15), 'Minv')
            # Getting the type of 'None' (line 1543)
            None_400469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 23), 'None')
            
            (may_be_400470, more_types_in_union_400471) = may_be_none(Minv_400468, None_400469)

            if may_be_400470:

                if more_types_in_union_400471:
                    # Runtime conditional SSA (line 1543)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1544):
                
                # Assigning a Call to a Name (line 1544):
                
                # Call to get_inv_matvec(...): (line 1544)
                # Processing the call arguments (line 1544)
                # Getting the type of 'M' (line 1544)
                M_400473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1544, 45), 'M', False)
                # Processing the call keyword arguments (line 1544)
                # Getting the type of 'True' (line 1544)
                True_400474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1544, 58), 'True', False)
                keyword_400475 = True_400474
                # Getting the type of 'tol' (line 1544)
                tol_400476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1544, 68), 'tol', False)
                keyword_400477 = tol_400476
                kwargs_400478 = {'symmetric': keyword_400475, 'tol': keyword_400477}
                # Getting the type of 'get_inv_matvec' (line 1544)
                get_inv_matvec_400472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1544, 30), 'get_inv_matvec', False)
                # Calling get_inv_matvec(args, kwargs) (line 1544)
                get_inv_matvec_call_result_400479 = invoke(stypy.reporting.localization.Localization(__file__, 1544, 30), get_inv_matvec_400472, *[M_400473], **kwargs_400478)
                
                # Assigning a type to the variable 'Minv_matvec' (line 1544)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1544, 16), 'Minv_matvec', get_inv_matvec_call_result_400479)

                if more_types_in_union_400471:
                    # Runtime conditional SSA for else branch (line 1543)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_400470) or more_types_in_union_400471):
                
                # Assigning a Call to a Name (line 1546):
                
                # Assigning a Call to a Name (line 1546):
                
                # Call to _aslinearoperator_with_dtype(...): (line 1546)
                # Processing the call arguments (line 1546)
                # Getting the type of 'Minv' (line 1546)
                Minv_400481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 52), 'Minv', False)
                # Processing the call keyword arguments (line 1546)
                kwargs_400482 = {}
                # Getting the type of '_aslinearoperator_with_dtype' (line 1546)
                _aslinearoperator_with_dtype_400480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 23), '_aslinearoperator_with_dtype', False)
                # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1546)
                _aslinearoperator_with_dtype_call_result_400483 = invoke(stypy.reporting.localization.Localization(__file__, 1546, 23), _aslinearoperator_with_dtype_400480, *[Minv_400481], **kwargs_400482)
                
                # Assigning a type to the variable 'Minv' (line 1546)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1546, 16), 'Minv', _aslinearoperator_with_dtype_call_result_400483)
                
                # Assigning a Attribute to a Name (line 1547):
                
                # Assigning a Attribute to a Name (line 1547):
                # Getting the type of 'Minv' (line 1547)
                Minv_400484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1547, 30), 'Minv')
                # Obtaining the member 'matvec' of a type (line 1547)
                matvec_400485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1547, 30), Minv_400484, 'matvec')
                # Assigning a type to the variable 'Minv_matvec' (line 1547)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1547, 16), 'Minv_matvec', matvec_400485)

                if (may_be_400470 and more_types_in_union_400471):
                    # SSA join for if statement (line 1543)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Assigning a Attribute to a Name (line 1548):
            
            # Assigning a Attribute to a Name (line 1548):
            
            # Call to _aslinearoperator_with_dtype(...): (line 1548)
            # Processing the call arguments (line 1548)
            # Getting the type of 'M' (line 1548)
            M_400487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1548, 52), 'M', False)
            # Processing the call keyword arguments (line 1548)
            kwargs_400488 = {}
            # Getting the type of '_aslinearoperator_with_dtype' (line 1548)
            _aslinearoperator_with_dtype_400486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1548, 23), '_aslinearoperator_with_dtype', False)
            # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1548)
            _aslinearoperator_with_dtype_call_result_400489 = invoke(stypy.reporting.localization.Localization(__file__, 1548, 23), _aslinearoperator_with_dtype_400486, *[M_400487], **kwargs_400488)
            
            # Obtaining the member 'matvec' of a type (line 1548)
            matvec_400490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1548, 23), _aslinearoperator_with_dtype_call_result_400489, 'matvec')
            # Assigning a type to the variable 'M_matvec' (line 1548)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1548, 12), 'M_matvec', matvec_400490)

            if (may_be_400454 and more_types_in_union_400455):
                # SSA join for if statement (line 1532)
                module_type_store = module_type_store.join_ssa_context()


        

        if more_types_in_union_400437:
            # Runtime conditional SSA for else branch (line 1525)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_400436) or more_types_in_union_400437):
        
        # Type idiom detected: calculating its left and rigth part (line 1551)
        # Getting the type of 'Minv' (line 1551)
        Minv_400491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1551, 8), 'Minv')
        # Getting the type of 'None' (line 1551)
        None_400492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1551, 23), 'None')
        
        (may_be_400493, more_types_in_union_400494) = may_not_be_none(Minv_400491, None_400492)

        if may_be_400493:

            if more_types_in_union_400494:
                # Runtime conditional SSA (line 1551)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 1552)
            # Processing the call arguments (line 1552)
            str_400496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1552, 29), 'str', 'Minv should not be specified when sigma is')
            # Processing the call keyword arguments (line 1552)
            kwargs_400497 = {}
            # Getting the type of 'ValueError' (line 1552)
            ValueError_400495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1552, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 1552)
            ValueError_call_result_400498 = invoke(stypy.reporting.localization.Localization(__file__, 1552, 18), ValueError_400495, *[str_400496], **kwargs_400497)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1552, 12), ValueError_call_result_400498, 'raise parameter', BaseException)

            if more_types_in_union_400494:
                # SSA join for if statement (line 1551)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Getting the type of 'mode' (line 1555)
        mode_400499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1555, 11), 'mode')
        str_400500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1555, 19), 'str', 'normal')
        # Applying the binary operator '==' (line 1555)
        result_eq_400501 = python_operator(stypy.reporting.localization.Localization(__file__, 1555, 11), '==', mode_400499, str_400500)
        
        # Testing the type of an if condition (line 1555)
        if_condition_400502 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1555, 8), result_eq_400501)
        # Assigning a type to the variable 'if_condition_400502' (line 1555)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1555, 8), 'if_condition_400502', if_condition_400502)
        # SSA begins for if statement (line 1555)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 1556):
        
        # Assigning a Num to a Name (line 1556):
        int_400503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1556, 19), 'int')
        # Assigning a type to the variable 'mode' (line 1556)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1556, 12), 'mode', int_400503)
        
        # Assigning a Name to a Name (line 1557):
        
        # Assigning a Name to a Name (line 1557):
        # Getting the type of 'None' (line 1557)
        None_400504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1557, 21), 'None')
        # Assigning a type to the variable 'matvec' (line 1557)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1557, 12), 'matvec', None_400504)
        
        # Type idiom detected: calculating its left and rigth part (line 1558)
        # Getting the type of 'OPinv' (line 1558)
        OPinv_400505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1558, 15), 'OPinv')
        # Getting the type of 'None' (line 1558)
        None_400506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1558, 24), 'None')
        
        (may_be_400507, more_types_in_union_400508) = may_be_none(OPinv_400505, None_400506)

        if may_be_400507:

            if more_types_in_union_400508:
                # Runtime conditional SSA (line 1558)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1559):
            
            # Assigning a Call to a Name (line 1559):
            
            # Call to get_OPinv_matvec(...): (line 1559)
            # Processing the call arguments (line 1559)
            # Getting the type of 'A' (line 1559)
            A_400510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 47), 'A', False)
            # Getting the type of 'M' (line 1559)
            M_400511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 50), 'M', False)
            # Getting the type of 'sigma' (line 1559)
            sigma_400512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 53), 'sigma', False)
            # Processing the call keyword arguments (line 1559)
            # Getting the type of 'True' (line 1560)
            True_400513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 57), 'True', False)
            keyword_400514 = True_400513
            # Getting the type of 'tol' (line 1560)
            tol_400515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 67), 'tol', False)
            keyword_400516 = tol_400515
            kwargs_400517 = {'symmetric': keyword_400514, 'tol': keyword_400516}
            # Getting the type of 'get_OPinv_matvec' (line 1559)
            get_OPinv_matvec_400509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 30), 'get_OPinv_matvec', False)
            # Calling get_OPinv_matvec(args, kwargs) (line 1559)
            get_OPinv_matvec_call_result_400518 = invoke(stypy.reporting.localization.Localization(__file__, 1559, 30), get_OPinv_matvec_400509, *[A_400510, M_400511, sigma_400512], **kwargs_400517)
            
            # Assigning a type to the variable 'Minv_matvec' (line 1559)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1559, 16), 'Minv_matvec', get_OPinv_matvec_call_result_400518)

            if more_types_in_union_400508:
                # Runtime conditional SSA for else branch (line 1558)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_400507) or more_types_in_union_400508):
            
            # Assigning a Call to a Name (line 1562):
            
            # Assigning a Call to a Name (line 1562):
            
            # Call to _aslinearoperator_with_dtype(...): (line 1562)
            # Processing the call arguments (line 1562)
            # Getting the type of 'OPinv' (line 1562)
            OPinv_400520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 53), 'OPinv', False)
            # Processing the call keyword arguments (line 1562)
            kwargs_400521 = {}
            # Getting the type of '_aslinearoperator_with_dtype' (line 1562)
            _aslinearoperator_with_dtype_400519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 24), '_aslinearoperator_with_dtype', False)
            # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1562)
            _aslinearoperator_with_dtype_call_result_400522 = invoke(stypy.reporting.localization.Localization(__file__, 1562, 24), _aslinearoperator_with_dtype_400519, *[OPinv_400520], **kwargs_400521)
            
            # Assigning a type to the variable 'OPinv' (line 1562)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1562, 16), 'OPinv', _aslinearoperator_with_dtype_call_result_400522)
            
            # Assigning a Attribute to a Name (line 1563):
            
            # Assigning a Attribute to a Name (line 1563):
            # Getting the type of 'OPinv' (line 1563)
            OPinv_400523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1563, 30), 'OPinv')
            # Obtaining the member 'matvec' of a type (line 1563)
            matvec_400524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1563, 30), OPinv_400523, 'matvec')
            # Assigning a type to the variable 'Minv_matvec' (line 1563)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1563, 16), 'Minv_matvec', matvec_400524)

            if (may_be_400507 and more_types_in_union_400508):
                # SSA join for if statement (line 1558)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1564)
        # Getting the type of 'M' (line 1564)
        M_400525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1564, 15), 'M')
        # Getting the type of 'None' (line 1564)
        None_400526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1564, 20), 'None')
        
        (may_be_400527, more_types_in_union_400528) = may_be_none(M_400525, None_400526)

        if may_be_400527:

            if more_types_in_union_400528:
                # Runtime conditional SSA (line 1564)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Name (line 1565):
            
            # Assigning a Name to a Name (line 1565):
            # Getting the type of 'None' (line 1565)
            None_400529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 27), 'None')
            # Assigning a type to the variable 'M_matvec' (line 1565)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1565, 16), 'M_matvec', None_400529)

            if more_types_in_union_400528:
                # Runtime conditional SSA for else branch (line 1564)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_400527) or more_types_in_union_400528):
            
            # Assigning a Call to a Name (line 1567):
            
            # Assigning a Call to a Name (line 1567):
            
            # Call to _aslinearoperator_with_dtype(...): (line 1567)
            # Processing the call arguments (line 1567)
            # Getting the type of 'M' (line 1567)
            M_400531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1567, 49), 'M', False)
            # Processing the call keyword arguments (line 1567)
            kwargs_400532 = {}
            # Getting the type of '_aslinearoperator_with_dtype' (line 1567)
            _aslinearoperator_with_dtype_400530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1567, 20), '_aslinearoperator_with_dtype', False)
            # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1567)
            _aslinearoperator_with_dtype_call_result_400533 = invoke(stypy.reporting.localization.Localization(__file__, 1567, 20), _aslinearoperator_with_dtype_400530, *[M_400531], **kwargs_400532)
            
            # Assigning a type to the variable 'M' (line 1567)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1567, 16), 'M', _aslinearoperator_with_dtype_call_result_400533)
            
            # Assigning a Attribute to a Name (line 1568):
            
            # Assigning a Attribute to a Name (line 1568):
            # Getting the type of 'M' (line 1568)
            M_400534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1568, 27), 'M')
            # Obtaining the member 'matvec' of a type (line 1568)
            matvec_400535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1568, 27), M_400534, 'matvec')
            # Assigning a type to the variable 'M_matvec' (line 1568)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1568, 16), 'M_matvec', matvec_400535)

            if (may_be_400527 and more_types_in_union_400528):
                # SSA join for if statement (line 1564)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA branch for the else part of an if statement (line 1555)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 1571)
        mode_400536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 13), 'mode')
        str_400537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1571, 21), 'str', 'buckling')
        # Applying the binary operator '==' (line 1571)
        result_eq_400538 = python_operator(stypy.reporting.localization.Localization(__file__, 1571, 13), '==', mode_400536, str_400537)
        
        # Testing the type of an if condition (line 1571)
        if_condition_400539 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1571, 13), result_eq_400538)
        # Assigning a type to the variable 'if_condition_400539' (line 1571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1571, 13), 'if_condition_400539', if_condition_400539)
        # SSA begins for if statement (line 1571)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 1572):
        
        # Assigning a Num to a Name (line 1572):
        int_400540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1572, 19), 'int')
        # Assigning a type to the variable 'mode' (line 1572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1572, 12), 'mode', int_400540)
        
        # Type idiom detected: calculating its left and rigth part (line 1573)
        # Getting the type of 'OPinv' (line 1573)
        OPinv_400541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1573, 15), 'OPinv')
        # Getting the type of 'None' (line 1573)
        None_400542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1573, 24), 'None')
        
        (may_be_400543, more_types_in_union_400544) = may_be_none(OPinv_400541, None_400542)

        if may_be_400543:

            if more_types_in_union_400544:
                # Runtime conditional SSA (line 1573)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1574):
            
            # Assigning a Call to a Name (line 1574):
            
            # Call to get_OPinv_matvec(...): (line 1574)
            # Processing the call arguments (line 1574)
            # Getting the type of 'A' (line 1574)
            A_400546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 47), 'A', False)
            # Getting the type of 'M' (line 1574)
            M_400547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 50), 'M', False)
            # Getting the type of 'sigma' (line 1574)
            sigma_400548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 53), 'sigma', False)
            # Processing the call keyword arguments (line 1574)
            # Getting the type of 'True' (line 1575)
            True_400549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 57), 'True', False)
            keyword_400550 = True_400549
            # Getting the type of 'tol' (line 1575)
            tol_400551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 67), 'tol', False)
            keyword_400552 = tol_400551
            kwargs_400553 = {'symmetric': keyword_400550, 'tol': keyword_400552}
            # Getting the type of 'get_OPinv_matvec' (line 1574)
            get_OPinv_matvec_400545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 30), 'get_OPinv_matvec', False)
            # Calling get_OPinv_matvec(args, kwargs) (line 1574)
            get_OPinv_matvec_call_result_400554 = invoke(stypy.reporting.localization.Localization(__file__, 1574, 30), get_OPinv_matvec_400545, *[A_400546, M_400547, sigma_400548], **kwargs_400553)
            
            # Assigning a type to the variable 'Minv_matvec' (line 1574)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1574, 16), 'Minv_matvec', get_OPinv_matvec_call_result_400554)

            if more_types_in_union_400544:
                # Runtime conditional SSA for else branch (line 1573)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_400543) or more_types_in_union_400544):
            
            # Assigning a Attribute to a Name (line 1577):
            
            # Assigning a Attribute to a Name (line 1577):
            
            # Call to _aslinearoperator_with_dtype(...): (line 1577)
            # Processing the call arguments (line 1577)
            # Getting the type of 'OPinv' (line 1577)
            OPinv_400556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 59), 'OPinv', False)
            # Processing the call keyword arguments (line 1577)
            kwargs_400557 = {}
            # Getting the type of '_aslinearoperator_with_dtype' (line 1577)
            _aslinearoperator_with_dtype_400555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1577, 30), '_aslinearoperator_with_dtype', False)
            # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1577)
            _aslinearoperator_with_dtype_call_result_400558 = invoke(stypy.reporting.localization.Localization(__file__, 1577, 30), _aslinearoperator_with_dtype_400555, *[OPinv_400556], **kwargs_400557)
            
            # Obtaining the member 'matvec' of a type (line 1577)
            matvec_400559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1577, 30), _aslinearoperator_with_dtype_call_result_400558, 'matvec')
            # Assigning a type to the variable 'Minv_matvec' (line 1577)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1577, 16), 'Minv_matvec', matvec_400559)

            if (may_be_400543 and more_types_in_union_400544):
                # SSA join for if statement (line 1573)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Attribute to a Name (line 1578):
        
        # Assigning a Attribute to a Name (line 1578):
        
        # Call to _aslinearoperator_with_dtype(...): (line 1578)
        # Processing the call arguments (line 1578)
        # Getting the type of 'A' (line 1578)
        A_400561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1578, 50), 'A', False)
        # Processing the call keyword arguments (line 1578)
        kwargs_400562 = {}
        # Getting the type of '_aslinearoperator_with_dtype' (line 1578)
        _aslinearoperator_with_dtype_400560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1578, 21), '_aslinearoperator_with_dtype', False)
        # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1578)
        _aslinearoperator_with_dtype_call_result_400563 = invoke(stypy.reporting.localization.Localization(__file__, 1578, 21), _aslinearoperator_with_dtype_400560, *[A_400561], **kwargs_400562)
        
        # Obtaining the member 'matvec' of a type (line 1578)
        matvec_400564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1578, 21), _aslinearoperator_with_dtype_call_result_400563, 'matvec')
        # Assigning a type to the variable 'matvec' (line 1578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1578, 12), 'matvec', matvec_400564)
        
        # Assigning a Name to a Name (line 1579):
        
        # Assigning a Name to a Name (line 1579):
        # Getting the type of 'None' (line 1579)
        None_400565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 23), 'None')
        # Assigning a type to the variable 'M_matvec' (line 1579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1579, 12), 'M_matvec', None_400565)
        # SSA branch for the else part of an if statement (line 1571)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'mode' (line 1582)
        mode_400566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1582, 13), 'mode')
        str_400567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1582, 21), 'str', 'cayley')
        # Applying the binary operator '==' (line 1582)
        result_eq_400568 = python_operator(stypy.reporting.localization.Localization(__file__, 1582, 13), '==', mode_400566, str_400567)
        
        # Testing the type of an if condition (line 1582)
        if_condition_400569 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1582, 13), result_eq_400568)
        # Assigning a type to the variable 'if_condition_400569' (line 1582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1582, 13), 'if_condition_400569', if_condition_400569)
        # SSA begins for if statement (line 1582)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 1583):
        
        # Assigning a Num to a Name (line 1583):
        int_400570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1583, 19), 'int')
        # Assigning a type to the variable 'mode' (line 1583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1583, 12), 'mode', int_400570)
        
        # Assigning a Attribute to a Name (line 1584):
        
        # Assigning a Attribute to a Name (line 1584):
        
        # Call to _aslinearoperator_with_dtype(...): (line 1584)
        # Processing the call arguments (line 1584)
        # Getting the type of 'A' (line 1584)
        A_400572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1584, 50), 'A', False)
        # Processing the call keyword arguments (line 1584)
        kwargs_400573 = {}
        # Getting the type of '_aslinearoperator_with_dtype' (line 1584)
        _aslinearoperator_with_dtype_400571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1584, 21), '_aslinearoperator_with_dtype', False)
        # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1584)
        _aslinearoperator_with_dtype_call_result_400574 = invoke(stypy.reporting.localization.Localization(__file__, 1584, 21), _aslinearoperator_with_dtype_400571, *[A_400572], **kwargs_400573)
        
        # Obtaining the member 'matvec' of a type (line 1584)
        matvec_400575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1584, 21), _aslinearoperator_with_dtype_call_result_400574, 'matvec')
        # Assigning a type to the variable 'matvec' (line 1584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1584, 12), 'matvec', matvec_400575)
        
        # Type idiom detected: calculating its left and rigth part (line 1585)
        # Getting the type of 'OPinv' (line 1585)
        OPinv_400576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 15), 'OPinv')
        # Getting the type of 'None' (line 1585)
        None_400577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 24), 'None')
        
        (may_be_400578, more_types_in_union_400579) = may_be_none(OPinv_400576, None_400577)

        if may_be_400578:

            if more_types_in_union_400579:
                # Runtime conditional SSA (line 1585)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1586):
            
            # Assigning a Call to a Name (line 1586):
            
            # Call to get_OPinv_matvec(...): (line 1586)
            # Processing the call arguments (line 1586)
            # Getting the type of 'A' (line 1586)
            A_400581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 47), 'A', False)
            # Getting the type of 'M' (line 1586)
            M_400582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 50), 'M', False)
            # Getting the type of 'sigma' (line 1586)
            sigma_400583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 53), 'sigma', False)
            # Processing the call keyword arguments (line 1586)
            # Getting the type of 'True' (line 1587)
            True_400584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 57), 'True', False)
            keyword_400585 = True_400584
            # Getting the type of 'tol' (line 1587)
            tol_400586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 67), 'tol', False)
            keyword_400587 = tol_400586
            kwargs_400588 = {'symmetric': keyword_400585, 'tol': keyword_400587}
            # Getting the type of 'get_OPinv_matvec' (line 1586)
            get_OPinv_matvec_400580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 30), 'get_OPinv_matvec', False)
            # Calling get_OPinv_matvec(args, kwargs) (line 1586)
            get_OPinv_matvec_call_result_400589 = invoke(stypy.reporting.localization.Localization(__file__, 1586, 30), get_OPinv_matvec_400580, *[A_400581, M_400582, sigma_400583], **kwargs_400588)
            
            # Assigning a type to the variable 'Minv_matvec' (line 1586)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1586, 16), 'Minv_matvec', get_OPinv_matvec_call_result_400589)

            if more_types_in_union_400579:
                # Runtime conditional SSA for else branch (line 1585)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_400578) or more_types_in_union_400579):
            
            # Assigning a Attribute to a Name (line 1589):
            
            # Assigning a Attribute to a Name (line 1589):
            
            # Call to _aslinearoperator_with_dtype(...): (line 1589)
            # Processing the call arguments (line 1589)
            # Getting the type of 'OPinv' (line 1589)
            OPinv_400591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1589, 59), 'OPinv', False)
            # Processing the call keyword arguments (line 1589)
            kwargs_400592 = {}
            # Getting the type of '_aslinearoperator_with_dtype' (line 1589)
            _aslinearoperator_with_dtype_400590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1589, 30), '_aslinearoperator_with_dtype', False)
            # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1589)
            _aslinearoperator_with_dtype_call_result_400593 = invoke(stypy.reporting.localization.Localization(__file__, 1589, 30), _aslinearoperator_with_dtype_400590, *[OPinv_400591], **kwargs_400592)
            
            # Obtaining the member 'matvec' of a type (line 1589)
            matvec_400594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1589, 30), _aslinearoperator_with_dtype_call_result_400593, 'matvec')
            # Assigning a type to the variable 'Minv_matvec' (line 1589)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1589, 16), 'Minv_matvec', matvec_400594)

            if (may_be_400578 and more_types_in_union_400579):
                # SSA join for if statement (line 1585)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1590)
        # Getting the type of 'M' (line 1590)
        M_400595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 15), 'M')
        # Getting the type of 'None' (line 1590)
        None_400596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1590, 20), 'None')
        
        (may_be_400597, more_types_in_union_400598) = may_be_none(M_400595, None_400596)

        if may_be_400597:

            if more_types_in_union_400598:
                # Runtime conditional SSA (line 1590)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Name (line 1591):
            
            # Assigning a Name to a Name (line 1591):
            # Getting the type of 'None' (line 1591)
            None_400599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1591, 27), 'None')
            # Assigning a type to the variable 'M_matvec' (line 1591)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1591, 16), 'M_matvec', None_400599)

            if more_types_in_union_400598:
                # Runtime conditional SSA for else branch (line 1590)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_400597) or more_types_in_union_400598):
            
            # Assigning a Attribute to a Name (line 1593):
            
            # Assigning a Attribute to a Name (line 1593):
            
            # Call to _aslinearoperator_with_dtype(...): (line 1593)
            # Processing the call arguments (line 1593)
            # Getting the type of 'M' (line 1593)
            M_400601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 56), 'M', False)
            # Processing the call keyword arguments (line 1593)
            kwargs_400602 = {}
            # Getting the type of '_aslinearoperator_with_dtype' (line 1593)
            _aslinearoperator_with_dtype_400600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 27), '_aslinearoperator_with_dtype', False)
            # Calling _aslinearoperator_with_dtype(args, kwargs) (line 1593)
            _aslinearoperator_with_dtype_call_result_400603 = invoke(stypy.reporting.localization.Localization(__file__, 1593, 27), _aslinearoperator_with_dtype_400600, *[M_400601], **kwargs_400602)
            
            # Obtaining the member 'matvec' of a type (line 1593)
            matvec_400604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1593, 27), _aslinearoperator_with_dtype_call_result_400603, 'matvec')
            # Assigning a type to the variable 'M_matvec' (line 1593)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1593, 16), 'M_matvec', matvec_400604)

            if (may_be_400597 and more_types_in_union_400598):
                # SSA join for if statement (line 1590)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA branch for the else part of an if statement (line 1582)
        module_type_store.open_ssa_branch('else')
        
        # Call to ValueError(...): (line 1597)
        # Processing the call arguments (line 1597)
        str_400606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1597, 29), 'str', "unrecognized mode '%s'")
        # Getting the type of 'mode' (line 1597)
        mode_400607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 56), 'mode', False)
        # Applying the binary operator '%' (line 1597)
        result_mod_400608 = python_operator(stypy.reporting.localization.Localization(__file__, 1597, 29), '%', str_400606, mode_400607)
        
        # Processing the call keyword arguments (line 1597)
        kwargs_400609 = {}
        # Getting the type of 'ValueError' (line 1597)
        ValueError_400605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1597)
        ValueError_call_result_400610 = invoke(stypy.reporting.localization.Localization(__file__, 1597, 18), ValueError_400605, *[result_mod_400608], **kwargs_400609)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1597, 12), ValueError_call_result_400610, 'raise parameter', BaseException)
        # SSA join for if statement (line 1582)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1571)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1555)
        module_type_store = module_type_store.join_ssa_context()
        

        if (may_be_400436 and more_types_in_union_400437):
            # SSA join for if statement (line 1525)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 1599):
    
    # Assigning a Call to a Name (line 1599):
    
    # Call to _SymmetricArpackParams(...): (line 1599)
    # Processing the call arguments (line 1599)
    # Getting the type of 'n' (line 1599)
    n_400612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 36), 'n', False)
    # Getting the type of 'k' (line 1599)
    k_400613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 39), 'k', False)
    # Getting the type of 'A' (line 1599)
    A_400614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 42), 'A', False)
    # Obtaining the member 'dtype' of a type (line 1599)
    dtype_400615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1599, 42), A_400614, 'dtype')
    # Obtaining the member 'char' of a type (line 1599)
    char_400616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1599, 42), dtype_400615, 'char')
    # Getting the type of 'matvec' (line 1599)
    matvec_400617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 56), 'matvec', False)
    # Getting the type of 'mode' (line 1599)
    mode_400618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 64), 'mode', False)
    # Getting the type of 'M_matvec' (line 1600)
    M_matvec_400619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 36), 'M_matvec', False)
    # Getting the type of 'Minv_matvec' (line 1600)
    Minv_matvec_400620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 46), 'Minv_matvec', False)
    # Getting the type of 'sigma' (line 1600)
    sigma_400621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 59), 'sigma', False)
    # Getting the type of 'ncv' (line 1601)
    ncv_400622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 36), 'ncv', False)
    # Getting the type of 'v0' (line 1601)
    v0_400623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 41), 'v0', False)
    # Getting the type of 'maxiter' (line 1601)
    maxiter_400624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 45), 'maxiter', False)
    # Getting the type of 'which' (line 1601)
    which_400625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 54), 'which', False)
    # Getting the type of 'tol' (line 1601)
    tol_400626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 61), 'tol', False)
    # Processing the call keyword arguments (line 1599)
    kwargs_400627 = {}
    # Getting the type of '_SymmetricArpackParams' (line 1599)
    _SymmetricArpackParams_400611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 13), '_SymmetricArpackParams', False)
    # Calling _SymmetricArpackParams(args, kwargs) (line 1599)
    _SymmetricArpackParams_call_result_400628 = invoke(stypy.reporting.localization.Localization(__file__, 1599, 13), _SymmetricArpackParams_400611, *[n_400612, k_400613, char_400616, matvec_400617, mode_400618, M_matvec_400619, Minv_matvec_400620, sigma_400621, ncv_400622, v0_400623, maxiter_400624, which_400625, tol_400626], **kwargs_400627)
    
    # Assigning a type to the variable 'params' (line 1599)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1599, 4), 'params', _SymmetricArpackParams_call_result_400628)
    # Getting the type of '_ARPACK_LOCK' (line 1603)
    _ARPACK_LOCK_400629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1603, 9), '_ARPACK_LOCK')
    with_400630 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1603, 9), _ARPACK_LOCK_400629, 'with parameter', '__enter__', '__exit__')

    if with_400630:
        # Calling the __enter__ method to initiate a with section
        # Obtaining the member '__enter__' of a type (line 1603)
        enter___400631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1603, 9), _ARPACK_LOCK_400629, '__enter__')
        with_enter_400632 = invoke(stypy.reporting.localization.Localization(__file__, 1603, 9), enter___400631)
        
        
        # Getting the type of 'params' (line 1604)
        params_400633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 18), 'params')
        # Obtaining the member 'converged' of a type (line 1604)
        converged_400634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1604, 18), params_400633, 'converged')
        # Applying the 'not' unary operator (line 1604)
        result_not__400635 = python_operator(stypy.reporting.localization.Localization(__file__, 1604, 14), 'not', converged_400634)
        
        # Testing the type of an if condition (line 1604)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1604, 8), result_not__400635)
        # SSA begins for while statement (line 1604)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Call to iterate(...): (line 1605)
        # Processing the call keyword arguments (line 1605)
        kwargs_400638 = {}
        # Getting the type of 'params' (line 1605)
        params_400636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 12), 'params', False)
        # Obtaining the member 'iterate' of a type (line 1605)
        iterate_400637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1605, 12), params_400636, 'iterate')
        # Calling iterate(args, kwargs) (line 1605)
        iterate_call_result_400639 = invoke(stypy.reporting.localization.Localization(__file__, 1605, 12), iterate_400637, *[], **kwargs_400638)
        
        # SSA join for while statement (line 1604)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to extract(...): (line 1607)
        # Processing the call arguments (line 1607)
        # Getting the type of 'return_eigenvectors' (line 1607)
        return_eigenvectors_400642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 30), 'return_eigenvectors', False)
        # Processing the call keyword arguments (line 1607)
        kwargs_400643 = {}
        # Getting the type of 'params' (line 1607)
        params_400640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 15), 'params', False)
        # Obtaining the member 'extract' of a type (line 1607)
        extract_400641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1607, 15), params_400640, 'extract')
        # Calling extract(args, kwargs) (line 1607)
        extract_call_result_400644 = invoke(stypy.reporting.localization.Localization(__file__, 1607, 15), extract_400641, *[return_eigenvectors_400642], **kwargs_400643)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1607)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1607, 8), 'stypy_return_type', extract_call_result_400644)
        # Calling the __exit__ method to finish a with section
        # Obtaining the member '__exit__' of a type (line 1603)
        exit___400645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1603, 9), _ARPACK_LOCK_400629, '__exit__')
        with_exit_400646 = invoke(stypy.reporting.localization.Localization(__file__, 1603, 9), exit___400645, None, None, None)

    
    # ################# End of 'eigsh(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'eigsh' in the type store
    # Getting the type of 'stypy_return_type' (line 1308)
    stypy_return_type_400647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1308, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_400647)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'eigsh'
    return stypy_return_type_400647

# Assigning a type to the variable 'eigsh' (line 1308)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1308, 0), 'eigsh', eigsh)

@norecursion
def _augmented_orthonormal_cols(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_augmented_orthonormal_cols'
    module_type_store = module_type_store.open_function_context('_augmented_orthonormal_cols', 1610, 0, False)
    
    # Passed parameters checking function
    _augmented_orthonormal_cols.stypy_localization = localization
    _augmented_orthonormal_cols.stypy_type_of_self = None
    _augmented_orthonormal_cols.stypy_type_store = module_type_store
    _augmented_orthonormal_cols.stypy_function_name = '_augmented_orthonormal_cols'
    _augmented_orthonormal_cols.stypy_param_names_list = ['x', 'k']
    _augmented_orthonormal_cols.stypy_varargs_param_name = None
    _augmented_orthonormal_cols.stypy_kwargs_param_name = None
    _augmented_orthonormal_cols.stypy_call_defaults = defaults
    _augmented_orthonormal_cols.stypy_call_varargs = varargs
    _augmented_orthonormal_cols.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_augmented_orthonormal_cols', ['x', 'k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_augmented_orthonormal_cols', localization, ['x', 'k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_augmented_orthonormal_cols(...)' code ##################

    
    # Assigning a Attribute to a Tuple (line 1612):
    
    # Assigning a Subscript to a Name (line 1612):
    
    # Obtaining the type of the subscript
    int_400648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1612, 4), 'int')
    # Getting the type of 'x' (line 1612)
    x_400649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1612, 11), 'x')
    # Obtaining the member 'shape' of a type (line 1612)
    shape_400650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1612, 11), x_400649, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1612)
    getitem___400651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1612, 4), shape_400650, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1612)
    subscript_call_result_400652 = invoke(stypy.reporting.localization.Localization(__file__, 1612, 4), getitem___400651, int_400648)
    
    # Assigning a type to the variable 'tuple_var_assignment_396033' (line 1612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1612, 4), 'tuple_var_assignment_396033', subscript_call_result_400652)
    
    # Assigning a Subscript to a Name (line 1612):
    
    # Obtaining the type of the subscript
    int_400653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1612, 4), 'int')
    # Getting the type of 'x' (line 1612)
    x_400654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1612, 11), 'x')
    # Obtaining the member 'shape' of a type (line 1612)
    shape_400655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1612, 11), x_400654, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1612)
    getitem___400656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1612, 4), shape_400655, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1612)
    subscript_call_result_400657 = invoke(stypy.reporting.localization.Localization(__file__, 1612, 4), getitem___400656, int_400653)
    
    # Assigning a type to the variable 'tuple_var_assignment_396034' (line 1612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1612, 4), 'tuple_var_assignment_396034', subscript_call_result_400657)
    
    # Assigning a Name to a Name (line 1612):
    # Getting the type of 'tuple_var_assignment_396033' (line 1612)
    tuple_var_assignment_396033_400658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1612, 4), 'tuple_var_assignment_396033')
    # Assigning a type to the variable 'n' (line 1612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1612, 4), 'n', tuple_var_assignment_396033_400658)
    
    # Assigning a Name to a Name (line 1612):
    # Getting the type of 'tuple_var_assignment_396034' (line 1612)
    tuple_var_assignment_396034_400659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1612, 4), 'tuple_var_assignment_396034')
    # Assigning a type to the variable 'm' (line 1612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1612, 7), 'm', tuple_var_assignment_396034_400659)
    
    # Assigning a Call to a Name (line 1614):
    
    # Assigning a Call to a Name (line 1614):
    
    # Call to empty(...): (line 1614)
    # Processing the call arguments (line 1614)
    
    # Obtaining an instance of the builtin type 'tuple' (line 1614)
    tuple_400662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1614, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1614)
    # Adding element type (line 1614)
    # Getting the type of 'n' (line 1614)
    n_400663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 18), 'n', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1614, 18), tuple_400662, n_400663)
    # Adding element type (line 1614)
    # Getting the type of 'm' (line 1614)
    m_400664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 21), 'm', False)
    # Getting the type of 'k' (line 1614)
    k_400665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 23), 'k', False)
    # Applying the binary operator '+' (line 1614)
    result_add_400666 = python_operator(stypy.reporting.localization.Localization(__file__, 1614, 21), '+', m_400664, k_400665)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1614, 18), tuple_400662, result_add_400666)
    
    # Processing the call keyword arguments (line 1614)
    # Getting the type of 'x' (line 1614)
    x_400667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 33), 'x', False)
    # Obtaining the member 'dtype' of a type (line 1614)
    dtype_400668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 33), x_400667, 'dtype')
    keyword_400669 = dtype_400668
    kwargs_400670 = {'dtype': keyword_400669}
    # Getting the type of 'np' (line 1614)
    np_400660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 8), 'np', False)
    # Obtaining the member 'empty' of a type (line 1614)
    empty_400661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1614, 8), np_400660, 'empty')
    # Calling empty(args, kwargs) (line 1614)
    empty_call_result_400671 = invoke(stypy.reporting.localization.Localization(__file__, 1614, 8), empty_400661, *[tuple_400662], **kwargs_400670)
    
    # Assigning a type to the variable 'y' (line 1614)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1614, 4), 'y', empty_call_result_400671)
    
    # Assigning a Name to a Subscript (line 1615):
    
    # Assigning a Name to a Subscript (line 1615):
    # Getting the type of 'x' (line 1615)
    x_400672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 15), 'x')
    # Getting the type of 'y' (line 1615)
    y_400673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 4), 'y')
    slice_400674 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1615, 4), None, None, None)
    # Getting the type of 'm' (line 1615)
    m_400675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 10), 'm')
    slice_400676 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1615, 4), None, m_400675, None)
    # Storing an element on a container (line 1615)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1615, 4), y_400673, ((slice_400674, slice_400676), x_400672))
    
    
    # Call to range(...): (line 1617)
    # Processing the call arguments (line 1617)
    # Getting the type of 'k' (line 1617)
    k_400678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1617, 19), 'k', False)
    # Processing the call keyword arguments (line 1617)
    kwargs_400679 = {}
    # Getting the type of 'range' (line 1617)
    range_400677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1617, 13), 'range', False)
    # Calling range(args, kwargs) (line 1617)
    range_call_result_400680 = invoke(stypy.reporting.localization.Localization(__file__, 1617, 13), range_400677, *[k_400678], **kwargs_400679)
    
    # Testing the type of a for loop iterable (line 1617)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1617, 4), range_call_result_400680)
    # Getting the type of the for loop variable (line 1617)
    for_loop_var_400681 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1617, 4), range_call_result_400680)
    # Assigning a type to the variable 'i' (line 1617)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1617, 4), 'i', for_loop_var_400681)
    # SSA begins for a for statement (line 1617)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 1619):
    
    # Assigning a Call to a Name (line 1619):
    
    # Call to randn(...): (line 1619)
    # Processing the call arguments (line 1619)
    # Getting the type of 'n' (line 1619)
    n_400685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 28), 'n', False)
    # Processing the call keyword arguments (line 1619)
    kwargs_400686 = {}
    # Getting the type of 'np' (line 1619)
    np_400682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1619, 12), 'np', False)
    # Obtaining the member 'random' of a type (line 1619)
    random_400683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1619, 12), np_400682, 'random')
    # Obtaining the member 'randn' of a type (line 1619)
    randn_400684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1619, 12), random_400683, 'randn')
    # Calling randn(args, kwargs) (line 1619)
    randn_call_result_400687 = invoke(stypy.reporting.localization.Localization(__file__, 1619, 12), randn_400684, *[n_400685], **kwargs_400686)
    
    # Assigning a type to the variable 'v' (line 1619)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1619, 8), 'v', randn_call_result_400687)
    
    
    # Call to iscomplexobj(...): (line 1620)
    # Processing the call arguments (line 1620)
    # Getting the type of 'x' (line 1620)
    x_400690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1620, 27), 'x', False)
    # Processing the call keyword arguments (line 1620)
    kwargs_400691 = {}
    # Getting the type of 'np' (line 1620)
    np_400688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1620, 11), 'np', False)
    # Obtaining the member 'iscomplexobj' of a type (line 1620)
    iscomplexobj_400689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1620, 11), np_400688, 'iscomplexobj')
    # Calling iscomplexobj(args, kwargs) (line 1620)
    iscomplexobj_call_result_400692 = invoke(stypy.reporting.localization.Localization(__file__, 1620, 11), iscomplexobj_400689, *[x_400690], **kwargs_400691)
    
    # Testing the type of an if condition (line 1620)
    if_condition_400693 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1620, 8), iscomplexobj_call_result_400692)
    # Assigning a type to the variable 'if_condition_400693' (line 1620)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1620, 8), 'if_condition_400693', if_condition_400693)
    # SSA begins for if statement (line 1620)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 1621):
    
    # Assigning a BinOp to a Name (line 1621):
    # Getting the type of 'v' (line 1621)
    v_400694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 16), 'v')
    complex_400695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1621, 20), 'complex')
    
    # Call to randn(...): (line 1621)
    # Processing the call arguments (line 1621)
    # Getting the type of 'n' (line 1621)
    n_400699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 39), 'n', False)
    # Processing the call keyword arguments (line 1621)
    kwargs_400700 = {}
    # Getting the type of 'np' (line 1621)
    np_400696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 23), 'np', False)
    # Obtaining the member 'random' of a type (line 1621)
    random_400697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1621, 23), np_400696, 'random')
    # Obtaining the member 'randn' of a type (line 1621)
    randn_400698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1621, 23), random_400697, 'randn')
    # Calling randn(args, kwargs) (line 1621)
    randn_call_result_400701 = invoke(stypy.reporting.localization.Localization(__file__, 1621, 23), randn_400698, *[n_400699], **kwargs_400700)
    
    # Applying the binary operator '*' (line 1621)
    result_mul_400702 = python_operator(stypy.reporting.localization.Localization(__file__, 1621, 20), '*', complex_400695, randn_call_result_400701)
    
    # Applying the binary operator '+' (line 1621)
    result_add_400703 = python_operator(stypy.reporting.localization.Localization(__file__, 1621, 16), '+', v_400694, result_mul_400702)
    
    # Assigning a type to the variable 'v' (line 1621)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1621, 12), 'v', result_add_400703)
    # SSA join for if statement (line 1620)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to range(...): (line 1623)
    # Processing the call arguments (line 1623)
    # Getting the type of 'm' (line 1623)
    m_400705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1623, 23), 'm', False)
    # Getting the type of 'i' (line 1623)
    i_400706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1623, 25), 'i', False)
    # Applying the binary operator '+' (line 1623)
    result_add_400707 = python_operator(stypy.reporting.localization.Localization(__file__, 1623, 23), '+', m_400705, i_400706)
    
    # Processing the call keyword arguments (line 1623)
    kwargs_400708 = {}
    # Getting the type of 'range' (line 1623)
    range_400704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1623, 17), 'range', False)
    # Calling range(args, kwargs) (line 1623)
    range_call_result_400709 = invoke(stypy.reporting.localization.Localization(__file__, 1623, 17), range_400704, *[result_add_400707], **kwargs_400708)
    
    # Testing the type of a for loop iterable (line 1623)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1623, 8), range_call_result_400709)
    # Getting the type of the for loop variable (line 1623)
    for_loop_var_400710 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1623, 8), range_call_result_400709)
    # Assigning a type to the variable 'j' (line 1623)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1623, 8), 'j', for_loop_var_400710)
    # SSA begins for a for statement (line 1623)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Subscript to a Name (line 1624):
    
    # Assigning a Subscript to a Name (line 1624):
    
    # Obtaining the type of the subscript
    slice_400711 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1624, 16), None, None, None)
    # Getting the type of 'j' (line 1624)
    j_400712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1624, 21), 'j')
    # Getting the type of 'y' (line 1624)
    y_400713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1624, 16), 'y')
    # Obtaining the member '__getitem__' of a type (line 1624)
    getitem___400714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1624, 16), y_400713, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1624)
    subscript_call_result_400715 = invoke(stypy.reporting.localization.Localization(__file__, 1624, 16), getitem___400714, (slice_400711, j_400712))
    
    # Assigning a type to the variable 'u' (line 1624)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1624, 12), 'u', subscript_call_result_400715)
    
    # Getting the type of 'v' (line 1625)
    v_400716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 12), 'v')
    
    # Call to dot(...): (line 1625)
    # Processing the call arguments (line 1625)
    # Getting the type of 'v' (line 1625)
    v_400719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 25), 'v', False)
    
    # Call to conj(...): (line 1625)
    # Processing the call keyword arguments (line 1625)
    kwargs_400722 = {}
    # Getting the type of 'u' (line 1625)
    u_400720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 28), 'u', False)
    # Obtaining the member 'conj' of a type (line 1625)
    conj_400721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1625, 28), u_400720, 'conj')
    # Calling conj(args, kwargs) (line 1625)
    conj_call_result_400723 = invoke(stypy.reporting.localization.Localization(__file__, 1625, 28), conj_400721, *[], **kwargs_400722)
    
    # Processing the call keyword arguments (line 1625)
    kwargs_400724 = {}
    # Getting the type of 'np' (line 1625)
    np_400717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 18), 'np', False)
    # Obtaining the member 'dot' of a type (line 1625)
    dot_400718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1625, 18), np_400717, 'dot')
    # Calling dot(args, kwargs) (line 1625)
    dot_call_result_400725 = invoke(stypy.reporting.localization.Localization(__file__, 1625, 18), dot_400718, *[v_400719, conj_call_result_400723], **kwargs_400724)
    
    
    # Call to dot(...): (line 1625)
    # Processing the call arguments (line 1625)
    # Getting the type of 'u' (line 1625)
    u_400728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 47), 'u', False)
    
    # Call to conj(...): (line 1625)
    # Processing the call keyword arguments (line 1625)
    kwargs_400731 = {}
    # Getting the type of 'u' (line 1625)
    u_400729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 50), 'u', False)
    # Obtaining the member 'conj' of a type (line 1625)
    conj_400730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1625, 50), u_400729, 'conj')
    # Calling conj(args, kwargs) (line 1625)
    conj_call_result_400732 = invoke(stypy.reporting.localization.Localization(__file__, 1625, 50), conj_400730, *[], **kwargs_400731)
    
    # Processing the call keyword arguments (line 1625)
    kwargs_400733 = {}
    # Getting the type of 'np' (line 1625)
    np_400726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 40), 'np', False)
    # Obtaining the member 'dot' of a type (line 1625)
    dot_400727 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1625, 40), np_400726, 'dot')
    # Calling dot(args, kwargs) (line 1625)
    dot_call_result_400734 = invoke(stypy.reporting.localization.Localization(__file__, 1625, 40), dot_400727, *[u_400728, conj_call_result_400732], **kwargs_400733)
    
    # Applying the binary operator 'div' (line 1625)
    result_div_400735 = python_operator(stypy.reporting.localization.Localization(__file__, 1625, 18), 'div', dot_call_result_400725, dot_call_result_400734)
    
    # Getting the type of 'u' (line 1625)
    u_400736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1625, 63), 'u')
    # Applying the binary operator '*' (line 1625)
    result_mul_400737 = python_operator(stypy.reporting.localization.Localization(__file__, 1625, 17), '*', result_div_400735, u_400736)
    
    # Applying the binary operator '-=' (line 1625)
    result_isub_400738 = python_operator(stypy.reporting.localization.Localization(__file__, 1625, 12), '-=', v_400716, result_mul_400737)
    # Assigning a type to the variable 'v' (line 1625)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1625, 12), 'v', result_isub_400738)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'v' (line 1627)
    v_400739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 8), 'v')
    
    # Call to sqrt(...): (line 1627)
    # Processing the call arguments (line 1627)
    
    # Call to dot(...): (line 1627)
    # Processing the call arguments (line 1627)
    # Getting the type of 'v' (line 1627)
    v_400744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 28), 'v', False)
    
    # Call to conj(...): (line 1627)
    # Processing the call keyword arguments (line 1627)
    kwargs_400747 = {}
    # Getting the type of 'v' (line 1627)
    v_400745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 31), 'v', False)
    # Obtaining the member 'conj' of a type (line 1627)
    conj_400746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1627, 31), v_400745, 'conj')
    # Calling conj(args, kwargs) (line 1627)
    conj_call_result_400748 = invoke(stypy.reporting.localization.Localization(__file__, 1627, 31), conj_400746, *[], **kwargs_400747)
    
    # Processing the call keyword arguments (line 1627)
    kwargs_400749 = {}
    # Getting the type of 'np' (line 1627)
    np_400742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 21), 'np', False)
    # Obtaining the member 'dot' of a type (line 1627)
    dot_400743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1627, 21), np_400742, 'dot')
    # Calling dot(args, kwargs) (line 1627)
    dot_call_result_400750 = invoke(stypy.reporting.localization.Localization(__file__, 1627, 21), dot_400743, *[v_400744, conj_call_result_400748], **kwargs_400749)
    
    # Processing the call keyword arguments (line 1627)
    kwargs_400751 = {}
    # Getting the type of 'np' (line 1627)
    np_400740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1627, 13), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 1627)
    sqrt_400741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1627, 13), np_400740, 'sqrt')
    # Calling sqrt(args, kwargs) (line 1627)
    sqrt_call_result_400752 = invoke(stypy.reporting.localization.Localization(__file__, 1627, 13), sqrt_400741, *[dot_call_result_400750], **kwargs_400751)
    
    # Applying the binary operator 'div=' (line 1627)
    result_div_400753 = python_operator(stypy.reporting.localization.Localization(__file__, 1627, 8), 'div=', v_400739, sqrt_call_result_400752)
    # Assigning a type to the variable 'v' (line 1627)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1627, 8), 'v', result_div_400753)
    
    
    # Assigning a Name to a Subscript (line 1629):
    
    # Assigning a Name to a Subscript (line 1629):
    # Getting the type of 'v' (line 1629)
    v_400754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1629, 20), 'v')
    # Getting the type of 'y' (line 1629)
    y_400755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1629, 8), 'y')
    slice_400756 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1629, 8), None, None, None)
    # Getting the type of 'm' (line 1629)
    m_400757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1629, 13), 'm')
    # Getting the type of 'i' (line 1629)
    i_400758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1629, 15), 'i')
    # Applying the binary operator '+' (line 1629)
    result_add_400759 = python_operator(stypy.reporting.localization.Localization(__file__, 1629, 13), '+', m_400757, i_400758)
    
    # Storing an element on a container (line 1629)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1629, 8), y_400755, ((slice_400756, result_add_400759), v_400754))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'y' (line 1631)
    y_400760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1631, 11), 'y')
    # Assigning a type to the variable 'stypy_return_type' (line 1631)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1631, 4), 'stypy_return_type', y_400760)
    
    # ################# End of '_augmented_orthonormal_cols(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_augmented_orthonormal_cols' in the type store
    # Getting the type of 'stypy_return_type' (line 1610)
    stypy_return_type_400761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_400761)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_augmented_orthonormal_cols'
    return stypy_return_type_400761

# Assigning a type to the variable '_augmented_orthonormal_cols' (line 1610)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1610, 0), '_augmented_orthonormal_cols', _augmented_orthonormal_cols)

@norecursion
def _augmented_orthonormal_rows(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_augmented_orthonormal_rows'
    module_type_store = module_type_store.open_function_context('_augmented_orthonormal_rows', 1634, 0, False)
    
    # Passed parameters checking function
    _augmented_orthonormal_rows.stypy_localization = localization
    _augmented_orthonormal_rows.stypy_type_of_self = None
    _augmented_orthonormal_rows.stypy_type_store = module_type_store
    _augmented_orthonormal_rows.stypy_function_name = '_augmented_orthonormal_rows'
    _augmented_orthonormal_rows.stypy_param_names_list = ['x', 'k']
    _augmented_orthonormal_rows.stypy_varargs_param_name = None
    _augmented_orthonormal_rows.stypy_kwargs_param_name = None
    _augmented_orthonormal_rows.stypy_call_defaults = defaults
    _augmented_orthonormal_rows.stypy_call_varargs = varargs
    _augmented_orthonormal_rows.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_augmented_orthonormal_rows', ['x', 'k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_augmented_orthonormal_rows', localization, ['x', 'k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_augmented_orthonormal_rows(...)' code ##################

    
    # Call to _augmented_orthonormal_cols(...): (line 1635)
    # Processing the call arguments (line 1635)
    # Getting the type of 'x' (line 1635)
    x_400763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 39), 'x', False)
    # Obtaining the member 'T' of a type (line 1635)
    T_400764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1635, 39), x_400763, 'T')
    # Getting the type of 'k' (line 1635)
    k_400765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 44), 'k', False)
    # Processing the call keyword arguments (line 1635)
    kwargs_400766 = {}
    # Getting the type of '_augmented_orthonormal_cols' (line 1635)
    _augmented_orthonormal_cols_400762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1635, 11), '_augmented_orthonormal_cols', False)
    # Calling _augmented_orthonormal_cols(args, kwargs) (line 1635)
    _augmented_orthonormal_cols_call_result_400767 = invoke(stypy.reporting.localization.Localization(__file__, 1635, 11), _augmented_orthonormal_cols_400762, *[T_400764, k_400765], **kwargs_400766)
    
    # Obtaining the member 'T' of a type (line 1635)
    T_400768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1635, 11), _augmented_orthonormal_cols_call_result_400767, 'T')
    # Assigning a type to the variable 'stypy_return_type' (line 1635)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1635, 4), 'stypy_return_type', T_400768)
    
    # ################# End of '_augmented_orthonormal_rows(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_augmented_orthonormal_rows' in the type store
    # Getting the type of 'stypy_return_type' (line 1634)
    stypy_return_type_400769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1634, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_400769)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_augmented_orthonormal_rows'
    return stypy_return_type_400769

# Assigning a type to the variable '_augmented_orthonormal_rows' (line 1634)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1634, 0), '_augmented_orthonormal_rows', _augmented_orthonormal_rows)

@norecursion
def _herm(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_herm'
    module_type_store = module_type_store.open_function_context('_herm', 1638, 0, False)
    
    # Passed parameters checking function
    _herm.stypy_localization = localization
    _herm.stypy_type_of_self = None
    _herm.stypy_type_store = module_type_store
    _herm.stypy_function_name = '_herm'
    _herm.stypy_param_names_list = ['x']
    _herm.stypy_varargs_param_name = None
    _herm.stypy_kwargs_param_name = None
    _herm.stypy_call_defaults = defaults
    _herm.stypy_call_varargs = varargs
    _herm.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_herm', ['x'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_herm', localization, ['x'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_herm(...)' code ##################

    
    # Call to conj(...): (line 1639)
    # Processing the call keyword arguments (line 1639)
    kwargs_400773 = {}
    # Getting the type of 'x' (line 1639)
    x_400770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1639, 11), 'x', False)
    # Obtaining the member 'T' of a type (line 1639)
    T_400771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1639, 11), x_400770, 'T')
    # Obtaining the member 'conj' of a type (line 1639)
    conj_400772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1639, 11), T_400771, 'conj')
    # Calling conj(args, kwargs) (line 1639)
    conj_call_result_400774 = invoke(stypy.reporting.localization.Localization(__file__, 1639, 11), conj_400772, *[], **kwargs_400773)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1639)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1639, 4), 'stypy_return_type', conj_call_result_400774)
    
    # ################# End of '_herm(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_herm' in the type store
    # Getting the type of 'stypy_return_type' (line 1638)
    stypy_return_type_400775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1638, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_400775)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_herm'
    return stypy_return_type_400775

# Assigning a type to the variable '_herm' (line 1638)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1638, 0), '_herm', _herm)

@norecursion
def svds(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_400776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1642, 14), 'int')
    # Getting the type of 'None' (line 1642)
    None_400777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 21), 'None')
    int_400778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1642, 31), 'int')
    str_400779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1642, 40), 'str', 'LM')
    # Getting the type of 'None' (line 1642)
    None_400780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 49), 'None')
    # Getting the type of 'None' (line 1643)
    None_400781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1643, 17), 'None')
    # Getting the type of 'True' (line 1643)
    True_400782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1643, 47), 'True')
    defaults = [int_400776, None_400777, int_400778, str_400779, None_400780, None_400781, True_400782]
    # Create a new context for function 'svds'
    module_type_store = module_type_store.open_function_context('svds', 1642, 0, False)
    
    # Passed parameters checking function
    svds.stypy_localization = localization
    svds.stypy_type_of_self = None
    svds.stypy_type_store = module_type_store
    svds.stypy_function_name = 'svds'
    svds.stypy_param_names_list = ['A', 'k', 'ncv', 'tol', 'which', 'v0', 'maxiter', 'return_singular_vectors']
    svds.stypy_varargs_param_name = None
    svds.stypy_kwargs_param_name = None
    svds.stypy_call_defaults = defaults
    svds.stypy_call_varargs = varargs
    svds.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'svds', ['A', 'k', 'ncv', 'tol', 'which', 'v0', 'maxiter', 'return_singular_vectors'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'svds', localization, ['A', 'k', 'ncv', 'tol', 'which', 'v0', 'maxiter', 'return_singular_vectors'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'svds(...)' code ##################

    str_400783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1717, (-1)), 'str', 'Compute the largest k singular values/vectors for a sparse matrix.\n\n    Parameters\n    ----------\n    A : {sparse matrix, LinearOperator}\n        Array to compute the SVD on, of shape (M, N)\n    k : int, optional\n        Number of singular values and vectors to compute.\n        Must be 1 <= k < min(A.shape).\n    ncv : int, optional\n        The number of Lanczos vectors generated\n        ncv must be greater than k+1 and smaller than n;\n        it is recommended that ncv > 2*k\n        Default: ``min(n, max(2*k + 1, 20))``\n    tol : float, optional\n        Tolerance for singular values. Zero (default) means machine precision.\n    which : str, [\'LM\' | \'SM\'], optional\n        Which `k` singular values to find:\n\n            - \'LM\' : largest singular values\n            - \'SM\' : smallest singular values\n\n        .. versionadded:: 0.12.0\n    v0 : ndarray, optional\n        Starting vector for iteration, of length min(A.shape). Should be an\n        (approximate) left singular vector if N > M and a right singular\n        vector otherwise.\n        Default: random\n\n        .. versionadded:: 0.12.0\n    maxiter : int, optional\n        Maximum number of iterations.\n\n        .. versionadded:: 0.12.0\n    return_singular_vectors : bool or str, optional\n        - True: return singular vectors (True) in addition to singular values.\n\n        .. versionadded:: 0.12.0\n\n        - "u": only return the u matrix, without computing vh (if N > M).\n        - "vh": only return the vh matrix, without computing u (if N <= M).\n\n        .. versionadded:: 0.16.0\n\n    Returns\n    -------\n    u : ndarray, shape=(M, k)\n        Unitary matrix having left singular vectors as columns.\n        If `return_singular_vectors` is "vh", this variable is not computed,\n        and None is returned instead.\n    s : ndarray, shape=(k,)\n        The singular values.\n    vt : ndarray, shape=(k, N)\n        Unitary matrix having right singular vectors as rows.\n        If `return_singular_vectors` is "u", this variable is not computed,\n        and None is returned instead.\n\n\n    Notes\n    -----\n    This is a naive implementation using ARPACK as an eigensolver\n    on A.H * A or A * A.H, depending on which one is more efficient.\n\n    Examples\n    --------\n    >>> from scipy.sparse import csc_matrix\n    >>> from scipy.sparse.linalg import svds, eigs\n    >>> A = csc_matrix([[1, 0, 0], [5, 0, 2], [0, -1, 0], [0, 0, 3]], dtype=float)\n    >>> u, s, vt = svds(A, k=2)\n    >>> s\n    array([ 2.75193379,  5.6059665 ])\n    >>> np.sqrt(eigs(A.dot(A.T), k=2)[0]).real\n    array([ 5.6059665 ,  2.75193379])\n    ')
    
    
    
    # Evaluating a boolean operation
    
    # Call to isinstance(...): (line 1718)
    # Processing the call arguments (line 1718)
    # Getting the type of 'A' (line 1718)
    A_400785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 23), 'A', False)
    # Getting the type of 'LinearOperator' (line 1718)
    LinearOperator_400786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 26), 'LinearOperator', False)
    # Processing the call keyword arguments (line 1718)
    kwargs_400787 = {}
    # Getting the type of 'isinstance' (line 1718)
    isinstance_400784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 12), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 1718)
    isinstance_call_result_400788 = invoke(stypy.reporting.localization.Localization(__file__, 1718, 12), isinstance_400784, *[A_400785, LinearOperator_400786], **kwargs_400787)
    
    
    # Call to isspmatrix(...): (line 1718)
    # Processing the call arguments (line 1718)
    # Getting the type of 'A' (line 1718)
    A_400790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 56), 'A', False)
    # Processing the call keyword arguments (line 1718)
    kwargs_400791 = {}
    # Getting the type of 'isspmatrix' (line 1718)
    isspmatrix_400789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1718, 45), 'isspmatrix', False)
    # Calling isspmatrix(args, kwargs) (line 1718)
    isspmatrix_call_result_400792 = invoke(stypy.reporting.localization.Localization(__file__, 1718, 45), isspmatrix_400789, *[A_400790], **kwargs_400791)
    
    # Applying the binary operator 'or' (line 1718)
    result_or_keyword_400793 = python_operator(stypy.reporting.localization.Localization(__file__, 1718, 12), 'or', isinstance_call_result_400788, isspmatrix_call_result_400792)
    
    # Applying the 'not' unary operator (line 1718)
    result_not__400794 = python_operator(stypy.reporting.localization.Localization(__file__, 1718, 7), 'not', result_or_keyword_400793)
    
    # Testing the type of an if condition (line 1718)
    if_condition_400795 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1718, 4), result_not__400794)
    # Assigning a type to the variable 'if_condition_400795' (line 1718)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1718, 4), 'if_condition_400795', if_condition_400795)
    # SSA begins for if statement (line 1718)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1719):
    
    # Assigning a Call to a Name (line 1719):
    
    # Call to asarray(...): (line 1719)
    # Processing the call arguments (line 1719)
    # Getting the type of 'A' (line 1719)
    A_400798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1719, 23), 'A', False)
    # Processing the call keyword arguments (line 1719)
    kwargs_400799 = {}
    # Getting the type of 'np' (line 1719)
    np_400796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1719, 12), 'np', False)
    # Obtaining the member 'asarray' of a type (line 1719)
    asarray_400797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1719, 12), np_400796, 'asarray')
    # Calling asarray(args, kwargs) (line 1719)
    asarray_call_result_400800 = invoke(stypy.reporting.localization.Localization(__file__, 1719, 12), asarray_400797, *[A_400798], **kwargs_400799)
    
    # Assigning a type to the variable 'A' (line 1719)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1719, 8), 'A', asarray_call_result_400800)
    # SSA join for if statement (line 1718)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Attribute to a Tuple (line 1721):
    
    # Assigning a Subscript to a Name (line 1721):
    
    # Obtaining the type of the subscript
    int_400801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1721, 4), 'int')
    # Getting the type of 'A' (line 1721)
    A_400802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 11), 'A')
    # Obtaining the member 'shape' of a type (line 1721)
    shape_400803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1721, 11), A_400802, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1721)
    getitem___400804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1721, 4), shape_400803, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1721)
    subscript_call_result_400805 = invoke(stypy.reporting.localization.Localization(__file__, 1721, 4), getitem___400804, int_400801)
    
    # Assigning a type to the variable 'tuple_var_assignment_396035' (line 1721)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1721, 4), 'tuple_var_assignment_396035', subscript_call_result_400805)
    
    # Assigning a Subscript to a Name (line 1721):
    
    # Obtaining the type of the subscript
    int_400806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1721, 4), 'int')
    # Getting the type of 'A' (line 1721)
    A_400807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 11), 'A')
    # Obtaining the member 'shape' of a type (line 1721)
    shape_400808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1721, 11), A_400807, 'shape')
    # Obtaining the member '__getitem__' of a type (line 1721)
    getitem___400809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1721, 4), shape_400808, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1721)
    subscript_call_result_400810 = invoke(stypy.reporting.localization.Localization(__file__, 1721, 4), getitem___400809, int_400806)
    
    # Assigning a type to the variable 'tuple_var_assignment_396036' (line 1721)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1721, 4), 'tuple_var_assignment_396036', subscript_call_result_400810)
    
    # Assigning a Name to a Name (line 1721):
    # Getting the type of 'tuple_var_assignment_396035' (line 1721)
    tuple_var_assignment_396035_400811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 4), 'tuple_var_assignment_396035')
    # Assigning a type to the variable 'n' (line 1721)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1721, 4), 'n', tuple_var_assignment_396035_400811)
    
    # Assigning a Name to a Name (line 1721):
    # Getting the type of 'tuple_var_assignment_396036' (line 1721)
    tuple_var_assignment_396036_400812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1721, 4), 'tuple_var_assignment_396036')
    # Assigning a type to the variable 'm' (line 1721)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1721, 7), 'm', tuple_var_assignment_396036_400812)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'k' (line 1723)
    k_400813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 7), 'k')
    int_400814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1723, 12), 'int')
    # Applying the binary operator '<=' (line 1723)
    result_le_400815 = python_operator(stypy.reporting.localization.Localization(__file__, 1723, 7), '<=', k_400813, int_400814)
    
    
    # Getting the type of 'k' (line 1723)
    k_400816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 17), 'k')
    
    # Call to min(...): (line 1723)
    # Processing the call arguments (line 1723)
    # Getting the type of 'n' (line 1723)
    n_400818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 26), 'n', False)
    # Getting the type of 'm' (line 1723)
    m_400819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 29), 'm', False)
    # Processing the call keyword arguments (line 1723)
    kwargs_400820 = {}
    # Getting the type of 'min' (line 1723)
    min_400817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1723, 22), 'min', False)
    # Calling min(args, kwargs) (line 1723)
    min_call_result_400821 = invoke(stypy.reporting.localization.Localization(__file__, 1723, 22), min_400817, *[n_400818, m_400819], **kwargs_400820)
    
    # Applying the binary operator '>=' (line 1723)
    result_ge_400822 = python_operator(stypy.reporting.localization.Localization(__file__, 1723, 17), '>=', k_400816, min_call_result_400821)
    
    # Applying the binary operator 'or' (line 1723)
    result_or_keyword_400823 = python_operator(stypy.reporting.localization.Localization(__file__, 1723, 7), 'or', result_le_400815, result_ge_400822)
    
    # Testing the type of an if condition (line 1723)
    if_condition_400824 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1723, 4), result_or_keyword_400823)
    # Assigning a type to the variable 'if_condition_400824' (line 1723)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1723, 4), 'if_condition_400824', if_condition_400824)
    # SSA begins for if statement (line 1723)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 1724)
    # Processing the call arguments (line 1724)
    str_400826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1724, 25), 'str', 'k must be between 1 and min(A.shape), k=%d')
    # Getting the type of 'k' (line 1724)
    k_400827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1724, 72), 'k', False)
    # Applying the binary operator '%' (line 1724)
    result_mod_400828 = python_operator(stypy.reporting.localization.Localization(__file__, 1724, 25), '%', str_400826, k_400827)
    
    # Processing the call keyword arguments (line 1724)
    kwargs_400829 = {}
    # Getting the type of 'ValueError' (line 1724)
    ValueError_400825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1724, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1724)
    ValueError_call_result_400830 = invoke(stypy.reporting.localization.Localization(__file__, 1724, 14), ValueError_400825, *[result_mod_400828], **kwargs_400829)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1724, 8), ValueError_call_result_400830, 'raise parameter', BaseException)
    # SSA join for if statement (line 1723)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isinstance(...): (line 1726)
    # Processing the call arguments (line 1726)
    # Getting the type of 'A' (line 1726)
    A_400832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1726, 18), 'A', False)
    # Getting the type of 'LinearOperator' (line 1726)
    LinearOperator_400833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1726, 21), 'LinearOperator', False)
    # Processing the call keyword arguments (line 1726)
    kwargs_400834 = {}
    # Getting the type of 'isinstance' (line 1726)
    isinstance_400831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1726, 7), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 1726)
    isinstance_call_result_400835 = invoke(stypy.reporting.localization.Localization(__file__, 1726, 7), isinstance_400831, *[A_400832, LinearOperator_400833], **kwargs_400834)
    
    # Testing the type of an if condition (line 1726)
    if_condition_400836 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1726, 4), isinstance_call_result_400835)
    # Assigning a type to the variable 'if_condition_400836' (line 1726)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1726, 4), 'if_condition_400836', if_condition_400836)
    # SSA begins for if statement (line 1726)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'n' (line 1727)
    n_400837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1727, 11), 'n')
    # Getting the type of 'm' (line 1727)
    m_400838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1727, 15), 'm')
    # Applying the binary operator '>' (line 1727)
    result_gt_400839 = python_operator(stypy.reporting.localization.Localization(__file__, 1727, 11), '>', n_400837, m_400838)
    
    # Testing the type of an if condition (line 1727)
    if_condition_400840 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1727, 8), result_gt_400839)
    # Assigning a type to the variable 'if_condition_400840' (line 1727)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1727, 8), 'if_condition_400840', if_condition_400840)
    # SSA begins for if statement (line 1727)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Attribute to a Name (line 1728):
    
    # Assigning a Attribute to a Name (line 1728):
    # Getting the type of 'A' (line 1728)
    A_400841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1728, 20), 'A')
    # Obtaining the member 'matvec' of a type (line 1728)
    matvec_400842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1728, 20), A_400841, 'matvec')
    # Assigning a type to the variable 'X_dot' (line 1728)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1728, 12), 'X_dot', matvec_400842)
    
    # Assigning a Attribute to a Name (line 1729):
    
    # Assigning a Attribute to a Name (line 1729):
    # Getting the type of 'A' (line 1729)
    A_400843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1729, 23), 'A')
    # Obtaining the member 'matmat' of a type (line 1729)
    matmat_400844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1729, 23), A_400843, 'matmat')
    # Assigning a type to the variable 'X_matmat' (line 1729)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1729, 12), 'X_matmat', matmat_400844)
    
    # Assigning a Attribute to a Name (line 1730):
    
    # Assigning a Attribute to a Name (line 1730):
    # Getting the type of 'A' (line 1730)
    A_400845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1730, 21), 'A')
    # Obtaining the member 'rmatvec' of a type (line 1730)
    rmatvec_400846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1730, 21), A_400845, 'rmatvec')
    # Assigning a type to the variable 'XH_dot' (line 1730)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1730, 12), 'XH_dot', rmatvec_400846)
    # SSA branch for the else part of an if statement (line 1727)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Attribute to a Name (line 1732):
    
    # Assigning a Attribute to a Name (line 1732):
    # Getting the type of 'A' (line 1732)
    A_400847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 20), 'A')
    # Obtaining the member 'rmatvec' of a type (line 1732)
    rmatvec_400848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1732, 20), A_400847, 'rmatvec')
    # Assigning a type to the variable 'X_dot' (line 1732)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 12), 'X_dot', rmatvec_400848)
    
    # Assigning a Attribute to a Name (line 1733):
    
    # Assigning a Attribute to a Name (line 1733):
    # Getting the type of 'A' (line 1733)
    A_400849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 21), 'A')
    # Obtaining the member 'matvec' of a type (line 1733)
    matvec_400850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1733, 21), A_400849, 'matvec')
    # Assigning a type to the variable 'XH_dot' (line 1733)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1733, 12), 'XH_dot', matvec_400850)
    
    # Assigning a Call to a Name (line 1735):
    
    # Assigning a Call to a Name (line 1735):
    
    # Call to getattr(...): (line 1735)
    # Processing the call arguments (line 1735)
    # Getting the type of 'A' (line 1735)
    A_400852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 28), 'A', False)
    str_400853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1735, 31), 'str', 'dtype')
    # Getting the type of 'None' (line 1735)
    None_400854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 40), 'None', False)
    # Processing the call keyword arguments (line 1735)
    kwargs_400855 = {}
    # Getting the type of 'getattr' (line 1735)
    getattr_400851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 20), 'getattr', False)
    # Calling getattr(args, kwargs) (line 1735)
    getattr_call_result_400856 = invoke(stypy.reporting.localization.Localization(__file__, 1735, 20), getattr_400851, *[A_400852, str_400853, None_400854], **kwargs_400855)
    
    # Assigning a type to the variable 'dtype' (line 1735)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1735, 12), 'dtype', getattr_call_result_400856)
    
    # Type idiom detected: calculating its left and rigth part (line 1736)
    # Getting the type of 'dtype' (line 1736)
    dtype_400857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 15), 'dtype')
    # Getting the type of 'None' (line 1736)
    None_400858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 24), 'None')
    
    (may_be_400859, more_types_in_union_400860) = may_be_none(dtype_400857, None_400858)

    if may_be_400859:

        if more_types_in_union_400860:
            # Runtime conditional SSA (line 1736)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Attribute to a Name (line 1737):
        
        # Assigning a Attribute to a Name (line 1737):
        
        # Call to dot(...): (line 1737)
        # Processing the call arguments (line 1737)
        
        # Call to zeros(...): (line 1737)
        # Processing the call arguments (line 1737)
        
        # Obtaining an instance of the builtin type 'list' (line 1737)
        list_400865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1737)
        # Adding element type (line 1737)
        # Getting the type of 'm' (line 1737)
        m_400866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 40), 'm', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1737, 39), list_400865, m_400866)
        # Adding element type (line 1737)
        int_400867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1737, 39), list_400865, int_400867)
        
        # Processing the call keyword arguments (line 1737)
        kwargs_400868 = {}
        # Getting the type of 'np' (line 1737)
        np_400863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 30), 'np', False)
        # Obtaining the member 'zeros' of a type (line 1737)
        zeros_400864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1737, 30), np_400863, 'zeros')
        # Calling zeros(args, kwargs) (line 1737)
        zeros_call_result_400869 = invoke(stypy.reporting.localization.Localization(__file__, 1737, 30), zeros_400864, *[list_400865], **kwargs_400868)
        
        # Processing the call keyword arguments (line 1737)
        kwargs_400870 = {}
        # Getting the type of 'A' (line 1737)
        A_400861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 24), 'A', False)
        # Obtaining the member 'dot' of a type (line 1737)
        dot_400862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1737, 24), A_400861, 'dot')
        # Calling dot(args, kwargs) (line 1737)
        dot_call_result_400871 = invoke(stypy.reporting.localization.Localization(__file__, 1737, 24), dot_400862, *[zeros_call_result_400869], **kwargs_400870)
        
        # Obtaining the member 'dtype' of a type (line 1737)
        dtype_400872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1737, 24), dot_call_result_400871, 'dtype')
        # Assigning a type to the variable 'dtype' (line 1737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1737, 16), 'dtype', dtype_400872)

        if more_types_in_union_400860:
            # SSA join for if statement (line 1736)
            module_type_store = module_type_store.join_ssa_context()


    

    @norecursion
    def X_matmat(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'X_matmat'
        module_type_store = module_type_store.open_function_context('X_matmat', 1741, 12, False)
        
        # Passed parameters checking function
        X_matmat.stypy_localization = localization
        X_matmat.stypy_type_of_self = None
        X_matmat.stypy_type_store = module_type_store
        X_matmat.stypy_function_name = 'X_matmat'
        X_matmat.stypy_param_names_list = ['V']
        X_matmat.stypy_varargs_param_name = None
        X_matmat.stypy_kwargs_param_name = None
        X_matmat.stypy_call_defaults = defaults
        X_matmat.stypy_call_varargs = varargs
        X_matmat.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'X_matmat', ['V'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'X_matmat', localization, ['V'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'X_matmat(...)' code ##################

        
        # Assigning a Call to a Name (line 1742):
        
        # Assigning a Call to a Name (line 1742):
        
        # Call to empty(...): (line 1742)
        # Processing the call arguments (line 1742)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1742)
        tuple_400875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1742, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1742)
        # Adding element type (line 1742)
        
        # Obtaining the type of the subscript
        int_400876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1742, 40), 'int')
        # Getting the type of 'V' (line 1742)
        V_400877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 32), 'V', False)
        # Obtaining the member 'shape' of a type (line 1742)
        shape_400878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1742, 32), V_400877, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1742)
        getitem___400879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1742, 32), shape_400878, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1742)
        subscript_call_result_400880 = invoke(stypy.reporting.localization.Localization(__file__, 1742, 32), getitem___400879, int_400876)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1742, 32), tuple_400875, subscript_call_result_400880)
        # Adding element type (line 1742)
        # Getting the type of 'm' (line 1742)
        m_400881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 44), 'm', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1742, 32), tuple_400875, m_400881)
        
        # Processing the call keyword arguments (line 1742)
        # Getting the type of 'dtype' (line 1742)
        dtype_400882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 54), 'dtype', False)
        keyword_400883 = dtype_400882
        kwargs_400884 = {'dtype': keyword_400883}
        # Getting the type of 'np' (line 1742)
        np_400873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 22), 'np', False)
        # Obtaining the member 'empty' of a type (line 1742)
        empty_400874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1742, 22), np_400873, 'empty')
        # Calling empty(args, kwargs) (line 1742)
        empty_call_result_400885 = invoke(stypy.reporting.localization.Localization(__file__, 1742, 22), empty_400874, *[tuple_400875], **kwargs_400884)
        
        # Assigning a type to the variable 'out' (line 1742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1742, 16), 'out', empty_call_result_400885)
        
        
        # Call to enumerate(...): (line 1743)
        # Processing the call arguments (line 1743)
        # Getting the type of 'V' (line 1743)
        V_400887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1743, 40), 'V', False)
        # Obtaining the member 'T' of a type (line 1743)
        T_400888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1743, 40), V_400887, 'T')
        # Processing the call keyword arguments (line 1743)
        kwargs_400889 = {}
        # Getting the type of 'enumerate' (line 1743)
        enumerate_400886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1743, 30), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 1743)
        enumerate_call_result_400890 = invoke(stypy.reporting.localization.Localization(__file__, 1743, 30), enumerate_400886, *[T_400888], **kwargs_400889)
        
        # Testing the type of a for loop iterable (line 1743)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1743, 16), enumerate_call_result_400890)
        # Getting the type of the for loop variable (line 1743)
        for_loop_var_400891 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1743, 16), enumerate_call_result_400890)
        # Assigning a type to the variable 'i' (line 1743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1743, 16), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1743, 16), for_loop_var_400891))
        # Assigning a type to the variable 'col' (line 1743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1743, 16), 'col', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1743, 16), for_loop_var_400891))
        # SSA begins for a for statement (line 1743)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Attribute to a Subscript (line 1744):
        
        # Assigning a Attribute to a Subscript (line 1744):
        
        # Call to rmatvec(...): (line 1744)
        # Processing the call arguments (line 1744)
        
        # Call to reshape(...): (line 1744)
        # Processing the call arguments (line 1744)
        int_400896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1744, 54), 'int')
        int_400897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1744, 58), 'int')
        # Processing the call keyword arguments (line 1744)
        kwargs_400898 = {}
        # Getting the type of 'col' (line 1744)
        col_400894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 42), 'col', False)
        # Obtaining the member 'reshape' of a type (line 1744)
        reshape_400895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1744, 42), col_400894, 'reshape')
        # Calling reshape(args, kwargs) (line 1744)
        reshape_call_result_400899 = invoke(stypy.reporting.localization.Localization(__file__, 1744, 42), reshape_400895, *[int_400896, int_400897], **kwargs_400898)
        
        # Processing the call keyword arguments (line 1744)
        kwargs_400900 = {}
        # Getting the type of 'A' (line 1744)
        A_400892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 32), 'A', False)
        # Obtaining the member 'rmatvec' of a type (line 1744)
        rmatvec_400893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1744, 32), A_400892, 'rmatvec')
        # Calling rmatvec(args, kwargs) (line 1744)
        rmatvec_call_result_400901 = invoke(stypy.reporting.localization.Localization(__file__, 1744, 32), rmatvec_400893, *[reshape_call_result_400899], **kwargs_400900)
        
        # Obtaining the member 'T' of a type (line 1744)
        T_400902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1744, 32), rmatvec_call_result_400901, 'T')
        # Getting the type of 'out' (line 1744)
        out_400903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 20), 'out')
        # Getting the type of 'i' (line 1744)
        i_400904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 24), 'i')
        slice_400905 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1744, 20), None, None, None)
        # Storing an element on a container (line 1744)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1744, 20), out_400903, ((i_400904, slice_400905), T_400902))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'out' (line 1745)
        out_400906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 23), 'out')
        # Obtaining the member 'T' of a type (line 1745)
        T_400907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1745, 23), out_400906, 'T')
        # Assigning a type to the variable 'stypy_return_type' (line 1745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1745, 16), 'stypy_return_type', T_400907)
        
        # ################# End of 'X_matmat(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'X_matmat' in the type store
        # Getting the type of 'stypy_return_type' (line 1741)
        stypy_return_type_400908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 12), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_400908)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'X_matmat'
        return stypy_return_type_400908

    # Assigning a type to the variable 'X_matmat' (line 1741)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1741, 12), 'X_matmat', X_matmat)
    # SSA join for if statement (line 1727)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1726)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'n' (line 1748)
    n_400909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1748, 11), 'n')
    # Getting the type of 'm' (line 1748)
    m_400910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1748, 15), 'm')
    # Applying the binary operator '>' (line 1748)
    result_gt_400911 = python_operator(stypy.reporting.localization.Localization(__file__, 1748, 11), '>', n_400909, m_400910)
    
    # Testing the type of an if condition (line 1748)
    if_condition_400912 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1748, 8), result_gt_400911)
    # Assigning a type to the variable 'if_condition_400912' (line 1748)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1748, 8), 'if_condition_400912', if_condition_400912)
    # SSA begins for if statement (line 1748)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Multiple assignment of 2 elements.
    
    # Assigning a Attribute to a Name (line 1749):
    # Getting the type of 'A' (line 1749)
    A_400913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1749, 31), 'A')
    # Obtaining the member 'dot' of a type (line 1749)
    dot_400914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1749, 31), A_400913, 'dot')
    # Assigning a type to the variable 'X_matmat' (line 1749)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1749, 20), 'X_matmat', dot_400914)
    
    # Assigning a Name to a Name (line 1749):
    # Getting the type of 'X_matmat' (line 1749)
    X_matmat_400915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1749, 20), 'X_matmat')
    # Assigning a type to the variable 'X_dot' (line 1749)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1749, 12), 'X_dot', X_matmat_400915)
    
    # Assigning a Attribute to a Name (line 1750):
    
    # Assigning a Attribute to a Name (line 1750):
    
    # Call to _herm(...): (line 1750)
    # Processing the call arguments (line 1750)
    # Getting the type of 'A' (line 1750)
    A_400917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1750, 27), 'A', False)
    # Processing the call keyword arguments (line 1750)
    kwargs_400918 = {}
    # Getting the type of '_herm' (line 1750)
    _herm_400916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1750, 21), '_herm', False)
    # Calling _herm(args, kwargs) (line 1750)
    _herm_call_result_400919 = invoke(stypy.reporting.localization.Localization(__file__, 1750, 21), _herm_400916, *[A_400917], **kwargs_400918)
    
    # Obtaining the member 'dot' of a type (line 1750)
    dot_400920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1750, 21), _herm_call_result_400919, 'dot')
    # Assigning a type to the variable 'XH_dot' (line 1750)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1750, 12), 'XH_dot', dot_400920)
    # SSA branch for the else part of an if statement (line 1748)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Attribute to a Name (line 1752):
    
    # Assigning a Attribute to a Name (line 1752):
    # Getting the type of 'A' (line 1752)
    A_400921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1752, 21), 'A')
    # Obtaining the member 'dot' of a type (line 1752)
    dot_400922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1752, 21), A_400921, 'dot')
    # Assigning a type to the variable 'XH_dot' (line 1752)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1752, 12), 'XH_dot', dot_400922)
    
    # Multiple assignment of 2 elements.
    
    # Assigning a Attribute to a Name (line 1753):
    
    # Call to _herm(...): (line 1753)
    # Processing the call arguments (line 1753)
    # Getting the type of 'A' (line 1753)
    A_400924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1753, 37), 'A', False)
    # Processing the call keyword arguments (line 1753)
    kwargs_400925 = {}
    # Getting the type of '_herm' (line 1753)
    _herm_400923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1753, 31), '_herm', False)
    # Calling _herm(args, kwargs) (line 1753)
    _herm_call_result_400926 = invoke(stypy.reporting.localization.Localization(__file__, 1753, 31), _herm_400923, *[A_400924], **kwargs_400925)
    
    # Obtaining the member 'dot' of a type (line 1753)
    dot_400927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1753, 31), _herm_call_result_400926, 'dot')
    # Assigning a type to the variable 'X_matmat' (line 1753)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1753, 20), 'X_matmat', dot_400927)
    
    # Assigning a Name to a Name (line 1753):
    # Getting the type of 'X_matmat' (line 1753)
    X_matmat_400928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1753, 20), 'X_matmat')
    # Assigning a type to the variable 'X_dot' (line 1753)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1753, 12), 'X_dot', X_matmat_400928)
    # SSA join for if statement (line 1748)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1726)
    module_type_store = module_type_store.join_ssa_context()
    

    @norecursion
    def matvec_XH_X(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'matvec_XH_X'
        module_type_store = module_type_store.open_function_context('matvec_XH_X', 1755, 4, False)
        
        # Passed parameters checking function
        matvec_XH_X.stypy_localization = localization
        matvec_XH_X.stypy_type_of_self = None
        matvec_XH_X.stypy_type_store = module_type_store
        matvec_XH_X.stypy_function_name = 'matvec_XH_X'
        matvec_XH_X.stypy_param_names_list = ['x']
        matvec_XH_X.stypy_varargs_param_name = None
        matvec_XH_X.stypy_kwargs_param_name = None
        matvec_XH_X.stypy_call_defaults = defaults
        matvec_XH_X.stypy_call_varargs = varargs
        matvec_XH_X.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'matvec_XH_X', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'matvec_XH_X', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'matvec_XH_X(...)' code ##################

        
        # Call to XH_dot(...): (line 1756)
        # Processing the call arguments (line 1756)
        
        # Call to X_dot(...): (line 1756)
        # Processing the call arguments (line 1756)
        # Getting the type of 'x' (line 1756)
        x_400931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 28), 'x', False)
        # Processing the call keyword arguments (line 1756)
        kwargs_400932 = {}
        # Getting the type of 'X_dot' (line 1756)
        X_dot_400930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 22), 'X_dot', False)
        # Calling X_dot(args, kwargs) (line 1756)
        X_dot_call_result_400933 = invoke(stypy.reporting.localization.Localization(__file__, 1756, 22), X_dot_400930, *[x_400931], **kwargs_400932)
        
        # Processing the call keyword arguments (line 1756)
        kwargs_400934 = {}
        # Getting the type of 'XH_dot' (line 1756)
        XH_dot_400929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1756, 15), 'XH_dot', False)
        # Calling XH_dot(args, kwargs) (line 1756)
        XH_dot_call_result_400935 = invoke(stypy.reporting.localization.Localization(__file__, 1756, 15), XH_dot_400929, *[X_dot_call_result_400933], **kwargs_400934)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1756)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1756, 8), 'stypy_return_type', XH_dot_call_result_400935)
        
        # ################# End of 'matvec_XH_X(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'matvec_XH_X' in the type store
        # Getting the type of 'stypy_return_type' (line 1755)
        stypy_return_type_400936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1755, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_400936)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'matvec_XH_X'
        return stypy_return_type_400936

    # Assigning a type to the variable 'matvec_XH_X' (line 1755)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1755, 4), 'matvec_XH_X', matvec_XH_X)
    
    # Assigning a Call to a Name (line 1758):
    
    # Assigning a Call to a Name (line 1758):
    
    # Call to LinearOperator(...): (line 1758)
    # Processing the call keyword arguments (line 1758)
    # Getting the type of 'matvec_XH_X' (line 1758)
    matvec_XH_X_400938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 33), 'matvec_XH_X', False)
    keyword_400939 = matvec_XH_X_400938
    # Getting the type of 'A' (line 1758)
    A_400940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 52), 'A', False)
    # Obtaining the member 'dtype' of a type (line 1758)
    dtype_400941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1758, 52), A_400940, 'dtype')
    keyword_400942 = dtype_400941
    
    # Obtaining an instance of the builtin type 'tuple' (line 1759)
    tuple_400943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1759, 33), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1759)
    # Adding element type (line 1759)
    
    # Call to min(...): (line 1759)
    # Processing the call arguments (line 1759)
    # Getting the type of 'A' (line 1759)
    A_400945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 37), 'A', False)
    # Obtaining the member 'shape' of a type (line 1759)
    shape_400946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1759, 37), A_400945, 'shape')
    # Processing the call keyword arguments (line 1759)
    kwargs_400947 = {}
    # Getting the type of 'min' (line 1759)
    min_400944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 33), 'min', False)
    # Calling min(args, kwargs) (line 1759)
    min_call_result_400948 = invoke(stypy.reporting.localization.Localization(__file__, 1759, 33), min_400944, *[shape_400946], **kwargs_400947)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1759, 33), tuple_400943, min_call_result_400948)
    # Adding element type (line 1759)
    
    # Call to min(...): (line 1759)
    # Processing the call arguments (line 1759)
    # Getting the type of 'A' (line 1759)
    A_400950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 51), 'A', False)
    # Obtaining the member 'shape' of a type (line 1759)
    shape_400951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1759, 51), A_400950, 'shape')
    # Processing the call keyword arguments (line 1759)
    kwargs_400952 = {}
    # Getting the type of 'min' (line 1759)
    min_400949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1759, 47), 'min', False)
    # Calling min(args, kwargs) (line 1759)
    min_call_result_400953 = invoke(stypy.reporting.localization.Localization(__file__, 1759, 47), min_400949, *[shape_400951], **kwargs_400952)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1759, 33), tuple_400943, min_call_result_400953)
    
    keyword_400954 = tuple_400943
    kwargs_400955 = {'dtype': keyword_400942, 'shape': keyword_400954, 'matvec': keyword_400939}
    # Getting the type of 'LinearOperator' (line 1758)
    LinearOperator_400937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1758, 11), 'LinearOperator', False)
    # Calling LinearOperator(args, kwargs) (line 1758)
    LinearOperator_call_result_400956 = invoke(stypy.reporting.localization.Localization(__file__, 1758, 11), LinearOperator_400937, *[], **kwargs_400955)
    
    # Assigning a type to the variable 'XH_X' (line 1758)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1758, 4), 'XH_X', LinearOperator_call_result_400956)
    
    # Assigning a Call to a Tuple (line 1763):
    
    # Assigning a Subscript to a Name (line 1763):
    
    # Obtaining the type of the subscript
    int_400957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1763, 4), 'int')
    
    # Call to eigsh(...): (line 1763)
    # Processing the call arguments (line 1763)
    # Getting the type of 'XH_X' (line 1763)
    XH_X_400959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 28), 'XH_X', False)
    # Processing the call keyword arguments (line 1763)
    # Getting the type of 'k' (line 1763)
    k_400960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 36), 'k', False)
    keyword_400961 = k_400960
    # Getting the type of 'tol' (line 1763)
    tol_400962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 43), 'tol', False)
    int_400963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1763, 50), 'int')
    # Applying the binary operator '**' (line 1763)
    result_pow_400964 = python_operator(stypy.reporting.localization.Localization(__file__, 1763, 43), '**', tol_400962, int_400963)
    
    keyword_400965 = result_pow_400964
    # Getting the type of 'maxiter' (line 1763)
    maxiter_400966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 61), 'maxiter', False)
    keyword_400967 = maxiter_400966
    # Getting the type of 'ncv' (line 1764)
    ncv_400968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 38), 'ncv', False)
    keyword_400969 = ncv_400968
    # Getting the type of 'which' (line 1764)
    which_400970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 49), 'which', False)
    keyword_400971 = which_400970
    # Getting the type of 'v0' (line 1764)
    v0_400972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 59), 'v0', False)
    keyword_400973 = v0_400972
    kwargs_400974 = {'tol': keyword_400965, 'k': keyword_400961, 'ncv': keyword_400969, 'v0': keyword_400973, 'which': keyword_400971, 'maxiter': keyword_400967}
    # Getting the type of 'eigsh' (line 1763)
    eigsh_400958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 22), 'eigsh', False)
    # Calling eigsh(args, kwargs) (line 1763)
    eigsh_call_result_400975 = invoke(stypy.reporting.localization.Localization(__file__, 1763, 22), eigsh_400958, *[XH_X_400959], **kwargs_400974)
    
    # Obtaining the member '__getitem__' of a type (line 1763)
    getitem___400976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1763, 4), eigsh_call_result_400975, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1763)
    subscript_call_result_400977 = invoke(stypy.reporting.localization.Localization(__file__, 1763, 4), getitem___400976, int_400957)
    
    # Assigning a type to the variable 'tuple_var_assignment_396037' (line 1763)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1763, 4), 'tuple_var_assignment_396037', subscript_call_result_400977)
    
    # Assigning a Subscript to a Name (line 1763):
    
    # Obtaining the type of the subscript
    int_400978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1763, 4), 'int')
    
    # Call to eigsh(...): (line 1763)
    # Processing the call arguments (line 1763)
    # Getting the type of 'XH_X' (line 1763)
    XH_X_400980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 28), 'XH_X', False)
    # Processing the call keyword arguments (line 1763)
    # Getting the type of 'k' (line 1763)
    k_400981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 36), 'k', False)
    keyword_400982 = k_400981
    # Getting the type of 'tol' (line 1763)
    tol_400983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 43), 'tol', False)
    int_400984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1763, 50), 'int')
    # Applying the binary operator '**' (line 1763)
    result_pow_400985 = python_operator(stypy.reporting.localization.Localization(__file__, 1763, 43), '**', tol_400983, int_400984)
    
    keyword_400986 = result_pow_400985
    # Getting the type of 'maxiter' (line 1763)
    maxiter_400987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 61), 'maxiter', False)
    keyword_400988 = maxiter_400987
    # Getting the type of 'ncv' (line 1764)
    ncv_400989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 38), 'ncv', False)
    keyword_400990 = ncv_400989
    # Getting the type of 'which' (line 1764)
    which_400991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 49), 'which', False)
    keyword_400992 = which_400991
    # Getting the type of 'v0' (line 1764)
    v0_400993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1764, 59), 'v0', False)
    keyword_400994 = v0_400993
    kwargs_400995 = {'tol': keyword_400986, 'k': keyword_400982, 'ncv': keyword_400990, 'v0': keyword_400994, 'which': keyword_400992, 'maxiter': keyword_400988}
    # Getting the type of 'eigsh' (line 1763)
    eigsh_400979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 22), 'eigsh', False)
    # Calling eigsh(args, kwargs) (line 1763)
    eigsh_call_result_400996 = invoke(stypy.reporting.localization.Localization(__file__, 1763, 22), eigsh_400979, *[XH_X_400980], **kwargs_400995)
    
    # Obtaining the member '__getitem__' of a type (line 1763)
    getitem___400997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1763, 4), eigsh_call_result_400996, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1763)
    subscript_call_result_400998 = invoke(stypy.reporting.localization.Localization(__file__, 1763, 4), getitem___400997, int_400978)
    
    # Assigning a type to the variable 'tuple_var_assignment_396038' (line 1763)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1763, 4), 'tuple_var_assignment_396038', subscript_call_result_400998)
    
    # Assigning a Name to a Name (line 1763):
    # Getting the type of 'tuple_var_assignment_396037' (line 1763)
    tuple_var_assignment_396037_400999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 4), 'tuple_var_assignment_396037')
    # Assigning a type to the variable 'eigvals' (line 1763)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1763, 4), 'eigvals', tuple_var_assignment_396037_400999)
    
    # Assigning a Name to a Name (line 1763):
    # Getting the type of 'tuple_var_assignment_396038' (line 1763)
    tuple_var_assignment_396038_401000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1763, 4), 'tuple_var_assignment_396038')
    # Assigning a type to the variable 'eigvec' (line 1763)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1763, 13), 'eigvec', tuple_var_assignment_396038_401000)
    
    
    # Getting the type of 'which' (line 1768)
    which_401001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1768, 7), 'which')
    str_401002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1768, 16), 'str', 'LM')
    # Applying the binary operator '==' (line 1768)
    result_eq_401003 = python_operator(stypy.reporting.localization.Localization(__file__, 1768, 7), '==', which_401001, str_401002)
    
    # Testing the type of an if condition (line 1768)
    if_condition_401004 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1768, 4), result_eq_401003)
    # Assigning a type to the variable 'if_condition_401004' (line 1768)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1768, 4), 'if_condition_401004', if_condition_401004)
    # SSA begins for if statement (line 1768)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1771):
    
    # Assigning a Call to a Name (line 1771):
    
    # Call to maximum(...): (line 1771)
    # Processing the call arguments (line 1771)
    # Getting the type of 'eigvals' (line 1771)
    eigvals_401007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1771, 29), 'eigvals', False)
    # Obtaining the member 'real' of a type (line 1771)
    real_401008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1771, 29), eigvals_401007, 'real')
    int_401009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1771, 43), 'int')
    # Processing the call keyword arguments (line 1771)
    kwargs_401010 = {}
    # Getting the type of 'np' (line 1771)
    np_401005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1771, 18), 'np', False)
    # Obtaining the member 'maximum' of a type (line 1771)
    maximum_401006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1771, 18), np_401005, 'maximum')
    # Calling maximum(args, kwargs) (line 1771)
    maximum_call_result_401011 = invoke(stypy.reporting.localization.Localization(__file__, 1771, 18), maximum_401006, *[real_401008, int_401009], **kwargs_401010)
    
    # Assigning a type to the variable 'eigvals' (line 1771)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1771, 8), 'eigvals', maximum_call_result_401011)
    
    # Assigning a Call to a Name (line 1774):
    
    # Assigning a Call to a Name (line 1774):
    
    # Call to lower(...): (line 1774)
    # Processing the call keyword arguments (line 1774)
    kwargs_401016 = {}
    # Getting the type of 'eigvec' (line 1774)
    eigvec_401012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 12), 'eigvec', False)
    # Obtaining the member 'dtype' of a type (line 1774)
    dtype_401013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1774, 12), eigvec_401012, 'dtype')
    # Obtaining the member 'char' of a type (line 1774)
    char_401014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1774, 12), dtype_401013, 'char')
    # Obtaining the member 'lower' of a type (line 1774)
    lower_401015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1774, 12), char_401014, 'lower')
    # Calling lower(args, kwargs) (line 1774)
    lower_call_result_401017 = invoke(stypy.reporting.localization.Localization(__file__, 1774, 12), lower_401015, *[], **kwargs_401016)
    
    # Assigning a type to the variable 't' (line 1774)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1774, 8), 't', lower_call_result_401017)
    
    # Assigning a Dict to a Name (line 1775):
    
    # Assigning a Dict to a Name (line 1775):
    
    # Obtaining an instance of the builtin type 'dict' (line 1775)
    dict_401018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1775, 17), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 1775)
    # Adding element type (key, value) (line 1775)
    str_401019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1775, 18), 'str', 'f')
    float_401020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1775, 23), 'float')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1775, 17), dict_401018, (str_401019, float_401020))
    # Adding element type (key, value) (line 1775)
    str_401021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1775, 28), 'str', 'd')
    float_401022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1775, 33), 'float')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1775, 17), dict_401018, (str_401021, float_401022))
    
    # Assigning a type to the variable 'factor' (line 1775)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1775, 8), 'factor', dict_401018)
    
    # Assigning a BinOp to a Name (line 1776):
    
    # Assigning a BinOp to a Name (line 1776):
    
    # Obtaining the type of the subscript
    # Getting the type of 't' (line 1776)
    t_401023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 22), 't')
    # Getting the type of 'factor' (line 1776)
    factor_401024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 15), 'factor')
    # Obtaining the member '__getitem__' of a type (line 1776)
    getitem___401025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1776, 15), factor_401024, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1776)
    subscript_call_result_401026 = invoke(stypy.reporting.localization.Localization(__file__, 1776, 15), getitem___401025, t_401023)
    
    
    # Call to finfo(...): (line 1776)
    # Processing the call arguments (line 1776)
    # Getting the type of 't' (line 1776)
    t_401029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 36), 't', False)
    # Processing the call keyword arguments (line 1776)
    kwargs_401030 = {}
    # Getting the type of 'np' (line 1776)
    np_401027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 27), 'np', False)
    # Obtaining the member 'finfo' of a type (line 1776)
    finfo_401028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1776, 27), np_401027, 'finfo')
    # Calling finfo(args, kwargs) (line 1776)
    finfo_call_result_401031 = invoke(stypy.reporting.localization.Localization(__file__, 1776, 27), finfo_401028, *[t_401029], **kwargs_401030)
    
    # Obtaining the member 'eps' of a type (line 1776)
    eps_401032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1776, 27), finfo_call_result_401031, 'eps')
    # Applying the binary operator '*' (line 1776)
    result_mul_401033 = python_operator(stypy.reporting.localization.Localization(__file__, 1776, 15), '*', subscript_call_result_401026, eps_401032)
    
    # Assigning a type to the variable 'cond' (line 1776)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1776, 8), 'cond', result_mul_401033)
    
    # Assigning a BinOp to a Name (line 1777):
    
    # Assigning a BinOp to a Name (line 1777):
    # Getting the type of 'cond' (line 1777)
    cond_401034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 17), 'cond')
    
    # Call to max(...): (line 1777)
    # Processing the call arguments (line 1777)
    # Getting the type of 'eigvals' (line 1777)
    eigvals_401037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 31), 'eigvals', False)
    # Processing the call keyword arguments (line 1777)
    kwargs_401038 = {}
    # Getting the type of 'np' (line 1777)
    np_401035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 24), 'np', False)
    # Obtaining the member 'max' of a type (line 1777)
    max_401036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1777, 24), np_401035, 'max')
    # Calling max(args, kwargs) (line 1777)
    max_call_result_401039 = invoke(stypy.reporting.localization.Localization(__file__, 1777, 24), max_401036, *[eigvals_401037], **kwargs_401038)
    
    # Applying the binary operator '*' (line 1777)
    result_mul_401040 = python_operator(stypy.reporting.localization.Localization(__file__, 1777, 17), '*', cond_401034, max_call_result_401039)
    
    # Assigning a type to the variable 'cutoff' (line 1777)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1777, 8), 'cutoff', result_mul_401040)
    
    # Assigning a Compare to a Name (line 1781):
    
    # Assigning a Compare to a Name (line 1781):
    
    # Getting the type of 'eigvals' (line 1781)
    eigvals_401041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 24), 'eigvals')
    # Getting the type of 'cutoff' (line 1781)
    cutoff_401042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 34), 'cutoff')
    # Applying the binary operator '>' (line 1781)
    result_gt_401043 = python_operator(stypy.reporting.localization.Localization(__file__, 1781, 24), '>', eigvals_401041, cutoff_401042)
    
    # Assigning a type to the variable 'above_cutoff' (line 1781)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1781, 8), 'above_cutoff', result_gt_401043)
    
    # Assigning a Call to a Name (line 1782):
    
    # Assigning a Call to a Name (line 1782):
    
    # Call to sum(...): (line 1782)
    # Processing the call keyword arguments (line 1782)
    kwargs_401046 = {}
    # Getting the type of 'above_cutoff' (line 1782)
    above_cutoff_401044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1782, 17), 'above_cutoff', False)
    # Obtaining the member 'sum' of a type (line 1782)
    sum_401045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1782, 17), above_cutoff_401044, 'sum')
    # Calling sum(args, kwargs) (line 1782)
    sum_call_result_401047 = invoke(stypy.reporting.localization.Localization(__file__, 1782, 17), sum_401045, *[], **kwargs_401046)
    
    # Assigning a type to the variable 'nlarge' (line 1782)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1782, 8), 'nlarge', sum_call_result_401047)
    
    # Assigning a BinOp to a Name (line 1783):
    
    # Assigning a BinOp to a Name (line 1783):
    # Getting the type of 'k' (line 1783)
    k_401048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 17), 'k')
    # Getting the type of 'nlarge' (line 1783)
    nlarge_401049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 21), 'nlarge')
    # Applying the binary operator '-' (line 1783)
    result_sub_401050 = python_operator(stypy.reporting.localization.Localization(__file__, 1783, 17), '-', k_401048, nlarge_401049)
    
    # Assigning a type to the variable 'nsmall' (line 1783)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1783, 8), 'nsmall', result_sub_401050)
    
    # Assigning a Call to a Name (line 1784):
    
    # Assigning a Call to a Name (line 1784):
    
    # Call to sqrt(...): (line 1784)
    # Processing the call arguments (line 1784)
    
    # Obtaining the type of the subscript
    # Getting the type of 'above_cutoff' (line 1784)
    above_cutoff_401053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1784, 33), 'above_cutoff', False)
    # Getting the type of 'eigvals' (line 1784)
    eigvals_401054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1784, 25), 'eigvals', False)
    # Obtaining the member '__getitem__' of a type (line 1784)
    getitem___401055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1784, 25), eigvals_401054, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1784)
    subscript_call_result_401056 = invoke(stypy.reporting.localization.Localization(__file__, 1784, 25), getitem___401055, above_cutoff_401053)
    
    # Processing the call keyword arguments (line 1784)
    kwargs_401057 = {}
    # Getting the type of 'np' (line 1784)
    np_401051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1784, 17), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 1784)
    sqrt_401052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1784, 17), np_401051, 'sqrt')
    # Calling sqrt(args, kwargs) (line 1784)
    sqrt_call_result_401058 = invoke(stypy.reporting.localization.Localization(__file__, 1784, 17), sqrt_401052, *[subscript_call_result_401056], **kwargs_401057)
    
    # Assigning a type to the variable 'slarge' (line 1784)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1784, 8), 'slarge', sqrt_call_result_401058)
    
    # Assigning a Call to a Name (line 1785):
    
    # Assigning a Call to a Name (line 1785):
    
    # Call to zeros_like(...): (line 1785)
    # Processing the call arguments (line 1785)
    # Getting the type of 'eigvals' (line 1785)
    eigvals_401061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 26), 'eigvals', False)
    # Processing the call keyword arguments (line 1785)
    kwargs_401062 = {}
    # Getting the type of 'np' (line 1785)
    np_401059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 12), 'np', False)
    # Obtaining the member 'zeros_like' of a type (line 1785)
    zeros_like_401060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1785, 12), np_401059, 'zeros_like')
    # Calling zeros_like(args, kwargs) (line 1785)
    zeros_like_call_result_401063 = invoke(stypy.reporting.localization.Localization(__file__, 1785, 12), zeros_like_401060, *[eigvals_401061], **kwargs_401062)
    
    # Assigning a type to the variable 's' (line 1785)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1785, 8), 's', zeros_like_call_result_401063)
    
    # Assigning a Name to a Subscript (line 1786):
    
    # Assigning a Name to a Subscript (line 1786):
    # Getting the type of 'slarge' (line 1786)
    slarge_401064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 21), 'slarge')
    # Getting the type of 's' (line 1786)
    s_401065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 8), 's')
    # Getting the type of 'nlarge' (line 1786)
    nlarge_401066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 11), 'nlarge')
    slice_401067 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1786, 8), None, nlarge_401066, None)
    # Storing an element on a container (line 1786)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1786, 8), s_401065, (slice_401067, slarge_401064))
    
    
    # Getting the type of 'return_singular_vectors' (line 1787)
    return_singular_vectors_401068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 15), 'return_singular_vectors')
    # Applying the 'not' unary operator (line 1787)
    result_not__401069 = python_operator(stypy.reporting.localization.Localization(__file__, 1787, 11), 'not', return_singular_vectors_401068)
    
    # Testing the type of an if condition (line 1787)
    if_condition_401070 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1787, 8), result_not__401069)
    # Assigning a type to the variable 'if_condition_401070' (line 1787)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1787, 8), 'if_condition_401070', if_condition_401070)
    # SSA begins for if statement (line 1787)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 1788)
    s_401071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1788, 19), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 1788)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1788, 12), 'stypy_return_type', s_401071)
    # SSA join for if statement (line 1787)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'n' (line 1790)
    n_401072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1790, 11), 'n')
    # Getting the type of 'm' (line 1790)
    m_401073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1790, 15), 'm')
    # Applying the binary operator '>' (line 1790)
    result_gt_401074 = python_operator(stypy.reporting.localization.Localization(__file__, 1790, 11), '>', n_401072, m_401073)
    
    # Testing the type of an if condition (line 1790)
    if_condition_401075 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1790, 8), result_gt_401074)
    # Assigning a type to the variable 'if_condition_401075' (line 1790)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1790, 8), 'if_condition_401075', if_condition_401075)
    # SSA begins for if statement (line 1790)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Name (line 1791):
    
    # Assigning a Subscript to a Name (line 1791):
    
    # Obtaining the type of the subscript
    slice_401076 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1791, 21), None, None, None)
    # Getting the type of 'above_cutoff' (line 1791)
    above_cutoff_401077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1791, 31), 'above_cutoff')
    # Getting the type of 'eigvec' (line 1791)
    eigvec_401078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1791, 21), 'eigvec')
    # Obtaining the member '__getitem__' of a type (line 1791)
    getitem___401079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1791, 21), eigvec_401078, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1791)
    subscript_call_result_401080 = invoke(stypy.reporting.localization.Localization(__file__, 1791, 21), getitem___401079, (slice_401076, above_cutoff_401077))
    
    # Assigning a type to the variable 'vlarge' (line 1791)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1791, 12), 'vlarge', subscript_call_result_401080)
    
    # Assigning a IfExp to a Name (line 1792):
    
    # Assigning a IfExp to a Name (line 1792):
    
    
    # Getting the type of 'return_singular_vectors' (line 1792)
    return_singular_vectors_401081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 50), 'return_singular_vectors')
    str_401082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1792, 77), 'str', 'vh')
    # Applying the binary operator '!=' (line 1792)
    result_ne_401083 = python_operator(stypy.reporting.localization.Localization(__file__, 1792, 50), '!=', return_singular_vectors_401081, str_401082)
    
    # Testing the type of an if expression (line 1792)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1792, 21), result_ne_401083)
    # SSA begins for if expression (line 1792)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
    
    # Call to X_matmat(...): (line 1792)
    # Processing the call arguments (line 1792)
    # Getting the type of 'vlarge' (line 1792)
    vlarge_401085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 30), 'vlarge', False)
    # Processing the call keyword arguments (line 1792)
    kwargs_401086 = {}
    # Getting the type of 'X_matmat' (line 1792)
    X_matmat_401084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 21), 'X_matmat', False)
    # Calling X_matmat(args, kwargs) (line 1792)
    X_matmat_call_result_401087 = invoke(stypy.reporting.localization.Localization(__file__, 1792, 21), X_matmat_401084, *[vlarge_401085], **kwargs_401086)
    
    # Getting the type of 'slarge' (line 1792)
    slarge_401088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 40), 'slarge')
    # Applying the binary operator 'div' (line 1792)
    result_div_401089 = python_operator(stypy.reporting.localization.Localization(__file__, 1792, 21), 'div', X_matmat_call_result_401087, slarge_401088)
    
    # SSA branch for the else part of an if expression (line 1792)
    module_type_store.open_ssa_branch('if expression else')
    # Getting the type of 'None' (line 1792)
    None_401090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 87), 'None')
    # SSA join for if expression (line 1792)
    module_type_store = module_type_store.join_ssa_context()
    if_exp_401091 = union_type.UnionType.add(result_div_401089, None_401090)
    
    # Assigning a type to the variable 'ularge' (line 1792)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1792, 12), 'ularge', if_exp_401091)
    
    # Assigning a Call to a Name (line 1793):
    
    # Assigning a Call to a Name (line 1793):
    
    # Call to _herm(...): (line 1793)
    # Processing the call arguments (line 1793)
    # Getting the type of 'vlarge' (line 1793)
    vlarge_401093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1793, 28), 'vlarge', False)
    # Processing the call keyword arguments (line 1793)
    kwargs_401094 = {}
    # Getting the type of '_herm' (line 1793)
    _herm_401092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1793, 22), '_herm', False)
    # Calling _herm(args, kwargs) (line 1793)
    _herm_call_result_401095 = invoke(stypy.reporting.localization.Localization(__file__, 1793, 22), _herm_401092, *[vlarge_401093], **kwargs_401094)
    
    # Assigning a type to the variable 'vhlarge' (line 1793)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1793, 12), 'vhlarge', _herm_call_result_401095)
    # SSA branch for the else part of an if statement (line 1790)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Subscript to a Name (line 1795):
    
    # Assigning a Subscript to a Name (line 1795):
    
    # Obtaining the type of the subscript
    slice_401096 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1795, 21), None, None, None)
    # Getting the type of 'above_cutoff' (line 1795)
    above_cutoff_401097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1795, 31), 'above_cutoff')
    # Getting the type of 'eigvec' (line 1795)
    eigvec_401098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1795, 21), 'eigvec')
    # Obtaining the member '__getitem__' of a type (line 1795)
    getitem___401099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1795, 21), eigvec_401098, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1795)
    subscript_call_result_401100 = invoke(stypy.reporting.localization.Localization(__file__, 1795, 21), getitem___401099, (slice_401096, above_cutoff_401097))
    
    # Assigning a type to the variable 'ularge' (line 1795)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1795, 12), 'ularge', subscript_call_result_401100)
    
    # Assigning a IfExp to a Name (line 1796):
    
    # Assigning a IfExp to a Name (line 1796):
    
    
    # Getting the type of 'return_singular_vectors' (line 1796)
    return_singular_vectors_401101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 58), 'return_singular_vectors')
    str_401102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1796, 85), 'str', 'u')
    # Applying the binary operator '!=' (line 1796)
    result_ne_401103 = python_operator(stypy.reporting.localization.Localization(__file__, 1796, 58), '!=', return_singular_vectors_401101, str_401102)
    
    # Testing the type of an if expression (line 1796)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1796, 22), result_ne_401103)
    # SSA begins for if expression (line 1796)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
    
    # Call to _herm(...): (line 1796)
    # Processing the call arguments (line 1796)
    
    # Call to X_matmat(...): (line 1796)
    # Processing the call arguments (line 1796)
    # Getting the type of 'ularge' (line 1796)
    ularge_401106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 37), 'ularge', False)
    # Processing the call keyword arguments (line 1796)
    kwargs_401107 = {}
    # Getting the type of 'X_matmat' (line 1796)
    X_matmat_401105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 28), 'X_matmat', False)
    # Calling X_matmat(args, kwargs) (line 1796)
    X_matmat_call_result_401108 = invoke(stypy.reporting.localization.Localization(__file__, 1796, 28), X_matmat_401105, *[ularge_401106], **kwargs_401107)
    
    # Getting the type of 'slarge' (line 1796)
    slarge_401109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 47), 'slarge', False)
    # Applying the binary operator 'div' (line 1796)
    result_div_401110 = python_operator(stypy.reporting.localization.Localization(__file__, 1796, 28), 'div', X_matmat_call_result_401108, slarge_401109)
    
    # Processing the call keyword arguments (line 1796)
    kwargs_401111 = {}
    # Getting the type of '_herm' (line 1796)
    _herm_401104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 22), '_herm', False)
    # Calling _herm(args, kwargs) (line 1796)
    _herm_call_result_401112 = invoke(stypy.reporting.localization.Localization(__file__, 1796, 22), _herm_401104, *[result_div_401110], **kwargs_401111)
    
    # SSA branch for the else part of an if expression (line 1796)
    module_type_store.open_ssa_branch('if expression else')
    # Getting the type of 'None' (line 1796)
    None_401113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1796, 94), 'None')
    # SSA join for if expression (line 1796)
    module_type_store = module_type_store.join_ssa_context()
    if_exp_401114 = union_type.UnionType.add(_herm_call_result_401112, None_401113)
    
    # Assigning a type to the variable 'vhlarge' (line 1796)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1796, 12), 'vhlarge', if_exp_401114)
    # SSA join for if statement (line 1790)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a IfExp to a Name (line 1798):
    
    # Assigning a IfExp to a Name (line 1798):
    
    
    # Getting the type of 'ularge' (line 1798)
    ularge_401115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 59), 'ularge')
    # Getting the type of 'None' (line 1798)
    None_401116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 73), 'None')
    # Applying the binary operator 'isnot' (line 1798)
    result_is_not_401117 = python_operator(stypy.reporting.localization.Localization(__file__, 1798, 59), 'isnot', ularge_401115, None_401116)
    
    # Testing the type of an if expression (line 1798)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1798, 12), result_is_not_401117)
    # SSA begins for if expression (line 1798)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
    
    # Call to _augmented_orthonormal_cols(...): (line 1798)
    # Processing the call arguments (line 1798)
    # Getting the type of 'ularge' (line 1798)
    ularge_401119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 40), 'ularge', False)
    # Getting the type of 'nsmall' (line 1798)
    nsmall_401120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 48), 'nsmall', False)
    # Processing the call keyword arguments (line 1798)
    kwargs_401121 = {}
    # Getting the type of '_augmented_orthonormal_cols' (line 1798)
    _augmented_orthonormal_cols_401118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 12), '_augmented_orthonormal_cols', False)
    # Calling _augmented_orthonormal_cols(args, kwargs) (line 1798)
    _augmented_orthonormal_cols_call_result_401122 = invoke(stypy.reporting.localization.Localization(__file__, 1798, 12), _augmented_orthonormal_cols_401118, *[ularge_401119, nsmall_401120], **kwargs_401121)
    
    # SSA branch for the else part of an if expression (line 1798)
    module_type_store.open_ssa_branch('if expression else')
    # Getting the type of 'None' (line 1798)
    None_401123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1798, 83), 'None')
    # SSA join for if expression (line 1798)
    module_type_store = module_type_store.join_ssa_context()
    if_exp_401124 = union_type.UnionType.add(_augmented_orthonormal_cols_call_result_401122, None_401123)
    
    # Assigning a type to the variable 'u' (line 1798)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1798, 8), 'u', if_exp_401124)
    
    # Assigning a IfExp to a Name (line 1799):
    
    # Assigning a IfExp to a Name (line 1799):
    
    
    # Getting the type of 'vhlarge' (line 1799)
    vhlarge_401125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 61), 'vhlarge')
    # Getting the type of 'None' (line 1799)
    None_401126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 76), 'None')
    # Applying the binary operator 'isnot' (line 1799)
    result_is_not_401127 = python_operator(stypy.reporting.localization.Localization(__file__, 1799, 61), 'isnot', vhlarge_401125, None_401126)
    
    # Testing the type of an if expression (line 1799)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1799, 13), result_is_not_401127)
    # SSA begins for if expression (line 1799)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
    
    # Call to _augmented_orthonormal_rows(...): (line 1799)
    # Processing the call arguments (line 1799)
    # Getting the type of 'vhlarge' (line 1799)
    vhlarge_401129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 41), 'vhlarge', False)
    # Getting the type of 'nsmall' (line 1799)
    nsmall_401130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 50), 'nsmall', False)
    # Processing the call keyword arguments (line 1799)
    kwargs_401131 = {}
    # Getting the type of '_augmented_orthonormal_rows' (line 1799)
    _augmented_orthonormal_rows_401128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 13), '_augmented_orthonormal_rows', False)
    # Calling _augmented_orthonormal_rows(args, kwargs) (line 1799)
    _augmented_orthonormal_rows_call_result_401132 = invoke(stypy.reporting.localization.Localization(__file__, 1799, 13), _augmented_orthonormal_rows_401128, *[vhlarge_401129, nsmall_401130], **kwargs_401131)
    
    # SSA branch for the else part of an if expression (line 1799)
    module_type_store.open_ssa_branch('if expression else')
    # Getting the type of 'None' (line 1799)
    None_401133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1799, 86), 'None')
    # SSA join for if expression (line 1799)
    module_type_store = module_type_store.join_ssa_context()
    if_exp_401134 = union_type.UnionType.add(_augmented_orthonormal_rows_call_result_401132, None_401133)
    
    # Assigning a type to the variable 'vh' (line 1799)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1799, 8), 'vh', if_exp_401134)
    # SSA branch for the else part of an if statement (line 1768)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'which' (line 1801)
    which_401135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1801, 9), 'which')
    str_401136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1801, 18), 'str', 'SM')
    # Applying the binary operator '==' (line 1801)
    result_eq_401137 = python_operator(stypy.reporting.localization.Localization(__file__, 1801, 9), '==', which_401135, str_401136)
    
    # Testing the type of an if condition (line 1801)
    if_condition_401138 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1801, 9), result_eq_401137)
    # Assigning a type to the variable 'if_condition_401138' (line 1801)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1801, 9), 'if_condition_401138', if_condition_401138)
    # SSA begins for if statement (line 1801)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 1803):
    
    # Assigning a Call to a Name (line 1803):
    
    # Call to sqrt(...): (line 1803)
    # Processing the call arguments (line 1803)
    # Getting the type of 'eigvals' (line 1803)
    eigvals_401141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1803, 20), 'eigvals', False)
    # Processing the call keyword arguments (line 1803)
    kwargs_401142 = {}
    # Getting the type of 'np' (line 1803)
    np_401139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1803, 12), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 1803)
    sqrt_401140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1803, 12), np_401139, 'sqrt')
    # Calling sqrt(args, kwargs) (line 1803)
    sqrt_call_result_401143 = invoke(stypy.reporting.localization.Localization(__file__, 1803, 12), sqrt_401140, *[eigvals_401141], **kwargs_401142)
    
    # Assigning a type to the variable 's' (line 1803)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1803, 8), 's', sqrt_call_result_401143)
    
    
    # Getting the type of 'return_singular_vectors' (line 1804)
    return_singular_vectors_401144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1804, 15), 'return_singular_vectors')
    # Applying the 'not' unary operator (line 1804)
    result_not__401145 = python_operator(stypy.reporting.localization.Localization(__file__, 1804, 11), 'not', return_singular_vectors_401144)
    
    # Testing the type of an if condition (line 1804)
    if_condition_401146 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1804, 8), result_not__401145)
    # Assigning a type to the variable 'if_condition_401146' (line 1804)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1804, 8), 'if_condition_401146', if_condition_401146)
    # SSA begins for if statement (line 1804)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 's' (line 1805)
    s_401147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1805, 19), 's')
    # Assigning a type to the variable 'stypy_return_type' (line 1805)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1805, 12), 'stypy_return_type', s_401147)
    # SSA join for if statement (line 1804)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'n' (line 1807)
    n_401148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1807, 11), 'n')
    # Getting the type of 'm' (line 1807)
    m_401149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1807, 15), 'm')
    # Applying the binary operator '>' (line 1807)
    result_gt_401150 = python_operator(stypy.reporting.localization.Localization(__file__, 1807, 11), '>', n_401148, m_401149)
    
    # Testing the type of an if condition (line 1807)
    if_condition_401151 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1807, 8), result_gt_401150)
    # Assigning a type to the variable 'if_condition_401151' (line 1807)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1807, 8), 'if_condition_401151', if_condition_401151)
    # SSA begins for if statement (line 1807)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 1808):
    
    # Assigning a Name to a Name (line 1808):
    # Getting the type of 'eigvec' (line 1808)
    eigvec_401152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1808, 16), 'eigvec')
    # Assigning a type to the variable 'v' (line 1808)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1808, 12), 'v', eigvec_401152)
    
    # Assigning a IfExp to a Name (line 1809):
    
    # Assigning a IfExp to a Name (line 1809):
    
    
    # Getting the type of 'return_singular_vectors' (line 1809)
    return_singular_vectors_401153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 35), 'return_singular_vectors')
    str_401154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1809, 62), 'str', 'vh')
    # Applying the binary operator '!=' (line 1809)
    result_ne_401155 = python_operator(stypy.reporting.localization.Localization(__file__, 1809, 35), '!=', return_singular_vectors_401153, str_401154)
    
    # Testing the type of an if expression (line 1809)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1809, 16), result_ne_401155)
    # SSA begins for if expression (line 1809)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
    
    # Call to X_matmat(...): (line 1809)
    # Processing the call arguments (line 1809)
    # Getting the type of 'v' (line 1809)
    v_401157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 25), 'v', False)
    # Processing the call keyword arguments (line 1809)
    kwargs_401158 = {}
    # Getting the type of 'X_matmat' (line 1809)
    X_matmat_401156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 16), 'X_matmat', False)
    # Calling X_matmat(args, kwargs) (line 1809)
    X_matmat_call_result_401159 = invoke(stypy.reporting.localization.Localization(__file__, 1809, 16), X_matmat_401156, *[v_401157], **kwargs_401158)
    
    # Getting the type of 's' (line 1809)
    s_401160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 30), 's')
    # Applying the binary operator 'div' (line 1809)
    result_div_401161 = python_operator(stypy.reporting.localization.Localization(__file__, 1809, 16), 'div', X_matmat_call_result_401159, s_401160)
    
    # SSA branch for the else part of an if expression (line 1809)
    module_type_store.open_ssa_branch('if expression else')
    # Getting the type of 'None' (line 1809)
    None_401162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1809, 72), 'None')
    # SSA join for if expression (line 1809)
    module_type_store = module_type_store.join_ssa_context()
    if_exp_401163 = union_type.UnionType.add(result_div_401161, None_401162)
    
    # Assigning a type to the variable 'u' (line 1809)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1809, 12), 'u', if_exp_401163)
    
    # Assigning a Call to a Name (line 1810):
    
    # Assigning a Call to a Name (line 1810):
    
    # Call to _herm(...): (line 1810)
    # Processing the call arguments (line 1810)
    # Getting the type of 'v' (line 1810)
    v_401165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1810, 23), 'v', False)
    # Processing the call keyword arguments (line 1810)
    kwargs_401166 = {}
    # Getting the type of '_herm' (line 1810)
    _herm_401164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1810, 17), '_herm', False)
    # Calling _herm(args, kwargs) (line 1810)
    _herm_call_result_401167 = invoke(stypy.reporting.localization.Localization(__file__, 1810, 17), _herm_401164, *[v_401165], **kwargs_401166)
    
    # Assigning a type to the variable 'vh' (line 1810)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1810, 12), 'vh', _herm_call_result_401167)
    # SSA branch for the else part of an if statement (line 1807)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Name to a Name (line 1812):
    
    # Assigning a Name to a Name (line 1812):
    # Getting the type of 'eigvec' (line 1812)
    eigvec_401168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1812, 16), 'eigvec')
    # Assigning a type to the variable 'u' (line 1812)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1812, 12), 'u', eigvec_401168)
    
    # Assigning a IfExp to a Name (line 1813):
    
    # Assigning a IfExp to a Name (line 1813):
    
    
    # Getting the type of 'return_singular_vectors' (line 1813)
    return_singular_vectors_401169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 43), 'return_singular_vectors')
    str_401170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1813, 70), 'str', 'u')
    # Applying the binary operator '!=' (line 1813)
    result_ne_401171 = python_operator(stypy.reporting.localization.Localization(__file__, 1813, 43), '!=', return_singular_vectors_401169, str_401170)
    
    # Testing the type of an if expression (line 1813)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1813, 17), result_ne_401171)
    # SSA begins for if expression (line 1813)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
    
    # Call to _herm(...): (line 1813)
    # Processing the call arguments (line 1813)
    
    # Call to X_matmat(...): (line 1813)
    # Processing the call arguments (line 1813)
    # Getting the type of 'u' (line 1813)
    u_401174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 32), 'u', False)
    # Processing the call keyword arguments (line 1813)
    kwargs_401175 = {}
    # Getting the type of 'X_matmat' (line 1813)
    X_matmat_401173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 23), 'X_matmat', False)
    # Calling X_matmat(args, kwargs) (line 1813)
    X_matmat_call_result_401176 = invoke(stypy.reporting.localization.Localization(__file__, 1813, 23), X_matmat_401173, *[u_401174], **kwargs_401175)
    
    # Getting the type of 's' (line 1813)
    s_401177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 37), 's', False)
    # Applying the binary operator 'div' (line 1813)
    result_div_401178 = python_operator(stypy.reporting.localization.Localization(__file__, 1813, 23), 'div', X_matmat_call_result_401176, s_401177)
    
    # Processing the call keyword arguments (line 1813)
    kwargs_401179 = {}
    # Getting the type of '_herm' (line 1813)
    _herm_401172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 17), '_herm', False)
    # Calling _herm(args, kwargs) (line 1813)
    _herm_call_result_401180 = invoke(stypy.reporting.localization.Localization(__file__, 1813, 17), _herm_401172, *[result_div_401178], **kwargs_401179)
    
    # SSA branch for the else part of an if expression (line 1813)
    module_type_store.open_ssa_branch('if expression else')
    # Getting the type of 'None' (line 1813)
    None_401181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1813, 79), 'None')
    # SSA join for if expression (line 1813)
    module_type_store = module_type_store.join_ssa_context()
    if_exp_401182 = union_type.UnionType.add(_herm_call_result_401180, None_401181)
    
    # Assigning a type to the variable 'vh' (line 1813)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1813, 12), 'vh', if_exp_401182)
    # SSA join for if statement (line 1807)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 1801)
    module_type_store.open_ssa_branch('else')
    
    # Call to ValueError(...): (line 1817)
    # Processing the call arguments (line 1817)
    str_401184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1817, 25), 'str', "which must be either 'LM' or 'SM'.")
    # Processing the call keyword arguments (line 1817)
    kwargs_401185 = {}
    # Getting the type of 'ValueError' (line 1817)
    ValueError_401183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1817, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 1817)
    ValueError_call_result_401186 = invoke(stypy.reporting.localization.Localization(__file__, 1817, 14), ValueError_401183, *[str_401184], **kwargs_401185)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1817, 8), ValueError_call_result_401186, 'raise parameter', BaseException)
    # SSA join for if statement (line 1801)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 1768)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 1819)
    tuple_401187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1819, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1819)
    # Adding element type (line 1819)
    # Getting the type of 'u' (line 1819)
    u_401188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 11), 'u')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1819, 11), tuple_401187, u_401188)
    # Adding element type (line 1819)
    # Getting the type of 's' (line 1819)
    s_401189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 14), 's')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1819, 11), tuple_401187, s_401189)
    # Adding element type (line 1819)
    # Getting the type of 'vh' (line 1819)
    vh_401190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 17), 'vh')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1819, 11), tuple_401187, vh_401190)
    
    # Assigning a type to the variable 'stypy_return_type' (line 1819)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1819, 4), 'stypy_return_type', tuple_401187)
    
    # ################# End of 'svds(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'svds' in the type store
    # Getting the type of 'stypy_return_type' (line 1642)
    stypy_return_type_401191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1642, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_401191)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'svds'
    return stypy_return_type_401191

# Assigning a type to the variable 'svds' (line 1642)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1642, 0), 'svds', svds)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
