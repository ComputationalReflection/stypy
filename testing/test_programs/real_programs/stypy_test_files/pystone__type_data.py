import types

from stypy.types import union_type
from stypy.types.undefined_type import UndefinedType

test_types = {
    '__init__': {
        'StringComp': str,
        'self': types.InstanceType,
        'Discr': int,
        'PtrComp': types.InstanceType,
        'IntComp': int,
        'EnumComp': int,
    },
    'Proc5': {
    },
    'Proc4': {
        'BoolLoc': int  # bool,
    },
    'Func1': {
        'CharLoc2': str,
        'CharLoc1': str,
        'CharPar2': str,
        'CharPar1': str,
    },
    'Func2': {
        'StrParI1': str,
        'CharLoc': union_type.UnionType.create_from_type_list([str, UndefinedType]),
        'StrParI2': str,
        'IntLoc': int,
    },
    'Proc7': {
        'IntParOut': int,
        'IntLoc': int,
        'IntParI1': int,
        'IntParI2': int,
    },
    'Proc8': {
        'Array1Par': list,
        'IntParI2': union_type.UnionType.create_from_type_list([int, UndefinedType]),
        'IntParI1': int,
        'Array2Par': list,
        'IntLoc': int,
        'IntIndex': int,
    },
    'copy': {
        'self': types.InstanceType,
    },
    'Proc3': {
        'PtrParOut': types.InstanceType,
    },
    'Func3': {
        'EnumLoc': int,
        'EnumParIn': int,
    },
    'Proc6': {
        'EnumParIn': int,
        'EnumParOut': int,
    },
    'Proc1': {
        'NextRecord': types.InstanceType,
        'PtrParIn': types.InstanceType,
    },
    'Proc2': {
        'EnumLoc': union_type.UnionType.create_from_type_list([int, UndefinedType]),
        'IntParIO': int,
        'IntLoc': int,
    },
    'Proc0': {
        'EnumLoc': union_type.UnionType.create_from_type_list([int, UndefinedType]),
        'String1Loc': str,
        'IntLoc2': union_type.UnionType.create_from_type_list([int, UndefinedType]),
        'IntLoc3': union_type.UnionType.create_from_type_list([int, UndefinedType]),
        'String2Loc': union_type.UnionType.create_from_type_list([str, UndefinedType]),
        'IntLoc1': union_type.UnionType.create_from_type_list([int, UndefinedType]),
        'i': int,
        'CharIndex': union_type.UnionType.create_from_type_list([str, UndefinedType]),
        'benchtime': float,
        'loopsPerBenchtime': float,
        'loops': int,
        'nulltime': float,
        'starttime': float,
    },
    'pystones': {
        'loops': int,
    },
    'main': {
        'stones': float,
        'loops': int,
        'benchtime': float,
    },
    '__main__': {
        'Array1Glob': list,
        # 'loops': int,
        'TRUE': int,
        'Record': types.ClassType,
        'Func3': types.LambdaType,
        'Func2': types.LambdaType,
        'Func1': types.LambdaType,
        'Array2Glob': list,
        'clock': types.BuiltinFunctionType,
        'BoolGlob': union_type.UnionType.create_from_type_list([int, bool]),
        'LOOPS': int,
        'main': types.LambdaType,
        'Proc8': types.LambdaType,
        'Char2Glob': str,
        'pystones': types.LambdaType,
        'PtrGlbNext': types.InstanceType,
        # 'nargs': int,
        # 'sys': types.ModuleType,
        'TypeDataFileWriter': types.ClassType,
        'IntGlob': int,
        'Ident4': int,
        'Ident5': int,
        'FALSE': int,
        'Ident1': int,
        'Ident2': int,
        'Ident3': int,
        'Char1Glob': str,
        'PtrGlb': types.InstanceType,
        # 'error': types.LambdaType,
        'Proc5': types.LambdaType,
        'Proc4': types.LambdaType,
        'Proc7': types.LambdaType,
        'Proc6': types.LambdaType,
        'Proc1': types.LambdaType,
        'Proc0': types.LambdaType,
        'Proc3': types.LambdaType,
        'Proc2': types.LambdaType,
    },
}
